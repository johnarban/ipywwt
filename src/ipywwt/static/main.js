var Gr = Object.defineProperty;
var Hr = (e, r, n) => r in e ? Gr(e, r, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[r] = n;
var ar = (e, r, n) => (Hr(e, typeof r != "symbol" ? r + "" : r, n), n);
function makeMap(e, r) {
  const n = new Set(e.split(","));
  return r ? (s) => n.has(s.toLowerCase()) : (s) => n.has(s);
}
const EMPTY_OBJ = {}, EMPTY_ARR = [], NOOP = () => {
}, NO = () => !1, isOn = (e) => e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && // uppercase letter
(e.charCodeAt(2) > 122 || e.charCodeAt(2) < 97), isModelListener = (e) => e.startsWith("onUpdate:"), extend$1 = Object.assign, remove = (e, r) => {
  const n = e.indexOf(r);
  n > -1 && e.splice(n, 1);
}, hasOwnProperty$1 = Object.prototype.hasOwnProperty, hasOwn = (e, r) => hasOwnProperty$1.call(e, r), isArray$1 = Array.isArray, isMap = (e) => toTypeString(e) === "[object Map]", isSet = (e) => toTypeString(e) === "[object Set]", isDate$1 = (e) => toTypeString(e) === "[object Date]", isRegExp = (e) => toTypeString(e) === "[object RegExp]", isFunction$1 = (e) => typeof e == "function", isString$1 = (e) => typeof e == "string", isSymbol = (e) => typeof e == "symbol", isObject$1 = (e) => e !== null && typeof e == "object", isPromise = (e) => (isObject$1(e) || isFunction$1(e)) && isFunction$1(e.then) && isFunction$1(e.catch), objectToString = Object.prototype.toString, toTypeString = (e) => objectToString.call(e), toRawType = (e) => toTypeString(e).slice(8, -1), isPlainObject$1 = (e) => toTypeString(e) === "[object Object]", isIntegerKey = (e) => isString$1(e) && e !== "NaN" && e[0] !== "-" && "" + parseInt(e, 10) === e, isReservedProp = /* @__PURE__ */ makeMap(
  // the leading comma is intentional so empty string "" is also included
  ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
), cacheStringFunction = (e) => {
  const r = /* @__PURE__ */ Object.create(null);
  return (n) => r[n] || (r[n] = e(n));
}, camelizeRE = /-(\w)/g, camelize = cacheStringFunction((e) => e.replace(camelizeRE, (r, n) => n ? n.toUpperCase() : "")), hyphenateRE = /\B([A-Z])/g, hyphenate = cacheStringFunction(
  (e) => e.replace(hyphenateRE, "-$1").toLowerCase()
), capitalize = cacheStringFunction((e) => e.charAt(0).toUpperCase() + e.slice(1)), toHandlerKey = cacheStringFunction((e) => e ? `on${capitalize(e)}` : ""), hasChanged = (e, r) => !Object.is(e, r), invokeArrayFns = (e, r) => {
  for (let n = 0; n < e.length; n++)
    e[n](r);
}, def = (e, r, n) => {
  Object.defineProperty(e, r, {
    configurable: !0,
    enumerable: !1,
    value: n
  });
}, looseToNumber = (e) => {
  const r = parseFloat(e);
  return isNaN(r) ? e : r;
}, toNumber = (e) => {
  const r = isString$1(e) ? Number(e) : NaN;
  return isNaN(r) ? e : r;
};
let _globalThis;
const getGlobalThis = () => _globalThis || (_globalThis = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : typeof global < "u" ? global : {}), GLOBALS_ALLOWED = "Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error", isGloballyAllowed = /* @__PURE__ */ makeMap(GLOBALS_ALLOWED);
function normalizeStyle(e) {
  if (isArray$1(e)) {
    const r = {};
    for (let n = 0; n < e.length; n++) {
      const s = e[n], a = isString$1(s) ? parseStringStyle(s) : normalizeStyle(s);
      if (a)
        for (const t in a)
          r[t] = a[t];
    }
    return r;
  } else if (isString$1(e) || isObject$1(e))
    return e;
}
const listDelimiterRE = /;(?![^(]*\))/g, propertyDelimiterRE = /:([^]+)/, styleCommentRE = /\/\*[^]*?\*\//g;
function parseStringStyle(e) {
  const r = {};
  return e.replace(styleCommentRE, "").split(listDelimiterRE).forEach((n) => {
    if (n) {
      const s = n.split(propertyDelimiterRE);
      s.length > 1 && (r[s[0].trim()] = s[1].trim());
    }
  }), r;
}
function normalizeClass(e) {
  let r = "";
  if (isString$1(e))
    r = e;
  else if (isArray$1(e))
    for (let n = 0; n < e.length; n++) {
      const s = normalizeClass(e[n]);
      s && (r += s + " ");
    }
  else if (isObject$1(e))
    for (const n in e)
      e[n] && (r += n + " ");
  return r.trim();
}
function normalizeProps(e) {
  if (!e)
    return null;
  let { class: r, style: n } = e;
  return r && !isString$1(r) && (e.class = normalizeClass(r)), n && (e.style = normalizeStyle(n)), e;
}
const specialBooleanAttrs = "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly", isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);
function includeBooleanAttr(e) {
  return !!e || e === "";
}
function looseCompareArrays(e, r) {
  if (e.length !== r.length)
    return !1;
  let n = !0;
  for (let s = 0; n && s < e.length; s++)
    n = looseEqual(e[s], r[s]);
  return n;
}
function looseEqual(e, r) {
  if (e === r)
    return !0;
  let n = isDate$1(e), s = isDate$1(r);
  if (n || s)
    return n && s ? e.getTime() === r.getTime() : !1;
  if (n = isSymbol(e), s = isSymbol(r), n || s)
    return e === r;
  if (n = isArray$1(e), s = isArray$1(r), n || s)
    return n && s ? looseCompareArrays(e, r) : !1;
  if (n = isObject$1(e), s = isObject$1(r), n || s) {
    if (!n || !s)
      return !1;
    const a = Object.keys(e).length, t = Object.keys(r).length;
    if (a !== t)
      return !1;
    for (const l in e) {
      const o = e.hasOwnProperty(l), c = r.hasOwnProperty(l);
      if (o && !c || !o && c || !looseEqual(e[l], r[l]))
        return !1;
    }
  }
  return String(e) === String(r);
}
function looseIndexOf(e, r) {
  return e.findIndex((n) => looseEqual(n, r));
}
const toDisplayString = (e) => isString$1(e) ? e : e == null ? "" : isArray$1(e) || isObject$1(e) && (e.toString === objectToString || !isFunction$1(e.toString)) ? JSON.stringify(e, replacer, 2) : String(e), replacer = (e, r) => r && r.__v_isRef ? replacer(e, r.value) : isMap(r) ? {
  [`Map(${r.size})`]: [...r.entries()].reduce(
    (n, [s, a], t) => (n[stringifySymbol(s, t) + " =>"] = a, n),
    {}
  )
} : isSet(r) ? {
  [`Set(${r.size})`]: [...r.values()].map((n) => stringifySymbol(n))
} : isSymbol(r) ? stringifySymbol(r) : isObject$1(r) && !isArray$1(r) && !isPlainObject$1(r) ? String(r) : r, stringifySymbol = (e, r = "") => {
  var n;
  return isSymbol(e) ? `Symbol(${(n = e.description) != null ? n : r})` : e;
};
let activeEffectScope;
class EffectScope {
  constructor(r = !1) {
    this.detached = r, this._active = !0, this.effects = [], this.cleanups = [], this.parent = activeEffectScope, !r && activeEffectScope && (this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(
      this
    ) - 1);
  }
  get active() {
    return this._active;
  }
  run(r) {
    if (this._active) {
      const n = activeEffectScope;
      try {
        return activeEffectScope = this, r();
      } finally {
        activeEffectScope = n;
      }
    }
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  on() {
    activeEffectScope = this;
  }
  /**
   * This should only be called on non-detached scopes
   * @internal
   */
  off() {
    activeEffectScope = this.parent;
  }
  stop(r) {
    if (this._active) {
      let n, s;
      for (n = 0, s = this.effects.length; n < s; n++)
        this.effects[n].stop();
      for (n = 0, s = this.cleanups.length; n < s; n++)
        this.cleanups[n]();
      if (this.scopes)
        for (n = 0, s = this.scopes.length; n < s; n++)
          this.scopes[n].stop(!0);
      if (!this.detached && this.parent && !r) {
        const a = this.parent.scopes.pop();
        a && a !== this && (this.parent.scopes[this.index] = a, a.index = this.index);
      }
      this.parent = void 0, this._active = !1;
    }
  }
}
function effectScope(e) {
  return new EffectScope(e);
}
function recordEffectScope(e, r = activeEffectScope) {
  r && r.active && r.effects.push(e);
}
function getCurrentScope() {
  return activeEffectScope;
}
function onScopeDispose(e) {
  activeEffectScope && activeEffectScope.cleanups.push(e);
}
let activeEffect;
class ReactiveEffect {
  constructor(r, n, s, a) {
    this.fn = r, this.trigger = n, this.scheduler = s, this.active = !0, this.deps = [], this._dirtyLevel = 3, this._trackId = 0, this._runnings = 0, this._queryings = 0, this._depsLength = 0, recordEffectScope(this, a);
  }
  get dirty() {
    if (this._dirtyLevel === 1) {
      this._dirtyLevel = 0, this._queryings++, pauseTracking();
      for (const r of this.deps)
        if (r.computed && (triggerComputed(r.computed), this._dirtyLevel >= 2))
          break;
      resetTracking(), this._queryings--;
    }
    return this._dirtyLevel >= 2;
  }
  set dirty(r) {
    this._dirtyLevel = r ? 3 : 0;
  }
  run() {
    if (this._dirtyLevel = 0, !this.active)
      return this.fn();
    let r = shouldTrack, n = activeEffect;
    try {
      return shouldTrack = !0, activeEffect = this, this._runnings++, preCleanupEffect(this), this.fn();
    } finally {
      postCleanupEffect(this), this._runnings--, activeEffect = n, shouldTrack = r;
    }
  }
  stop() {
    var r;
    this.active && (preCleanupEffect(this), postCleanupEffect(this), (r = this.onStop) == null || r.call(this), this.active = !1);
  }
}
function triggerComputed(e) {
  return e.value;
}
function preCleanupEffect(e) {
  e._trackId++, e._depsLength = 0;
}
function postCleanupEffect(e) {
  if (e.deps && e.deps.length > e._depsLength) {
    for (let r = e._depsLength; r < e.deps.length; r++)
      cleanupDepEffect(e.deps[r], e);
    e.deps.length = e._depsLength;
  }
}
function cleanupDepEffect(e, r) {
  const n = e.get(r);
  n !== void 0 && r._trackId !== n && (e.delete(r), e.size === 0 && e.cleanup());
}
function effect$3(e, r) {
  e.effect instanceof ReactiveEffect && (e = e.effect.fn);
  const n = new ReactiveEffect(e, NOOP, () => {
    n.dirty && n.run();
  });
  r && (extend$1(n, r), r.scope && recordEffectScope(n, r.scope)), (!r || !r.lazy) && n.run();
  const s = n.run.bind(n);
  return s.effect = n, s;
}
function stop(e) {
  e.effect.stop();
}
let shouldTrack = !0, pauseScheduleStack = 0;
const trackStack = [];
function pauseTracking() {
  trackStack.push(shouldTrack), shouldTrack = !1;
}
function resetTracking() {
  const e = trackStack.pop();
  shouldTrack = e === void 0 ? !0 : e;
}
function pauseScheduling() {
  pauseScheduleStack++;
}
function resetScheduling() {
  for (pauseScheduleStack--; !pauseScheduleStack && queueEffectSchedulers.length; )
    queueEffectSchedulers.shift()();
}
function trackEffect(e, r, n) {
  if (r.get(e) !== e._trackId) {
    r.set(e, e._trackId);
    const s = e.deps[e._depsLength];
    s !== r ? (s && cleanupDepEffect(s, e), e.deps[e._depsLength++] = r) : e._depsLength++;
  }
}
const queueEffectSchedulers = [];
function triggerEffects(e, r, n) {
  pauseScheduling();
  for (const s of e.keys())
    if (!(!s.allowRecurse && s._runnings) && s._dirtyLevel < r && (!s._runnings || r !== 2)) {
      const a = s._dirtyLevel;
      s._dirtyLevel = r, a === 0 && (!s._queryings || r !== 2) && (s.trigger(), s.scheduler && queueEffectSchedulers.push(s.scheduler));
    }
  resetScheduling();
}
const createDep = (e, r) => {
  const n = /* @__PURE__ */ new Map();
  return n.cleanup = e, n.computed = r, n;
}, targetMap = /* @__PURE__ */ new WeakMap(), ITERATE_KEY = Symbol(""), MAP_KEY_ITERATE_KEY = Symbol("");
function track(e, r, n) {
  if (shouldTrack && activeEffect) {
    let s = targetMap.get(e);
    s || targetMap.set(e, s = /* @__PURE__ */ new Map());
    let a = s.get(n);
    a || s.set(n, a = createDep(() => s.delete(n))), trackEffect(
      activeEffect,
      a
    );
  }
}
function trigger(e, r, n, s, a, t) {
  const l = targetMap.get(e);
  if (!l)
    return;
  let o = [];
  if (r === "clear")
    o = [...l.values()];
  else if (n === "length" && isArray$1(e)) {
    const c = Number(s);
    l.forEach((_, u) => {
      (u === "length" || !isSymbol(u) && u >= c) && o.push(_);
    });
  } else
    switch (n !== void 0 && o.push(l.get(n)), r) {
      case "add":
        isArray$1(e) ? isIntegerKey(n) && o.push(l.get("length")) : (o.push(l.get(ITERATE_KEY)), isMap(e) && o.push(l.get(MAP_KEY_ITERATE_KEY)));
        break;
      case "delete":
        isArray$1(e) || (o.push(l.get(ITERATE_KEY)), isMap(e) && o.push(l.get(MAP_KEY_ITERATE_KEY)));
        break;
      case "set":
        isMap(e) && o.push(l.get(ITERATE_KEY));
        break;
    }
  pauseScheduling();
  for (const c of o)
    c && triggerEffects(
      c,
      3
    );
  resetScheduling();
}
function getDepFromReactive(e, r) {
  var n;
  return (n = targetMap.get(e)) == null ? void 0 : n.get(r);
}
const isNonTrackableKeys = /* @__PURE__ */ makeMap("__proto__,__v_isRef,__isVue"), builtInSymbols = new Set(
  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((e) => e !== "arguments" && e !== "caller").map((e) => Symbol[e]).filter(isSymbol)
), arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();
function createArrayInstrumentations() {
  const e = {};
  return ["includes", "indexOf", "lastIndexOf"].forEach((r) => {
    e[r] = function(...n) {
      const s = toRaw(this);
      for (let t = 0, l = this.length; t < l; t++)
        track(s, "get", t + "");
      const a = s[r](...n);
      return a === -1 || a === !1 ? s[r](...n.map(toRaw)) : a;
    };
  }), ["push", "pop", "shift", "unshift", "splice"].forEach((r) => {
    e[r] = function(...n) {
      pauseTracking(), pauseScheduling();
      const s = toRaw(this)[r].apply(this, n);
      return resetScheduling(), resetTracking(), s;
    };
  }), e;
}
function hasOwnProperty(e) {
  const r = toRaw(this);
  return track(r, "has", e), r.hasOwnProperty(e);
}
class BaseReactiveHandler {
  constructor(r = !1, n = !1) {
    this._isReadonly = r, this._shallow = n;
  }
  get(r, n, s) {
    const a = this._isReadonly, t = this._shallow;
    if (n === "__v_isReactive")
      return !a;
    if (n === "__v_isReadonly")
      return a;
    if (n === "__v_isShallow")
      return t;
    if (n === "__v_raw")
      return s === (a ? t ? shallowReadonlyMap : readonlyMap : t ? shallowReactiveMap : reactiveMap).get(r) || // receiver is not the reactive proxy, but has the same prototype
      // this means the reciever is a user proxy of the reactive proxy
      Object.getPrototypeOf(r) === Object.getPrototypeOf(s) ? r : void 0;
    const l = isArray$1(r);
    if (!a) {
      if (l && hasOwn(arrayInstrumentations, n))
        return Reflect.get(arrayInstrumentations, n, s);
      if (n === "hasOwnProperty")
        return hasOwnProperty;
    }
    const o = Reflect.get(r, n, s);
    return (isSymbol(n) ? builtInSymbols.has(n) : isNonTrackableKeys(n)) || (a || track(r, "get", n), t) ? o : isRef(o) ? l && isIntegerKey(n) ? o : o.value : isObject$1(o) ? a ? readonly(o) : reactive(o) : o;
  }
}
class MutableReactiveHandler extends BaseReactiveHandler {
  constructor(r = !1) {
    super(!1, r);
  }
  set(r, n, s, a) {
    let t = r[n];
    if (!this._shallow) {
      const c = isReadonly(t);
      if (!isShallow(s) && !isReadonly(s) && (t = toRaw(t), s = toRaw(s)), !isArray$1(r) && isRef(t) && !isRef(s))
        return c ? !1 : (t.value = s, !0);
    }
    const l = isArray$1(r) && isIntegerKey(n) ? Number(n) < r.length : hasOwn(r, n), o = Reflect.set(r, n, s, a);
    return r === toRaw(a) && (l ? hasChanged(s, t) && trigger(r, "set", n, s) : trigger(r, "add", n, s)), o;
  }
  deleteProperty(r, n) {
    const s = hasOwn(r, n);
    r[n];
    const a = Reflect.deleteProperty(r, n);
    return a && s && trigger(r, "delete", n, void 0), a;
  }
  has(r, n) {
    const s = Reflect.has(r, n);
    return (!isSymbol(n) || !builtInSymbols.has(n)) && track(r, "has", n), s;
  }
  ownKeys(r) {
    return track(
      r,
      "iterate",
      isArray$1(r) ? "length" : ITERATE_KEY
    ), Reflect.ownKeys(r);
  }
}
class ReadonlyReactiveHandler extends BaseReactiveHandler {
  constructor(r = !1) {
    super(!0, r);
  }
  set(r, n) {
    return !0;
  }
  deleteProperty(r, n) {
    return !0;
  }
}
const mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler(), readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(), shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(
  !0
), shallowReadonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(!0), toShallow = (e) => e, getProto = (e) => Reflect.getPrototypeOf(e);
function get$3(e, r, n = !1, s = !1) {
  e = e.__v_raw;
  const a = toRaw(e), t = toRaw(r);
  n || (hasChanged(r, t) && track(a, "get", r), track(a, "get", t));
  const { has: l } = getProto(a), o = s ? toShallow : n ? toReadonly : toReactive;
  if (l.call(a, r))
    return o(e.get(r));
  if (l.call(a, t))
    return o(e.get(t));
  e !== a && e.get(r);
}
function has(e, r = !1) {
  const n = this.__v_raw, s = toRaw(n), a = toRaw(e);
  return r || (hasChanged(e, a) && track(s, "has", e), track(s, "has", a)), e === a ? n.has(e) : n.has(e) || n.has(a);
}
function size(e, r = !1) {
  return e = e.__v_raw, !r && track(toRaw(e), "iterate", ITERATE_KEY), Reflect.get(e, "size", e);
}
function add$2(e) {
  e = toRaw(e);
  const r = toRaw(this);
  return getProto(r).has.call(r, e) || (r.add(e), trigger(r, "add", e, e)), this;
}
function set$2(e, r) {
  r = toRaw(r);
  const n = toRaw(this), { has: s, get: a } = getProto(n);
  let t = s.call(n, e);
  t || (e = toRaw(e), t = s.call(n, e));
  const l = a.call(n, e);
  return n.set(e, r), t ? hasChanged(r, l) && trigger(n, "set", e, r) : trigger(n, "add", e, r), this;
}
function deleteEntry(e) {
  const r = toRaw(this), { has: n, get: s } = getProto(r);
  let a = n.call(r, e);
  a || (e = toRaw(e), a = n.call(r, e)), s && s.call(r, e);
  const t = r.delete(e);
  return a && trigger(r, "delete", e, void 0), t;
}
function clear() {
  const e = toRaw(this), r = e.size !== 0, n = e.clear();
  return r && trigger(e, "clear", void 0, void 0), n;
}
function createForEach(e, r) {
  return function(s, a) {
    const t = this, l = t.__v_raw, o = toRaw(l), c = r ? toShallow : e ? toReadonly : toReactive;
    return !e && track(o, "iterate", ITERATE_KEY), l.forEach((_, u) => s.call(a, c(_), c(u), t));
  };
}
function createIterableMethod(e, r, n) {
  return function(...s) {
    const a = this.__v_raw, t = toRaw(a), l = isMap(t), o = e === "entries" || e === Symbol.iterator && l, c = e === "keys" && l, _ = a[e](...s), u = n ? toShallow : r ? toReadonly : toReactive;
    return !r && track(
      t,
      "iterate",
      c ? MAP_KEY_ITERATE_KEY : ITERATE_KEY
    ), {
      // iterator protocol
      next() {
        const { value: y, done: g } = _.next();
        return g ? { value: y, done: g } : {
          value: o ? [u(y[0]), u(y[1])] : u(y),
          done: g
        };
      },
      // iterable protocol
      [Symbol.iterator]() {
        return this;
      }
    };
  };
}
function createReadonlyMethod(e) {
  return function(...r) {
    return e === "delete" ? !1 : e === "clear" ? void 0 : this;
  };
}
function createInstrumentations() {
  const e = {
    get(t) {
      return get$3(this, t);
    },
    get size() {
      return size(this);
    },
    has,
    add: add$2,
    set: set$2,
    delete: deleteEntry,
    clear,
    forEach: createForEach(!1, !1)
  }, r = {
    get(t) {
      return get$3(this, t, !1, !0);
    },
    get size() {
      return size(this);
    },
    has,
    add: add$2,
    set: set$2,
    delete: deleteEntry,
    clear,
    forEach: createForEach(!1, !0)
  }, n = {
    get(t) {
      return get$3(this, t, !0);
    },
    get size() {
      return size(this, !0);
    },
    has(t) {
      return has.call(this, t, !0);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(!0, !1)
  }, s = {
    get(t) {
      return get$3(this, t, !0, !0);
    },
    get size() {
      return size(this, !0);
    },
    has(t) {
      return has.call(this, t, !0);
    },
    add: createReadonlyMethod("add"),
    set: createReadonlyMethod("set"),
    delete: createReadonlyMethod("delete"),
    clear: createReadonlyMethod("clear"),
    forEach: createForEach(!0, !0)
  };
  return ["keys", "values", "entries", Symbol.iterator].forEach((t) => {
    e[t] = createIterableMethod(
      t,
      !1,
      !1
    ), n[t] = createIterableMethod(
      t,
      !0,
      !1
    ), r[t] = createIterableMethod(
      t,
      !1,
      !0
    ), s[t] = createIterableMethod(
      t,
      !0,
      !0
    );
  }), [
    e,
    n,
    r,
    s
  ];
}
const [
  mutableInstrumentations,
  readonlyInstrumentations,
  shallowInstrumentations,
  shallowReadonlyInstrumentations
] = /* @__PURE__ */ createInstrumentations();
function createInstrumentationGetter(e, r) {
  const n = r ? e ? shallowReadonlyInstrumentations : shallowInstrumentations : e ? readonlyInstrumentations : mutableInstrumentations;
  return (s, a, t) => a === "__v_isReactive" ? !e : a === "__v_isReadonly" ? e : a === "__v_raw" ? s : Reflect.get(
    hasOwn(n, a) && a in s ? n : s,
    a,
    t
  );
}
const mutableCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!1, !1)
}, shallowCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!1, !0)
}, readonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!0, !1)
}, shallowReadonlyCollectionHandlers = {
  get: /* @__PURE__ */ createInstrumentationGetter(!0, !0)
}, reactiveMap = /* @__PURE__ */ new WeakMap(), shallowReactiveMap = /* @__PURE__ */ new WeakMap(), readonlyMap = /* @__PURE__ */ new WeakMap(), shallowReadonlyMap = /* @__PURE__ */ new WeakMap();
function targetTypeMap(e) {
  switch (e) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function getTargetType(e) {
  return e.__v_skip || !Object.isExtensible(e) ? 0 : targetTypeMap(toRawType(e));
}
function reactive(e) {
  return isReadonly(e) ? e : createReactiveObject(
    e,
    !1,
    mutableHandlers,
    mutableCollectionHandlers,
    reactiveMap
  );
}
function shallowReactive(e) {
  return createReactiveObject(
    e,
    !1,
    shallowReactiveHandlers,
    shallowCollectionHandlers,
    shallowReactiveMap
  );
}
function readonly(e) {
  return createReactiveObject(
    e,
    !0,
    readonlyHandlers,
    readonlyCollectionHandlers,
    readonlyMap
  );
}
function shallowReadonly(e) {
  return createReactiveObject(
    e,
    !0,
    shallowReadonlyHandlers,
    shallowReadonlyCollectionHandlers,
    shallowReadonlyMap
  );
}
function createReactiveObject(e, r, n, s, a) {
  if (!isObject$1(e) || e.__v_raw && !(r && e.__v_isReactive))
    return e;
  const t = a.get(e);
  if (t)
    return t;
  const l = getTargetType(e);
  if (l === 0)
    return e;
  const o = new Proxy(
    e,
    l === 2 ? s : n
  );
  return a.set(e, o), o;
}
function isReactive(e) {
  return isReadonly(e) ? isReactive(e.__v_raw) : !!(e && e.__v_isReactive);
}
function isReadonly(e) {
  return !!(e && e.__v_isReadonly);
}
function isShallow(e) {
  return !!(e && e.__v_isShallow);
}
function isProxy(e) {
  return isReactive(e) || isReadonly(e);
}
function toRaw(e) {
  const r = e && e.__v_raw;
  return r ? toRaw(r) : e;
}
function markRaw(e) {
  return def(e, "__v_skip", !0), e;
}
const toReactive = (e) => isObject$1(e) ? reactive(e) : e, toReadonly = (e) => isObject$1(e) ? readonly(e) : e;
class ComputedRefImpl {
  constructor(r, n, s, a) {
    this._setter = n, this.dep = void 0, this.__v_isRef = !0, this.__v_isReadonly = !1, this.effect = new ReactiveEffect(
      () => r(this._value),
      () => triggerRefValue(this, 1)
    ), this.effect.computed = this, this.effect.active = this._cacheable = !a, this.__v_isReadonly = s;
  }
  get value() {
    const r = toRaw(this);
    return trackRefValue(r), (!r._cacheable || r.effect.dirty) && hasChanged(r._value, r._value = r.effect.run()) && triggerRefValue(r, 2), r._value;
  }
  set value(r) {
    this._setter(r);
  }
  // #region polyfill _dirty for backward compatibility third party code for Vue <= 3.3.x
  get _dirty() {
    return this.effect.dirty;
  }
  set _dirty(r) {
    this.effect.dirty = r;
  }
  // #endregion
}
function computed$1(e, r, n = !1) {
  let s, a;
  const t = isFunction$1(e);
  return t ? (s = e, a = NOOP) : (s = e.get, a = e.set), new ComputedRefImpl(s, a, t || !a, n);
}
function trackRefValue(e) {
  shouldTrack && activeEffect && (e = toRaw(e), trackEffect(
    activeEffect,
    e.dep || (e.dep = createDep(
      () => e.dep = void 0,
      e instanceof ComputedRefImpl ? e : void 0
    ))
  ));
}
function triggerRefValue(e, r = 3, n) {
  e = toRaw(e);
  const s = e.dep;
  s && triggerEffects(
    s,
    r
  );
}
function isRef(e) {
  return !!(e && e.__v_isRef === !0);
}
function ref(e) {
  return createRef(e, !1);
}
function shallowRef(e) {
  return createRef(e, !0);
}
function createRef(e, r) {
  return isRef(e) ? e : new RefImpl(e, r);
}
class RefImpl {
  constructor(r, n) {
    this.__v_isShallow = n, this.dep = void 0, this.__v_isRef = !0, this._rawValue = n ? r : toRaw(r), this._value = n ? r : toReactive(r);
  }
  get value() {
    return trackRefValue(this), this._value;
  }
  set value(r) {
    const n = this.__v_isShallow || isShallow(r) || isReadonly(r);
    r = n ? r : toRaw(r), hasChanged(r, this._rawValue) && (this._rawValue = r, this._value = n ? r : toReactive(r), triggerRefValue(this, 3));
  }
}
function triggerRef(e) {
  triggerRefValue(e, 3);
}
function unref(e) {
  return isRef(e) ? e.value : e;
}
function toValue(e) {
  return isFunction$1(e) ? e() : unref(e);
}
const shallowUnwrapHandlers = {
  get: (e, r, n) => unref(Reflect.get(e, r, n)),
  set: (e, r, n, s) => {
    const a = e[r];
    return isRef(a) && !isRef(n) ? (a.value = n, !0) : Reflect.set(e, r, n, s);
  }
};
function proxyRefs(e) {
  return isReactive(e) ? e : new Proxy(e, shallowUnwrapHandlers);
}
class CustomRefImpl {
  constructor(r) {
    this.dep = void 0, this.__v_isRef = !0;
    const { get: n, set: s } = r(
      () => trackRefValue(this),
      () => triggerRefValue(this)
    );
    this._get = n, this._set = s;
  }
  get value() {
    return this._get();
  }
  set value(r) {
    this._set(r);
  }
}
function customRef(e) {
  return new CustomRefImpl(e);
}
function toRefs(e) {
  const r = isArray$1(e) ? new Array(e.length) : {};
  for (const n in e)
    r[n] = propertyToRef(e, n);
  return r;
}
class ObjectRefImpl {
  constructor(r, n, s) {
    this._object = r, this._key = n, this._defaultValue = s, this.__v_isRef = !0;
  }
  get value() {
    const r = this._object[this._key];
    return r === void 0 ? this._defaultValue : r;
  }
  set value(r) {
    this._object[this._key] = r;
  }
  get dep() {
    return getDepFromReactive(toRaw(this._object), this._key);
  }
}
class GetterRefImpl {
  constructor(r) {
    this._getter = r, this.__v_isRef = !0, this.__v_isReadonly = !0;
  }
  get value() {
    return this._getter();
  }
}
function toRef(e, r, n) {
  return isRef(e) ? e : isFunction$1(e) ? new GetterRefImpl(e) : isObject$1(e) && arguments.length > 1 ? propertyToRef(e, r, n) : ref(e);
}
function propertyToRef(e, r, n) {
  const s = e[r];
  return isRef(s) ? s : new ObjectRefImpl(e, r, n);
}
const TrackOpTypes = {
  GET: "get",
  HAS: "has",
  ITERATE: "iterate"
}, TriggerOpTypes = {
  SET: "set",
  ADD: "add",
  DELETE: "delete",
  CLEAR: "clear"
}, stack = [];
function warn$1(e, ...r) {
  pauseTracking();
  const n = stack.length ? stack[stack.length - 1].component : null, s = n && n.appContext.config.warnHandler, a = getComponentTrace();
  if (s)
    callWithErrorHandling(
      s,
      n,
      11,
      [
        e + r.join(""),
        n && n.proxy,
        a.map(
          ({ vnode: t }) => `at <${formatComponentName(n, t.type)}>`
        ).join(`
`),
        a
      ]
    );
  else {
    const t = [`[Vue warn]: ${e}`, ...r];
    a.length && t.push(`
`, ...formatTrace(a)), console.warn(...t);
  }
  resetTracking();
}
function getComponentTrace() {
  let e = stack[stack.length - 1];
  if (!e)
    return [];
  const r = [];
  for (; e; ) {
    const n = r[0];
    n && n.vnode === e ? n.recurseCount++ : r.push({
      vnode: e,
      recurseCount: 0
    });
    const s = e.component && e.component.parent;
    e = s && s.vnode;
  }
  return r;
}
function formatTrace(e) {
  const r = [];
  return e.forEach((n, s) => {
    r.push(...s === 0 ? [] : [`
`], ...formatTraceEntry(n));
  }), r;
}
function formatTraceEntry({ vnode: e, recurseCount: r }) {
  const n = r > 0 ? `... (${r} recursive calls)` : "", s = e.component ? e.component.parent == null : !1, a = ` at <${formatComponentName(
    e.component,
    e.type,
    s
  )}`, t = ">" + n;
  return e.props ? [a, ...formatProps(e.props), t] : [a + t];
}
function formatProps(e) {
  const r = [], n = Object.keys(e);
  return n.slice(0, 3).forEach((s) => {
    r.push(...formatProp(s, e[s]));
  }), n.length > 3 && r.push(" ..."), r;
}
function formatProp(e, r, n) {
  return isString$1(r) ? (r = JSON.stringify(r), n ? r : [`${e}=${r}`]) : typeof r == "number" || typeof r == "boolean" || r == null ? n ? r : [`${e}=${r}`] : isRef(r) ? (r = formatProp(e, toRaw(r.value), !0), n ? r : [`${e}=Ref<`, r, ">"]) : isFunction$1(r) ? [`${e}=fn${r.name ? `<${r.name}>` : ""}`] : (r = toRaw(r), n ? r : [`${e}=`, r]);
}
function assertNumber(e, r) {
}
const ErrorCodes = {
  SETUP_FUNCTION: 0,
  0: "SETUP_FUNCTION",
  RENDER_FUNCTION: 1,
  1: "RENDER_FUNCTION",
  WATCH_GETTER: 2,
  2: "WATCH_GETTER",
  WATCH_CALLBACK: 3,
  3: "WATCH_CALLBACK",
  WATCH_CLEANUP: 4,
  4: "WATCH_CLEANUP",
  NATIVE_EVENT_HANDLER: 5,
  5: "NATIVE_EVENT_HANDLER",
  COMPONENT_EVENT_HANDLER: 6,
  6: "COMPONENT_EVENT_HANDLER",
  VNODE_HOOK: 7,
  7: "VNODE_HOOK",
  DIRECTIVE_HOOK: 8,
  8: "DIRECTIVE_HOOK",
  TRANSITION_HOOK: 9,
  9: "TRANSITION_HOOK",
  APP_ERROR_HANDLER: 10,
  10: "APP_ERROR_HANDLER",
  APP_WARN_HANDLER: 11,
  11: "APP_WARN_HANDLER",
  FUNCTION_REF: 12,
  12: "FUNCTION_REF",
  ASYNC_COMPONENT_LOADER: 13,
  13: "ASYNC_COMPONENT_LOADER",
  SCHEDULER: 14,
  14: "SCHEDULER"
}, ErrorTypeStrings$1 = {
  sp: "serverPrefetch hook",
  bc: "beforeCreate hook",
  c: "created hook",
  bm: "beforeMount hook",
  m: "mounted hook",
  bu: "beforeUpdate hook",
  u: "updated",
  bum: "beforeUnmount hook",
  um: "unmounted hook",
  a: "activated hook",
  da: "deactivated hook",
  ec: "errorCaptured hook",
  rtc: "renderTracked hook",
  rtg: "renderTriggered hook",
  0: "setup function",
  1: "render function",
  2: "watcher getter",
  3: "watcher callback",
  4: "watcher cleanup function",
  5: "native event handler",
  6: "component event handler",
  7: "vnode hook",
  8: "directive hook",
  9: "transition hook",
  10: "app errorHandler",
  11: "app warnHandler",
  12: "ref function",
  13: "async component loader",
  14: "scheduler flush. This is likely a Vue internals bug. Please open an issue at https://github.com/vuejs/core ."
};
function callWithErrorHandling(e, r, n, s) {
  let a;
  try {
    a = s ? e(...s) : e();
  } catch (t) {
    handleError(t, r, n);
  }
  return a;
}
function callWithAsyncErrorHandling(e, r, n, s) {
  if (isFunction$1(e)) {
    const t = callWithErrorHandling(e, r, n, s);
    return t && isPromise(t) && t.catch((l) => {
      handleError(l, r, n);
    }), t;
  }
  const a = [];
  for (let t = 0; t < e.length; t++)
    a.push(callWithAsyncErrorHandling(e[t], r, n, s));
  return a;
}
function handleError(e, r, n, s = !0) {
  const a = r ? r.vnode : null;
  if (r) {
    let t = r.parent;
    const l = r.proxy, o = `https://vuejs.org/errors/#runtime-${n}`;
    for (; t; ) {
      const _ = t.ec;
      if (_) {
        for (let u = 0; u < _.length; u++)
          if (_[u](e, l, o) === !1)
            return;
      }
      t = t.parent;
    }
    const c = r.appContext.config.errorHandler;
    if (c) {
      callWithErrorHandling(
        c,
        null,
        10,
        [e, l, o]
      );
      return;
    }
  }
  logError(e, n, a, s);
}
function logError(e, r, n, s = !0) {
  console.error(e);
}
let isFlushing = !1, isFlushPending = !1;
const queue = [];
let flushIndex = 0;
const pendingPostFlushCbs = [];
let activePostFlushCbs = null, postFlushIndex = 0;
const resolvedPromise = /* @__PURE__ */ Promise.resolve();
let currentFlushPromise = null;
function nextTick(e) {
  const r = currentFlushPromise || resolvedPromise;
  return e ? r.then(this ? e.bind(this) : e) : r;
}
function findInsertionIndex(e) {
  let r = flushIndex + 1, n = queue.length;
  for (; r < n; ) {
    const s = r + n >>> 1, a = queue[s], t = getId(a);
    t < e || t === e && a.pre ? r = s + 1 : n = s;
  }
  return r;
}
function queueJob(e) {
  (!queue.length || !queue.includes(
    e,
    isFlushing && e.allowRecurse ? flushIndex + 1 : flushIndex
  )) && (e.id == null ? queue.push(e) : queue.splice(findInsertionIndex(e.id), 0, e), queueFlush());
}
function queueFlush() {
  !isFlushing && !isFlushPending && (isFlushPending = !0, currentFlushPromise = resolvedPromise.then(flushJobs));
}
function invalidateJob(e) {
  const r = queue.indexOf(e);
  r > flushIndex && queue.splice(r, 1);
}
function queuePostFlushCb(e) {
  isArray$1(e) ? pendingPostFlushCbs.push(...e) : (!activePostFlushCbs || !activePostFlushCbs.includes(
    e,
    e.allowRecurse ? postFlushIndex + 1 : postFlushIndex
  )) && pendingPostFlushCbs.push(e), queueFlush();
}
function flushPreFlushCbs(e, r, n = isFlushing ? flushIndex + 1 : 0) {
  for (; n < queue.length; n++) {
    const s = queue[n];
    if (s && s.pre) {
      if (e && s.id !== e.uid)
        continue;
      queue.splice(n, 1), n--, s();
    }
  }
}
function flushPostFlushCbs(e) {
  if (pendingPostFlushCbs.length) {
    const r = [...new Set(pendingPostFlushCbs)].sort(
      (n, s) => getId(n) - getId(s)
    );
    if (pendingPostFlushCbs.length = 0, activePostFlushCbs) {
      activePostFlushCbs.push(...r);
      return;
    }
    for (activePostFlushCbs = r, postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++)
      activePostFlushCbs[postFlushIndex]();
    activePostFlushCbs = null, postFlushIndex = 0;
  }
}
const getId = (e) => e.id == null ? 1 / 0 : e.id, comparator = (e, r) => {
  const n = getId(e) - getId(r);
  if (n === 0) {
    if (e.pre && !r.pre)
      return -1;
    if (r.pre && !e.pre)
      return 1;
  }
  return n;
};
function flushJobs(e) {
  isFlushPending = !1, isFlushing = !0, queue.sort(comparator);
  try {
    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {
      const r = queue[flushIndex];
      r && r.active !== !1 && callWithErrorHandling(r, null, 14);
    }
  } finally {
    flushIndex = 0, queue.length = 0, flushPostFlushCbs(), isFlushing = !1, currentFlushPromise = null, (queue.length || pendingPostFlushCbs.length) && flushJobs();
  }
}
function emit(e, r, ...n) {
  if (e.isUnmounted)
    return;
  const s = e.vnode.props || EMPTY_OBJ;
  let a = n;
  const t = r.startsWith("update:"), l = t && r.slice(7);
  if (l && l in s) {
    const u = `${l === "modelValue" ? "model" : l}Modifiers`, { number: y, trim: g } = s[u] || EMPTY_OBJ;
    g && (a = n.map((Ee) => isString$1(Ee) ? Ee.trim() : Ee)), y && (a = n.map(looseToNumber));
  }
  let o, c = s[o = toHandlerKey(r)] || // also try camelCase event handler (#2249)
  s[o = toHandlerKey(camelize(r))];
  !c && t && (c = s[o = toHandlerKey(hyphenate(r))]), c && callWithAsyncErrorHandling(
    c,
    e,
    6,
    a
  );
  const _ = s[o + "Once"];
  if (_) {
    if (!e.emitted)
      e.emitted = {};
    else if (e.emitted[o])
      return;
    e.emitted[o] = !0, callWithAsyncErrorHandling(
      _,
      e,
      6,
      a
    );
  }
}
function normalizeEmitsOptions(e, r, n = !1) {
  const s = r.emitsCache, a = s.get(e);
  if (a !== void 0)
    return a;
  const t = e.emits;
  let l = {}, o = !1;
  if (!isFunction$1(e)) {
    const c = (_) => {
      const u = normalizeEmitsOptions(_, r, !0);
      u && (o = !0, extend$1(l, u));
    };
    !n && r.mixins.length && r.mixins.forEach(c), e.extends && c(e.extends), e.mixins && e.mixins.forEach(c);
  }
  return !t && !o ? (isObject$1(e) && s.set(e, null), null) : (isArray$1(t) ? t.forEach((c) => l[c] = null) : extend$1(l, t), isObject$1(e) && s.set(e, l), l);
}
function isEmitListener(e, r) {
  return !e || !isOn(r) ? !1 : (r = r.slice(2).replace(/Once$/, ""), hasOwn(e, r[0].toLowerCase() + r.slice(1)) || hasOwn(e, hyphenate(r)) || hasOwn(e, r));
}
let currentRenderingInstance = null, currentScopeId = null;
function setCurrentRenderingInstance(e) {
  const r = currentRenderingInstance;
  return currentRenderingInstance = e, currentScopeId = e && e.type.__scopeId || null, r;
}
function pushScopeId(e) {
  currentScopeId = e;
}
function popScopeId() {
  currentScopeId = null;
}
const withScopeId = (e) => withCtx;
function withCtx(e, r = currentRenderingInstance, n) {
  if (!r || e._n)
    return e;
  const s = (...a) => {
    s._d && setBlockTracking(-1);
    const t = setCurrentRenderingInstance(r);
    let l;
    try {
      l = e(...a);
    } finally {
      setCurrentRenderingInstance(t), s._d && setBlockTracking(1);
    }
    return l;
  };
  return s._n = !0, s._c = !0, s._d = !0, s;
}
function markAttrsAccessed() {
}
function renderComponentRoot(e) {
  const {
    type: r,
    vnode: n,
    proxy: s,
    withProxy: a,
    props: t,
    propsOptions: [l],
    slots: o,
    attrs: c,
    emit: _,
    render: u,
    renderCache: y,
    data: g,
    setupState: Ee,
    ctx: Ve,
    inheritAttrs: Me
  } = e;
  let B, Pe;
  const k = setCurrentRenderingInstance(e);
  try {
    if (n.shapeFlag & 4) {
      const Le = a || s, xe = Le;
      B = normalizeVNode(
        u.call(
          xe,
          Le,
          y,
          t,
          Ee,
          g,
          Ve
        )
      ), Pe = c;
    } else {
      const Le = r;
      B = normalizeVNode(
        Le.length > 1 ? Le(
          t,
          { attrs: c, slots: o, emit: _ }
        ) : Le(
          t,
          null
          /* we know it doesn't need it */
        )
      ), Pe = r.props ? c : getFunctionalFallthrough(c);
    }
  } catch (Le) {
    blockStack.length = 0, handleError(Le, e, 1), B = createVNode(Comment);
  }
  let b = B;
  if (Pe && Me !== !1) {
    const Le = Object.keys(Pe), { shapeFlag: xe } = b;
    Le.length && xe & 7 && (l && Le.some(isModelListener) && (Pe = filterModelListeners(
      Pe,
      l
    )), b = cloneVNode(b, Pe));
  }
  return n.dirs && (b = cloneVNode(b), b.dirs = b.dirs ? b.dirs.concat(n.dirs) : n.dirs), n.transition && (b.transition = n.transition), B = b, setCurrentRenderingInstance(k), B;
}
function filterSingleRoot(e) {
  let r;
  for (let n = 0; n < e.length; n++) {
    const s = e[n];
    if (isVNode(s)) {
      if (s.type !== Comment || s.children === "v-if") {
        if (r)
          return;
        r = s;
      }
    } else
      return;
  }
  return r;
}
const getFunctionalFallthrough = (e) => {
  let r;
  for (const n in e)
    (n === "class" || n === "style" || isOn(n)) && ((r || (r = {}))[n] = e[n]);
  return r;
}, filterModelListeners = (e, r) => {
  const n = {};
  for (const s in e)
    (!isModelListener(s) || !(s.slice(9) in r)) && (n[s] = e[s]);
  return n;
};
function shouldUpdateComponent(e, r, n) {
  const { props: s, children: a, component: t } = e, { props: l, children: o, patchFlag: c } = r, _ = t.emitsOptions;
  if (r.dirs || r.transition)
    return !0;
  if (n && c >= 0) {
    if (c & 1024)
      return !0;
    if (c & 16)
      return s ? hasPropsChanged(s, l, _) : !!l;
    if (c & 8) {
      const u = r.dynamicProps;
      for (let y = 0; y < u.length; y++) {
        const g = u[y];
        if (l[g] !== s[g] && !isEmitListener(_, g))
          return !0;
      }
    }
  } else
    return (a || o) && (!o || !o.$stable) ? !0 : s === l ? !1 : s ? l ? hasPropsChanged(s, l, _) : !0 : !!l;
  return !1;
}
function hasPropsChanged(e, r, n) {
  const s = Object.keys(r);
  if (s.length !== Object.keys(e).length)
    return !0;
  for (let a = 0; a < s.length; a++) {
    const t = s[a];
    if (r[t] !== e[t] && !isEmitListener(n, t))
      return !0;
  }
  return !1;
}
function updateHOCHostEl({ vnode: e, parent: r }, n) {
  if (n)
    for (; r; ) {
      const s = r.subTree;
      if (s.suspense && s.suspense.activeBranch === e && (s.el = e.el), s === e)
        (e = r.vnode).el = n, r = r.parent;
      else
        break;
    }
}
const COMPONENTS = "components", DIRECTIVES = "directives";
function resolveComponent(e, r) {
  return resolveAsset(COMPONENTS, e, !0, r) || e;
}
const NULL_DYNAMIC_COMPONENT = Symbol.for("v-ndc");
function resolveDynamicComponent(e) {
  return isString$1(e) ? resolveAsset(COMPONENTS, e, !1) || e : e || NULL_DYNAMIC_COMPONENT;
}
function resolveDirective(e) {
  return resolveAsset(DIRECTIVES, e);
}
function resolveAsset(e, r, n = !0, s = !1) {
  const a = currentRenderingInstance || currentInstance;
  if (a) {
    const t = a.type;
    if (e === COMPONENTS) {
      const o = getComponentName(
        t,
        !1
      );
      if (o && (o === r || o === camelize(r) || o === capitalize(camelize(r))))
        return t;
    }
    const l = (
      // local registration
      // check instance[type] first which is resolved for options API
      resolve(a[e] || t[e], r) || // global registration
      resolve(a.appContext[e], r)
    );
    return !l && s ? t : l;
  }
}
function resolve(e, r) {
  return e && (e[r] || e[camelize(r)] || e[capitalize(camelize(r))]);
}
const isSuspense = (e) => e.__isSuspense;
let suspenseId = 0;
const SuspenseImpl = {
  name: "Suspense",
  // In order to make Suspense tree-shakable, we need to avoid importing it
  // directly in the renderer. The renderer checks for the __isSuspense flag
  // on a vnode's type and calls the `process` method, passing in renderer
  // internals.
  __isSuspense: !0,
  process(e, r, n, s, a, t, l, o, c, _) {
    e == null ? mountSuspense(
      r,
      n,
      s,
      a,
      t,
      l,
      o,
      c,
      _
    ) : patchSuspense(
      e,
      r,
      n,
      s,
      a,
      l,
      o,
      c,
      _
    );
  },
  hydrate: hydrateSuspense,
  create: createSuspenseBoundary,
  normalize: normalizeSuspenseChildren
}, Suspense = SuspenseImpl;
function triggerEvent(e, r) {
  const n = e.props && e.props[r];
  isFunction$1(n) && n();
}
function mountSuspense(e, r, n, s, a, t, l, o, c) {
  const {
    p: _,
    o: { createElement: u }
  } = c, y = u("div"), g = e.suspense = createSuspenseBoundary(
    e,
    a,
    s,
    r,
    y,
    n,
    t,
    l,
    o,
    c
  );
  _(
    null,
    g.pendingBranch = e.ssContent,
    y,
    null,
    s,
    g,
    t,
    l
  ), g.deps > 0 ? (triggerEvent(e, "onPending"), triggerEvent(e, "onFallback"), _(
    null,
    e.ssFallback,
    r,
    n,
    s,
    null,
    // fallback tree will not have suspense context
    t,
    l
  ), setActiveBranch(g, e.ssFallback)) : g.resolve(!1, !0);
}
function patchSuspense(e, r, n, s, a, t, l, o, { p: c, um: _, o: { createElement: u } }) {
  const y = r.suspense = e.suspense;
  y.vnode = r, r.el = e.el;
  const g = r.ssContent, Ee = r.ssFallback, { activeBranch: Ve, pendingBranch: Me, isInFallback: B, isHydrating: Pe } = y;
  if (Me)
    y.pendingBranch = g, isSameVNodeType(g, Me) ? (c(
      Me,
      g,
      y.hiddenContainer,
      null,
      a,
      y,
      t,
      l,
      o
    ), y.deps <= 0 ? y.resolve() : B && (Pe || (c(
      Ve,
      Ee,
      n,
      s,
      a,
      null,
      // fallback tree will not have suspense context
      t,
      l,
      o
    ), setActiveBranch(y, Ee)))) : (y.pendingId = suspenseId++, Pe ? (y.isHydrating = !1, y.activeBranch = Me) : _(Me, a, y), y.deps = 0, y.effects.length = 0, y.hiddenContainer = u("div"), B ? (c(
      null,
      g,
      y.hiddenContainer,
      null,
      a,
      y,
      t,
      l,
      o
    ), y.deps <= 0 ? y.resolve() : (c(
      Ve,
      Ee,
      n,
      s,
      a,
      null,
      // fallback tree will not have suspense context
      t,
      l,
      o
    ), setActiveBranch(y, Ee))) : Ve && isSameVNodeType(g, Ve) ? (c(
      Ve,
      g,
      n,
      s,
      a,
      y,
      t,
      l,
      o
    ), y.resolve(!0)) : (c(
      null,
      g,
      y.hiddenContainer,
      null,
      a,
      y,
      t,
      l,
      o
    ), y.deps <= 0 && y.resolve()));
  else if (Ve && isSameVNodeType(g, Ve))
    c(
      Ve,
      g,
      n,
      s,
      a,
      y,
      t,
      l,
      o
    ), setActiveBranch(y, g);
  else if (triggerEvent(r, "onPending"), y.pendingBranch = g, g.shapeFlag & 512 ? y.pendingId = g.component.suspenseId : y.pendingId = suspenseId++, c(
    null,
    g,
    y.hiddenContainer,
    null,
    a,
    y,
    t,
    l,
    o
  ), y.deps <= 0)
    y.resolve();
  else {
    const { timeout: k, pendingId: b } = y;
    k > 0 ? setTimeout(() => {
      y.pendingId === b && y.fallback(Ee);
    }, k) : k === 0 && y.fallback(Ee);
  }
}
function createSuspenseBoundary(e, r, n, s, a, t, l, o, c, _, u = !1) {
  const {
    p: y,
    m: g,
    um: Ee,
    n: Ve,
    o: { parentNode: Me, remove: B }
  } = _;
  let Pe;
  const k = isVNodeSuspensible(e);
  k && r != null && r.pendingBranch && (Pe = r.pendingId, r.deps++);
  const b = e.props ? toNumber(e.props.timeout) : void 0, Le = t, xe = {
    vnode: e,
    parent: r,
    parentComponent: n,
    namespace: l,
    container: s,
    hiddenContainer: a,
    deps: 0,
    pendingId: suspenseId++,
    timeout: typeof b == "number" ? b : -1,
    activeBranch: null,
    pendingBranch: null,
    isInFallback: !u,
    isHydrating: u,
    isUnmounted: !1,
    effects: [],
    resolve(ze = !1, Se = !1) {
      const {
        vnode: Te,
        activeBranch: D,
        pendingBranch: ke,
        pendingId: Fe,
        effects: He,
        parentComponent: We,
        container: Ke
      } = xe;
      let $ = !1;
      xe.isHydrating ? xe.isHydrating = !1 : ze || ($ = D && ke.transition && ke.transition.mode === "out-in", $ && (D.transition.afterLeave = () => {
        Fe === xe.pendingId && (g(
          ke,
          Ke,
          t === Le ? Ve(D) : t,
          0
        ), queuePostFlushCb(He));
      }), D && (Me(D.el) !== xe.hiddenContainer && (t = Ve(D)), Ee(D, We, xe, !0)), $ || g(ke, Ke, t, 0)), setActiveBranch(xe, ke), xe.pendingBranch = null, xe.isInFallback = !1;
      let De = xe.parent, Re = !1;
      for (; De; ) {
        if (De.pendingBranch) {
          De.effects.push(...He), Re = !0;
          break;
        }
        De = De.parent;
      }
      !Re && !$ && queuePostFlushCb(He), xe.effects = [], k && r && r.pendingBranch && Pe === r.pendingId && (r.deps--, r.deps === 0 && !Se && r.resolve()), triggerEvent(Te, "onResolve");
    },
    fallback(ze) {
      if (!xe.pendingBranch)
        return;
      const { vnode: Se, activeBranch: Te, parentComponent: D, container: ke, namespace: Fe } = xe;
      triggerEvent(Se, "onFallback");
      const He = Ve(Te), We = () => {
        xe.isInFallback && (y(
          null,
          ze,
          ke,
          He,
          D,
          null,
          // fallback tree will not have suspense context
          Fe,
          o,
          c
        ), setActiveBranch(xe, ze));
      }, Ke = ze.transition && ze.transition.mode === "out-in";
      Ke && (Te.transition.afterLeave = We), xe.isInFallback = !0, Ee(
        Te,
        D,
        null,
        // no suspense so unmount hooks fire now
        !0
        // shouldRemove
      ), Ke || We();
    },
    move(ze, Se, Te) {
      xe.activeBranch && g(xe.activeBranch, ze, Se, Te), xe.container = ze;
    },
    next() {
      return xe.activeBranch && Ve(xe.activeBranch);
    },
    registerDep(ze, Se) {
      const Te = !!xe.pendingBranch;
      Te && xe.deps++;
      const D = ze.vnode.el;
      ze.asyncDep.catch((ke) => {
        handleError(ke, ze, 0);
      }).then((ke) => {
        if (ze.isUnmounted || xe.isUnmounted || xe.pendingId !== ze.suspenseId)
          return;
        ze.asyncResolved = !0;
        const { vnode: Fe } = ze;
        handleSetupResult(ze, ke, !1), D && (Fe.el = D);
        const He = !D && ze.subTree.el;
        Se(
          ze,
          Fe,
          // component may have been moved before resolve.
          // if this is not a hydration, instance.subTree will be the comment
          // placeholder.
          Me(D || ze.subTree.el),
          // anchor will not be used if this is hydration, so only need to
          // consider the comment placeholder case.
          D ? null : Ve(ze.subTree),
          xe,
          l,
          c
        ), He && B(He), updateHOCHostEl(ze, Fe.el), Te && --xe.deps === 0 && xe.resolve();
      });
    },
    unmount(ze, Se) {
      xe.isUnmounted = !0, xe.activeBranch && Ee(
        xe.activeBranch,
        n,
        ze,
        Se
      ), xe.pendingBranch && Ee(
        xe.pendingBranch,
        n,
        ze,
        Se
      );
    }
  };
  return xe;
}
function hydrateSuspense(e, r, n, s, a, t, l, o, c) {
  const _ = r.suspense = createSuspenseBoundary(
    r,
    s,
    n,
    e.parentNode,
    // eslint-disable-next-line no-restricted-globals
    document.createElement("div"),
    null,
    a,
    t,
    l,
    o,
    !0
  ), u = c(
    e,
    _.pendingBranch = r.ssContent,
    n,
    _,
    t,
    l
  );
  return _.deps === 0 && _.resolve(!1, !0), u;
}
function normalizeSuspenseChildren(e) {
  const { shapeFlag: r, children: n } = e, s = r & 32;
  e.ssContent = normalizeSuspenseSlot(
    s ? n.default : n
  ), e.ssFallback = s ? normalizeSuspenseSlot(n.fallback) : createVNode(Comment);
}
function normalizeSuspenseSlot(e) {
  let r;
  if (isFunction$1(e)) {
    const n = isBlockTreeEnabled && e._c;
    n && (e._d = !1, openBlock()), e = e(), n && (e._d = !0, r = currentBlock, closeBlock());
  }
  return isArray$1(e) && (e = filterSingleRoot(e)), e = normalizeVNode(e), r && !e.dynamicChildren && (e.dynamicChildren = r.filter((n) => n !== e)), e;
}
function queueEffectWithSuspense(e, r) {
  r && r.pendingBranch ? isArray$1(e) ? r.effects.push(...e) : r.effects.push(e) : queuePostFlushCb(e);
}
function setActiveBranch(e, r) {
  e.activeBranch = r;
  const { vnode: n, parentComponent: s } = e, a = n.el = r.el;
  s && s.subTree === n && (s.vnode.el = a, updateHOCHostEl(s, a));
}
function isVNodeSuspensible(e) {
  var r;
  return ((r = e.props) == null ? void 0 : r.suspensible) != null && e.props.suspensible !== !1;
}
const ssrContextKey = Symbol.for("v-scx"), useSSRContext = () => inject(ssrContextKey);
function watchEffect(e, r) {
  return doWatch(e, null, r);
}
function watchPostEffect(e, r) {
  return doWatch(
    e,
    null,
    { flush: "post" }
  );
}
function watchSyncEffect(e, r) {
  return doWatch(
    e,
    null,
    { flush: "sync" }
  );
}
const INITIAL_WATCHER_VALUE = {};
function watch(e, r, n) {
  return doWatch(e, r, n);
}
function doWatch(e, r, {
  immediate: n,
  deep: s,
  flush: a,
  once: t,
  onTrack: l,
  onTrigger: o
} = EMPTY_OBJ) {
  if (r && t) {
    const ze = r;
    r = (...Se) => {
      ze(...Se), xe();
    };
  }
  const c = currentInstance, _ = (ze) => s === !0 ? ze : (
    // for deep: false, only traverse root-level properties
    traverse(ze, s === !1 ? 1 : void 0)
  );
  let u, y = !1, g = !1;
  if (isRef(e) ? (u = () => e.value, y = isShallow(e)) : isReactive(e) ? (u = () => _(e), y = !0) : isArray$1(e) ? (g = !0, y = e.some((ze) => isReactive(ze) || isShallow(ze)), u = () => e.map((ze) => {
    if (isRef(ze))
      return ze.value;
    if (isReactive(ze))
      return _(ze);
    if (isFunction$1(ze))
      return callWithErrorHandling(ze, c, 2);
  })) : isFunction$1(e) ? r ? u = () => callWithErrorHandling(e, c, 2) : u = () => (Ee && Ee(), callWithAsyncErrorHandling(
    e,
    c,
    3,
    [Ve]
  )) : u = NOOP, r && s) {
    const ze = u;
    u = () => traverse(ze());
  }
  let Ee, Ve = (ze) => {
    Ee = b.onStop = () => {
      callWithErrorHandling(ze, c, 4), Ee = b.onStop = void 0;
    };
  }, Me;
  if (isInSSRComponentSetup)
    if (Ve = NOOP, r ? n && callWithAsyncErrorHandling(r, c, 3, [
      u(),
      g ? [] : void 0,
      Ve
    ]) : u(), a === "sync") {
      const ze = useSSRContext();
      Me = ze.__watcherHandles || (ze.__watcherHandles = []);
    } else
      return NOOP;
  let B = g ? new Array(e.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;
  const Pe = () => {
    if (!(!b.active || !b.dirty))
      if (r) {
        const ze = b.run();
        (s || y || (g ? ze.some((Se, Te) => hasChanged(Se, B[Te])) : hasChanged(ze, B))) && (Ee && Ee(), callWithAsyncErrorHandling(r, c, 3, [
          ze,
          // pass undefined as the old value when it's changed for the first time
          B === INITIAL_WATCHER_VALUE ? void 0 : g && B[0] === INITIAL_WATCHER_VALUE ? [] : B,
          Ve
        ]), B = ze);
      } else
        b.run();
  };
  Pe.allowRecurse = !!r;
  let k;
  a === "sync" ? k = Pe : a === "post" ? k = () => queuePostRenderEffect(Pe, c && c.suspense) : (Pe.pre = !0, c && (Pe.id = c.uid), k = () => queueJob(Pe));
  const b = new ReactiveEffect(u, NOOP, k), Le = getCurrentScope(), xe = () => {
    b.stop(), Le && remove(Le.effects, b);
  };
  return r ? n ? Pe() : B = b.run() : a === "post" ? queuePostRenderEffect(
    b.run.bind(b),
    c && c.suspense
  ) : b.run(), Me && Me.push(xe), xe;
}
function instanceWatch(e, r, n) {
  const s = this.proxy, a = isString$1(e) ? e.includes(".") ? createPathGetter(s, e) : () => s[e] : e.bind(s, s);
  let t;
  isFunction$1(r) ? t = r : (t = r.handler, n = r);
  const l = currentInstance;
  setCurrentInstance(this);
  const o = doWatch(a, t.bind(s), n);
  return l ? setCurrentInstance(l) : unsetCurrentInstance(), o;
}
function createPathGetter(e, r) {
  const n = r.split(".");
  return () => {
    let s = e;
    for (let a = 0; a < n.length && s; a++)
      s = s[n[a]];
    return s;
  };
}
function traverse(e, r, n = 0, s) {
  if (!isObject$1(e) || e.__v_skip)
    return e;
  if (r && r > 0) {
    if (n >= r)
      return e;
    n++;
  }
  if (s = s || /* @__PURE__ */ new Set(), s.has(e))
    return e;
  if (s.add(e), isRef(e))
    traverse(e.value, r, n, s);
  else if (isArray$1(e))
    for (let a = 0; a < e.length; a++)
      traverse(e[a], r, n, s);
  else if (isSet(e) || isMap(e))
    e.forEach((a) => {
      traverse(a, r, n, s);
    });
  else if (isPlainObject$1(e))
    for (const a in e)
      traverse(e[a], r, n, s);
  return e;
}
function withDirectives(e, r) {
  const n = currentRenderingInstance;
  if (n === null)
    return e;
  const s = getExposeProxy(n) || n.proxy, a = e.dirs || (e.dirs = []);
  for (let t = 0; t < r.length; t++) {
    let [l, o, c, _ = EMPTY_OBJ] = r[t];
    l && (isFunction$1(l) && (l = {
      mounted: l,
      updated: l
    }), l.deep && traverse(o), a.push({
      dir: l,
      instance: s,
      value: o,
      oldValue: void 0,
      arg: c,
      modifiers: _
    }));
  }
  return e;
}
function invokeDirectiveHook(e, r, n, s) {
  const a = e.dirs, t = r && r.dirs;
  for (let l = 0; l < a.length; l++) {
    const o = a[l];
    t && (o.oldValue = t[l].value);
    let c = o.dir[s];
    c && (pauseTracking(), callWithAsyncErrorHandling(c, n, 8, [
      e.el,
      o,
      e,
      r
    ]), resetTracking());
  }
}
const leaveCbKey = Symbol("_leaveCb"), enterCbKey$1 = Symbol("_enterCb");
function useTransitionState() {
  const e = {
    isMounted: !1,
    isLeaving: !1,
    isUnmounting: !1,
    leavingVNodes: /* @__PURE__ */ new Map()
  };
  return onMounted(() => {
    e.isMounted = !0;
  }), onBeforeUnmount(() => {
    e.isUnmounting = !0;
  }), e;
}
const TransitionHookValidator = [Function, Array], BaseTransitionPropsValidators = {
  mode: String,
  appear: Boolean,
  persisted: Boolean,
  // enter
  onBeforeEnter: TransitionHookValidator,
  onEnter: TransitionHookValidator,
  onAfterEnter: TransitionHookValidator,
  onEnterCancelled: TransitionHookValidator,
  // leave
  onBeforeLeave: TransitionHookValidator,
  onLeave: TransitionHookValidator,
  onAfterLeave: TransitionHookValidator,
  onLeaveCancelled: TransitionHookValidator,
  // appear
  onBeforeAppear: TransitionHookValidator,
  onAppear: TransitionHookValidator,
  onAfterAppear: TransitionHookValidator,
  onAppearCancelled: TransitionHookValidator
}, BaseTransitionImpl = {
  name: "BaseTransition",
  props: BaseTransitionPropsValidators,
  setup(e, { slots: r }) {
    const n = getCurrentInstance(), s = useTransitionState();
    let a;
    return () => {
      const t = r.default && getTransitionRawChildren(r.default(), !0);
      if (!t || !t.length)
        return;
      let l = t[0];
      if (t.length > 1) {
        for (const Me of t)
          if (Me.type !== Comment) {
            l = Me;
            break;
          }
      }
      const o = toRaw(e), { mode: c } = o;
      if (s.isLeaving)
        return emptyPlaceholder(l);
      const _ = getKeepAliveChild(l);
      if (!_)
        return emptyPlaceholder(l);
      const u = resolveTransitionHooks(
        _,
        o,
        s,
        n
      );
      setTransitionHooks(_, u);
      const y = n.subTree, g = y && getKeepAliveChild(y);
      let Ee = !1;
      const { getTransitionKey: Ve } = _.type;
      if (Ve) {
        const Me = Ve();
        a === void 0 ? a = Me : Me !== a && (a = Me, Ee = !0);
      }
      if (g && g.type !== Comment && (!isSameVNodeType(_, g) || Ee)) {
        const Me = resolveTransitionHooks(
          g,
          o,
          s,
          n
        );
        if (setTransitionHooks(g, Me), c === "out-in")
          return s.isLeaving = !0, Me.afterLeave = () => {
            s.isLeaving = !1, n.update.active !== !1 && (n.effect.dirty = !0, n.update());
          }, emptyPlaceholder(l);
        c === "in-out" && _.type !== Comment && (Me.delayLeave = (B, Pe, k) => {
          const b = getLeavingNodesForType(
            s,
            g
          );
          b[String(g.key)] = g, B[leaveCbKey] = () => {
            Pe(), B[leaveCbKey] = void 0, delete u.delayedLeave;
          }, u.delayedLeave = k;
        });
      }
      return l;
    };
  }
}, BaseTransition = BaseTransitionImpl;
function getLeavingNodesForType(e, r) {
  const { leavingVNodes: n } = e;
  let s = n.get(r.type);
  return s || (s = /* @__PURE__ */ Object.create(null), n.set(r.type, s)), s;
}
function resolveTransitionHooks(e, r, n, s) {
  const {
    appear: a,
    mode: t,
    persisted: l = !1,
    onBeforeEnter: o,
    onEnter: c,
    onAfterEnter: _,
    onEnterCancelled: u,
    onBeforeLeave: y,
    onLeave: g,
    onAfterLeave: Ee,
    onLeaveCancelled: Ve,
    onBeforeAppear: Me,
    onAppear: B,
    onAfterAppear: Pe,
    onAppearCancelled: k
  } = r, b = String(e.key), Le = getLeavingNodesForType(n, e), xe = (Te, D) => {
    Te && callWithAsyncErrorHandling(
      Te,
      s,
      9,
      D
    );
  }, ze = (Te, D) => {
    const ke = D[1];
    xe(Te, D), isArray$1(Te) ? Te.every((Fe) => Fe.length <= 1) && ke() : Te.length <= 1 && ke();
  }, Se = {
    mode: t,
    persisted: l,
    beforeEnter(Te) {
      let D = o;
      if (!n.isMounted)
        if (a)
          D = Me || o;
        else
          return;
      Te[leaveCbKey] && Te[leaveCbKey](
        !0
        /* cancelled */
      );
      const ke = Le[b];
      ke && isSameVNodeType(e, ke) && ke.el[leaveCbKey] && ke.el[leaveCbKey](), xe(D, [Te]);
    },
    enter(Te) {
      let D = c, ke = _, Fe = u;
      if (!n.isMounted)
        if (a)
          D = B || c, ke = Pe || _, Fe = k || u;
        else
          return;
      let He = !1;
      const We = Te[enterCbKey$1] = (Ke) => {
        He || (He = !0, Ke ? xe(Fe, [Te]) : xe(ke, [Te]), Se.delayedLeave && Se.delayedLeave(), Te[enterCbKey$1] = void 0);
      };
      D ? ze(D, [Te, We]) : We();
    },
    leave(Te, D) {
      const ke = String(e.key);
      if (Te[enterCbKey$1] && Te[enterCbKey$1](
        !0
        /* cancelled */
      ), n.isUnmounting)
        return D();
      xe(y, [Te]);
      let Fe = !1;
      const He = Te[leaveCbKey] = (We) => {
        Fe || (Fe = !0, D(), We ? xe(Ve, [Te]) : xe(Ee, [Te]), Te[leaveCbKey] = void 0, Le[ke] === e && delete Le[ke]);
      };
      Le[ke] = e, g ? ze(g, [Te, He]) : He();
    },
    clone(Te) {
      return resolveTransitionHooks(Te, r, n, s);
    }
  };
  return Se;
}
function emptyPlaceholder(e) {
  if (isKeepAlive(e))
    return e = cloneVNode(e), e.children = null, e;
}
function getKeepAliveChild(e) {
  return isKeepAlive(e) ? (
    // #7121 ensure get the child component subtree in case
    // it's been replaced during HMR
    e.children ? e.children[0] : void 0
  ) : e;
}
function setTransitionHooks(e, r) {
  e.shapeFlag & 6 && e.component ? setTransitionHooks(e.component.subTree, r) : e.shapeFlag & 128 ? (e.ssContent.transition = r.clone(e.ssContent), e.ssFallback.transition = r.clone(e.ssFallback)) : e.transition = r;
}
function getTransitionRawChildren(e, r = !1, n) {
  let s = [], a = 0;
  for (let t = 0; t < e.length; t++) {
    let l = e[t];
    const o = n == null ? l.key : String(n) + String(l.key != null ? l.key : t);
    l.type === Fragment ? (l.patchFlag & 128 && a++, s = s.concat(
      getTransitionRawChildren(l.children, r, o)
    )) : (r || l.type !== Comment) && s.push(o != null ? cloneVNode(l, { key: o }) : l);
  }
  if (a > 1)
    for (let t = 0; t < s.length; t++)
      s[t].patchFlag = -2;
  return s;
}
/*! #__NO_SIDE_EFFECTS__ */
// @__NO_SIDE_EFFECTS__
function defineComponent(e, r) {
  return isFunction$1(e) ? (
    // #8326: extend call and options.name access are considered side-effects
    // by Rollup, so we have to wrap it in a pure-annotated IIFE.
    extend$1({ name: e.name }, r, { setup: e })
  ) : e;
}
const isAsyncWrapper = (e) => !!e.type.__asyncLoader;
/*! #__NO_SIDE_EFFECTS__ */
// @__NO_SIDE_EFFECTS__
function defineAsyncComponent(e) {
  isFunction$1(e) && (e = { loader: e });
  const {
    loader: r,
    loadingComponent: n,
    errorComponent: s,
    delay: a = 200,
    timeout: t,
    // undefined = never times out
    suspensible: l = !0,
    onError: o
  } = e;
  let c = null, _, u = 0;
  const y = () => (u++, c = null, g()), g = () => {
    let Ee;
    return c || (Ee = c = r().catch((Ve) => {
      if (Ve = Ve instanceof Error ? Ve : new Error(String(Ve)), o)
        return new Promise((Me, B) => {
          o(Ve, () => Me(y()), () => B(Ve), u + 1);
        });
      throw Ve;
    }).then((Ve) => Ee !== c && c ? c : (Ve && (Ve.__esModule || Ve[Symbol.toStringTag] === "Module") && (Ve = Ve.default), _ = Ve, Ve)));
  };
  return /* @__PURE__ */ defineComponent({
    name: "AsyncComponentWrapper",
    __asyncLoader: g,
    get __asyncResolved() {
      return _;
    },
    setup() {
      const Ee = currentInstance;
      if (_)
        return () => createInnerComp(_, Ee);
      const Ve = (k) => {
        c = null, handleError(
          k,
          Ee,
          13,
          !s
        );
      };
      if (l && Ee.suspense || isInSSRComponentSetup)
        return g().then((k) => () => createInnerComp(k, Ee)).catch((k) => (Ve(k), () => s ? createVNode(s, {
          error: k
        }) : null));
      const Me = ref(!1), B = ref(), Pe = ref(!!a);
      return a && setTimeout(() => {
        Pe.value = !1;
      }, a), t != null && setTimeout(() => {
        if (!Me.value && !B.value) {
          const k = new Error(
            `Async component timed out after ${t}ms.`
          );
          Ve(k), B.value = k;
        }
      }, t), g().then(() => {
        Me.value = !0, Ee.parent && isKeepAlive(Ee.parent.vnode) && (Ee.parent.effect.dirty = !0, queueJob(Ee.parent.update));
      }).catch((k) => {
        Ve(k), B.value = k;
      }), () => {
        if (Me.value && _)
          return createInnerComp(_, Ee);
        if (B.value && s)
          return createVNode(s, {
            error: B.value
          });
        if (n && !Pe.value)
          return createVNode(n);
      };
    }
  });
}
function createInnerComp(e, r) {
  const { ref: n, props: s, children: a, ce: t } = r.vnode, l = createVNode(e, s, a);
  return l.ref = n, l.ce = t, delete r.vnode.ce, l;
}
const isKeepAlive = (e) => e.type.__isKeepAlive, KeepAliveImpl = {
  name: "KeepAlive",
  // Marker for special handling inside the renderer. We are not using a ===
  // check directly on KeepAlive in the renderer, because importing it directly
  // would prevent it from being tree-shaken.
  __isKeepAlive: !0,
  props: {
    include: [String, RegExp, Array],
    exclude: [String, RegExp, Array],
    max: [String, Number]
  },
  setup(e, { slots: r }) {
    const n = getCurrentInstance(), s = n.ctx;
    if (!s.renderer)
      return () => {
        const k = r.default && r.default();
        return k && k.length === 1 ? k[0] : k;
      };
    const a = /* @__PURE__ */ new Map(), t = /* @__PURE__ */ new Set();
    let l = null;
    const o = n.suspense, {
      renderer: {
        p: c,
        m: _,
        um: u,
        o: { createElement: y }
      }
    } = s, g = y("div");
    s.activate = (k, b, Le, xe, ze) => {
      const Se = k.component;
      _(k, b, Le, 0, o), c(
        Se.vnode,
        k,
        b,
        Le,
        Se,
        o,
        xe,
        k.slotScopeIds,
        ze
      ), queuePostRenderEffect(() => {
        Se.isDeactivated = !1, Se.a && invokeArrayFns(Se.a);
        const Te = k.props && k.props.onVnodeMounted;
        Te && invokeVNodeHook(Te, Se.parent, k);
      }, o);
    }, s.deactivate = (k) => {
      const b = k.component;
      _(k, g, null, 1, o), queuePostRenderEffect(() => {
        b.da && invokeArrayFns(b.da);
        const Le = k.props && k.props.onVnodeUnmounted;
        Le && invokeVNodeHook(Le, b.parent, k), b.isDeactivated = !0;
      }, o);
    };
    function Ee(k) {
      resetShapeFlag(k), u(k, n, o, !0);
    }
    function Ve(k) {
      a.forEach((b, Le) => {
        const xe = getComponentName(b.type);
        xe && (!k || !k(xe)) && Me(Le);
      });
    }
    function Me(k) {
      const b = a.get(k);
      !l || !isSameVNodeType(b, l) ? Ee(b) : l && resetShapeFlag(l), a.delete(k), t.delete(k);
    }
    watch(
      () => [e.include, e.exclude],
      ([k, b]) => {
        k && Ve((Le) => matches(k, Le)), b && Ve((Le) => !matches(b, Le));
      },
      // prune post-render after `current` has been updated
      { flush: "post", deep: !0 }
    );
    let B = null;
    const Pe = () => {
      B != null && a.set(B, getInnerChild(n.subTree));
    };
    return onMounted(Pe), onUpdated(Pe), onBeforeUnmount(() => {
      a.forEach((k) => {
        const { subTree: b, suspense: Le } = n, xe = getInnerChild(b);
        if (k.type === xe.type && k.key === xe.key) {
          resetShapeFlag(xe);
          const ze = xe.component.da;
          ze && queuePostRenderEffect(ze, Le);
          return;
        }
        Ee(k);
      });
    }), () => {
      if (B = null, !r.default)
        return null;
      const k = r.default(), b = k[0];
      if (k.length > 1)
        return l = null, k;
      if (!isVNode(b) || !(b.shapeFlag & 4) && !(b.shapeFlag & 128))
        return l = null, b;
      let Le = getInnerChild(b);
      const xe = Le.type, ze = getComponentName(
        isAsyncWrapper(Le) ? Le.type.__asyncResolved || {} : xe
      ), { include: Se, exclude: Te, max: D } = e;
      if (Se && (!ze || !matches(Se, ze)) || Te && ze && matches(Te, ze))
        return l = Le, b;
      const ke = Le.key == null ? xe : Le.key, Fe = a.get(ke);
      return Le.el && (Le = cloneVNode(Le), b.shapeFlag & 128 && (b.ssContent = Le)), B = ke, Fe ? (Le.el = Fe.el, Le.component = Fe.component, Le.transition && setTransitionHooks(Le, Le.transition), Le.shapeFlag |= 512, t.delete(ke), t.add(ke)) : (t.add(ke), D && t.size > parseInt(D, 10) && Me(t.values().next().value)), Le.shapeFlag |= 256, l = Le, isSuspense(b.type) ? b : Le;
    };
  }
}, KeepAlive = KeepAliveImpl;
function matches(e, r) {
  return isArray$1(e) ? e.some((n) => matches(n, r)) : isString$1(e) ? e.split(",").includes(r) : isRegExp(e) ? e.test(r) : !1;
}
function onActivated(e, r) {
  registerKeepAliveHook(e, "a", r);
}
function onDeactivated(e, r) {
  registerKeepAliveHook(e, "da", r);
}
function registerKeepAliveHook(e, r, n = currentInstance) {
  const s = e.__wdc || (e.__wdc = () => {
    let a = n;
    for (; a; ) {
      if (a.isDeactivated)
        return;
      a = a.parent;
    }
    return e();
  });
  if (injectHook(r, s, n), n) {
    let a = n.parent;
    for (; a && a.parent; )
      isKeepAlive(a.parent.vnode) && injectToKeepAliveRoot(s, r, n, a), a = a.parent;
  }
}
function injectToKeepAliveRoot(e, r, n, s) {
  const a = injectHook(
    r,
    e,
    s,
    !0
    /* prepend */
  );
  onUnmounted(() => {
    remove(s[r], a);
  }, n);
}
function resetShapeFlag(e) {
  e.shapeFlag &= -257, e.shapeFlag &= -513;
}
function getInnerChild(e) {
  return e.shapeFlag & 128 ? e.ssContent : e;
}
function injectHook(e, r, n = currentInstance, s = !1) {
  if (n) {
    const a = n[e] || (n[e] = []), t = r.__weh || (r.__weh = (...l) => {
      if (n.isUnmounted)
        return;
      pauseTracking(), setCurrentInstance(n);
      const o = callWithAsyncErrorHandling(r, n, e, l);
      return unsetCurrentInstance(), resetTracking(), o;
    });
    return s ? a.unshift(t) : a.push(t), t;
  }
}
const createHook = (e) => (r, n = currentInstance) => (
  // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)
  (!isInSSRComponentSetup || e === "sp") && injectHook(e, (...s) => r(...s), n)
), onBeforeMount = createHook("bm"), onMounted = createHook("m"), onBeforeUpdate = createHook("bu"), onUpdated = createHook("u"), onBeforeUnmount = createHook("bum"), onUnmounted = createHook("um"), onServerPrefetch = createHook("sp"), onRenderTriggered = createHook(
  "rtg"
), onRenderTracked = createHook(
  "rtc"
);
function onErrorCaptured(e, r = currentInstance) {
  injectHook("ec", e, r);
}
function renderList(e, r, n, s) {
  let a;
  const t = n && n[s];
  if (isArray$1(e) || isString$1(e)) {
    a = new Array(e.length);
    for (let l = 0, o = e.length; l < o; l++)
      a[l] = r(e[l], l, void 0, t && t[l]);
  } else if (typeof e == "number") {
    a = new Array(e);
    for (let l = 0; l < e; l++)
      a[l] = r(l + 1, l, void 0, t && t[l]);
  } else if (isObject$1(e))
    if (e[Symbol.iterator])
      a = Array.from(
        e,
        (l, o) => r(l, o, void 0, t && t[o])
      );
    else {
      const l = Object.keys(e);
      a = new Array(l.length);
      for (let o = 0, c = l.length; o < c; o++) {
        const _ = l[o];
        a[o] = r(e[_], _, o, t && t[o]);
      }
    }
  else
    a = [];
  return n && (n[s] = a), a;
}
function createSlots(e, r) {
  for (let n = 0; n < r.length; n++) {
    const s = r[n];
    if (isArray$1(s))
      for (let a = 0; a < s.length; a++)
        e[s[a].name] = s[a].fn;
    else
      s && (e[s.name] = s.key ? (...a) => {
        const t = s.fn(...a);
        return t && (t.key = s.key), t;
      } : s.fn);
  }
  return e;
}
function renderSlot(e, r, n = {}, s, a) {
  if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE)
    return r !== "default" && (n.name = r), createVNode("slot", n, s && s());
  let t = e[r];
  t && t._c && (t._d = !1), openBlock();
  const l = t && ensureValidVNode(t(n)), o = createBlock(
    Fragment,
    {
      key: n.key || // slot content array of a dynamic conditional slot may have a branch
      // key attached in the `createSlots` helper, respect that
      l && l.key || `_${r}`
    },
    l || (s ? s() : []),
    l && e._ === 1 ? 64 : -2
  );
  return !a && o.scopeId && (o.slotScopeIds = [o.scopeId + "-s"]), t && t._c && (t._d = !0), o;
}
function ensureValidVNode(e) {
  return e.some((r) => isVNode(r) ? !(r.type === Comment || r.type === Fragment && !ensureValidVNode(r.children)) : !0) ? e : null;
}
function toHandlers(e, r) {
  const n = {};
  for (const s in e)
    n[r && /[A-Z]/.test(s) ? `on:${s}` : toHandlerKey(s)] = e[s];
  return n;
}
const getPublicInstance = (e) => e ? isStatefulComponent(e) ? getExposeProxy(e) || e.proxy : getPublicInstance(e.parent) : null, publicPropertiesMap = (
  // Move PURE marker to new line to workaround compiler discarding it
  // due to type annotation
  /* @__PURE__ */ extend$1(/* @__PURE__ */ Object.create(null), {
    $: (e) => e,
    $el: (e) => e.vnode.el,
    $data: (e) => e.data,
    $props: (e) => e.props,
    $attrs: (e) => e.attrs,
    $slots: (e) => e.slots,
    $refs: (e) => e.refs,
    $parent: (e) => getPublicInstance(e.parent),
    $root: (e) => getPublicInstance(e.root),
    $emit: (e) => e.emit,
    $options: (e) => resolveMergedOptions(e),
    $forceUpdate: (e) => e.f || (e.f = () => {
      e.effect.dirty = !0, queueJob(e.update);
    }),
    $nextTick: (e) => e.n || (e.n = nextTick.bind(e.proxy)),
    $watch: (e) => instanceWatch.bind(e)
  })
), hasSetupBinding = (e, r) => e !== EMPTY_OBJ && !e.__isScriptSetup && hasOwn(e, r), PublicInstanceProxyHandlers = {
  get({ _: e }, r) {
    const { ctx: n, setupState: s, data: a, props: t, accessCache: l, type: o, appContext: c } = e;
    let _;
    if (r[0] !== "$") {
      const Ee = l[r];
      if (Ee !== void 0)
        switch (Ee) {
          case 1:
            return s[r];
          case 2:
            return a[r];
          case 4:
            return n[r];
          case 3:
            return t[r];
        }
      else {
        if (hasSetupBinding(s, r))
          return l[r] = 1, s[r];
        if (a !== EMPTY_OBJ && hasOwn(a, r))
          return l[r] = 2, a[r];
        if (
          // only cache other properties when instance has declared (thus stable)
          // props
          (_ = e.propsOptions[0]) && hasOwn(_, r)
        )
          return l[r] = 3, t[r];
        if (n !== EMPTY_OBJ && hasOwn(n, r))
          return l[r] = 4, n[r];
        shouldCacheAccess && (l[r] = 0);
      }
    }
    const u = publicPropertiesMap[r];
    let y, g;
    if (u)
      return r === "$attrs" && track(e, "get", r), u(e);
    if (
      // css module (injected by vue-loader)
      (y = o.__cssModules) && (y = y[r])
    )
      return y;
    if (n !== EMPTY_OBJ && hasOwn(n, r))
      return l[r] = 4, n[r];
    if (
      // global properties
      g = c.config.globalProperties, hasOwn(g, r)
    )
      return g[r];
  },
  set({ _: e }, r, n) {
    const { data: s, setupState: a, ctx: t } = e;
    return hasSetupBinding(a, r) ? (a[r] = n, !0) : s !== EMPTY_OBJ && hasOwn(s, r) ? (s[r] = n, !0) : hasOwn(e.props, r) || r[0] === "$" && r.slice(1) in e ? !1 : (t[r] = n, !0);
  },
  has({
    _: { data: e, setupState: r, accessCache: n, ctx: s, appContext: a, propsOptions: t }
  }, l) {
    let o;
    return !!n[l] || e !== EMPTY_OBJ && hasOwn(e, l) || hasSetupBinding(r, l) || (o = t[0]) && hasOwn(o, l) || hasOwn(s, l) || hasOwn(publicPropertiesMap, l) || hasOwn(a.config.globalProperties, l);
  },
  defineProperty(e, r, n) {
    return n.get != null ? e._.accessCache[r] = 0 : hasOwn(n, "value") && this.set(e, r, n.value, null), Reflect.defineProperty(e, r, n);
  }
}, RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ extend$1(
  {},
  PublicInstanceProxyHandlers,
  {
    get(e, r) {
      if (r !== Symbol.unscopables)
        return PublicInstanceProxyHandlers.get(e, r, e);
    },
    has(e, r) {
      return r[0] !== "_" && !isGloballyAllowed(r);
    }
  }
);
function defineProps() {
  return null;
}
function defineEmits() {
  return null;
}
function defineExpose(e) {
}
function defineOptions(e) {
}
function defineSlots() {
  return null;
}
function defineModel() {
}
function withDefaults(e, r) {
  return null;
}
function useSlots() {
  return getContext().slots;
}
function useAttrs() {
  return getContext().attrs;
}
function useModel(e, r, n = EMPTY_OBJ) {
  const s = getCurrentInstance(), a = camelize(r), t = hyphenate(r), l = customRef((c, _) => {
    let u;
    return watchSyncEffect(() => {
      const y = e[r];
      hasChanged(u, y) && (u = y, _());
    }), {
      get() {
        return c(), n.get ? n.get(u) : u;
      },
      set(y) {
        const g = s.vnode.props;
        !(g && // check if parent has passed v-model
        (r in g || a in g || t in g) && (`onUpdate:${r}` in g || `onUpdate:${a}` in g || `onUpdate:${t}` in g)) && hasChanged(y, u) && (u = y, _()), s.emit(`update:${r}`, n.set ? n.set(y) : y);
      }
    };
  }), o = r === "modelValue" ? "modelModifiers" : `${r}Modifiers`;
  return l[Symbol.iterator] = () => {
    let c = 0;
    return {
      next() {
        return c < 2 ? { value: c++ ? e[o] || {} : l, done: !1 } : { done: !0 };
      }
    };
  }, l;
}
function getContext() {
  const e = getCurrentInstance();
  return e.setupContext || (e.setupContext = createSetupContext(e));
}
function normalizePropsOrEmits(e) {
  return isArray$1(e) ? e.reduce(
    (r, n) => (r[n] = null, r),
    {}
  ) : e;
}
function mergeDefaults(e, r) {
  const n = normalizePropsOrEmits(e);
  for (const s in r) {
    if (s.startsWith("__skip"))
      continue;
    let a = n[s];
    a ? isArray$1(a) || isFunction$1(a) ? a = n[s] = { type: a, default: r[s] } : a.default = r[s] : a === null && (a = n[s] = { default: r[s] }), a && r[`__skip_${s}`] && (a.skipFactory = !0);
  }
  return n;
}
function mergeModels(e, r) {
  return !e || !r ? e || r : isArray$1(e) && isArray$1(r) ? e.concat(r) : extend$1({}, normalizePropsOrEmits(e), normalizePropsOrEmits(r));
}
function createPropsRestProxy(e, r) {
  const n = {};
  for (const s in e)
    r.includes(s) || Object.defineProperty(n, s, {
      enumerable: !0,
      get: () => e[s]
    });
  return n;
}
function withAsyncContext(e) {
  const r = getCurrentInstance();
  let n = e();
  return unsetCurrentInstance(), isPromise(n) && (n = n.catch((s) => {
    throw setCurrentInstance(r), s;
  })), [n, () => setCurrentInstance(r)];
}
let shouldCacheAccess = !0;
function applyOptions(e) {
  const r = resolveMergedOptions(e), n = e.proxy, s = e.ctx;
  shouldCacheAccess = !1, r.beforeCreate && callHook$1(r.beforeCreate, e, "bc");
  const {
    // state
    data: a,
    computed: t,
    methods: l,
    watch: o,
    provide: c,
    inject: _,
    // lifecycle
    created: u,
    beforeMount: y,
    mounted: g,
    beforeUpdate: Ee,
    updated: Ve,
    activated: Me,
    deactivated: B,
    beforeDestroy: Pe,
    beforeUnmount: k,
    destroyed: b,
    unmounted: Le,
    render: xe,
    renderTracked: ze,
    renderTriggered: Se,
    errorCaptured: Te,
    serverPrefetch: D,
    // public API
    expose: ke,
    inheritAttrs: Fe,
    // assets
    components: He,
    directives: We,
    filters: Ke
  } = r;
  if (_ && resolveInjections(_, s, null), l)
    for (const Re in l) {
      const Ie = l[Re];
      isFunction$1(Ie) && (s[Re] = Ie.bind(n));
    }
  if (a) {
    const Re = a.call(n, n);
    isObject$1(Re) && (e.data = reactive(Re));
  }
  if (shouldCacheAccess = !0, t)
    for (const Re in t) {
      const Ie = t[Re], O = isFunction$1(Ie) ? Ie.bind(n, n) : isFunction$1(Ie.get) ? Ie.get.bind(n, n) : NOOP, Ue = !isFunction$1(Ie) && isFunction$1(Ie.set) ? Ie.set.bind(n) : NOOP, $e = computed({
        get: O,
        set: Ue
      });
      Object.defineProperty(s, Re, {
        enumerable: !0,
        configurable: !0,
        get: () => $e.value,
        set: (Ze) => $e.value = Ze
      });
    }
  if (o)
    for (const Re in o)
      createWatcher(o[Re], s, n, Re);
  if (c) {
    const Re = isFunction$1(c) ? c.call(n) : c;
    Reflect.ownKeys(Re).forEach((Ie) => {
      provide(Ie, Re[Ie]);
    });
  }
  u && callHook$1(u, e, "c");
  function De(Re, Ie) {
    isArray$1(Ie) ? Ie.forEach((O) => Re(O.bind(n))) : Ie && Re(Ie.bind(n));
  }
  if (De(onBeforeMount, y), De(onMounted, g), De(onBeforeUpdate, Ee), De(onUpdated, Ve), De(onActivated, Me), De(onDeactivated, B), De(onErrorCaptured, Te), De(onRenderTracked, ze), De(onRenderTriggered, Se), De(onBeforeUnmount, k), De(onUnmounted, Le), De(onServerPrefetch, D), isArray$1(ke))
    if (ke.length) {
      const Re = e.exposed || (e.exposed = {});
      ke.forEach((Ie) => {
        Object.defineProperty(Re, Ie, {
          get: () => n[Ie],
          set: (O) => n[Ie] = O
        });
      });
    } else
      e.exposed || (e.exposed = {});
  xe && e.render === NOOP && (e.render = xe), Fe != null && (e.inheritAttrs = Fe), He && (e.components = He), We && (e.directives = We);
}
function resolveInjections(e, r, n = NOOP) {
  isArray$1(e) && (e = normalizeInject(e));
  for (const s in e) {
    const a = e[s];
    let t;
    isObject$1(a) ? "default" in a ? t = inject(
      a.from || s,
      a.default,
      !0
    ) : t = inject(a.from || s) : t = inject(a), isRef(t) ? Object.defineProperty(r, s, {
      enumerable: !0,
      configurable: !0,
      get: () => t.value,
      set: (l) => t.value = l
    }) : r[s] = t;
  }
}
function callHook$1(e, r, n) {
  callWithAsyncErrorHandling(
    isArray$1(e) ? e.map((s) => s.bind(r.proxy)) : e.bind(r.proxy),
    r,
    n
  );
}
function createWatcher(e, r, n, s) {
  const a = s.includes(".") ? createPathGetter(n, s) : () => n[s];
  if (isString$1(e)) {
    const t = r[e];
    isFunction$1(t) && watch(a, t);
  } else if (isFunction$1(e))
    watch(a, e.bind(n));
  else if (isObject$1(e))
    if (isArray$1(e))
      e.forEach((t) => createWatcher(t, r, n, s));
    else {
      const t = isFunction$1(e.handler) ? e.handler.bind(n) : r[e.handler];
      isFunction$1(t) && watch(a, t, e);
    }
}
function resolveMergedOptions(e) {
  const r = e.type, { mixins: n, extends: s } = r, {
    mixins: a,
    optionsCache: t,
    config: { optionMergeStrategies: l }
  } = e.appContext, o = t.get(r);
  let c;
  return o ? c = o : !a.length && !n && !s ? c = r : (c = {}, a.length && a.forEach(
    (_) => mergeOptions(c, _, l, !0)
  ), mergeOptions(c, r, l)), isObject$1(r) && t.set(r, c), c;
}
function mergeOptions(e, r, n, s = !1) {
  const { mixins: a, extends: t } = r;
  t && mergeOptions(e, t, n, !0), a && a.forEach(
    (l) => mergeOptions(e, l, n, !0)
  );
  for (const l in r)
    if (!(s && l === "expose")) {
      const o = internalOptionMergeStrats[l] || n && n[l];
      e[l] = o ? o(e[l], r[l]) : r[l];
    }
  return e;
}
const internalOptionMergeStrats = {
  data: mergeDataFn,
  props: mergeEmitsOrPropsOptions,
  emits: mergeEmitsOrPropsOptions,
  // objects
  methods: mergeObjectOptions,
  computed: mergeObjectOptions,
  // lifecycle
  beforeCreate: mergeAsArray,
  created: mergeAsArray,
  beforeMount: mergeAsArray,
  mounted: mergeAsArray,
  beforeUpdate: mergeAsArray,
  updated: mergeAsArray,
  beforeDestroy: mergeAsArray,
  beforeUnmount: mergeAsArray,
  destroyed: mergeAsArray,
  unmounted: mergeAsArray,
  activated: mergeAsArray,
  deactivated: mergeAsArray,
  errorCaptured: mergeAsArray,
  serverPrefetch: mergeAsArray,
  // assets
  components: mergeObjectOptions,
  directives: mergeObjectOptions,
  // watch
  watch: mergeWatchOptions,
  // provide / inject
  provide: mergeDataFn,
  inject: mergeInject
};
function mergeDataFn(e, r) {
  return r ? e ? function() {
    return extend$1(
      isFunction$1(e) ? e.call(this, this) : e,
      isFunction$1(r) ? r.call(this, this) : r
    );
  } : r : e;
}
function mergeInject(e, r) {
  return mergeObjectOptions(normalizeInject(e), normalizeInject(r));
}
function normalizeInject(e) {
  if (isArray$1(e)) {
    const r = {};
    for (let n = 0; n < e.length; n++)
      r[e[n]] = e[n];
    return r;
  }
  return e;
}
function mergeAsArray(e, r) {
  return e ? [...new Set([].concat(e, r))] : r;
}
function mergeObjectOptions(e, r) {
  return e ? extend$1(/* @__PURE__ */ Object.create(null), e, r) : r;
}
function mergeEmitsOrPropsOptions(e, r) {
  return e ? isArray$1(e) && isArray$1(r) ? [.../* @__PURE__ */ new Set([...e, ...r])] : extend$1(
    /* @__PURE__ */ Object.create(null),
    normalizePropsOrEmits(e),
    normalizePropsOrEmits(r ?? {})
  ) : r;
}
function mergeWatchOptions(e, r) {
  if (!e)
    return r;
  if (!r)
    return e;
  const n = extend$1(/* @__PURE__ */ Object.create(null), e);
  for (const s in r)
    n[s] = mergeAsArray(e[s], r[s]);
  return n;
}
function createAppContext() {
  return {
    app: null,
    config: {
      isNativeTag: NO,
      performance: !1,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {}
    },
    mixins: [],
    components: {},
    directives: {},
    provides: /* @__PURE__ */ Object.create(null),
    optionsCache: /* @__PURE__ */ new WeakMap(),
    propsCache: /* @__PURE__ */ new WeakMap(),
    emitsCache: /* @__PURE__ */ new WeakMap()
  };
}
let uid$1 = 0;
function createAppAPI(e, r) {
  return function(s, a = null) {
    isFunction$1(s) || (s = extend$1({}, s)), a != null && !isObject$1(a) && (a = null);
    const t = createAppContext(), l = /* @__PURE__ */ new WeakSet();
    let o = !1;
    const c = t.app = {
      _uid: uid$1++,
      _component: s,
      _props: a,
      _container: null,
      _context: t,
      _instance: null,
      version,
      get config() {
        return t.config;
      },
      set config(_) {
      },
      use(_, ...u) {
        return l.has(_) || (_ && isFunction$1(_.install) ? (l.add(_), _.install(c, ...u)) : isFunction$1(_) && (l.add(_), _(c, ...u))), c;
      },
      mixin(_) {
        return t.mixins.includes(_) || t.mixins.push(_), c;
      },
      component(_, u) {
        return u ? (t.components[_] = u, c) : t.components[_];
      },
      directive(_, u) {
        return u ? (t.directives[_] = u, c) : t.directives[_];
      },
      mount(_, u, y) {
        if (!o) {
          const g = createVNode(s, a);
          return g.appContext = t, y === !0 ? y = "svg" : y === !1 && (y = void 0), u && r ? r(g, _) : e(g, _, y), o = !0, c._container = _, _.__vue_app__ = c, getExposeProxy(g.component) || g.component.proxy;
        }
      },
      unmount() {
        o && (e(null, c._container), delete c._container.__vue_app__);
      },
      provide(_, u) {
        return t.provides[_] = u, c;
      },
      runWithContext(_) {
        currentApp = c;
        try {
          return _();
        } finally {
          currentApp = null;
        }
      }
    };
    return c;
  };
}
let currentApp = null;
function provide(e, r) {
  if (currentInstance) {
    let n = currentInstance.provides;
    const s = currentInstance.parent && currentInstance.parent.provides;
    s === n && (n = currentInstance.provides = Object.create(s)), n[e] = r;
  }
}
function inject(e, r, n = !1) {
  const s = currentInstance || currentRenderingInstance;
  if (s || currentApp) {
    const a = s ? s.parent == null ? s.vnode.appContext && s.vnode.appContext.provides : s.parent.provides : currentApp._context.provides;
    if (a && e in a)
      return a[e];
    if (arguments.length > 1)
      return n && isFunction$1(r) ? r.call(s && s.proxy) : r;
  }
}
function hasInjectionContext() {
  return !!(currentInstance || currentRenderingInstance || currentApp);
}
function initProps(e, r, n, s = !1) {
  const a = {}, t = {};
  def(t, InternalObjectKey, 1), e.propsDefaults = /* @__PURE__ */ Object.create(null), setFullProps(e, r, a, t);
  for (const l in e.propsOptions[0])
    l in a || (a[l] = void 0);
  n ? e.props = s ? a : shallowReactive(a) : e.type.props ? e.props = a : e.props = t, e.attrs = t;
}
function updateProps(e, r, n, s) {
  const {
    props: a,
    attrs: t,
    vnode: { patchFlag: l }
  } = e, o = toRaw(a), [c] = e.propsOptions;
  let _ = !1;
  if (
    // always force full diff in dev
    // - #1942 if hmr is enabled with sfc component
    // - vite#872 non-sfc component used by sfc component
    (s || l > 0) && !(l & 16)
  ) {
    if (l & 8) {
      const u = e.vnode.dynamicProps;
      for (let y = 0; y < u.length; y++) {
        let g = u[y];
        if (isEmitListener(e.emitsOptions, g))
          continue;
        const Ee = r[g];
        if (c)
          if (hasOwn(t, g))
            Ee !== t[g] && (t[g] = Ee, _ = !0);
          else {
            const Ve = camelize(g);
            a[Ve] = resolvePropValue(
              c,
              o,
              Ve,
              Ee,
              e,
              !1
            );
          }
        else
          Ee !== t[g] && (t[g] = Ee, _ = !0);
      }
    }
  } else {
    setFullProps(e, r, a, t) && (_ = !0);
    let u;
    for (const y in o)
      (!r || // for camelCase
      !hasOwn(r, y) && // it's possible the original props was passed in as kebab-case
      // and converted to camelCase (#955)
      ((u = hyphenate(y)) === y || !hasOwn(r, u))) && (c ? n && // for camelCase
      (n[y] !== void 0 || // for kebab-case
      n[u] !== void 0) && (a[y] = resolvePropValue(
        c,
        o,
        y,
        void 0,
        e,
        !0
      )) : delete a[y]);
    if (t !== o)
      for (const y in t)
        (!r || !hasOwn(r, y)) && (delete t[y], _ = !0);
  }
  _ && trigger(e, "set", "$attrs");
}
function setFullProps(e, r, n, s) {
  const [a, t] = e.propsOptions;
  let l = !1, o;
  if (r)
    for (let c in r) {
      if (isReservedProp(c))
        continue;
      const _ = r[c];
      let u;
      a && hasOwn(a, u = camelize(c)) ? !t || !t.includes(u) ? n[u] = _ : (o || (o = {}))[u] = _ : isEmitListener(e.emitsOptions, c) || (!(c in s) || _ !== s[c]) && (s[c] = _, l = !0);
    }
  if (t) {
    const c = toRaw(n), _ = o || EMPTY_OBJ;
    for (let u = 0; u < t.length; u++) {
      const y = t[u];
      n[y] = resolvePropValue(
        a,
        c,
        y,
        _[y],
        e,
        !hasOwn(_, y)
      );
    }
  }
  return l;
}
function resolvePropValue(e, r, n, s, a, t) {
  const l = e[n];
  if (l != null) {
    const o = hasOwn(l, "default");
    if (o && s === void 0) {
      const c = l.default;
      if (l.type !== Function && !l.skipFactory && isFunction$1(c)) {
        const { propsDefaults: _ } = a;
        n in _ ? s = _[n] : (setCurrentInstance(a), s = _[n] = c.call(
          null,
          r
        ), unsetCurrentInstance());
      } else
        s = c;
    }
    l[
      0
      /* shouldCast */
    ] && (t && !o ? s = !1 : l[
      1
      /* shouldCastTrue */
    ] && (s === "" || s === hyphenate(n)) && (s = !0));
  }
  return s;
}
function normalizePropsOptions(e, r, n = !1) {
  const s = r.propsCache, a = s.get(e);
  if (a)
    return a;
  const t = e.props, l = {}, o = [];
  let c = !1;
  if (!isFunction$1(e)) {
    const u = (y) => {
      c = !0;
      const [g, Ee] = normalizePropsOptions(y, r, !0);
      extend$1(l, g), Ee && o.push(...Ee);
    };
    !n && r.mixins.length && r.mixins.forEach(u), e.extends && u(e.extends), e.mixins && e.mixins.forEach(u);
  }
  if (!t && !c)
    return isObject$1(e) && s.set(e, EMPTY_ARR), EMPTY_ARR;
  if (isArray$1(t))
    for (let u = 0; u < t.length; u++) {
      const y = camelize(t[u]);
      validatePropName(y) && (l[y] = EMPTY_OBJ);
    }
  else if (t)
    for (const u in t) {
      const y = camelize(u);
      if (validatePropName(y)) {
        const g = t[u], Ee = l[y] = isArray$1(g) || isFunction$1(g) ? { type: g } : extend$1({}, g);
        if (Ee) {
          const Ve = getTypeIndex(Boolean, Ee.type), Me = getTypeIndex(String, Ee.type);
          Ee[
            0
            /* shouldCast */
          ] = Ve > -1, Ee[
            1
            /* shouldCastTrue */
          ] = Me < 0 || Ve < Me, (Ve > -1 || hasOwn(Ee, "default")) && o.push(y);
        }
      }
    }
  const _ = [l, o];
  return isObject$1(e) && s.set(e, _), _;
}
function validatePropName(e) {
  return e[0] !== "$";
}
function getType(e) {
  const r = e && e.toString().match(/^\s*(function|class) (\w+)/);
  return r ? r[2] : e === null ? "null" : "";
}
function isSameType(e, r) {
  return getType(e) === getType(r);
}
function getTypeIndex(e, r) {
  return isArray$1(r) ? r.findIndex((n) => isSameType(n, e)) : isFunction$1(r) && isSameType(r, e) ? 0 : -1;
}
const isInternalKey = (e) => e[0] === "_" || e === "$stable", normalizeSlotValue = (e) => isArray$1(e) ? e.map(normalizeVNode) : [normalizeVNode(e)], normalizeSlot = (e, r, n) => {
  if (r._n)
    return r;
  const s = withCtx((...a) => normalizeSlotValue(r(...a)), n);
  return s._c = !1, s;
}, normalizeObjectSlots = (e, r, n) => {
  const s = e._ctx;
  for (const a in e) {
    if (isInternalKey(a))
      continue;
    const t = e[a];
    if (isFunction$1(t))
      r[a] = normalizeSlot(a, t, s);
    else if (t != null) {
      const l = normalizeSlotValue(t);
      r[a] = () => l;
    }
  }
}, normalizeVNodeSlots = (e, r) => {
  const n = normalizeSlotValue(r);
  e.slots.default = () => n;
}, initSlots = (e, r) => {
  if (e.vnode.shapeFlag & 32) {
    const n = r._;
    n ? (e.slots = toRaw(r), def(r, "_", n)) : normalizeObjectSlots(
      r,
      e.slots = {}
    );
  } else
    e.slots = {}, r && normalizeVNodeSlots(e, r);
  def(e.slots, InternalObjectKey, 1);
}, updateSlots = (e, r, n) => {
  const { vnode: s, slots: a } = e;
  let t = !0, l = EMPTY_OBJ;
  if (s.shapeFlag & 32) {
    const o = r._;
    o ? n && o === 1 ? t = !1 : (extend$1(a, r), !n && o === 1 && delete a._) : (t = !r.$stable, normalizeObjectSlots(r, a)), l = r;
  } else
    r && (normalizeVNodeSlots(e, r), l = { default: 1 });
  if (t)
    for (const o in a)
      !isInternalKey(o) && l[o] == null && delete a[o];
};
function setRef(e, r, n, s, a = !1) {
  if (isArray$1(e)) {
    e.forEach(
      (g, Ee) => setRef(
        g,
        r && (isArray$1(r) ? r[Ee] : r),
        n,
        s,
        a
      )
    );
    return;
  }
  if (isAsyncWrapper(s) && !a)
    return;
  const t = s.shapeFlag & 4 ? getExposeProxy(s.component) || s.component.proxy : s.el, l = a ? null : t, { i: o, r: c } = e, _ = r && r.r, u = o.refs === EMPTY_OBJ ? o.refs = {} : o.refs, y = o.setupState;
  if (_ != null && _ !== c && (isString$1(_) ? (u[_] = null, hasOwn(y, _) && (y[_] = null)) : isRef(_) && (_.value = null)), isFunction$1(c))
    callWithErrorHandling(c, o, 12, [l, u]);
  else {
    const g = isString$1(c), Ee = isRef(c);
    if (g || Ee) {
      const Ve = () => {
        if (e.f) {
          const Me = g ? hasOwn(y, c) ? y[c] : u[c] : c.value;
          a ? isArray$1(Me) && remove(Me, t) : isArray$1(Me) ? Me.includes(t) || Me.push(t) : g ? (u[c] = [t], hasOwn(y, c) && (y[c] = u[c])) : (c.value = [t], e.k && (u[e.k] = c.value));
        } else
          g ? (u[c] = l, hasOwn(y, c) && (y[c] = l)) : Ee && (c.value = l, e.k && (u[e.k] = l));
      };
      l ? (Ve.id = -1, queuePostRenderEffect(Ve, n)) : Ve();
    }
  }
}
let hasMismatch = !1;
const isSVGContainer = (e) => e.namespaceURI.includes("svg") && e.tagName !== "foreignObject", isMathMLContainer = (e) => e.namespaceURI.includes("MathML"), getContainerType = (e) => {
  if (isSVGContainer(e))
    return "svg";
  if (isMathMLContainer(e))
    return "mathml";
}, isComment = (e) => e.nodeType === 8;
function createHydrationFunctions(e) {
  const {
    mt: r,
    p: n,
    o: {
      patchProp: s,
      createText: a,
      nextSibling: t,
      parentNode: l,
      remove: o,
      insert: c,
      createComment: _
    }
  } = e, u = (b, Le) => {
    if (!Le.hasChildNodes()) {
      n(null, b, Le), flushPostFlushCbs(), Le._vnode = b;
      return;
    }
    hasMismatch = !1, y(Le.firstChild, b, null, null, null), flushPostFlushCbs(), Le._vnode = b, hasMismatch && console.error("Hydration completed but contains mismatches.");
  }, y = (b, Le, xe, ze, Se, Te = !1) => {
    const D = isComment(b) && b.data === "[", ke = () => Me(
      b,
      Le,
      xe,
      ze,
      Se,
      D
    ), { type: Fe, ref: He, shapeFlag: We, patchFlag: Ke } = Le;
    let $ = b.nodeType;
    Le.el = b, Ke === -2 && (Te = !1, Le.dynamicChildren = null);
    let De = null;
    switch (Fe) {
      case Text:
        $ !== 3 ? Le.children === "" ? (c(Le.el = a(""), l(b), b), De = b) : De = ke() : (b.data !== Le.children && (hasMismatch = !0, b.data = Le.children), De = t(b));
        break;
      case Comment:
        k(b) ? (De = t(b), Pe(
          Le.el = b.content.firstChild,
          b,
          xe
        )) : $ !== 8 || D ? De = ke() : De = t(b);
        break;
      case Static:
        if (D && (b = t(b), $ = b.nodeType), $ === 1 || $ === 3) {
          De = b;
          const Re = !Le.children.length;
          for (let Ie = 0; Ie < Le.staticCount; Ie++)
            Re && (Le.children += De.nodeType === 1 ? De.outerHTML : De.data), Ie === Le.staticCount - 1 && (Le.anchor = De), De = t(De);
          return D ? t(De) : De;
        } else
          ke();
        break;
      case Fragment:
        D ? De = Ve(
          b,
          Le,
          xe,
          ze,
          Se,
          Te
        ) : De = ke();
        break;
      default:
        if (We & 1)
          ($ !== 1 || Le.type.toLowerCase() !== b.tagName.toLowerCase()) && !k(b) ? De = ke() : De = g(
            b,
            Le,
            xe,
            ze,
            Se,
            Te
          );
        else if (We & 6) {
          Le.slotScopeIds = Se;
          const Re = l(b);
          if (D ? De = B(b) : isComment(b) && b.data === "teleport start" ? De = B(b, b.data, "teleport end") : De = t(b), r(
            Le,
            Re,
            null,
            xe,
            ze,
            getContainerType(Re),
            Te
          ), isAsyncWrapper(Le)) {
            let Ie;
            D ? (Ie = createVNode(Fragment), Ie.anchor = De ? De.previousSibling : Re.lastChild) : Ie = b.nodeType === 3 ? createTextVNode("") : createVNode("div"), Ie.el = b, Le.component.subTree = Ie;
          }
        } else
          We & 64 ? $ !== 8 ? De = ke() : De = Le.type.hydrate(
            b,
            Le,
            xe,
            ze,
            Se,
            Te,
            e,
            Ee
          ) : We & 128 && (De = Le.type.hydrate(
            b,
            Le,
            xe,
            ze,
            getContainerType(l(b)),
            Se,
            Te,
            e,
            y
          ));
    }
    return He != null && setRef(He, null, ze, Le), De;
  }, g = (b, Le, xe, ze, Se, Te) => {
    Te = Te || !!Le.dynamicChildren;
    const { type: D, props: ke, patchFlag: Fe, shapeFlag: He, dirs: We, transition: Ke } = Le, $ = D === "input" || D === "option";
    if ($ || Fe !== -1) {
      We && invokeDirectiveHook(Le, null, xe, "created");
      let De = !1;
      if (k(b)) {
        De = needTransition(ze, Ke) && xe && xe.vnode.props && xe.vnode.props.appear;
        const Ie = b.content.firstChild;
        De && Ke.beforeEnter(Ie), Pe(Ie, b, xe), Le.el = b = Ie;
      }
      if (He & 16 && // skip if element has innerHTML / textContent
      !(ke && (ke.innerHTML || ke.textContent))) {
        let Ie = Ee(
          b.firstChild,
          Le,
          b,
          xe,
          ze,
          Se,
          Te
        );
        for (; Ie; ) {
          hasMismatch = !0;
          const O = Ie;
          Ie = Ie.nextSibling, o(O);
        }
      } else
        He & 8 && b.textContent !== Le.children && (hasMismatch = !0, b.textContent = Le.children);
      if (ke)
        if ($ || !Te || Fe & 48)
          for (const Ie in ke)
            ($ && (Ie.endsWith("value") || Ie === "indeterminate") || isOn(Ie) && !isReservedProp(Ie) || // force hydrate v-bind with .prop modifiers
            Ie[0] === ".") && s(
              b,
              Ie,
              null,
              ke[Ie],
              void 0,
              void 0,
              xe
            );
        else
          ke.onClick && s(
            b,
            "onClick",
            null,
            ke.onClick,
            void 0,
            void 0,
            xe
          );
      let Re;
      (Re = ke && ke.onVnodeBeforeMount) && invokeVNodeHook(Re, xe, Le), We && invokeDirectiveHook(Le, null, xe, "beforeMount"), ((Re = ke && ke.onVnodeMounted) || We || De) && queueEffectWithSuspense(() => {
        Re && invokeVNodeHook(Re, xe, Le), De && Ke.enter(b), We && invokeDirectiveHook(Le, null, xe, "mounted");
      }, ze);
    }
    return b.nextSibling;
  }, Ee = (b, Le, xe, ze, Se, Te, D) => {
    D = D || !!Le.dynamicChildren;
    const ke = Le.children, Fe = ke.length;
    for (let He = 0; He < Fe; He++) {
      const We = D ? ke[He] : ke[He] = normalizeVNode(ke[He]);
      if (b)
        b = y(
          b,
          We,
          ze,
          Se,
          Te,
          D
        );
      else {
        if (We.type === Text && !We.children)
          continue;
        hasMismatch = !0, n(
          null,
          We,
          xe,
          null,
          ze,
          Se,
          getContainerType(xe),
          Te
        );
      }
    }
    return b;
  }, Ve = (b, Le, xe, ze, Se, Te) => {
    const { slotScopeIds: D } = Le;
    D && (Se = Se ? Se.concat(D) : D);
    const ke = l(b), Fe = Ee(
      t(b),
      Le,
      ke,
      xe,
      ze,
      Se,
      Te
    );
    return Fe && isComment(Fe) && Fe.data === "]" ? t(Le.anchor = Fe) : (hasMismatch = !0, c(Le.anchor = _("]"), ke, Fe), Fe);
  }, Me = (b, Le, xe, ze, Se, Te) => {
    if (hasMismatch = !0, Le.el = null, Te) {
      const Fe = B(b);
      for (; ; ) {
        const He = t(b);
        if (He && He !== Fe)
          o(He);
        else
          break;
      }
    }
    const D = t(b), ke = l(b);
    return o(b), n(
      null,
      Le,
      ke,
      D,
      xe,
      ze,
      getContainerType(ke),
      Se
    ), D;
  }, B = (b, Le = "[", xe = "]") => {
    let ze = 0;
    for (; b; )
      if (b = t(b), b && isComment(b) && (b.data === Le && ze++, b.data === xe)) {
        if (ze === 0)
          return t(b);
        ze--;
      }
    return b;
  }, Pe = (b, Le, xe) => {
    const ze = Le.parentNode;
    ze && ze.replaceChild(b, Le);
    let Se = xe;
    for (; Se; )
      Se.vnode.el === Le && (Se.vnode.el = Se.subTree.el = b), Se = Se.parent;
  }, k = (b) => b.nodeType === 1 && b.tagName.toLowerCase() === "template";
  return [u, y];
}
const queuePostRenderEffect = queueEffectWithSuspense;
function createRenderer(e) {
  return baseCreateRenderer(e);
}
function createHydrationRenderer(e) {
  return baseCreateRenderer(e, createHydrationFunctions);
}
function baseCreateRenderer(e, r) {
  const n = getGlobalThis();
  n.__VUE__ = !0;
  const {
    insert: s,
    remove: a,
    patchProp: t,
    createElement: l,
    createText: o,
    createComment: c,
    setText: _,
    setElementText: u,
    parentNode: y,
    nextSibling: g,
    setScopeId: Ee = NOOP,
    insertStaticContent: Ve
  } = e, Me = (ft, _t, St, yt = null, Ct = null, Lt = null, Vt = void 0, Tt = null, xt = !!_t.dynamicChildren) => {
    if (ft === _t)
      return;
    ft && !isSameVNodeType(ft, _t) && (yt = Ge(ft), Ze(ft, Ct, Lt, !0), ft = null), _t.patchFlag === -2 && (xt = !1, _t.dynamicChildren = null);
    const { type: Ot, ref: Pt, shapeFlag: kt } = _t;
    switch (Ot) {
      case Text:
        B(ft, _t, St, yt);
        break;
      case Comment:
        Pe(ft, _t, St, yt);
        break;
      case Static:
        ft == null && k(_t, St, yt, Vt);
        break;
      case Fragment:
        He(
          ft,
          _t,
          St,
          yt,
          Ct,
          Lt,
          Vt,
          Tt,
          xt
        );
        break;
      default:
        kt & 1 ? xe(
          ft,
          _t,
          St,
          yt,
          Ct,
          Lt,
          Vt,
          Tt,
          xt
        ) : kt & 6 ? We(
          ft,
          _t,
          St,
          yt,
          Ct,
          Lt,
          Vt,
          Tt,
          xt
        ) : (kt & 64 || kt & 128) && Ot.process(
          ft,
          _t,
          St,
          yt,
          Ct,
          Lt,
          Vt,
          Tt,
          xt,
          ht
        );
    }
    Pt != null && Ct && setRef(Pt, ft && ft.ref, Lt, _t || ft, !_t);
  }, B = (ft, _t, St, yt) => {
    if (ft == null)
      s(
        _t.el = o(_t.children),
        St,
        yt
      );
    else {
      const Ct = _t.el = ft.el;
      _t.children !== ft.children && _(Ct, _t.children);
    }
  }, Pe = (ft, _t, St, yt) => {
    ft == null ? s(
      _t.el = c(_t.children || ""),
      St,
      yt
    ) : _t.el = ft.el;
  }, k = (ft, _t, St, yt) => {
    [ft.el, ft.anchor] = Ve(
      ft.children,
      _t,
      St,
      yt,
      ft.el,
      ft.anchor
    );
  }, b = ({ el: ft, anchor: _t }, St, yt) => {
    let Ct;
    for (; ft && ft !== _t; )
      Ct = g(ft), s(ft, St, yt), ft = Ct;
    s(_t, St, yt);
  }, Le = ({ el: ft, anchor: _t }) => {
    let St;
    for (; ft && ft !== _t; )
      St = g(ft), a(ft), ft = St;
    a(_t);
  }, xe = (ft, _t, St, yt, Ct, Lt, Vt, Tt, xt) => {
    _t.type === "svg" ? Vt = "svg" : _t.type === "math" && (Vt = "mathml"), ft == null ? ze(
      _t,
      St,
      yt,
      Ct,
      Lt,
      Vt,
      Tt,
      xt
    ) : D(
      ft,
      _t,
      Ct,
      Lt,
      Vt,
      Tt,
      xt
    );
  }, ze = (ft, _t, St, yt, Ct, Lt, Vt, Tt) => {
    let xt, Ot;
    const { props: Pt, shapeFlag: kt, transition: zt, dirs: Bt } = ft;
    if (xt = ft.el = l(
      ft.type,
      Lt,
      Pt && Pt.is,
      Pt
    ), kt & 8 ? u(xt, ft.children) : kt & 16 && Te(
      ft.children,
      xt,
      null,
      yt,
      Ct,
      resolveChildrenNamespace(ft, Lt),
      Vt,
      Tt
    ), Bt && invokeDirectiveHook(ft, null, yt, "created"), Se(xt, ft, ft.scopeId, Vt, yt), Pt) {
      for (const rt in Pt)
        rt !== "value" && !isReservedProp(rt) && t(
          xt,
          rt,
          null,
          Pt[rt],
          Lt,
          ft.children,
          yt,
          Ct,
          Be
        );
      "value" in Pt && t(xt, "value", null, Pt.value, Lt), (Ot = Pt.onVnodeBeforeMount) && invokeVNodeHook(Ot, yt, ft);
    }
    Bt && invokeDirectiveHook(ft, null, yt, "beforeMount");
    const gt = needTransition(Ct, zt);
    gt && zt.beforeEnter(xt), s(xt, _t, St), ((Ot = Pt && Pt.onVnodeMounted) || gt || Bt) && queuePostRenderEffect(() => {
      Ot && invokeVNodeHook(Ot, yt, ft), gt && zt.enter(xt), Bt && invokeDirectiveHook(ft, null, yt, "mounted");
    }, Ct);
  }, Se = (ft, _t, St, yt, Ct) => {
    if (St && Ee(ft, St), yt)
      for (let Lt = 0; Lt < yt.length; Lt++)
        Ee(ft, yt[Lt]);
    if (Ct) {
      let Lt = Ct.subTree;
      if (_t === Lt) {
        const Vt = Ct.vnode;
        Se(
          ft,
          Vt,
          Vt.scopeId,
          Vt.slotScopeIds,
          Ct.parent
        );
      }
    }
  }, Te = (ft, _t, St, yt, Ct, Lt, Vt, Tt, xt = 0) => {
    for (let Ot = xt; Ot < ft.length; Ot++) {
      const Pt = ft[Ot] = Tt ? cloneIfMounted(ft[Ot]) : normalizeVNode(ft[Ot]);
      Me(
        null,
        Pt,
        _t,
        St,
        yt,
        Ct,
        Lt,
        Vt,
        Tt
      );
    }
  }, D = (ft, _t, St, yt, Ct, Lt, Vt) => {
    const Tt = _t.el = ft.el;
    let { patchFlag: xt, dynamicChildren: Ot, dirs: Pt } = _t;
    xt |= ft.patchFlag & 16;
    const kt = ft.props || EMPTY_OBJ, zt = _t.props || EMPTY_OBJ;
    let Bt;
    if (St && toggleRecurse(St, !1), (Bt = zt.onVnodeBeforeUpdate) && invokeVNodeHook(Bt, St, _t, ft), Pt && invokeDirectiveHook(_t, ft, St, "beforeUpdate"), St && toggleRecurse(St, !0), Ot ? ke(
      ft.dynamicChildren,
      Ot,
      Tt,
      St,
      yt,
      resolveChildrenNamespace(_t, Ct),
      Lt
    ) : Vt || Ie(
      ft,
      _t,
      Tt,
      null,
      St,
      yt,
      resolveChildrenNamespace(_t, Ct),
      Lt,
      !1
    ), xt > 0) {
      if (xt & 16)
        Fe(
          Tt,
          _t,
          kt,
          zt,
          St,
          yt,
          Ct
        );
      else if (xt & 2 && kt.class !== zt.class && t(Tt, "class", null, zt.class, Ct), xt & 4 && t(Tt, "style", kt.style, zt.style, Ct), xt & 8) {
        const gt = _t.dynamicProps;
        for (let rt = 0; rt < gt.length; rt++) {
          const nt = gt[rt], bt = kt[nt], Et = zt[nt];
          (Et !== bt || nt === "value") && t(
            Tt,
            nt,
            bt,
            Et,
            Ct,
            ft.children,
            St,
            yt,
            Be
          );
        }
      }
      xt & 1 && ft.children !== _t.children && u(Tt, _t.children);
    } else
      !Vt && Ot == null && Fe(
        Tt,
        _t,
        kt,
        zt,
        St,
        yt,
        Ct
      );
    ((Bt = zt.onVnodeUpdated) || Pt) && queuePostRenderEffect(() => {
      Bt && invokeVNodeHook(Bt, St, _t, ft), Pt && invokeDirectiveHook(_t, ft, St, "updated");
    }, yt);
  }, ke = (ft, _t, St, yt, Ct, Lt, Vt) => {
    for (let Tt = 0; Tt < _t.length; Tt++) {
      const xt = ft[Tt], Ot = _t[Tt], Pt = (
        // oldVNode may be an errored async setup() component inside Suspense
        // which will not have a mounted element
        xt.el && // - In the case of a Fragment, we need to provide the actual parent
        // of the Fragment itself so it can move its children.
        (xt.type === Fragment || // - In the case of different nodes, there is going to be a replacement
        // which also requires the correct parent container
        !isSameVNodeType(xt, Ot) || // - In the case of a component, it could contain anything.
        xt.shapeFlag & 70) ? y(xt.el) : (
          // In other cases, the parent container is not actually used so we
          // just pass the block element here to avoid a DOM parentNode call.
          St
        )
      );
      Me(
        xt,
        Ot,
        Pt,
        null,
        yt,
        Ct,
        Lt,
        Vt,
        !0
      );
    }
  }, Fe = (ft, _t, St, yt, Ct, Lt, Vt) => {
    if (St !== yt) {
      if (St !== EMPTY_OBJ)
        for (const Tt in St)
          !isReservedProp(Tt) && !(Tt in yt) && t(
            ft,
            Tt,
            St[Tt],
            null,
            Vt,
            _t.children,
            Ct,
            Lt,
            Be
          );
      for (const Tt in yt) {
        if (isReservedProp(Tt))
          continue;
        const xt = yt[Tt], Ot = St[Tt];
        xt !== Ot && Tt !== "value" && t(
          ft,
          Tt,
          Ot,
          xt,
          Vt,
          _t.children,
          Ct,
          Lt,
          Be
        );
      }
      "value" in yt && t(ft, "value", St.value, yt.value, Vt);
    }
  }, He = (ft, _t, St, yt, Ct, Lt, Vt, Tt, xt) => {
    const Ot = _t.el = ft ? ft.el : o(""), Pt = _t.anchor = ft ? ft.anchor : o("");
    let { patchFlag: kt, dynamicChildren: zt, slotScopeIds: Bt } = _t;
    Bt && (Tt = Tt ? Tt.concat(Bt) : Bt), ft == null ? (s(Ot, St, yt), s(Pt, St, yt), Te(
      // #10007
      // such fragment like `<></>` will be compiled into
      // a fragment which doesn't have a children.
      // In this case fallback to an empty array
      _t.children || [],
      St,
      Pt,
      Ct,
      Lt,
      Vt,
      Tt,
      xt
    )) : kt > 0 && kt & 64 && zt && // #2715 the previous fragment could've been a BAILed one as a result
    // of renderSlot() with no valid children
    ft.dynamicChildren ? (ke(
      ft.dynamicChildren,
      zt,
      St,
      Ct,
      Lt,
      Vt,
      Tt
    ), // #2080 if the stable fragment has a key, it's a <template v-for> that may
    //  get moved around. Make sure all root level vnodes inherit el.
    // #2134 or if it's a component root, it may also get moved around
    // as the component is being moved.
    (_t.key != null || Ct && _t === Ct.subTree) && traverseStaticChildren(
      ft,
      _t,
      !0
      /* shallow */
    )) : Ie(
      ft,
      _t,
      St,
      Pt,
      Ct,
      Lt,
      Vt,
      Tt,
      xt
    );
  }, We = (ft, _t, St, yt, Ct, Lt, Vt, Tt, xt) => {
    _t.slotScopeIds = Tt, ft == null ? _t.shapeFlag & 512 ? Ct.ctx.activate(
      _t,
      St,
      yt,
      Vt,
      xt
    ) : Ke(
      _t,
      St,
      yt,
      Ct,
      Lt,
      Vt,
      xt
    ) : $(ft, _t, xt);
  }, Ke = (ft, _t, St, yt, Ct, Lt, Vt) => {
    const Tt = ft.component = createComponentInstance(
      ft,
      yt,
      Ct
    );
    if (isKeepAlive(ft) && (Tt.ctx.renderer = ht), setupComponent(Tt), Tt.asyncDep) {
      if (Ct && Ct.registerDep(Tt, De), !ft.el) {
        const xt = Tt.subTree = createVNode(Comment);
        Pe(null, xt, _t, St);
      }
    } else
      De(
        Tt,
        ft,
        _t,
        St,
        Ct,
        Lt,
        Vt
      );
  }, $ = (ft, _t, St) => {
    const yt = _t.component = ft.component;
    if (shouldUpdateComponent(ft, _t, St))
      if (yt.asyncDep && !yt.asyncResolved) {
        Re(yt, _t, St);
        return;
      } else
        yt.next = _t, invalidateJob(yt.update), yt.effect.dirty = !0, yt.update();
    else
      _t.el = ft.el, yt.vnode = _t;
  }, De = (ft, _t, St, yt, Ct, Lt, Vt) => {
    const Tt = () => {
      if (ft.isMounted) {
        let { next: Pt, bu: kt, u: zt, parent: Bt, vnode: gt } = ft;
        {
          const Rt = locateNonHydratedAsyncRoot(ft);
          if (Rt) {
            Pt && (Pt.el = gt.el, Re(ft, Pt, Vt)), Rt.asyncDep.then(() => {
              ft.isUnmounted || Tt();
            });
            return;
          }
        }
        let rt = Pt, nt;
        toggleRecurse(ft, !1), Pt ? (Pt.el = gt.el, Re(ft, Pt, Vt)) : Pt = gt, kt && invokeArrayFns(kt), (nt = Pt.props && Pt.props.onVnodeBeforeUpdate) && invokeVNodeHook(nt, Bt, Pt, gt), toggleRecurse(ft, !0);
        const bt = renderComponentRoot(ft), Et = ft.subTree;
        ft.subTree = bt, Me(
          Et,
          bt,
          // parent may have changed if it's in a teleport
          y(Et.el),
          // anchor may have changed if it's in a fragment
          Ge(Et),
          ft,
          Ct,
          Lt
        ), Pt.el = bt.el, rt === null && updateHOCHostEl(ft, bt.el), zt && queuePostRenderEffect(zt, Ct), (nt = Pt.props && Pt.props.onVnodeUpdated) && queuePostRenderEffect(
          () => invokeVNodeHook(nt, Bt, Pt, gt),
          Ct
        );
      } else {
        let Pt;
        const { el: kt, props: zt } = _t, { bm: Bt, m: gt, parent: rt } = ft, nt = isAsyncWrapper(_t);
        if (toggleRecurse(ft, !1), Bt && invokeArrayFns(Bt), !nt && (Pt = zt && zt.onVnodeBeforeMount) && invokeVNodeHook(Pt, rt, _t), toggleRecurse(ft, !0), kt && lt) {
          const bt = () => {
            ft.subTree = renderComponentRoot(ft), lt(
              kt,
              ft.subTree,
              ft,
              Ct,
              null
            );
          };
          nt ? _t.type.__asyncLoader().then(
            // note: we are moving the render call into an async callback,
            // which means it won't track dependencies - but it's ok because
            // a server-rendered async wrapper is already in resolved state
            // and it will never need to change.
            () => !ft.isUnmounted && bt()
          ) : bt();
        } else {
          const bt = ft.subTree = renderComponentRoot(ft);
          Me(
            null,
            bt,
            St,
            yt,
            ft,
            Ct,
            Lt
          ), _t.el = bt.el;
        }
        if (gt && queuePostRenderEffect(gt, Ct), !nt && (Pt = zt && zt.onVnodeMounted)) {
          const bt = _t;
          queuePostRenderEffect(
            () => invokeVNodeHook(Pt, rt, bt),
            Ct
          );
        }
        (_t.shapeFlag & 256 || rt && isAsyncWrapper(rt.vnode) && rt.vnode.shapeFlag & 256) && ft.a && queuePostRenderEffect(ft.a, Ct), ft.isMounted = !0, _t = St = yt = null;
      }
    }, xt = ft.effect = new ReactiveEffect(
      Tt,
      NOOP,
      () => queueJob(Ot),
      ft.scope
      // track it in component's effect scope
    ), Ot = ft.update = () => {
      xt.dirty && xt.run();
    };
    Ot.id = ft.uid, toggleRecurse(ft, !0), Ot();
  }, Re = (ft, _t, St) => {
    _t.component = ft;
    const yt = ft.vnode.props;
    ft.vnode = _t, ft.next = null, updateProps(ft, _t.props, yt, St), updateSlots(ft, _t.children, St), pauseTracking(), flushPreFlushCbs(ft), resetTracking();
  }, Ie = (ft, _t, St, yt, Ct, Lt, Vt, Tt, xt = !1) => {
    const Ot = ft && ft.children, Pt = ft ? ft.shapeFlag : 0, kt = _t.children, { patchFlag: zt, shapeFlag: Bt } = _t;
    if (zt > 0) {
      if (zt & 128) {
        Ue(
          Ot,
          kt,
          St,
          yt,
          Ct,
          Lt,
          Vt,
          Tt,
          xt
        );
        return;
      } else if (zt & 256) {
        O(
          Ot,
          kt,
          St,
          yt,
          Ct,
          Lt,
          Vt,
          Tt,
          xt
        );
        return;
      }
    }
    Bt & 8 ? (Pt & 16 && Be(Ot, Ct, Lt), kt !== Ot && u(St, kt)) : Pt & 16 ? Bt & 16 ? Ue(
      Ot,
      kt,
      St,
      yt,
      Ct,
      Lt,
      Vt,
      Tt,
      xt
    ) : Be(Ot, Ct, Lt, !0) : (Pt & 8 && u(St, ""), Bt & 16 && Te(
      kt,
      St,
      yt,
      Ct,
      Lt,
      Vt,
      Tt,
      xt
    ));
  }, O = (ft, _t, St, yt, Ct, Lt, Vt, Tt, xt) => {
    ft = ft || EMPTY_ARR, _t = _t || EMPTY_ARR;
    const Ot = ft.length, Pt = _t.length, kt = Math.min(Ot, Pt);
    let zt;
    for (zt = 0; zt < kt; zt++) {
      const Bt = _t[zt] = xt ? cloneIfMounted(_t[zt]) : normalizeVNode(_t[zt]);
      Me(
        ft[zt],
        Bt,
        St,
        null,
        Ct,
        Lt,
        Vt,
        Tt,
        xt
      );
    }
    Ot > Pt ? Be(
      ft,
      Ct,
      Lt,
      !0,
      !1,
      kt
    ) : Te(
      _t,
      St,
      yt,
      Ct,
      Lt,
      Vt,
      Tt,
      xt,
      kt
    );
  }, Ue = (ft, _t, St, yt, Ct, Lt, Vt, Tt, xt) => {
    let Ot = 0;
    const Pt = _t.length;
    let kt = ft.length - 1, zt = Pt - 1;
    for (; Ot <= kt && Ot <= zt; ) {
      const Bt = ft[Ot], gt = _t[Ot] = xt ? cloneIfMounted(_t[Ot]) : normalizeVNode(_t[Ot]);
      if (isSameVNodeType(Bt, gt))
        Me(
          Bt,
          gt,
          St,
          null,
          Ct,
          Lt,
          Vt,
          Tt,
          xt
        );
      else
        break;
      Ot++;
    }
    for (; Ot <= kt && Ot <= zt; ) {
      const Bt = ft[kt], gt = _t[zt] = xt ? cloneIfMounted(_t[zt]) : normalizeVNode(_t[zt]);
      if (isSameVNodeType(Bt, gt))
        Me(
          Bt,
          gt,
          St,
          null,
          Ct,
          Lt,
          Vt,
          Tt,
          xt
        );
      else
        break;
      kt--, zt--;
    }
    if (Ot > kt) {
      if (Ot <= zt) {
        const Bt = zt + 1, gt = Bt < Pt ? _t[Bt].el : yt;
        for (; Ot <= zt; )
          Me(
            null,
            _t[Ot] = xt ? cloneIfMounted(_t[Ot]) : normalizeVNode(_t[Ot]),
            St,
            gt,
            Ct,
            Lt,
            Vt,
            Tt,
            xt
          ), Ot++;
      }
    } else if (Ot > zt)
      for (; Ot <= kt; )
        Ze(ft[Ot], Ct, Lt, !0), Ot++;
    else {
      const Bt = Ot, gt = Ot, rt = /* @__PURE__ */ new Map();
      for (Ot = gt; Ot <= zt; Ot++) {
        const Nt = _t[Ot] = xt ? cloneIfMounted(_t[Ot]) : normalizeVNode(_t[Ot]);
        Nt.key != null && rt.set(Nt.key, Ot);
      }
      let nt, bt = 0;
      const Et = zt - gt + 1;
      let Rt = !1, $t = 0;
      const pt = new Array(Et);
      for (Ot = 0; Ot < Et; Ot++)
        pt[Ot] = 0;
      for (Ot = Bt; Ot <= kt; Ot++) {
        const Nt = ft[Ot];
        if (bt >= Et) {
          Ze(Nt, Ct, Lt, !0);
          continue;
        }
        let Kt;
        if (Nt.key != null)
          Kt = rt.get(Nt.key);
        else
          for (nt = gt; nt <= zt; nt++)
            if (pt[nt - gt] === 0 && isSameVNodeType(Nt, _t[nt])) {
              Kt = nt;
              break;
            }
        Kt === void 0 ? Ze(Nt, Ct, Lt, !0) : (pt[Kt - gt] = Ot + 1, Kt >= $t ? $t = Kt : Rt = !0, Me(
          Nt,
          _t[Kt],
          St,
          null,
          Ct,
          Lt,
          Vt,
          Tt,
          xt
        ), bt++);
      }
      const Ft = Rt ? getSequence(pt) : EMPTY_ARR;
      for (nt = Ft.length - 1, Ot = Et - 1; Ot >= 0; Ot--) {
        const Nt = gt + Ot, Kt = _t[Nt], At = Nt + 1 < Pt ? _t[Nt + 1].el : yt;
        pt[Ot] === 0 ? Me(
          null,
          Kt,
          St,
          At,
          Ct,
          Lt,
          Vt,
          Tt,
          xt
        ) : Rt && (nt < 0 || Ot !== Ft[nt] ? $e(Kt, St, At, 2) : nt--);
      }
    }
  }, $e = (ft, _t, St, yt, Ct = null) => {
    const { el: Lt, type: Vt, transition: Tt, children: xt, shapeFlag: Ot } = ft;
    if (Ot & 6) {
      $e(ft.component.subTree, _t, St, yt);
      return;
    }
    if (Ot & 128) {
      ft.suspense.move(_t, St, yt);
      return;
    }
    if (Ot & 64) {
      Vt.move(ft, _t, St, ht);
      return;
    }
    if (Vt === Fragment) {
      s(Lt, _t, St);
      for (let kt = 0; kt < xt.length; kt++)
        $e(xt[kt], _t, St, yt);
      s(ft.anchor, _t, St);
      return;
    }
    if (Vt === Static) {
      b(ft, _t, St);
      return;
    }
    if (yt !== 2 && Ot & 1 && Tt)
      if (yt === 0)
        Tt.beforeEnter(Lt), s(Lt, _t, St), queuePostRenderEffect(() => Tt.enter(Lt), Ct);
      else {
        const { leave: kt, delayLeave: zt, afterLeave: Bt } = Tt, gt = () => s(Lt, _t, St), rt = () => {
          kt(Lt, () => {
            gt(), Bt && Bt();
          });
        };
        zt ? zt(Lt, gt, rt) : rt();
      }
    else
      s(Lt, _t, St);
  }, Ze = (ft, _t, St, yt = !1, Ct = !1) => {
    const {
      type: Lt,
      props: Vt,
      ref: Tt,
      children: xt,
      dynamicChildren: Ot,
      shapeFlag: Pt,
      patchFlag: kt,
      dirs: zt
    } = ft;
    if (Tt != null && setRef(Tt, null, St, ft, !0), Pt & 256) {
      _t.ctx.deactivate(ft);
      return;
    }
    const Bt = Pt & 1 && zt, gt = !isAsyncWrapper(ft);
    let rt;
    if (gt && (rt = Vt && Vt.onVnodeBeforeUnmount) && invokeVNodeHook(rt, _t, ft), Pt & 6)
      Ne(ft.component, St, yt);
    else {
      if (Pt & 128) {
        ft.suspense.unmount(St, yt);
        return;
      }
      Bt && invokeDirectiveHook(ft, null, _t, "beforeUnmount"), Pt & 64 ? ft.type.remove(
        ft,
        _t,
        St,
        Ct,
        ht,
        yt
      ) : Ot && // #1153: fast path should not be taken for non-stable (v-for) fragments
      (Lt !== Fragment || kt > 0 && kt & 64) ? Be(
        Ot,
        _t,
        St,
        !1,
        !0
      ) : (Lt === Fragment && kt & 384 || !Ct && Pt & 16) && Be(xt, _t, St), yt && Qe(ft);
    }
    (gt && (rt = Vt && Vt.onVnodeUnmounted) || Bt) && queuePostRenderEffect(() => {
      rt && invokeVNodeHook(rt, _t, ft), Bt && invokeDirectiveHook(ft, null, _t, "unmounted");
    }, St);
  }, Qe = (ft) => {
    const { type: _t, el: St, anchor: yt, transition: Ct } = ft;
    if (_t === Fragment) {
      Ae(St, yt);
      return;
    }
    if (_t === Static) {
      Le(ft);
      return;
    }
    const Lt = () => {
      a(St), Ct && !Ct.persisted && Ct.afterLeave && Ct.afterLeave();
    };
    if (ft.shapeFlag & 1 && Ct && !Ct.persisted) {
      const { leave: Vt, delayLeave: Tt } = Ct, xt = () => Vt(St, Lt);
      Tt ? Tt(ft.el, Lt, xt) : xt();
    } else
      Lt();
  }, Ae = (ft, _t) => {
    let St;
    for (; ft !== _t; )
      St = g(ft), a(ft), ft = St;
    a(_t);
  }, Ne = (ft, _t, St) => {
    const { bum: yt, scope: Ct, update: Lt, subTree: Vt, um: Tt } = ft;
    yt && invokeArrayFns(yt), Ct.stop(), Lt && (Lt.active = !1, Ze(Vt, ft, _t, St)), Tt && queuePostRenderEffect(Tt, _t), queuePostRenderEffect(() => {
      ft.isUnmounted = !0;
    }, _t), _t && _t.pendingBranch && !_t.isUnmounted && ft.asyncDep && !ft.asyncResolved && ft.suspenseId === _t.pendingId && (_t.deps--, _t.deps === 0 && _t.resolve());
  }, Be = (ft, _t, St, yt = !1, Ct = !1, Lt = 0) => {
    for (let Vt = Lt; Vt < ft.length; Vt++)
      Ze(ft[Vt], _t, St, yt, Ct);
  }, Ge = (ft) => ft.shapeFlag & 6 ? Ge(ft.component.subTree) : ft.shapeFlag & 128 ? ft.suspense.next() : g(ft.anchor || ft.el);
  let Ye = !1;
  const je = (ft, _t, St) => {
    ft == null ? _t._vnode && Ze(_t._vnode, null, null, !0) : Me(
      _t._vnode || null,
      ft,
      _t,
      null,
      null,
      null,
      St
    ), Ye || (Ye = !0, flushPreFlushCbs(), flushPostFlushCbs(), Ye = !1), _t._vnode = ft;
  }, ht = {
    p: Me,
    um: Ze,
    m: $e,
    r: Qe,
    mt: Ke,
    mc: Te,
    pc: Ie,
    pbc: ke,
    n: Ge,
    o: e
  };
  let qe, lt;
  return r && ([qe, lt] = r(
    ht
  )), {
    render: je,
    hydrate: qe,
    createApp: createAppAPI(je, qe)
  };
}
function resolveChildrenNamespace({ type: e, props: r }, n) {
  return n === "svg" && e === "foreignObject" || n === "mathml" && e === "annotation-xml" && r && r.encoding && r.encoding.includes("html") ? void 0 : n;
}
function toggleRecurse({ effect: e, update: r }, n) {
  e.allowRecurse = r.allowRecurse = n;
}
function needTransition(e, r) {
  return (!e || e && !e.pendingBranch) && r && !r.persisted;
}
function traverseStaticChildren(e, r, n = !1) {
  const s = e.children, a = r.children;
  if (isArray$1(s) && isArray$1(a))
    for (let t = 0; t < s.length; t++) {
      const l = s[t];
      let o = a[t];
      o.shapeFlag & 1 && !o.dynamicChildren && ((o.patchFlag <= 0 || o.patchFlag === 32) && (o = a[t] = cloneIfMounted(a[t]), o.el = l.el), n || traverseStaticChildren(l, o)), o.type === Text && (o.el = l.el);
    }
}
function getSequence(e) {
  const r = e.slice(), n = [0];
  let s, a, t, l, o;
  const c = e.length;
  for (s = 0; s < c; s++) {
    const _ = e[s];
    if (_ !== 0) {
      if (a = n[n.length - 1], e[a] < _) {
        r[s] = a, n.push(s);
        continue;
      }
      for (t = 0, l = n.length - 1; t < l; )
        o = t + l >> 1, e[n[o]] < _ ? t = o + 1 : l = o;
      _ < e[n[t]] && (t > 0 && (r[s] = n[t - 1]), n[t] = s);
    }
  }
  for (t = n.length, l = n[t - 1]; t-- > 0; )
    n[t] = l, l = r[l];
  return n;
}
function locateNonHydratedAsyncRoot(e) {
  const r = e.subTree.component;
  if (r)
    return r.asyncDep && !r.asyncResolved ? r : locateNonHydratedAsyncRoot(r);
}
const isTeleport = (e) => e.__isTeleport, isTeleportDisabled = (e) => e && (e.disabled || e.disabled === ""), isTargetSVG = (e) => typeof SVGElement < "u" && e instanceof SVGElement, isTargetMathML = (e) => typeof MathMLElement == "function" && e instanceof MathMLElement, resolveTarget = (e, r) => {
  const n = e && e.to;
  return isString$1(n) ? r ? r(n) : null : n;
}, TeleportImpl = {
  name: "Teleport",
  __isTeleport: !0,
  process(e, r, n, s, a, t, l, o, c, _) {
    const {
      mc: u,
      pc: y,
      pbc: g,
      o: { insert: Ee, querySelector: Ve, createText: Me, createComment: B }
    } = _, Pe = isTeleportDisabled(r.props);
    let { shapeFlag: k, children: b, dynamicChildren: Le } = r;
    if (e == null) {
      const xe = r.el = Me(""), ze = r.anchor = Me("");
      Ee(xe, n, s), Ee(ze, n, s);
      const Se = r.target = resolveTarget(r.props, Ve), Te = r.targetAnchor = Me("");
      Se && (Ee(Te, Se), l === "svg" || isTargetSVG(Se) ? l = "svg" : (l === "mathml" || isTargetMathML(Se)) && (l = "mathml"));
      const D = (ke, Fe) => {
        k & 16 && u(
          b,
          ke,
          Fe,
          a,
          t,
          l,
          o,
          c
        );
      };
      Pe ? D(n, ze) : Se && D(Se, Te);
    } else {
      r.el = e.el;
      const xe = r.anchor = e.anchor, ze = r.target = e.target, Se = r.targetAnchor = e.targetAnchor, Te = isTeleportDisabled(e.props), D = Te ? n : ze, ke = Te ? xe : Se;
      if (l === "svg" || isTargetSVG(ze) ? l = "svg" : (l === "mathml" || isTargetMathML(ze)) && (l = "mathml"), Le ? (g(
        e.dynamicChildren,
        Le,
        D,
        a,
        t,
        l,
        o
      ), traverseStaticChildren(e, r, !0)) : c || y(
        e,
        r,
        D,
        ke,
        a,
        t,
        l,
        o,
        !1
      ), Pe)
        Te ? r.props && e.props && r.props.to !== e.props.to && (r.props.to = e.props.to) : moveTeleport(
          r,
          n,
          xe,
          _,
          1
        );
      else if ((r.props && r.props.to) !== (e.props && e.props.to)) {
        const Fe = r.target = resolveTarget(
          r.props,
          Ve
        );
        Fe && moveTeleport(
          r,
          Fe,
          null,
          _,
          0
        );
      } else
        Te && moveTeleport(
          r,
          ze,
          Se,
          _,
          1
        );
    }
    updateCssVars(r);
  },
  remove(e, r, n, s, { um: a, o: { remove: t } }, l) {
    const { shapeFlag: o, children: c, anchor: _, targetAnchor: u, target: y, props: g } = e;
    if (y && t(u), l && t(_), o & 16) {
      const Ee = l || !isTeleportDisabled(g);
      for (let Ve = 0; Ve < c.length; Ve++) {
        const Me = c[Ve];
        a(
          Me,
          r,
          n,
          Ee,
          !!Me.dynamicChildren
        );
      }
    }
  },
  move: moveTeleport,
  hydrate: hydrateTeleport
};
function moveTeleport(e, r, n, { o: { insert: s }, m: a }, t = 2) {
  t === 0 && s(e.targetAnchor, r, n);
  const { el: l, anchor: o, shapeFlag: c, children: _, props: u } = e, y = t === 2;
  if (y && s(l, r, n), (!y || isTeleportDisabled(u)) && c & 16)
    for (let g = 0; g < _.length; g++)
      a(
        _[g],
        r,
        n,
        2
      );
  y && s(o, r, n);
}
function hydrateTeleport(e, r, n, s, a, t, {
  o: { nextSibling: l, parentNode: o, querySelector: c }
}, _) {
  const u = r.target = resolveTarget(
    r.props,
    c
  );
  if (u) {
    const y = u._lpa || u.firstChild;
    if (r.shapeFlag & 16)
      if (isTeleportDisabled(r.props))
        r.anchor = _(
          l(e),
          r,
          o(e),
          n,
          s,
          a,
          t
        ), r.targetAnchor = y;
      else {
        r.anchor = l(e);
        let g = y;
        for (; g; )
          if (g = l(g), g && g.nodeType === 8 && g.data === "teleport anchor") {
            r.targetAnchor = g, u._lpa = r.targetAnchor && l(r.targetAnchor);
            break;
          }
        _(
          y,
          r,
          u,
          n,
          s,
          a,
          t
        );
      }
    updateCssVars(r);
  }
  return r.anchor && l(r.anchor);
}
const Teleport = TeleportImpl;
function updateCssVars(e) {
  const r = e.ctx;
  if (r && r.ut) {
    let n = e.children[0].el;
    for (; n && n !== e.targetAnchor; )
      n.nodeType === 1 && n.setAttribute("data-v-owner", r.uid), n = n.nextSibling;
    r.ut();
  }
}
const Fragment = Symbol.for("v-fgt"), Text = Symbol.for("v-txt"), Comment = Symbol.for("v-cmt"), Static = Symbol.for("v-stc"), blockStack = [];
let currentBlock = null;
function openBlock(e = !1) {
  blockStack.push(currentBlock = e ? null : []);
}
function closeBlock() {
  blockStack.pop(), currentBlock = blockStack[blockStack.length - 1] || null;
}
let isBlockTreeEnabled = 1;
function setBlockTracking(e) {
  isBlockTreeEnabled += e;
}
function setupBlock(e) {
  return e.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null, closeBlock(), isBlockTreeEnabled > 0 && currentBlock && currentBlock.push(e), e;
}
function createElementBlock(e, r, n, s, a, t) {
  return setupBlock(
    createBaseVNode(
      e,
      r,
      n,
      s,
      a,
      t,
      !0
    )
  );
}
function createBlock(e, r, n, s, a) {
  return setupBlock(
    createVNode(
      e,
      r,
      n,
      s,
      a,
      !0
    )
  );
}
function isVNode(e) {
  return e ? e.__v_isVNode === !0 : !1;
}
function isSameVNodeType(e, r) {
  return e.type === r.type && e.key === r.key;
}
function transformVNodeArgs(e) {
}
const InternalObjectKey = "__vInternal", normalizeKey = ({ key: e }) => e ?? null, normalizeRef = ({
  ref: e,
  ref_key: r,
  ref_for: n
}) => (typeof e == "number" && (e = "" + e), e != null ? isString$1(e) || isRef(e) || isFunction$1(e) ? { i: currentRenderingInstance, r: e, k: r, f: !!n } : e : null);
function createBaseVNode(e, r = null, n = null, s = 0, a = null, t = e === Fragment ? 0 : 1, l = !1, o = !1) {
  const c = {
    __v_isVNode: !0,
    __v_skip: !0,
    type: e,
    props: r,
    key: r && normalizeKey(r),
    ref: r && normalizeRef(r),
    scopeId: currentScopeId,
    slotScopeIds: null,
    children: n,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag: t,
    patchFlag: s,
    dynamicProps: a,
    dynamicChildren: null,
    appContext: null,
    ctx: currentRenderingInstance
  };
  return o ? (normalizeChildren(c, n), t & 128 && e.normalize(c)) : n && (c.shapeFlag |= isString$1(n) ? 8 : 16), isBlockTreeEnabled > 0 && // avoid a block node from tracking itself
  !l && // has current parent block
  currentBlock && // presence of a patch flag indicates this node needs patching on updates.
  // component nodes also should always be patched, because even if the
  // component doesn't need to update, it needs to persist the instance on to
  // the next vnode so that it can be properly unmounted later.
  (c.patchFlag > 0 || t & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the
  // vnode should not be considered dynamic due to handler caching.
  c.patchFlag !== 32 && currentBlock.push(c), c;
}
const createVNode = _createVNode;
function _createVNode(e, r = null, n = null, s = 0, a = null, t = !1) {
  if ((!e || e === NULL_DYNAMIC_COMPONENT) && (e = Comment), isVNode(e)) {
    const o = cloneVNode(
      e,
      r,
      !0
      /* mergeRef: true */
    );
    return n && normalizeChildren(o, n), isBlockTreeEnabled > 0 && !t && currentBlock && (o.shapeFlag & 6 ? currentBlock[currentBlock.indexOf(e)] = o : currentBlock.push(o)), o.patchFlag |= -2, o;
  }
  if (isClassComponent(e) && (e = e.__vccOpts), r) {
    r = guardReactiveProps(r);
    let { class: o, style: c } = r;
    o && !isString$1(o) && (r.class = normalizeClass(o)), isObject$1(c) && (isProxy(c) && !isArray$1(c) && (c = extend$1({}, c)), r.style = normalizeStyle(c));
  }
  const l = isString$1(e) ? 1 : isSuspense(e) ? 128 : isTeleport(e) ? 64 : isObject$1(e) ? 4 : isFunction$1(e) ? 2 : 0;
  return createBaseVNode(
    e,
    r,
    n,
    s,
    a,
    l,
    t,
    !0
  );
}
function guardReactiveProps(e) {
  return e ? isProxy(e) || InternalObjectKey in e ? extend$1({}, e) : e : null;
}
function cloneVNode(e, r, n = !1) {
  const { props: s, ref: a, patchFlag: t, children: l } = e, o = r ? mergeProps(s || {}, r) : s;
  return {
    __v_isVNode: !0,
    __v_skip: !0,
    type: e.type,
    props: o,
    key: o && normalizeKey(o),
    ref: r && r.ref ? (
      // #2078 in the case of <component :is="vnode" ref="extra"/>
      // if the vnode itself already has a ref, cloneVNode will need to merge
      // the refs so the single vnode can be set on multiple refs
      n && a ? isArray$1(a) ? a.concat(normalizeRef(r)) : [a, normalizeRef(r)] : normalizeRef(r)
    ) : a,
    scopeId: e.scopeId,
    slotScopeIds: e.slotScopeIds,
    children: l,
    target: e.target,
    targetAnchor: e.targetAnchor,
    staticCount: e.staticCount,
    shapeFlag: e.shapeFlag,
    // if the vnode is cloned with extra props, we can no longer assume its
    // existing patch flag to be reliable and need to add the FULL_PROPS flag.
    // note: preserve flag for fragments since they use the flag for children
    // fast paths only.
    patchFlag: r && e.type !== Fragment ? t === -1 ? 16 : t | 16 : t,
    dynamicProps: e.dynamicProps,
    dynamicChildren: e.dynamicChildren,
    appContext: e.appContext,
    dirs: e.dirs,
    transition: e.transition,
    // These should technically only be non-null on mounted VNodes. However,
    // they *should* be copied for kept-alive vnodes. So we just always copy
    // them since them being non-null during a mount doesn't affect the logic as
    // they will simply be overwritten.
    component: e.component,
    suspense: e.suspense,
    ssContent: e.ssContent && cloneVNode(e.ssContent),
    ssFallback: e.ssFallback && cloneVNode(e.ssFallback),
    el: e.el,
    anchor: e.anchor,
    ctx: e.ctx,
    ce: e.ce
  };
}
function createTextVNode(e = " ", r = 0) {
  return createVNode(Text, null, e, r);
}
function createStaticVNode(e, r) {
  const n = createVNode(Static, null, e);
  return n.staticCount = r, n;
}
function createCommentVNode(e = "", r = !1) {
  return r ? (openBlock(), createBlock(Comment, null, e)) : createVNode(Comment, null, e);
}
function normalizeVNode(e) {
  return e == null || typeof e == "boolean" ? createVNode(Comment) : isArray$1(e) ? createVNode(
    Fragment,
    null,
    // #3666, avoid reference pollution when reusing vnode
    e.slice()
  ) : typeof e == "object" ? cloneIfMounted(e) : createVNode(Text, null, String(e));
}
function cloneIfMounted(e) {
  return e.el === null && e.patchFlag !== -1 || e.memo ? e : cloneVNode(e);
}
function normalizeChildren(e, r) {
  let n = 0;
  const { shapeFlag: s } = e;
  if (r == null)
    r = null;
  else if (isArray$1(r))
    n = 16;
  else if (typeof r == "object")
    if (s & 65) {
      const a = r.default;
      a && (a._c && (a._d = !1), normalizeChildren(e, a()), a._c && (a._d = !0));
      return;
    } else {
      n = 32;
      const a = r._;
      !a && !(InternalObjectKey in r) ? r._ctx = currentRenderingInstance : a === 3 && currentRenderingInstance && (currentRenderingInstance.slots._ === 1 ? r._ = 1 : (r._ = 2, e.patchFlag |= 1024));
    }
  else
    isFunction$1(r) ? (r = { default: r, _ctx: currentRenderingInstance }, n = 32) : (r = String(r), s & 64 ? (n = 16, r = [createTextVNode(r)]) : n = 8);
  e.children = r, e.shapeFlag |= n;
}
function mergeProps(...e) {
  const r = {};
  for (let n = 0; n < e.length; n++) {
    const s = e[n];
    for (const a in s)
      if (a === "class")
        r.class !== s.class && (r.class = normalizeClass([r.class, s.class]));
      else if (a === "style")
        r.style = normalizeStyle([r.style, s.style]);
      else if (isOn(a)) {
        const t = r[a], l = s[a];
        l && t !== l && !(isArray$1(t) && t.includes(l)) && (r[a] = t ? [].concat(t, l) : l);
      } else
        a !== "" && (r[a] = s[a]);
  }
  return r;
}
function invokeVNodeHook(e, r, n, s = null) {
  callWithAsyncErrorHandling(e, r, 7, [
    n,
    s
  ]);
}
const emptyAppContext = createAppContext();
let uid = 0;
function createComponentInstance(e, r, n) {
  const s = e.type, a = (r ? r.appContext : e.appContext) || emptyAppContext, t = {
    uid: uid++,
    vnode: e,
    type: s,
    parent: r,
    appContext: a,
    root: null,
    // to be immediately set
    next: null,
    subTree: null,
    // will be set synchronously right after creation
    effect: null,
    update: null,
    // will be set synchronously right after creation
    scope: new EffectScope(
      !0
      /* detached */
    ),
    render: null,
    proxy: null,
    exposed: null,
    exposeProxy: null,
    withProxy: null,
    provides: r ? r.provides : Object.create(a.provides),
    accessCache: null,
    renderCache: [],
    // local resolved assets
    components: null,
    directives: null,
    // resolved props and emits options
    propsOptions: normalizePropsOptions(s, a),
    emitsOptions: normalizeEmitsOptions(s, a),
    // emit
    emit: null,
    // to be set immediately
    emitted: null,
    // props default value
    propsDefaults: EMPTY_OBJ,
    // inheritAttrs
    inheritAttrs: s.inheritAttrs,
    // state
    ctx: EMPTY_OBJ,
    data: EMPTY_OBJ,
    props: EMPTY_OBJ,
    attrs: EMPTY_OBJ,
    slots: EMPTY_OBJ,
    refs: EMPTY_OBJ,
    setupState: EMPTY_OBJ,
    setupContext: null,
    attrsProxy: null,
    slotsProxy: null,
    // suspense related
    suspense: n,
    suspenseId: n ? n.pendingId : 0,
    asyncDep: null,
    asyncResolved: !1,
    // lifecycle hooks
    // not using enums here because it results in computed properties
    isMounted: !1,
    isUnmounted: !1,
    isDeactivated: !1,
    bc: null,
    c: null,
    bm: null,
    m: null,
    bu: null,
    u: null,
    um: null,
    bum: null,
    da: null,
    a: null,
    rtg: null,
    rtc: null,
    ec: null,
    sp: null
  };
  return t.ctx = { _: t }, t.root = r ? r.root : t, t.emit = emit.bind(null, t), e.ce && e.ce(t), t;
}
let currentInstance = null;
const getCurrentInstance = () => currentInstance || currentRenderingInstance;
let internalSetCurrentInstance, setInSSRSetupState;
{
  const e = getGlobalThis(), r = (n, s) => {
    let a;
    return (a = e[n]) || (a = e[n] = []), a.push(s), (t) => {
      a.length > 1 ? a.forEach((l) => l(t)) : a[0](t);
    };
  };
  internalSetCurrentInstance = r(
    "__VUE_INSTANCE_SETTERS__",
    (n) => currentInstance = n
  ), setInSSRSetupState = r(
    "__VUE_SSR_SETTERS__",
    (n) => isInSSRComponentSetup = n
  );
}
const setCurrentInstance = (e) => {
  internalSetCurrentInstance(e), e.scope.on();
}, unsetCurrentInstance = () => {
  currentInstance && currentInstance.scope.off(), internalSetCurrentInstance(null);
};
function isStatefulComponent(e) {
  return e.vnode.shapeFlag & 4;
}
let isInSSRComponentSetup = !1;
function setupComponent(e, r = !1) {
  r && setInSSRSetupState(r);
  const { props: n, children: s } = e.vnode, a = isStatefulComponent(e);
  initProps(e, n, a, r), initSlots(e, s);
  const t = a ? setupStatefulComponent(e, r) : void 0;
  return r && setInSSRSetupState(!1), t;
}
function setupStatefulComponent(e, r) {
  const n = e.type;
  e.accessCache = /* @__PURE__ */ Object.create(null), e.proxy = markRaw(new Proxy(e.ctx, PublicInstanceProxyHandlers));
  const { setup: s } = n;
  if (s) {
    const a = e.setupContext = s.length > 1 ? createSetupContext(e) : null;
    setCurrentInstance(e), pauseTracking();
    const t = callWithErrorHandling(
      s,
      e,
      0,
      [
        e.props,
        a
      ]
    );
    if (resetTracking(), unsetCurrentInstance(), isPromise(t)) {
      if (t.then(unsetCurrentInstance, unsetCurrentInstance), r)
        return t.then((l) => {
          handleSetupResult(e, l, r);
        }).catch((l) => {
          handleError(l, e, 0);
        });
      e.asyncDep = t;
    } else
      handleSetupResult(e, t, r);
  } else
    finishComponentSetup(e, r);
}
function handleSetupResult(e, r, n) {
  isFunction$1(r) ? e.type.__ssrInlineRender ? e.ssrRender = r : e.render = r : isObject$1(r) && (e.setupState = proxyRefs(r)), finishComponentSetup(e, n);
}
let compile$1, installWithProxy;
function registerRuntimeCompiler(e) {
  compile$1 = e, installWithProxy = (r) => {
    r.render._rc && (r.withProxy = new Proxy(r.ctx, RuntimeCompiledPublicInstanceProxyHandlers));
  };
}
const isRuntimeOnly = () => !compile$1;
function finishComponentSetup(e, r, n) {
  const s = e.type;
  if (!e.render) {
    if (!r && compile$1 && !s.render) {
      const a = s.template || resolveMergedOptions(e).template;
      if (a) {
        const { isCustomElement: t, compilerOptions: l } = e.appContext.config, { delimiters: o, compilerOptions: c } = s, _ = extend$1(
          extend$1(
            {
              isCustomElement: t,
              delimiters: o
            },
            l
          ),
          c
        );
        s.render = compile$1(a, _);
      }
    }
    e.render = s.render || NOOP, installWithProxy && installWithProxy(e);
  }
  {
    setCurrentInstance(e), pauseTracking();
    try {
      applyOptions(e);
    } finally {
      resetTracking(), unsetCurrentInstance();
    }
  }
}
function getAttrsProxy(e) {
  return e.attrsProxy || (e.attrsProxy = new Proxy(
    e.attrs,
    {
      get(r, n) {
        return track(e, "get", "$attrs"), r[n];
      }
    }
  ));
}
function createSetupContext(e) {
  const r = (n) => {
    e.exposed = n || {};
  };
  return {
    get attrs() {
      return getAttrsProxy(e);
    },
    slots: e.slots,
    emit: e.emit,
    expose: r
  };
}
function getExposeProxy(e) {
  if (e.exposed)
    return e.exposeProxy || (e.exposeProxy = new Proxy(proxyRefs(markRaw(e.exposed)), {
      get(r, n) {
        if (n in r)
          return r[n];
        if (n in publicPropertiesMap)
          return publicPropertiesMap[n](e);
      },
      has(r, n) {
        return n in r || n in publicPropertiesMap;
      }
    }));
}
const classifyRE = /(?:^|[-_])(\w)/g, classify = (e) => e.replace(classifyRE, (r) => r.toUpperCase()).replace(/[-_]/g, "");
function getComponentName(e, r = !0) {
  return isFunction$1(e) ? e.displayName || e.name : e.name || r && e.__name;
}
function formatComponentName(e, r, n = !1) {
  let s = getComponentName(r);
  if (!s && r.__file) {
    const a = r.__file.match(/([^/\\]+)\.\w+$/);
    a && (s = a[1]);
  }
  if (!s && e && e.parent) {
    const a = (t) => {
      for (const l in t)
        if (t[l] === r)
          return l;
    };
    s = a(
      e.components || e.parent.type.components
    ) || a(e.appContext.components);
  }
  return s ? classify(s) : n ? "App" : "Anonymous";
}
function isClassComponent(e) {
  return isFunction$1(e) && "__vccOpts" in e;
}
const computed = (e, r) => computed$1(e, r, isInSSRComponentSetup);
function h$1(e, r, n) {
  const s = arguments.length;
  return s === 2 ? isObject$1(r) && !isArray$1(r) ? isVNode(r) ? createVNode(e, null, [r]) : createVNode(e, r) : createVNode(e, null, r) : (s > 3 ? n = Array.prototype.slice.call(arguments, 2) : s === 3 && isVNode(n) && (n = [n]), createVNode(e, r, n));
}
function initCustomFormatter() {
}
function withMemo(e, r, n, s) {
  const a = n[s];
  if (a && isMemoSame(a, e))
    return a;
  const t = r();
  return t.memo = e.slice(), n[s] = t;
}
function isMemoSame(e, r) {
  const n = e.memo;
  if (n.length != r.length)
    return !1;
  for (let s = 0; s < n.length; s++)
    if (hasChanged(n[s], r[s]))
      return !1;
  return isBlockTreeEnabled > 0 && currentBlock && currentBlock.push(e), !0;
}
const version = "3.4.6", warn$2 = NOOP, ErrorTypeStrings = ErrorTypeStrings$1, devtools = void 0, setDevtoolsHook = NOOP, _ssrUtils = {
  createComponentInstance,
  setupComponent,
  renderComponentRoot,
  setCurrentRenderingInstance,
  isVNode,
  normalizeVNode
}, ssrUtils = _ssrUtils, resolveFilter = null, compatUtils = null, DeprecationTypes = null, svgNS = "http://www.w3.org/2000/svg", mathmlNS = "http://www.w3.org/1998/Math/MathML", doc = typeof document < "u" ? document : null, templateContainer = doc && /* @__PURE__ */ doc.createElement("template"), nodeOps = {
  insert: (e, r, n) => {
    r.insertBefore(e, n || null);
  },
  remove: (e) => {
    const r = e.parentNode;
    r && r.removeChild(e);
  },
  createElement: (e, r, n, s) => {
    const a = r === "svg" ? doc.createElementNS(svgNS, e) : r === "mathml" ? doc.createElementNS(mathmlNS, e) : doc.createElement(e, n ? { is: n } : void 0);
    return e === "select" && s && s.multiple != null && a.setAttribute("multiple", s.multiple), a;
  },
  createText: (e) => doc.createTextNode(e),
  createComment: (e) => doc.createComment(e),
  setText: (e, r) => {
    e.nodeValue = r;
  },
  setElementText: (e, r) => {
    e.textContent = r;
  },
  parentNode: (e) => e.parentNode,
  nextSibling: (e) => e.nextSibling,
  querySelector: (e) => doc.querySelector(e),
  setScopeId(e, r) {
    e.setAttribute(r, "");
  },
  // __UNSAFE__
  // Reason: innerHTML.
  // Static content here can only come from compiled templates.
  // As long as the user only uses trusted templates, this is safe.
  insertStaticContent(e, r, n, s, a, t) {
    const l = n ? n.previousSibling : r.lastChild;
    if (a && (a === t || a.nextSibling))
      for (; r.insertBefore(a.cloneNode(!0), n), !(a === t || !(a = a.nextSibling)); )
        ;
    else {
      templateContainer.innerHTML = s === "svg" ? `<svg>${e}</svg>` : s === "mathml" ? `<math>${e}</math>` : e;
      const o = templateContainer.content;
      if (s === "svg" || s === "mathml") {
        const c = o.firstChild;
        for (; c.firstChild; )
          o.appendChild(c.firstChild);
        o.removeChild(c);
      }
      r.insertBefore(o, n);
    }
    return [
      // first
      l ? l.nextSibling : r.firstChild,
      // last
      n ? n.previousSibling : r.lastChild
    ];
  }
}, TRANSITION = "transition", ANIMATION = "animation", vtcKey = Symbol("_vtc"), Transition = (e, { slots: r }) => h$1(BaseTransition, resolveTransitionProps(e), r);
Transition.displayName = "Transition";
const DOMTransitionPropsValidators = {
  name: String,
  type: String,
  css: {
    type: Boolean,
    default: !0
  },
  duration: [String, Number, Object],
  enterFromClass: String,
  enterActiveClass: String,
  enterToClass: String,
  appearFromClass: String,
  appearActiveClass: String,
  appearToClass: String,
  leaveFromClass: String,
  leaveActiveClass: String,
  leaveToClass: String
}, TransitionPropsValidators = Transition.props = /* @__PURE__ */ extend$1(
  {},
  BaseTransitionPropsValidators,
  DOMTransitionPropsValidators
), callHook = (e, r = []) => {
  isArray$1(e) ? e.forEach((n) => n(...r)) : e && e(...r);
}, hasExplicitCallback = (e) => e ? isArray$1(e) ? e.some((r) => r.length > 1) : e.length > 1 : !1;
function resolveTransitionProps(e) {
  const r = {};
  for (const He in e)
    He in DOMTransitionPropsValidators || (r[He] = e[He]);
  if (e.css === !1)
    return r;
  const {
    name: n = "v",
    type: s,
    duration: a,
    enterFromClass: t = `${n}-enter-from`,
    enterActiveClass: l = `${n}-enter-active`,
    enterToClass: o = `${n}-enter-to`,
    appearFromClass: c = t,
    appearActiveClass: _ = l,
    appearToClass: u = o,
    leaveFromClass: y = `${n}-leave-from`,
    leaveActiveClass: g = `${n}-leave-active`,
    leaveToClass: Ee = `${n}-leave-to`
  } = e, Ve = normalizeDuration(a), Me = Ve && Ve[0], B = Ve && Ve[1], {
    onBeforeEnter: Pe,
    onEnter: k,
    onEnterCancelled: b,
    onLeave: Le,
    onLeaveCancelled: xe,
    onBeforeAppear: ze = Pe,
    onAppear: Se = k,
    onAppearCancelled: Te = b
  } = r, D = (He, We, Ke) => {
    removeTransitionClass(He, We ? u : o), removeTransitionClass(He, We ? _ : l), Ke && Ke();
  }, ke = (He, We) => {
    He._isLeaving = !1, removeTransitionClass(He, y), removeTransitionClass(He, Ee), removeTransitionClass(He, g), We && We();
  }, Fe = (He) => (We, Ke) => {
    const $ = He ? Se : k, De = () => D(We, He, Ke);
    callHook($, [We, De]), nextFrame(() => {
      removeTransitionClass(We, He ? c : t), addTransitionClass(We, He ? u : o), hasExplicitCallback($) || whenTransitionEnds(We, s, Me, De);
    });
  };
  return extend$1(r, {
    onBeforeEnter(He) {
      callHook(Pe, [He]), addTransitionClass(He, t), addTransitionClass(He, l);
    },
    onBeforeAppear(He) {
      callHook(ze, [He]), addTransitionClass(He, c), addTransitionClass(He, _);
    },
    onEnter: Fe(!1),
    onAppear: Fe(!0),
    onLeave(He, We) {
      He._isLeaving = !0;
      const Ke = () => ke(He, We);
      addTransitionClass(He, y), forceReflow(), addTransitionClass(He, g), nextFrame(() => {
        He._isLeaving && (removeTransitionClass(He, y), addTransitionClass(He, Ee), hasExplicitCallback(Le) || whenTransitionEnds(He, s, B, Ke));
      }), callHook(Le, [He, Ke]);
    },
    onEnterCancelled(He) {
      D(He, !1), callHook(b, [He]);
    },
    onAppearCancelled(He) {
      D(He, !0), callHook(Te, [He]);
    },
    onLeaveCancelled(He) {
      ke(He), callHook(xe, [He]);
    }
  });
}
function normalizeDuration(e) {
  if (e == null)
    return null;
  if (isObject$1(e))
    return [NumberOf(e.enter), NumberOf(e.leave)];
  {
    const r = NumberOf(e);
    return [r, r];
  }
}
function NumberOf(e) {
  return toNumber(e);
}
function addTransitionClass(e, r) {
  r.split(/\s+/).forEach((n) => n && e.classList.add(n)), (e[vtcKey] || (e[vtcKey] = /* @__PURE__ */ new Set())).add(r);
}
function removeTransitionClass(e, r) {
  r.split(/\s+/).forEach((s) => s && e.classList.remove(s));
  const n = e[vtcKey];
  n && (n.delete(r), n.size || (e[vtcKey] = void 0));
}
function nextFrame(e) {
  requestAnimationFrame(() => {
    requestAnimationFrame(e);
  });
}
let endId = 0;
function whenTransitionEnds(e, r, n, s) {
  const a = e._endId = ++endId, t = () => {
    a === e._endId && s();
  };
  if (n)
    return setTimeout(t, n);
  const { type: l, timeout: o, propCount: c } = getTransitionInfo(e, r);
  if (!l)
    return s();
  const _ = l + "end";
  let u = 0;
  const y = () => {
    e.removeEventListener(_, g), t();
  }, g = (Ee) => {
    Ee.target === e && ++u >= c && y();
  };
  setTimeout(() => {
    u < c && y();
  }, o + 1), e.addEventListener(_, g);
}
function getTransitionInfo(e, r) {
  const n = window.getComputedStyle(e), s = (Ve) => (n[Ve] || "").split(", "), a = s(`${TRANSITION}Delay`), t = s(`${TRANSITION}Duration`), l = getTimeout(a, t), o = s(`${ANIMATION}Delay`), c = s(`${ANIMATION}Duration`), _ = getTimeout(o, c);
  let u = null, y = 0, g = 0;
  r === TRANSITION ? l > 0 && (u = TRANSITION, y = l, g = t.length) : r === ANIMATION ? _ > 0 && (u = ANIMATION, y = _, g = c.length) : (y = Math.max(l, _), u = y > 0 ? l > _ ? TRANSITION : ANIMATION : null, g = u ? u === TRANSITION ? t.length : c.length : 0);
  const Ee = u === TRANSITION && /\b(transform|all)(,|$)/.test(
    s(`${TRANSITION}Property`).toString()
  );
  return {
    type: u,
    timeout: y,
    propCount: g,
    hasTransform: Ee
  };
}
function getTimeout(e, r) {
  for (; e.length < r.length; )
    e = e.concat(e);
  return Math.max(...r.map((n, s) => toMs(n) + toMs(e[s])));
}
function toMs(e) {
  return e === "auto" ? 0 : Number(e.slice(0, -1).replace(",", ".")) * 1e3;
}
function forceReflow() {
  return document.body.offsetHeight;
}
function patchClass(e, r, n) {
  const s = e[vtcKey];
  s && (r = (r ? [r, ...s] : [...s]).join(" ")), r == null ? e.removeAttribute("class") : n ? e.setAttribute("class", r) : e.className = r;
}
const vShowOldKey = Symbol("_vod"), vShow = {
  beforeMount(e, { value: r }, { transition: n }) {
    e[vShowOldKey] = e.style.display === "none" ? "" : e.style.display, n && r ? n.beforeEnter(e) : setDisplay(e, r);
  },
  mounted(e, { value: r }, { transition: n }) {
    n && r && n.enter(e);
  },
  updated(e, { value: r, oldValue: n }, { transition: s }) {
    !r != !n && (s ? r ? (s.beforeEnter(e), setDisplay(e, !0), s.enter(e)) : s.leave(e, () => {
      setDisplay(e, !1);
    }) : setDisplay(e, r));
  },
  beforeUnmount(e, { value: r }) {
    setDisplay(e, r);
  }
};
function setDisplay(e, r) {
  e.style.display = r ? e[vShowOldKey] : "none";
}
function initVShowForSSR() {
  vShow.getSSRProps = ({ value: e }) => {
    if (!e)
      return { style: { display: "none" } };
  };
}
const CSS_VAR_TEXT = Symbol("");
function useCssVars(e) {
  const r = getCurrentInstance();
  if (!r)
    return;
  const n = r.ut = (a = e(r.proxy)) => {
    Array.from(
      document.querySelectorAll(`[data-v-owner="${r.uid}"]`)
    ).forEach((t) => setVarsOnNode(t, a));
  }, s = () => {
    const a = e(r.proxy);
    setVarsOnVNode(r.subTree, a), n(a);
  };
  watchPostEffect(s), onMounted(() => {
    const a = new MutationObserver(s);
    a.observe(r.subTree.el.parentNode, { childList: !0 }), onUnmounted(() => a.disconnect());
  });
}
function setVarsOnVNode(e, r) {
  if (e.shapeFlag & 128) {
    const n = e.suspense;
    e = n.activeBranch, n.pendingBranch && !n.isHydrating && n.effects.push(() => {
      setVarsOnVNode(n.activeBranch, r);
    });
  }
  for (; e.component; )
    e = e.component.subTree;
  if (e.shapeFlag & 1 && e.el)
    setVarsOnNode(e.el, r);
  else if (e.type === Fragment)
    e.children.forEach((n) => setVarsOnVNode(n, r));
  else if (e.type === Static) {
    let { el: n, anchor: s } = e;
    for (; n && (setVarsOnNode(n, r), n !== s); )
      n = n.nextSibling;
  }
}
function setVarsOnNode(e, r) {
  if (e.nodeType === 1) {
    const n = e.style;
    let s = "";
    for (const a in r)
      n.setProperty(`--${a}`, r[a]), s += `--${a}: ${r[a]};`;
    n[CSS_VAR_TEXT] = s;
  }
}
function patchStyle(e, r, n) {
  const s = e.style, a = isString$1(n);
  if (n && !a) {
    if (r && !isString$1(r))
      for (const t in r)
        n[t] == null && setStyle(s, t, "");
    for (const t in n)
      setStyle(s, t, n[t]);
  } else {
    const t = s.display;
    if (a) {
      if (r !== n) {
        const l = s[CSS_VAR_TEXT];
        l && (n += ";" + l), s.cssText = n;
      }
    } else
      r && e.removeAttribute("style");
    vShowOldKey in e && (s.display = t);
  }
}
const importantRE = /\s*!important$/;
function setStyle(e, r, n) {
  if (isArray$1(n))
    n.forEach((s) => setStyle(e, r, s));
  else if (n == null && (n = ""), r.startsWith("--"))
    e.setProperty(r, n);
  else {
    const s = autoPrefix(e, r);
    importantRE.test(n) ? e.setProperty(
      hyphenate(s),
      n.replace(importantRE, ""),
      "important"
    ) : e[s] = n;
  }
}
const prefixes$1 = ["Webkit", "Moz", "ms"], prefixCache = {};
function autoPrefix(e, r) {
  const n = prefixCache[r];
  if (n)
    return n;
  let s = camelize(r);
  if (s !== "filter" && s in e)
    return prefixCache[r] = s;
  s = capitalize(s);
  for (let a = 0; a < prefixes$1.length; a++) {
    const t = prefixes$1[a] + s;
    if (t in e)
      return prefixCache[r] = t;
  }
  return r;
}
const xlinkNS = "http://www.w3.org/1999/xlink";
function patchAttr(e, r, n, s, a) {
  if (s && r.startsWith("xlink:"))
    n == null ? e.removeAttributeNS(xlinkNS, r.slice(6, r.length)) : e.setAttributeNS(xlinkNS, r, n);
  else {
    const t = isSpecialBooleanAttr(r);
    n == null || t && !includeBooleanAttr(n) ? e.removeAttribute(r) : e.setAttribute(r, t ? "" : n);
  }
}
function patchDOMProp(e, r, n, s, a, t, l) {
  if (r === "innerHTML" || r === "textContent") {
    s && l(s, a, t), e[r] = n ?? "";
    return;
  }
  const o = e.tagName;
  if (r === "value" && o !== "PROGRESS" && // custom elements may use _value internally
  !o.includes("-")) {
    e._value = n;
    const _ = o === "OPTION" ? e.getAttribute("value") : e.value, u = n ?? "";
    _ !== u && (e.value = u), n == null && e.removeAttribute(r);
    return;
  }
  let c = !1;
  if (n === "" || n == null) {
    const _ = typeof e[r];
    _ === "boolean" ? n = includeBooleanAttr(n) : n == null && _ === "string" ? (n = "", c = !0) : _ === "number" && (n = 0, c = !0);
  }
  try {
    e[r] = n;
  } catch {
  }
  c && e.removeAttribute(r);
}
function addEventListener(e, r, n, s) {
  e.addEventListener(r, n, s);
}
function removeEventListener(e, r, n, s) {
  e.removeEventListener(r, n, s);
}
const veiKey = Symbol("_vei");
function patchEvent(e, r, n, s, a = null) {
  const t = e[veiKey] || (e[veiKey] = {}), l = t[r];
  if (s && l)
    l.value = s;
  else {
    const [o, c] = parseName(r);
    if (s) {
      const _ = t[r] = createInvoker(s, a);
      addEventListener(e, o, _, c);
    } else
      l && (removeEventListener(e, o, l, c), t[r] = void 0);
  }
}
const optionsModifierRE = /(?:Once|Passive|Capture)$/;
function parseName(e) {
  let r;
  if (optionsModifierRE.test(e)) {
    r = {};
    let s;
    for (; s = e.match(optionsModifierRE); )
      e = e.slice(0, e.length - s[0].length), r[s[0].toLowerCase()] = !0;
  }
  return [e[2] === ":" ? e.slice(3) : hyphenate(e.slice(2)), r];
}
let cachedNow = 0;
const p$1 = /* @__PURE__ */ Promise.resolve(), getNow = () => cachedNow || (p$1.then(() => cachedNow = 0), cachedNow = Date.now());
function createInvoker(e, r) {
  const n = (s) => {
    if (!s._vts)
      s._vts = Date.now();
    else if (s._vts <= n.attached)
      return;
    callWithAsyncErrorHandling(
      patchStopImmediatePropagation(s, n.value),
      r,
      5,
      [s]
    );
  };
  return n.value = e, n.attached = getNow(), n;
}
function patchStopImmediatePropagation(e, r) {
  if (isArray$1(r)) {
    const n = e.stopImmediatePropagation;
    return e.stopImmediatePropagation = () => {
      n.call(e), e._stopped = !0;
    }, r.map((s) => (a) => !a._stopped && s && s(a));
  } else
    return r;
}
const isNativeOn = (e) => e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && // lowercase letter
e.charCodeAt(2) > 96 && e.charCodeAt(2) < 123, patchProp = (e, r, n, s, a, t, l, o, c) => {
  const _ = a === "svg";
  r === "class" ? patchClass(e, s, _) : r === "style" ? patchStyle(e, n, s) : isOn(r) ? isModelListener(r) || patchEvent(e, r, n, s, l) : (r[0] === "." ? (r = r.slice(1), !0) : r[0] === "^" ? (r = r.slice(1), !1) : shouldSetAsProp(e, r, s, _)) ? patchDOMProp(
    e,
    r,
    s,
    t,
    l,
    o,
    c
  ) : (r === "true-value" ? e._trueValue = s : r === "false-value" && (e._falseValue = s), patchAttr(e, r, s, _));
};
function shouldSetAsProp(e, r, n, s) {
  if (s)
    return !!(r === "innerHTML" || r === "textContent" || r in e && isNativeOn(r) && isFunction$1(n));
  if (r === "spellcheck" || r === "draggable" || r === "translate" || r === "form" || r === "list" && e.tagName === "INPUT" || r === "type" && e.tagName === "TEXTAREA")
    return !1;
  if (r === "width" || r === "height") {
    const a = e.tagName;
    if (a === "IMG" || a === "VIDEO" || a === "CANVAS" || a === "SOURCE")
      return !1;
  }
  return isNativeOn(r) && isString$1(n) ? !1 : r in e;
}
/*! #__NO_SIDE_EFFECTS__ */
// @__NO_SIDE_EFFECTS__
function defineCustomElement(e, r) {
  const n = /* @__PURE__ */ defineComponent(e);
  class s extends VueElement {
    constructor(t) {
      super(n, t, r);
    }
  }
  return s.def = n, s;
}
/*! #__NO_SIDE_EFFECTS__ */
const defineSSRCustomElement = /* @__NO_SIDE_EFFECTS__ */ (e) => /* @__PURE__ */ defineCustomElement(e, hydrate), BaseClass = typeof HTMLElement < "u" ? HTMLElement : class {
};
class VueElement extends BaseClass {
  constructor(r, n = {}, s) {
    super(), this._def = r, this._props = n, this._instance = null, this._connected = !1, this._resolved = !1, this._numberProps = null, this._ob = null, this.shadowRoot && s ? s(this._createVNode(), this.shadowRoot) : (this.attachShadow({ mode: "open" }), this._def.__asyncLoader || this._resolveProps(this._def));
  }
  connectedCallback() {
    this._connected = !0, this._instance || (this._resolved ? this._update() : this._resolveDef());
  }
  disconnectedCallback() {
    this._connected = !1, this._ob && (this._ob.disconnect(), this._ob = null), nextTick(() => {
      this._connected || (render$8(null, this.shadowRoot), this._instance = null);
    });
  }
  /**
   * resolve inner component definition (handle possible async component)
   */
  _resolveDef() {
    this._resolved = !0;
    for (let s = 0; s < this.attributes.length; s++)
      this._setAttr(this.attributes[s].name);
    this._ob = new MutationObserver((s) => {
      for (const a of s)
        this._setAttr(a.attributeName);
    }), this._ob.observe(this, { attributes: !0 });
    const r = (s, a = !1) => {
      const { props: t, styles: l } = s;
      let o;
      if (t && !isArray$1(t))
        for (const c in t) {
          const _ = t[c];
          (_ === Number || _ && _.type === Number) && (c in this._props && (this._props[c] = toNumber(this._props[c])), (o || (o = /* @__PURE__ */ Object.create(null)))[camelize(c)] = !0);
        }
      this._numberProps = o, a && this._resolveProps(s), this._applyStyles(l), this._update();
    }, n = this._def.__asyncLoader;
    n ? n().then((s) => r(s, !0)) : r(this._def);
  }
  _resolveProps(r) {
    const { props: n } = r, s = isArray$1(n) ? n : Object.keys(n || {});
    for (const a of Object.keys(this))
      a[0] !== "_" && s.includes(a) && this._setProp(a, this[a], !0, !1);
    for (const a of s.map(camelize))
      Object.defineProperty(this, a, {
        get() {
          return this._getProp(a);
        },
        set(t) {
          this._setProp(a, t);
        }
      });
  }
  _setAttr(r) {
    let n = this.getAttribute(r);
    const s = camelize(r);
    this._numberProps && this._numberProps[s] && (n = toNumber(n)), this._setProp(s, n, !1);
  }
  /**
   * @internal
   */
  _getProp(r) {
    return this._props[r];
  }
  /**
   * @internal
   */
  _setProp(r, n, s = !0, a = !0) {
    n !== this._props[r] && (this._props[r] = n, a && this._instance && this._update(), s && (n === !0 ? this.setAttribute(hyphenate(r), "") : typeof n == "string" || typeof n == "number" ? this.setAttribute(hyphenate(r), n + "") : n || this.removeAttribute(hyphenate(r))));
  }
  _update() {
    render$8(this._createVNode(), this.shadowRoot);
  }
  _createVNode() {
    const r = createVNode(this._def, extend$1({}, this._props));
    return this._instance || (r.ce = (n) => {
      this._instance = n, n.isCE = !0;
      const s = (t, l) => {
        this.dispatchEvent(
          new CustomEvent(t, {
            detail: l
          })
        );
      };
      n.emit = (t, ...l) => {
        s(t, l), hyphenate(t) !== t && s(hyphenate(t), l);
      };
      let a = this;
      for (; a = a && (a.parentNode || a.host); )
        if (a instanceof VueElement) {
          n.parent = a._instance, n.provides = a._instance.provides;
          break;
        }
    }), r;
  }
  _applyStyles(r) {
    r && r.forEach((n) => {
      const s = document.createElement("style");
      s.textContent = n, this.shadowRoot.appendChild(s);
    });
  }
}
function useCssModule(e = "$style") {
  {
    const r = getCurrentInstance();
    if (!r)
      return EMPTY_OBJ;
    const n = r.type.__cssModules;
    if (!n)
      return EMPTY_OBJ;
    const s = n[e];
    return s || EMPTY_OBJ;
  }
}
const positionMap = /* @__PURE__ */ new WeakMap(), newPositionMap = /* @__PURE__ */ new WeakMap(), moveCbKey = Symbol("_moveCb"), enterCbKey = Symbol("_enterCb"), TransitionGroupImpl = {
  name: "TransitionGroup",
  props: /* @__PURE__ */ extend$1({}, TransitionPropsValidators, {
    tag: String,
    moveClass: String
  }),
  setup(e, { slots: r }) {
    const n = getCurrentInstance(), s = useTransitionState();
    let a, t;
    return onUpdated(() => {
      if (!a.length)
        return;
      const l = e.moveClass || `${e.name || "v"}-move`;
      if (!hasCSSTransform(
        a[0].el,
        n.vnode.el,
        l
      ))
        return;
      a.forEach(callPendingCbs), a.forEach(recordPosition);
      const o = a.filter(applyTranslation);
      forceReflow(), o.forEach((c) => {
        const _ = c.el, u = _.style;
        addTransitionClass(_, l), u.transform = u.webkitTransform = u.transitionDuration = "";
        const y = _[moveCbKey] = (g) => {
          g && g.target !== _ || (!g || /transform$/.test(g.propertyName)) && (_.removeEventListener("transitionend", y), _[moveCbKey] = null, removeTransitionClass(_, l));
        };
        _.addEventListener("transitionend", y);
      });
    }), () => {
      const l = toRaw(e), o = resolveTransitionProps(l);
      let c = l.tag || Fragment;
      a = t, t = r.default ? getTransitionRawChildren(r.default()) : [];
      for (let _ = 0; _ < t.length; _++) {
        const u = t[_];
        u.key != null && setTransitionHooks(
          u,
          resolveTransitionHooks(u, o, s, n)
        );
      }
      if (a)
        for (let _ = 0; _ < a.length; _++) {
          const u = a[_];
          setTransitionHooks(
            u,
            resolveTransitionHooks(u, o, s, n)
          ), positionMap.set(u, u.el.getBoundingClientRect());
        }
      return createVNode(c, null, t);
    };
  }
}, removeMode = (e) => delete e.mode;
TransitionGroupImpl.props;
const TransitionGroup = TransitionGroupImpl;
function callPendingCbs(e) {
  const r = e.el;
  r[moveCbKey] && r[moveCbKey](), r[enterCbKey] && r[enterCbKey]();
}
function recordPosition(e) {
  newPositionMap.set(e, e.el.getBoundingClientRect());
}
function applyTranslation(e) {
  const r = positionMap.get(e), n = newPositionMap.get(e), s = r.left - n.left, a = r.top - n.top;
  if (s || a) {
    const t = e.el.style;
    return t.transform = t.webkitTransform = `translate(${s}px,${a}px)`, t.transitionDuration = "0s", e;
  }
}
function hasCSSTransform(e, r, n) {
  const s = e.cloneNode(), a = e[vtcKey];
  a && a.forEach((o) => {
    o.split(/\s+/).forEach((c) => c && s.classList.remove(c));
  }), n.split(/\s+/).forEach((o) => o && s.classList.add(o)), s.style.display = "none";
  const t = r.nodeType === 1 ? r : r.parentNode;
  t.appendChild(s);
  const { hasTransform: l } = getTransitionInfo(s);
  return t.removeChild(s), l;
}
const getModelAssigner = (e) => {
  const r = e.props["onUpdate:modelValue"] || !1;
  return isArray$1(r) ? (n) => invokeArrayFns(r, n) : r;
};
function onCompositionStart(e) {
  e.target.composing = !0;
}
function onCompositionEnd(e) {
  const r = e.target;
  r.composing && (r.composing = !1, r.dispatchEvent(new Event("input")));
}
const assignKey = Symbol("_assign"), vModelText = {
  created(e, { modifiers: { lazy: r, trim: n, number: s } }, a) {
    e[assignKey] = getModelAssigner(a);
    const t = s || a.props && a.props.type === "number";
    addEventListener(e, r ? "change" : "input", (l) => {
      if (l.target.composing)
        return;
      let o = e.value;
      n && (o = o.trim()), t && (o = looseToNumber(o)), e[assignKey](o);
    }), n && addEventListener(e, "change", () => {
      e.value = e.value.trim();
    }), r || (addEventListener(e, "compositionstart", onCompositionStart), addEventListener(e, "compositionend", onCompositionEnd), addEventListener(e, "change", onCompositionEnd));
  },
  // set value on mounted so it's after min/max for type="range"
  mounted(e, { value: r }) {
    e.value = r ?? "";
  },
  beforeUpdate(e, { value: r, modifiers: { lazy: n, trim: s, number: a } }, t) {
    if (e[assignKey] = getModelAssigner(t), e.composing)
      return;
    const l = a || e.type === "number" ? looseToNumber(e.value) : e.value, o = r ?? "";
    l !== o && (document.activeElement === e && e.type !== "range" && (n || s && e.value.trim() === o) || (e.value = o));
  }
}, vModelCheckbox = {
  // #4096 array checkboxes need to be deep traversed
  deep: !0,
  created(e, r, n) {
    e[assignKey] = getModelAssigner(n), addEventListener(e, "change", () => {
      const s = e._modelValue, a = getValue(e), t = e.checked, l = e[assignKey];
      if (isArray$1(s)) {
        const o = looseIndexOf(s, a), c = o !== -1;
        if (t && !c)
          l(s.concat(a));
        else if (!t && c) {
          const _ = [...s];
          _.splice(o, 1), l(_);
        }
      } else if (isSet(s)) {
        const o = new Set(s);
        t ? o.add(a) : o.delete(a), l(o);
      } else
        l(getCheckboxValue(e, t));
    });
  },
  // set initial checked on mount to wait for true-value/false-value
  mounted: setChecked,
  beforeUpdate(e, r, n) {
    e[assignKey] = getModelAssigner(n), setChecked(e, r, n);
  }
};
function setChecked(e, { value: r, oldValue: n }, s) {
  e._modelValue = r, isArray$1(r) ? e.checked = looseIndexOf(r, s.props.value) > -1 : isSet(r) ? e.checked = r.has(s.props.value) : r !== n && (e.checked = looseEqual(r, getCheckboxValue(e, !0)));
}
const vModelRadio = {
  created(e, { value: r }, n) {
    e.checked = looseEqual(r, n.props.value), e[assignKey] = getModelAssigner(n), addEventListener(e, "change", () => {
      e[assignKey](getValue(e));
    });
  },
  beforeUpdate(e, { value: r, oldValue: n }, s) {
    e[assignKey] = getModelAssigner(s), r !== n && (e.checked = looseEqual(r, s.props.value));
  }
}, vModelSelect = {
  // <select multiple> value need to be deep traversed
  deep: !0,
  created(e, { value: r, modifiers: { number: n } }, s) {
    const a = isSet(r);
    addEventListener(e, "change", () => {
      const t = Array.prototype.filter.call(e.options, (l) => l.selected).map(
        (l) => n ? looseToNumber(getValue(l)) : getValue(l)
      );
      e[assignKey](
        e.multiple ? a ? new Set(t) : t : t[0]
      );
    }), e[assignKey] = getModelAssigner(s);
  },
  // set value in mounted & updated because <select> relies on its children
  // <option>s.
  mounted(e, { value: r }) {
    setSelected(e, r);
  },
  beforeUpdate(e, r, n) {
    e[assignKey] = getModelAssigner(n);
  },
  updated(e, { value: r }) {
    setSelected(e, r);
  }
};
function setSelected(e, r) {
  const n = e.multiple;
  if (!(n && !isArray$1(r) && !isSet(r))) {
    for (let s = 0, a = e.options.length; s < a; s++) {
      const t = e.options[s], l = getValue(t);
      if (n)
        isArray$1(r) ? t.selected = looseIndexOf(r, l) > -1 : t.selected = r.has(l);
      else if (looseEqual(getValue(t), r)) {
        e.selectedIndex !== s && (e.selectedIndex = s);
        return;
      }
    }
    !n && e.selectedIndex !== -1 && (e.selectedIndex = -1);
  }
}
function getValue(e) {
  return "_value" in e ? e._value : e.value;
}
function getCheckboxValue(e, r) {
  const n = r ? "_trueValue" : "_falseValue";
  return n in e ? e[n] : r;
}
const vModelDynamic = {
  created(e, r, n) {
    callModelHook(e, r, n, null, "created");
  },
  mounted(e, r, n) {
    callModelHook(e, r, n, null, "mounted");
  },
  beforeUpdate(e, r, n, s) {
    callModelHook(e, r, n, s, "beforeUpdate");
  },
  updated(e, r, n, s) {
    callModelHook(e, r, n, s, "updated");
  }
};
function resolveDynamicModel(e, r) {
  switch (e) {
    case "SELECT":
      return vModelSelect;
    case "TEXTAREA":
      return vModelText;
    default:
      switch (r) {
        case "checkbox":
          return vModelCheckbox;
        case "radio":
          return vModelRadio;
        default:
          return vModelText;
      }
  }
}
function callModelHook(e, r, n, s, a) {
  const l = resolveDynamicModel(
    e.tagName,
    n.props && n.props.type
  )[a];
  l && l(e, r, n, s);
}
function initVModelForSSR() {
  vModelText.getSSRProps = ({ value: e }) => ({ value: e }), vModelRadio.getSSRProps = ({ value: e }, r) => {
    if (r.props && looseEqual(r.props.value, e))
      return { checked: !0 };
  }, vModelCheckbox.getSSRProps = ({ value: e }, r) => {
    if (isArray$1(e)) {
      if (r.props && looseIndexOf(e, r.props.value) > -1)
        return { checked: !0 };
    } else if (isSet(e)) {
      if (r.props && e.has(r.props.value))
        return { checked: !0 };
    } else if (e)
      return { checked: !0 };
  }, vModelDynamic.getSSRProps = (e, r) => {
    if (typeof r.type != "string")
      return;
    const n = resolveDynamicModel(
      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase
      r.type.toUpperCase(),
      r.props && r.props.type
    );
    if (n.getSSRProps)
      return n.getSSRProps(e, r);
  };
}
const systemModifiers = ["ctrl", "shift", "alt", "meta"], modifierGuards = {
  stop: (e) => e.stopPropagation(),
  prevent: (e) => e.preventDefault(),
  self: (e) => e.target !== e.currentTarget,
  ctrl: (e) => !e.ctrlKey,
  shift: (e) => !e.shiftKey,
  alt: (e) => !e.altKey,
  meta: (e) => !e.metaKey,
  left: (e) => "button" in e && e.button !== 0,
  middle: (e) => "button" in e && e.button !== 1,
  right: (e) => "button" in e && e.button !== 2,
  exact: (e, r) => systemModifiers.some((n) => e[`${n}Key`] && !r.includes(n))
}, withModifiers = (e, r) => {
  const n = e._withMods || (e._withMods = {}), s = r.join(".");
  return n[s] || (n[s] = (a, ...t) => {
    for (let l = 0; l < r.length; l++) {
      const o = modifierGuards[r[l]];
      if (o && o(a, r))
        return;
    }
    return e(a, ...t);
  });
}, keyNames = {
  esc: "escape",
  space: " ",
  up: "arrow-up",
  left: "arrow-left",
  right: "arrow-right",
  down: "arrow-down",
  delete: "backspace"
}, withKeys = (e, r) => {
  const n = e._withKeys || (e._withKeys = {}), s = r.join(".");
  return n[s] || (n[s] = (a) => {
    if (!("key" in a))
      return;
    const t = hyphenate(a.key);
    if (r.some((l) => l === t || keyNames[l] === t))
      return e(a);
  });
}, rendererOptions = /* @__PURE__ */ extend$1({ patchProp }, nodeOps);
let renderer, enabledHydration = !1;
function ensureRenderer() {
  return renderer || (renderer = createRenderer(rendererOptions));
}
function ensureHydrationRenderer() {
  return renderer = enabledHydration ? renderer : createHydrationRenderer(rendererOptions), enabledHydration = !0, renderer;
}
const render$8 = (...e) => {
  ensureRenderer().render(...e);
}, hydrate = (...e) => {
  ensureHydrationRenderer().hydrate(...e);
}, createApp = (...e) => {
  const r = ensureRenderer().createApp(...e), { mount: n } = r;
  return r.mount = (s) => {
    const a = normalizeContainer(s);
    if (!a)
      return;
    const t = r._component;
    !isFunction$1(t) && !t.render && !t.template && (t.template = a.innerHTML), a.innerHTML = "";
    const l = n(a, !1, resolveRootNamespace(a));
    return a instanceof Element && (a.removeAttribute("v-cloak"), a.setAttribute("data-v-app", "")), l;
  }, r;
}, createSSRApp = (...e) => {
  const r = ensureHydrationRenderer().createApp(...e), { mount: n } = r;
  return r.mount = (s) => {
    const a = normalizeContainer(s);
    if (a)
      return n(a, !0, resolveRootNamespace(a));
  }, r;
};
function resolveRootNamespace(e) {
  if (e instanceof SVGElement)
    return "svg";
  if (typeof MathMLElement == "function" && e instanceof MathMLElement)
    return "mathml";
}
function normalizeContainer(e) {
  return isString$1(e) ? document.querySelector(e) : e;
}
let ssrDirectiveInitialized = !1;
const initDirectivesForSSR = () => {
  ssrDirectiveInitialized || (ssrDirectiveInitialized = !0, initVModelForSSR(), initVShowForSSR());
}, compile = () => {
}, vue_runtime_esmBundler = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BaseTransition,
  BaseTransitionPropsValidators,
  Comment,
  DeprecationTypes,
  EffectScope,
  ErrorCodes,
  ErrorTypeStrings,
  Fragment,
  KeepAlive,
  ReactiveEffect,
  Static,
  Suspense,
  Teleport,
  Text,
  TrackOpTypes,
  Transition,
  TransitionGroup,
  TriggerOpTypes,
  VueElement,
  assertNumber,
  callWithAsyncErrorHandling,
  callWithErrorHandling,
  camelize,
  capitalize,
  cloneVNode,
  compatUtils,
  compile,
  computed,
  createApp,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createElementVNode: createBaseVNode,
  createHydrationRenderer,
  createPropsRestProxy,
  createRenderer,
  createSSRApp,
  createSlots,
  createStaticVNode,
  createTextVNode,
  createVNode,
  customRef,
  defineAsyncComponent,
  defineComponent,
  defineCustomElement,
  defineEmits,
  defineExpose,
  defineModel,
  defineOptions,
  defineProps,
  defineSSRCustomElement,
  defineSlots,
  devtools,
  effect: effect$3,
  effectScope,
  getCurrentInstance,
  getCurrentScope,
  getTransitionRawChildren,
  guardReactiveProps,
  h: h$1,
  handleError,
  hasInjectionContext,
  hydrate,
  initCustomFormatter,
  initDirectivesForSSR,
  inject,
  isMemoSame,
  isProxy,
  isReactive,
  isReadonly,
  isRef,
  isRuntimeOnly,
  isShallow,
  isVNode,
  markRaw,
  mergeDefaults,
  mergeModels,
  mergeProps,
  nextTick,
  normalizeClass,
  normalizeProps,
  normalizeStyle,
  onActivated,
  onBeforeMount,
  onBeforeUnmount,
  onBeforeUpdate,
  onDeactivated,
  onErrorCaptured,
  onMounted,
  onRenderTracked,
  onRenderTriggered,
  onScopeDispose,
  onServerPrefetch,
  onUnmounted,
  onUpdated,
  openBlock,
  popScopeId,
  provide,
  proxyRefs,
  pushScopeId,
  queuePostFlushCb,
  reactive,
  readonly,
  ref,
  registerRuntimeCompiler,
  render: render$8,
  renderList,
  renderSlot,
  resolveComponent,
  resolveDirective,
  resolveDynamicComponent,
  resolveFilter,
  resolveTransitionHooks,
  setBlockTracking,
  setDevtoolsHook,
  setTransitionHooks,
  shallowReactive,
  shallowReadonly,
  shallowRef,
  ssrContextKey,
  ssrUtils,
  stop,
  toDisplayString,
  toHandlerKey,
  toHandlers,
  toRaw,
  toRef,
  toRefs,
  toValue,
  transformVNodeArgs,
  triggerRef,
  unref,
  useAttrs,
  useCssModule,
  useCssVars,
  useModel,
  useSSRContext,
  useSlots,
  useTransitionState,
  vModelCheckbox,
  vModelDynamic,
  vModelRadio,
  vModelSelect,
  vModelText,
  vShow,
  version,
  warn: warn$2,
  watch,
  watchEffect,
  watchPostEffect,
  watchSyncEffect,
  withAsyncContext,
  withCtx,
  withDefaults,
  withDirectives,
  withKeys,
  withMemo,
  withModifiers,
  withScopeId
}, Symbol.toStringTag, { value: "Module" }));
var E = Object.defineProperty, M$1 = Object.defineProperties, x = Object.getOwnPropertyDescriptors, V$1 = Object.getOwnPropertySymbols, I = Object.prototype.hasOwnProperty, N = Object.prototype.propertyIsEnumerable, C$1 = (e, r, n) => r in e ? E(e, r, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[r] = n, f$1 = (e, r) => {
  for (var n in r || (r = {}))
    I.call(r, n) && C$1(e, n, r[n]);
  if (V$1)
    for (var n of V$1(r))
      N.call(r, n) && C$1(e, n, r[n]);
  return e;
}, m$1 = (e, r) => M$1(e, x(r));
const U$1 = {
  props: {
    autoscroll: {
      type: Boolean,
      default: !0
    }
  },
  watch: {
    typeAheadPointer() {
      this.autoscroll && this.maybeAdjustScroll();
    },
    open(e) {
      this.autoscroll && e && this.$nextTick(() => this.maybeAdjustScroll());
    }
  },
  methods: {
    maybeAdjustScroll() {
      var e;
      const r = ((e = this.$refs.dropdownMenu) == null ? void 0 : e.children[this.typeAheadPointer]) || !1;
      if (r) {
        const n = this.getDropdownViewport(), { top: s, bottom: a, height: t } = r.getBoundingClientRect();
        if (s < n.top)
          return this.$refs.dropdownMenu.scrollTop = r.offsetTop;
        if (a > n.bottom)
          return this.$refs.dropdownMenu.scrollTop = r.offsetTop - (n.height - t);
      }
    },
    getDropdownViewport() {
      return this.$refs.dropdownMenu ? this.$refs.dropdownMenu.getBoundingClientRect() : {
        height: 0,
        top: 0,
        bottom: 0
      };
    }
  }
}, q$1 = {
  data() {
    return {
      typeAheadPointer: -1
    };
  },
  watch: {
    filteredOptions() {
      for (let e = 0; e < this.filteredOptions.length; e++)
        if (this.selectable(this.filteredOptions[e])) {
          this.typeAheadPointer = e;
          break;
        }
    },
    open(e) {
      e && this.typeAheadToLastSelected();
    },
    selectedValue() {
      this.open && this.typeAheadToLastSelected();
    }
  },
  methods: {
    typeAheadUp() {
      for (let e = this.typeAheadPointer - 1; e >= 0; e--)
        if (this.selectable(this.filteredOptions[e])) {
          this.typeAheadPointer = e;
          break;
        }
    },
    typeAheadDown() {
      for (let e = this.typeAheadPointer + 1; e < this.filteredOptions.length; e++)
        if (this.selectable(this.filteredOptions[e])) {
          this.typeAheadPointer = e;
          break;
        }
    },
    typeAheadSelect() {
      const e = this.filteredOptions[this.typeAheadPointer];
      e && this.selectable(e) && this.select(e);
    },
    typeAheadToLastSelected() {
      this.typeAheadPointer = this.selectedValue.length !== 0 ? this.filteredOptions.indexOf(this.selectedValue[this.selectedValue.length - 1]) : -1;
    }
  }
}, J$1 = {
  props: {
    loading: {
      type: Boolean,
      default: !1
    }
  },
  data() {
    return {
      mutableLoading: !1
    };
  },
  watch: {
    search() {
      this.$emit("search", this.search, this.toggleLoading);
    },
    loading(e) {
      this.mutableLoading = e;
    }
  },
  methods: {
    toggleLoading(e = null) {
      return e == null ? this.mutableLoading = !this.mutableLoading : this.mutableLoading = e;
    }
  }
}, S = (e, r) => {
  const n = e.__vccOpts || e;
  for (const [s, a] of r)
    n[s] = a;
  return n;
}, H = {}, X$1 = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "10",
  height: "10"
}, Y$1 = /* @__PURE__ */ createBaseVNode("path", { d: "M6.895455 5l2.842897-2.842898c.348864-.348863.348864-.914488 0-1.263636L9.106534.261648c-.348864-.348864-.914489-.348864-1.263636 0L5 3.104545 2.157102.261648c-.348863-.348864-.914488-.348864-1.263636 0L.261648.893466c-.348864.348864-.348864.914489 0 1.263636L3.104545 5 .261648 7.842898c-.348864.348863-.348864.914488 0 1.263636l.631818.631818c.348864.348864.914773.348864 1.263636 0L5 6.895455l2.842898 2.842897c.348863.348864.914772.348864 1.263636 0l.631818-.631818c.348864-.348864.348864-.914489 0-1.263636L6.895455 5z" }, null, -1), Q$1 = [
  Y$1
];
function G$1(e, r) {
  return openBlock(), createElementBlock("svg", X$1, Q$1);
}
const W$1 = /* @__PURE__ */ S(H, [["render", G$1]]), Z$1 = {}, ee = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "14",
  height: "10"
}, te = /* @__PURE__ */ createBaseVNode("path", { d: "M9.211364 7.59931l4.48338-4.867229c.407008-.441854.407008-1.158247 0-1.60046l-.73712-.80023c-.407008-.441854-1.066904-.441854-1.474243 0L7 5.198617 2.51662.33139c-.407008-.441853-1.066904-.441853-1.474243 0l-.737121.80023c-.407008.441854-.407008 1.158248 0 1.600461l4.48338 4.867228L7 10l2.211364-2.40069z" }, null, -1), se = [
  te
];
function ie(e, r) {
  return openBlock(), createElementBlock("svg", ee, se);
}
const oe = /* @__PURE__ */ S(Z$1, [["render", ie]]), T = {
  Deselect: W$1,
  OpenIndicator: oe
}, ne = {
  mounted(e, { instance: r }) {
    if (r.appendToBody) {
      const {
        height: n,
        top: s,
        left: a,
        width: t
      } = r.$refs.toggle.getBoundingClientRect();
      let l = window.scrollX || window.pageXOffset, o = window.scrollY || window.pageYOffset;
      e.unbindPosition = r.calculatePosition(e, r, {
        width: t + "px",
        left: l + a + "px",
        top: o + s + n + "px"
      }), document.body.appendChild(e);
    }
  },
  unmounted(e, { instance: r }) {
    r.appendToBody && (e.unbindPosition && typeof e.unbindPosition == "function" && e.unbindPosition(), e.parentNode && e.parentNode.removeChild(e));
  }
};
function le(e) {
  const r = {};
  return Object.keys(e).sort().forEach((n) => {
    r[n] = e[n];
  }), JSON.stringify(r);
}
let ae = 0;
function re() {
  return ++ae;
}
const de = {
  components: f$1({}, T),
  directives: { appendToBody: ne },
  mixins: [U$1, q$1, J$1],
  compatConfig: {
    MODE: 3
  },
  emits: [
    "open",
    "close",
    "update:modelValue",
    "search",
    "search:compositionstart",
    "search:compositionend",
    "search:keydown",
    "search:blur",
    "search:focus",
    "search:input",
    "option:created",
    "option:selecting",
    "option:selected",
    "option:deselecting",
    "option:deselected"
  ],
  props: {
    modelValue: {},
    components: {
      type: Object,
      default: () => ({})
    },
    options: {
      type: Array,
      default() {
        return [];
      }
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    deselectFromDropdown: {
      type: Boolean,
      default: !1
    },
    searchable: {
      type: Boolean,
      default: !0
    },
    multiple: {
      type: Boolean,
      default: !1
    },
    placeholder: {
      type: String,
      default: ""
    },
    transition: {
      type: String,
      default: "vs__fade"
    },
    clearSearchOnSelect: {
      type: Boolean,
      default: !0
    },
    closeOnSelect: {
      type: Boolean,
      default: !0
    },
    label: {
      type: String,
      default: "label"
    },
    autocomplete: {
      type: String,
      default: "off"
    },
    reduce: {
      type: Function,
      default: (e) => e
    },
    selectable: {
      type: Function,
      default: (e) => !0
    },
    getOptionLabel: {
      type: Function,
      default(e) {
        return typeof e == "object" ? e.hasOwnProperty(this.label) ? e[this.label] : console.warn(`[vue-select warn]: Label key "option.${this.label}" does not exist in options object ${JSON.stringify(e)}.
https://vue-select.org/api/props.html#getoptionlabel`) : e;
      }
    },
    getOptionKey: {
      type: Function,
      default(e) {
        if (typeof e != "object")
          return e;
        try {
          return e.hasOwnProperty("id") ? e.id : le(e);
        } catch (r) {
          return console.warn(`[vue-select warn]: Could not stringify this option to generate unique key. Please provide'getOptionKey' prop to return a unique key for each option.
https://vue-select.org/api/props.html#getoptionkey`, e, r);
        }
      }
    },
    onTab: {
      type: Function,
      default: function() {
        this.selectOnTab && !this.isComposing && this.typeAheadSelect();
      }
    },
    taggable: {
      type: Boolean,
      default: !1
    },
    tabindex: {
      type: Number,
      default: null
    },
    pushTags: {
      type: Boolean,
      default: !1
    },
    filterable: {
      type: Boolean,
      default: !0
    },
    filterBy: {
      type: Function,
      default(e, r, n) {
        return (r || "").toLocaleLowerCase().indexOf(n.toLocaleLowerCase()) > -1;
      }
    },
    filter: {
      type: Function,
      default(e, r) {
        return e.filter((n) => {
          let s = this.getOptionLabel(n);
          return typeof s == "number" && (s = s.toString()), this.filterBy(n, s, r);
        });
      }
    },
    createOption: {
      type: Function,
      default(e) {
        return typeof this.optionList[0] == "object" ? { [this.label]: e } : e;
      }
    },
    resetOnOptionsChange: {
      default: !1,
      validator: (e) => ["function", "boolean"].includes(typeof e)
    },
    clearSearchOnBlur: {
      type: Function,
      default: function({ clearSearchOnSelect: e, multiple: r }) {
        return e && !r;
      }
    },
    noDrop: {
      type: Boolean,
      default: !1
    },
    inputId: {
      type: String
    },
    dir: {
      type: String,
      default: "auto"
    },
    selectOnTab: {
      type: Boolean,
      default: !1
    },
    selectOnKeyCodes: {
      type: Array,
      default: () => [13]
    },
    searchInputQuerySelector: {
      type: String,
      default: "[type=search]"
    },
    mapKeydown: {
      type: Function,
      default: (e, r) => e
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    calculatePosition: {
      type: Function,
      default(e, r, { width: n, top: s, left: a }) {
        e.style.top = s, e.style.left = a, e.style.width = n;
      }
    },
    dropdownShouldOpen: {
      type: Function,
      default({ noDrop: e, open: r, mutableLoading: n }) {
        return e ? !1 : r && !n;
      }
    },
    uid: {
      type: [String, Number],
      default: () => re()
    }
  },
  data() {
    return {
      search: "",
      open: !1,
      isComposing: !1,
      pushedTags: [],
      _value: [],
      deselectButtons: []
    };
  },
  computed: {
    isReducingValues() {
      return this.$props.reduce !== this.$options.props.reduce.default;
    },
    isTrackingValues() {
      return typeof this.modelValue > "u" || this.isReducingValues;
    },
    selectedValue() {
      let e = this.modelValue;
      return this.isTrackingValues && (e = this.$data._value), e != null && e !== "" ? [].concat(e) : [];
    },
    optionList() {
      return this.options.concat(this.pushTags ? this.pushedTags : []);
    },
    searchEl() {
      return this.$slots.search ? this.$refs.selectedOptions.querySelector(this.searchInputQuerySelector) : this.$refs.search;
    },
    scope() {
      const e = {
        search: this.search,
        loading: this.loading,
        searching: this.searching,
        filteredOptions: this.filteredOptions
      };
      return {
        search: {
          attributes: f$1({
            disabled: this.disabled,
            placeholder: this.searchPlaceholder,
            tabindex: this.tabindex,
            readonly: !this.searchable,
            id: this.inputId,
            "aria-autocomplete": "list",
            "aria-labelledby": `vs${this.uid}__combobox`,
            "aria-controls": `vs${this.uid}__listbox`,
            ref: "search",
            type: "search",
            autocomplete: this.autocomplete,
            value: this.search
          }, this.dropdownOpen && this.filteredOptions[this.typeAheadPointer] ? {
            "aria-activedescendant": `vs${this.uid}__option-${this.typeAheadPointer}`
          } : {}),
          events: {
            compositionstart: () => this.isComposing = !0,
            compositionend: () => this.isComposing = !1,
            keydown: this.onSearchKeyDown,
            blur: this.onSearchBlur,
            focus: this.onSearchFocus,
            input: (r) => this.search = r.target.value
          }
        },
        spinner: {
          loading: this.mutableLoading
        },
        noOptions: {
          search: this.search,
          loading: this.mutableLoading,
          searching: this.searching
        },
        openIndicator: {
          attributes: {
            ref: "openIndicator",
            role: "presentation",
            class: "vs__open-indicator"
          }
        },
        listHeader: e,
        listFooter: e,
        header: m$1(f$1({}, e), { deselect: this.deselect }),
        footer: m$1(f$1({}, e), { deselect: this.deselect })
      };
    },
    childComponents() {
      return f$1(f$1({}, T), this.components);
    },
    stateClasses() {
      return {
        "vs--open": this.dropdownOpen,
        "vs--single": !this.multiple,
        "vs--multiple": this.multiple,
        "vs--searching": this.searching && !this.noDrop,
        "vs--searchable": this.searchable && !this.noDrop,
        "vs--unsearchable": !this.searchable,
        "vs--loading": this.mutableLoading,
        "vs--disabled": this.disabled
      };
    },
    searching() {
      return !!this.search;
    },
    dropdownOpen() {
      return this.dropdownShouldOpen(this);
    },
    searchPlaceholder() {
      return this.isValueEmpty && this.placeholder ? this.placeholder : void 0;
    },
    filteredOptions() {
      const e = [].concat(this.optionList);
      if (!this.filterable && !this.taggable)
        return e;
      const r = this.search.length ? this.filter(e, this.search, this) : e;
      if (this.taggable && this.search.length) {
        const n = this.createOption(this.search);
        this.optionExists(n) || r.unshift(n);
      }
      return r;
    },
    isValueEmpty() {
      return this.selectedValue.length === 0;
    },
    showClearButton() {
      return !this.multiple && this.clearable && !this.open && !this.isValueEmpty;
    }
  },
  watch: {
    options(e, r) {
      const n = () => typeof this.resetOnOptionsChange == "function" ? this.resetOnOptionsChange(e, r, this.selectedValue) : this.resetOnOptionsChange;
      !this.taggable && n() && this.clearSelection(), this.modelValue && this.isTrackingValues && this.setInternalValueFromOptions(this.modelValue);
    },
    modelValue: {
      immediate: !0,
      handler(e) {
        this.isTrackingValues && this.setInternalValueFromOptions(e);
      }
    },
    multiple() {
      this.clearSelection();
    },
    open(e) {
      this.$emit(e ? "open" : "close");
    }
  },
  created() {
    this.mutableLoading = this.loading;
  },
  methods: {
    setInternalValueFromOptions(e) {
      Array.isArray(e) ? this.$data._value = e.map((r) => this.findOptionFromReducedValue(r)) : this.$data._value = this.findOptionFromReducedValue(e);
    },
    select(e) {
      this.$emit("option:selecting", e), this.isOptionSelected(e) ? this.deselectFromDropdown && (this.clearable || this.multiple && this.selectedValue.length > 1) && this.deselect(e) : (this.taggable && !this.optionExists(e) && (this.$emit("option:created", e), this.pushTag(e)), this.multiple && (e = this.selectedValue.concat(e)), this.updateValue(e), this.$emit("option:selected", e)), this.onAfterSelect(e);
    },
    deselect(e) {
      this.$emit("option:deselecting", e), this.updateValue(this.selectedValue.filter((r) => !this.optionComparator(r, e))), this.$emit("option:deselected", e);
    },
    clearSelection() {
      this.updateValue(this.multiple ? [] : null);
    },
    onAfterSelect(e) {
      this.closeOnSelect && (this.open = !this.open, this.searchEl.blur()), this.clearSearchOnSelect && (this.search = "");
    },
    updateValue(e) {
      typeof this.modelValue > "u" && (this.$data._value = e), e !== null && (Array.isArray(e) ? e = e.map((r) => this.reduce(r)) : e = this.reduce(e)), this.$emit("update:modelValue", e);
    },
    toggleDropdown(e) {
      const r = e.target !== this.searchEl;
      r && e.preventDefault();
      const n = [
        ...this.deselectButtons || [],
        this.$refs.clearButton
      ];
      if (this.searchEl === void 0 || n.filter(Boolean).some((s) => s.contains(e.target) || s === e.target)) {
        e.preventDefault();
        return;
      }
      this.open && r ? this.searchEl.blur() : this.disabled || (this.open = !0, this.searchEl.focus());
    },
    isOptionSelected(e) {
      return this.selectedValue.some((r) => this.optionComparator(r, e));
    },
    isOptionDeselectable(e) {
      return this.isOptionSelected(e) && this.deselectFromDropdown;
    },
    optionComparator(e, r) {
      return this.getOptionKey(e) === this.getOptionKey(r);
    },
    findOptionFromReducedValue(e) {
      const r = (s) => JSON.stringify(this.reduce(s)) === JSON.stringify(e), n = [...this.options, ...this.pushedTags].filter(r);
      return n.length === 1 ? n[0] : n.find((s) => this.optionComparator(s, this.$data._value)) || e;
    },
    closeSearchOptions() {
      this.open = !1, this.$emit("search:blur");
    },
    maybeDeleteValue() {
      if (!this.searchEl.value.length && this.selectedValue && this.selectedValue.length && this.clearable) {
        let e = null;
        this.multiple && (e = [
          ...this.selectedValue.slice(0, this.selectedValue.length - 1)
        ]), this.updateValue(e);
      }
    },
    optionExists(e) {
      return this.optionList.some((r) => this.optionComparator(r, e));
    },
    normalizeOptionForSlot(e) {
      return typeof e == "object" ? e : { [this.label]: e };
    },
    pushTag(e) {
      this.pushedTags.push(e);
    },
    onEscape() {
      this.search.length ? this.search = "" : this.searchEl.blur();
    },
    onSearchBlur() {
      if (this.mousedown && !this.searching)
        this.mousedown = !1;
      else {
        const { clearSearchOnSelect: e, multiple: r } = this;
        this.clearSearchOnBlur({ clearSearchOnSelect: e, multiple: r }) && (this.search = ""), this.closeSearchOptions();
        return;
      }
      if (this.search.length === 0 && this.options.length === 0) {
        this.closeSearchOptions();
        return;
      }
    },
    onSearchFocus() {
      this.open = !0, this.$emit("search:focus");
    },
    onMousedown() {
      this.mousedown = !0;
    },
    onMouseUp() {
      this.mousedown = !1;
    },
    onSearchKeyDown(e) {
      const r = (a) => (a.preventDefault(), !this.isComposing && this.typeAheadSelect()), n = {
        8: (a) => this.maybeDeleteValue(),
        9: (a) => this.onTab(),
        27: (a) => this.onEscape(),
        38: (a) => (a.preventDefault(), this.typeAheadUp()),
        40: (a) => (a.preventDefault(), this.typeAheadDown())
      };
      this.selectOnKeyCodes.forEach((a) => n[a] = r);
      const s = this.mapKeydown(n, this);
      if (typeof s[e.keyCode] == "function")
        return s[e.keyCode](e);
    }
  }
}, he = ["dir"], ce = ["id", "aria-expanded", "aria-owns"], ue = {
  ref: "selectedOptions",
  class: "vs__selected-options"
}, pe = ["disabled", "title", "aria-label", "onClick"], fe = {
  ref: "actions",
  class: "vs__actions"
}, ge = ["disabled"], ye = { class: "vs__spinner" }, me = ["id"], be = ["id", "aria-selected", "onMouseover", "onClick"], _e = {
  key: 0,
  class: "vs__no-options"
}, Oe = /* @__PURE__ */ createTextVNode(" Sorry, no matching options. "), we = ["id"];
function ve(e, r, n, s, a, t) {
  const l = resolveDirective("append-to-body");
  return openBlock(), createElementBlock("div", {
    dir: n.dir,
    class: normalizeClass(["v-select", t.stateClasses])
  }, [
    renderSlot(e.$slots, "header", normalizeProps(guardReactiveProps(t.scope.header))),
    createBaseVNode("div", {
      id: `vs${n.uid}__combobox`,
      ref: "toggle",
      class: "vs__dropdown-toggle",
      role: "combobox",
      "aria-expanded": t.dropdownOpen.toString(),
      "aria-owns": `vs${n.uid}__listbox`,
      "aria-label": "Search for option",
      onMousedown: r[1] || (r[1] = (o) => t.toggleDropdown(o))
    }, [
      createBaseVNode("div", ue, [
        (openBlock(!0), createElementBlock(Fragment, null, renderList(t.selectedValue, (o, c) => renderSlot(e.$slots, "selected-option-container", {
          option: t.normalizeOptionForSlot(o),
          deselect: t.deselect,
          multiple: n.multiple,
          disabled: n.disabled
        }, () => [
          (openBlock(), createElementBlock("span", {
            key: n.getOptionKey(o),
            class: "vs__selected"
          }, [
            renderSlot(e.$slots, "selected-option", normalizeProps(guardReactiveProps(t.normalizeOptionForSlot(o))), () => [
              createTextVNode(toDisplayString(n.getOptionLabel(o)), 1)
            ]),
            n.multiple ? (openBlock(), createElementBlock("button", {
              key: 0,
              ref_for: !0,
              ref: (_) => a.deselectButtons[c] = _,
              disabled: n.disabled,
              type: "button",
              class: "vs__deselect",
              title: `Deselect ${n.getOptionLabel(o)}`,
              "aria-label": `Deselect ${n.getOptionLabel(o)}`,
              onClick: (_) => t.deselect(o)
            }, [
              (openBlock(), createBlock(resolveDynamicComponent(t.childComponents.Deselect)))
            ], 8, pe)) : createCommentVNode("", !0)
          ]))
        ])), 256)),
        renderSlot(e.$slots, "search", normalizeProps(guardReactiveProps(t.scope.search)), () => [
          createBaseVNode("input", mergeProps({ class: "vs__search" }, t.scope.search.attributes, toHandlers(t.scope.search.events)), null, 16)
        ])
      ], 512),
      createBaseVNode("div", fe, [
        withDirectives(createBaseVNode("button", {
          ref: "clearButton",
          disabled: n.disabled,
          type: "button",
          class: "vs__clear",
          title: "Clear Selected",
          "aria-label": "Clear Selected",
          onClick: r[0] || (r[0] = (...o) => t.clearSelection && t.clearSelection(...o))
        }, [
          (openBlock(), createBlock(resolveDynamicComponent(t.childComponents.Deselect)))
        ], 8, ge), [
          [vShow, t.showClearButton]
        ]),
        renderSlot(e.$slots, "open-indicator", normalizeProps(guardReactiveProps(t.scope.openIndicator)), () => [
          n.noDrop ? createCommentVNode("", !0) : (openBlock(), createBlock(resolveDynamicComponent(t.childComponents.OpenIndicator), normalizeProps(mergeProps({ key: 0 }, t.scope.openIndicator.attributes)), null, 16))
        ]),
        renderSlot(e.$slots, "spinner", normalizeProps(guardReactiveProps(t.scope.spinner)), () => [
          withDirectives(createBaseVNode("div", ye, "Loading...", 512), [
            [vShow, e.mutableLoading]
          ])
        ])
      ], 512)
    ], 40, ce),
    createVNode(Transition, { name: n.transition }, {
      default: withCtx(() => [
        t.dropdownOpen ? withDirectives((openBlock(), createElementBlock("ul", {
          id: `vs${n.uid}__listbox`,
          ref: "dropdownMenu",
          key: `vs${n.uid}__listbox`,
          class: "vs__dropdown-menu",
          role: "listbox",
          tabindex: "-1",
          onMousedown: r[2] || (r[2] = withModifiers((...o) => t.onMousedown && t.onMousedown(...o), ["prevent"])),
          onMouseup: r[3] || (r[3] = (...o) => t.onMouseUp && t.onMouseUp(...o))
        }, [
          renderSlot(e.$slots, "list-header", normalizeProps(guardReactiveProps(t.scope.listHeader))),
          (openBlock(!0), createElementBlock(Fragment, null, renderList(t.filteredOptions, (o, c) => (openBlock(), createElementBlock("li", {
            id: `vs${n.uid}__option-${c}`,
            key: n.getOptionKey(o),
            role: "option",
            class: normalizeClass(["vs__dropdown-option", {
              "vs__dropdown-option--deselect": t.isOptionDeselectable(o) && c === e.typeAheadPointer,
              "vs__dropdown-option--selected": t.isOptionSelected(o),
              "vs__dropdown-option--highlight": c === e.typeAheadPointer,
              "vs__dropdown-option--disabled": !n.selectable(o)
            }]),
            "aria-selected": c === e.typeAheadPointer ? !0 : null,
            onMouseover: (_) => n.selectable(o) ? e.typeAheadPointer = c : null,
            onClick: withModifiers((_) => n.selectable(o) ? t.select(o) : null, ["prevent", "stop"])
          }, [
            renderSlot(e.$slots, "option", normalizeProps(guardReactiveProps(t.normalizeOptionForSlot(o))), () => [
              createTextVNode(toDisplayString(n.getOptionLabel(o)), 1)
            ])
          ], 42, be))), 128)),
          t.filteredOptions.length === 0 ? (openBlock(), createElementBlock("li", _e, [
            renderSlot(e.$slots, "no-options", normalizeProps(guardReactiveProps(t.scope.noOptions)), () => [
              Oe
            ])
          ])) : createCommentVNode("", !0),
          renderSlot(e.$slots, "list-footer", normalizeProps(guardReactiveProps(t.scope.listFooter)))
        ], 40, me)), [
          [l]
        ]) : (openBlock(), createElementBlock("ul", {
          key: 1,
          id: `vs${n.uid}__listbox`,
          role: "listbox",
          style: { display: "none", visibility: "hidden" }
        }, null, 8, we))
      ]),
      _: 3
    }, 8, ["name"]),
    renderSlot(e.$slots, "footer", normalizeProps(guardReactiveProps(t.scope.footer)))
  ], 10, he);
}
const Ce = /* @__PURE__ */ S(de, [["render", ve]]);
/*!
  * vue-color-kit v1.0.6
  * (c) 2023 
  * @license MIT
  */
function setColorValue(e) {
  let r = { r: 0, g: 0, b: 0, a: 1 };
  /#/.test(e) ? r = hex2rgb(e) : /rgb/.test(e) ? r = rgb2rgba(e) : typeof e == "string" ? r = rgb2rgba(`rgba(${e})`) : Object.prototype.toString.call(e) === "[object Object]" && (r = e);
  const { r: n, g: s, b: a, a: t } = r, { h: l, s: o, v: c } = rgb2hsv(r);
  return { r: n, g: s, b: a, a: t === void 0 ? 1 : t, h: l, s: o, v: c };
}
function createAlphaSquare(e) {
  const r = document.createElement("canvas"), n = r.getContext("2d"), s = e * 2;
  return r.width = s, r.height = s, n.fillStyle = "#ffffff", n.fillRect(0, 0, s, s), n.fillStyle = "#ccd5db", n.fillRect(0, 0, e, e), n.fillRect(e, e, e, e), r;
}
function createLinearGradient(e, r, n, s, a, t) {
  const l = e === "l", o = r.createLinearGradient(0, 0, l ? n : 0, l ? 0 : s);
  o.addColorStop(0.01, a), o.addColorStop(0.99, t), r.fillStyle = o, r.fillRect(0, 0, n, s);
}
function rgb2hex({ r: e, g: r, b: n }, s) {
  const a = (l) => ("0" + Number(l).toString(16)).slice(-2), t = `#${a(e)}${a(r)}${a(n)}`;
  return s ? t.toUpperCase() : t;
}
function hex2rgb(e) {
  e = e.slice(1);
  const r = (n) => parseInt(n, 16) || 0;
  return {
    r: r(e.slice(0, 2)),
    g: r(e.slice(2, 4)),
    b: r(e.slice(4, 6))
  };
}
function rgb2rgba(e) {
  return typeof e == "string" ? (e = (/rgba?\((.*?)\)/.exec(e) || ["", "0,0,0,1"])[1].split(","), {
    r: Number(e[0]) || 0,
    g: Number(e[1]) || 0,
    b: Number(e[2]) || 0,
    a: Number(e[3] ? e[3] : 1)
  }) : e;
}
function rgb2hsv({ r: e, g: r, b: n }) {
  e = e / 255, r = r / 255, n = n / 255;
  const s = Math.max(e, r, n), a = Math.min(e, r, n), t = s - a;
  let l = 0;
  s === a ? l = 0 : s === e ? r >= n ? l = 60 * (r - n) / t : l = 60 * (r - n) / t + 360 : s === r ? l = 60 * (n - e) / t + 120 : s === n && (l = 60 * (e - r) / t + 240), l = Math.floor(l);
  let o = parseFloat((s === 0 ? 0 : 1 - a / s).toFixed(2)), c = parseFloat(s.toFixed(2));
  return { h: l, s: o, v: c };
}
var script$2 = /* @__PURE__ */ defineComponent({
  props: {
    color: {
      type: String,
      default: "#000000"
    },
    hsv: {
      type: Object,
      default: null
    },
    size: {
      type: Number,
      default: 152
    }
  },
  emits: ["selectSaturation"],
  data() {
    return {
      slideSaturationStyle: {}
    };
  },
  // Can’t monitor, otherwise the color will change when you change yourself
  // watch: {
  //     color() {
  //         this.renderColor()
  //     }
  // },
  mounted() {
    this.renderColor(), this.renderSlide();
  },
  methods: {
    renderColor() {
      const e = this.$refs.canvasSaturation, r = this.size, n = e.getContext("2d");
      e.width = r, e.height = r, n.fillStyle = this.color, n.fillRect(0, 0, r, r), createLinearGradient("l", n, r, r, "#FFFFFF", "rgba(255,255,255,0)"), createLinearGradient("p", n, r, r, "rgba(0,0,0,0)", "#000000");
    },
    renderSlide() {
      this.slideSaturationStyle = {
        left: this.hsv.s * this.size - 5 + "px",
        top: (1 - this.hsv.v) * this.size - 5 + "px"
      };
    },
    selectSaturation(e) {
      const { top: r, left: n } = this.$el.getBoundingClientRect(), s = e.target.getContext("2d"), a = (l) => {
        let o = l.clientX - n, c = l.clientY - r;
        o < 0 && (o = 0), c < 0 && (c = 0), o > this.size && (o = this.size), c > this.size && (c = this.size), this.slideSaturationStyle = {
          left: o - 5 + "px",
          top: c - 5 + "px"
        };
        const _ = s.getImageData(Math.min(o, this.size - 1), Math.min(c, this.size - 1), 1, 1), [u, y, g] = _.data;
        this.$emit("selectSaturation", { r: u, g: y, b: g });
      };
      a(e);
      const t = () => {
        document.removeEventListener("mousemove", a), document.removeEventListener("mouseup", t);
      };
      document.addEventListener("mousemove", a), document.addEventListener("mouseup", t);
    }
  }
});
const _hoisted_1$6 = { ref: "canvasSaturation" };
function render$3(e, r, n, s, a, t) {
  return openBlock(), createBlock(
    "div",
    {
      class: "saturation",
      onMousedown: r[1] || (r[1] = withModifiers((...l) => e.selectSaturation && e.selectSaturation(...l), ["prevent", "stop"]))
    },
    [
      createVNode(
        "canvas",
        _hoisted_1$6,
        null,
        512
        /* NEED_PATCH */
      ),
      createVNode(
        "div",
        {
          style: e.slideSaturationStyle,
          class: "slide"
        },
        null,
        4
        /* STYLE */
      )
    ],
    32
    /* HYDRATE_EVENTS */
  );
}
script$2.render = render$3;
script$2.__file = "src/color/Saturation.vue";
var script$1$1 = /* @__PURE__ */ defineComponent({
  props: {
    hsv: {
      type: Object,
      default: null
    },
    width: {
      type: Number,
      default: 15
    },
    height: {
      type: Number,
      default: 152
    }
  },
  emits: ["selectHue"],
  data() {
    return {
      slideHueStyle: {}
    };
  },
  mounted() {
    this.renderColor(), this.renderSlide();
  },
  methods: {
    renderColor() {
      const e = this.$refs.canvasHue, r = this.width, n = this.height, s = e.getContext("2d");
      e.width = r, e.height = n;
      const a = s.createLinearGradient(0, 0, 0, n);
      a.addColorStop(0, "#FF0000"), a.addColorStop(0.17 * 1, "#FF00FF"), a.addColorStop(0.17 * 2, "#0000FF"), a.addColorStop(0.17 * 3, "#00FFFF"), a.addColorStop(0.17 * 4, "#00FF00"), a.addColorStop(0.17 * 5, "#FFFF00"), a.addColorStop(1, "#FF0000"), s.fillStyle = a, s.fillRect(0, 0, r, n);
    },
    renderSlide() {
      this.slideHueStyle = {
        top: (1 - this.hsv.h / 360) * this.height - 2 + "px"
      };
    },
    selectHue(e) {
      const { top: r } = this.$el.getBoundingClientRect(), n = e.target.getContext("2d"), s = (t) => {
        let l = t.clientY - r;
        l < 0 && (l = 0), l > this.height && (l = this.height), this.slideHueStyle = {
          top: l - 2 + "px"
        };
        const o = n.getImageData(0, Math.min(l, this.height - 1), 1, 1), [c, _, u] = o.data;
        this.$emit("selectHue", { r: c, g: _, b: u });
      };
      s(e);
      const a = () => {
        document.removeEventListener("mousemove", s), document.removeEventListener("mouseup", a);
      };
      document.addEventListener("mousemove", s), document.addEventListener("mouseup", a);
    }
  }
});
const _hoisted_1$1$2 = { ref: "canvasHue" };
function render$1$1(e, r, n, s, a, t) {
  return openBlock(), createBlock(
    "div",
    {
      class: "hue",
      onMousedown: r[1] || (r[1] = withModifiers((...l) => e.selectHue && e.selectHue(...l), ["prevent", "stop"]))
    },
    [
      createVNode(
        "canvas",
        _hoisted_1$1$2,
        null,
        512
        /* NEED_PATCH */
      ),
      createVNode(
        "div",
        {
          style: e.slideHueStyle,
          class: "slide"
        },
        null,
        4
        /* STYLE */
      )
    ],
    32
    /* HYDRATE_EVENTS */
  );
}
script$1$1.render = render$1$1;
script$1$1.__file = "src/color/Hue.vue";
var script$2$1 = /* @__PURE__ */ defineComponent({
  props: {
    color: {
      type: String,
      default: "#000000"
    },
    rgba: {
      type: Object,
      default: null
    },
    width: {
      type: Number,
      default: 15
    },
    height: {
      type: Number,
      default: 152
    }
  },
  emits: ["selectAlpha"],
  data() {
    return {
      slideAlphaStyle: {},
      alphaSize: 5
    };
  },
  watch: {
    color() {
      this.renderColor();
    },
    "rgba.a"() {
      this.renderSlide();
    }
  },
  mounted() {
    this.renderColor(), this.renderSlide();
  },
  methods: {
    renderColor() {
      const e = this.$refs.canvasAlpha, r = this.width, n = this.height, s = this.alphaSize, a = createAlphaSquare(s), t = e.getContext("2d");
      e.width = r, e.height = n, t.fillStyle = t.createPattern(a, "repeat"), t.fillRect(0, 0, r, n), createLinearGradient("p", t, r, n, "rgba(255,255,255,0)", this.color);
    },
    renderSlide() {
      this.slideAlphaStyle = {
        top: this.rgba.a * this.height - 2 + "px"
      };
    },
    selectAlpha(e) {
      const { top: r } = this.$el.getBoundingClientRect(), n = (a) => {
        let t = a.clientY - r;
        t < 0 && (t = 0), t > this.height && (t = this.height);
        let l = parseFloat((t / this.height).toFixed(2));
        this.$emit("selectAlpha", l);
      };
      n(e);
      const s = () => {
        document.removeEventListener("mousemove", n), document.removeEventListener("mouseup", s);
      };
      document.addEventListener("mousemove", n), document.addEventListener("mouseup", s);
    }
  }
});
const _hoisted_1$2$1 = { ref: "canvasAlpha" };
function render$2$1(e, r, n, s, a, t) {
  return openBlock(), createBlock(
    "div",
    {
      class: "color-alpha",
      onMousedown: r[1] || (r[1] = withModifiers((...l) => e.selectAlpha && e.selectAlpha(...l), ["prevent", "stop"]))
    },
    [
      createVNode(
        "canvas",
        _hoisted_1$2$1,
        null,
        512
        /* NEED_PATCH */
      ),
      createVNode(
        "div",
        {
          style: e.slideAlphaStyle,
          class: "slide"
        },
        null,
        4
        /* STYLE */
      )
    ],
    32
    /* HYDRATE_EVENTS */
  );
}
script$2$1.render = render$2$1;
script$2$1.__file = "src/color/Alpha.vue";
var script$3 = /* @__PURE__ */ defineComponent({
  props: {
    color: {
      type: String,
      default: "#000000"
    },
    width: {
      type: Number,
      default: 100
    },
    height: {
      type: Number,
      default: 30
    }
  },
  data() {
    return {
      alphaSize: 5
    };
  },
  watch: {
    color() {
      this.renderColor();
    }
  },
  mounted() {
    this.renderColor();
  },
  methods: {
    renderColor() {
      const e = this.$el, r = this.width, n = this.height, s = this.alphaSize, a = createAlphaSquare(s), t = e.getContext("2d");
      e.width = r, e.height = n, t.fillStyle = t.createPattern(a, "repeat"), t.fillRect(0, 0, r, n), t.fillStyle = this.color, t.fillRect(0, 0, r, n);
    }
  }
});
function render$3$1(e, r, n, s, a, t) {
  return openBlock(), createBlock("canvas");
}
script$3.render = render$3$1;
script$3.__file = "src/color/Preview.vue";
var script$4 = /* @__PURE__ */ defineComponent({
  props: {
    suckerCanvas: {
      type: Object,
      default: null
    },
    suckerArea: {
      type: Array,
      default: () => []
    }
  },
  data() {
    return {
      isOpenSucker: !1,
      suckerPreview: null,
      isSucking: !1
    };
  },
  watch: {
    suckerCanvas(e) {
      this.isSucking = !1, this.suckColor(e);
    }
  },
  methods: {
    openSucker() {
      this.isOpenSucker ? this.keydownHandler({ keyCode: 27 }) : (this.isOpenSucker = !0, this.isSucking = !0, this.$emit("openSucker", !0), document.addEventListener("keydown", this.keydownHandler));
    },
    keydownHandler(e) {
      e.keyCode === 27 && (this.isOpenSucker = !1, this.isSucking = !1, this.$emit("openSucker", !1), document.removeEventListener("keydown", this.keydownHandler), document.removeEventListener("mousemove", this.mousemoveHandler), document.removeEventListener("mouseup", this.mousemoveHandler), this.suckerPreview && (document.body.removeChild(this.suckerPreview), this.suckerPreview = null));
    },
    mousemoveHandler(e) {
      const { clientX: r, clientY: n } = e, { top: s, left: a, width: t, height: l } = this.suckerCanvas.getBoundingClientRect(), o = r - a, c = n - s, u = this.suckerCanvas.getContext("2d").getImageData(Math.min(o, t - 1), Math.min(c, l - 1), 1, 1);
      let [y, g, Ee, Ve] = u.data;
      Ve = parseFloat((Ve / 255).toFixed(2));
      const Me = this.suckerPreview.style;
      Object.assign(Me, {
        position: "absolute",
        left: r + 20 + "px",
        top: n - 36 + "px",
        width: "24px",
        height: "24px",
        borderRadius: "50%",
        border: "2px solid #fff",
        boxShadow: "0 0 8px 0 rgba(0, 0, 0, 0.16)",
        background: `rgba(${y}, ${g}, ${Ee}, ${Ve})`,
        zIndex: 95
      }), this.suckerArea.length && // @ts-ignore
      r >= this.suckerArea[0] && // @ts-ignore
      n >= this.suckerArea[1] && // @ts-ignore
      r <= this.suckerArea[2] && // @ts-ignore
      n <= this.suckerArea[3] ? Me.display = "" : Me.display = "none";
    },
    suckColor(e) {
      e && e.tagName !== "CANVAS" || (this.suckerPreview = document.createElement("div"), this.suckerPreview && document.body.appendChild(this.suckerPreview), document.addEventListener("mousemove", this.mousemoveHandler), document.addEventListener("mouseup", this.mousemoveHandler), e.addEventListener("click", (r) => {
        const { clientX: n, clientY: s } = r, { top: a, left: t, width: l, height: o } = e.getBoundingClientRect(), c = n - t, _ = s - a, y = e.getContext("2d").getImageData(Math.min(c, l - 1), Math.min(_, o - 1), 1, 1);
        let [g, Ee, Ve, Me] = y.data;
        Me = parseFloat((Me / 255).toFixed(2)), this.$emit("selectSucker", { r: g, g: Ee, b: Ve, a: Me });
      }));
    }
  }
});
const _hoisted_1$3$1 = /* @__PURE__ */ createVNode(
  "path",
  { d: "M13.1,8.2l5.6,5.6c0.4,0.4,0.5,1.1,0.1,1.5s-1.1,0.5-1.5,0.1c0,0-0.1,0-0.1-0.1l-1.4-1.4l-7.7,7.7C7.9,21.9,7.6,22,7.3,22H3.1C2.5,22,2,21.5,2,20.9l0,0v-4.2c0-0.3,0.1-0.6,0.3-0.8l5.8-5.8C8.5,9.7,9.2,9.6,9.7,10s0.5,1.1,0.1,1.5c0,0,0,0.1-0.1,0.1l-5.5,5.5v2.7h2.7l7.4-7.4L8.7,6.8c-0.5-0.4-0.5-1-0.1-1.5s1.1-0.5,1.5-0.1c0,0,0.1,0,0.1,0.1l1.4,1.4l3.5-3.5c1.6-1.6,4.1-1.6,5.8-0.1c1.6,1.6,1.6,4.1,0.1,5.8L20.9,9l-3.6,3.6c-0.4,0.4-1.1,0.5-1.5,0.1" },
  null,
  -1
  /* HOISTED */
), _hoisted_2$4 = {
  key: 1,
  class: "sucker",
  viewBox: "-16 -16 68 68",
  xmlns: "http://www.w3.org/2000/svg",
  stroke: "#9099a4"
}, _hoisted_3$4 = /* @__PURE__ */ createVNode(
  "g",
  {
    fill: "none",
    "fill-rule": "evenodd"
  },
  [
    /* @__PURE__ */ createVNode("g", {
      transform: "translate(1 1)",
      "stroke-width": "4"
    }, [
      /* @__PURE__ */ createVNode("circle", {
        "stroke-opacity": ".5",
        cx: "18",
        cy: "18",
        r: "18"
      }),
      /* @__PURE__ */ createVNode("path", { d: "M36 18c0-9.94-8.06-18-18-18" }, [
        /* @__PURE__ */ createVNode("animateTransform", {
          attributeName: "transform",
          type: "rotate",
          from: "0 18 18",
          to: "360 18 18",
          dur: "1s",
          repeatCount: "indefinite"
        })
      ])
    ])
  ],
  -1
  /* HOISTED */
);
function render$4(e, r, n, s, a, t) {
  return openBlock(), createBlock("div", null, [
    e.isSucking ? createCommentVNode("v-if", !0) : (openBlock(), createBlock(
      "svg",
      {
        key: 0,
        class: [{ active: e.isOpenSucker }, "sucker"],
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "-12 -12 48 48",
        onClick: r[1] || (r[1] = (...l) => e.openSucker && e.openSucker(...l))
      },
      [
        _hoisted_1$3$1
      ],
      2
      /* CLASS */
    )),
    e.isSucking ? (openBlock(), createBlock("svg", _hoisted_2$4, [
      _hoisted_3$4
    ])) : createCommentVNode("v-if", !0)
  ]);
}
script$4.render = render$4;
script$4.__file = "src/color/Sucker.vue";
var script$5 = /* @__PURE__ */ defineComponent({
  props: {
    name: {
      type: String,
      default: ""
    },
    color: {
      type: String,
      default: ""
    }
  },
  emits: ["inputColor", "inputFocus", "inputBlur"],
  setup(e, { emit: r }) {
    return {
      modelColor: computed({
        get() {
          return e.color || "";
        },
        set(t) {
          r("inputColor", t);
        }
      }),
      handleFocus: (t) => {
        r("inputFocus", t);
      },
      handleBlur: (t) => {
        r("inputBlur", t);
      }
    };
  }
});
const _hoisted_1$4$1 = { class: "color-type" }, _hoisted_2$1$1 = { class: "name" };
function render$5(e, r, n, s, a, t) {
  return openBlock(), createBlock("div", _hoisted_1$4$1, [
    createVNode(
      "span",
      _hoisted_2$1$1,
      toDisplayString(e.name),
      1
      /* TEXT */
    ),
    withDirectives(createVNode(
      "input",
      {
        "onUpdate:modelValue": r[1] || (r[1] = (l) => e.modelColor = l),
        class: "value",
        onFocus: r[2] || (r[2] = (...l) => e.handleFocus && e.handleFocus(...l)),
        onBlur: r[3] || (r[3] = (...l) => e.handleBlur && e.handleBlur(...l))
      },
      null,
      544
      /* HYDRATE_EVENTS, NEED_PATCH */
    ), [
      [vModelText, e.modelColor]
    ])
  ]);
}
script$5.render = render$5;
script$5.__file = "src/color/Box.vue";
var script$6 = /* @__PURE__ */ defineComponent({
  name: "ColorPicker",
  props: {
    color: {
      type: String,
      default: "#000000"
    },
    colorsDefault: {
      type: Array,
      default: () => []
    },
    colorsHistoryKey: {
      type: String,
      default: ""
    }
  },
  emits: ["selectColor"],
  setup(e, { emit: r }) {
    const n = ref(), s = ref([]), a = ref();
    e.colorsHistoryKey && localStorage && (s.value = JSON.parse(localStorage.getItem(e.colorsHistoryKey)) || []), a.value = createAlphaSquare(4).toDataURL(), onUnmounted(() => {
      t(n.value);
    });
    function t(o) {
      if (!o)
        return;
      const c = s.value || [], _ = c.indexOf(o);
      _ >= 0 && c.splice(_, 1), c.length >= 8 && (c.length = 7), c.unshift(o), s.value = c || [], localStorage && e.colorsHistoryKey && localStorage.setItem(e.colorsHistoryKey, JSON.stringify(c));
    }
    function l(o) {
      r("selectColor", o);
    }
    return {
      setColorsHistory: t,
      colorsHistory: s,
      color: n,
      imgAlphaBase64: a,
      selectColor: l
    };
  }
});
const _hoisted_1$5$1 = { class: "colors" }, _hoisted_2$2$1 = {
  key: 0,
  class: "colors history"
};
function render$6(e, r, n, s, a, t) {
  return openBlock(), createBlock("div", null, [
    createVNode("ul", _hoisted_1$5$1, [
      (openBlock(!0), createBlock(
        Fragment,
        null,
        renderList(e.colorsDefault, (l) => (openBlock(), createBlock("li", {
          key: l,
          class: "item",
          onClick: (o) => e.selectColor(l)
        }, [
          createVNode(
            "div",
            {
              style: { background: `url(${e.imgAlphaBase64})` },
              class: "alpha"
            },
            null,
            4
            /* STYLE */
          ),
          createVNode(
            "div",
            {
              style: { background: l },
              class: "color"
            },
            null,
            4
            /* STYLE */
          )
        ], 8, ["onClick"]))),
        128
        /* KEYED_FRAGMENT */
      ))
    ]),
    e.colorsHistory.length ? (openBlock(), createBlock("ul", _hoisted_2$2$1, [
      (openBlock(!0), createBlock(
        Fragment,
        null,
        renderList(e.colorsHistory, (l) => (openBlock(), createBlock("li", {
          key: l,
          class: "item",
          onClick: (o) => e.selectColor(l)
        }, [
          createVNode(
            "div",
            {
              style: { background: `url(${e.imgAlphaBase64})` },
              class: "alpha"
            },
            null,
            4
            /* STYLE */
          ),
          createVNode(
            "div",
            {
              style: { background: l },
              class: "color"
            },
            null,
            4
            /* STYLE */
          )
        ], 8, ["onClick"]))),
        128
        /* KEYED_FRAGMENT */
      ))
    ])) : createCommentVNode("v-if", !0)
  ]);
}
script$6.render = render$6;
script$6.__file = "src/color/Colors.vue";
var script$7 = /* @__PURE__ */ defineComponent({
  components: {
    Saturation: script$2,
    Hue: script$1$1,
    Alpha: script$2$1,
    Preview: script$3,
    Sucker: script$4,
    Box: script$5,
    Colors: script$6
  },
  emits: ["changeColor", "openSucker", "inputFocus", "inputBlur"],
  props: {
    color: {
      type: String,
      default: "#000000"
    },
    theme: {
      type: String,
      default: "dark"
    },
    suckerHide: {
      type: Boolean,
      default: !0
    },
    suckerCanvas: {
      type: null,
      default: null
    },
    suckerArea: {
      type: Array,
      default: () => []
    },
    colorsDefault: {
      type: Array,
      default: () => [
        "#000000",
        "#FFFFFF",
        "#FF1900",
        "#F47365",
        "#FFB243",
        "#FFE623",
        "#6EFF2A",
        "#1BC7B1",
        "#00BEFF",
        "#2E81FF",
        "#5D61FF",
        "#FF89CF",
        "#FC3CAD",
        "#BF3DCE",
        "#8E00A7",
        "rgba(0,0,0,0)"
      ]
    },
    colorsHistoryKey: {
      type: String,
      default: "vue-colorpicker-history"
    }
  },
  data() {
    return {
      hueWidth: 15,
      hueHeight: 152,
      previewHeight: 30,
      modelRgba: "",
      modelHex: "",
      r: 0,
      g: 0,
      b: 0,
      a: 1,
      h: 0,
      s: 0,
      v: 0
    };
  },
  computed: {
    isLightTheme() {
      return this.theme === "light";
    },
    totalWidth() {
      return this.hueHeight + (this.hueWidth + 8) * 2;
    },
    previewWidth() {
      return this.totalWidth - (this.suckerHide ? 0 : this.previewHeight);
    },
    rgba() {
      return {
        r: this.r,
        g: this.g,
        b: this.b,
        a: this.a
      };
    },
    hsv() {
      return {
        h: this.h,
        s: this.s,
        v: this.v
      };
    },
    rgbString() {
      return `rgb(${this.r}, ${this.g}, ${this.b})`;
    },
    rgbaStringShort() {
      return `${this.r}, ${this.g}, ${this.b}, ${this.a}`;
    },
    rgbaString() {
      return `rgba(${this.rgbaStringShort})`;
    },
    hexString() {
      return rgb2hex(this.rgba, !0);
    }
  },
  created() {
    Object.assign(this, setColorValue(this.color)), this.setText(), this.$watch("rgba", () => {
      this.$emit("changeColor", {
        rgba: this.rgba,
        hsv: this.hsv,
        hex: this.modelHex
      });
    });
  },
  methods: {
    selectSaturation(e) {
      const { r, g: n, b: s, h: a, s: t, v: l } = setColorValue(e);
      Object.assign(this, { r, g: n, b: s, h: a, s: t, v: l }), this.setText();
    },
    handleFocus(e) {
      this.$emit("inputFocus", e);
    },
    handleBlur(e) {
      this.$emit("inputBlur", e);
    },
    selectHue(e) {
      const { r, g: n, b: s, h: a, s: t, v: l } = setColorValue(e);
      Object.assign(this, { r, g: n, b: s, h: a, s: t, v: l }), this.setText(), this.$nextTick(() => {
        this.$refs.saturation.renderColor(), this.$refs.saturation.renderSlide();
      });
    },
    selectAlpha(e) {
      this.a = e, this.setText();
    },
    inputHex(e) {
      const { r, g: n, b: s, a, h: t, s: l, v: o } = setColorValue(e);
      Object.assign(this, { r, g: n, b: s, a, h: t, s: l, v: o }), this.modelHex = e, this.modelRgba = this.rgbaStringShort, this.$nextTick(() => {
        this.$refs.saturation.renderColor(), this.$refs.saturation.renderSlide(), this.$refs.hue.renderSlide();
      });
    },
    inputRgba(e) {
      const { r, g: n, b: s, a, h: t, s: l, v: o } = setColorValue(e);
      Object.assign(this, { r, g: n, b: s, a, h: t, s: l, v: o }), this.modelHex = this.hexString, this.modelRgba = e, this.$nextTick(() => {
        this.$refs.saturation.renderColor(), this.$refs.saturation.renderSlide(), this.$refs.hue.renderSlide();
      });
    },
    setText() {
      this.modelHex = this.hexString, this.modelRgba = this.rgbaStringShort;
    },
    openSucker(e) {
      this.$emit("openSucker", e);
    },
    selectSucker(e) {
      const { r, g: n, b: s, a, h: t, s: l, v: o } = setColorValue(e);
      Object.assign(this, { r, g: n, b: s, a, h: t, s: l, v: o }), this.setText(), this.$nextTick(() => {
        this.$refs.saturation.renderColor(), this.$refs.saturation.renderSlide(), this.$refs.hue.renderSlide();
      });
    },
    selectColor(e) {
      const { r, g: n, b: s, a, h: t, s: l, v: o } = setColorValue(e);
      Object.assign(this, { r, g: n, b: s, a, h: t, s: l, v: o }), this.setText(), this.$nextTick(() => {
        this.$refs.saturation.renderColor(), this.$refs.saturation.renderSlide(), this.$refs.hue.renderSlide();
      });
    }
  }
});
const _hoisted_1$6$1 = { class: "color-set" };
function render$7(e, r, n, s, a, t) {
  const l = resolveComponent("Saturation"), o = resolveComponent("Hue"), c = resolveComponent("Alpha"), _ = resolveComponent("Preview"), u = resolveComponent("Sucker"), y = resolveComponent("Box"), g = resolveComponent("Colors");
  return openBlock(), createBlock(
    "div",
    {
      class: ["hu-color-picker", { light: e.isLightTheme }],
      style: { width: e.totalWidth + "px" }
    },
    [
      createVNode("div", _hoisted_1$6$1, [
        createVNode(l, {
          ref: "saturation",
          color: e.rgbString,
          hsv: e.hsv,
          size: e.hueHeight,
          onSelectSaturation: e.selectSaturation
        }, null, 8, ["color", "hsv", "size", "onSelectSaturation"]),
        createVNode(o, {
          ref: "hue",
          hsv: e.hsv,
          width: e.hueWidth,
          height: e.hueHeight,
          onSelectHue: e.selectHue
        }, null, 8, ["hsv", "width", "height", "onSelectHue"]),
        createVNode(c, {
          ref: "alpha",
          color: e.rgbString,
          rgba: e.rgba,
          width: e.hueWidth,
          height: e.hueHeight,
          onSelectAlpha: e.selectAlpha
        }, null, 8, ["color", "rgba", "width", "height", "onSelectAlpha"])
      ]),
      createVNode(
        "div",
        {
          style: { height: e.previewHeight + "px" },
          class: "color-show"
        },
        [
          createVNode(_, {
            color: e.rgbaString,
            width: e.previewWidth,
            height: e.previewHeight
          }, null, 8, ["color", "width", "height"]),
          e.suckerHide ? createCommentVNode("v-if", !0) : (openBlock(), createBlock(u, {
            key: 0,
            "sucker-canvas": e.suckerCanvas,
            "sucker-area": e.suckerArea,
            onOpenSucker: e.openSucker,
            onSelectSucker: e.selectSucker
          }, null, 8, ["sucker-canvas", "sucker-area", "onOpenSucker", "onSelectSucker"]))
        ],
        4
        /* STYLE */
      ),
      createVNode(y, {
        name: "HEX",
        color: e.modelHex,
        onInputColor: e.inputHex,
        onInputFocus: e.handleFocus,
        onInputBlur: e.handleBlur
      }, null, 8, ["color", "onInputColor", "onInputFocus", "onInputBlur"]),
      createVNode(y, {
        name: "RGBA",
        color: e.modelRgba,
        onInputColor: e.inputRgba,
        onInputFocus: e.handleFocus,
        onInputBlur: e.handleBlur
      }, null, 8, ["color", "onInputColor", "onInputFocus", "onInputBlur"]),
      createVNode(g, {
        color: e.rgbaString,
        "colors-default": e.colorsDefault,
        "colors-history-key": e.colorsHistoryKey,
        onSelectColor: e.selectColor
      }, null, 8, ["color", "colors-default", "colors-history-key", "onSelectColor"]),
      createCommentVNode(" custom options "),
      renderSlot(e.$slots, "default")
    ],
    6
    /* CLASS, STYLE */
  );
}
script$7.render = render$7;
script$7.__file = "src/color/ColorPicker.vue";
script$7.install = (e) => {
  e.component(script$7.name, script$7);
};
function debounce$1(e, r, n) {
  var s, a, t, l, o;
  r == null && (r = 100);
  function c() {
    var u = Date.now() - l;
    u < r && u >= 0 ? s = setTimeout(c, r - u) : (s = null, n || (o = e.apply(t, a), t = a = null));
  }
  var _ = function() {
    t = this, a = arguments, l = Date.now();
    var u = n && !s;
    return s || (s = setTimeout(c, r)), u && (o = e.apply(t, a), t = a = null), o;
  };
  return _.clear = function() {
    s && (clearTimeout(s), s = null);
  }, _.flush = function() {
    s && (o = e.apply(t, a), t = a = null, clearTimeout(s), s = null);
  }, _;
}
debounce$1.debounce = debounce$1;
var debounce_1 = debounce$1;
function useEventListener(e, r, n) {
  isRef(e) ? watch(e, (s, a) => {
    a == null || a.removeEventListener(r, n), s == null || s.addEventListener(r, n);
  }) : onMounted(() => {
    e.addEventListener(r, n);
  }), onBeforeUnmount(() => {
    var s;
    (s = unref(e)) === null || s === void 0 || s.removeEventListener(r, n);
  });
}
function useClickAway(e, r) {
  const n = "pointerdown";
  return typeof window > "u" || !window ? void 0 : useEventListener(window, n, (a) => {
    const t = unref(e);
    t && (t === a.target || a.composedPath().includes(t) || r(a));
  });
}
function useContent(e, r, n) {
  let s = null;
  const a = ref(!1);
  onMounted(() => {
    (e.content !== void 0 || n.value) && (a.value = !0), s = new MutationObserver(t), s.observe(r.value, {
      childList: !0,
      subtree: !0
    });
  }), onBeforeUnmount(() => s.disconnect()), watch(n, (l) => {
    l ? a.value = !0 : a.value = !1;
  });
  const t = () => {
    e.content ? a.value = !0 : a.value = !1;
  };
  return {
    hasContent: a
  };
}
function getBoundingClientRect(e, r) {
  var n = e.getBoundingClientRect(), s = 1, a = 1;
  return {
    width: n.width / s,
    height: n.height / a,
    top: n.top / a,
    right: n.right / s,
    bottom: n.bottom / a,
    left: n.left / s,
    x: n.left / s,
    y: n.top / a
  };
}
function getWindow(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var r = e.ownerDocument;
    return r && r.defaultView || window;
  }
  return e;
}
function getWindowScroll(e) {
  var r = getWindow(e), n = r.pageXOffset, s = r.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: s
  };
}
function isElement(e) {
  var r = getWindow(e).Element;
  return e instanceof r || e instanceof Element;
}
function isHTMLElement(e) {
  var r = getWindow(e).HTMLElement;
  return e instanceof r || e instanceof HTMLElement;
}
function isShadowRoot(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var r = getWindow(e).ShadowRoot;
  return e instanceof r || e instanceof ShadowRoot;
}
function getHTMLElementScroll(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function getNodeScroll(e) {
  return e === getWindow(e) || !isHTMLElement(e) ? getWindowScroll(e) : getHTMLElementScroll(e);
}
function getNodeName(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function getDocumentElement(e) {
  return ((isElement(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function getWindowScrollBarX(e) {
  return getBoundingClientRect(getDocumentElement(e)).left + getWindowScroll(e).scrollLeft;
}
function getComputedStyle$1(e) {
  return getWindow(e).getComputedStyle(e);
}
function isScrollParent(e) {
  var r = getComputedStyle$1(e), n = r.overflow, s = r.overflowX, a = r.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + a + s);
}
function isElementScaled(e) {
  var r = e.getBoundingClientRect(), n = r.width / e.offsetWidth || 1, s = r.height / e.offsetHeight || 1;
  return n !== 1 || s !== 1;
}
function getCompositeRect(e, r, n) {
  n === void 0 && (n = !1);
  var s = isHTMLElement(r);
  isHTMLElement(r) && isElementScaled(r);
  var a = getDocumentElement(r), t = getBoundingClientRect(e), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, o = {
    x: 0,
    y: 0
  };
  return (s || !s && !n) && ((getNodeName(r) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  isScrollParent(a)) && (l = getNodeScroll(r)), isHTMLElement(r) ? (o = getBoundingClientRect(r), o.x += r.clientLeft, o.y += r.clientTop) : a && (o.x = getWindowScrollBarX(a))), {
    x: t.left + l.scrollLeft - o.x,
    y: t.top + l.scrollTop - o.y,
    width: t.width,
    height: t.height
  };
}
function getLayoutRect(e) {
  var r = getBoundingClientRect(e), n = e.offsetWidth, s = e.offsetHeight;
  return Math.abs(r.width - n) <= 1 && (n = r.width), Math.abs(r.height - s) <= 1 && (s = r.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: s
  };
}
function getParentNode(e) {
  return getNodeName(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (isShadowRoot(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    getDocumentElement(e)
  );
}
function getScrollParent(e) {
  return ["html", "body", "#document"].indexOf(getNodeName(e)) >= 0 ? e.ownerDocument.body : isHTMLElement(e) && isScrollParent(e) ? e : getScrollParent(getParentNode(e));
}
function listScrollParents(e, r) {
  var n;
  r === void 0 && (r = []);
  var s = getScrollParent(e), a = s === ((n = e.ownerDocument) == null ? void 0 : n.body), t = getWindow(s), l = a ? [t].concat(t.visualViewport || [], isScrollParent(s) ? s : []) : s, o = r.concat(l);
  return a ? o : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    o.concat(listScrollParents(getParentNode(l)))
  );
}
function isTableElement(e) {
  return ["table", "td", "th"].indexOf(getNodeName(e)) >= 0;
}
function getTrueOffsetParent(e) {
  return !isHTMLElement(e) || // https://github.com/popperjs/popper-core/issues/837
  getComputedStyle$1(e).position === "fixed" ? null : e.offsetParent;
}
function getContainingBlock(e) {
  var r = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1, n = navigator.userAgent.indexOf("Trident") !== -1;
  if (n && isHTMLElement(e)) {
    var s = getComputedStyle$1(e);
    if (s.position === "fixed")
      return null;
  }
  for (var a = getParentNode(e); isHTMLElement(a) && ["html", "body"].indexOf(getNodeName(a)) < 0; ) {
    var t = getComputedStyle$1(a);
    if (t.transform !== "none" || t.perspective !== "none" || t.contain === "paint" || ["transform", "perspective"].indexOf(t.willChange) !== -1 || r && t.willChange === "filter" || r && t.filter && t.filter !== "none")
      return a;
    a = a.parentNode;
  }
  return null;
}
function getOffsetParent(e) {
  for (var r = getWindow(e), n = getTrueOffsetParent(e); n && isTableElement(n) && getComputedStyle$1(n).position === "static"; )
    n = getTrueOffsetParent(n);
  return n && (getNodeName(n) === "html" || getNodeName(n) === "body" && getComputedStyle$1(n).position === "static") ? r : n || getContainingBlock(e) || r;
}
var top = "top", bottom = "bottom", right = "right", left = "left", auto = "auto", basePlacements = [top, bottom, right, left], start = "start", end$1 = "end", clippingParents = "clippingParents", viewport = "viewport", popper = "popper", reference = "reference", variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(e, r) {
  return e.concat([r + "-" + start, r + "-" + end$1]);
}, []), placements = /* @__PURE__ */ [].concat(basePlacements, [auto]).reduce(function(e, r) {
  return e.concat([r, r + "-" + start, r + "-" + end$1]);
}, []), beforeRead = "beforeRead", read = "read", afterRead = "afterRead", beforeMain = "beforeMain", main = "main", afterMain = "afterMain", beforeWrite = "beforeWrite", write = "write", afterWrite = "afterWrite", modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
function order(e) {
  var r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), s = [];
  e.forEach(function(t) {
    r.set(t.name, t);
  });
  function a(t) {
    n.add(t.name);
    var l = [].concat(t.requires || [], t.requiresIfExists || []);
    l.forEach(function(o) {
      if (!n.has(o)) {
        var c = r.get(o);
        c && a(c);
      }
    }), s.push(t);
  }
  return e.forEach(function(t) {
    n.has(t.name) || a(t);
  }), s;
}
function orderModifiers(e) {
  var r = order(e);
  return modifierPhases.reduce(function(n, s) {
    return n.concat(r.filter(function(a) {
      return a.phase === s;
    }));
  }, []);
}
function debounce(e) {
  var r;
  return function() {
    return r || (r = new Promise(function(n) {
      Promise.resolve().then(function() {
        r = void 0, n(e());
      });
    })), r;
  };
}
function getBasePlacement(e) {
  return e.split("-")[0];
}
function mergeByName(e) {
  var r = e.reduce(function(n, s) {
    var a = n[s.name];
    return n[s.name] = a ? Object.assign({}, a, s, {
      options: Object.assign({}, a.options, s.options),
      data: Object.assign({}, a.data, s.data)
    }) : s, n;
  }, {});
  return Object.keys(r).map(function(n) {
    return r[n];
  });
}
function getViewportRect(e) {
  var r = getWindow(e), n = getDocumentElement(e), s = r.visualViewport, a = n.clientWidth, t = n.clientHeight, l = 0, o = 0;
  return s && (a = s.width, t = s.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (l = s.offsetLeft, o = s.offsetTop)), {
    width: a,
    height: t,
    x: l + getWindowScrollBarX(e),
    y: o
  };
}
var max$1 = Math.max, min$1 = Math.min, round$1 = Math.round;
function getDocumentRect(e) {
  var r, n = getDocumentElement(e), s = getWindowScroll(e), a = (r = e.ownerDocument) == null ? void 0 : r.body, t = max$1(n.scrollWidth, n.clientWidth, a ? a.scrollWidth : 0, a ? a.clientWidth : 0), l = max$1(n.scrollHeight, n.clientHeight, a ? a.scrollHeight : 0, a ? a.clientHeight : 0), o = -s.scrollLeft + getWindowScrollBarX(e), c = -s.scrollTop;
  return getComputedStyle$1(a || n).direction === "rtl" && (o += max$1(n.clientWidth, a ? a.clientWidth : 0) - t), {
    width: t,
    height: l,
    x: o,
    y: c
  };
}
function contains(e, r) {
  var n = r.getRootNode && r.getRootNode();
  if (e.contains(r))
    return !0;
  if (n && isShadowRoot(n)) {
    var s = r;
    do {
      if (s && e.isSameNode(s))
        return !0;
      s = s.parentNode || s.host;
    } while (s);
  }
  return !1;
}
function rectToClientRect(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function getInnerBoundingClientRect(e) {
  var r = getBoundingClientRect(e);
  return r.top = r.top + e.clientTop, r.left = r.left + e.clientLeft, r.bottom = r.top + e.clientHeight, r.right = r.left + e.clientWidth, r.width = e.clientWidth, r.height = e.clientHeight, r.x = r.left, r.y = r.top, r;
}
function getClientRectFromMixedType(e, r) {
  return r === viewport ? rectToClientRect(getViewportRect(e)) : isHTMLElement(r) ? getInnerBoundingClientRect(r) : rectToClientRect(getDocumentRect(getDocumentElement(e)));
}
function getClippingParents(e) {
  var r = listScrollParents(getParentNode(e)), n = ["absolute", "fixed"].indexOf(getComputedStyle$1(e).position) >= 0, s = n && isHTMLElement(e) ? getOffsetParent(e) : e;
  return isElement(s) ? r.filter(function(a) {
    return isElement(a) && contains(a, s) && getNodeName(a) !== "body";
  }) : [];
}
function getClippingRect(e, r, n) {
  var s = r === "clippingParents" ? getClippingParents(e) : [].concat(r), a = [].concat(s, [n]), t = a[0], l = a.reduce(function(o, c) {
    var _ = getClientRectFromMixedType(e, c);
    return o.top = max$1(_.top, o.top), o.right = min$1(_.right, o.right), o.bottom = min$1(_.bottom, o.bottom), o.left = max$1(_.left, o.left), o;
  }, getClientRectFromMixedType(e, t));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function getVariation(e) {
  return e.split("-")[1];
}
function getMainAxisFromPlacement(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function computeOffsets(e) {
  var r = e.reference, n = e.element, s = e.placement, a = s ? getBasePlacement(s) : null, t = s ? getVariation(s) : null, l = r.x + r.width / 2 - n.width / 2, o = r.y + r.height / 2 - n.height / 2, c;
  switch (a) {
    case top:
      c = {
        x: l,
        y: r.y - n.height
      };
      break;
    case bottom:
      c = {
        x: l,
        y: r.y + r.height
      };
      break;
    case right:
      c = {
        x: r.x + r.width,
        y: o
      };
      break;
    case left:
      c = {
        x: r.x - n.width,
        y: o
      };
      break;
    default:
      c = {
        x: r.x,
        y: r.y
      };
  }
  var _ = a ? getMainAxisFromPlacement(a) : null;
  if (_ != null) {
    var u = _ === "y" ? "height" : "width";
    switch (t) {
      case start:
        c[_] = c[_] - (r[u] / 2 - n[u] / 2);
        break;
      case end$1:
        c[_] = c[_] + (r[u] / 2 - n[u] / 2);
        break;
    }
  }
  return c;
}
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function mergePaddingObject(e) {
  return Object.assign({}, getFreshSideObject(), e);
}
function expandToHashMap(e, r) {
  return r.reduce(function(n, s) {
    return n[s] = e, n;
  }, {});
}
function detectOverflow(e, r) {
  r === void 0 && (r = {});
  var n = r, s = n.placement, a = s === void 0 ? e.placement : s, t = n.boundary, l = t === void 0 ? clippingParents : t, o = n.rootBoundary, c = o === void 0 ? viewport : o, _ = n.elementContext, u = _ === void 0 ? popper : _, y = n.altBoundary, g = y === void 0 ? !1 : y, Ee = n.padding, Ve = Ee === void 0 ? 0 : Ee, Me = mergePaddingObject(typeof Ve != "number" ? Ve : expandToHashMap(Ve, basePlacements)), B = u === popper ? reference : popper, Pe = e.rects.popper, k = e.elements[g ? B : u], b = getClippingRect(isElement(k) ? k : k.contextElement || getDocumentElement(e.elements.popper), l, c), Le = getBoundingClientRect(e.elements.reference), xe = computeOffsets({
    reference: Le,
    element: Pe,
    strategy: "absolute",
    placement: a
  }), ze = rectToClientRect(Object.assign({}, Pe, xe)), Se = u === popper ? ze : Le, Te = {
    top: b.top - Se.top + Me.top,
    bottom: Se.bottom - b.bottom + Me.bottom,
    left: b.left - Se.left + Me.left,
    right: Se.right - b.right + Me.right
  }, D = e.modifiersData.offset;
  if (u === popper && D) {
    var ke = D[a];
    Object.keys(Te).forEach(function(Fe) {
      var He = [right, bottom].indexOf(Fe) >= 0 ? 1 : -1, We = [top, bottom].indexOf(Fe) >= 0 ? "y" : "x";
      Te[Fe] += ke[We] * He;
    });
  }
  return Te;
}
var DEFAULT_OPTIONS = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function areValidElements() {
  for (var e = arguments.length, r = new Array(e), n = 0; n < e; n++)
    r[n] = arguments[n];
  return !r.some(function(s) {
    return !(s && typeof s.getBoundingClientRect == "function");
  });
}
function popperGenerator(e) {
  e === void 0 && (e = {});
  var r = e, n = r.defaultModifiers, s = n === void 0 ? [] : n, a = r.defaultOptions, t = a === void 0 ? DEFAULT_OPTIONS : a;
  return function(o, c, _) {
    _ === void 0 && (_ = t);
    var u = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, t),
      modifiersData: {},
      elements: {
        reference: o,
        popper: c
      },
      attributes: {},
      styles: {}
    }, y = [], g = !1, Ee = {
      state: u,
      setOptions: function(Pe) {
        var k = typeof Pe == "function" ? Pe(u.options) : Pe;
        Me(), u.options = Object.assign({}, t, u.options, k), u.scrollParents = {
          reference: isElement(o) ? listScrollParents(o) : o.contextElement ? listScrollParents(o.contextElement) : [],
          popper: listScrollParents(c)
        };
        var b = orderModifiers(mergeByName([].concat(s, u.options.modifiers)));
        return u.orderedModifiers = b.filter(function(Le) {
          return Le.enabled;
        }), Ve(), Ee.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!g) {
          var Pe = u.elements, k = Pe.reference, b = Pe.popper;
          if (areValidElements(k, b)) {
            u.rects = {
              reference: getCompositeRect(k, getOffsetParent(b), u.options.strategy === "fixed"),
              popper: getLayoutRect(b)
            }, u.reset = !1, u.placement = u.options.placement, u.orderedModifiers.forEach(function(ke) {
              return u.modifiersData[ke.name] = Object.assign({}, ke.data);
            });
            for (var Le = 0; Le < u.orderedModifiers.length; Le++) {
              if (u.reset === !0) {
                u.reset = !1, Le = -1;
                continue;
              }
              var xe = u.orderedModifiers[Le], ze = xe.fn, Se = xe.options, Te = Se === void 0 ? {} : Se, D = xe.name;
              typeof ze == "function" && (u = ze({
                state: u,
                options: Te,
                name: D,
                instance: Ee
              }) || u);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: debounce(function() {
        return new Promise(function(B) {
          Ee.forceUpdate(), B(u);
        });
      }),
      destroy: function() {
        Me(), g = !0;
      }
    };
    if (!areValidElements(o, c))
      return Ee;
    Ee.setOptions(_).then(function(B) {
      !g && _.onFirstUpdate && _.onFirstUpdate(B);
    });
    function Ve() {
      u.orderedModifiers.forEach(function(B) {
        var Pe = B.name, k = B.options, b = k === void 0 ? {} : k, Le = B.effect;
        if (typeof Le == "function") {
          var xe = Le({
            state: u,
            name: Pe,
            instance: Ee,
            options: b
          }), ze = function() {
          };
          y.push(xe || ze);
        }
      });
    }
    function Me() {
      y.forEach(function(B) {
        return B();
      }), y = [];
    }
    return Ee;
  };
}
var passive = {
  passive: !0
};
function effect$2(e) {
  var r = e.state, n = e.instance, s = e.options, a = s.scroll, t = a === void 0 ? !0 : a, l = s.resize, o = l === void 0 ? !0 : l, c = getWindow(r.elements.popper), _ = [].concat(r.scrollParents.reference, r.scrollParents.popper);
  return t && _.forEach(function(u) {
    u.addEventListener("scroll", n.update, passive);
  }), o && c.addEventListener("resize", n.update, passive), function() {
    t && _.forEach(function(u) {
      u.removeEventListener("scroll", n.update, passive);
    }), o && c.removeEventListener("resize", n.update, passive);
  };
}
var eventListeners = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: effect$2,
  data: {}
};
function popperOffsets(e) {
  var r = e.state, n = e.name;
  r.modifiersData[n] = computeOffsets({
    reference: r.rects.reference,
    element: r.rects.popper,
    strategy: "absolute",
    placement: r.placement
  });
}
var popperOffsets$1 = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: popperOffsets,
  data: {}
}, unsetSides = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function roundOffsetsByDPR(e) {
  var r = e.x, n = e.y, s = window, a = s.devicePixelRatio || 1;
  return {
    x: round$1(round$1(r * a) / a) || 0,
    y: round$1(round$1(n * a) / a) || 0
  };
}
function mapToStyles(e) {
  var r, n = e.popper, s = e.popperRect, a = e.placement, t = e.variation, l = e.offsets, o = e.position, c = e.gpuAcceleration, _ = e.adaptive, u = e.roundOffsets, y = u === !0 ? roundOffsetsByDPR(l) : typeof u == "function" ? u(l) : l, g = y.x, Ee = g === void 0 ? 0 : g, Ve = y.y, Me = Ve === void 0 ? 0 : Ve, B = l.hasOwnProperty("x"), Pe = l.hasOwnProperty("y"), k = left, b = top, Le = window;
  if (_) {
    var xe = getOffsetParent(n), ze = "clientHeight", Se = "clientWidth";
    xe === getWindow(n) && (xe = getDocumentElement(n), getComputedStyle$1(xe).position !== "static" && o === "absolute" && (ze = "scrollHeight", Se = "scrollWidth")), xe = xe, (a === top || (a === left || a === right) && t === end$1) && (b = bottom, Me -= xe[ze] - s.height, Me *= c ? 1 : -1), (a === left || (a === top || a === bottom) && t === end$1) && (k = right, Ee -= xe[Se] - s.width, Ee *= c ? 1 : -1);
  }
  var Te = Object.assign({
    position: o
  }, _ && unsetSides);
  if (c) {
    var D;
    return Object.assign({}, Te, (D = {}, D[b] = Pe ? "0" : "", D[k] = B ? "0" : "", D.transform = (Le.devicePixelRatio || 1) <= 1 ? "translate(" + Ee + "px, " + Me + "px)" : "translate3d(" + Ee + "px, " + Me + "px, 0)", D));
  }
  return Object.assign({}, Te, (r = {}, r[b] = Pe ? Me + "px" : "", r[k] = B ? Ee + "px" : "", r.transform = "", r));
}
function computeStyles(e) {
  var r = e.state, n = e.options, s = n.gpuAcceleration, a = s === void 0 ? !0 : s, t = n.adaptive, l = t === void 0 ? !0 : t, o = n.roundOffsets, c = o === void 0 ? !0 : o, _ = {
    placement: getBasePlacement(r.placement),
    variation: getVariation(r.placement),
    popper: r.elements.popper,
    popperRect: r.rects.popper,
    gpuAcceleration: a
  };
  r.modifiersData.popperOffsets != null && (r.styles.popper = Object.assign({}, r.styles.popper, mapToStyles(Object.assign({}, _, {
    offsets: r.modifiersData.popperOffsets,
    position: r.options.strategy,
    adaptive: l,
    roundOffsets: c
  })))), r.modifiersData.arrow != null && (r.styles.arrow = Object.assign({}, r.styles.arrow, mapToStyles(Object.assign({}, _, {
    offsets: r.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: c
  })))), r.attributes.popper = Object.assign({}, r.attributes.popper, {
    "data-popper-placement": r.placement
  });
}
var computeStyles$1 = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: computeStyles,
  data: {}
};
function applyStyles(e) {
  var r = e.state;
  Object.keys(r.elements).forEach(function(n) {
    var s = r.styles[n] || {}, a = r.attributes[n] || {}, t = r.elements[n];
    !isHTMLElement(t) || !getNodeName(t) || (Object.assign(t.style, s), Object.keys(a).forEach(function(l) {
      var o = a[l];
      o === !1 ? t.removeAttribute(l) : t.setAttribute(l, o === !0 ? "" : o);
    }));
  });
}
function effect$1(e) {
  var r = e.state, n = {
    popper: {
      position: r.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(r.elements.popper.style, n.popper), r.styles = n, r.elements.arrow && Object.assign(r.elements.arrow.style, n.arrow), function() {
    Object.keys(r.elements).forEach(function(s) {
      var a = r.elements[s], t = r.attributes[s] || {}, l = Object.keys(r.styles.hasOwnProperty(s) ? r.styles[s] : n[s]), o = l.reduce(function(c, _) {
        return c[_] = "", c;
      }, {});
      !isHTMLElement(a) || !getNodeName(a) || (Object.assign(a.style, o), Object.keys(t).forEach(function(c) {
        a.removeAttribute(c);
      }));
    });
  };
}
var applyStyles$1 = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: applyStyles,
  effect: effect$1,
  requires: ["computeStyles"]
}, defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1], createPopper = /* @__PURE__ */ popperGenerator({
  defaultModifiers
});
function getAltAxis(e) {
  return e === "x" ? "y" : "x";
}
function within(e, r, n) {
  return max$1(e, min$1(r, n));
}
function preventOverflow(e) {
  var r = e.state, n = e.options, s = e.name, a = n.mainAxis, t = a === void 0 ? !0 : a, l = n.altAxis, o = l === void 0 ? !1 : l, c = n.boundary, _ = n.rootBoundary, u = n.altBoundary, y = n.padding, g = n.tether, Ee = g === void 0 ? !0 : g, Ve = n.tetherOffset, Me = Ve === void 0 ? 0 : Ve, B = detectOverflow(r, {
    boundary: c,
    rootBoundary: _,
    padding: y,
    altBoundary: u
  }), Pe = getBasePlacement(r.placement), k = getVariation(r.placement), b = !k, Le = getMainAxisFromPlacement(Pe), xe = getAltAxis(Le), ze = r.modifiersData.popperOffsets, Se = r.rects.reference, Te = r.rects.popper, D = typeof Me == "function" ? Me(Object.assign({}, r.rects, {
    placement: r.placement
  })) : Me, ke = {
    x: 0,
    y: 0
  };
  if (ze) {
    if (t || o) {
      var Fe = Le === "y" ? top : left, He = Le === "y" ? bottom : right, We = Le === "y" ? "height" : "width", Ke = ze[Le], $ = ze[Le] + B[Fe], De = ze[Le] - B[He], Re = Ee ? -Te[We] / 2 : 0, Ie = k === start ? Se[We] : Te[We], O = k === start ? -Te[We] : -Se[We], Ue = r.elements.arrow, $e = Ee && Ue ? getLayoutRect(Ue) : {
        width: 0,
        height: 0
      }, Ze = r.modifiersData["arrow#persistent"] ? r.modifiersData["arrow#persistent"].padding : getFreshSideObject(), Qe = Ze[Fe], Ae = Ze[He], Ne = within(0, Se[We], $e[We]), Be = b ? Se[We] / 2 - Re - Ne - Qe - D : Ie - Ne - Qe - D, Ge = b ? -Se[We] / 2 + Re + Ne + Ae + D : O + Ne + Ae + D, Ye = r.elements.arrow && getOffsetParent(r.elements.arrow), je = Ye ? Le === "y" ? Ye.clientTop || 0 : Ye.clientLeft || 0 : 0, ht = r.modifiersData.offset ? r.modifiersData.offset[r.placement][Le] : 0, qe = ze[Le] + Be - ht - je, lt = ze[Le] + Ge - ht;
      if (t) {
        var ft = within(Ee ? min$1($, qe) : $, Ke, Ee ? max$1(De, lt) : De);
        ze[Le] = ft, ke[Le] = ft - Ke;
      }
      if (o) {
        var _t = Le === "x" ? top : left, St = Le === "x" ? bottom : right, yt = ze[xe], Ct = yt + B[_t], Lt = yt - B[St], Vt = within(Ee ? min$1(Ct, qe) : Ct, yt, Ee ? max$1(Lt, lt) : Lt);
        ze[xe] = Vt, ke[xe] = Vt - yt;
      }
    }
    r.modifiersData[s] = ke;
  }
}
var preventOverflow$1 = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: preventOverflow,
  requiresIfExists: ["offset"]
}, hash$1 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(e) {
  return e.replace(/left|right|bottom|top/g, function(r) {
    return hash$1[r];
  });
}
var hash = {
  start: "end",
  end: "start"
};
function getOppositeVariationPlacement(e) {
  return e.replace(/start|end/g, function(r) {
    return hash[r];
  });
}
function computeAutoPlacement(e, r) {
  r === void 0 && (r = {});
  var n = r, s = n.placement, a = n.boundary, t = n.rootBoundary, l = n.padding, o = n.flipVariations, c = n.allowedAutoPlacements, _ = c === void 0 ? placements : c, u = getVariation(s), y = u ? o ? variationPlacements : variationPlacements.filter(function(Ve) {
    return getVariation(Ve) === u;
  }) : basePlacements, g = y.filter(function(Ve) {
    return _.indexOf(Ve) >= 0;
  });
  g.length === 0 && (g = y);
  var Ee = g.reduce(function(Ve, Me) {
    return Ve[Me] = detectOverflow(e, {
      placement: Me,
      boundary: a,
      rootBoundary: t,
      padding: l
    })[getBasePlacement(Me)], Ve;
  }, {});
  return Object.keys(Ee).sort(function(Ve, Me) {
    return Ee[Ve] - Ee[Me];
  });
}
function getExpandedFallbackPlacements(e) {
  if (getBasePlacement(e) === auto)
    return [];
  var r = getOppositePlacement(e);
  return [getOppositeVariationPlacement(e), r, getOppositeVariationPlacement(r)];
}
function flip(e) {
  var r = e.state, n = e.options, s = e.name;
  if (!r.modifiersData[s]._skip) {
    for (var a = n.mainAxis, t = a === void 0 ? !0 : a, l = n.altAxis, o = l === void 0 ? !0 : l, c = n.fallbackPlacements, _ = n.padding, u = n.boundary, y = n.rootBoundary, g = n.altBoundary, Ee = n.flipVariations, Ve = Ee === void 0 ? !0 : Ee, Me = n.allowedAutoPlacements, B = r.options.placement, Pe = getBasePlacement(B), k = Pe === B, b = c || (k || !Ve ? [getOppositePlacement(B)] : getExpandedFallbackPlacements(B)), Le = [B].concat(b).reduce(function(Ae, Ne) {
      return Ae.concat(getBasePlacement(Ne) === auto ? computeAutoPlacement(r, {
        placement: Ne,
        boundary: u,
        rootBoundary: y,
        padding: _,
        flipVariations: Ve,
        allowedAutoPlacements: Me
      }) : Ne);
    }, []), xe = r.rects.reference, ze = r.rects.popper, Se = /* @__PURE__ */ new Map(), Te = !0, D = Le[0], ke = 0; ke < Le.length; ke++) {
      var Fe = Le[ke], He = getBasePlacement(Fe), We = getVariation(Fe) === start, Ke = [top, bottom].indexOf(He) >= 0, $ = Ke ? "width" : "height", De = detectOverflow(r, {
        placement: Fe,
        boundary: u,
        rootBoundary: y,
        altBoundary: g,
        padding: _
      }), Re = Ke ? We ? right : left : We ? bottom : top;
      xe[$] > ze[$] && (Re = getOppositePlacement(Re));
      var Ie = getOppositePlacement(Re), O = [];
      if (t && O.push(De[He] <= 0), o && O.push(De[Re] <= 0, De[Ie] <= 0), O.every(function(Ae) {
        return Ae;
      })) {
        D = Fe, Te = !1;
        break;
      }
      Se.set(Fe, O);
    }
    if (Te)
      for (var Ue = Ve ? 3 : 1, $e = function(Ne) {
        var Be = Le.find(function(Ge) {
          var Ye = Se.get(Ge);
          if (Ye)
            return Ye.slice(0, Ne).every(function(je) {
              return je;
            });
        });
        if (Be)
          return D = Be, "break";
      }, Ze = Ue; Ze > 0; Ze--) {
        var Qe = $e(Ze);
        if (Qe === "break")
          break;
      }
    r.placement !== D && (r.modifiersData[s]._skip = !0, r.placement = D, r.reset = !0);
  }
}
var flip$1 = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: flip,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function distanceAndSkiddingToXY(e, r, n) {
  var s = getBasePlacement(e), a = [left, top].indexOf(s) >= 0 ? -1 : 1, t = typeof n == "function" ? n(Object.assign({}, r, {
    placement: e
  })) : n, l = t[0], o = t[1];
  return l = l || 0, o = (o || 0) * a, [left, right].indexOf(s) >= 0 ? {
    x: o,
    y: l
  } : {
    x: l,
    y: o
  };
}
function offset$1(e) {
  var r = e.state, n = e.options, s = e.name, a = n.offset, t = a === void 0 ? [0, 0] : a, l = placements.reduce(function(u, y) {
    return u[y] = distanceAndSkiddingToXY(y, r.rects, t), u;
  }, {}), o = l[r.placement], c = o.x, _ = o.y;
  r.modifiersData.popperOffsets != null && (r.modifiersData.popperOffsets.x += c, r.modifiersData.popperOffsets.y += _), r.modifiersData[s] = l;
}
var offset$1$1 = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: offset$1
}, toPaddingObject = function(r, n) {
  return r = typeof r == "function" ? r(Object.assign({}, n.rects, {
    placement: n.placement
  })) : r, mergePaddingObject(typeof r != "number" ? r : expandToHashMap(r, basePlacements));
};
function arrow(e) {
  var r, n = e.state, s = e.name, a = e.options, t = n.elements.arrow, l = n.modifiersData.popperOffsets, o = getBasePlacement(n.placement), c = getMainAxisFromPlacement(o), _ = [left, right].indexOf(o) >= 0, u = _ ? "height" : "width";
  if (!(!t || !l)) {
    var y = toPaddingObject(a.padding, n), g = getLayoutRect(t), Ee = c === "y" ? top : left, Ve = c === "y" ? bottom : right, Me = n.rects.reference[u] + n.rects.reference[c] - l[c] - n.rects.popper[u], B = l[c] - n.rects.reference[c], Pe = getOffsetParent(t), k = Pe ? c === "y" ? Pe.clientHeight || 0 : Pe.clientWidth || 0 : 0, b = Me / 2 - B / 2, Le = y[Ee], xe = k - g[u] - y[Ve], ze = k / 2 - g[u] / 2 + b, Se = within(Le, ze, xe), Te = c;
    n.modifiersData[s] = (r = {}, r[Te] = Se, r.centerOffset = Se - ze, r);
  }
}
function effect(e) {
  var r = e.state, n = e.options, s = n.element, a = s === void 0 ? "[data-popper-arrow]" : s;
  a != null && (typeof a == "string" && (a = r.elements.popper.querySelector(a), !a) || contains(r.elements.popper, a) && (r.elements.arrow = a));
}
var arrow$1 = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: arrow,
  effect,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
const toInt$1 = (e) => parseInt(e, 10);
function usePopper({
  arrowPadding: e,
  emit: r,
  locked: n,
  offsetDistance: s,
  offsetSkid: a,
  placement: t,
  popperNode: l,
  triggerNode: o
}) {
  const c = reactive({
    isOpen: !1,
    popperInstance: null
  }), _ = (Me) => {
    var B;
    (B = c.popperInstance) === null || B === void 0 || B.setOptions((Pe) => ({
      ...Pe,
      modifiers: [...Pe.modifiers, {
        name: "eventListeners",
        enabled: Me
      }]
    }));
  }, u = () => _(!0), y = () => _(!1), g = () => {
    c.isOpen && (c.isOpen = !1, r("close:popper"));
  }, Ee = () => {
    c.isOpen || (c.isOpen = !0, r("open:popper"));
  };
  watch([() => c.isOpen, t], async ([Me]) => {
    Me ? (await Ve(), u()) : y();
  });
  const Ve = async () => {
    await nextTick(), c.popperInstance = createPopper(o.value, l.value, {
      placement: t.value,
      modifiers: [preventOverflow$1, flip$1, {
        name: "flip",
        enabled: !n.value
      }, arrow$1, {
        name: "arrow",
        options: {
          padding: toInt$1(e.value)
        }
      }, offset$1$1, {
        name: "offset",
        options: {
          offset: [toInt$1(a.value), toInt$1(s.value)]
        }
      }]
    }), c.popperInstance.update();
  };
  return onBeforeUnmount(() => {
    var Me;
    (Me = c.popperInstance) === null || Me === void 0 || Me.destroy();
  }), {
    ...toRefs(c),
    open: Ee,
    close: g
  };
}
const _hoisted_1$1$1 = {
  id: "arrow",
  "data-popper-arrow": ""
};
function render$2(e, r) {
  return openBlock(), createElementBlock("div", _hoisted_1$1$1);
}
function styleInject(e, r) {
  r === void 0 && (r = {});
  var n = r.insertAt;
  if (!(!e || typeof document > "u")) {
    var s = document.head || document.getElementsByTagName("head")[0], a = document.createElement("style");
    a.type = "text/css", n === "top" && s.firstChild ? s.insertBefore(a, s.firstChild) : s.appendChild(a), a.styleSheet ? a.styleSheet.cssText = e : a.appendChild(document.createTextNode(e));
  }
}
var css_248z$1 = `
#arrow[data-v-20b7fd4a],
  #arrow[data-v-20b7fd4a]::before {
    transition: background 250ms ease-in-out;
    position: absolute;
    width: calc(10px - var(--popper-theme-border-width, 0px));
    height: calc(10px - var(--popper-theme-border-width, 0px));
    box-sizing: border-box;
    background: var(--popper-theme-background-color);
}
#arrow[data-v-20b7fd4a] {
    visibility: hidden;
}
#arrow[data-v-20b7fd4a]::before {
    visibility: visible;
    content: "";
    transform: rotate(45deg);
}

  /* Top arrow */
.popper[data-popper-placement^="top"] > #arrow[data-v-20b7fd4a] {
    bottom: -5px;
}
.popper[data-popper-placement^="top"] > #arrow[data-v-20b7fd4a]::before {
    border-right: var(--popper-theme-border-width)
      var(--popper-theme-border-style) var(--popper-theme-border-color);
    border-bottom: var(--popper-theme-border-width)
      var(--popper-theme-border-style) var(--popper-theme-border-color);
}

  /* Bottom arrow */
.popper[data-popper-placement^="bottom"] > #arrow[data-v-20b7fd4a] {
    top: -5px;
}
.popper[data-popper-placement^="bottom"] > #arrow[data-v-20b7fd4a]::before {
    border-left: var(--popper-theme-border-width)
      var(--popper-theme-border-style) var(--popper-theme-border-color);
    border-top: var(--popper-theme-border-width)
      var(--popper-theme-border-style) var(--popper-theme-border-color);
}

  /* Left arrow */
.popper[data-popper-placement^="left"] > #arrow[data-v-20b7fd4a] {
    right: -5px;
}
.popper[data-popper-placement^="left"] > #arrow[data-v-20b7fd4a]::before {
    border-right: var(--popper-theme-border-width)
      var(--popper-theme-border-style) var(--popper-theme-border-color);
    border-top: var(--popper-theme-border-width)
      var(--popper-theme-border-style) var(--popper-theme-border-color);
}

  /* Right arrow */
.popper[data-popper-placement^="right"] > #arrow[data-v-20b7fd4a] {
    left: -5px;
}
`;
styleInject(css_248z$1);
const script$1 = {};
script$1.render = render$2;
script$1.__scopeId = "data-v-20b7fd4a";
var Arrow = script$1;
const _hoisted_1$5 = ["onKeyup"];
var script = {
  props: {
    /**
     * Preferred placement (the "auto" placements will choose the side with most space.)
     */
    placement: {
      type: String,
      default: "bottom",
      validator: function(e) {
        return ["auto", "auto-start", "auto-end", "top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "right", "right-start", "right-end", "left", "left-start", "left-end"].includes(e);
      }
    },
    /**
     * Disables automatically closing the popover when the user clicks away from it
     */
    disableClickAway: {
      type: Boolean,
      default: !1
    },
    /**
     * Offset in pixels along the trigger element
     */
    offsetSkid: {
      type: String,
      default: "0"
    },
    /**
     * Offset in pixels away from the trigger element
     */
    offsetDistance: {
      type: String,
      default: "12"
    },
    /**
     * Trigger the popper on hover
     */
    hover: {
      type: Boolean,
      default: !1
    },
    /**
     * Manually open/close the Popper, other events are ignored if this prop is set
     */
    show: {
      type: Boolean,
      default: null
    },
    /**
     * Disables the Popper. If it was already open, it will be closed.
     */
    disabled: {
      type: Boolean,
      default: !1
    },
    /**
     * Open the Popper after a delay (ms).
     */
    openDelay: {
      type: [Number, String],
      default: 0
    },
    /**
     * Close the Popper after a delay (ms).
     */
    closeDelay: {
      type: [Number, String],
      default: 0
    },
    /**
     * The z-index of the Popper.
     */
    zIndex: {
      type: [Number, String],
      default: 9999
    },
    /**
     * Display an arrow on the popper
     */
    arrow: {
      type: Boolean,
      default: !1
    },
    /**
     * Stop arrow from reaching the edge of the popper
     */
    arrowPadding: {
      type: String,
      default: "0"
    },
    /**
     * If the Popper should be interactive, it will close when clicked/hovered if false
     */
    interactive: {
      type: Boolean,
      default: !0
    },
    /**
     * Lock the Popper into place, it will not flip dynamically when it runs out of space if true
     */
    locked: {
      type: Boolean,
      default: !1
    },
    /**
     * If the content is just a simple string, it can be passed in as a prop
     */
    content: {
      type: String,
      default: null
    }
  },
  emits: ["open:popper", "close:popper"],
  setup(e, {
    emit: r
  }) {
    const n = e;
    useCssVars((Ie) => ({
      c81fc0a4: e.zIndex
    }));
    const s = useSlots(), a = ref(null), t = ref(null), l = ref(null), o = ref(!1);
    onMounted(() => {
      const Ie = s.default();
      if (Ie && Ie.length > 1)
        return console.error(`[Popper]: The <Popper> component expects only one child element at its root. You passed ${Ie.length} child nodes.`);
    });
    const {
      arrowPadding: c,
      closeDelay: _,
      content: u,
      disableClickAway: y,
      disabled: g,
      interactive: Ee,
      locked: Ve,
      offsetDistance: Me,
      offsetSkid: B,
      openDelay: Pe,
      placement: k,
      show: b
    } = toRefs(n), {
      isOpen: Le,
      open: xe,
      close: ze
    } = usePopper({
      arrowPadding: c,
      emit: r,
      locked: Ve,
      offsetDistance: Me,
      offsetSkid: B,
      placement: k,
      popperNode: t,
      triggerNode: l
    }), {
      hasContent: Se
    } = useContent(s, t, u), Te = computed(() => b.value !== null), D = computed(() => g.value || !Se.value), ke = computed(() => Le.value && !D.value), Fe = computed(() => !y.value && !Te.value), He = computed(() => Ee.value ? `border: ${Me.value}px solid transparent; margin: -${Me.value}px;` : null), We = debounce_1.debounce(xe, Pe.value), Ke = debounce_1.debounce(ze, _.value), $ = async () => {
      D.value || Te.value || (Ke.clear(), We());
    }, De = async () => {
      Te.value || (We.clear(), Ke());
    }, Re = () => {
      Le.value ? De() : $();
    };
    return watch([Se, g], ([Ie, O]) => {
      Le.value && (!Ie || O) && ze();
    }), watch(Le, (Ie) => {
      Ie ? o.value = !0 : debounce_1.debounce(() => {
        o.value = !1;
      }, 200);
    }), watchEffect(() => {
      Te.value && (b.value ? We() : Ke());
    }), watchEffect(() => {
      Fe.value && useClickAway(a, De);
    }), (Ie, O) => (openBlock(), createElementBlock("div", {
      class: "inline-block",
      style: normalizeStyle(unref(He)),
      onMouseleave: O[2] || (O[2] = (Ue) => e.hover && De()),
      ref: (Ue, $e) => {
        $e.popperContainerNode = Ue, a.value = Ue;
      }
    }, [createBaseVNode("div", {
      ref: (Ue, $e) => {
        $e.triggerNode = Ue, l.value = Ue;
      },
      onMouseover: O[0] || (O[0] = (Ue) => e.hover && $()),
      onClick: Re,
      onFocus: $,
      onKeyup: withKeys(De, ["esc"])
    }, [renderSlot(Ie.$slots, "default")], 40, _hoisted_1$5), createVNode(Transition, {
      name: "fade"
    }, {
      default: withCtx(() => [withDirectives(createBaseVNode("div", {
        onClick: O[1] || (O[1] = (Ue) => !unref(Ee) && De()),
        class: "popper",
        ref: (Ue, $e) => {
          $e.popperNode = Ue, t.value = Ue;
        }
      }, [renderSlot(Ie.$slots, "content", {
        close: unref(ze),
        isOpen: o.value
      }, () => [createTextVNode(toDisplayString(unref(u)), 1)]), e.arrow ? (openBlock(), createBlock(Arrow, {
        key: 0
      })) : createCommentVNode("", !0)], 512), [[vShow, unref(ke)]])]),
      _: 3
    })], 36));
  }
}, css_248z = `
.inline-block[data-v-5784ed69] {
    display: inline-block;
}
.popper[data-v-5784ed69] {
    transition: background 250ms ease-in-out;
    background: var(--popper-theme-background-color);
    padding: var(--popper-theme-padding);
    color: var(--popper-theme-text-color);
    border-radius: var(--popper-theme-border-radius);
    border-width: var(--popper-theme-border-width);
    border-style: var(--popper-theme-border-style);
    border-color: var(--popper-theme-border-color);
    box-shadow: var(--popper-theme-box-shadow);
    z-index: var(--c81fc0a4);
}
.popper[data-v-5784ed69]:hover,
  .popper:hover > #arrow[data-v-5784ed69]::before {
    background: var(--popper-theme-background-color-hover);
}
.inline-block[data-v-5784ed69] {
    display: inline-block;
}
.fade-enter-active[data-v-5784ed69],
  .fade-leave-active[data-v-5784ed69] {
    transition: opacity 0.2s ease;
}
.fade-enter-from[data-v-5784ed69],
  .fade-leave-to[data-v-5784ed69] {
    opacity: 0;
}
`;
styleInject(css_248z);
script.__scopeId = "data-v-5784ed69";
var entry_esm = /* @__PURE__ */ (() => {
  const e = script;
  return e.install = (r) => {
    r.component("Popper", e);
  }, e;
})(), commonjsGlobal$1 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function getDefaultExportFromCjs(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function getAugmentedNamespace(e) {
  if (e.__esModule)
    return e;
  var r = e.default;
  if (typeof r == "function") {
    var n = function s() {
      return this instanceof s ? Reflect.construct(r, arguments, this.constructor) : r.apply(this, arguments);
    };
    n.prototype = r.prototype;
  } else
    n = {};
  return Object.defineProperty(n, "__esModule", { value: !0 }), Object.keys(e).forEach(function(s) {
    var a = Object.getOwnPropertyDescriptor(e, s);
    Object.defineProperty(n, s, a.get ? a : {
      enumerable: !0,
      get: function() {
        return e[s];
      }
    });
  }), n;
}
var index_umd = { exports: {} }, src = { exports: {} };
(function(module, exports) {
  (function(r, n) {
    module.exports = n();
  })(commonjsGlobal$1, () => (
    /******/
    (() => {
      var __webpack_modules__ = {
        /***/
        "./esm/annotation.js": (
          /*!***************************!*\
            !*** ./esm/annotation.js ***!
            \***************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Annotation: () => (
                /* binding */
                u
              ),
              /* harmony export */
              Circle: () => (
                /* binding */
                g
              ),
              /* harmony export */
              Poly: () => (
                /* binding */
                Ve
              ),
              /* harmony export */
              PolyLine: () => (
                /* binding */
                B
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./graphics/primitives3d.js */
              "./esm/graphics/primitives3d.js"
            ), o = n(
              /*! ./graphics/tessellator.js */
              "./esm/graphics/tessellator.js"
            ), c = n(
              /*! ./color.js */
              "./esm/color.js"
            ), _ = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            );
            function u() {
              this.addedToPrimitives = !1, this.annotationDirty = !0, this._opacity = 1, this._showHoverLabel = !1;
            }
            u.pointList = null, u.lineList = null, u.triangleFanPointList = null, u.triangleList = null, u.batchDirty = !0, u.prepBatch = function(k) {
              (u.pointList == null || u.batchDirty) && (u.pointList = new l.PointList(k), u.lineList = new l.LineList(), u.triangleFanPointList = new l.TriangleFanList(), u.triangleList = new l.TriangleList(), u.lineList.set_depthBuffered(!1), u.triangleList.depthBuffered = !1);
            }, u.drawBatch = function(k) {
              u.batchDirty = !1, k.gl != null && (u.pointList != null && u.pointList.draw(k, 1, !1), u.lineList != null && u.lineList.drawLines(k, 1), u.triangleFanPointList != null && u.triangleFanPointList.draw(k, 1), u.triangleList != null && u.triangleList.draw(k, 1, 0));
            }, u.separation = function(k, b, Le, xe) {
              b = b / 180 * Math.PI, xe = xe / 180 * Math.PI, k = k / 12 * Math.PI, Le = Le / 12 * Math.PI;
              var ze = Math.cos(b) * Math.sin(xe) - Math.sin(b) * Math.cos(xe) * Math.cos(Le - k), Se = Math.cos(xe) * Math.sin(Le - k), Te = Math.sin(b) * Math.sin(xe) + Math.cos(b) * Math.cos(xe) * Math.cos(Le - k), D = Math.atan2(Math.sqrt(ze * ze + Se * Se), Te);
              return D = D / Math.PI * 180, D < 0 && (D += 180), D;
            }, u.colorToUint = function(k) {
              return k.a << 24 | k.r << 16 | k.g << 8 | k.b;
            }, u.colorToUintAlpha = function(k, b) {
              return b << 24 | k.r << 16 | k.g << 8 | k.b;
            };
            var y = {
              draw: function(k) {
              },
              get_opacity: function() {
                return this._opacity;
              },
              set_opacity: function(k) {
                return u.batchDirty = !0, this._opacity = k, k;
              },
              get_id: function() {
                return this._id;
              },
              set_id: function(k) {
                return this._id = k, k;
              },
              get_tag: function() {
                return this._tag;
              },
              set_tag: function(k) {
                return this._tag = k, k;
              },
              get_label: function() {
                return this._label;
              },
              set_label: function(k) {
                return this._label = k, k;
              },
              get_showHoverLabel: function() {
                return this._showHoverLabel;
              },
              set_showHoverLabel: function(k) {
                return this._showHoverLabel = k, k;
              },
              hitTest: function(k, b, Le, xe, ze) {
                return !1;
              },
              get_center: function() {
                return this.center;
              },
              set_center: function(k) {
                return this.center = k, k;
              }
            };
            (0, s.registerType)("Annotation", [u, y, null]);
            function g() {
              this._fill$1 = !1, this._skyRelative$1 = !1, this._strokeWidth$1 = 1, this._radius$1 = 10, this._lineColor$1 = c.Colors.get_white(), this._fillColor$1 = c.Colors.get_white(), this._ra$1 = 0, this._dec$1 = 0, u.call(this);
            }
            var Ee = {
              get_fill: function() {
                return this._fill$1;
              },
              set_fill: function(k) {
                return u.batchDirty = !0, this._fill$1 = k, k;
              },
              get_skyRelative: function() {
                return this._skyRelative$1;
              },
              set_skyRelative: function(k) {
                return u.batchDirty = !0, this._skyRelative$1 = k, k;
              },
              get_lineWidth: function() {
                return this._strokeWidth$1;
              },
              set_lineWidth: function(k) {
                return u.batchDirty = !0, this._strokeWidth$1 = k, k;
              },
              get_radius: function() {
                return this._radius$1;
              },
              set_radius: function(k) {
                return u.batchDirty = !0, this._radius$1 = k, k;
              },
              get_lineColor: function() {
                return this._lineColor$1.toString();
              },
              set_lineColor: function(k) {
                return u.batchDirty = !0, this._lineColor$1 = c.Color.load(k), k;
              },
              get_fillColor: function() {
                return this._fillColor$1.toString();
              },
              set_fillColor: function(k) {
                return u.batchDirty = !0, this._fillColor$1 = c.Color.fromName(k), k;
              },
              setCenter: function(k, b) {
                u.batchDirty = !0, this._ra$1 = k / 15, this._dec$1 = b, this.center = _.Coordinates.raDecTo3d(this._ra$1, this._dec$1);
              },
              draw: function(k) {
                var b = !0, Le = this._radius$1;
                this._skyRelative$1 && (Le /= k.get_fovScale() / 3600);
                var xe = k.WVP.transform(this.center);
                if (xe.z < 0 && (b = !1), t.Vector3d.dot(k.get_viewPoint(), this.center) < 0.55 && (b = !1), k.gl != null) {
                  if (u.batchDirty || this.annotationDirty) {
                    for (var ze = t.Vector3d.create(0, 1, 0), Se = t.Vector3d.cross(this.center, ze), Te = t.Vector3d.cross(this.center, Se), D = this._radius$1 / 44, ke = 72, Fe = Math.PI * 2 / ke, He = [], We = 0; We <= ke; We++) {
                      var Ke = Math.cos(We * Fe) * D, $ = Math.sin(We * Fe) * D;
                      He.push(t.Vector3d.create(this.center.x + Ke * Se.x + $ * Te.x, this.center.y + Ke * Se.y + $ * Te.y, this.center.z + Ke * Se.z + $ * Te.z));
                    }
                    if (this._strokeWidth$1 > 0 && He.length > 1) {
                      var De = this._lineColor$1._clone();
                      De.a = Math.round(De.a * this.get_opacity());
                      for (var Re = 0; Re < He.length - 1; Re++)
                        u.lineList.addLine(He[Re], He[Re + 1], De, new l.Dates(0, 1));
                    }
                    if (this._fill$1) {
                      var Ie = this._fillColor$1._clone();
                      Ie.a = Math.round(Ie.a * this.get_opacity());
                      var O = t.Vector3d.create(this.center.x, this.center.y, this.center.z);
                      He.splice(0, 0, O), u.triangleFanPointList.addShape(He, Ie, new l.Dates(0, 1));
                    }
                    this.annotationDirty = !1;
                  }
                } else if (b) {
                  var Ue = k.device;
                  Ue.save(), Ue.globalAlpha = this.get_opacity(), Ue.beginPath(), Ue.arc(xe.x, xe.y, Le, 0, Math.PI * 2, !0), Ue.lineWidth = this._strokeWidth$1, Ue.fillStyle = this._fillColor$1.toString(), this._fill$1 && Ue.fill(), Ue.globalAlpha = 1, Ue.strokeStyle = this._lineColor$1.toString(), Ue.stroke(), Ue.restore();
                }
              },
              hitTest: function(k, b, Le, xe, ze) {
                if (a.ss.emptyString(this.get_id()))
                  return !1;
                var Se = this._radius$1;
                return this._skyRelative$1 || (Se *= k.get_fovScale() / 3600), u.separation(b, Le, this._ra$1, this._dec$1) < Se;
              }
            };
            (0, s.registerType)("Circle", [g, Ee, u]);
            function Ve() {
              this._points$1 = [], this._fill$1 = !1, this._strokeWidth$1 = 1, this._lineColor$1 = c.Colors.get_white(), this._fillColor$1 = c.Colors.get_white(), u.call(this);
            }
            var Me = {
              addPoint: function(k, b) {
                u.batchDirty = !0, this._points$1.push(_.Coordinates.raDecTo3d(k / 15, b));
              },
              get_fill: function() {
                return this._fill$1;
              },
              set_fill: function(k) {
                return u.batchDirty = !0, this._fill$1 = k, k;
              },
              get_lineWidth: function() {
                return this._strokeWidth$1;
              },
              set_lineWidth: function(k) {
                return u.batchDirty = !0, this._strokeWidth$1 = k, k;
              },
              get_lineColor: function() {
                return this._lineColor$1.toString();
              },
              set_lineColor: function(k) {
                return u.batchDirty = !0, this._lineColor$1 = c.Color.fromName(k), k;
              },
              get_fillColor: function() {
                return this._fillColor$1.toString();
              },
              set_fillColor: function(k) {
                return u.batchDirty = !0, this._fillColor$1 = c.Color.fromName(k), k;
              },
              draw: function(k) {
                if (k.gl != null) {
                  if (u.batchDirty || this.annotationDirty) {
                    var b = this._points$1;
                    if (this._strokeWidth$1 > 0 && this._points$1.length > 1) {
                      var Le = this._lineColor$1._clone();
                      Le.a = Math.round(Le.a * this.get_opacity());
                      for (var xe = 0; xe < this._points$1.length - 1; xe++)
                        u.lineList.addLine(b[xe], b[xe + 1], Le, new l.Dates(0, 1));
                      u.lineList.addLine(b[this._points$1.length - 1], b[0], Le, new l.Dates(0, 1));
                    }
                    if (this._fill$1) {
                      var ze = this._fillColor$1._clone();
                      ze.a = Math.round(ze.a * this.get_opacity());
                      for (var Se = o.Tessellator.tesselateSimplePoly(b), xe = 0; xe < Se.length; xe += 3)
                        u.triangleList.addSubdividedTriangles(b[Se[xe]], b[Se[xe + 1]], b[Se[xe + 2]], ze, new l.Dates(0, 1), 2);
                    }
                    this.annotationDirty = !1;
                  }
                } else {
                  var Te = k.device;
                  Te.save(), Te.globalAlpha = this.get_opacity(), Te.beginPath();
                  for (var D = !0, ke = a.ss.enumerate(this._points$1); ke.moveNext(); ) {
                    var Fe = ke.current, He = k.WVP.transform(Fe);
                    if (He.z < 0) {
                      Te.restore();
                      return;
                    }
                    if (t.Vector3d.dot(k.get_viewPoint(), Fe) < 0.75) {
                      Te.restore();
                      return;
                    }
                    D ? (D = !1, Te.moveTo(He.x, He.y)) : Te.lineTo(He.x, He.y);
                  }
                  Te.closePath(), Te.lineWidth = this._strokeWidth$1, this._fill$1 && (Te.fillStyle = this._fillColor$1.toString(), Te.fill()), Te.strokeStyle = this._lineColor$1.toString(), Te.globalAlpha = 1, Te.stroke(), Te.restore();
                }
              }
            };
            (0, s.registerType)("Poly", [Ve, Me, u]);
            function B() {
              this._points$1 = [], this._strokeWidth$1 = 1, this._lineColor$1 = c.Colors.get_white(), u.call(this);
            }
            var Pe = {
              addPoint: function(k, b) {
                u.batchDirty = !0, this._points$1.push(_.Coordinates.raDecTo3d(k / 15, b));
              },
              get_lineWidth: function() {
                return this._strokeWidth$1;
              },
              set_lineWidth: function(k) {
                return u.batchDirty = !0, this._strokeWidth$1 = k, k;
              },
              get_lineColor: function() {
                return this._lineColor$1.toString();
              },
              set_lineColor: function(k) {
                return u.batchDirty = !0, this._lineColor$1 = c.Color.fromName(k), k;
              },
              draw: function(k) {
                if (k.gl != null) {
                  if (u.batchDirty || this.annotationDirty) {
                    var b = this._points$1;
                    if (this._strokeWidth$1 > 0) {
                      var Le = this._lineColor$1._clone();
                      Le.a = Math.round(Le.a * this.get_opacity());
                      for (var xe = 0; xe < this._points$1.length - 1; xe++)
                        u.lineList.addLine(b[xe], b[xe + 1], Le, new l.Dates(0, 1));
                    }
                    this.annotationDirty = !1;
                  }
                } else {
                  var ze = k.device;
                  ze.save(), ze.globalAlpha = this.get_opacity();
                  for (var Se = !0, Te = a.ss.enumerate(this._points$1); Te.moveNext(); ) {
                    var D = Te.current, ke = k.WVP.transform(D);
                    if (ke.z < 0) {
                      ze.restore();
                      return;
                    }
                    if (t.Vector3d.dot(k.get_viewPoint(), D) < 0.75) {
                      ze.restore();
                      return;
                    }
                    Se ? (Se = !1, ze.beginPath(), ze.moveTo(ke.x, ke.y)) : ze.lineTo(ke.x, ke.y);
                  }
                  ze.lineWidth = this._strokeWidth$1, ze.strokeStyle = this._lineColor$1.toString(), ze.stroke(), ze.restore();
                }
              }
            };
            (0, s.registerType)("PolyLine", [B, Pe, u]);
          }
        ),
        /***/
        "./esm/astrocalc.js": (
          /*!**************************!*\
            !*** ./esm/astrocalc.js ***!
            \**************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              AstroCalc: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              AstroRaDec: () => (
                /* binding */
                b
              ),
              /* harmony export */
              RiseSetDetails: () => (
                /* binding */
                xe
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./util.js */
              "./esm/util.js"
            ), l = n(
              /*! ./astrocalc/coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), o = n(
              /*! ./astrocalc/date.js */
              "./esm/astrocalc/date.js"
            ), c = n(
              /*! ./astrocalc/nutation.js */
              "./esm/astrocalc/nutation.js"
            ), _ = n(
              /*! ./astrocalc/parallax.js */
              "./esm/astrocalc/parallax.js"
            ), u = n(
              /*! ./astrocalc/physical_jupiter.js */
              "./esm/astrocalc/physical_jupiter.js"
            ), y = n(
              /*! ./astrocalc/rise_transit_set.js */
              "./esm/astrocalc/rise_transit_set.js"
            ), g = n(
              /*! ./astrocalc/elliptical.js */
              "./esm/astrocalc/elliptical.js"
            ), Ee = n(
              /*! ./astrocalc/galilean_moons.js */
              "./esm/astrocalc/galilean_moons.js"
            ), Ve = n(
              /*! ./astrocalc/moon.js */
              "./esm/astrocalc/moon.js"
            ), Me = new Ee.GMDS(), B = new g.EPD(), Pe = new u.CAAPhysicalJupiterDetails(), k = 0;
            function b(D, ke, Fe, He, We) {
              this.RA = 0, this.dec = 0, this.distance = 0, this.shadow = !1, this.eclipsed = !1, this.RA = D, this.dec = ke, this.distance = Fe, this.shadow = He, this.eclipsed = We;
            }
            var Le = {};
            (0, s.registerType)("AstroRaDec", [b, Le, null]);
            function xe(D, ke, Fe, He, We) {
              this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0, this.bNeverRises = !1, this.bValid = D, this.rise = ke, this.transit = Fe, this.set = He, this.bNeverRises = We;
            }
            var ze = {};
            (0, s.registerType)("RiseSetDetails", [xe, ze, null]);
            function Se() {
            }
            Se.getPlanet = function(D, ke, Fe, He, We) {
              var Ke = ke;
              if (He = -He, Ke < 9) {
                var $ = g.ELL.calculate(D, ke), De = _.CAAParallax.equatorial2Topocentric($.apparentGeocentricRA, $.apparentGeocentricDeclination, $.apparentGeocentricDistance, He, Fe, We, D);
                return new b(De.x, De.y, $.apparentGeocentricDistance, !1, !1);
              } else if (Ke === 9) {
                var Re = Ve.CAAMoon.eclipticLatitude(D), Ie = Ve.CAAMoon.eclipticLongitude(D), O = Ve.CAAMoon.radiusVector(D) / 149598e3, Ue = c.CAANutation.trueObliquityOfEcliptic(D), $e = l.CT.ec2Eq(Ie, Re, Ue), De = _.CAAParallax.equatorial2Topocentric($e.x, $e.y, O, He, Fe, We, D);
                return new b(De.x, De.y, O, !1, !1);
              } else {
                if (D !== k) {
                  B = g.ELL.calculate(D, 4), Pe = u.CAAPhysicalJupiter.calculate(D);
                  var De = _.CAAParallax.equatorial2Topocentric(B.apparentGeocentricRA, B.apparentGeocentricDeclination, B.apparentGeocentricDistance, He, Fe, We, D);
                  B.apparentGeocentricRA = De.x, B.apparentGeocentricDeclination = De.y, Me = Ee.GM.calculate(D), k = D;
                }
                var Ze = 954501e-9, Qe = Math.atan(0.5 * (Ze / B.apparentGeocentricDistance)) / 3.1415927 * 180, Ae = Qe / Math.cos(B.apparentGeocentricDeclination / 180 * 3.1415927) / 15, Ne = 0, Be = 0, Ge = 0, Ye = !1, je = !1;
                switch (Ke) {
                  case 10:
                    Ne = Me.satellite1.apparentRectangularCoordinates.x, Be = Me.satellite1.apparentRectangularCoordinates.y, Ge = Me.satellite1.apparentRectangularCoordinates.z, je = Me.satellite1.bInEclipse, Ye = Me.satellite1.bInShadowTransit;
                    break;
                  case 11:
                    Ne = Me.satellite2.apparentRectangularCoordinates.x, Be = Me.satellite2.apparentRectangularCoordinates.y, Ge = Me.satellite2.apparentRectangularCoordinates.z, je = Me.satellite2.bInEclipse, Ye = Me.satellite2.bInShadowTransit;
                    break;
                  case 12:
                    Ne = Me.satellite3.apparentRectangularCoordinates.x, Be = Me.satellite3.apparentRectangularCoordinates.y, Ge = Me.satellite3.apparentRectangularCoordinates.z, je = Me.satellite3.bInEclipse, Ye = Me.satellite3.bInShadowTransit;
                    break;
                  case 13:
                    Ne = Me.satellite4.apparentRectangularCoordinates.x, Be = Me.satellite4.apparentRectangularCoordinates.y, Ge = Me.satellite4.apparentRectangularCoordinates.z, je = Me.satellite4.bInEclipse, Ye = Me.satellite4.bInShadowTransit;
                    break;
                  case 14:
                    Ne = Me.satellite1.apparentShadowRectangularCoordinates.x, Be = Me.satellite1.apparentShadowRectangularCoordinates.y, Ge = Me.satellite1.apparentShadowRectangularCoordinates.z * 0.9, Ye = Me.satellite1.bInShadowTransit;
                    break;
                  case 15:
                    Ne = Me.satellite2.apparentShadowRectangularCoordinates.x, Be = Me.satellite2.apparentShadowRectangularCoordinates.y, Ge = Me.satellite2.apparentShadowRectangularCoordinates.z * 0.9, Ye = Me.satellite2.bInShadowTransit;
                    break;
                  case 16:
                    Ne = Me.satellite3.apparentShadowRectangularCoordinates.x, Be = Me.satellite3.apparentShadowRectangularCoordinates.y, Ge = Me.satellite3.apparentShadowRectangularCoordinates.z * 0.9, Ye = Me.satellite3.bInShadowTransit;
                    break;
                  case 17:
                    Ne = Me.satellite4.apparentShadowRectangularCoordinates.x, Be = Me.satellite4.apparentShadowRectangularCoordinates.y, Ge = Me.satellite4.apparentShadowRectangularCoordinates.z * 0.9, Ye = Me.satellite4.bInShadowTransit;
                    break;
                }
                var ht, qe, lt = Pe.p / 180 * 3.1415927;
                return ht = Ne * Math.cos(lt) - Be * Math.sin(lt), qe = Ne * Math.sin(lt) + Be * Math.cos(lt), Ne = ht, Be = qe, new b(B.apparentGeocentricRA - Ne * Ae, B.apparentGeocentricDeclination + Be * Qe, B.apparentGeocentricDistance + Ge * Ze / 2, Ye, je);
              }
            }, Se.getJulianDay = function(D, ke, Fe) {
              return o.DT.dateToJD(a.ss.truncate(D), a.ss.truncate(ke), Fe, !0);
            }, Se.eclipticToJ2000 = function(D, ke, Fe) {
              var He = l.CT.ec2Eq(D, ke, c.CAANutation.trueObliquityOfEcliptic(Fe));
              return new b(He.x, He.y, 0, !1, !1);
            }, Se.galacticToJ2000 = function(D, ke) {
              var Fe = l.CT.g2Eq(D, ke);
              return new b(Fe.x, Fe.y, 0, !1, !1);
            }, Se.j2000ToGalactic = function(D, ke) {
              var Fe = l.CT.eq2G(D, ke);
              return new b(Fe.x, Fe.y, 0, !1, !1);
            }, Se.getRiseTrinsitSet = function(D, ke, Fe, He, We, Ke, $, De, Re, Ie) {
              var O = -0.5667;
              switch (Ie) {
                case 0:
                  O = -0.5667;
                  break;
                case 1:
                  O = -0.8333;
                  break;
                case 2:
                  O = 0.125;
                  break;
              }
              var Ue = y.CAARiseTransitSet.rise(D, He, We, Ke, $, De, Re, Fe, ke, O), $e = !1;
              return Ue.bValid || ($e = t.Util.sign(ke) !== t.Util.sign($)), new xe(Ue.bValid, Ue.rise, Ue.transit, Ue.set, $e);
            };
            var Te = {};
            (0, s.registerType)("AstroCalc", [Se, Te, null]);
          }
        ),
        /***/
        "./esm/astrocalc/aberration.js": (
          /*!*************************************!*\
            !*** ./esm/astrocalc/aberration.js ***!
            \*************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ABR: () => (
                /* binding */
                _
              ),
              /* harmony export */
              ACFT: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./sun.js */
              "./esm/astrocalc/sun.js"
            );
            function l(y, g, Ee, Ve, Me, B, Pe, k, b, Le, xe, ze, Se, Te, D, ke, Fe, He, We, Ke, $, De, Re) {
              this.l2 = 0, this.l3 = 0, this.l4 = 0, this.l5 = 0, this.l6 = 0, this.l7 = 0, this.l8 = 0, this.ldash = 0, this.d = 0, this.mdash = 0, this.f = 0, this.xsin = 0, this.xsint = 0, this.xcos = 0, this.xcost = 0, this.ysin = 0, this.ysint = 0, this.ycos = 0, this.ycost = 0, this.zsin = 0, this.zsint = 0, this.zcos = 0, this.zcost = 0, this.l2 = y, this.l3 = g, this.l4 = Ee, this.l5 = Ve, this.l6 = Me, this.l7 = B, this.l8 = Pe, this.ldash = k, this.d = b, this.mdash = Le, this.f = xe, this.xsin = ze, this.xsint = Se, this.xcos = Te, this.xcost = D, this.ysin = ke, this.ysint = Fe, this.ycos = He, this.ycost = We, this.zsin = Ke, this.zsint = $, this.zcos = De, this.zcost = Re;
            }
            var o = {};
            (0, s.registerType)("ACFT", [l, o, null]);
            const c = [new l(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1719914, -2, -25, 0, 25, -13, 1578089, 156, 10, 32, 684185, -358), new l(0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6434, 141, 28007, -107, 25697, -95, -5904, -130, 11141, -48, -2559, -55), new l(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 715, 0, 0, 0, 6, 0, -657, 0, -15, 0, -282, 0), new l(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 715, 0, 0, 0, 0, 0, -656, 0, 0, 0, -285, 0), new l(0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 486, -5, -236, -4, -216, -4, -446, 5, -94, 0, -193, 0), new l(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 159, 0, 0, 0, 2, 0, -147, 0, -6, 0, -61, 0), new l(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, -59, 0), new l(0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 39, 0, 0, 0, 0, 0, -36, 0, 0, 0, -16, 0), new l(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 33, 0, -10, 0, -9, 0, -30, 0, -5, 0, -13, 0), new l(0, 2, 0, -1, 0, 0, 0, 0, 0, 0, 0, 31, 0, 1, 0, 1, 0, -28, 0, 0, 0, -12, 0), new l(0, 3, -8, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, -28, 0, 25, 0, 8, 0, 11, 0, 3, 0), new l(0, 5, -8, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, -28, 0, -25, 0, -8, 0, -11, 0, -3, 0), new l(2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, -19, 0, 0, 0, -8, 0), new l(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -19, 0, 0, 0, 0, 0, 17, 0, 0, 0, 8, 0), new l(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, -16, 0, 0, 0, -7, 0), new l(0, 1, 0, -2, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 1, 0, 7, 0), new l(0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, -15, 0, -3, 0, -6, 0), new l(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 11, 0, -1, 0, -1, 0, -10, 0, -1, 0, -5, 0), new l(2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, -10, 0, 0, 0, -4, 0, 0, 0), new l(0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, -11, 0, -2, 0, -2, 0, 9, 0, -1, 0, 4, 0), new l(0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, -8, 0, -8, 0, 6, 0, -3, 0, 3, 0), new l(0, 3, 0, -2, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 9, 0, 0, 0, 4, 0), new l(1, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, -9, 0, 0, 0, -4, 0), new l(2, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, -8, 0, 0, 0, -4, 0), new l(0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, -8, 0, 0, 0, -3, 0, 0, 0), new l(2, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 8, 0, 0, 0, 3, 0, 0, 0), new l(0, 3, -2, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, -8, 0, 0, 0, -3, 0), new l(0, 0, 0, 0, 0, 0, 0, 1, 2, -1, 0, 8, 0, 0, 0, 0, 0, -7, 0, 0, 0, -3, 0), new l(8, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -7, 0, -6, 0, 4, 0, -3, 0, 2, 0), new l(8, -14, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -7, 0, 6, 0, -4, 0, 3, 0, -2, 0), new l(0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, -5, 0, -4, 0, 5, 0, -2, 0, 2, 0), new l(3, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, -2, 0, -7, 0, 1, 0, -4, 0), new l(0, 2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 4, 0, -6, 0, -5, 0, -4, 0, -2, 0, -2, 0), new l(3, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, -6, 0, 0, 0, -3, 0, 0, 0), new l(0, 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, -5, 0, -4, 0, -5, 0, -2, 0, -2, 0), new l(0, 0, 0, 0, 0, 0, 0, 1, -2, 0, 0, 5, 0, 0, 0, 0, 0, -5, 0, 0, 0, -2, 0)];
            function _() {
            }
            _.earthVelocity = function(y) {
              for (var g = (y - 2451545) / 36525, Ee = 3.1761467 + 1021.3285546 * g, Ve = 1.7534703 + 628.3075849 * g, Me = 6.2034809 + 334.0612431 * g, B = 0.5995465 + 52.9690965 * g, Pe = 0.8740168 + 21.3299095 * g, k = 5.4812939 + 7.4781599 * g, b = 5.3118863 + 3.8133036 * g, Le = 3.8103444 + 8399.6847337 * g, xe = 5.1984667 + 7771.3771486 * g, ze = 2.3555559 + 8328.6914289 * g, Se = 1.6279052 + 8433.4661601 * g, Te = new a.C3D(), D = c.length, ke = 0; ke < D; ke++) {
                var Fe = c[ke].l2 * Ee + c[ke].l3 * Ve + c[ke].l4 * Me + c[ke].l5 * B + c[ke].l6 * Pe + c[ke].l7 * k + c[ke].l8 * b + c[ke].ldash * Le + c[ke].d * xe + c[ke].mdash * ze + c[ke].f * Se;
                Te.x += (c[ke].xsin + c[ke].xsint * g) * Math.sin(Fe), Te.x += (c[ke].xcos + c[ke].xcost * g) * Math.cos(Fe), Te.y += (c[ke].ysin + c[ke].ysint * g) * Math.sin(Fe), Te.y += (c[ke].ycos + c[ke].ycost * g) * Math.cos(Fe), Te.z += (c[ke].zsin + c[ke].zsint * g) * Math.sin(Fe), Te.z += (c[ke].zcos + c[ke].zcost * g) * Math.cos(Fe);
              }
              return Te;
            }, _.eclipticAberration = function(y, g, Ee) {
              var Ve = new a.COR(), Me = (Ee - 2451545) / 36525, B = Me * Me, Pe = 0.016708634 - 42037e-9 * Me - 1267e-10 * B, k = 102.93735 + 1.71946 * Me + 46e-5 * B, b = 20.49552, Le = t.CAASun.geometricEclipticLongitude(Ee);
              return k = a.CT.d2R(k), y = a.CT.d2R(y), g = a.CT.d2R(g), Le = a.CT.d2R(Le), Ve.x = (-b * Math.cos(Le - y) + Pe * b * Math.cos(k - y)) / Math.cos(g) / 3600, Ve.y = -b * Math.sin(g) * (Math.sin(Le - y) - Pe * Math.sin(k - y)) / 3600, Ve;
            }, _.equatorialAberration = function(y, g, Ee) {
              y = a.CT.d2R(y * 15), g = a.CT.d2R(g);
              var Ve = Math.cos(y), Me = Math.sin(y), B = Math.cos(g), Pe = Math.sin(g), k = _.earthVelocity(Ee), b = new a.COR();
              return b.x = a.CT.r2H((k.y * Ve - k.x * Me) / (17314463350 * B)), b.y = a.CT.r2D(-(((k.x * Ve + k.y * Me) * Pe - k.z * B) / 17314463350)), b;
            };
            var u = {};
            (0, s.registerType)("ABR", [_, u, null]);
          }
        ),
        /***/
        "./esm/astrocalc/angular_separation.js": (
          /*!*********************************************!*\
            !*** ./esm/astrocalc/angular_separation.js ***!
            \*********************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ASEP: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t() {
            }
            t.separation = function(o, c, _, u) {
              c = a.CT.d2R(c), u = a.CT.d2R(u), o = a.CT.h2R(o), _ = a.CT.h2R(_);
              var y = Math.cos(c) * Math.sin(u) - Math.sin(c) * Math.cos(u) * Math.cos(_ - o), g = Math.cos(u) * Math.sin(_ - o), Ee = Math.sin(c) * Math.sin(u) + Math.cos(c) * Math.cos(u) * Math.cos(_ - o), Ve = Math.atan2(Math.sqrt(y * y + g * g), Ee);
              return Ve = a.CT.r2D(Ve), Ve < 0 && (Ve += 180), Ve;
            }, t.positionAngle = function(o, c, _, u) {
              var y, g, Ee, Ve;
              g = a.CT.d2R(c), Ve = a.CT.d2R(u), y = a.CT.h2R(o), Ee = a.CT.h2R(_);
              var Me = y - Ee, B = Math.cos(Ve) * Math.tan(g) - Math.sin(Ve) * Math.cos(Me), Pe = Math.sin(Me), k = Math.atan2(Pe, B);
              return k = a.CT.r2D(k), k;
            }, t.distanceFromGreatArc = function(o, c, _, u, y, g) {
              c = a.CT.d2R(c), u = a.CT.d2R(u), g = a.CT.d2R(g), o = a.CT.h2R(o), _ = a.CT.h2R(_), y = a.CT.h2R(y);
              var Ee = Math.cos(c) * Math.cos(o), Ve = Math.cos(u) * Math.cos(_), Me = Math.cos(c) * Math.sin(o), B = Math.cos(u) * Math.sin(_), Pe = Math.sin(c), k = Math.sin(u), b = Me * k - Pe * B, Le = Pe * Ve - Ee * k, xe = Ee * B - Me * Ve, ze = Math.tan(y), Se = Math.tan(g) / Math.cos(y), Te = Math.asin((b + Le * ze + xe * Se) / (Math.sqrt(b * b + Le * Le + xe * xe) * Math.sqrt(1 + ze * ze + Se * Se)));
              return Te = a.CT.r2D(Te), Te < 0 && (Te = Math.abs(Te)), Te;
            };
            var l = {};
            (0, s.registerType)("ASEP", [t, l, null]);
          }
        ),
        /***/
        "./esm/astrocalc/coordinate_transformation.js": (
          /*!****************************************************!*\
            !*** ./esm/astrocalc/coordinate_transformation.js ***!
            \****************************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              C3D: () => (
                /* binding */
                l
              ),
              /* harmony export */
              COR: () => (
                /* binding */
                a
              ),
              /* harmony export */
              CT: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            );
            function a() {
              this.x = 0, this.y = 0, this.x = 0, this.y = 0;
            }
            a.create = function(u, y) {
              var g = new a();
              return g.x = u, g.y = y, g;
            };
            var t = {};
            (0, s.registerType)("COR", [a, t, null]);
            function l() {
              this.x = 0, this.y = 0, this.z = 0, this.x = 0, this.y = 0, this.z = 0;
            }
            l.create = function(u, y, g) {
              var Ee = new l();
              return Ee.x = u, Ee.y = y, Ee.z = g, Ee;
            };
            var o = {};
            (0, s.registerType)("C3D", [l, o, null]);
            function c() {
            }
            c.eq2Ec = function(u, y, g) {
              u = c.h2R(u), y = c.d2R(y), g = c.d2R(g);
              var Ee = new a();
              return Ee.x = c.r2D(Math.atan2(Math.sin(u) * Math.cos(g) + Math.tan(y) * Math.sin(g), Math.cos(u))), Ee.x < 0 && (Ee.x += 360), Ee.y = c.r2D(Math.asin(Math.sin(y) * Math.cos(g) - Math.cos(y) * Math.sin(g) * Math.sin(u))), Ee;
            }, c.ec2Eq = function(u, y, g) {
              u = c.d2R(u), y = c.d2R(y), g = c.d2R(g);
              var Ee = new a();
              return Ee.x = c.r2H(Math.atan2(Math.sin(u) * Math.cos(g) - Math.tan(y) * Math.sin(g), Math.cos(u))), Ee.x < 0 && (Ee.x += 24), Ee.y = c.r2D(Math.asin(Math.sin(y) * Math.cos(g) + Math.cos(y) * Math.sin(g) * Math.sin(u))), Ee;
            }, c.eq2H = function(u, y, g) {
              u = c.h2R(u), y = c.d2R(y), g = c.d2R(g);
              var Ee = new a();
              return Ee.x = c.r2D(Math.atan2(Math.sin(u), Math.cos(u) * Math.sin(g) - Math.tan(y) * Math.cos(g))), Ee.x < 0 && (Ee.x += 360), Ee.y = c.r2D(Math.asin(Math.sin(g) * Math.sin(y) + Math.cos(g) * Math.cos(y) * Math.cos(u))), Ee;
            }, c.h2Eq = function(u, y, g) {
              u = c.d2R(u), y = c.d2R(y), g = c.d2R(g);
              var Ee = new a();
              return Ee.x = c.r2H(Math.atan2(Math.sin(u), Math.cos(u) * Math.sin(g) + Math.tan(y) * Math.cos(g))), Ee.x < 0 && (Ee.x += 24), Ee.y = c.r2D(Math.asin(Math.sin(g) * Math.sin(y) - Math.cos(g) * Math.cos(y) * Math.cos(u))), Ee;
            }, c.eq2G = function(u, y) {
              u = 192.25 - c.h2D(u), u = c.d2R(u), y = c.d2R(y);
              var g = new a();
              return g.x = c.r2D(Math.atan2(Math.sin(u), Math.cos(u) * Math.sin(c.d2R(27.4)) - Math.tan(y) * Math.cos(c.d2R(27.4)))), g.x = 303 - g.x, g.x >= 360 && (g.x -= 360), g.y = c.r2D(Math.asin(Math.sin(y) * Math.sin(c.d2R(27.4)) + Math.cos(y) * Math.cos(c.d2R(27.4)) * Math.cos(u))), g;
            }, c.g2Eq = function(u, y) {
              u -= 123, u = c.d2R(u), y = c.d2R(y);
              var g = new a();
              return g.x = c.r2D(Math.atan2(Math.sin(u), Math.cos(u) * Math.sin(c.d2R(27.4)) - Math.tan(y) * Math.cos(c.d2R(27.4)))), g.x += 12.25, g.x < 0 && (g.x += 360), g.x = c.d2H(g.x), g.y = c.r2D(Math.asin(Math.sin(y) * Math.sin(c.d2R(27.4)) + Math.cos(y) * Math.cos(c.d2R(27.4)) * Math.cos(u))), g;
            }, c.d2R = function(u) {
              return u * 0.0174532925199433;
            }, c.r2D = function(u) {
              return u * 57.2957795130823;
            }, c.r2H = function(u) {
              return u * 3.81971863420549;
            }, c.h2R = function(u) {
              return u * 0.261799387799149;
            }, c.h2D = function(u) {
              return u * 15;
            }, c.d2H = function(u) {
              return u / 15;
            }, c.PI = function() {
              return 3.14159265358979;
            }, c.m360 = function(u) {
              return u - Math.floor(u / 360) * 360;
            }, c.m24 = function(u) {
              return u - Math.floor(u / 24) * 24;
            }, c.dmS2D = function(u, y, g) {
              return c.dmS2Dp(u, y, g, !0);
            }, c.dmS2Dp = function(u, y, g, Ee) {
              return Ee || (console.assert(u >= 0), console.assert(y >= 0), console.assert(g >= 0)), Ee ? u + y / 60 + g / 3600 : -u - y / 60 - g / 3600;
            };
            var _ = {};
            (0, s.registerType)("CT", [c, _, null]);
          }
        ),
        /***/
        "./esm/astrocalc/date.js": (
          /*!*******************************!*\
            !*** ./esm/astrocalc/date.js ***!
            \*******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CalD: () => (
                /* binding */
                t
              ),
              /* harmony export */
              DAY_OF_WEEK: () => (
                /* binding */
                o
              ),
              /* harmony export */
              DT: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            );
            function t() {
              this.year = 0, this.month = 0, this.day = 0, this.year = 0, this.month = 0, this.day = 0;
            }
            t.create = function(u, y, g) {
              var Ee = new t();
              return Ee.year = u, Ee.month = y, Ee.day = g, Ee;
            };
            var l = {};
            (0, a.registerType)("CalD", [t, l, null]);
            var o = {
              SUNDAY: 0,
              MONDAY: 1,
              TUESDAY: 2,
              WEDNESDAY: 3,
              THURSDAY: 4,
              FRIDAY: 5,
              SATURDAY: 6
            };
            (0, a.registerType)("DAY_OF_WEEK", o);
            function c() {
              this.m_dblJulian = 0, this.m_bGregorianCalendar = !1, this.m_dblJulian = 0, this.m_bGregorianCalendar = !1;
            }
            c.create = function(u, y, g, Ee) {
              var Ve = new c();
              return Ve.set(u, y, g, 0, 0, 0, Ee), Ve;
            }, c.createHMS = function(u, y, g, Ee, Ve, Me, B) {
              var Pe = new c();
              return Pe.set(u, y, g, Ee, Ve, Me, B), Pe;
            }, c.createJD = function(u, y) {
              var g = new c();
              return g.setJD(u, y), g;
            }, c.dateToJD = function(u, y, g, Ee) {
              var Ve = u, Me = y;
              Me < 3 && (Ve = Ve - 1, Me = Me + 12);
              var B = 0, Pe = 0;
              return Ee && (B = s.ss.truncate(Ve / 100), Pe = 2 - B + s.ss.truncate(B / 4)), s.ss.truncate(365.25 * (Ve + 4716)) + s.ss.truncate(30.6001 * (Me + 1)) + g + Pe - 1524.5;
            }, c.isLeap = function(u, y) {
              return y ? u % 100 ? !(u % 4) : !(u % 400) : !(u % 4);
            }, c.afterPapalReform = function(u, y, g) {
              return u > 1582 || u === 1582 && y > 10 || u === 1582 && y === 10 && g >= 15;
            }, c.afterPapalReformJD = function(u) {
              return u >= 22991605e-1;
            }, c.dayOfYearJD = function(u, y, g) {
              return u - c.dateToJD(y, 1, 1, g) + 1;
            }, c.daysInMonthForMonth = function(u, y) {
              console.assert(u >= 1 && u <= 12);
              var g = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 0];
              return y && g[1]++, g[u - 1];
            }, c.INT = function(u) {
              return u >= 0 ? s.ss.truncate(u) : s.ss.truncate(u - 1);
            };
            var _ = {
              julian: function() {
                return this.m_dblJulian;
              },
              day: function() {
                var u = this.get();
                return s.ss.truncate(u[2]);
              },
              month: function() {
                var u = this.get();
                return s.ss.truncate(u[1]);
              },
              year: function() {
                var u = this.get();
                return s.ss.truncate(u[0]);
              },
              hour: function() {
                var u = this.get();
                return s.ss.truncate(u[3]);
              },
              minute: function() {
                var u = this.get();
                return s.ss.truncate(u[4]);
              },
              second: function() {
                var u = this.get();
                return s.ss.truncate(u[5]);
              },
              set: function(u, y, g, Ee, Ve, Me, B) {
                var Pe = g + Ee / 24 + Ve / 1440 + Me / 86400;
                this.setJD(c.dateToJD(u, y, Pe, B), B);
              },
              setJD: function(u, y) {
                this.m_dblJulian = u, this.setInGregorianCalendar(y);
              },
              setInGregorianCalendar: function(u) {
                var y = this.m_dblJulian >= 22991605e-1;
                this.m_bGregorianCalendar = u && y;
              },
              get: function() {
                var u, y, g, Ee, Ve, Me, B = this.m_dblJulian + 0.5, Pe = Math.floor(B), k = B - Pe, b = s.ss.truncate(Pe), Le;
                if (this.m_bGregorianCalendar) {
                  var xe = s.ss.truncate((b - 186721625e-2) / 36524.25);
                  Le = b + 1 + xe - s.ss.truncate(xe / 4);
                } else
                  Le = b;
                var ze = Le + 1524, Se = s.ss.truncate((ze - 122.1) / 365.25), Te = s.ss.truncate(365.25 * Se), D = s.ss.truncate((ze - Te) / 30.6001), ke = ze - Te - s.ss.truncate(30.6001 * D) + k;
                return g = s.ss.truncate(ke), D < 14 ? y = D - 1 : y = D - 13, y > 2 ? u = Se - 4716 : u = Se - 4715, Pe = Math.floor(ke), k = ke - Pe, Ee = s.ss.truncate(k * 24), Ve = s.ss.truncate((k - Ee / 24) * 1440), Me = (k - Ee / 24 - Ve / 1440) * 86400, [u, y, g, Ee, Ve, Me];
              },
              dayOfWeek: function() {
                return s.ss.truncate(this.m_dblJulian + 1.5) % 7;
              },
              dayOfYear: function() {
                var u = s.ss.truncate(this.get()[0]);
                return c.dayOfYearJD(this.m_dblJulian, u, c.afterPapalReform(u, 1, 1));
              },
              daysInMonth: function() {
                var u = this.get(), y = s.ss.truncate(u[0]), g = s.ss.truncate(u[1]);
                return c.daysInMonthForMonth(g, c.isLeap(y, this.m_bGregorianCalendar));
              },
              daysInYear: function() {
                var u = this.get(), y = s.ss.truncate(u[0]);
                return c.isLeap(y, this.m_bGregorianCalendar) ? 366 : 365;
              },
              leap: function() {
                return c.isLeap(this.year(), this.m_bGregorianCalendar);
              },
              inGregorianCalendar: function() {
                return this.m_bGregorianCalendar;
              },
              fractionalYear: function() {
                var u = this.get(), y = s.ss.truncate(u[0]);
                s.ss.truncate(u[1]), s.ss.truncate(u[2]), s.ss.truncate(u[3]), s.ss.truncate(u[4]), u[5];
                var g;
                return c.isLeap(y, this.m_bGregorianCalendar) ? g = 366 : g = 365, y + (this.m_dblJulian - c.dateToJD(y, 1, 1, c.afterPapalReform(y, 1, 1))) / g;
              }
            };
            (0, a.registerType)("DT", [c, _, null]);
          }
        ),
        /***/
        "./esm/astrocalc/dynamical_time.js": (
          /*!*****************************************!*\
            !*** ./esm/astrocalc/dynamical_time.js ***!
            \*****************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              DYT: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./date.js */
              "./esm/astrocalc/date.js"
            );
            const l = [121, 112, 103, 95, 88, 82, 77, 72, 68, 63, 60, 56, 53, 51, 48, 46, 44, 42, 40, 38, 35, 33, 31, 29, 26, 24, 22, 20, 18, 16, 14, 12, 11, 10, 9, 8, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 14, 13, 13.1, 12.5, 12.2, 12, 12, 12, 12, 12, 12, 11.9, 11.6, 11, 10.2, 9.2, 8.2, 7.1, 6.2, 5.6, 5.4, 5.3, 5.4, 5.6, 5.9, 6.2, 6.5, 6.8, 7.1, 7.3, 7.5, 7.6, 7.7, 7.3, 6.2, 5.2, 2.7, 1.4, -1.2, -2.8, -3.8, -4.8, -5.5, -5.3, -5.6, -5.7, -5.9, -6, -6.3, -6.5, -6.2, -4.7, -2.8, -0.1, 2.6, 5.3, 7.7, 10.4, 13.3, 16, 18.2, 20.2, 21.2, 22.4, 23.5, 23.8, 24.3, 24, 23.9, 23.9, 23.7, 24, 24.3, 25.3, 26.2, 27.3, 28.2, 29.1, 30, 30.7, 31.4, 32.2, 33.1, 34, 35, 36.5, 38.3, 40.18, 42.2, 44.5, 46.5, 48.5, 50.54, 52.2, 53.8, 54.9, 55.8, 56.86, 58.31, 59.99, 61.63, 62.97];
            function o() {
            }
            o.deltaT = function(_) {
              var u = t.DT.createJD(_, t.DT.afterPapalReformJD(_)), y = u.fractionalYear(), g = (y - 2e3) / 100, Ee;
              if (y < 948)
                Ee = 2177 + 497 * g + 44.1 * g * g;
              else if (y < 1620)
                Ee = 102 + 102 * g + 25.3 * g * g;
              else if (y < 1998) {
                var Ve = a.ss.truncate((y - 1620) / 2);
                console.assert(Ve < l.length), y = y / 2 - Ve - 810, Ee = l[Ve] + (l[Ve + 1] - l[Ve]) * y;
              } else if (y <= 2e3) {
                var Me = l.length;
                Ee = l[Me - 1];
              } else
                y < 2100 ? Ee = 102 + 102 * g + 25.3 * g * g + 0.37 * (y - 2100) : Ee = 102 + 102 * g + 25.3 * g * g;
              return Ee;
            };
            var c = {};
            (0, s.registerType)("DYT", [o, c, null]);
          }
        ),
        /***/
        "./esm/astrocalc/earth.js": (
          /*!********************************!*\
            !*** ./esm/astrocalc/earth.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAEarth: () => (
                /* binding */
                $
              ),
              /* harmony export */
              VSC: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t(Re, Ie, O) {
              this.a = 0, this.b = 0, this.c = 0, this.a = Re, this.b = Ie, this.c = O;
            }
            var l = {};
            (0, s.registerType)("VSC", [t, l, null]);
            const o = [new t(175347046, 0, 0), new t(3341656, 4.6692568, 6283.07585), new t(34894, 4.6261, 12566.1517), new t(3497, 2.7441, 5753.3849), new t(3418, 2.8289, 3.5231), new t(3136, 3.6277, 77713.7715), new t(2676, 4.4181, 7860.4194), new t(2343, 6.1352, 3930.2097), new t(1324, 0.7425, 11506.7698), new t(1273, 2.0371, 529.691), new t(1199, 1.1096, 1577.3435), new t(990, 5.233, 5884.927), new t(902, 2.045, 26.298), new t(857, 3.508, 398.149), new t(780, 1.179, 5223.694), new t(753, 2.533, 5507.553), new t(505, 4.583, 18849.228), new t(492, 4.205, 775.523), new t(357, 2.92, 0.067), new t(317, 5.849, 11790.629), new t(284, 1.899, 796.288), new t(271, 0.315, 10977.079), new t(243, 0.345, 5486.778), new t(206, 4.806, 2544.314), new t(205, 1.869, 5573.143), new t(202, 2.458, 6069.777), new t(156, 0.833, 213.299), new t(132, 3.411, 2942.463), new t(126, 1.083, 20.775), new t(115, 0.645, 0.98), new t(103, 0.636, 4694.003), new t(102, 0.976, 15720.839), new t(102, 4.267, 7.114), new t(99, 6.21, 2146.17), new t(98, 0.68, 155.42), new t(86, 5.98, 161000.69), new t(85, 1.3, 6275.96), new t(85, 3.67, 71430.7), new t(80, 1.81, 17260.15), new t(79, 3.04, 12036.46), new t(75, 1.76, 5088.63), new t(74, 3.5, 3154.69), new t(74, 4.68, 801.82), new t(70, 0.83, 9437.76), new t(62, 3.98, 8827.39), new t(61, 1.82, 7084.9), new t(57, 2.78, 6286.6), new t(56, 4.39, 14143.5), new t(56, 3.47, 6279.55), new t(52, 0.19, 12139.55), new t(52, 1.33, 1748.02), new t(51, 0.28, 5856.48), new t(49, 0.49, 1194.45), new t(41, 5.37, 8429.24), new t(41, 2.4, 19651.05), new t(39, 6.17, 10447.39), new t(37, 6.04, 10213.29), new t(37, 2.57, 1059.38), new t(36, 1.71, 2352.87), new t(36, 1.78, 6812.77), new t(33, 0.59, 17789.85), new t(30, 0.44, 83996.85), new t(30, 2.74, 1349.87), new t(25, 3.16, 4690.48)], c = [new t(628331966747, 0, 0), new t(206059, 2.678235, 6283.07585), new t(4303, 2.6351, 12566.1517), new t(425, 1.59, 3.523), new t(119, 5.796, 26.298), new t(109, 2.966, 1577.344), new t(93, 2.59, 18849.23), new t(72, 1.14, 529.69), new t(68, 1.87, 398.15), new t(67, 4.41, 5507.55), new t(59, 2.89, 5223.69), new t(56, 2.17, 155.42), new t(45, 0.4, 796.3), new t(36, 0.47, 775.52), new t(29, 2.65, 7.11), new t(21, 5.43, 0.98), new t(19, 1.85, 5486.78), new t(19, 4.97, 213.3), new t(17, 2.99, 6275.96), new t(16, 0.03, 2544.31), new t(16, 1.43, 2146.17), new t(15, 1.21, 10977.08), new t(12, 2.83, 1748.02), new t(12, 3.26, 5088.63), new t(12, 5.27, 1194.45), new t(12, 2.08, 4694), new t(11, 0.77, 553.57), new t(10, 1.3, 6286.6), new t(10, 4.24, 1349.87), new t(9, 2.7, 242.73), new t(9, 5.64, 951.72), new t(8, 5.3, 2352.87), new t(6, 2.65, 9437.76), new t(6, 4.67, 4690.48)], _ = [new t(52919, 0, 0), new t(8720, 1.0721, 6283.0758), new t(309, 0.867, 12566.152), new t(27, 0.05, 3.52), new t(16, 5.19, 26.3), new t(16, 3.68, 155.42), new t(10, 0.76, 18849.23), new t(9, 2.06, 77713.77), new t(7, 0.83, 775.52), new t(5, 4.66, 1577.34), new t(4, 1.03, 7.11), new t(4, 3.44, 5573.14), new t(3, 5.14, 796.3), new t(3, 6.05, 5507.55), new t(3, 1.19, 242.73), new t(3, 6.12, 529.69), new t(3, 0.31, 398.15), new t(3, 2.28, 553.57), new t(2, 4.38, 5223.69), new t(2, 3.75, 0.98)], u = [new t(289, 5.844, 6283.076), new t(35, 0, 0), new t(17, 5.49, 12566.15), new t(3, 5.2, 155.42), new t(1, 4.72, 3.52), new t(1, 5.3, 18849.23), new t(1, 5.97, 242.73)], y = [new t(114, 3.142, 0), new t(8, 4.13, 6283.08), new t(1, 3.84, 12566.15)], g = [new t(1, 3.14, 0)], Ee = [new t(280, 3.199, 84334.662), new t(102, 5.422, 5507.553), new t(80, 3.88, 5223.69), new t(44, 3.7, 2352.87), new t(32, 4, 1577.34)], Ve = [new t(9, 3.9, 5507.55), new t(6, 1.73, 5223.69)], Me = [new t(22378, 3.38509, 10213.28555), new t(282, 0, 0), new t(173, 5.256, 20426.571), new t(27, 3.87, 30639.86)], B = [new t(647, 4.992, 10213.286), new t(20, 3.14, 0), new t(6, 0.77, 20426.57), new t(3, 5.44, 30639.86)], Pe = [new t(14, 0.32, 10213.29)], k = [new t(100013989, 0, 0), new t(1670700, 3.0984635, 6283.07585), new t(13956, 3.05525, 12566.1517), new t(3084, 5.1985, 77713.7715), new t(1628, 1.1739, 5753.3849), new t(1576, 2.8469, 7860.4194), new t(925, 5.453, 11506.77), new t(542, 4.564, 3930.21), new t(472, 3.661, 5884.927), new t(346, 0.964, 5507.553), new t(329, 5.9, 5223.694), new t(307, 0.299, 5573.143), new t(243, 4.273, 11790.629), new t(212, 5.847, 1577.344), new t(186, 5.022, 10977.079), new t(175, 3.012, 18849.228), new t(110, 5.055, 5486.778), new t(98, 0.89, 6069.78), new t(86, 5.69, 15720.84), new t(86, 1.27, 161000.69), new t(65, 0.27, 17260.15), new t(63, 0.92, 529.69), new t(57, 2.01, 83996.85), new t(56, 5.24, 71430.7), new t(49, 3.25, 2544.31), new t(47, 2.58, 775.52), new t(45, 5.54, 9437.76), new t(43, 6.01, 6275.96), new t(39, 5.36, 4694), new t(38, 2.39, 8827.39), new t(37, 0.83, 19651.05), new t(37, 4.9, 12139.55), new t(36, 1.67, 12036.46), new t(35, 1.84, 2942.46), new t(33, 0.24, 7084.9), new t(32, 0.18, 5088.63), new t(32, 1.78, 398.15), new t(28, 1.21, 6286.6), new t(28, 1.9, 6279.55), new t(26, 4.59, 10447.39)], b = [new t(103019, 1.10749, 6283.07585), new t(1721, 1.0644, 12566.1517), new t(702, 3.142, 0), new t(32, 1.02, 18849.23), new t(31, 2.84, 5507.55), new t(25, 1.32, 5223.69), new t(18, 1.42, 1577.34), new t(10, 5.91, 10977.08), new t(9, 1.42, 6275.96), new t(9, 0.27, 5486.78)], Le = [new t(4359, 5.7846, 6283.0758), new t(124, 5.579, 12566.152), new t(12, 3.14, 0), new t(9, 3.63, 77713.77), new t(6, 1.87, 5573.14), new t(3, 5.47, 18849.23)], xe = [new t(145, 4.273, 6283.076), new t(7, 3.92, 12566.15)], ze = [new t(4, 2.56, 6283.08)], Se = [new t(628307584999, 0, 0), new t(206059, 2.678235, 6283.07585), new t(4303, 2.6351, 12566.1517), new t(425, 1.59, 3.523), new t(119, 5.796, 26.298), new t(109, 2.966, 1577.344), new t(93, 2.59, 18849.23), new t(72, 1.14, 529.69), new t(68, 1.87, 398.15), new t(67, 4.41, 5507.55), new t(59, 2.89, 5223.69), new t(56, 2.17, 155.42), new t(45, 0.4, 796.3), new t(36, 0.47, 775.52), new t(29, 2.65, 7.11), new t(21, 5.43, 0.98), new t(19, 1.85, 5486.78), new t(19, 4.97, 213.3), new t(17, 2.99, 6275.96), new t(16, 0.03, 2544.31), new t(16, 1.43, 2146.17), new t(15, 1.21, 10977.08), new t(12, 2.83, 1748.02), new t(12, 3.26, 5088.63), new t(12, 5.27, 1194.45), new t(12, 2.08, 4694), new t(11, 0.77, 553.57), new t(10, 1.3, 6286.6), new t(10, 4.24, 1349.87), new t(9, 2.7, 242.73), new t(9, 5.64, 951.72), new t(8, 5.3, 2352.87), new t(6, 2.65, 9437.76), new t(6, 4.67, 4690.48)], Te = [new t(8722, 1.0725, 6283.0758), new t(991, 3.1416, 0), new t(295, 0.437, 12566.152), new t(27, 0.05, 3.52), new t(16, 5.19, 26.3), new t(16, 3.69, 155.42), new t(9, 0.3, 18849.23), new t(9, 2.06, 77713.77), new t(7, 0.83, 775.52), new t(5, 4.66, 1577.34), new t(4, 1.03, 7.11), new t(4, 3.44, 5573.14), new t(3, 5.14, 796.3), new t(3, 6.05, 5507.55), new t(3, 1.19, 242.73), new t(3, 6.12, 529.69), new t(3, 0.3, 398.15), new t(3, 2.28, 553.57), new t(2, 4.38, 5223.69), new t(2, 3.75, 0.98)], D = [new t(289, 5.842, 6283.076), new t(21, 6.05, 12566.15), new t(3, 5.2, 155.42), new t(3, 3.14, 0), new t(1, 4.72, 3.52), new t(1, 5.97, 242.73), new t(1, 5.54, 18849.23)], ke = [new t(8, 4.14, 6283.08), new t(1, 3.28, 12566.15)], Fe = [new t(227778, 3.413766, 6283.07585), new t(3806, 3.3706, 12566.1517), new t(3620, 0, 0), new t(72, 3.33, 18849.23), new t(8, 3.89, 5507.55), new t(8, 1.79, 5223.69), new t(6, 5.2, 2352.87)], He = [new t(9721, 5.1519, 6283.07585), new t(233, 3.1416, 0), new t(134, 0.644, 12566.152), new t(7, 1.07, 18849.23)], We = [new t(276, 0.595, 6283.076), new t(17, 3.14, 0), new t(4, 0.12, 12566.15)], Ke = [new t(6, 2.27, 6283.08), new t(1, 0, 0)];
            function $() {
            }
            $.eclipticLongitude = function(Re) {
              var Ie = (Re - 2451545) / 365250, O = Ie * Ie, Ue = O * Ie, $e = Ue * Ie, Ze = $e * Ie, Qe = o.length, Ae = 0, Ne;
              for (Ne = 0; Ne < Qe; Ne++)
                Ae += o[Ne].a * Math.cos(o[Ne].b + o[Ne].c * Ie);
              var Be = c.length, Ge = 0;
              for (Ne = 0; Ne < Be; Ne++)
                Ge += c[Ne].a * Math.cos(c[Ne].b + c[Ne].c * Ie);
              var Ye = _.length, je = 0;
              for (Ne = 0; Ne < Ye; Ne++)
                je += _[Ne].a * Math.cos(_[Ne].b + _[Ne].c * Ie);
              var ht = u.length, qe = 0;
              for (Ne = 0; Ne < ht; Ne++)
                qe += u[Ne].a * Math.cos(u[Ne].b + u[Ne].c * Ie);
              var lt = y.length, ft = 0;
              for (Ne = 0; Ne < lt; Ne++)
                ft += y[Ne].a * Math.cos(y[Ne].b + y[Ne].c * Ie);
              var _t = g.length, St = 0;
              for (Ne = 0; Ne < _t; Ne++)
                St += g[Ne].a * Math.cos(g[Ne].b + g[Ne].c * Ie);
              var yt = (Ae + Ge * Ie + je * O + qe * Ue + ft * $e + St * Ze) / 1e8;
              return yt = a.CT.m360(a.CT.r2D(yt)), yt;
            }, $.eclipticLatitude = function(Re) {
              var Ie = (Re - 2451545) / 365250, O = Ie * Ie, Ue = O * Ie, $e = Ue * Ie, Ze = Ee.length, Qe = 0, Ae;
              for (Ae = 0; Ae < Ze; Ae++)
                Qe += Ee[Ae].a * Math.cos(Ee[Ae].b + Ee[Ae].c * Ie);
              var Ne = Ve.length, Be = 0;
              for (Ae = 0; Ae < Ne; Ae++)
                Be += Ve[Ae].a * Math.cos(Ve[Ae].b + Ve[Ae].c * Ie);
              var Ge = Me.length, Ye = 0;
              for (Ae = 0; Ae < Ge; Ae++)
                Ye += Me[Ae].a * Math.cos(Me[Ae].b + Me[Ae].c * Ie);
              var je = B.length, ht = 0;
              for (Ae = 0; Ae < je; Ae++)
                ht += B[Ae].a * Math.cos(B[Ae].b + B[Ae].c * Ie);
              var qe = Pe.length, lt = 0;
              for (Ae = 0; Ae < qe; Ae++)
                lt += Pe[Ae].a * Math.cos(Pe[Ae].b + Pe[Ae].c * Ie);
              var ft = (Qe + Be * Ie + Ye * O + ht * Ue + lt * $e) / 1e8;
              return ft = a.CT.r2D(ft), ft;
            }, $.radiusVector = function(Re) {
              var Ie = (Re - 2451545) / 365250, O = Ie * Ie, Ue = O * Ie, $e = Ue * Ie, Ze = k.length, Qe = 0, Ae;
              for (Ae = 0; Ae < Ze; Ae++)
                Qe += k[Ae].a * Math.cos(k[Ae].b + k[Ae].c * Ie);
              var Ne = b.length, Be = 0;
              for (Ae = 0; Ae < Ne; Ae++)
                Be += b[Ae].a * Math.cos(b[Ae].b + b[Ae].c * Ie);
              var Ge = Le.length, Ye = 0;
              for (Ae = 0; Ae < Ge; Ae++)
                Ye += Le[Ae].a * Math.cos(Le[Ae].b + Le[Ae].c * Ie);
              var je = xe.length, ht = 0;
              for (Ae = 0; Ae < je; Ae++)
                ht += xe[Ae].a * Math.cos(xe[Ae].b + xe[Ae].c * Ie);
              var qe = ze.length, lt = 0;
              for (Ae = 0; Ae < qe; Ae++)
                lt += ze[Ae].a * Math.cos(ze[Ae].b + ze[Ae].c * Ie);
              return (Qe + Be * Ie + Ye * O + ht * Ue + lt * $e) / 1e8;
            }, $.sunMeanAnomaly = function(Re) {
              var Ie = (Re - 2451545) / 36525, O = Ie * Ie, Ue = O * Ie;
              return a.CT.m360(357.5291092 + 35999.0502909 * Ie - 1536e-7 * O + Ue / 2449e4);
            }, $.eccentricity = function(Re) {
              var Ie = (Re - 2451545) / 36525, O = Ie * Ie;
              return 1 - 2516e-6 * Ie - 74e-7 * O;
            }, $.eclipticLongitudeJ2000 = function(Re) {
              var Ie = (Re - 2451545) / 365250, O = Ie * Ie, Ue = O * Ie, $e = Ue * Ie, Ze = o.length, Qe = 0, Ae;
              for (Ae = 0; Ae < Ze; Ae++)
                Qe += o[Ae].a * Math.cos(o[Ae].b + o[Ae].c * Ie);
              var Ne = Se.length, Be = 0;
              for (Ae = 0; Ae < Ne; Ae++)
                Be += Se[Ae].a * Math.cos(Se[Ae].b + Se[Ae].c * Ie);
              var Ge = Te.length, Ye = 0;
              for (Ae = 0; Ae < Ge; Ae++)
                Ye += Te[Ae].a * Math.cos(Te[Ae].b + Te[Ae].c * Ie);
              var je = D.length, ht = 0;
              for (Ae = 0; Ae < je; Ae++)
                ht += D[Ae].a * Math.cos(D[Ae].b + D[Ae].c * Ie);
              var qe = ke.length, lt = 0;
              for (Ae = 0; Ae < qe; Ae++)
                lt += ke[Ae].a * Math.cos(ke[Ae].b + ke[Ae].c * Ie);
              var ft = (Qe + Be * Ie + Ye * O + ht * Ue + lt * $e) / 1e8;
              return ft = a.CT.m360(a.CT.r2D(ft)), ft;
            }, $.eclipticLatitudeJ2000 = function(Re) {
              var Ie = (Re - 2451545) / 365250, O = Ie * Ie, Ue = O * Ie, $e = Ue * Ie, Ze = Ee.length, Qe = 0, Ae;
              for (Ae = 0; Ae < Ze; Ae++)
                Qe += Ee[Ae].a * Math.cos(Ee[Ae].b + Ee[Ae].c * Ie);
              var Ne = Fe.length, Be = 0;
              for (Ae = 0; Ae < Ne; Ae++)
                Be += Fe[Ae].a * Math.cos(Fe[Ae].b + Fe[Ae].c * Ie);
              var Ge = He.length, Ye = 0;
              for (Ae = 0; Ae < Ge; Ae++)
                Ye += He[Ae].a * Math.cos(He[Ae].b + He[Ae].c * Ie);
              var je = We.length, ht = 0;
              for (Ae = 0; Ae < je; Ae++)
                ht += We[Ae].a * Math.cos(We[Ae].b + We[Ae].c * Ie);
              var qe = Ke.length, lt = 0;
              for (Ae = 0; Ae < qe; Ae++)
                lt += Ke[Ae].a * Math.cos(Ke[Ae].b + Ke[Ae].c * Ie);
              var ft = (Qe + Be * Ie + Ye * O + ht * Ue + lt * $e) / 1e8;
              return ft = a.CT.r2D(ft), ft;
            };
            var De = {};
            (0, s.registerType)("CAAEarth", [$, De, null]);
          }
        ),
        /***/
        "./esm/astrocalc/ecliptical_elements.js": (
          /*!**********************************************!*\
            !*** ./esm/astrocalc/ecliptical_elements.js ***!
            \**********************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAEclipticalElementDetails: () => (
                /* binding */
                t
              ),
              /* harmony export */
              CAAEclipticalElements: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t() {
              this.i = 0, this.w = 0, this.omega = 0, this.i = 0, this.w = 0, this.omega = 0;
            }
            var l = {};
            (0, s.registerType)("CAAEclipticalElementDetails", [t, l, null]);
            function o() {
            }
            o.calculate = function(_, u, y, g, Ee) {
              var Ve = (g - 2451545) / 36525, Me = Ve * Ve, B = (Ee - g) / 36525, Pe = B * B, k = Pe * B, b = a.CT.d2R(_), Le = a.CT.d2R(y), xe = (47.0029 - 0.06603 * Ve + 598e-6 * Me) * B + (-0.03302 + 598e-6 * Ve) * Pe + 6e-5 * k;
              xe = a.CT.d2R(a.CT.dmS2D(0, 0, xe));
              var ze = 174.876384 * 3600 + 3289.4789 * Ve + 0.60622 * Me - (869.8089 + 0.50491 * Ve) * B + 0.03536 * Pe;
              ze = a.CT.d2R(a.CT.dmS2D(0, 0, ze));
              var Se = (5029.0966 + 2.22226 * Ve - 42e-6 * Me) * B + (1.11113 - 42e-6 * Ve) * Pe - 6e-6 * k;
              Se = a.CT.d2R(a.CT.dmS2D(0, 0, Se));
              var Te = Math.sin(b), D = Math.cos(b), ke = Math.sin(Le - ze), Fe = Math.cos(Le - ze), He = Math.sin(xe), We = Math.cos(xe), Ke = Te * ke, $ = -He * D + We * Te * Fe, De = Math.asin(Math.sqrt(Ke * Ke + $ * $)), Re = new t();
              Re.i = a.CT.r2D(De);
              var Ie = D * We + Te * He * Fe;
              Ie < 0 && (Re.i = 180 - Re.i);
              var O = ze + Se;
              Re.omega = a.CT.m360(a.CT.r2D(Math.atan2(Ke, $) + O)), Ke = -He * ke, $ = Te * We - D * He * Fe;
              var Ue = a.CT.r2D(Math.atan2(Ke, $));
              return Re.w = a.CT.m360(u + Ue), Re;
            }, o.fK4B1950ToFK5J2000 = function(_, u, y) {
              var g = a.CT.d2R(5.19856209), Ee = a.CT.d2R(651966e-8), Ve = a.CT.d2R(_), Me = a.CT.d2R(y), B = Math.sin(Ve), Pe = Math.cos(Ve), k = Math.cos(Ee), b = Math.sin(Ee), Le = g + Me, xe = Math.cos(Le), ze = Math.sin(Le), Se = b * ze, Te = B * k + Pe * b * xe, D = new t();
              D.i = a.CT.r2D(Math.asin(Math.sqrt(Se * Se + Te * Te)));
              var ke = Pe * k - B * b * xe;
              return ke < 0 && (D.i = 180 - D.i), D.w = a.CT.m360(u + a.CT.r2D(Math.atan2(Se, Te))), D.omega = a.CT.m360(a.CT.r2D(Math.atan2(B * ze, Pe * b + B * k * xe)) - 4.50001688), D;
            };
            var c = {};
            (0, s.registerType)("CAAEclipticalElements", [o, c, null]);
          }
        ),
        /***/
        "./esm/astrocalc/elements_planetary_orbit.js": (
          /*!***************************************************!*\
            !*** ./esm/astrocalc/elements_planetary_orbit.js ***!
            \***************************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              EPO: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t() {
            }
            t.mercuryMeanLongitude = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(252.250906 + 149474.0722491 * c + 3035e-7 * _ + 18e-9 * u);
            }, t.mercurySemimajorAxis = function(o) {
              return 0.38709831;
            }, t.mercuryEccentricity = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return 0.20563175 + 20407e-9 * c - 283e-10 * _ - 18e-11 * u;
            }, t.mercuryInclination = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(7.004986 + 18215e-7 * c - 181e-7 * _ + 56e-9 * u);
            }, t.mercuryLongitudeAscendingNode = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(48.330893 + 1.1861883 * c + 17542e-8 * _ + 215e-9 * u);
            }, t.mercuryLongitudePerihelion = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(77.456119 + 1.5564776 * c + 29544e-8 * _ + 9e-9 * u);
            }, t.venusMeanLongitude = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(181.979801 + 58519.2130302 * c + 31014e-8 * _ + 15e-9 * u);
            }, t.venusSemimajorAxis = function(o) {
              return 0.72332982;
            }, t.venusEccentricity = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return 677192e-8 - 47765e-9 * c + 981e-10 * _ + 46e-11 * u;
            }, t.venusInclination = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(3.394662 + 10037e-7 * c - 88e-8 * _ - 7e-9 * u);
            }, t.venusLongitudeAscendingNode = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(76.67992 + 0.9011206 * c + 40618e-8 * _ - 93e-9 * u);
            }, t.venusLongitudePerihelion = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(131.563703 + 1.4022288 * c - 107618e-8 * _ - 5678e-9 * u);
            }, t.earthMeanLongitude = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(100.466457 + 36000.7698278 * c + 30322e-8 * _ + 2e-8 * u);
            }, t.earthSemimajorAxis = function(o) {
              return 1.000001018;
            }, t.earthEccentricity = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return 0.01670863 - 42037e-9 * c - 1267e-10 * _ + 14e-11 * u;
            }, t.earthInclination = function(o) {
              return 0;
            }, t.earthLongitudePerihelion = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(102.937348 + 1.17195366 * c + 45688e-8 * _ - 18e-9 * u);
            }, t.marsMeanLongitude = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(355.433 + 19141.6964471 * c + 31052e-8 * _ + 16e-9 * u);
            }, t.marsSemimajorAxis = function(o) {
              return 1.523679342;
            }, t.marsEccentricity = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return 0.09340065 + 90484e-9 * c - 806e-10 * _ - 25e-11 * u;
            }, t.marsInclination = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(1.849726 - 6011e-7 * c + 1276e-8 * _ - 7e-9 * u);
            }, t.marsLongitudeAscendingNode = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(49.588093 + 0.7720959 * c + 1557e-8 * _ + 2267e-9 * u);
            }, t.marsLongitudePerihelion = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(336.060234 + 1.8410449 * c + 13477e-8 * _ + 536e-9 * u);
            }, t.jupiterMeanLongitude = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(34.351519 + 3036.3027748 * c + 2233e-7 * _ + 37e-9 * u);
            }, t.jupiterSemimajorAxis = function(o) {
              var c = (o - 2451545) / 36525;
              return 5.202603209 + 1913e-10 * c;
            }, t.jupiterEccentricity = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return 0.04849793 + 163225e-9 * c - 4714e-10 * _ - 201e-11 * u;
            }, t.jupiterInclination = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(1.303267 - 54965e-7 * c + 466e-8 * _ - 2e-9 * u);
            }, t.jupiterLongitudeAscendingNode = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(100.464407 + 1.0209774 * c + 40315e-8 * _ + 404e-9 * u);
            }, t.jupiterLongitudePerihelion = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(14.331207 + 1.6126352 * c + 103042e-8 * _ - 4464e-9 * u);
            }, t.saturnMeanLongitude = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(50.077444 + 1223.5110686 * c + 51908e-8 * _ - 3e-8 * u);
            }, t.saturnSemimajorAxis = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c;
              return 9.554909192 - 2139e-9 * c + 4e-9 * _;
            }, t.saturnEccentricity = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return 0.05554814 - 3446641e-10 * c - 6436e-10 * _ + 34e-10 * u;
            }, t.saturnInclination = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(2.488879 - 37362e-7 * c - 1519e-8 * _ + 87e-9 * u);
            }, t.saturnLongitudeAscendingNode = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(113.665503 + 0.877088 * c - 12176e-8 * _ - 2249e-9 * u);
            }, t.saturnLongitudePerihelion = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(93.057237 + 1.19637613 * c + 83753e-8 * _ + 4928e-9 * u);
            }, t.uranusMeanLongitude = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(314.055005 + 429.8640561 * c + 3039e-7 * _ + 26e-9 * u);
            }, t.uranusSemimajorAxis = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c;
              return 19.218446062 - 372e-10 * c + 98e-11 * _;
            }, t.uranusEccentricity = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return 0.04638122 - 27293e-9 * c + 789e-10 * _ + 24e-11 * u;
            }, t.uranusInclination = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(0.773197 + 7744e-7 * c + 3749e-8 * _ - 92e-9 * u);
            }, t.uranusLongitudeAscendingNode = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(74.005957 + 0.5211278 * c + 133947e-8 * _ + 18484e-9 * u);
            }, t.uranusLongitudePerihelion = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(173.005291 + 1.486379 * c + 21406e-8 * _ + 434e-9 * u);
            }, t.neptuneMeanLongitude = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(304.348665 + 219.8833092 * c + 30882e-8 * _ + 18e-9 * u);
            }, t.neptuneSemimajorAxis = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c;
              return 30.110386869 - 1663e-10 * c + 69e-11 * _;
            }, t.neptuneEccentricity = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c * c;
              return 945575e-8 + 6033e-9 * c - 5e-11 * _;
            }, t.neptuneInclination = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(1.769953 - 93082e-7 * c - 708e-8 * _ + 27e-9 * u);
            }, t.neptuneLongitudeAscendingNode = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(131.784057 + 1.1022039 * c + 25952e-8 * _ - 637e-9 * u);
            }, t.neptuneLongitudePerihelion = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(48.120276 + 1.4262957 * c + 38434e-8 * _ + 2e-8 * u);
            }, t.mercuryMeanLongitudeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(252.250906 + 149472.6746358 * c - 536e-8 * _ + 2e-9 * u);
            }, t.mercuryInclinationJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(7.004986 - 59516e-7 * c + 8e-7 * _ + 43e-9 * u);
            }, t.mercuryLongitudeAscendingNodeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(48.330893 - 0.1254227 * c - 8833e-8 * _ - 2e-7 * u);
            }, t.mercuryLongitudePerihelionJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(77.456119 + 0.1588643 * c - 1342e-8 * _ - 7e-9 * u);
            }, t.venusMeanLongitudeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(181.979801 + 58517.815676 * c + 165e-8 * _ - 2e-9 * u);
            }, t.venusInclinationJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(3.394662 - 8568e-7 * c - 3244e-8 * _ + 9e-9 * u);
            }, t.venusLongitudeAscendingNodeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(76.67992 - 0.2780134 * c - 14257e-8 * _ - 164e-9 * u);
            }, t.venusLongitudePerihelionJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(131.563703 + 48746e-7 * c - 138467e-8 * _ - 5695e-9 * u);
            }, t.earthMeanLongitudeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(100.466457 + 35999.3728565 * c - 568e-8 * _ - 1e-9 * u);
            }, t.earthInclinationJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return 0.0130548 * c - 931e-8 * _ - 34e-9 * u;
            }, t.earthLongitudeAscendingNodeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(174.873176 - 0.241098 * c + 4262e-8 * _ + 1e-9 * u);
            }, t.earthLongitudePerihelionJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(102.937348 + 0.3225654 * c + 14799e-8 * _ - 39e-9 * u);
            }, t.marsMeanLongitudeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(355.433 + 19140.2993039 * c + 262e-8 * _ - 3e-9 * u);
            }, t.marsInclinationJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(1.849726 - 81477e-7 * c - 2255e-8 * _ - 29e-9 * u);
            }, t.marsLongitudeAscendingNodeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(49.588093 - 0.295025 * c - 64048e-8 * _ - 1964e-9 * u);
            }, t.marsLongitudePerihelionJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(336.060234 + 0.4439016 * c - 17313e-8 * _ + 518e-9 * u);
            }, t.jupiterMeanLongitudeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(34.351519 + 3034.9056606 * c - 8501e-8 * _ + 16e-9 * u);
            }, t.jupiterInclinationJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(1.303267 - 19877e-7 * c + 332e-7 * _ + 97e-9 * u);
            }, t.jupiterLongitudeAscendingNodeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(100.464407 + 0.1767232 * c + 907e-6 * _ - 7272e-9 * u);
            }, t.jupiterLongitudePerihelionJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(14.331207 + 0.2155209 * c + 72211e-8 * _ - 4485e-9 * u);
            }, t.saturnMeanLongitudeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(50.077444 + 1222.1138488 * c + 21004e-8 * _ - 46e-9 * u);
            }, t.saturnInclinationJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(2.488879 + 25514e-7 * c - 4906e-8 * _ + 17e-9 * u);
            }, t.saturnLongitudeAscendingNodeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(113.665503 - 0.2566722 * c - 18399e-8 * _ + 48e-8 * u);
            }, t.saturnLongitudePerihelionJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(93.057237 + 0.5665415 * c + 5285e-7 * _ + 4912e-9 * u);
            }, t.uranusMeanLongitudeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(314.055005 + 428.4669983 * c - 486e-8 * _ + 6e-9 * u);
            }, t.uranusInclinationJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(0.773197 - 16869e-7 * c + 349e-8 * _ + 16e-9 * u);
            }, t.uranusLongitudeAscendingNodeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(74.005957 + 0.0741431 * c + 40539e-8 * _ + 119e-9 * u);
            }, t.uranusLongitudePerihelionJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(173.005291 + 0.0893212 * c - 947e-7 * _ + 414e-9 * u);
            }, t.neptuneMeanLongitudeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(304.348665 + 218.4862002 * c + 59e-8 * _ - 2e-9 * u);
            }, t.neptuneInclinationJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c;
              return a.CT.m360(1.769953 + 2256e-7 * c + 23e-8 * _);
            }, t.neptuneLongitudeAscendingNodeJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c, u = _ * c;
              return a.CT.m360(131.784057 - 61651e-7 * c - 219e-8 * _ - 78e-9 * u);
            }, t.neptuneLongitudePerihelionJ2000 = function(o) {
              var c = (o - 2451545) / 36525, _ = c * c;
              return a.CT.m360(48.120276 + 0.0291866 * c + 761e-7 * _);
            };
            var l = {};
            (0, s.registerType)("EPO", [t, l, null]);
          }
        ),
        /***/
        "./esm/astrocalc/elliptical.js": (
          /*!*************************************!*\
            !*** ./esm/astrocalc/elliptical.js ***!
            \*************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ELL: () => (
                /* binding */
                He
              ),
              /* harmony export */
              EO: () => (
                /* binding */
                Fe
              ),
              /* harmony export */
              EOD: () => (
                /* binding */
                D
              ),
              /* harmony export */
              EOE: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              EPD: () => (
                /* binding */
                Se
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), t = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), l = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            ), o = n(
              /*! ./fk5.js */
              "./esm/astrocalc/fk5.js"
            ), c = n(
              /*! ./nutation.js */
              "./esm/astrocalc/nutation.js"
            ), _ = n(
              /*! ./sun.js */
              "./esm/astrocalc/sun.js"
            ), u = n(
              /*! ./mercury.js */
              "./esm/astrocalc/mercury.js"
            ), y = n(
              /*! ./venus.js */
              "./esm/astrocalc/venus.js"
            ), g = n(
              /*! ./mars.js */
              "./esm/astrocalc/mars.js"
            ), Ee = n(
              /*! ./jupiter.js */
              "./esm/astrocalc/jupiter.js"
            ), Ve = n(
              /*! ./saturn.js */
              "./esm/astrocalc/saturn.js"
            ), Me = n(
              /*! ./uranus.js */
              "./esm/astrocalc/uranus.js"
            ), B = n(
              /*! ./neptune.js */
              "./esm/astrocalc/neptune.js"
            ), Pe = n(
              /*! ./pluto.js */
              "./esm/astrocalc/pluto.js"
            ), k = n(
              /*! ./aberration.js */
              "./esm/astrocalc/aberration.js"
            ), b = n(
              /*! ./kepler.js */
              "./esm/astrocalc/kepler.js"
            ), Le = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            );
            function xe() {
              this.a = 0, this.e = 0, this.i = 0, this.w = 0, this.omega = 0, this.jdEquinox = 0, this.t = 0, this.n = 0, this.meanAnnomolyOut = 0, this.a = 0, this.e = 0, this.i = 0, this.w = 0, this.omega = 0, this.jdEquinox = 0, this.t = 0;
            }
            xe._create = function(Ke) {
              var $ = new xe();
              return $.a = Ke.readSingle(), $.e = Ke.readSingle(), $.i = Ke.readSingle(), $.w = Ke.readSingle(), $.omega = Ke.readSingle(), $.jdEquinox = Ke.readSingle(), $.t = Ke.readSingle(), $;
            };
            var ze = {};
            (0, s.registerType)("EOE", [xe, ze, null]);
            function Se() {
              this.apparentGeocentricLongitude = 0, this.apparentGeocentricLatitude = 0, this.apparentGeocentricDistance = 0, this.apparentLightTime = 0, this.apparentGeocentricRA = 0, this.apparentGeocentricDeclination = 0, this.apparentGeocentricLongitude = 0, this.apparentGeocentricLatitude = 0, this.apparentGeocentricDistance = 0, this.apparentLightTime = 0, this.apparentGeocentricRA = 0, this.apparentGeocentricDeclination = 0;
            }
            var Te = {};
            (0, s.registerType)("EPD", [Se, Te, null]);
            function D() {
              this.heliocentricRectangularEquatorial = new t.C3D(), this.heliocentricRectangularEcliptical = new t.C3D(), this.heliocentricEclipticLongitude = 0, this.heliocentricEclipticLatitude = 0, this.trueGeocentricRA = 0, this.trueGeocentricDeclination = 0, this.trueGeocentricDistance = 0, this.trueGeocentricLightTime = 0, this.astrometricGeocenticRA = 0, this.astrometricGeocentricDeclination = 0, this.astrometricGeocentricDistance = 0, this.astrometricGeocentricLightTime = 0, this.elongation = 0, this.phaseAngle = 0, this.heliocentricEclipticLongitude = 0, this.heliocentricEclipticLatitude = 0, this.trueGeocentricRA = 0, this.trueGeocentricDeclination = 0, this.trueGeocentricDistance = 0, this.trueGeocentricLightTime = 0, this.astrometricGeocenticRA = 0, this.astrometricGeocentricDeclination = 0, this.astrometricGeocentricDistance = 0, this.astrometricGeocentricLightTime = 0, this.elongation = 0, this.phaseAngle = 0;
            }
            var ke = {};
            (0, s.registerType)("EOD", [D, ke, null]);
            var Fe = {
              SUN: 0,
              MERCURY: 1,
              VENUS: 2,
              MARS: 3,
              JUPITER: 4,
              SATURN: 5,
              URANUS: 6,
              NEPTUNE: 7,
              PLUTO: 8
            };
            (0, s.registerType)("EO", Fe);
            function He() {
            }
            He.distanceToLightTime = function(Ke) {
              return Ke * 0.0057755183;
            }, He.calculate = function(Ke, $) {
              var De = new Se(), Re = Ke, Ie = 0, O = 0, Ue = 0, $e = 0;
              $ && (Ie = l.CAAEarth.eclipticLongitude(Re), O = l.CAAEarth.eclipticLatitude(Re), Ue = l.CAAEarth.radiusVector(Re), Ie = t.CT.d2R(Ie), O = t.CT.d2R(O), $e = Math.cos(O));
              for (var Ze = 0, Qe = 0, Ae = 0, Ne, Be, Ge, Ye, je, ht, qe, lt = !0, ft = !0, _t = 0, St = 0, yt = 0; lt; ) {
                switch ($) {
                  case 0:
                    Ze = _.CAASun.geometricEclipticLongitude(Re), Qe = _.CAASun.geometricEclipticLatitude(Re), Ae = l.CAAEarth.radiusVector(Re);
                    break;
                  case 1:
                    Ze = u.CAAMercury.eclipticLongitude(Re), Qe = u.CAAMercury.eclipticLatitude(Re), Ae = u.CAAMercury.radiusVector(Re);
                    break;
                  case 2:
                    Ze = y.CAAVenus.eclipticLongitude(Re), Qe = y.CAAVenus.eclipticLatitude(Re), Ae = y.CAAVenus.radiusVector(Re);
                    break;
                  case 3:
                    Ze = g.CAAMars.eclipticLongitude(Re), Qe = g.CAAMars.eclipticLatitude(Re), Ae = g.CAAMars.radiusVector(Re);
                    break;
                  case 4:
                    Ze = Ee.CAAJupiter.eclipticLongitude(Re), Qe = Ee.CAAJupiter.eclipticLatitude(Re), Ae = Ee.CAAJupiter.radiusVector(Re);
                    break;
                  case 5:
                    Ze = Ve.CAASaturn.eclipticLongitude(Re), Qe = Ve.CAASaturn.eclipticLatitude(Re), Ae = Ve.CAASaturn.radiusVector(Re);
                    break;
                  case 6:
                    Ze = Me.CAAUranus.eclipticLongitude(Re), Qe = Me.CAAUranus.eclipticLatitude(Re), Ae = Me.CAAUranus.radiusVector(Re);
                    break;
                  case 7:
                    Ze = B.CAANeptune.eclipticLongitude(Re), Qe = B.CAANeptune.eclipticLatitude(Re), Ae = B.CAANeptune.radiusVector(Re);
                    break;
                  case 8:
                    Ze = Pe.CAAPluto.eclipticLongitude(Re), Qe = Pe.CAAPluto.eclipticLatitude(Re), Ae = Pe.CAAPluto.radiusVector(Re);
                    break;
                  default:
                    console.assert(!1);
                    break;
                }
                if (ft ? ft = !1 : (lt = Math.abs(Ze - _t) > 1e-5 || Math.abs(Qe - St) > 1e-5 || Math.abs(Ae - yt) > 1e-6, _t = Ze, St = Qe, yt = Ae), lt) {
                  var Ct = 0;
                  $ ? (Ne = t.CT.d2R(Ze), Be = t.CT.d2R(Qe), Ge = Math.cos(Be), Ye = Math.cos(Ne), je = Ae * Ge * Ye - Ue * $e * Math.cos(Ie), ht = Ae * Ge * Math.sin(Ne) - Ue * $e * Math.sin(Ie), qe = Ae * Math.sin(Be) - Ue * Math.sin(O), Ct = Math.sqrt(je * je + ht * ht + qe * qe)) : Ct = Ae, Re = Ke - He.distanceToLightTime(Ct);
                }
              }
              Ne = t.CT.d2R(Ze), Be = t.CT.d2R(Qe), Ge = Math.cos(Be), Ye = Math.cos(Ne), je = Ae * Ge * Ye - Ue * $e * Math.cos(Ie), ht = Ae * Ge * Math.sin(Ne) - Ue * $e * Math.sin(Ie), qe = Ae * Math.sin(Be) - Ue * Math.sin(O);
              var Lt = je * je, Vt = ht * ht;
              De.apparentGeocentricLatitude = t.CT.r2D(Math.atan2(qe, Math.sqrt(Lt + Vt))), De.apparentGeocentricDistance = Math.sqrt(Lt + Vt + qe * qe), De.apparentGeocentricLongitude = t.CT.m360(t.CT.r2D(Math.atan2(ht, je))), De.apparentLightTime = He.distanceToLightTime(De.apparentGeocentricDistance);
              var Tt = k.ABR.eclipticAberration(De.apparentGeocentricLongitude, De.apparentGeocentricLatitude, Ke);
              De.apparentGeocentricLongitude += Tt.x, De.apparentGeocentricLatitude += Tt.y;
              var xt = o.CAAFK5.correctionInLongitude(De.apparentGeocentricLongitude, De.apparentGeocentricLatitude, Ke);
              De.apparentGeocentricLatitude += o.CAAFK5.correctionInLatitude(De.apparentGeocentricLongitude, Ke), De.apparentGeocentricLongitude += xt;
              var Ot = c.CAANutation.nutationInLongitude(Ke), Pt = c.CAANutation.trueObliquityOfEcliptic(Ke);
              De.apparentGeocentricLongitude += t.CT.dmS2D(0, 0, Ot);
              var kt = t.CT.ec2Eq(De.apparentGeocentricLongitude, De.apparentGeocentricLatitude, Pt);
              return De.apparentGeocentricRA = kt.x, De.apparentGeocentricDeclination = kt.y, De;
            }, He.semiMajorAxisFromPerihelionDistance = function(Ke, $) {
              return Ke / (1 - $);
            }, He.meanMotionFromSemiMajorAxis = function(Ke) {
              return 0.9856076686 / (Ke * Math.sqrt(Ke));
            }, He.calculateRectangularJD = function(Ke, $) {
              var De = Ke, Re = t.CT.d2R($.omega), Ie = t.CT.d2R($.w), O = t.CT.d2R($.i), Ue = 0, $e = 1, Ze = Math.sin(Re), Qe = Math.cos(Re), Ae = Math.cos(O), Ne = Math.sin(O), Be = Qe, Ge = Ze * $e, Ye = Ze * Ue, je = -Ze * Ae, ht = Qe * Ae * $e - Ne * Ue, qe = Qe * Ae * Ue + Ne * $e, lt = Math.sqrt(Be * Be + je * je), ft = Math.sqrt(Ge * Ge + ht * ht), _t = Math.sqrt(Ye * Ye + qe * qe), St = Math.atan2(Be, je), yt = Math.atan2(Ge, ht), Ct = Math.atan2(Ye, qe), Lt = $.n * (De - $.t);
              $.meanAnnomolyOut = Lt;
              var Vt = b.CAAKepler.calculate(Lt, $.e);
              Vt = t.CT.d2R(Vt);
              var Tt = 2 * Math.atan(Math.sqrt((1 + $.e) / (1 - $.e)) * Math.tan(Vt / 2)), xt = $.a * (1 - $.e * Math.cos(Vt)), Ot = xt * lt * Math.sin(St + Ie + Tt), Pt = xt * ft * Math.sin(yt + Ie + Tt), kt = xt * _t * Math.sin(Ct + Ie + Tt);
              return Le.Vector3d.create(Ot, kt, Pt);
            }, He.calculateRectangular = function(Ke, $) {
              var De = t.CT.d2R(Ke.omega), Re = t.CT.d2R(Ke.w), Ie = t.CT.d2R(Ke.i), O = 0, Ue = 1, $e = Math.sin(De), Ze = Math.cos(De), Qe = Math.cos(Ie), Ae = Math.sin(Ie), Ne = Ze, Be = $e * Ue, Ge = $e * O, Ye = -$e * Qe, je = Ze * Qe * Ue - Ae * O, ht = Ze * Qe * O + Ae * Ue, qe = Math.sqrt(Ne * Ne + Ye * Ye), lt = Math.sqrt(Be * Be + je * je), ft = Math.sqrt(Ge * Ge + ht * ht), _t = Math.atan2(Ne, Ye), St = Math.atan2(Be, je), yt = Math.atan2(Ge, ht);
              Ke.n;
              var Ct = $, Lt = b.CAAKepler.calculate(Ct, Ke.e);
              Lt = t.CT.d2R(Lt);
              var Vt = 2 * Math.atan(Math.sqrt((1 + Ke.e) / (1 - Ke.e)) * Math.tan(Lt / 2)), Tt = Ke.a * (1 - Ke.e * Math.cos(Lt)), xt = Tt * qe * Math.sin(_t + Re + Vt), Ot = Tt * lt * Math.sin(St + Re + Vt), Pt = Tt * ft * Math.sin(yt + Re + Vt);
              return Le.Vector3d.create(xt, Pt, Ot);
            }, He.calculateElements = function(Ke, $) {
              var De = c.CAANutation.meanObliquityOfEcliptic($.jdEquinox), Re = Ke, Ie = new D();
              De = t.CT.d2R(De);
              for (var O = t.CT.d2R($.omega), Ue = t.CT.d2R($.w), $e = t.CT.d2R($.i), Ze = Math.sin(De), Qe = Math.cos(De), Ae = Math.sin(O), Ne = Math.cos(O), Be = Math.cos($e), Ge = Math.sin($e), Ye = Ne, je = Ae * Qe, ht = Ae * Ze, qe = -Ae * Be, lt = Ne * Be * Qe - Ge * Ze, ft = Ne * Be * Ze + Ge * Qe, _t = Math.sqrt(Ye * Ye + qe * qe), St = Math.sqrt(je * je + lt * lt), yt = Math.sqrt(ht * ht + ft * ft), Ct = Math.atan2(Ye, qe), Lt = Math.atan2(je, lt), Vt = Math.atan2(ht, ft), Tt = He.meanMotionFromSemiMajorAxis($.a), xt = _.CAASun.equatorialRectangularCoordinatesAnyEquinox(Ke, $.jdEquinox), Ot = 0; Ot < 2; Ot++) {
                var Pt = Tt * (Re - $.t), kt = b.CAAKepler.calculate(Pt, $.e);
                kt = t.CT.d2R(kt);
                var zt = 2 * Math.atan(Math.sqrt((1 + $.e) / (1 - $.e)) * Math.tan(kt / 2)), Bt = $.a * (1 - $.e * Math.cos(kt)), gt = Bt * _t * Math.sin(Ct + Ue + zt), rt = Bt * St * Math.sin(Lt + Ue + zt), nt = Bt * yt * Math.sin(Vt + Ue + zt);
                if (!Ot) {
                  Ie.heliocentricRectangularEquatorial.x = gt, Ie.heliocentricRectangularEquatorial.y = rt, Ie.heliocentricRectangularEquatorial.z = nt;
                  var bt = O + zt, Et = Math.cos(bt), Rt = Math.sin(bt);
                  Ie.heliocentricRectangularEcliptical.x = Bt * (Ne * Et - Ae * Rt * Be), Ie.heliocentricRectangularEcliptical.y = Bt * (Ae * Et + Ne * Rt * Be), Ie.heliocentricRectangularEcliptical.z = Bt * Ge * Rt, Ie.heliocentricEclipticLongitude = Math.atan2(rt, gt), Ie.heliocentricEclipticLongitude = t.CT.m24(t.CT.r2D(Ie.heliocentricEclipticLongitude) / 15), Ie.heliocentricEclipticLatitude = Math.asin(nt / Bt), Ie.heliocentricEclipticLatitude = t.CT.r2D(Ie.heliocentricEclipticLatitude);
                }
                var $t = xt.x + gt, pt = xt.y + rt, Ft = xt.z + nt, Nt = Math.atan2(pt, $t);
                Nt = t.CT.r2D(Nt);
                var Kt = Math.atan2(Ft, Math.sqrt($t * $t + pt * pt));
                Kt = t.CT.r2D(Kt);
                var At = Math.sqrt($t * $t + pt * pt + Ft * Ft);
                if (!Ot)
                  Ie.trueGeocentricRA = t.CT.m24(Nt / 15), Ie.trueGeocentricDeclination = Kt, Ie.trueGeocentricDistance = At, Ie.trueGeocentricLightTime = He.distanceToLightTime(At);
                else {
                  Ie.astrometricGeocenticRA = t.CT.m24(Nt / 15), Ie.astrometricGeocentricDeclination = Kt, Ie.astrometricGeocentricDistance = At, Ie.astrometricGeocentricLightTime = He.distanceToLightTime(At);
                  var Wt = Math.sqrt(xt.x * xt.x + xt.y * xt.y + xt.z * xt.z);
                  Ie.elongation = Math.acos((Wt * Wt + At * At - Bt * Bt) / (2 * Wt * At)), Ie.elongation = t.CT.r2D(Ie.elongation), Ie.phaseAngle = Math.acos((Bt * Bt + At * At - Wt * Wt) / (2 * Bt * At)), Ie.phaseAngle = t.CT.r2D(Ie.phaseAngle);
                }
                Ot || (Re = Ke - Ie.trueGeocentricLightTime);
              }
              return Ie;
            }, He.instantaneousVelocity = function(Ke, $) {
              return 42.1219 * Math.sqrt(1 / Ke - 1 / (2 * $));
            }, He.velocityAtPerihelion = function(Ke, $) {
              return 29.7847 / Math.sqrt($) * Math.sqrt((1 + Ke) / (1 - Ke));
            }, He.velocityAtAphelion = function(Ke, $) {
              return 29.7847 / Math.sqrt($) * Math.sqrt((1 - Ke) / (1 + Ke));
            }, He.lengthOfEllipse = function(Ke, $) {
              var De = $ * Math.sqrt(1 - Ke * Ke);
              return t.CT.PI() * (3 * ($ + De) - Math.sqrt(($ + 3 * De) * (3 * $ + De)));
            }, He.cometMagnitude = function(Ke, $, De, Re) {
              return Ke + 5 * a.Util.log10($) + De * a.Util.log10(Re);
            }, He.minorPlanetMagnitude = function(Ke, $, De, Re, Ie) {
              Ie = t.CT.d2R(Ie);
              var O = Math.exp(-3.33 * Math.pow(Math.tan(Ie / 2), 0.63)), Ue = Math.exp(-1.87 * Math.pow(Math.tan(Ie / 2), 1.22));
              return Ke + 5 * a.Util.log10(Re * $) - 2.5 * a.Util.log10((1 - De) * O + De * Ue);
            };
            var We = {};
            (0, s.registerType)("ELL", [He, We, null]);
          }
        ),
        /***/
        "./esm/astrocalc/equation_of_time.js": (
          /*!*******************************************!*\
            !*** ./esm/astrocalc/equation_of_time.js ***!
            \*******************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              EOT: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./nutation.js */
              "./esm/astrocalc/nutation.js"
            ), l = n(
              /*! ./sun.js */
              "./esm/astrocalc/sun.js"
            );
            function o() {
            }
            o.calculate = function(_) {
              var u = (_ - 2451545) / 365250, y = u * u, g = y * u, Ee = g * u, Ve = Ee * u, Me = a.CT.m360(280.4664567 + 360007.6982779 * u + 0.03032028 * y + g / 49931 - Ee / 15300 - Ve / 2e6), B = l.CAASun.apparentEclipticLongitude(_), Pe = l.CAASun.apparentEclipticLatitude(_), k = t.CAANutation.trueObliquityOfEcliptic(_), b = a.CT.ec2Eq(B, Pe, k);
              k = a.CT.d2R(k);
              var Le = Me - 57183e-7 - b.x * 15 + a.CT.dmS2D(0, 0, t.CAANutation.nutationInLongitude(_)) * Math.cos(k);
              return Le > 180 && (Le = -(360 - Le)), Le *= 4, Le;
            };
            var c = {};
            (0, s.registerType)("EOT", [o, c, null]);
          }
        ),
        /***/
        "./esm/astrocalc/fk5.js": (
          /*!******************************!*\
            !*** ./esm/astrocalc/fk5.js ***!
            \******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAFK5: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t() {
            }
            t.correctionInLongitude = function(o, c, _) {
              var u = (_ - 2451545) / 36525, y = o - 1.397 * u - 31e-5 * u * u;
              y = a.CT.d2R(y), o = a.CT.d2R(o), c = a.CT.d2R(c);
              var g = -0.09033 + 0.03916 * (Math.cos(y) + Math.sin(y)) * Math.tan(c);
              return a.CT.dmS2D(0, 0, g);
            }, t.correctionInLatitude = function(o, c) {
              var _ = (c - 2451545) / 36525, u = o - 1.397 * _ - 31e-5 * _ * _;
              u = a.CT.d2R(u), o = a.CT.d2R(o);
              var y = 0.03916 * (Math.cos(u) - Math.sin(u));
              return a.CT.dmS2D(0, 0, y);
            }, t.convertVSOPToFK5J2000 = function(o) {
              var c = new a.C3D();
              return c.x = o.x + 44036e-11 * o.y - 190919e-12 * o.z, c.y = -479966e-12 * o.x + 0.917482137087 * o.y - 0.397776982902 * o.z, c.z = 0.397776982902 * o.y + 0.917482137087 * o.z, c;
            }, t.convertVSOPToFK5B1950 = function(o) {
              var c = new a.C3D();
              return c.x = 0.999925702634 * o.x + 0.012189716217 * o.y + 11134016e-12 * o.z, c.y = -0.011179418036 * o.x + 0.917413998946 * o.y - 0.397777041885 * o.z, c.z = -0.004859003787 * o.x + 0.397747363646 * o.y + 0.917482111428 * o.z, c;
            }, t.convertVSOPToFK5AnyEquinox = function(o, c) {
              var _ = (c - 2451545) / 36525, u = _ * _, y = u * _, g = 2306.2181 * _ + 0.30188 * u + 0.017988 * y;
              g = a.CT.d2R(a.CT.dmS2D(0, 0, g));
              var Ee = 2306.2181 * _ + 1.09468 * u + 0.018203 * y;
              Ee = a.CT.d2R(a.CT.dmS2D(0, 0, Ee));
              var Ve = 2004.3109 * _ - 0.42665 * u - 0.041833 * y;
              Ve = a.CT.d2R(a.CT.dmS2D(0, 0, Ve));
              var Me = Math.cos(g), B = Math.cos(Ee), Pe = Math.cos(Ve), k = Math.sin(g), b = Math.sin(Ee), Le = Math.sin(Ve), xe = Me * B * Pe - k * b, ze = k * B + Me * b * Pe, Se = Me * Le, Te = -Me * b - k * B * Pe, D = Me * B - k * b * Pe, ke = -k * Le, Fe = -B * Le, He = -b * Le, We = Pe, Ke = new a.C3D();
              return Ke.x = xe * o.x + Te * o.y + Fe * o.z, Ke.y = ze * o.x + D * o.y + He * o.z, Ke.z = Se * o.x + ke * o.y + We * o.z, Ke;
            };
            var l = {};
            (0, s.registerType)("CAAFK5", [t, l, null]);
          }
        ),
        /***/
        "./esm/astrocalc/galilean_moons.js": (
          /*!*****************************************!*\
            !*** ./esm/astrocalc/galilean_moons.js ***!
            \*****************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              GM: () => (
                /* binding */
                Ve
              ),
              /* harmony export */
              GMD: () => (
                /* binding */
                u
              ),
              /* harmony export */
              GMDS: () => (
                /* binding */
                g
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./sun.js */
              "./esm/astrocalc/sun.js"
            ), l = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            ), o = n(
              /*! ./jupiter.js */
              "./esm/astrocalc/jupiter.js"
            ), c = n(
              /*! ./elliptical.js */
              "./esm/astrocalc/elliptical.js"
            ), _ = n(
              /*! ./elements_planetary_orbit.js */
              "./esm/astrocalc/elements_planetary_orbit.js"
            );
            function u() {
              this.meanLongitude = 0, this.trueLongitude = 0, this.tropicalLongitude = 0, this.equatorialLatitude = 0, this.r = 0, this.eclipticRectangularCoordinates = new a.C3D(), this.trueRectangularCoordinates = new a.C3D(), this.apparentRectangularCoordinates = new a.C3D(), this.bInTransit = !1, this.bInOccultation = !1, this.bInEclipse = !1, this.bInShadowTransit = !1, this.apparentShadowRectangularCoordinates = new a.C3D(), this.meanLongitude = 0, this.trueLongitude = 0, this.tropicalLongitude = 0, this.equatorialLatitude = 0, this.r = 0, this.bInTransit = !1, this.bInOccultation = !1, this.bInEclipse = !1, this.bInShadowTransit = !1;
            }
            var y = {};
            (0, s.registerType)("GMD", [u, y, null]);
            function g() {
              this.satellite1 = new u(), this.satellite2 = new u(), this.satellite3 = new u(), this.satellite4 = new u();
            }
            var Ee = {};
            (0, s.registerType)("GMDS", [g, Ee, null]);
            function Ve() {
            }
            Ve.calculate = function(B) {
              for (var Pe = t.CAASun.geometricEclipticLongitude(B), k = a.CT.d2R(Pe), b = t.CAASun.geometricEclipticLatitude(B), Le = a.CT.d2R(b), xe = l.CAAEarth.radiusVector(B), ze = 5, Se = 0, Te = c.ELL.distanceToLightTime(ze), D = B - Te, ke = !0, Fe = 0, He = 0, We = 0, Ke = 0, $ = 0, De = 0, Re = 0, Ie = 0; ke; )
                Ke = o.CAAJupiter.eclipticLongitude(D), $ = a.CT.d2R(Ke), De = o.CAAJupiter.eclipticLatitude(D), Re = a.CT.d2R(De), Ie = o.CAAJupiter.radiusVector(D), Fe = Ie * Math.cos(Re) * Math.cos($) + xe * Math.cos(k), He = Ie * Math.cos(Re) * Math.sin($) + xe * Math.sin(k), We = Ie * Math.sin(Re) + xe * Math.sin(Le), ze = Math.sqrt(Fe * Fe + He * He + We * We), Te = c.ELL.distanceToLightTime(ze), ke = Math.abs(Te - Se) > 2e-6, ke && (D = B - Te, Se = Te);
              var O = Ve.calculateHelper(B, k, Le, xe);
              Ve.fillInPhenomenaDetails(O.satellite1), Ve.fillInPhenomenaDetails(O.satellite2), Ve.fillInPhenomenaDetails(O.satellite3), Ve.fillInPhenomenaDetails(O.satellite4), D = B - Te, Ke = o.CAAJupiter.eclipticLongitude(D), $ = a.CT.d2R(Ke), De = o.CAAJupiter.eclipticLatitude(D), Re = a.CT.d2R(De), Ie = o.CAAJupiter.radiusVector(D), Fe = Ie * Math.cos(Re) * Math.cos($), He = Ie * Math.cos(Re) * Math.sin($), We = Ie * Math.sin(Re), ze = Math.sqrt(Fe * Fe + He * He + We * We);
              var Ue = c.ELL.distanceToLightTime(ze), $e = Ve.calculateHelper(B + Ue - Te, k, Le, 0);
              return Ve.fillInPhenomenaDetails($e.satellite1), Ve.fillInPhenomenaDetails($e.satellite2), Ve.fillInPhenomenaDetails($e.satellite3), Ve.fillInPhenomenaDetails($e.satellite4), O.satellite1.bInEclipse = $e.satellite1.bInOccultation, O.satellite2.bInEclipse = $e.satellite2.bInOccultation, O.satellite3.bInEclipse = $e.satellite3.bInOccultation, O.satellite4.bInEclipse = $e.satellite4.bInOccultation, O.satellite1.bInShadowTransit = $e.satellite1.bInTransit, O.satellite2.bInShadowTransit = $e.satellite2.bInTransit, O.satellite3.bInShadowTransit = $e.satellite3.bInTransit, O.satellite4.bInShadowTransit = $e.satellite4.bInTransit, O.satellite1.apparentShadowRectangularCoordinates = $e.satellite1.apparentRectangularCoordinates, O.satellite2.apparentShadowRectangularCoordinates = $e.satellite2.apparentRectangularCoordinates, O.satellite3.apparentShadowRectangularCoordinates = $e.satellite3.apparentRectangularCoordinates, O.satellite4.apparentShadowRectangularCoordinates = $e.satellite4.apparentRectangularCoordinates, O;
            }, Ve.calculateHelper = function(B, Pe, k, b) {
              for (var Le = new g(), xe = 5, ze = 0, Se = c.ELL.distanceToLightTime(xe), Te = 0, D = 0, ke = 0, Fe = 0, He = 0, We = 0, Ke = 0, $ = 0, De = B - Se, Re = !0; Re; )
                Fe = o.CAAJupiter.eclipticLongitude(De), He = a.CT.d2R(Fe), We = o.CAAJupiter.eclipticLatitude(De), Ke = a.CT.d2R(We), $ = o.CAAJupiter.radiusVector(De), Te = $ * Math.cos(Ke) * Math.cos(He) + b * Math.cos(Pe), D = $ * Math.cos(Ke) * Math.sin(He) + b * Math.sin(Pe), ke = $ * Math.sin(Ke) + b * Math.sin(k), xe = Math.sqrt(Te * Te + D * D + ke * ke), Se = c.ELL.distanceToLightTime(xe), Re = Math.abs(Se - ze) > 2e-6, Re && (De = B - Se, ze = Se);
              var Ie = Math.atan2(D, Te), O = Math.atan(ke / Math.sqrt(Te * Te + D * D)), Ue = B - 24430005e-1 - Se, $e = 106.07719 + 203.48895579 * Ue, Ze = a.CT.d2R($e), Qe = 175.73161 + 101.374724735 * Ue, Ae = a.CT.d2R(Qe), Ne = 120.55883 + 50.317609207 * Ue, Be = a.CT.d2R(Ne), Ge = 84.44459 + 21.571071177 * Ue, Ye = a.CT.d2R(Ge), je = a.CT.d2R(a.CT.m360(97.0881 + 0.16138586 * Ue)), ht = a.CT.d2R(a.CT.m360(154.8663 + 0.04726307 * Ue)), qe = a.CT.d2R(a.CT.m360(188.184 + 712734e-8 * Ue)), lt = a.CT.d2R(a.CT.m360(335.2868 + 184e-5 * Ue)), ft = 312.3346 - 0.13279386 * Ue, _t = a.CT.d2R(ft), St = 100.4411 - 0.03263064 * Ue, yt = a.CT.d2R(St), Ct = 119.1942 - 717703e-8 * Ue, Lt = a.CT.d2R(Ct), Vt = 322.6186 - 175934e-8 * Ue, Tt = a.CT.d2R(Vt), xt = 0.33033 * Math.sin(a.CT.d2R(163.679 + 10512e-7 * Ue)) + 0.03439 * Math.sin(a.CT.d2R(34.486 - 0.0161731 * Ue)), Ot = a.CT.d2R(199.6766 + 0.1737919 * Ue), Pt = a.CT.d2R(316.5182 - 208e-8 * Ue), kt = a.CT.d2R(30.23756 + 0.0830925701 * Ue + xt), zt = a.CT.d2R(31.97853 + 0.0334597339 * Ue), Bt = a.CT.d2R(13.469942), gt = 0.47259 * Math.sin(2 * (Ze - Ae)) + -0.03478 * Math.sin(qe - lt) + 0.01081 * Math.sin(Ae - 2 * Be + qe) + 738e-5 * Math.sin(Ot) + 713e-5 * Math.sin(Ae - 2 * Be + ht) + -674e-5 * Math.sin(je + qe - 2 * Bt - 2 * kt) + 666e-5 * Math.sin(Ae - 2 * Be + lt) + 445e-5 * Math.sin(Ze - qe) + -354e-5 * Math.sin(Ze - Ae) + -317e-5 * Math.sin(2 * Pt - 2 * Bt) + 265e-5 * Math.sin(Ze - lt) + -186e-5 * Math.sin(kt) + 162e-5 * Math.sin(ht - qe) + 158e-5 * Math.sin(4 * (Ze - Ae)) + -155e-5 * Math.sin(Ze - Be) + -138e-5 * Math.sin(Pt + Lt - 2 * Bt - 2 * kt) + -115e-5 * Math.sin(2 * (Ze - 2 * Ae + yt)) + 89e-5 * Math.sin(ht - lt) + 85e-5 * Math.sin(Ze + qe - 2 * Bt - 2 * kt) + 83e-5 * Math.sin(yt - Lt) + 53e-5 * Math.sin(Pt - yt), rt = 1.06476 * Math.sin(2 * (Ae - Be)) + 0.04256 * Math.sin(Ze - 2 * Ae + qe) + 0.03581 * Math.sin(Ae - qe) + 0.02395 * Math.sin(Ze - 2 * Ae + lt) + 0.01984 * Math.sin(Ae - lt) + -0.01778 * Math.sin(Ot) + 0.01654 * Math.sin(Ae - ht) + 0.01334 * Math.sin(Ae - 2 * Be + ht) + 0.01294 * Math.sin(qe - lt) + -0.01142 * Math.sin(Ae - Be) + -0.01057 * Math.sin(kt) + -775e-5 * Math.sin(2 * (Pt - Bt)) + 524e-5 * Math.sin(2 * (Ze - Ae)) + -46e-4 * Math.sin(Ze - Be) + 316e-5 * Math.sin(Pt - 2 * kt + Lt - 2 * Bt) + -203e-5 * Math.sin(je + qe - 2 * Bt - 2 * kt) + 146e-5 * Math.sin(Pt - Lt) + -145e-5 * Math.sin(2 * kt) + 125e-5 * Math.sin(Pt - Tt) + -115e-5 * Math.sin(Ze - 2 * Be + qe) + -94e-5 * Math.sin(2 * (Ae - yt)) + 86e-5 * Math.sin(2 * (Ze - 2 * Ae + yt)) + -86e-5 * Math.sin(5 * zt - 2 * kt + a.CT.d2R(52.225)) + -78e-5 * Math.sin(Ae - Ye) + -64e-5 * Math.sin(3 * Be - 7 * Ye + 4 * lt) + 64e-5 * Math.sin(je - lt) + -63e-5 * Math.sin(Ze - 2 * Be + lt) + 58e-5 * Math.sin(Lt - Tt) + 56e-5 * Math.sin(2 * (Pt - Bt - kt)) + 56e-5 * Math.sin(2 * (Ae - Ye)) + 55e-5 * Math.sin(2 * (Ze - Be)) + 52e-5 * Math.sin(3 * Be - 7 * Ye + qe + 3 * lt) + -43e-5 * Math.sin(Ze - qe) + 41e-5 * Math.sin(5 * (Ae - Be)) + 41e-5 * Math.sin(lt - Bt) + 32e-5 * Math.sin(yt - Lt) + 32e-5 * Math.sin(2 * (Be - kt - Bt)), nt = 0.1649 * Math.sin(Be - qe) + 0.09081 * Math.sin(Be - lt) + -0.06907 * Math.sin(Ae - Be) + 0.03784 * Math.sin(qe - lt) + 0.01846 * Math.sin(2 * (Be - Ye)) + -0.0134 * Math.sin(kt) + -0.01014 * Math.sin(2 * (Pt - Bt)) + 704e-5 * Math.sin(Ae - 2 * Be + qe) + -62e-4 * Math.sin(Ae - 2 * Be + ht) + -541e-5 * Math.sin(Be - Ye) + 381e-5 * Math.sin(Ae - 2 * Be + lt) + 235e-5 * Math.sin(Pt - Lt) + 198e-5 * Math.sin(Pt - Tt) + 176e-5 * Math.sin(Ot) + 13e-4 * Math.sin(3 * (Be - Ye)) + 125e-5 * Math.sin(Ze - Be) + -119e-5 * Math.sin(5 * zt - 2 * kt + a.CT.d2R(52.225)) + 109e-5 * Math.sin(Ze - Ae) + -1e-3 * Math.sin(3 * Be - 7 * Ye + 4 * lt) + 91e-5 * Math.sin(Lt - Tt) + 8e-4 * Math.sin(3 * Be - 7 * Ye + qe + 3 * lt) + -75e-5 * Math.sin(2 * Ae - 3 * Be + qe) + 72e-5 * Math.sin(je + qe - 2 * Bt - 2 * kt) + 69e-5 * Math.sin(lt - Bt) + -58e-5 * Math.sin(2 * Be - 3 * Ye + lt) + -57e-5 * Math.sin(Be - 2 * Ye + lt) + 56e-5 * Math.sin(Be + qe - 2 * Bt - 2 * kt) + -52e-5 * Math.sin(Ae - 2 * Be + je) + -5e-4 * Math.sin(ht - qe) + 48e-5 * Math.sin(Be - 2 * Ye + qe) + -45e-5 * Math.sin(2 * Ae - 3 * Be + lt) + -41e-5 * Math.sin(ht - lt) + -38e-5 * Math.sin(2 * kt) + -37e-5 * Math.sin(qe - lt + Lt - Tt) + -32e-5 * Math.sin(3 * Be - 7 * Ye + 2 * qe + 2 * lt) + 3e-4 * Math.sin(4 * (Be - Ye)) + 29e-5 * Math.sin(Be + lt - 2 * Bt - 2 * kt) + -28e-5 * Math.sin(Lt + Pt - 2 * Bt - 2 * kt) + 26e-5 * Math.sin(Be - Bt - kt) + 24e-5 * Math.sin(Ae - 3 * Be + 2 * Ye) + 21e-5 * Math.sin(Be - Bt - kt) + -21e-5 * Math.sin(Be - ht) + 17e-5 * Math.sin(2 * (Be - qe)), bt = 0.84287 * Math.sin(Ye - lt) + 0.03431 * Math.sin(lt - qe) + -0.03305 * Math.sin(2 * (Pt - Bt)) + -0.03211 * Math.sin(kt) + -0.01862 * Math.sin(Ye - qe) + 0.01186 * Math.sin(Pt - Tt) + 623e-5 * Math.sin(Ye + lt - 2 * kt - 2 * Bt) + 387e-5 * Math.sin(2 * (Ye - lt)) + -284e-5 * Math.sin(5 * zt - 2 * kt + a.CT.d2R(52.225)) + -234e-5 * Math.sin(2 * (Pt - lt)) + -223e-5 * Math.sin(Be - Ye) + -208e-5 * Math.sin(Ye - Bt) + 178e-5 * Math.sin(Pt + Tt - 2 * lt) + 134e-5 * Math.sin(lt - Bt) + 125e-5 * Math.sin(2 * (Ye - kt - Bt)) + -117e-5 * Math.sin(2 * kt) + -112e-5 * Math.sin(2 * (Be - Ye)) + 107e-5 * Math.sin(3 * Be - 7 * Ye + 4 * lt) + 102e-5 * Math.sin(Ye - kt - Bt) + 96e-5 * Math.sin(2 * Ye - Pt - Tt) + 87e-5 * Math.sin(2 * (Pt - Tt)) + -85e-5 * Math.sin(3 * Be - 7 * Ye + qe + 3 * lt) + 85e-5 * Math.sin(Be - 2 * Ye + lt) + -81e-5 * Math.sin(2 * (Ye - Pt)) + 71e-5 * Math.sin(Ye + lt - 2 * Bt - 3 * kt) + 61e-5 * Math.sin(Ze - Ye) + -56e-5 * Math.sin(Pt - Lt) + -54e-5 * Math.sin(Be - 2 * Ye + qe) + 51e-5 * Math.sin(Ae - Ye) + 42e-5 * Math.sin(2 * (Pt - kt - Bt)) + 39e-5 * Math.sin(2 * (lt - Tt)) + 36e-5 * Math.sin(Pt + Bt - lt - Tt) + 35e-5 * Math.sin(2 * zt - kt + a.CT.d2R(188.37)) + -35e-5 * Math.sin(Ye - lt + 2 * Bt - 2 * Pt) + -32e-5 * Math.sin(Ye + lt - 2 * Bt - kt) + 3e-4 * Math.sin(2 * zt - 2 * kt + a.CT.d2R(149.15)) + 29e-5 * Math.sin(3 * Be - 7 * Ye + 2 * qe + 2 * lt) + 28e-5 * Math.sin(Ye - lt + 2 * Pt - 2 * Bt) + -28e-5 * Math.sin(2 * (Ye - Tt)) + -27e-5 * Math.sin(qe - lt + Lt - Tt) + -26e-5 * Math.sin(5 * zt - 3 * kt + a.CT.d2R(188.37)) + 25e-5 * Math.sin(Tt - Lt) + -25e-5 * Math.sin(Ae - 3 * Be + 2 * Ye) + -23e-5 * Math.sin(3 * (Be - Ye)) + 21e-5 * Math.sin(2 * Ye - 2 * Bt - 3 * kt) + -21e-5 * Math.sin(2 * Be - 3 * Ye + lt) + 19e-5 * Math.sin(Ye - lt - kt) + -19e-5 * Math.sin(2 * Ye - qe - lt) + -18e-5 * Math.sin(Ye - lt + kt) + -16e-5 * Math.sin(Ye + qe - 2 * Bt - 2 * kt);
              Le.satellite1.meanLongitude = a.CT.m360($e), Le.satellite1.trueLongitude = a.CT.m360($e + gt);
              var Et = a.CT.d2R(Le.satellite1.trueLongitude);
              Le.satellite2.meanLongitude = a.CT.m360(Qe), Le.satellite2.trueLongitude = a.CT.m360(Qe + rt);
              var Rt = a.CT.d2R(Le.satellite2.trueLongitude);
              Le.satellite3.meanLongitude = a.CT.m360(Ne), Le.satellite3.trueLongitude = a.CT.m360(Ne + nt);
              var $t = a.CT.d2R(Le.satellite3.trueLongitude);
              Le.satellite4.meanLongitude = a.CT.m360(Ge), Le.satellite4.trueLongitude = a.CT.m360(Ge + bt);
              var pt = a.CT.d2R(Le.satellite4.trueLongitude), Ft = Math.atan(6393e-7 * Math.sin(Et - _t) + 1825e-7 * Math.sin(Et - yt) + 329e-7 * Math.sin(Et - Lt) + -311e-7 * Math.sin(Et - Pt) + 93e-7 * Math.sin(Et - Tt) + 75e-7 * Math.sin(3 * Et - 4 * Ae - 1.9927 * gt + yt) + 46e-7 * Math.sin(Et + Pt - 2 * Bt - 2 * kt));
              Le.satellite1.equatorialLatitude = a.CT.r2D(Ft);
              var Nt = Math.atan(81004e-7 * Math.sin(Rt - yt) + 4512e-7 * Math.sin(Rt - Lt) + -3284e-7 * Math.sin(Rt - Pt) + 116e-6 * Math.sin(Rt - Tt) + 272e-7 * Math.sin(Ze - 2 * Be + 1.0146 * rt + yt) + -144e-7 * Math.sin(Rt - _t) + 143e-7 * Math.sin(Rt + Pt - 2 * Bt - 2 * kt) + 35e-7 * Math.sin(Rt - Pt + kt) + -28e-7 * Math.sin(Ze - 2 * Be + 1.0146 * rt + Lt));
              Le.satellite2.equatorialLatitude = a.CT.r2D(Nt);
              var Kt = Math.atan(32402e-7 * Math.sin($t - Lt) + -16911e-7 * Math.sin($t - Pt) + 6847e-7 * Math.sin($t - Tt) + -2797e-7 * Math.sin($t - yt) + 321e-7 * Math.sin($t + Pt - 2 * Bt - 2 * kt) + 51e-7 * Math.sin($t - Pt + kt) + -45e-7 * Math.sin($t - Pt - kt) + -45e-7 * Math.sin($t + Pt - 2 * Bt) + 37e-7 * Math.sin($t + Pt - 2 * Bt - 3 * kt) + 3e-6 * Math.sin(2 * Ae - 3 * $t + 4.03 * nt + yt) + -21e-7 * Math.sin(2 * Ae - 3 * $t + 4.03 * nt + Lt));
              Le.satellite3.equatorialLatitude = a.CT.r2D(Kt);
              var At = Math.atan(-76579e-7 * Math.sin(pt - Pt) + 44134e-7 * Math.sin(pt - Tt) + -5112e-7 * Math.sin(pt - Lt) + 773e-7 * Math.sin(pt + Pt - 2 * Bt - 2 * kt) + 104e-7 * Math.sin(pt - Pt + kt) + -102e-7 * Math.sin(pt - Pt - kt) + 88e-7 * Math.sin(pt + Pt - 2 * Bt - 3 * kt) + -38e-7 * Math.sin(pt + Pt - 2 * Bt - kt));
              Le.satellite4.equatorialLatitude = a.CT.r2D(At), Le.satellite1.r = 5.90569 * (1 + (-41339e-7 * Math.cos(2 * (Ze - Ae)) + -387e-7 * Math.cos(Ze - qe) + -214e-7 * Math.cos(Ze - lt) + 17e-6 * Math.cos(Ze - Ae) + -131e-7 * Math.cos(4 * (Ze - Ae)) + 106e-7 * Math.cos(Ze - Be) + -66e-7 * Math.cos(Ze + qe - 2 * Bt - 2 * kt))), Le.satellite2.r = 9.39657 * (1 + (93848e-7 * Math.cos(Ze - Ae) + -3116e-7 * Math.cos(Ae - qe) + -1744e-7 * Math.cos(Ae - lt) + -1442e-7 * Math.cos(Ae - ht) + 553e-7 * Math.cos(Ae - Be) + 523e-7 * Math.cos(Ze - Be) + -29e-6 * Math.cos(2 * (Ze - Ae)) + 164e-7 * Math.cos(2 * (Ae - yt)) + 107e-7 * Math.cos(Ze - 2 * Be + qe) + -102e-7 * Math.cos(Ae - je) + -91e-7 * Math.cos(2 * (Ze - Be)))), Le.satellite3.r = 14.98832 * (1 + (-14388e-7 * Math.cos(Be - qe) + -7919e-7 * Math.cos(Be - lt) + 6342e-7 * Math.cos(Ae - Be) + -1761e-7 * Math.cos(2 * (Be - Ye)) + 294e-7 * Math.cos(Be - Ye) + -156e-7 * Math.cos(3 * (Be - Ye)) + 156e-7 * Math.cos(Ze - Be) + -153e-7 * Math.cos(Ze - Ae) + 7e-6 * Math.cos(2 * Ae - 3 * Be + qe) + -51e-7 * Math.cos(Be + qe - 2 * Bt - 2 * kt))), Le.satellite4.r = 26.36273 * (1 + (-73546e-7 * Math.cos(Ye - lt) + 1621e-7 * Math.cos(Ye - qe) + 974e-7 * Math.cos(Be - Ye) + -543e-7 * Math.cos(Ye + lt - 2 * Bt - 2 * kt) + -271e-7 * Math.cos(2 * (Ye - lt)) + 182e-7 * Math.cos(Ye - Bt) + 177e-7 * Math.cos(2 * (Be - Ye)) + -167e-7 * Math.cos(2 * Ye - Pt - Tt) + 167e-7 * Math.cos(Pt - Tt) + -155e-7 * Math.cos(2 * (Ye - Bt - kt)) + 142e-7 * Math.cos(2 * (Ye - Pt)) + 105e-7 * Math.cos(Ze - Ye) + 92e-7 * Math.cos(Ae - Ye) + -89e-7 * Math.cos(Ye - Bt - kt) + -62e-7 * Math.cos(Ye + lt - 2 * Bt - 3 * kt) + 48e-7 * Math.cos(2 * (Ye - Tt))));
              var Wt = (B - 2433282423e-3) / 36525, vt = a.CT.d2R(1.3966626 * Wt + 3088e-7 * Wt * Wt);
              Et += vt, Le.satellite1.tropicalLongitude = a.CT.m360(a.CT.r2D(Et)), Rt += vt, Le.satellite2.tropicalLongitude = a.CT.m360(a.CT.r2D(Rt)), $t += vt, Le.satellite3.tropicalLongitude = a.CT.m360(a.CT.r2D($t)), pt += vt, Le.satellite4.tropicalLongitude = a.CT.m360(a.CT.r2D(pt)), Pt += vt;
              var Xt = (B - 24150205e-1) / 36525, qt = 3.120262 + 6e-4 * Xt, ot = a.CT.d2R(qt), Ut = Le.satellite1.r * Math.cos(Et - Pt) * Math.cos(Ft), dt = Le.satellite2.r * Math.cos(Rt - Pt) * Math.cos(Nt), Je = Le.satellite3.r * Math.cos($t - Pt) * Math.cos(Kt), mt = Le.satellite4.r * Math.cos(pt - Pt) * Math.cos(At), wt = 0, jt = Le.satellite1.r * Math.sin(Et - Pt) * Math.cos(Ft), Gt = Le.satellite2.r * Math.sin(Rt - Pt) * Math.cos(Nt), Yt = Le.satellite3.r * Math.sin($t - Pt) * Math.cos(Kt), Qt = Le.satellite4.r * Math.sin(pt - Pt) * Math.cos(At), tr = 0, rr = Le.satellite1.r * Math.sin(Ft), er = Le.satellite2.r * Math.sin(Nt), sr = Le.satellite3.r * Math.sin(Kt), hr = Le.satellite4.r * Math.sin(At), lr = 1, vr = a.CT.d2R(_.EPO.jupiterLongitudeAscendingNode(B)), fr = a.CT.d2R(_.EPO.jupiterInclination(B)), or = 0, dr = 0, cr = 0, Sr = new a.C3D(), ur = Ve.rotations(wt, tr, lr, ot, Pt, fr, vr, Ie, O, Sr);
              or = ur[0], dr = ur[1], cr = ur[2];
              var gr = Math.atan2(or, cr);
              ur = Ve.rotations(Ut, jt, rr, ot, Pt, fr, vr, Ie, O, Le.satellite1.eclipticRectangularCoordinates), or = ur[0], dr = ur[1], cr = ur[2], Le.satellite1.trueRectangularCoordinates.x = or * Math.cos(gr) - cr * Math.sin(gr), Le.satellite1.trueRectangularCoordinates.y = or * Math.sin(gr) + cr * Math.cos(gr), Le.satellite1.trueRectangularCoordinates.z = dr, ur = Ve.rotations(dt, Gt, er, ot, Pt, fr, vr, Ie, O, Le.satellite2.eclipticRectangularCoordinates), or = ur[0], dr = ur[1], cr = ur[2], Le.satellite2.trueRectangularCoordinates.x = or * Math.cos(gr) - cr * Math.sin(gr), Le.satellite2.trueRectangularCoordinates.y = or * Math.sin(gr) + cr * Math.cos(gr), Le.satellite2.trueRectangularCoordinates.z = dr, ur = Ve.rotations(Je, Yt, sr, ot, Pt, fr, vr, Ie, O, Le.satellite3.eclipticRectangularCoordinates), or = ur[0], dr = ur[1], cr = ur[2], Le.satellite3.trueRectangularCoordinates.x = or * Math.cos(gr) - cr * Math.sin(gr), Le.satellite3.trueRectangularCoordinates.y = or * Math.sin(gr) + cr * Math.cos(gr), Le.satellite3.trueRectangularCoordinates.z = dr, ur = Ve.rotations(mt, Qt, hr, ot, Pt, fr, vr, Ie, O, Le.satellite4.eclipticRectangularCoordinates), or = ur[0], dr = ur[1], cr = ur[2], Le.satellite4.trueRectangularCoordinates.x = or * Math.cos(gr) - cr * Math.sin(gr), Le.satellite4.trueRectangularCoordinates.y = or * Math.sin(gr) + cr * Math.cos(gr), Le.satellite4.trueRectangularCoordinates.z = dr, Le.satellite1.apparentRectangularCoordinates.x = Le.satellite1.trueRectangularCoordinates.x + Math.abs(Le.satellite1.trueRectangularCoordinates.z) / 17295 * Math.sqrt(1 - Le.satellite1.trueRectangularCoordinates.x / Le.satellite1.r * (Le.satellite1.trueRectangularCoordinates.x / Le.satellite1.r)), Le.satellite1.apparentRectangularCoordinates.y = Le.satellite1.trueRectangularCoordinates.y, Le.satellite1.apparentRectangularCoordinates.z = Le.satellite1.trueRectangularCoordinates.z, Le.satellite2.apparentRectangularCoordinates.x = Le.satellite2.trueRectangularCoordinates.x + Math.abs(Le.satellite2.trueRectangularCoordinates.z) / 21819 * Math.sqrt(1 - Le.satellite2.trueRectangularCoordinates.x / Le.satellite2.r * (Le.satellite2.trueRectangularCoordinates.x / Le.satellite2.r)), Le.satellite2.apparentRectangularCoordinates.y = Le.satellite2.trueRectangularCoordinates.y, Le.satellite2.apparentRectangularCoordinates.z = Le.satellite2.trueRectangularCoordinates.z, Le.satellite3.apparentRectangularCoordinates.x = Le.satellite3.trueRectangularCoordinates.x + Math.abs(Le.satellite3.trueRectangularCoordinates.z) / 27558 * Math.sqrt(1 - Le.satellite3.trueRectangularCoordinates.x / Le.satellite3.r * (Le.satellite3.trueRectangularCoordinates.x / Le.satellite3.r)), Le.satellite3.apparentRectangularCoordinates.y = Le.satellite3.trueRectangularCoordinates.y, Le.satellite3.apparentRectangularCoordinates.z = Le.satellite3.trueRectangularCoordinates.z, Le.satellite4.apparentRectangularCoordinates.x = Le.satellite4.trueRectangularCoordinates.x + Math.abs(Le.satellite4.trueRectangularCoordinates.z) / 36548 * Math.sqrt(1 - Le.satellite4.trueRectangularCoordinates.x / Le.satellite4.r * (Le.satellite4.trueRectangularCoordinates.x / Le.satellite4.r)), Le.satellite4.apparentRectangularCoordinates.y = Le.satellite4.trueRectangularCoordinates.y, Le.satellite4.apparentRectangularCoordinates.z = Le.satellite4.trueRectangularCoordinates.z;
              var Cr = xe / (xe + Le.satellite1.trueRectangularCoordinates.z / 2095);
              return Le.satellite1.apparentRectangularCoordinates.x *= Cr, Le.satellite1.apparentRectangularCoordinates.y *= Cr, Cr = xe / (xe + Le.satellite2.trueRectangularCoordinates.z / 2095), Le.satellite2.apparentRectangularCoordinates.x *= Cr, Le.satellite2.apparentRectangularCoordinates.y *= Cr, Cr = xe / (xe + Le.satellite3.trueRectangularCoordinates.z / 2095), Le.satellite3.apparentRectangularCoordinates.x *= Cr, Le.satellite3.apparentRectangularCoordinates.y *= Cr, Cr = xe / (xe + Le.satellite4.trueRectangularCoordinates.z / 2095), Le.satellite4.apparentRectangularCoordinates.x *= Cr, Le.satellite4.apparentRectangularCoordinates.y *= Cr, Le;
            }, Ve.rotations = function(B, Pe, k, b, Le, xe, ze, Se, Te, D) {
              var ke, Fe, He, We = Le - ze, Ke = B, $ = Pe * Math.cos(b) - k * Math.sin(b), De = Pe * Math.sin(b) + k * Math.cos(b), Re = Ke * Math.cos(We) - $ * Math.sin(We), Ie = Ke * Math.sin(We) + $ * Math.cos(We), O = De, Ue = Re, $e = Ie * Math.cos(xe) - O * Math.sin(xe), Ze = Ie * Math.sin(xe) + O * Math.cos(xe), Qe = Ue * Math.cos(ze) - $e * Math.sin(ze), Ae = Ue * Math.sin(ze) + $e * Math.cos(ze), Ne = Ze, Be = 1 / 2095;
              D.x = Qe * Be, D.y = Ae * Be, D.z = Ne * Be;
              var Ge = Qe * Math.sin(Se) - Ae * Math.cos(Se), Ye = Qe * Math.cos(Se) + Ae * Math.sin(Se), je = Ne;
              return ke = Ge, Fe = je * Math.sin(Te) + Ye * Math.cos(Te), He = je * Math.cos(Te) - Ye * Math.sin(Te), [ke, Fe, He];
            }, Ve.fillInPhenomenaDetails = function(B) {
              var Pe = 1.071374 * B.apparentRectangularCoordinates.y, k = Pe * Pe + B.apparentRectangularCoordinates.x * B.apparentRectangularCoordinates.x;
              k < 1 ? B.apparentRectangularCoordinates.z < 0 ? (B.bInTransit = !0, B.bInOccultation = !1) : (B.bInTransit = !1, B.bInOccultation = !0) : (B.bInTransit = !1, B.bInOccultation = !1);
            };
            var Me = {};
            (0, s.registerType)("GM", [Ve, Me, null]);
          }
        ),
        /***/
        "./esm/astrocalc/globe.js": (
          /*!********************************!*\
            !*** ./esm/astrocalc/globe.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAGlobe: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t() {
            }
            t.rhoSinThetaPrime = function(o, c) {
              o = a.CT.d2R(o);
              var _ = Math.atan(0.99664719 * Math.tan(o));
              return 0.99664719 * Math.sin(_) + c / 6378149 * Math.sin(o);
            }, t.rhoCosThetaPrime = function(o, c) {
              o = a.CT.d2R(o);
              var _ = Math.atan(0.99664719 * Math.tan(o));
              return Math.cos(_) + c / 6378149 * Math.cos(o);
            }, t.radiusOfParallelOfLatitude = function(o) {
              o = a.CT.d2R(o);
              var c = Math.sin(o);
              return 6378.14 * Math.cos(o) / Math.sqrt(1 - 0.0066943847614084 * c * c);
            }, t.radiusOfCurvature = function(o) {
              o = a.CT.d2R(o);
              var c = Math.sin(o);
              return 6335.4422767778715 / Math.pow(1 - 0.0066943847614084 * c * c, 1.5);
            }, t.distanceBetweenPoints = function(o, c, _, u) {
              o = a.CT.d2R(o), _ = a.CT.d2R(_), c = a.CT.d2R(c), u = a.CT.d2R(u);
              var y = (o + _) / 2, g = (o - _) / 2, Ee = (c - u) / 2, Ve = Math.sin(g), Me = Math.cos(g), B = Math.cos(y), Pe = Math.sin(y), k = Math.sin(Ee), b = Math.cos(Ee), Le = Ve * Ve * b * b + B * B * k * k, xe = Me * Me * b * b + Pe * Pe * k * k, ze = Math.atan(Math.sqrt(Le / xe)), Se = Math.sqrt(Le * xe) / ze, Te = 2 * ze * 6378.14, D = (3 * Se - 1) / (2 * xe), ke = (3 * Se + 1) / (2 * Le), Fe = 0.00335281317789691;
              return Te * (1 + Fe * D * Pe * Pe * Me * Me - Fe * ke * B * B * Ve * Ve);
            };
            var l = {};
            (0, s.registerType)("CAAGlobe", [t, l, null]);
          }
        ),
        /***/
        "./esm/astrocalc/illuminated_fraction.js": (
          /*!***********************************************!*\
            !*** ./esm/astrocalc/illuminated_fraction.js ***!
            \***********************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              IFR: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), t = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function l() {
            }
            l.phaseAngle = function(c, _, u) {
              return t.CT.m360(t.CT.r2D(Math.acos((c * c + u * u - _ * _) / (2 * c * u))));
            }, l.phaseAngle2 = function(c, _, u, y, g, Ee) {
              return u = t.CT.d2R(u), y = t.CT.d2R(y), g = t.CT.d2R(g), t.CT.m360(t.CT.r2D(Math.acos((c - _ * Math.cos(u) * Math.cos(y - g)) / Ee)));
            }, l.phaseAngleRectangular = function(c, _, u, y, g, Ee) {
              y = t.CT.d2R(y), g = t.CT.d2R(g);
              var Ve = Math.cos(y);
              return t.CT.m360(t.CT.r2D(Math.acos((c * Ve * Math.cos(g) + _ * Ve * Math.sin(g) + u * Math.sin(y)) / Ee)));
            }, l.illuminatedFraction = function(c) {
              return c = t.CT.d2R(c), (1 + Math.cos(c)) / 2;
            }, l.illuminatedFraction2 = function(c, _, u) {
              return ((c + u) * (c + u) - _ * _) / (4 * c * u);
            }, l.mercuryMagnitudeMuller = function(c, _, u) {
              var y = u - 50;
              return 1.16 + 5 * a.Util.log10(c * _) + 0.02838 * y + 1023e-7 * y * y;
            }, l.venusMagnitudeMuller = function(c, _, u) {
              return -4 + 5 * a.Util.log10(c * _) + 0.01322 * u + 4247e-10 * u * u * u;
            }, l.marsMagnitudeMuller = function(c, _, u) {
              return -1.3 + 5 * a.Util.log10(c * _) + 0.01486 * u;
            }, l.jupiterMagnitudeMuller = function(c, _) {
              return -8.93 + 5 * a.Util.log10(c * _);
            }, l.saturnMagnitudeMuller = function(c, _, u, y) {
              y = t.CT.d2R(y);
              var g = Math.sin(y);
              return -8.68 + 5 * a.Util.log10(c * _) + 0.044 * Math.abs(u) - 2.6 * Math.sin(Math.abs(y)) + 1.25 * g * g;
            }, l.uranusMagnitudeMuller = function(c, _) {
              return -6.85 + 5 * a.Util.log10(c * _);
            }, l.neptuneMagnitudeMuller = function(c, _) {
              return -7.05 + 5 * a.Util.log10(c * _);
            }, l.mercuryMagnitudeAA = function(c, _, u) {
              var y = u * u, g = y * u;
              return -0.42 + 5 * a.Util.log10(c * _) + 0.038 * u - 273e-6 * y + 2e-6 * g;
            }, l.venusMagnitudeAA = function(c, _, u) {
              var y = u * u, g = y * u;
              return -4.4 + 5 * a.Util.log10(c * _) + 9e-4 * u + 239e-6 * y - 65e-8 * g;
            }, l.marsMagnitudeAA = function(c, _, u) {
              return -1.52 + 5 * a.Util.log10(c * _) + 0.016 * u;
            }, l.jupiterMagnitudeAA = function(c, _, u) {
              return -9.4 + 5 * a.Util.log10(c * _) + 5e-3 * u;
            }, l.saturnMagnitudeAA = function(c, _, u, y) {
              y = t.CT.d2R(y);
              var g = Math.sin(y);
              return -8.88 + 5 * a.Util.log10(c * _) + 0.044 * Math.abs(u) - 2.6 * Math.sin(Math.abs(y)) + 1.25 * g * g;
            }, l.uranusMagnitudeAA = function(c, _) {
              return -7.19 + 5 * a.Util.log10(c * _);
            }, l.neptuneMagnitudeAA = function(c, _) {
              return -6.87 + 5 * a.Util.log10(c * _);
            }, l.plutoMagnitudeAA = function(c, _) {
              return -1 + 5 * a.Util.log10(c * _);
            };
            var o = {};
            (0, s.registerType)("IFR", [l, o, null]);
          }
        ),
        /***/
        "./esm/astrocalc/interpolate.js": (
          /*!**************************************!*\
            !*** ./esm/astrocalc/interpolate.js ***!
            \**************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              INTP: () => (
                /* binding */
                a
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            );
            function a() {
            }
            a.interpolate = function(l, o, c, _) {
              var u = c - o, y = _ - c, g = o + _ - 2 * c;
              return c + l / 2 * (u + y + l * g);
            }, a.interpolate2 = function(l, o, c, _, u, y) {
              var g = c - o, Ee = _ - c, Ve = u - _, Me = y - u, B = Ee - g, Pe = Ve - Ee, k = Me - Ve, b = Pe - B, Le = k - Pe, xe = Le - b, ze = l * l, Se = ze * l, Te = Se * l;
              return _ + l * ((Ee + Ve) / 2 - (b + Le) / 12) + ze * (Pe / 2 - xe / 24) + Se * ((b + Le) / 12) + Te * (xe / 24);
            }, a.interpolateToHalves = function(l, o, c, _) {
              return (9 * (o + c) - l - _) / 16;
            }, a.lagrangeInterpolate = function(l, o, c, _) {
              for (var u = 0, y = 1; y <= o; y++) {
                for (var g = 1, Ee = 1; Ee <= o; Ee++)
                  Ee !== y && (g = g * (l - c[Ee - 1]) / (c[y - 1] - c[Ee - 1]));
                u += g * _[y - 1];
              }
              return u;
            }, a.zero = function(l, o, c) {
              for (var _ = o - l, u = c - o, y = l + c - 2 * o, g = !0, Ee = 0, Ve = Ee; g; )
                Ve = -2 * o / (_ + u + y * Ee), g = Math.abs(Ve - Ee) > 1e-12, g && (Ee = Ve);
              return Ve;
            }, a.zeroB = function(l, o, c, _, u) {
              for (var y = o - l, g = c - o, Ee = _ - c, Ve = u - _, Me = g - y, B = Ee - g, Pe = Ve - Ee, k = B - Me, b = Pe - B, Le = b - k, xe = !0, ze = 0, Se = ze; xe; ) {
                var Te = ze * ze, D = Te * ze, ke = D * ze;
                Se = (-24 * c + Te * (Le - 12 * B) - 2 * D * (k + b) - ke * Le) / (2 * (6 * g + 6 * Ee - k - b)), xe = Math.abs(Se - ze) > 1e-12, xe && (ze = Se);
              }
              return Se;
            }, a.zero2 = function(l, o, c) {
              for (var _ = o - l, u = c - o, y = l + c - 2 * o, g = !0, Ee = 0, Ve = Ee; g; ) {
                var Me = -(2 * o + Ee * (_ + u + y * Ee)) / (_ + u + 2 * y * Ee);
                Ve = Ee + Me, g = Math.abs(Me) > 1e-12, g && (Ee = Ve);
              }
              return Ve;
            }, a.zero2B = function(l, o, c, _, u) {
              for (var y = o - l, g = c - o, Ee = _ - c, Ve = u - _, Me = g - y, B = Ee - g, Pe = Ve - Ee, k = B - Me, b = Pe - B, Le = b - k, xe = Le / 24, ze = (k + b) / 12, Se = B / 2 - xe, Te = (g + Ee) / 2 - ze, D = !0, ke = 0, Fe = ke; D; ) {
                var He = ke * ke, We = He * ke, Ke = We * ke, $ = -(xe * Ke + ze * We + Se * He + Te * ke + c) / (4 * xe * We + 3 * ze * He + 2 * Se * ke + Te);
                Fe = ke + $, D = Math.abs($) > 1e-12, D && (ke = Fe);
              }
              return Fe;
            };
            var t = {};
            (0, s.registerType)("INTP", [a, t, null]);
          }
        ),
        /***/
        "./esm/astrocalc/jupiter.js": (
          /*!**********************************!*\
            !*** ./esm/astrocalc/jupiter.js ***!
            \**********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAJupiter: () => (
                /* binding */
                Te
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            );
            const l = [new t.VSC(59954691, 0, 0), new t.VSC(9695899, 5.0619179, 529.6909651), new t.VSC(573610, 1.444062, 7.113547), new t.VSC(306389, 5.417347, 1059.38193), new t.VSC(97178, 4.14265, 632.78374), new t.VSC(72903, 3.64043, 522.57742), new t.VSC(64264, 3.41145, 103.09277), new t.VSC(39806, 2.29377, 419.48464), new t.VSC(38858, 1.27232, 316.39187), new t.VSC(27965, 1.78455, 536.80451), new t.VSC(13590, 5.77481, 1589.0729), new t.VSC(8769, 3.63, 949.1756), new t.VSC(8246, 3.5823, 206.1855), new t.VSC(7368, 5.081, 735.8765), new t.VSC(6263, 0.025, 213.2991), new t.VSC(6114, 4.5132, 1162.4747), new t.VSC(5305, 4.1863, 1052.2684), new t.VSC(5305, 1.3067, 14.2271), new t.VSC(4905, 1.3208, 110.2063), new t.VSC(4647, 4.6996, 3.9322), new t.VSC(3045, 4.3168, 426.5982), new t.VSC(2610, 1.5667, 846.0828), new t.VSC(2028, 1.0638, 3.1814), new t.VSC(1921, 0.9717, 639.8973), new t.VSC(1765, 2.1415, 1066.4955), new t.VSC(1723, 3.8804, 1265.5675), new t.VSC(1633, 3.582, 515.4639), new t.VSC(1432, 4.2968, 625.6702), new t.VSC(973, 4.098, 95.979), new t.VSC(884, 2.437, 412.371), new t.VSC(733, 6.085, 838.969), new t.VSC(731, 3.806, 1581.959), new t.VSC(709, 1.293, 742.99), new t.VSC(692, 6.134, 2118.764), new t.VSC(614, 4.109, 1478.867), new t.VSC(582, 4.54, 309.278), new t.VSC(495, 3.756, 323.505), new t.VSC(441, 2.958, 454.909), new t.VSC(417, 1.036, 2.488), new t.VSC(390, 4.897, 1692.166), new t.VSC(376, 4.703, 1368.66), new t.VSC(341, 5.715, 533.623), new t.VSC(330, 4.74, 0.048), new t.VSC(262, 1.877, 0.963), new t.VSC(261, 0.82, 380.128), new t.VSC(257, 3.724, 199.072), new t.VSC(244, 5.22, 728.763), new t.VSC(235, 1.227, 909.819), new t.VSC(220, 1.651, 543.918), new t.VSC(207, 1.855, 525.759), new t.VSC(202, 1.807, 1375.774), new t.VSC(197, 5.293, 1155.361), new t.VSC(175, 3.73, 942.062), new t.VSC(175, 3.226, 1898.351), new t.VSC(175, 5.91, 956.289), new t.VSC(158, 4.365, 1795.258), new t.VSC(151, 3.906, 74.782), new t.VSC(149, 4.377, 1685.052), new t.VSC(141, 3.136, 491.558), new t.VSC(138, 1.318, 1169.588), new t.VSC(131, 4.169, 1045.155), new t.VSC(117, 2.5, 1596.186), new t.VSC(117, 3.389, 0.521), new t.VSC(106, 4.554, 526.51)], o = [new t.VSC(52993480757, 0, 0), new t.VSC(489741, 4.220667, 529.690965), new t.VSC(228919, 6.026475, 7.113547), new t.VSC(27655, 4.57266, 1059.38193), new t.VSC(20721, 5.45939, 522.57742), new t.VSC(12106, 0.16986, 536.80451), new t.VSC(6068, 4.4242, 103.0928), new t.VSC(5434, 3.9848, 419.4846), new t.VSC(4238, 5.8901, 14.2271), new t.VSC(2212, 5.2677, 206.1855), new t.VSC(1746, 4.9267, 1589.0729), new t.VSC(1296, 5.5513, 3.1814), new t.VSC(1173, 5.8565, 1052.2684), new t.VSC(1163, 0.5145, 3.9322), new t.VSC(1099, 5.307, 515.4639), new t.VSC(1007, 0.4648, 735.8765), new t.VSC(1004, 3.1504, 426.5982), new t.VSC(848, 5.758, 110.206), new t.VSC(827, 4.803, 213.299), new t.VSC(816, 0.586, 1066.495), new t.VSC(725, 5.518, 639.897), new t.VSC(568, 5.989, 625.67), new t.VSC(474, 4.132, 412.371), new t.VSC(413, 5.737, 95.979), new t.VSC(345, 4.242, 632.784), new t.VSC(336, 3.732, 1162.475), new t.VSC(234, 4.035, 949.176), new t.VSC(234, 6.243, 309.278), new t.VSC(199, 1.505, 838.969), new t.VSC(195, 2.219, 323.505), new t.VSC(187, 6.086, 742.99), new t.VSC(184, 6.28, 543.918), new t.VSC(171, 5.417, 199.072), new t.VSC(131, 0.626, 728.763), new t.VSC(115, 0.68, 846.083), new t.VSC(115, 5.286, 2118.764), new t.VSC(108, 4.493, 956.289), new t.VSC(80, 5.82, 1045.15), new t.VSC(72, 5.34, 942.06), new t.VSC(70, 5.97, 532.87), new t.VSC(67, 5.73, 21.34), new t.VSC(66, 0.13, 526.51), new t.VSC(65, 6.09, 1581.96), new t.VSC(59, 0.59, 1155.36), new t.VSC(58, 0.99, 1596.19), new t.VSC(57, 5.97, 1169.59), new t.VSC(57, 1.41, 533.62), new t.VSC(55, 5.43, 10.29), new t.VSC(52, 5.73, 117.32), new t.VSC(52, 0.23, 1368.66), new t.VSC(50, 6.08, 525.76), new t.VSC(47, 3.63, 1478.87), new t.VSC(47, 0.51, 1265.57), new t.VSC(40, 4.16, 1692.17), new t.VSC(34, 0.1, 302.16), new t.VSC(33, 5.04, 220.41), new t.VSC(32, 5.37, 508.35), new t.VSC(29, 5.42, 1272.68), new t.VSC(29, 3.36, 4.67), new t.VSC(29, 0.76, 88.87), new t.VSC(25, 1.61, 831.86)], c = [new t.VSC(47234, 4.32148, 7.11355), new t.VSC(38966, 0, 0), new t.VSC(30629, 2.93021, 529.69097), new t.VSC(3189, 1.055, 522.5774), new t.VSC(2729, 4.8455, 536.8045), new t.VSC(2723, 3.4141, 1059.3819), new t.VSC(1721, 4.1873, 14.2271), new t.VSC(383, 5.768, 419.485), new t.VSC(378, 0.76, 515.464), new t.VSC(367, 6.055, 103.093), new t.VSC(337, 3.786, 3.181), new t.VSC(308, 0.694, 206.186), new t.VSC(218, 3.814, 1589.073), new t.VSC(199, 5.34, 1066.495), new t.VSC(197, 2.484, 3.932), new t.VSC(156, 1.406, 1052.268), new t.VSC(146, 3.814, 639.897), new t.VSC(142, 1.634, 426.598), new t.VSC(130, 5.837, 412.371), new t.VSC(117, 1.414, 625.67), new t.VSC(97, 4.03, 110.21), new t.VSC(91, 1.11, 95.98), new t.VSC(87, 2.52, 632.78), new t.VSC(79, 4.64, 543.92), new t.VSC(72, 2.22, 735.88), new t.VSC(58, 0.83, 199.07), new t.VSC(57, 3.12, 213.3), new t.VSC(49, 1.67, 309.28), new t.VSC(40, 4.02, 21.34), new t.VSC(40, 0.62, 323.51), new t.VSC(36, 2.33, 728.76), new t.VSC(29, 3.61, 10.29), new t.VSC(28, 3.24, 838.97), new t.VSC(26, 4.5, 742.99), new t.VSC(26, 2.51, 1162.47), new t.VSC(25, 1.22, 1045.15), new t.VSC(24, 3.01, 956.29), new t.VSC(19, 4.29, 532.87), new t.VSC(18, 0.81, 508.35), new t.VSC(17, 4.2, 2118.76), new t.VSC(17, 1.83, 526.51), new t.VSC(15, 5.81, 1596.19), new t.VSC(15, 0.68, 942.06), new t.VSC(15, 4, 117.32), new t.VSC(14, 5.95, 316.39), new t.VSC(14, 1.8, 302.16), new t.VSC(13, 2.52, 88.87), new t.VSC(13, 4.37, 1169.59), new t.VSC(11, 4.44, 525.76), new t.VSC(10, 1.72, 1581.96), new t.VSC(9, 2.18, 1155.36), new t.VSC(9, 3.29, 220.41), new t.VSC(9, 3.32, 831.86), new t.VSC(8, 5.76, 846.08), new t.VSC(8, 2.71, 533.62), new t.VSC(7, 2.18, 1265.57), new t.VSC(6, 0.5, 949.18)], _ = [new t.VSC(6502, 2.5986, 7.1135), new t.VSC(1357, 1.3464, 529.691), new t.VSC(471, 2.475, 14.227), new t.VSC(417, 3.245, 536.805), new t.VSC(353, 2.974, 522.577), new t.VSC(155, 2.076, 1059.382), new t.VSC(87, 2.51, 515.46), new t.VSC(44, 0, 0), new t.VSC(34, 3.83, 1066.5), new t.VSC(28, 2.45, 206.19), new t.VSC(24, 1.28, 412.37), new t.VSC(23, 2.98, 543.92), new t.VSC(20, 2.1, 639.9), new t.VSC(20, 1.4, 419.48), new t.VSC(19, 1.59, 103.09), new t.VSC(17, 2.3, 21.34), new t.VSC(17, 2.6, 1589.07), new t.VSC(16, 3.15, 625.67), new t.VSC(16, 3.36, 1052.27), new t.VSC(13, 2.76, 95.98), new t.VSC(13, 2.54, 199.07), new t.VSC(13, 6.27, 426.6), new t.VSC(9, 1.76, 10.29), new t.VSC(9, 2.27, 110.21), new t.VSC(7, 3.43, 309.28), new t.VSC(7, 4.04, 728.76), new t.VSC(6, 2.52, 508.35), new t.VSC(5, 2.91, 1045.15), new t.VSC(5, 5.25, 323.51), new t.VSC(4, 4.3, 88.87), new t.VSC(4, 3.52, 302.16), new t.VSC(4, 4.09, 735.88), new t.VSC(3, 1.43, 956.29), new t.VSC(3, 4.36, 1596.19), new t.VSC(3, 1.25, 213.3), new t.VSC(3, 5.02, 838.97), new t.VSC(3, 2.24, 117.32), new t.VSC(2, 2.9, 742.99), new t.VSC(2, 2.36, 942.06)], u = [new t.VSC(669, 0.853, 7.114), new t.VSC(114, 3.142, 0), new t.VSC(100, 0.743, 14.227), new t.VSC(50, 1.65, 536.8), new t.VSC(44, 5.82, 529.69), new t.VSC(32, 4.86, 522.58), new t.VSC(15, 4.29, 515.46), new t.VSC(9, 0.71, 1059.38), new t.VSC(5, 1.3, 543.92), new t.VSC(4, 2.32, 1066.5), new t.VSC(4, 0.48, 21.34), new t.VSC(3, 3, 412.37), new t.VSC(2, 0.4, 639.9), new t.VSC(2, 4.26, 199.07), new t.VSC(2, 4.91, 625.67), new t.VSC(2, 4.26, 206.19), new t.VSC(1, 5.26, 1052.27), new t.VSC(1, 4.72, 95.98), new t.VSC(1, 1.29, 1589.07)], y = [new t.VSC(50, 5.26, 7.11), new t.VSC(16, 5.25, 14.23), new t.VSC(4, 0.01, 536.8), new t.VSC(2, 1.1, 522.58), new t.VSC(1, 3.14, 0)], g = [new t.VSC(2268616, 3.5585261, 529.6909651), new t.VSC(110090, 0, 0), new t.VSC(109972, 3.908093, 1059.38193), new t.VSC(8101, 3.6051, 522.5774), new t.VSC(6438, 0.3063, 536.8045), new t.VSC(6044, 4.2588, 1589.0729), new t.VSC(1107, 2.9853, 1162.4747), new t.VSC(944, 1.675, 426.598), new t.VSC(942, 2.936, 1052.268), new t.VSC(894, 1.754, 7.114), new t.VSC(836, 5.179, 103.093), new t.VSC(767, 2.155, 632.784), new t.VSC(684, 3.678, 213.299), new t.VSC(629, 0.643, 1066.495), new t.VSC(559, 0.014, 846.083), new t.VSC(532, 2.703, 110.206), new t.VSC(464, 1.173, 949.176), new t.VSC(431, 2.608, 419.485), new t.VSC(351, 4.611, 2118.764), new t.VSC(132, 4.778, 742.99), new t.VSC(123, 3.35, 1692.166), new t.VSC(116, 1.387, 323.505), new t.VSC(115, 5.049, 316.392), new t.VSC(104, 3.701, 515.464), new t.VSC(103, 2.319, 1478.867), new t.VSC(102, 3.153, 1581.959)], Ee = [new t.VSC(177352, 5.701665, 529.690965), new t.VSC(3230, 5.7794, 1059.3819), new t.VSC(3081, 5.4746, 522.5774), new t.VSC(2212, 4.7348, 536.8045), new t.VSC(1694, 3.1416, 0), new t.VSC(346, 4.746, 1052.268), new t.VSC(234, 5.189, 1066.495), new t.VSC(196, 6.186, 7.114), new t.VSC(150, 3.927, 1589.073), new t.VSC(114, 3.439, 632.784), new t.VSC(97, 2.91, 949.18), new t.VSC(82, 5.08, 1162.47), new t.VSC(77, 2.51, 103.09), new t.VSC(77, 0.61, 419.48), new t.VSC(74, 5.5, 515.46), new t.VSC(61, 5.45, 213.3), new t.VSC(50, 3.95, 735.88), new t.VSC(46, 0.54, 110.21), new t.VSC(45, 1.9, 846.08), new t.VSC(37, 4.7, 543.92), new t.VSC(36, 6.11, 316.39), new t.VSC(32, 4.92, 1581.96)], Ve = [new t.VSC(8094, 1.4632, 529.691), new t.VSC(813, 3.1416, 0), new t.VSC(742, 0.957, 522.577), new t.VSC(399, 2.899, 536.805), new t.VSC(342, 1.447, 1059.382), new t.VSC(74, 0.41, 1052.27), new t.VSC(46, 3.48, 1066.5), new t.VSC(30, 1.93, 1589.07), new t.VSC(29, 0.99, 515.46), new t.VSC(23, 4.27, 7.11), new t.VSC(14, 2.92, 543.92), new t.VSC(12, 5.22, 632.78), new t.VSC(11, 4.88, 949.18), new t.VSC(6, 6.21, 1045.15)], Me = [new t.VSC(252, 3.381, 529.691), new t.VSC(122, 2.733, 522.577), new t.VSC(49, 1.04, 536.8), new t.VSC(11, 2.31, 1052.27), new t.VSC(8, 2.77, 515.46), new t.VSC(7, 4.25, 1059.38), new t.VSC(6, 1.78, 1066.5), new t.VSC(4, 1.13, 543.92), new t.VSC(3, 3.14, 0)], B = [new t.VSC(15, 4.53, 522.58), new t.VSC(5, 4.47, 529.69), new t.VSC(4, 5.44, 536.8), new t.VSC(3, 0, 0), new t.VSC(2, 4.52, 515.46), new t.VSC(1, 4.2, 1052.27)], Pe = [new t.VSC(1, 0.09, 522.58)], k = [new t.VSC(520887429, 0, 0), new t.VSC(25209327, 3.4910864, 529.69096509), new t.VSC(610600, 3.841154, 1059.38193), new t.VSC(282029, 2.574199, 632.783739), new t.VSC(187647, 2.075904, 522.577418), new t.VSC(86793, 0.71001, 419.48464), new t.VSC(72063, 0.21466, 536.80451), new t.VSC(65517, 5.97996, 316.39187), new t.VSC(30135, 2.16132, 949.17561), new t.VSC(29135, 1.67759, 103.09277), new t.VSC(23947, 0.27458, 7.11355), new t.VSC(23453, 3.54023, 735.87651), new t.VSC(22284, 4.19363, 1589.0729), new t.VSC(13033, 2.96043, 1162.4747), new t.VSC(12749, 2.7155, 1052.26838), new t.VSC(9703, 1.9067, 206.1855), new t.VSC(9161, 4.4135, 213.2991), new t.VSC(7895, 2.4791, 426.5982), new t.VSC(7058, 2.1818, 1265.5675), new t.VSC(6138, 6.2642, 846.0828), new t.VSC(5477, 5.6573, 639.8973), new t.VSC(4170, 2.0161, 515.4639), new t.VSC(4137, 2.7222, 625.6702), new t.VSC(3503, 0.5653, 1066.4955), new t.VSC(2617, 2.0099, 1581.9593), new t.VSC(2500, 4.5518, 838.9693), new t.VSC(2128, 6.1275, 742.9901), new t.VSC(1912, 0.8562, 412.3711), new t.VSC(1611, 3.0887, 1368.6603), new t.VSC(1479, 2.6803, 1478.8666), new t.VSC(1231, 1.8904, 323.5054), new t.VSC(1217, 1.8017, 110.2063), new t.VSC(1015, 1.3867, 454.9094), new t.VSC(999, 2.872, 309.278), new t.VSC(961, 4.549, 2118.764), new t.VSC(886, 4.148, 533.623), new t.VSC(821, 1.593, 1898.351), new t.VSC(812, 5.941, 909.819), new t.VSC(777, 3.677, 728.763), new t.VSC(727, 3.988, 1155.361), new t.VSC(655, 2.791, 1685.052), new t.VSC(654, 3.382, 1692.166), new t.VSC(621, 4.823, 956.289), new t.VSC(615, 2.276, 942.062), new t.VSC(562, 0.081, 543.918), new t.VSC(542, 0.284, 525.759)], b = [new t.VSC(1271802, 2.6493751, 529.6909651), new t.VSC(61662, 3.00076, 1059.38193), new t.VSC(53444, 3.89718, 522.57742), new t.VSC(41390, 0, 0), new t.VSC(31185, 4.88277, 536.80451), new t.VSC(11847, 2.4133, 419.48464), new t.VSC(9166, 4.7598, 7.1135), new t.VSC(3404, 3.3469, 1589.0729), new t.VSC(3203, 5.2108, 735.8765), new t.VSC(3176, 2.793, 103.0928), new t.VSC(2806, 3.7422, 515.4639), new t.VSC(2677, 4.3305, 1052.2684), new t.VSC(2600, 3.6344, 206.1855), new t.VSC(2412, 1.4695, 426.5982), new t.VSC(2101, 3.9276, 639.8973), new t.VSC(1646, 4.4163, 1066.4955), new t.VSC(1641, 4.4163, 625.6702), new t.VSC(1050, 3.1611, 213.2991), new t.VSC(1025, 2.5543, 412.3711), new t.VSC(806, 2.678, 632.784), new t.VSC(741, 2.171, 1162.475), new t.VSC(677, 6.25, 838.969), new t.VSC(567, 4.577, 742.99), new t.VSC(485, 2.469, 949.176), new t.VSC(469, 4.71, 543.918), new t.VSC(445, 0.403, 323.505), new t.VSC(416, 5.368, 728.763), new t.VSC(402, 4.605, 309.278), new t.VSC(347, 4.681, 14.227), new t.VSC(338, 3.168, 956.289), new t.VSC(261, 5.343, 846.083), new t.VSC(247, 3.923, 942.062), new t.VSC(220, 4.842, 1368.66), new t.VSC(203, 5.6, 1155.361), new t.VSC(200, 4.439, 1045.155), new t.VSC(197, 3.706, 2118.764), new t.VSC(196, 3.759, 199.072), new t.VSC(184, 4.265, 95.979), new t.VSC(180, 4.402, 532.872), new t.VSC(170, 4.846, 526.51), new t.VSC(146, 6.13, 533.623), new t.VSC(133, 1.322, 110.206), new t.VSC(132, 4.512, 525.759)], Le = [new t.VSC(79645, 1.35866, 529.69097), new t.VSC(8252, 5.7777, 522.5774), new t.VSC(7030, 3.2748, 536.8045), new t.VSC(5314, 1.8384, 1059.3819), new t.VSC(1861, 2.9768, 7.1135), new t.VSC(964, 5.48, 515.464), new t.VSC(836, 4.199, 419.485), new t.VSC(498, 3.142, 0), new t.VSC(427, 2.228, 639.897), new t.VSC(406, 3.783, 1066.495), new t.VSC(377, 2.242, 1589.073), new t.VSC(363, 5.368, 206.186), new t.VSC(342, 6.099, 1052.268), new t.VSC(339, 6.127, 625.67), new t.VSC(333, 3e-3, 426.598), new t.VSC(280, 4.262, 412.371), new t.VSC(257, 0.963, 632.784), new t.VSC(230, 0.705, 735.877), new t.VSC(201, 3.069, 543.918), new t.VSC(200, 4.429, 103.093), new t.VSC(139, 2.932, 14.227), new t.VSC(114, 0.787, 728.763), new t.VSC(95, 1.7, 838.97), new t.VSC(86, 5.14, 323.51), new t.VSC(83, 0.06, 309.28), new t.VSC(80, 2.98, 742.99), new t.VSC(75, 1.6, 956.29), new t.VSC(70, 1.51, 213.3), new t.VSC(67, 5.47, 199.07), new t.VSC(62, 6.1, 1045.15), new t.VSC(56, 0.96, 1162.47), new t.VSC(52, 5.58, 942.06), new t.VSC(50, 2.72, 532.87), new t.VSC(45, 5.52, 508.35), new t.VSC(44, 0.27, 526.51), new t.VSC(40, 5.95, 95.98)], xe = [new t.VSC(3519, 6.058, 529.691), new t.VSC(1073, 1.6732, 536.8045), new t.VSC(916, 1.413, 522.577), new t.VSC(342, 0.523, 1059.382), new t.VSC(255, 1.196, 7.114), new t.VSC(222, 0.952, 515.464), new t.VSC(90, 3.14, 0), new t.VSC(69, 2.27, 1066.5), new t.VSC(58, 1.41, 543.92), new t.VSC(58, 0.53, 639.9), new t.VSC(51, 5.98, 412.37), new t.VSC(47, 1.58, 625.67), new t.VSC(43, 6.12, 419.48), new t.VSC(37, 1.18, 14.23), new t.VSC(34, 1.67, 1052.27), new t.VSC(34, 0.85, 206.19), new t.VSC(31, 1.04, 1589.07), new t.VSC(30, 4.63, 426.6), new t.VSC(21, 2.5, 728.76), new t.VSC(15, 0.89, 199.07), new t.VSC(14, 0.96, 508.35), new t.VSC(13, 1.5, 1045.15), new t.VSC(12, 2.61, 735.88), new t.VSC(12, 3.56, 323.51), new t.VSC(11, 1.79, 309.28), new t.VSC(11, 6.28, 956.29), new t.VSC(10, 6.26, 103.09), new t.VSC(9, 3.45, 838.97)], ze = [new t.VSC(129, 0.084, 536.805), new t.VSC(113, 4.249, 529.691), new t.VSC(83, 3.3, 522.58), new t.VSC(38, 2.73, 515.46), new t.VSC(27, 5.69, 7.11), new t.VSC(18, 5.4, 1059.38), new t.VSC(13, 6.02, 543.92), new t.VSC(9, 0.77, 1066.5), new t.VSC(8, 5.68, 14.23), new t.VSC(7, 1.43, 412.37), new t.VSC(6, 5.12, 639.9), new t.VSC(5, 3.34, 625.67), new t.VSC(3, 3.4, 1052.27), new t.VSC(3, 4.16, 728.76), new t.VSC(3, 2.9, 426.6)], Se = [new t.VSC(11, 4.75, 536.8), new t.VSC(4, 5.92, 522.58), new t.VSC(2, 5.57, 515.46), new t.VSC(2, 4.3, 543.92), new t.VSC(2, 3.69, 7.11), new t.VSC(2, 4.13, 1059.38), new t.VSC(2, 5.49, 1066.5)];
            function Te() {
            }
            Te.eclipticLongitude = function(ke) {
              var Fe = (ke - 2451545) / 365250, He = Fe * Fe, We = He * Fe, Ke = We * Fe, $ = Ke * Fe, De = l.length, Re = 0, Ie;
              for (Ie = 0; Ie < De; Ie++)
                Re += l[Ie].a * Math.cos(l[Ie].b + l[Ie].c * Fe);
              var O = o.length, Ue = 0;
              for (Ie = 0; Ie < O; Ie++)
                Ue += o[Ie].a * Math.cos(o[Ie].b + o[Ie].c * Fe);
              var $e = c.length, Ze = 0;
              for (Ie = 0; Ie < $e; Ie++)
                Ze += c[Ie].a * Math.cos(c[Ie].b + c[Ie].c * Fe);
              var Qe = _.length, Ae = 0;
              for (Ie = 0; Ie < Qe; Ie++)
                Ae += _[Ie].a * Math.cos(_[Ie].b + _[Ie].c * Fe);
              var Ne = u.length, Be = 0;
              for (Ie = 0; Ie < Ne; Ie++)
                Be += u[Ie].a * Math.cos(u[Ie].b + u[Ie].c * Fe);
              var Ge = y.length, Ye = 0;
              for (Ie = 0; Ie < Ge; Ie++)
                Ye += y[Ie].a * Math.cos(y[Ie].b + y[Ie].c * Fe);
              var je = (Re + Ue * Fe + Ze * He + Ae * We + Be * Ke + Ye * $) / 1e8;
              return je = a.CT.m360(a.CT.r2D(je)), je;
            }, Te.eclipticLatitude = function(ke) {
              var Fe = (ke - 2451545) / 365250, He = Fe * Fe, We = He * Fe, Ke = We * Fe, $ = Ke * Fe, De = g.length, Re = 0, Ie;
              for (Ie = 0; Ie < De; Ie++)
                Re += g[Ie].a * Math.cos(g[Ie].b + g[Ie].c * Fe);
              var O = Ee.length, Ue = 0;
              for (Ie = 0; Ie < O; Ie++)
                Ue += Ee[Ie].a * Math.cos(Ee[Ie].b + Ee[Ie].c * Fe);
              var $e = Ve.length, Ze = 0;
              for (Ie = 0; Ie < $e; Ie++)
                Ze += Ve[Ie].a * Math.cos(Ve[Ie].b + Ve[Ie].c * Fe);
              var Qe = Me.length, Ae = 0;
              for (Ie = 0; Ie < Qe; Ie++)
                Ae += Me[Ie].a * Math.cos(Me[Ie].b + Me[Ie].c * Fe);
              var Ne = B.length, Be = 0;
              for (Ie = 0; Ie < Ne; Ie++)
                Be += B[Ie].a * Math.cos(B[Ie].b + B[Ie].c * Fe);
              var Ge = Pe.length, Ye = 0;
              for (Ie = 0; Ie < Ge; Ie++)
                Ye += Pe[Ie].a * Math.cos(Pe[Ie].b + Pe[Ie].c * Fe);
              var je = (Re + Ue * Fe + Ze * He + Ae * We + Be * Ke + Ye * $) / 1e8;
              return je = a.CT.r2D(je), je;
            }, Te.radiusVector = function(ke) {
              var Fe = (ke - 2451545) / 365250, He = Fe * Fe, We = He * Fe, Ke = We * Fe, $ = Ke * Fe, De = k.length, Re = 0, Ie;
              for (Ie = 0; Ie < De; Ie++)
                Re += k[Ie].a * Math.cos(k[Ie].b + k[Ie].c * Fe);
              var O = b.length, Ue = 0;
              for (Ie = 0; Ie < O; Ie++)
                Ue += b[Ie].a * Math.cos(b[Ie].b + b[Ie].c * Fe);
              var $e = Le.length, Ze = 0;
              for (Ie = 0; Ie < $e; Ie++)
                Ze += Le[Ie].a * Math.cos(Le[Ie].b + Le[Ie].c * Fe);
              var Qe = xe.length, Ae = 0;
              for (Ie = 0; Ie < Qe; Ie++)
                Ae += xe[Ie].a * Math.cos(xe[Ie].b + xe[Ie].c * Fe);
              var Ne = ze.length, Be = 0;
              for (Ie = 0; Ie < Ne; Ie++)
                Be += ze[Ie].a * Math.cos(ze[Ie].b + ze[Ie].c * Fe);
              var Ge = Se.length, Ye = 0;
              for (Ie = 0; Ie < Ge; Ie++)
                Ye += Se[Ie].a * Math.cos(Se[Ie].b + Se[Ie].c * Fe);
              return (Re + Ue * Fe + Ze * He + Ae * We + Be * Ke + Ye * $) / 1e8;
            };
            var D = {};
            (0, s.registerType)("CAAJupiter", [Te, D, null]);
          }
        ),
        /***/
        "./esm/astrocalc/kepler.js": (
          /*!*********************************!*\
            !*** ./esm/astrocalc/kepler.js ***!
            \*********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAKepler: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function l() {
            }
            l.calculate = function(c, _) {
              return l.calculateIter(c, _, 53);
            }, l.calculateIter = function(c, _, u) {
              c = t.CT.d2R(c);
              var y = t.CT.PI(), g = 1;
              c < 0 && (g = -1), c = Math.abs(c) / (2 * y), c = (c - a.ss.truncate(c)) * 2 * y * g, c < 0 && (c += 2 * y), g = 1, c > y && (g = -1), c > y && (c = 2 * y - c);
              for (var Ee = y / 2, Ve = y / 4, Me = 0; Me < u; Me++) {
                var B = Ee - _ * Math.sin(Ee);
                c > B ? Ee += Ve : Ee -= Ve, Ve /= 2;
              }
              return t.CT.r2D(Ee) * g;
            };
            var o = {};
            (0, s.registerType)("CAAKepler", [l, o, null]);
          }
        ),
        /***/
        "./esm/astrocalc/mars.js": (
          /*!*******************************!*\
            !*** ./esm/astrocalc/mars.js ***!
            \*******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAMars: () => (
                /* binding */
                ze
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            );
            const l = [new t.VSC(620347712, 0, 0), new t.VSC(18656368, 5.050371, 3340.6124267), new t.VSC(1108217, 5.4009984, 6681.2248534), new t.VSC(91798, 5.75479, 10021.83728), new t.VSC(27745, 5.9705, 3.52312), new t.VSC(12316, 0.84956, 2810.92146), new t.VSC(10610, 2.93959, 2281.2305), new t.VSC(8927, 4.157, 0.0173), new t.VSC(8716, 6.1101, 13362.4497), new t.VSC(7775, 3.3397, 5621.8429), new t.VSC(6798, 0.3646, 398.149), new t.VSC(4161, 0.2281, 2942.4634), new t.VSC(3575, 1.6619, 2544.3144), new t.VSC(3075, 0.857, 191.4483), new t.VSC(2938, 6.0789, 0.0673), new t.VSC(2628, 0.6481, 3337.0893), new t.VSC(2580, 0.03, 3344.1355), new t.VSC(2389, 5.039, 796.298), new t.VSC(1799, 0.6563, 529.691), new t.VSC(1546, 2.9158, 1751.5395), new t.VSC(1528, 1.1498, 6151.5339), new t.VSC(1286, 3.068, 2146.1654), new t.VSC(1264, 3.6228, 5092.152), new t.VSC(1025, 3.6933, 8962.4553), new t.VSC(892, 0.183, 16703.062), new t.VSC(859, 2.401, 2914.014), new t.VSC(833, 4.495, 3340.63), new t.VSC(833, 2.464, 3340.595), new t.VSC(749, 3.822, 155.42), new t.VSC(724, 0.675, 3738.761), new t.VSC(713, 3.663, 1059.382), new t.VSC(655, 0.489, 3127.313), new t.VSC(636, 2.922, 8432.764), new t.VSC(553, 4.475, 1748.016), new t.VSC(550, 3.81, 0.98), new t.VSC(472, 3.625, 1194.447), new t.VSC(426, 0.554, 6283.076), new t.VSC(415, 0.497, 213.299), new t.VSC(312, 0.999, 6677.702), new t.VSC(307, 0.381, 6684.748), new t.VSC(302, 4.486, 3532.061), new t.VSC(299, 2.783, 6254.627), new t.VSC(293, 4.221, 20.775), new t.VSC(284, 5.769, 3149.164), new t.VSC(281, 5.882, 1349.867), new t.VSC(274, 0.542, 3340.545), new t.VSC(274, 0.134, 3340.68), new t.VSC(239, 5.372, 4136.91), new t.VSC(236, 5.755, 3333.499), new t.VSC(231, 1.282, 3870.303), new t.VSC(221, 3.505, 382.897), new t.VSC(204, 2.821, 1221.849), new t.VSC(193, 3.357, 3.59), new t.VSC(189, 1.491, 9492.146), new t.VSC(179, 1.006, 951.718), new t.VSC(174, 2.414, 553.569), new t.VSC(172, 0.439, 5486.778), new t.VSC(160, 3.949, 4562.461), new t.VSC(144, 1.419, 135.065), new t.VSC(140, 3.326, 2700.715), new t.VSC(138, 4.301, 7.114), new t.VSC(131, 4.045, 12303.068), new t.VSC(128, 2.208, 1592.596), new t.VSC(128, 1.807, 5088.629), new t.VSC(117, 3.128, 7903.073), new t.VSC(113, 3.701, 1589.073), new t.VSC(110, 1.052, 242.729), new t.VSC(105, 0.785, 8827.39), new t.VSC(100, 3.243, 11773.377)], o = [new t.VSC(334085627474, 0, 0), new t.VSC(1458227, 3.6042605, 3340.6124267), new t.VSC(164901, 3.926313, 6681.224853), new t.VSC(19963, 4.26594, 10021.83728), new t.VSC(3452, 4.7321, 3.5231), new t.VSC(2485, 4.6128, 13362.4497), new t.VSC(842, 4.459, 2281.23), new t.VSC(538, 5.016, 398.149), new t.VSC(521, 4.994, 3344.136), new t.VSC(433, 2.561, 191.448), new t.VSC(430, 5.316, 155.42), new t.VSC(382, 3.539, 796.298), new t.VSC(314, 4.963, 16703.062), new t.VSC(283, 3.16, 2544.314), new t.VSC(206, 4.569, 2146.165), new t.VSC(169, 1.329, 3337.089), new t.VSC(158, 4.185, 1751.54), new t.VSC(134, 2.233, 0.98), new t.VSC(134, 5.974, 1748.016), new t.VSC(118, 6.024, 6151.534), new t.VSC(117, 2.213, 1059.382), new t.VSC(114, 2.129, 1194.447), new t.VSC(114, 5.428, 3738.761), new t.VSC(91, 1.1, 1349.87), new t.VSC(85, 3.91, 553.57), new t.VSC(83, 5.3, 6684.75), new t.VSC(81, 4.43, 529.69), new t.VSC(80, 2.25, 8962.46), new t.VSC(73, 2.5, 951.72), new t.VSC(73, 5.84, 242.73), new t.VSC(71, 3.86, 2914.01), new t.VSC(68, 5.02, 382.9), new t.VSC(65, 1.02, 3340.6), new t.VSC(65, 3.05, 3340.63), new t.VSC(62, 4.15, 3149.16), new t.VSC(57, 3.89, 4136.91), new t.VSC(48, 4.87, 213.3), new t.VSC(48, 1.18, 3333.5), new t.VSC(47, 1.31, 3185.19), new t.VSC(41, 0.71, 1592.6), new t.VSC(40, 2.73, 7.11), new t.VSC(40, 5.32, 20043.67), new t.VSC(33, 5.41, 6283.08), new t.VSC(28, 0.05, 9492.15), new t.VSC(27, 3.89, 1221.85), new t.VSC(27, 5.11, 2700.72)], c = [new t.VSC(58016, 2.04979, 3340.61243), new t.VSC(54188, 0, 0), new t.VSC(13908, 2.45742, 6681.22485), new t.VSC(2465, 2.8, 10021.8373), new t.VSC(398, 3.141, 13362.45), new t.VSC(222, 3.194, 3.523), new t.VSC(121, 0.543, 155.42), new t.VSC(62, 3.49, 16703.06), new t.VSC(54, 3.54, 3344.14), new t.VSC(34, 6, 2281.23), new t.VSC(32, 4.14, 191.45), new t.VSC(30, 2, 796.3), new t.VSC(23, 4.33, 242.73), new t.VSC(22, 3.45, 398.15), new t.VSC(20, 5.42, 553.57), new t.VSC(16, 0.66, 0.98), new t.VSC(16, 6.11, 2146.17), new t.VSC(16, 1.22, 1748.02), new t.VSC(15, 6.1, 3185.19), new t.VSC(14, 4.02, 951.72), new t.VSC(14, 2.62, 1349.87), new t.VSC(13, 0.6, 1194.45), new t.VSC(12, 3.86, 6684.75), new t.VSC(11, 4.72, 2544.31), new t.VSC(10, 0.25, 382.9), new t.VSC(9, 0.68, 1059.38), new t.VSC(9, 3.83, 20043.67), new t.VSC(9, 3.88, 3738.76), new t.VSC(8, 5.46, 1751.54), new t.VSC(7, 2.58, 3149.16), new t.VSC(7, 2.38, 4136.91), new t.VSC(6, 5.48, 1592.6), new t.VSC(6, 2.34, 3097.88)], _ = [new t.VSC(1482, 0.4443, 3340.6124), new t.VSC(662, 0.885, 6681.225), new t.VSC(188, 1.288, 10021.837), new t.VSC(41, 1.65, 13362.45), new t.VSC(26, 0, 0), new t.VSC(23, 2.05, 155.42), new t.VSC(10, 1.58, 3.52), new t.VSC(8, 2, 16703.06), new t.VSC(5, 2.82, 242.73), new t.VSC(4, 2.02, 3344.14), new t.VSC(3, 4.59, 3185.19), new t.VSC(3, 0.65, 553.57)], u = [new t.VSC(114, 3.1416, 0), new t.VSC(29, 5.64, 6681.22), new t.VSC(24, 5.14, 3340.61), new t.VSC(11, 6.03, 10021.84), new t.VSC(3, 0.13, 13362.45), new t.VSC(3, 3.56, 155.42), new t.VSC(1, 0.49, 16703.06), new t.VSC(1, 1.32, 242.73)], y = [new t.VSC(1, 3.14, 0), new t.VSC(1, 4.04, 6681.22)], g = [new t.VSC(3197135, 3.7683204, 3340.6124267), new t.VSC(298033, 4.10617, 6681.224853), new t.VSC(289105, 0, 0), new t.VSC(31366, 4.44651, 10021.83728), new t.VSC(3484, 4.7881, 13362.4497), new t.VSC(443, 5.026, 3344.136), new t.VSC(443, 5.652, 3337.089), new t.VSC(399, 5.131, 16703.062), new t.VSC(293, 3.793, 2281.23), new t.VSC(182, 6.136, 6151.534), new t.VSC(163, 4.264, 529.691), new t.VSC(160, 2.232, 1059.382), new t.VSC(149, 2.165, 5621.843), new t.VSC(143, 1.182, 3340.595), new t.VSC(143, 3.213, 3340.63), new t.VSC(139, 2.418, 8962.455)], Ee = [new t.VSC(350069, 5.368478, 3340.612427), new t.VSC(14116, 3.14159, 0), new t.VSC(9671, 5.4788, 6681.2249), new t.VSC(1472, 3.2021, 10021.8373), new t.VSC(426, 3.408, 13362.45), new t.VSC(102, 0.776, 3337.089), new t.VSC(79, 3.72, 16703.06), new t.VSC(33, 3.46, 5621.84), new t.VSC(26, 2.48, 2281.23)], Ve = [new t.VSC(16727, 0.60221, 3340.61243), new t.VSC(4987, 4.1416, 0), new t.VSC(302, 3.559, 6681.225), new t.VSC(26, 1.9, 13362.45), new t.VSC(21, 0.92, 10021.84), new t.VSC(12, 2.24, 3337.09), new t.VSC(8, 2.25, 16703.06)], Me = [new t.VSC(607, 1.981, 3340.612), new t.VSC(43, 0, 0), new t.VSC(14, 1.8, 6681.22), new t.VSC(3, 3.45, 10021.84)], B = [new t.VSC(13, 0, 0), new t.VSC(11, 3.46, 3340.61), new t.VSC(1, 0.5, 6681.22)], Pe = [new t.VSC(153033488, 0, 0), new t.VSC(14184953, 3.47971284, 3340.6124267), new t.VSC(660776, 3.817834, 6681.224853), new t.VSC(46179, 4.15595, 10021.83728), new t.VSC(8110, 5.5596, 2810.9215), new t.VSC(7485, 1.7724, 5621.8429), new t.VSC(5523, 1.3644, 2281.2305), new t.VSC(3825, 4.4941, 13362.4497), new t.VSC(2484, 4.9255, 2942.4634), new t.VSC(2307, 0.0908, 2544.3144), new t.VSC(1999, 5.3606, 3337.0893), new t.VSC(1960, 4.7425, 3344.1355), new t.VSC(1167, 2.1126, 5092.152), new t.VSC(1103, 5.0091, 398.149), new t.VSC(992, 5.839, 6151.534), new t.VSC(899, 4.408, 529.691), new t.VSC(807, 2.102, 1059.382), new t.VSC(798, 3.448, 796.298), new t.VSC(741, 1.499, 2146.165), new t.VSC(726, 1.245, 8432.764), new t.VSC(692, 2.134, 8962.455), new t.VSC(633, 0.894, 3340.595), new t.VSC(633, 2.924, 3340.63), new t.VSC(630, 1.287, 1751.54), new t.VSC(574, 0.829, 2914.014), new t.VSC(526, 5.383, 3738.761), new t.VSC(473, 5.199, 3127.313), new t.VSC(348, 4.832, 16703.062), new t.VSC(284, 2.907, 3532.061), new t.VSC(280, 5.257, 6283.076), new t.VSC(276, 1.218, 6254.627), new t.VSC(275, 2.908, 1748.016), new t.VSC(270, 3.764, 5884.927), new t.VSC(239, 2.037, 1194.447), new t.VSC(234, 5.105, 5486.778), new t.VSC(228, 3.255, 6872.673), new t.VSC(223, 4.199, 3149.164), new t.VSC(219, 5.583, 191.448), new t.VSC(208, 5.255, 3340.545), new t.VSC(208, 4.846, 3340.68), new t.VSC(186, 5.699, 6677.702), new t.VSC(183, 5.081, 6684.748), new t.VSC(179, 4.184, 3333.499), new t.VSC(176, 5.953, 3870.303), new t.VSC(164, 3.799, 4136.91)], k = [new t.VSC(1107433, 2.0325052, 3340.6124267), new t.VSC(103176, 2.370718, 6681.224853), new t.VSC(12877, 0, 0), new t.VSC(10816, 2.70888, 10021.83728), new t.VSC(1195, 3.047, 13362.4497), new t.VSC(439, 2.888, 2281.23), new t.VSC(396, 3.423, 3344.136), new t.VSC(183, 1.584, 2544.314), new t.VSC(136, 3.385, 16703.062), new t.VSC(128, 6.043, 3337.089), new t.VSC(128, 0.63, 1059.382), new t.VSC(127, 1.954, 796.298), new t.VSC(118, 2.998, 2146.165), new t.VSC(88, 3.42, 398.15), new t.VSC(83, 3.86, 3738.76), new t.VSC(76, 4.45, 6151.53), new t.VSC(72, 2.76, 529.69), new t.VSC(67, 2.55, 1751.54), new t.VSC(66, 4.41, 1748.02), new t.VSC(58, 0.54, 1194.45), new t.VSC(54, 0.68, 8962.46), new t.VSC(51, 3.73, 6684.75), new t.VSC(49, 5.73, 3340.6), new t.VSC(49, 1.48, 3340.63), new t.VSC(48, 2.58, 3149.16), new t.VSC(48, 2.29, 2914.01), new t.VSC(39, 2.32, 4136.91)], b = [new t.VSC(44242, 0.47931, 3340.61243), new t.VSC(8138, 0.87, 6681.2249), new t.VSC(1275, 1.2259, 10021.8373), new t.VSC(187, 1.573, 13362.45), new t.VSC(52, 3.14, 0), new t.VSC(41, 1.97, 3344.14), new t.VSC(27, 1.92, 16703.06), new t.VSC(18, 4.43, 2281.23), new t.VSC(12, 4.53, 3185.19), new t.VSC(10, 5.39, 1059.38), new t.VSC(10, 0.42, 796.3)], Le = [new t.VSC(1113, 5.1499, 3340.6124), new t.VSC(424, 5.613, 6681.225), new t.VSC(100, 5.997, 10021.837), new t.VSC(20, 0.08, 13362.45), new t.VSC(5, 3.14, 0), new t.VSC(3, 0.43, 16703.06)], xe = [new t.VSC(20, 3.58, 3340.61), new t.VSC(16, 4.05, 6681.22), new t.VSC(6, 4.46, 10021.84), new t.VSC(2, 4.84, 13362.45)];
            function ze() {
            }
            ze.eclipticLongitude = function(Te) {
              var D = (Te - 2451545) / 365250, ke = D * D, Fe = ke * D, He = Fe * D, We = He * D, Ke = l.length, $ = 0, De;
              for (De = 0; De < Ke; De++)
                $ += l[De].a * Math.cos(l[De].b + l[De].c * D);
              var Re = o.length, Ie = 0;
              for (De = 0; De < Re; De++)
                Ie += o[De].a * Math.cos(o[De].b + o[De].c * D);
              var O = c.length, Ue = 0;
              for (De = 0; De < O; De++)
                Ue += c[De].a * Math.cos(c[De].b + c[De].c * D);
              var $e = _.length, Ze = 0;
              for (De = 0; De < $e; De++)
                Ze += _[De].a * Math.cos(_[De].b + _[De].c * D);
              var Qe = u.length, Ae = 0;
              for (De = 0; De < Qe; De++)
                Ae += u[De].a * Math.cos(u[De].b + u[De].c * D);
              var Ne = y.length, Be = 0;
              for (De = 0; De < Ne; De++)
                Be += y[De].a * Math.cos(y[De].b + y[De].c * D);
              var Ge = ($ + Ie * D + Ue * ke + Ze * Fe + Ae * He + Be * We) / 1e8;
              return Ge = a.CT.m360(a.CT.r2D(Ge)), Ge;
            }, ze.eclipticLatitude = function(Te) {
              var D = (Te - 2451545) / 365250, ke = D * D, Fe = ke * D, He = Fe * D, We = g.length, Ke = 0, $;
              for ($ = 0; $ < We; $++)
                Ke += g[$].a * Math.cos(g[$].b + g[$].c * D);
              var De = Ee.length, Re = 0;
              for ($ = 0; $ < De; $++)
                Re += Ee[$].a * Math.cos(Ee[$].b + Ee[$].c * D);
              var Ie = Ve.length, O = 0;
              for ($ = 0; $ < Ie; $++)
                O += Ve[$].a * Math.cos(Ve[$].b + Ve[$].c * D);
              var Ue = Me.length, $e = 0;
              for ($ = 0; $ < Ue; $++)
                $e += Me[$].a * Math.cos(Me[$].b + Me[$].c * D);
              var Ze = B.length, Qe = 0;
              for ($ = 0; $ < Ze; $++)
                Qe += B[$].a * Math.cos(B[$].b + B[$].c * D);
              var Ae = (Ke + Re * D + O * ke + $e * Fe + Qe * He) / 1e8;
              return Ae = a.CT.r2D(Ae), Ae;
            }, ze.radiusVector = function(Te) {
              var D = (Te - 2451545) / 365250, ke = D * D, Fe = ke * D, He = Fe * D, We = Pe.length, Ke = 0, $;
              for ($ = 0; $ < We; $++)
                Ke += Pe[$].a * Math.cos(Pe[$].b + Pe[$].c * D);
              var De = k.length, Re = 0;
              for ($ = 0; $ < De; $++)
                Re += k[$].a * Math.cos(k[$].b + k[$].c * D);
              var Ie = b.length, O = 0;
              for ($ = 0; $ < Ie; $++)
                O += b[$].a * Math.cos(b[$].b + b[$].c * D);
              var Ue = Le.length, $e = 0;
              for ($ = 0; $ < Ue; $++)
                $e += Le[$].a * Math.cos(Le[$].b + Le[$].c * D);
              var Ze = xe.length, Qe = 0;
              for ($ = 0; $ < Ze; $++)
                Qe += xe[$].a * Math.cos(xe[$].b + xe[$].c * D);
              return (Ke + Re * D + O * ke + $e * Fe + Qe * He) / 1e8;
            };
            var Se = {};
            (0, s.registerType)("CAAMars", [ze, Se, null]);
          }
        ),
        /***/
        "./esm/astrocalc/mercury.js": (
          /*!**********************************!*\
            !*** ./esm/astrocalc/mercury.js ***!
            \**********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAMercury: () => (
                /* binding */
                xe
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            );
            const l = [new t.VSC(440250710, 0, 0), new t.VSC(40989415, 1.48302034, 26087.90314157), new t.VSC(5046294, 4.47785449, 52175.8062831), new t.VSC(855347, 1.165203, 78263.709425), new t.VSC(165590, 4.119692, 104351.612566), new t.VSC(34562, 0.77931, 130439.51571), new t.VSC(7583, 3.7135, 156527.4188), new t.VSC(3560, 1.512, 1109.3786), new t.VSC(1803, 4.1033, 5661.332), new t.VSC(1726, 0.3583, 182615.322), new t.VSC(1590, 2.9951, 25028.5212), new t.VSC(1365, 4.5992, 27197.2817), new t.VSC(1017, 0.8803, 31749.2352), new t.VSC(714, 1.541, 24978.525), new t.VSC(644, 5.303, 21535.95), new t.VSC(451, 6.05, 51116.424), new t.VSC(404, 3.282, 208703.225), new t.VSC(352, 5.242, 20426.571), new t.VSC(345, 2.792, 15874.618), new t.VSC(343, 5.765, 955.6), new t.VSC(339, 5.863, 25558.212), new t.VSC(325, 1.337, 53285.185), new t.VSC(273, 2.495, 529.691), new t.VSC(264, 3.917, 57837.138), new t.VSC(260, 0.987, 4551.953), new t.VSC(239, 0.113, 1059.382), new t.VSC(235, 0.267, 11322.664), new t.VSC(217, 0.66, 13521.751), new t.VSC(209, 2.092, 47623.853), new t.VSC(183, 2.629, 27043.503), new t.VSC(182, 2.434, 25661.305), new t.VSC(176, 4.536, 51066.428), new t.VSC(173, 2.452, 24498.83), new t.VSC(142, 3.36, 37410.567), new t.VSC(138, 0.291, 10213.286), new t.VSC(125, 3.721, 39609.655), new t.VSC(118, 2.781, 77204.327), new t.VSC(106, 4.206, 19804.827)], o = [new t.VSC(2608814706223, 0, 0), new t.VSC(1126008, 6.2170397, 26087.9031416), new t.VSC(303471, 3.055655, 52175.806283), new t.VSC(80538, 6.10455, 78263.70942), new t.VSC(21245, 2.83532, 104351.61257), new t.VSC(5592, 5.8268, 130439.5157), new t.VSC(1472, 2.5185, 156527.4188), new t.VSC(388, 5.48, 182615.322), new t.VSC(352, 3.052, 1109.379), new t.VSC(103, 2.149, 208703.225), new t.VSC(94, 6.12, 27197.28), new t.VSC(91, 0, 24978.52), new t.VSC(52, 5.62, 5661.33), new t.VSC(44, 4.57, 25028.52), new t.VSC(28, 3.04, 51066.43), new t.VSC(27, 5.09, 234791.13)], c = [new t.VSC(53050, 0, 0), new t.VSC(16904, 4.69072, 26087.90314), new t.VSC(7397, 1.3474, 52175.8063), new t.VSC(3018, 4.4564, 78263.7094), new t.VSC(1107, 1.264, 104351.6126), new t.VSC(378, 4.32, 130439.516), new t.VSC(123, 1.069, 156527.419), new t.VSC(39, 4.08, 182615.32), new t.VSC(15, 4.63, 1109.38), new t.VSC(12, 0.79, 208703.23)], _ = [new t.VSC(188, 0.035, 52175.806), new t.VSC(142, 3.125, 26087.903), new t.VSC(97, 3, 78263.71), new t.VSC(44, 6.02, 104351.61), new t.VSC(35, 0, 0), new t.VSC(18, 2.78, 130439.52), new t.VSC(7, 5.82, 156527.42), new t.VSC(3, 2.57, 182615.32)], u = [new t.VSC(114, 3.1416, 0), new t.VSC(2, 2.03, 26087.9), new t.VSC(2, 1.42, 78263.71), new t.VSC(2, 4.5, 52175.81), new t.VSC(1, 4.5, 104351.61), new t.VSC(1, 1.27, 130439.52)], y = [new t.VSC(1, 3.14, 0)], g = [new t.VSC(11737529, 1.98357499, 26087.90314157), new t.VSC(2388077, 5.0373896, 52175.8062831), new t.VSC(1222840, 3.1415927, 0), new t.VSC(543252, 1.796444, 78263.709425), new t.VSC(129779, 4.832325, 104351.612566), new t.VSC(31867, 1.58088, 130439.51571), new t.VSC(7963, 4.6097, 156527.4188), new t.VSC(2014, 1.3532, 182615.322), new t.VSC(514, 4.378, 208703.325), new t.VSC(209, 2.02, 24978.525), new t.VSC(208, 4.918, 27197.282), new t.VSC(132, 1.119, 234791.128), new t.VSC(121, 1.813, 53285.185), new t.VSC(100, 5.657, 20426.571)], Ee = [new t.VSC(429151, 3.501698, 26087.903142), new t.VSC(146234, 3.141593, 0), new t.VSC(22675, 0.01515, 52175.80628), new t.VSC(10895, 0.4854, 78263.70942), new t.VSC(6353, 3.4294, 104351.6126), new t.VSC(2496, 0.1605, 130439.5157), new t.VSC(860, 3.185, 156527.419), new t.VSC(278, 6.21, 182615.322), new t.VSC(86, 2.95, 208703.23), new t.VSC(28, 0.29, 27197.28), new t.VSC(26, 5.98, 234791.13)], Ve = [new t.VSC(11831, 4.79066, 26087.90314), new t.VSC(1914, 0, 0), new t.VSC(1045, 1.2122, 52175.8063), new t.VSC(266, 4.434, 78263.709), new t.VSC(170, 1.623, 104351.613), new t.VSC(96, 4.8, 130439.52), new t.VSC(45, 1.61, 156527.42), new t.VSC(18, 4.67, 182615.32), new t.VSC(7, 1.43, 208703.23)], Me = [new t.VSC(235, 0.354, 26087.903), new t.VSC(161, 0, 0), new t.VSC(19, 4.36, 52175.81), new t.VSC(6, 2.51, 78263.71), new t.VSC(5, 6.14, 104351.61), new t.VSC(3, 3.12, 130439.52), new t.VSC(2, 6.27, 156527.42)], B = [new t.VSC(4, 1.75, 26087.9), new t.VSC(1, 3.14, 0)], Pe = [new t.VSC(39528272, 0, 0), new t.VSC(7834132, 6.1923372, 26087.9031416), new t.VSC(795526, 2.959897, 52175.806283), new t.VSC(121282, 6.010642, 78263.709425), new t.VSC(21922, 2.7782, 104351.61257), new t.VSC(4354, 5.8289, 130439.5157), new t.VSC(918, 2.597, 156527.419), new t.VSC(290, 1.424, 25028.521), new t.VSC(260, 3.028, 27197.282), new t.VSC(202, 5.647, 182615.322), new t.VSC(201, 5.592, 31749.235), new t.VSC(142, 6.253, 24978.525), new t.VSC(100, 3.734, 21535.95)], k = [new t.VSC(217348, 4.656172, 26087.903142), new t.VSC(44142, 1.42386, 52175.80628), new t.VSC(10094, 4.47466, 78263.70942), new t.VSC(2433, 1.2423, 104351.6126), new t.VSC(1624, 0, 0), new t.VSC(604, 4.293, 130439.516), new t.VSC(153, 1.061, 156527.419), new t.VSC(39, 4.11, 182615.32)], b = [new t.VSC(3118, 3.0823, 26087.9031), new t.VSC(1245, 6.1518, 52175.8063), new t.VSC(425, 2.926, 78263.709), new t.VSC(136, 5.98, 104351.613), new t.VSC(42, 2.75, 130439.52), new t.VSC(22, 3.14, 0), new t.VSC(13, 5.8, 156527.42)], Le = [new t.VSC(33, 1.68, 26087.9), new t.VSC(24, 4.63, 52175.81), new t.VSC(12, 1.39, 78263.71), new t.VSC(5, 4.44, 104351.61), new t.VSC(2, 1.21, 130439.52)];
            function xe() {
            }
            xe.eclipticLongitude = function(Se) {
              var Te = (Se - 2451545) / 365250, D = Te * Te, ke = D * Te, Fe = ke * Te, He = Fe * Te, We = l.length, Ke = 0, $;
              for ($ = 0; $ < We; $++)
                Ke += l[$].a * Math.cos(l[$].b + l[$].c * Te);
              var De = o.length, Re = 0;
              for ($ = 0; $ < De; $++)
                Re += o[$].a * Math.cos(o[$].b + o[$].c * Te);
              var Ie = c.length, O = 0;
              for ($ = 0; $ < Ie; $++)
                O += c[$].a * Math.cos(c[$].b + c[$].c * Te);
              var Ue = _.length, $e = 0;
              for ($ = 0; $ < Ue; $++)
                $e += _[$].a * Math.cos(_[$].b + _[$].c * Te);
              var Ze = u.length, Qe = 0;
              for ($ = 0; $ < Ze; $++)
                Qe += u[$].a * Math.cos(u[$].b + u[$].c * Te);
              var Ae = y.length, Ne = 0;
              for ($ = 0; $ < Ae; $++)
                Ne += y[$].a * Math.cos(y[$].b + y[$].c * Te);
              var Be = (Ke + Re * Te + O * D + $e * ke + Qe * Fe + Ne * He) / 1e8;
              return Be = a.CT.m360(a.CT.r2D(Be)), Be;
            }, xe.eclipticLatitude = function(Se) {
              var Te = (Se - 2451545) / 365250, D = Te * Te, ke = D * Te, Fe = ke * Te, He = g.length, We = 0, Ke;
              for (Ke = 0; Ke < He; Ke++)
                We += g[Ke].a * Math.cos(g[Ke].b + g[Ke].c * Te);
              var $ = Ee.length, De = 0;
              for (Ke = 0; Ke < $; Ke++)
                De += Ee[Ke].a * Math.cos(Ee[Ke].b + Ee[Ke].c * Te);
              var Re = Ve.length, Ie = 0;
              for (Ke = 0; Ke < Re; Ke++)
                Ie += Ve[Ke].a * Math.cos(Ve[Ke].b + Ve[Ke].c * Te);
              var O = Me.length, Ue = 0;
              for (Ke = 0; Ke < O; Ke++)
                Ue += Me[Ke].a * Math.cos(Me[Ke].b + Me[Ke].c * Te);
              var $e = B.length, Ze = 0;
              for (Ke = 0; Ke < $e; Ke++)
                Ze += B[Ke].a * Math.cos(B[Ke].b + B[Ke].c * Te);
              var Qe = (We + De * Te + Ie * D + Ue * ke + Ze * Fe) / 1e8;
              return Qe = a.CT.r2D(Qe), Qe;
            }, xe.radiusVector = function(Se) {
              var Te = (Se - 2451545) / 365250, D = Te * Te, ke = D * Te, Fe = Pe.length, He = 0, We;
              for (We = 0; We < Fe; We++)
                He += Pe[We].a * Math.cos(Pe[We].b + Pe[We].c * Te);
              var Ke = k.length, $ = 0;
              for (We = 0; We < Ke; We++)
                $ += k[We].a * Math.cos(k[We].b + k[We].c * Te);
              var De = b.length, Re = 0;
              for (We = 0; We < De; We++)
                Re += b[We].a * Math.cos(b[We].b + b[We].c * Te);
              var Ie = Le.length, O = 0;
              for (We = 0; We < Ie; We++)
                O += Le[We].a * Math.cos(Le[We].b + Le[We].c * Te);
              return (He + $ * Te + Re * D + O * ke) / 1e8;
            };
            var ze = {};
            (0, s.registerType)("CAAMercury", [xe, ze, null]);
          }
        ),
        /***/
        "./esm/astrocalc/moon.js": (
          /*!*******************************!*\
            !*** ./esm/astrocalc/moon.js ***!
            \*******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAMoon: () => (
                /* binding */
                Me
              ),
              /* harmony export */
              MoonCoefficient1: () => (
                /* binding */
                o
              ),
              /* harmony export */
              MoonCoefficient2: () => (
                /* binding */
                _
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            ), l = n(
              /*! ./nutation.js */
              "./esm/astrocalc/nutation.js"
            );
            function o(Pe, k, b, Le) {
              this.d = 0, this.m = 0, this.mdash = 0, this.f = 0, this.d = Pe, this.m = k, this.mdash = b, this.f = Le;
            }
            var c = {};
            (0, s.registerType)("MoonCoefficient1", [o, c, null]);
            function _(Pe, k) {
              this.a = 0, this.b = 0, this.a = Pe, this.b = k;
            }
            var u = {};
            (0, s.registerType)("MoonCoefficient2", [_, u, null]);
            const y = [new o(0, 0, 1, 0), new o(2, 0, -1, 0), new o(2, 0, 0, 0), new o(0, 0, 2, 0), new o(0, 1, 0, 0), new o(0, 0, 0, 2), new o(2, 0, -2, 0), new o(2, -1, -1, 0), new o(2, 0, 1, 0), new o(2, -1, 0, 0), new o(0, 1, -1, 0), new o(1, 0, 0, 0), new o(0, 1, 1, 0), new o(2, 0, 0, -2), new o(0, 0, 1, 2), new o(0, 0, 1, -2), new o(4, 0, -1, 0), new o(0, 0, 3, 0), new o(4, 0, -2, 0), new o(2, 1, -1, 0), new o(2, 1, 0, 0), new o(1, 0, -1, 0), new o(1, 1, 0, 0), new o(2, -1, 1, 0), new o(2, 0, 2, 0), new o(4, 0, 0, 0), new o(2, 0, -3, 0), new o(0, 1, -2, 0), new o(2, 0, -1, 2), new o(2, -1, -2, 0), new o(1, 0, 1, 0), new o(2, -2, 0, 0), new o(0, 1, 2, 0), new o(0, 2, 0, 0), new o(2, -2, -1, 0), new o(2, 0, 1, -2), new o(2, 0, 0, 2), new o(4, -1, -1, 0), new o(0, 0, 2, 2), new o(3, 0, -1, 0), new o(2, 1, 1, 0), new o(4, -1, -2, 0), new o(0, 2, -1, 0), new o(2, 2, -1, 0), new o(2, 1, -2, 0), new o(2, -1, 0, -2), new o(4, 0, 1, 0), new o(0, 0, 4, 0), new o(4, -1, 0, 0), new o(1, 0, -2, 0), new o(2, 1, 0, -2), new o(0, 0, 2, -2), new o(1, 1, 1, 0), new o(3, 0, -2, 0), new o(4, 0, -3, 0), new o(2, -1, 2, 0), new o(0, 2, 1, 0), new o(1, 1, -1, 0), new o(2, 0, 3, 0), new o(2, 0, -1, -2)], g = [new _(6288774, -20905355), new _(1274027, -3699111), new _(658314, -2955968), new _(213618, -569925), new _(-185116, 48888), new _(-114332, -3149), new _(58793, 246158), new _(57066, -152138), new _(53322, -170733), new _(45758, -204586), new _(-40923, -129620), new _(-34720, 108743), new _(-30383, 104755), new _(15327, 10321), new _(-12528, 0), new _(10980, 79661), new _(10675, -34782), new _(10034, -23210), new _(8548, -21636), new _(-7888, 24208), new _(-6766, 30824), new _(-5163, -8379), new _(4987, -16675), new _(4036, -12831), new _(3994, -10445), new _(3861, -11650), new _(3665, 14403), new _(-2689, -7003), new _(-2602, 0), new _(2390, 10056), new _(-2348, 6322), new _(2236, -9884), new _(-2120, 5751), new _(-2069, 0), new _(2048, -4950), new _(-1773, 4130), new _(-1595, 0), new _(1215, -3958), new _(-1110, 0), new _(-892, 3258), new _(-810, 2616), new _(759, -1897), new _(-713, -2117), new _(-700, 2354), new _(691, 0), new _(596, 0), new _(549, -1423), new _(537, -1117), new _(520, -1571), new _(-487, -1739), new _(-399, 0), new _(-381, -4421), new _(351, 0), new _(-340, 0), new _(330, 0), new _(327, 0), new _(-323, 1165), new _(299, 0), new _(294, 0), new _(0, 8752)], Ee = [new o(0, 0, 0, 1), new o(0, 0, 1, 1), new o(0, 0, 1, -1), new o(2, 0, 0, -1), new o(2, 0, -1, 1), new o(2, 0, -1, -1), new o(2, 0, 0, 1), new o(0, 0, 2, 1), new o(2, 0, 1, -1), new o(0, 0, 2, -1), new o(2, -1, 0, -1), new o(2, 0, -2, -1), new o(2, 0, 1, 1), new o(2, 1, 0, -1), new o(2, -1, -1, 1), new o(2, -1, 0, 1), new o(2, -1, -1, -1), new o(0, 1, -1, -1), new o(4, 0, -1, -1), new o(0, 1, 0, 1), new o(0, 0, 0, 3), new o(0, 1, -1, 1), new o(1, 0, 0, 1), new o(0, 1, 1, 1), new o(0, 1, 1, -1), new o(0, 1, 0, -1), new o(1, 0, 0, -1), new o(0, 0, 3, 1), new o(4, 0, 0, -1), new o(4, 0, -1, 1), new o(0, 0, 1, -3), new o(4, 0, -2, 1), new o(2, 0, 0, -3), new o(2, 0, 2, -1), new o(2, -1, 1, -1), new o(2, 0, -2, 1), new o(0, 0, 3, -1), new o(2, 0, 2, 1), new o(2, 0, -3, -1), new o(2, 1, -1, 1), new o(2, 1, 0, 1), new o(4, 0, 0, 1), new o(2, -1, 1, 1), new o(2, -2, 0, -1), new o(0, 0, 1, 3), new o(2, 1, 1, -1), new o(1, 1, 0, -1), new o(1, 1, 0, 1), new o(0, 1, -2, -1), new o(2, 1, -1, -1), new o(1, 0, 1, 1), new o(2, -1, -2, -1), new o(0, 1, 2, 1), new o(4, 0, -2, -1), new o(4, -1, -1, -1), new o(1, 0, 1, -1), new o(4, 0, 1, -1), new o(1, 0, -1, -1), new o(4, -1, 0, -1), new o(2, -2, 0, 1)], Ve = [5128122, 280602, 277693, 173237, 55413, 46271, 32573, 17198, 9266, 8822, 8216, 4324, 4200, -3359, 2463, 2211, 2065, -1870, 1828, -1794, -1749, -1565, -1491, -1475, -1410, -1344, -1335, 1107, 1021, 833, 777, 671, 607, 596, 491, -451, 439, 422, 421, -366, -351, 331, 315, 302, -283, -229, 223, 223, -220, -220, -185, 181, -177, 176, 166, -164, 132, -119, 115, 107];
            function Me() {
            }
            Me.meanLongitude = function(Pe) {
              var k = (Pe - 2451545) / 36525, b = k * k, Le = b * k, xe = Le * k;
              return a.CT.m360(218.3164477 + 481267.88123421 * k - 15786e-7 * b + Le / 538841 - xe / 65194e3);
            }, Me.meanElongation = function(Pe) {
              var k = (Pe - 2451545) / 36525, b = k * k, Le = b * k, xe = Le * k;
              return a.CT.m360(297.8501921 + 445267.1114034 * k - 18819e-7 * b + Le / 545868 - xe / 113065e3);
            }, Me.meanAnomaly = function(Pe) {
              var k = (Pe - 2451545) / 36525, b = k * k, Le = b * k, xe = Le * k;
              return a.CT.m360(134.9633964 + 477198.8675055 * k + 87414e-7 * b + Le / 69699 - xe / 14712e3);
            }, Me.argumentOfLatitude = function(Pe) {
              var k = (Pe - 2451545) / 36525, b = k * k, Le = b * k, xe = Le * k;
              return a.CT.m360(93.272095 + 483202.0175233 * k - 36539e-7 * b - Le / 3526e3 + xe / 86331e4);
            }, Me.meanLongitudeAscendingNode = function(Pe) {
              var k = (Pe - 2451545) / 36525, b = k * k, Le = b * k, xe = Le * k;
              return a.CT.m360(125.0445479 - 1934.1362891 * k + 20754e-7 * b + Le / 467441 - xe / 60616e3);
            }, Me.meanLongitudePerigee = function(Pe) {
              var k = (Pe - 2451545) / 36525, b = k * k, Le = b * k, xe = Le * k;
              return a.CT.m360(83.3532465 + 4069.0137287 * k - 0.01032 * b - Le / 80053 + xe / 18999e3);
            }, Me.trueLongitudeAscendingNode = function(Pe) {
              var k = Me.meanLongitudeAscendingNode(Pe), b = Me.meanElongation(Pe);
              b = a.CT.d2R(b);
              var Le = t.CAAEarth.sunMeanAnomaly(Pe);
              Le = a.CT.d2R(Le);
              var xe = Me.meanAnomaly(Pe);
              xe = a.CT.d2R(xe);
              var ze = Me.argumentOfLatitude(Pe);
              return ze = a.CT.d2R(ze), k -= 1.4979 * Math.sin(2 * (b - ze)), k -= 0.15 * Math.sin(Le), k -= 0.1226 * Math.sin(2 * b), k += 0.1176 * Math.sin(2 * ze), k -= 0.0801 * Math.sin(2 * (xe - ze)), a.CT.m360(k);
            }, Me.eclipticLongitude = function(Pe) {
              var k = Me.meanLongitude(Pe), b = k;
              k = a.CT.d2R(k);
              var Le = Me.meanElongation(Pe);
              Le = a.CT.d2R(Le);
              var xe = t.CAAEarth.sunMeanAnomaly(Pe);
              xe = a.CT.d2R(xe);
              var ze = Me.meanAnomaly(Pe);
              ze = a.CT.d2R(ze);
              var Se = Me.argumentOfLatitude(Pe);
              Se = a.CT.d2R(Se);
              var Te = t.CAAEarth.eccentricity(Pe), D = (Pe - 2451545) / 36525, ke = a.CT.m360(119.75 + 131.849 * D);
              ke = a.CT.d2R(ke);
              var Fe = a.CT.m360(53.09 + 479264.29 * D);
              Fe = a.CT.d2R(Fe);
              var He = a.CT.m360(313.45 + 481266.484 * D);
              He = a.CT.d2R(He);
              var We = y.length;
              console.assert(g.length === We);
              for (var Ke = 0, $ = 0; $ < We; $++) {
                var De = g[$].a * Math.sin(y[$].d * Le + y[$].m * xe + y[$].mdash * ze + y[$].f * Se);
                y[$].m && (De *= Te), Ke += De;
              }
              Ke += 3958 * Math.sin(ke), Ke += 1962 * Math.sin(k - Se), Ke += 318 * Math.sin(Fe);
              var Re = l.CAANutation.nutationInLongitude(Pe);
              return a.CT.m360(b + Ke / 1e6 + Re / 3600);
            }, Me.eclipticLatitude = function(Pe) {
              var k = Me.meanLongitude(Pe);
              k = a.CT.d2R(k);
              var b = Me.meanElongation(Pe);
              b = a.CT.d2R(b);
              var Le = t.CAAEarth.sunMeanAnomaly(Pe);
              Le = a.CT.d2R(Le);
              var xe = Me.meanAnomaly(Pe);
              xe = a.CT.d2R(xe);
              var ze = Me.argumentOfLatitude(Pe);
              ze = a.CT.d2R(ze);
              var Se = t.CAAEarth.eccentricity(Pe), Te = (Pe - 2451545) / 36525, D = a.CT.m360(119.75 + 131.849 * Te);
              D = a.CT.d2R(D);
              var ke = a.CT.m360(53.09 + 479264.29 * Te);
              ke = a.CT.d2R(ke);
              var Fe = a.CT.m360(313.45 + 481266.484 * Te);
              Fe = a.CT.d2R(Fe);
              var He = Ee.length;
              console.assert(Ve.length === He);
              for (var We = 0, Ke = 0; Ke < He; Ke++) {
                var $ = Ve[Ke] * Math.sin(Ee[Ke].d * b + Ee[Ke].m * Le + Ee[Ke].mdash * xe + Ee[Ke].f * ze);
                Ee[Ke].m && ($ *= Se), We += $;
              }
              return We -= 2235 * Math.sin(k), We += 382 * Math.sin(Fe), We += 175 * Math.sin(D - ze), We += 175 * Math.sin(D + ze), We += 127 * Math.sin(k - xe), We -= 115 * Math.sin(k + xe), We / 1e6;
            }, Me.radiusVector = function(Pe) {
              var k = Me.meanLongitude(Pe);
              k = a.CT.d2R(k);
              var b = Me.meanElongation(Pe);
              b = a.CT.d2R(b);
              var Le = t.CAAEarth.sunMeanAnomaly(Pe);
              Le = a.CT.d2R(Le);
              var xe = Me.meanAnomaly(Pe);
              xe = a.CT.d2R(xe);
              var ze = Me.argumentOfLatitude(Pe);
              ze = a.CT.d2R(ze);
              var Se = t.CAAEarth.eccentricity(Pe), Te = (Pe - 2451545) / 36525, D = a.CT.m360(119.75 + 131.849 * Te);
              D = a.CT.d2R(D);
              var ke = a.CT.m360(53.09 + 479264.29 * Te);
              ke = a.CT.d2R(ke);
              var Fe = a.CT.m360(313.45 + 481266.484 * Te);
              Fe = a.CT.d2R(Fe);
              var He = y.length;
              console.assert(g.length === He);
              for (var We = 0, Ke = 0; Ke < He; Ke++) {
                var $ = g[Ke].b * Math.cos(y[Ke].d * b + y[Ke].m * Le + y[Ke].mdash * xe + y[Ke].f * ze);
                y[Ke].m && ($ *= Se), We += $;
              }
              return 385000.56 + We / 1e3;
            }, Me.radiusVectorToHorizontalParallax = function(Pe) {
              return a.CT.r2D(Math.asin(6378.14 / Pe));
            }, Me.horizontalParallaxToRadiusVector = function(Pe) {
              return 6378.14 / Math.sin(a.CT.d2R(Pe));
            };
            var B = {};
            (0, s.registerType)("CAAMoon", [Me, B, null]);
          }
        ),
        /***/
        "./esm/astrocalc/moon_illuminated_fraction.js": (
          /*!****************************************************!*\
            !*** ./esm/astrocalc/moon_illuminated_fraction.js ***!
            \****************************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              MIFR: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t() {
            }
            t.geocentricElongation = function(o, c, _, u) {
              return o = a.CT.d2R(o * 15), _ = a.CT.d2R(_ * 15), c = a.CT.d2R(c), u = a.CT.d2R(u), a.CT.r2D(Math.acos(Math.sin(u) * Math.sin(c) + Math.cos(u) * Math.cos(c) * Math.cos(_ - o)));
            }, t.phaseAngle = function(o, c, _) {
              return o = a.CT.d2R(o), a.CT.m360(a.CT.r2D(Math.atan2(_ * Math.sin(o), c - _ * Math.cos(o))));
            }, t.illuminatedFraction = function(o) {
              return o = a.CT.d2R(o), (1 + Math.cos(o)) / 2;
            }, t.positionAngle = function(o, c, _, u) {
              return o = a.CT.h2R(o), _ = a.CT.h2R(_), c = a.CT.d2R(c), u = a.CT.d2R(u), a.CT.m360(a.CT.r2D(Math.atan2(Math.cos(c) * Math.sin(o - _), Math.sin(c) * Math.cos(u) - Math.cos(c) * Math.sin(u) * Math.cos(o - _))));
            };
            var l = {};
            (0, s.registerType)("MIFR", [t, l, null]);
          }
        ),
        /***/
        "./esm/astrocalc/moon_nodes.js": (
          /*!*************************************!*\
            !*** ./esm/astrocalc/moon_nodes.js ***!
            \*************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAMoonNodes: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t() {
            }
            t.k = function(o) {
              return 13.4223 * (o - 2000.05);
            }, t.passageThroNode = function(o) {
              var c = o / 1342.23, _ = c * c, u = _ * c, y = u * c, g = a.CT.m360(183.638 + 331.73735682 * o + 14852e-7 * _ + 209e-8 * u - 1e-8 * y), Ee = a.CT.m360(17.4006 + 26.8203725 * o + 1186e-7 * _ + 6e-8 * u), Ve = a.CT.m360(38.3776 + 355.52747313 * o + 0.0123499 * _ + 14627e-9 * u - 69e-9 * y), Me = a.CT.m360(123.9767 - 1.44098956 * o + 20608e-7 * _ + 214e-8 * u - 16e-9 * y), B = a.CT.m360(299.75 + 132.85 * c - 9173e-6 * _), Pe = a.CT.m360(Me + 272.75 - 2.3 * c), k = 1 - 2516e-6 * c - 74e-7 * _;
              g = a.CT.d2R(g);
              var b = 2 * g, Le = b * b;
              Ee = a.CT.d2R(Ee), Ve = a.CT.d2R(Ve);
              var xe = 2 * Ve;
              Me = a.CT.d2R(Me), B = a.CT.d2R(B), Pe = a.CT.d2R(Pe);
              var ze = 24515651619e-4 + 27.212220817 * o + 2762e-7 * _ + 21e-9 * u - 88e-12 * y - 0.4721 * Math.sin(Ve) - 0.1649 * Math.sin(b) - 0.0868 * Math.sin(b - Ve) + 84e-4 * Math.sin(b + Ve) - k * 83e-4 * Math.sin(b - Ee) - k * 39e-4 * Math.sin(b - Ee - Ve) + 34e-4 * Math.sin(xe) - 31e-4 * Math.sin(b - xe) + k * 3e-3 * Math.sin(b + Ee) + k * 28e-4 * Math.sin(Ee - Ve) + k * 26e-4 * Math.sin(Ee) + 25e-4 * Math.sin(Le) + 24e-4 * Math.sin(g) + k * 22e-4 * Math.sin(Ee + Ve) + 17e-4 * Math.sin(Me) + 14e-4 * Math.sin(Le - Ve) + k * 5e-4 * Math.sin(b + Ee - Ve) + k * 4e-4 * Math.sin(b - Ee + Ve) - k * 3e-4 * Math.sin(b - Ee * Ee) + k * 3e-4 * Math.sin(Le - Ee) + 3e-4 * Math.sin(B) + 3e-4 * Math.sin(Pe);
              return ze;
            };
            var l = {};
            (0, s.registerType)("CAAMoonNodes", [t, l, null]);
          }
        ),
        /***/
        "./esm/astrocalc/moon_perigee_apogee.js": (
          /*!**********************************************!*\
            !*** ./esm/astrocalc/moon_perigee_apogee.js ***!
            \**********************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAMoonPerigeeApogee: () => (
                /* binding */
                y
              ),
              /* harmony export */
              MPAC: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t(Ee, Ve, Me, B, Pe) {
              this.d = 0, this.m = 0, this.f = 0, this.c = 0, this.t = 0, this.d = Ee, this.m = Ve, this.f = Me, this.c = B, this.t = Pe;
            }
            var l = {};
            (0, s.registerType)("MPAC", [t, l, null]);
            const o = [new t(2, 0, 0, -1.6769, 0), new t(4, 0, 0, 0.4589, 0), new t(6, 0, 0, -0.1856, 0), new t(8, 0, 0, 0.0883, 0), new t(2, -1, 0, -0.0773, 19e-5), new t(0, 1, 0, 0.0502, -13e-5), new t(10, 0, 0, -0.046, 0), new t(4, -1, 0, 0.0422, -11e-5), new t(6, -1, 0, -0.0256, 0), new t(12, 0, 0, 0.0253, 0), new t(1, 0, 0, 0.0237, 0), new t(8, -1, 0, 0.0162, 0), new t(14, 0, 0, -0.0145, 0), new t(0, 0, 2, 0.0129, 0), new t(3, 0, 0, -0.0112, 0), new t(10, -1, 0, -0.0104, 0), new t(16, 0, 0, 86e-4, 0), new t(12, -1, 0, 69e-4, 0), new t(5, 0, 0, 66e-4, 0), new t(2, 0, 2, -53e-4, 0), new t(18, 0, 0, -52e-4, 0), new t(14, -1, 0, -46e-4, 0), new t(7, 0, 0, -41e-4, 0), new t(2, 1, 0, 4e-3, 0), new t(20, 0, 0, 32e-4, 0), new t(1, 1, 0, -32e-4, 0), new t(16, -1, 0, 31e-4, 0), new t(4, 1, 0, -29e-4, 0), new t(9, 0, 0, 27e-4, 0), new t(4, 0, 2, 27e-4, 0), new t(2, -2, 0, -27e-4, 0), new t(4, -2, 0, 24e-4, 0), new t(6, -2, 0, -21e-4, 0), new t(22, 0, 0, -21e-4, 0), new t(18, -1, 0, -21e-4, 0), new t(6, 1, 0, 19e-4, 0), new t(11, 0, 0, -18e-4, 0), new t(8, 1, 0, -14e-4, 0), new t(4, 0, -2, -14e-4, 0), new t(6, 0, 2, -14e-4, 0), new t(3, 1, 0, 14e-4, 0), new t(5, 1, 0, -14e-4, 0), new t(13, 0, 0, 13e-4, 0), new t(20, -1, 0, 13e-4, 0), new t(3, 2, 0, 11e-4, 0), new t(4, -2, 2, -11e-4, 0), new t(1, 2, 0, -11e-4, 0), new t(22, -1, 0, -9e-4, 0), new t(0, 0, 4, -8e-4, 0), new t(6, 0, -2, 8e-4, 0), new t(2, 1, -2, 8e-4, 0), new t(0, 2, 0, 7e-4, 0), new t(0, -1, 2, 7e-4, 0), new t(2, 0, 4, 7e-4, 0), new t(0, -2, 2, -6e-4, 0), new t(2, 2, -2, -6e-4, 0), new t(24, 0, 0, 6e-4, 0), new t(4, 0, -4, 5e-4, 0), new t(2, 2, 0, 5e-4, 0), new t(1, -1, 0, -4e-4, 0)], c = [new t(2, 0, 0, 0.4392, 0), new t(4, 0, 0, 0.0684, 0), new t(0, 1, 0, 0.0456, -11e-5), new t(2, -1, 0, 0.0426, -11e-5), new t(0, 0, 2, 0.0212, 0), new t(1, 0, 0, -0.0189, 0), new t(6, 0, 0, 0.0144, 0), new t(4, -1, 0, 0.0113, 0), new t(2, 0, 2, 47e-4, 0), new t(1, 1, 0, 36e-4, 0), new t(8, 0, 0, 35e-4, 0), new t(6, -1, 0, 34e-4, 0), new t(2, 0, -2, -34e-4, 0), new t(2, -2, 0, 22e-4, 0), new t(3, 0, 0, -17e-4, 0), new t(4, 0, 2, 13e-4, 0), new t(8, -1, 0, 11e-4, 0), new t(4, -2, 0, 1e-3, 0), new t(10, 0, 0, 9e-4, 0), new t(3, 1, 0, 7e-4, 0), new t(0, 2, 0, 6e-4, 0), new t(2, 1, 0, 5e-4, 0), new t(2, 2, 0, 5e-4, 0), new t(6, 0, 2, 4e-4, 0), new t(6, -2, 0, 4e-4, 0), new t(10, -1, 0, 4e-4, 0), new t(5, 0, 0, -4e-4, 0), new t(4, 0, -2, -4e-4, 0), new t(0, 1, 2, 3e-4, 0), new t(12, 0, 0, 3e-4, 0), new t(2, -1, 2, 3e-4, 0), new t(1, -1, 0, -3e-4, 0)], _ = [new t(2, 0, 0, 63.224, 0), new t(4, 0, 0, -6.99, 0), new t(2, -1, 0, 2.834, 0), new t(2, -1, 0, 0, -71e-4), new t(6, 0, 0, 1.927, 0), new t(1, 0, 0, -1.263, 0), new t(8, 0, 0, -0.702, 0), new t(0, 1, 0, 0.696, 0), new t(0, 1, 0, 0, -17e-4), new t(0, 0, 2, -0.69, 0), new t(4, -1, 0, -0.629, 0), new t(4, -1, 0, 0, 16e-4), new t(2, 0, -2, -0.392, 0), new t(10, 0, 0, 0.297, 0), new t(6, -1, 0, 0.26, 0), new t(3, 0, 0, 0.201, 0), new t(2, 1, 0, -0.161, 0), new t(1, 1, 0, 0.157, 0), new t(12, 0, 0, -0.138, 0), new t(8, -1, 0, -0.127, 0), new t(2, 0, 2, 0.104, 0), new t(2, -2, 0, 0.104, 0), new t(5, 0, 0, -0.079, 0), new t(14, 0, 0, 0.068, 0), new t(10, -1, 0, 0.067, 0), new t(4, 1, 0, 0.054, 0), new t(12, -1, 0, -0.038, 0), new t(4, -2, 0, -0.038, 0), new t(7, 0, 0, 0.037, 0), new t(4, 0, 2, -0.037, 0), new t(16, 0, 0, -0.035, 0), new t(3, 1, 0, -0.03, 0), new t(1, -1, 0, 0.029, 0), new t(6, 1, 0, -0.025, 0), new t(0, 2, 0, 0.023, 0), new t(14, -1, 0, 0.023, 0), new t(2, 2, 0, -0.023, 0), new t(6, -2, 0, 0.022, 0), new t(2, -1, -2, -0.021, 0), new t(9, 0, 0, -0.02, 0), new t(18, 0, 0, 0.019, 0), new t(6, 0, 2, 0.017, 0), new t(0, -1, 2, 0.014, 0), new t(16, -1, 0, -0.014, 0), new t(4, 0, -20, 0.013, 0), new t(8, 1, 0, 0.012, 0), new t(11, 0, 0, 0.011, 0), new t(5, 1, 0, 0.01, 0), new t(20, 0, 0, -0.01, 0)], u = [new t(2, 0, 0, -9.147, 0), new t(1, 0, 0, -0.841, 0), new t(0, 0, 2, 0.697, 0), new t(0, 1, 0, -0.656, 16e-4), new t(4, 0, 0, 0.355, 0), new t(2, -1, 0, 0.159, 0), new t(1, 1, 0, 0.127, 0), new t(4, -1, 0, 0.065, 0), new t(6, 0, 0, 0.052, 0), new t(2, 1, 0, 0.043, 0), new t(2, 0, 2, 0.031, 0), new t(2, 0, -2, -0.023, 0), new t(2, -2, 0, 0.022, 0), new t(2, 2, 0, 0.019, 0), new t(0, 2, 0, -0.016, 0), new t(6, -1, 0, 0.014, 0), new t(8, 0, 0, 0.01, 0)];
            function y() {
            }
            y.k = function(Ee) {
              return 13.2555 * (Ee - 1999.97);
            }, y.meanPerigee = function(Ee) {
              var Ve = Ee / 1325.55, Me = Ve * Ve, B = Me * Ve, Pe = B * Ve;
              return 24515346698e-4 + 27.55454989 * Ee - 6691e-7 * Me - 1098e-9 * B + 52e-10 * Pe;
            }, y.meanApogee = function(Ee) {
              return y.meanPerigee(Ee);
            }, y.truePerigee = function(Ee) {
              var Ve = y.meanPerigee(Ee), Me = Ee / 1325.55, B = Me * Me, Pe = B * Me, k = Pe * Me, b = a.CT.m360(171.9179 + 335.9106046 * Ee - 0.0100383 * B - 1156e-8 * Pe + 55e-9 * k);
              b = a.CT.d2R(b);
              var Le = a.CT.m360(347.3477 + 27.1577721 * Ee - 813e-6 * B - 1e-6 * Pe);
              Le = a.CT.d2R(Le);
              var xe = a.CT.m360(316.6109 + 364.5287911 * Ee - 0.0125053 * B - 148e-7 * Pe);
              xe = a.CT.d2R(xe);
              for (var ze = o.length, Se = 0, Te = 0; Te < ze; Te++)
                Se += o[Te].c * Math.sin(b * o[Te].d + Le * o[Te].m + xe * o[Te].f + Me * o[Te].t);
              return Ve + Se;
            }, y.trueApogee = function(Ee) {
              var Ve = y.meanApogee(Ee), Me = Ee / 1325.55, B = Me * Me, Pe = B * Me, k = Pe * Me, b = a.CT.m360(171.9179 + 335.9106046 * Ee - 0.0100383 * B - 1156e-8 * Pe + 55e-9 * k);
              b = a.CT.d2R(b);
              var Le = a.CT.m360(347.3477 + 27.1577721 * Ee - 813e-6 * B - 1e-6 * Pe);
              Le = a.CT.d2R(Le);
              var xe = a.CT.m360(316.6109 + 364.5287911 * Ee - 0.0125053 * B - 148e-7 * Pe);
              xe = a.CT.d2R(xe);
              for (var ze = c.length, Se = 0, Te = 0; Te < ze; Te++)
                Se += (c[Te].c + Me * c[Te].t) * Math.sin(b * c[Te].d + Le * c[Te].m + xe * c[Te].f);
              return Ve + Se;
            }, y.perigeeParallax = function(Ee) {
              var Ve = Ee / 1325.55, Me = Ve * Ve, B = Me * Ve, Pe = B * Ve, k = a.CT.m360(171.9179 + 335.9106046 * Ee - 0.0100383 * Me - 1156e-8 * B + 55e-9 * Pe);
              k = a.CT.d2R(k);
              var b = a.CT.m360(347.3477 + 27.1577721 * Ee - 813e-6 * Me - 1e-6 * B);
              b = a.CT.d2R(b);
              var Le = a.CT.m360(316.6109 + 364.5287911 * Ee - 0.0125053 * Me - 148e-7 * B);
              Le = a.CT.d2R(Le);
              for (var xe = _.length, ze = 3629.215, Se = 0; Se < xe; Se++)
                ze += (_[Se].c + Ve * _[Se].t) * Math.cos(k * _[Se].d + b * _[Se].m + Le * _[Se].f);
              return ze / 3600;
            }, y.apogeeParallax = function(Ee) {
              var Ve = Ee / 1325.55, Me = Ve * Ve, B = Me * Ve, Pe = B * Ve, k = a.CT.m360(171.9179 + 335.9106046 * Ee - 0.0100383 * Me - 1156e-8 * B + 55e-9 * Pe);
              k = a.CT.d2R(k);
              var b = a.CT.m360(347.3477 + 27.1577721 * Ee - 813e-6 * Me - 1e-6 * B);
              b = a.CT.d2R(b);
              var Le = a.CT.m360(316.6109 + 364.5287911 * Ee - 0.0125053 * Me - 148e-7 * B);
              Le = a.CT.d2R(Le);
              for (var xe = u.length, ze = 3245.251, Se = 0; Se < xe; Se++)
                ze += (u[Se].c + Ve * u[Se].t) * Math.cos(k * u[Se].d + b * u[Se].m + Le * u[Se].f);
              return ze / 3600;
            };
            var g = {};
            (0, s.registerType)("CAAMoonPerigeeApogee", [y, g, null]);
          }
        ),
        /***/
        "./esm/astrocalc/moon_phases.js": (
          /*!**************************************!*\
            !*** ./esm/astrocalc/moon_phases.js ***!
            \**************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAMoonPhases: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t() {
            }
            t.k = function(o) {
              return 12.3685 * (o - 2e3);
            }, t.meanPhase = function(o) {
              var c = o / 1236.85, _ = c * c, u = _ * c, y = u * c;
              return 245155009766e-5 + 29.530588861 * o + 15437e-8 * _ - 15e-8 * u + 73e-11 * y;
            }, t.truePhase = function(o) {
              var c = t.meanPhase(o), _ = o / 1236.85, u = _ * _, y = u * _, g = y * _, Ee = 1 - 2516e-6 * _ - 74e-7 * u, Ve = Ee * Ee, Me = a.CT.m360(2.5534 + 29.1053567 * o - 14e-7 * u - 11e-8 * y);
              Me = a.CT.d2R(Me);
              var B = a.CT.m360(201.5643 + 385.81693528 * o + 0.0107582 * u + 1238e-8 * y - 58e-9 * g);
              B = a.CT.d2R(B);
              var Pe = a.CT.m360(160.7108 + 390.67050284 * o - 16118e-7 * u - 227e-8 * y + 1e-8 * g);
              Pe = a.CT.d2R(Pe);
              var k = a.CT.m360(124.7746 - 1.56375588 * o + 20672e-7 * u + 215e-8 * y);
              k = a.CT.d2R(k);
              var b = a.CT.m360(299.77 + 0.107408 * o - 9173e-6 * u);
              b = a.CT.d2R(b);
              var Le = a.CT.m360(251.88 + 0.016321 * o);
              Le = a.CT.d2R(Le);
              var xe = a.CT.m360(251.83 + 26.651886 * o);
              xe = a.CT.d2R(xe);
              var ze = a.CT.m360(349.42 + 36.412478 * o);
              ze = a.CT.d2R(ze);
              var Se = a.CT.m360(84.66 + 18.206239 * o);
              Se = a.CT.d2R(Se);
              var Te = a.CT.m360(141.74 + 53.303771 * o);
              Te = a.CT.d2R(Te);
              var D = a.CT.m360(207.14 + 2.453732 * o);
              D = a.CT.d2R(D);
              var ke = a.CT.m360(154.84 + 7.30686 * o);
              ke = a.CT.d2R(ke);
              var Fe = a.CT.m360(34.52 + 27.261239 * o);
              Fe = a.CT.d2R(Fe);
              var He = a.CT.m360(207.19 + 0.121824 * o);
              He = a.CT.d2R(He);
              var We = a.CT.m360(291.34 + 1.844379 * o);
              We = a.CT.d2R(We);
              var Ke = a.CT.m360(161.72 + 24.198154 * o);
              Ke = a.CT.d2R(Ke);
              var $ = a.CT.m360(239.56 + 25.513099 * o);
              $ = a.CT.d2R($);
              var De = a.CT.m360(331.55 + 3.592518 * o);
              De = a.CT.d2R(De);
              var Re = Math.floor(o), Ie = o - Re;
              if (Ie < 0 && (Ie = 1 + Ie), Ie)
                if (Ie === 0.25 || Ie === 0.75) {
                  var O = -0.62801 * Math.sin(B) + 0.17172 * Ee * Math.sin(Me) + -0.01183 * Ee * Math.sin(B + Me) + 862e-5 * Math.sin(2 * B) + 804e-5 * Math.sin(2 * Pe) + 454e-5 * Ee * Math.sin(B - Me) + 204e-5 * Ve * Math.sin(2 * Me) + -18e-4 * Math.sin(B - 2 * Pe) + -7e-4 * Math.sin(B + 2 * Pe) + -4e-4 * Math.sin(3 * B) + -34e-5 * Ee * Math.sin(2 * B - Me) + 32e-5 * Ee * Math.sin(Me + 2 * Pe) + 32e-5 * Ee * Math.sin(Me - 2 * Pe) + -28e-5 * Ve * Math.sin(B + 2 * Me) + 27e-5 * Ee * Math.sin(2 * B + Me) + -17e-5 * Math.sin(k) + -5e-5 * Math.sin(B - Me - 2 * Pe) + 4e-5 * Math.sin(2 * B + 2 * Pe) + -4e-5 * Math.sin(B + Me + 2 * Pe) + 4e-5 * Math.sin(B - 2 * Me) + 3e-5 * Math.sin(B + Me - 2 * Pe) + 3e-5 * Math.sin(3 * Me) + 2e-5 * Math.sin(2 * B - 2 * Pe) + 2e-5 * Math.sin(B - Me + 2 * Pe) + -2e-5 * Math.sin(3 * B + Me);
                  c += O;
                  var Ue = 306e-5 - 38e-5 * Ee * Math.cos(Me) + 26e-5 * Math.cos(B) - 2e-5 * Math.cos(B - Me) + 2e-5 * Math.cos(B + Me) + 2e-5 * Math.cos(2 * Pe);
                  Ie === 0.25 ? c += Ue : c -= Ue;
                } else if (Ie === 0.5) {
                  var O = -0.40614 * Math.sin(B) + 0.17302 * Ee * Math.sin(Me) + 0.01614 * Math.sin(2 * B) + 0.01043 * Math.sin(2 * Pe) + 734e-5 * Ee * Math.sin(B - Me) + -514e-5 * Ee * Math.sin(B + Me) + 209e-5 * Ve * Math.sin(2 * Me) + -111e-5 * Math.sin(B - 2 * Pe) + -57e-5 * Math.sin(B + 2 * Pe) + 56e-5 * Ee * Math.sin(2 * B + Me) + -42e-5 * Math.sin(3 * B) + 42e-5 * Ee * Math.sin(Me + 2 * Pe) + 38e-5 * Ee * Math.sin(Me - 2 * Pe) + -24e-5 * Ee * Math.sin(2 * B - Me) + -17e-5 * Math.sin(k) + -7e-5 * Math.sin(B + 2 * Me) + 4e-5 * Math.sin(2 * B - 2 * Pe) + 4e-5 * Math.sin(3 * Me) + 3e-5 * Math.sin(B + Me - 2 * Pe) + 3e-5 * Math.sin(2 * B + 2 * Pe) + -3e-5 * Math.sin(B + Me + 2 * Pe) + 3e-5 * Math.sin(B - Me + 2 * Pe) + -2e-5 * Math.sin(B - Me - 2 * Pe) + -2e-5 * Math.sin(3 * B + Me) + 2e-5 * Math.sin(4 * B);
                  c += O;
                } else
                  console.assert(!1);
              else {
                var O = -0.4072 * Math.sin(B) + 0.17241 * Ee * Math.sin(Me) + 0.01608 * Math.sin(2 * B) + 0.01039 * Math.sin(2 * Pe) + 739e-5 * Ee * Math.sin(B - Me) + -514e-5 * Ee * Math.sin(B + Me) + 208e-5 * Ve * Math.sin(2 * Me) + -111e-5 * Math.sin(B - 2 * Pe) + -57e-5 * Math.sin(B + 2 * Pe) + 56e-5 * Ee * Math.sin(2 * B + Me) + -42e-5 * Math.sin(3 * B) + 42e-5 * Ee * Math.sin(Me + 2 * Pe) + 38e-5 * Ee * Math.sin(Me - 2 * Pe) + -24e-5 * Ee * Math.sin(2 * B - Me) + -17e-5 * Math.sin(k) + -7e-5 * Math.sin(B + 2 * Me) + 4e-5 * Math.sin(2 * B - 2 * Pe) + 4e-5 * Math.sin(3 * Me) + 3e-5 * Math.sin(B + Me - 2 * Pe) + 3e-5 * Math.sin(2 * B + 2 * Pe) + -3e-5 * Math.sin(B + Me + 2 * Pe) + 3e-5 * Math.sin(B - Me + 2 * Pe) + -2e-5 * Math.sin(B - Me - 2 * Pe) + -2e-5 * Math.sin(3 * B + Me) + 2e-5 * Math.sin(4 * B);
                c += O;
              }
              var $e = 325e-6 * Math.sin(b) + 165e-6 * Math.sin(Le) + 164e-6 * Math.sin(xe) + 126e-6 * Math.sin(ze) + 11e-5 * Math.sin(Se) + 62e-6 * Math.sin(Te) + 6e-5 * Math.sin(D) + 56e-6 * Math.sin(ke) + 47e-6 * Math.sin(Fe) + 42e-6 * Math.sin(He) + 4e-5 * Math.sin(We) + 37e-6 * Math.sin(Ke) + 35e-6 * Math.sin($) + 23e-6 * Math.sin(De);
              return c += $e, c;
            };
            var l = {};
            (0, s.registerType)("CAAMoonPhases", [t, l, null]);
          }
        ),
        /***/
        "./esm/astrocalc/neptune.js": (
          /*!**********************************!*\
            !*** ./esm/astrocalc/neptune.js ***!
            \**********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAANeptune: () => (
                /* binding */
                Le
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            );
            const l = [new t.VSC(531188633, 0, 0), new t.VSC(1798476, 2.9010127, 38.1330356), new t.VSC(1019728, 0.4858092, 1.4844727), new t.VSC(124532, 4.830081, 36.648563), new t.VSC(42064, 5.41055, 2.96895), new t.VSC(37715, 6.09222, 35.16409), new t.VSC(33785, 1.24489, 76.26607), new t.VSC(16483, 8e-5, 491.55793), new t.VSC(9199, 4.9375, 39.6175), new t.VSC(8994, 0.2746, 175.1661), new t.VSC(4216, 1.9871, 73.2971), new t.VSC(3365, 1.0359, 33.6796), new t.VSC(2285, 4.2061, 4.4534), new t.VSC(1434, 2.7834, 74.7816), new t.VSC(900, 2.076, 109.946), new t.VSC(745, 3.19, 71.813), new t.VSC(506, 5.748, 114.399), new t.VSC(400, 0.35, 1021.249), new t.VSC(345, 3.462, 41.102), new t.VSC(340, 3.304, 77.751), new t.VSC(323, 2.248, 32.195), new t.VSC(306, 0.497, 0.521), new t.VSC(287, 4.505, 0.048), new t.VSC(282, 2.246, 146.594), new t.VSC(267, 4.889, 0.963), new t.VSC(252, 5.782, 388.465), new t.VSC(245, 1.247, 9.561), new t.VSC(233, 2.505, 137.033), new t.VSC(227, 1.797, 453.425), new t.VSC(170, 3.324, 108.461), new t.VSC(151, 2.192, 33.94), new t.VSC(150, 2.997, 5.938), new t.VSC(148, 0.859, 111.43), new t.VSC(119, 3.677, 2.448), new t.VSC(109, 2.416, 183.243), new t.VSC(103, 0.041, 0.261), new t.VSC(103, 4.404, 70.328), new t.VSC(102, 5.705, 0.112)], o = [new t.VSC(3837687717, 0, 0), new t.VSC(16604, 4.86319, 1.48447), new t.VSC(15807, 2.27923, 38.13304), new t.VSC(3335, 3.682, 76.2661), new t.VSC(1306, 3.6732, 2.9689), new t.VSC(605, 1.505, 35.164), new t.VSC(179, 3.453, 39.618), new t.VSC(107, 2.451, 4.453), new t.VSC(106, 2.755, 33.68), new t.VSC(73, 5.49, 36.65), new t.VSC(57, 1.86, 114.4), new t.VSC(57, 5.22, 0.52), new t.VSC(35, 4.52, 74.78), new t.VSC(32, 5.9, 77.75), new t.VSC(30, 3.67, 388.47), new t.VSC(29, 5.17, 9.56), new t.VSC(29, 5.17, 2.45), new t.VSC(26, 5.25, 168.05)], c = [new t.VSC(53893, 0, 0), new t.VSC(296, 1.855, 1.484), new t.VSC(281, 1.191, 38.133), new t.VSC(270, 5.721, 76.266), new t.VSC(23, 1.21, 2.97), new t.VSC(9, 4.43, 35.16), new t.VSC(7, 0.54, 2.45)], _ = [new t.VSC(31, 0, 0), new t.VSC(15, 1.35, 76.27), new t.VSC(12, 6.04, 1.48), new t.VSC(12, 6.11, 38.13)], u = [new t.VSC(114, 3.142, 0)], y = [new t.VSC(3088623, 1.4410437, 38.1330356), new t.VSC(27789, 5.91272, 76.26607), new t.VSC(27624, 0, 0), new t.VSC(15448, 3.50877, 39.61751), new t.VSC(15355, 2.52124, 36.64856), new t.VSC(2e3, 1.51, 74.7816), new t.VSC(1968, 4.3778, 1.4845), new t.VSC(1015, 3.2156, 35.1641), new t.VSC(606, 2.802, 73.297), new t.VSC(595, 2.129, 41.102), new t.VSC(589, 3.187, 2.969), new t.VSC(402, 4.169, 114.399), new t.VSC(280, 1.682, 77.751), new t.VSC(262, 3.767, 213.299), new t.VSC(254, 3.271, 453.425), new t.VSC(206, 4.257, 529.691), new t.VSC(140, 3.53, 137.033)], g = [new t.VSC(227279, 3.807931, 38.133036), new t.VSC(1803, 1.9758, 76.2661), new t.VSC(1433, 3.1416, 0), new t.VSC(1386, 4.8256, 36.6486), new t.VSC(1073, 6.0805, 39.6175), new t.VSC(148, 3.858, 74.782), new t.VSC(136, 0.478, 1.484), new t.VSC(70, 6.19, 35.16), new t.VSC(52, 5.05, 73.3), new t.VSC(43, 0.31, 114.4), new t.VSC(37, 4.89, 41.1), new t.VSC(37, 5.76, 2.97), new t.VSC(26, 5.22, 213.3)], Ee = [new t.VSC(9691, 5.5712, 38.133), new t.VSC(79, 3.63, 76.27), new t.VSC(72, 0.45, 36.65), new t.VSC(59, 3.14, 0), new t.VSC(30, 1.61, 39.62), new t.VSC(6, 5.61, 74.78)], Ve = [new t.VSC(273, 1.017, 38.133), new t.VSC(2, 0, 0), new t.VSC(2, 2.37, 36.65), new t.VSC(2, 5.33, 76.27)], Me = [new t.VSC(6, 2.67, 38.13)], B = [new t.VSC(3007013206, 0, 0), new t.VSC(27062259, 1.32999459, 38.13303564), new t.VSC(1691764, 3.2518614, 36.6485629), new t.VSC(807831, 5.185928, 1.484473), new t.VSC(537761, 4.521139, 35.16409), new t.VSC(495726, 1.571057, 491.557929), new t.VSC(274572, 1.845523, 175.16606), new t.VSC(135134, 3.372206, 39.617508), new t.VSC(121802, 5.797544, 76.266071), new t.VSC(100895, 0.377027, 73.297126), new t.VSC(69792, 3.79617, 2.96895), new t.VSC(46688, 5.74938, 33.67962), new t.VSC(24594, 0.50802, 109.94569), new t.VSC(16939, 1.59422, 71.81265), new t.VSC(14230, 1.07786, 74.7816), new t.VSC(12012, 1.92062, 1021.24889), new t.VSC(8395, 0.6782, 146.5943), new t.VSC(7572, 1.0715, 388.4652), new t.VSC(5721, 2.5906, 4.4534), new t.VSC(4840, 1.9069, 41.102), new t.VSC(4483, 2.9057, 529.691), new t.VSC(4421, 1.7499, 108.4612), new t.VSC(4354, 0.6799, 32.1951), new t.VSC(4270, 3.4134, 453.4249), new t.VSC(3381, 0.8481, 183.2428), new t.VSC(2881, 1.986, 137.033), new t.VSC(2879, 3.6742, 350.3321), new t.VSC(2636, 3.0976, 213.2991), new t.VSC(2530, 5.7984, 490.0735), new t.VSC(2523, 0.4863, 493.0424), new t.VSC(2306, 2.8096, 70.3282), new t.VSC(2087, 0.6186, 33.9402)], Pe = [new t.VSC(236339, 0.70498, 38.133036), new t.VSC(13220, 3.32015, 1.48447), new t.VSC(8622, 6.2163, 35.1641), new t.VSC(2702, 1.8814, 39.6175), new t.VSC(2155, 2.0943, 2.9689), new t.VSC(2153, 5.1687, 76.2661), new t.VSC(1603, 0, 0), new t.VSC(1464, 1.1842, 33.6796), new t.VSC(1136, 3.9189, 36.6486), new t.VSC(898, 5.241, 388.465), new t.VSC(790, 0.533, 168.053), new t.VSC(760, 0.021, 182.28), new t.VSC(607, 1.077, 1021.249), new t.VSC(572, 3.401, 484.444), new t.VSC(561, 2.887, 498.671)], k = [new t.VSC(4247, 5.8991, 38.133), new t.VSC(218, 0.346, 1.484), new t.VSC(163, 2.239, 168.053), new t.VSC(156, 4.594, 182.28), new t.VSC(127, 2.848, 35.164)], b = [new t.VSC(166, 4.552, 38.133)];
            function Le() {
            }
            Le.eclipticLongitude = function(ze) {
              var Se = (ze - 2451545) / 365250, Te = Se * Se, D = Te * Se, ke = D * Se, Fe = l.length, He = 0, We;
              for (We = 0; We < Fe; We++)
                He += l[We].a * Math.cos(l[We].b + l[We].c * Se);
              var Ke = o.length, $ = 0;
              for (We = 0; We < Ke; We++)
                $ += o[We].a * Math.cos(o[We].b + o[We].c * Se);
              var De = c.length, Re = 0;
              for (We = 0; We < De; We++)
                Re += c[We].a * Math.cos(c[We].b + c[We].c * Se);
              var Ie = _.length, O = 0;
              for (We = 0; We < Ie; We++)
                O += _[We].a * Math.cos(_[We].b + _[We].c * Se);
              var Ue = u.length, $e = 0;
              for (We = 0; We < Ue; We++)
                $e += u[We].a * Math.cos(u[We].b + u[We].c * Se);
              var Ze = (He + $ * Se + Re * Te + O * D + $e * ke) / 1e8;
              return Ze = a.CT.m360(a.CT.r2D(Ze)), Ze;
            }, Le.eclipticLatitude = function(ze) {
              var Se = (ze - 2451545) / 365250, Te = Se * Se, D = Te * Se, ke = D * Se, Fe = y.length, He = 0, We;
              for (We = 0; We < Fe; We++)
                He += y[We].a * Math.cos(y[We].b + y[We].c * Se);
              var Ke = g.length, $ = 0;
              for (We = 0; We < Ke; We++)
                $ += g[We].a * Math.cos(g[We].b + g[We].c * Se);
              var De = Ee.length, Re = 0;
              for (We = 0; We < De; We++)
                Re += Ee[We].a * Math.cos(Ee[We].b + Ee[We].c * Se);
              var Ie = Ve.length, O = 0;
              for (We = 0; We < Ie; We++)
                O += Ve[We].a * Math.cos(Ve[We].b + Ve[We].c * Se);
              var Ue = Me.length, $e = 0;
              for (We = 0; We < Ue; We++)
                $e += Me[We].a * Math.cos(Me[We].b + Me[We].c * Se);
              var Ze = (He + $ * Se + Re * Te + O * D + $e * ke) / 1e8;
              return Ze = a.CT.r2D(Ze), Ze;
            }, Le.radiusVector = function(ze) {
              var Se = (ze - 2451545) / 365250, Te = Se * Se, D = Te * Se, ke = B.length, Fe = 0, He;
              for (He = 0; He < ke; He++)
                Fe += B[He].a * Math.cos(B[He].b + B[He].c * Se);
              var We = Pe.length, Ke = 0;
              for (He = 0; He < We; He++)
                Ke += Pe[He].a * Math.cos(Pe[He].b + Pe[He].c * Se);
              var $ = k.length, De = 0;
              for (He = 0; He < $; He++)
                De += k[He].a * Math.cos(k[He].b + k[He].c * Se);
              var Re = b.length, Ie = 0;
              for (He = 0; He < Re; He++)
                Ie += b[He].a * Math.cos(b[He].b + b[He].c * Se);
              return (Fe + Ke * Se + De * Te + Ie * D) / 1e8;
            };
            var xe = {};
            (0, s.registerType)("CAANeptune", [Le, xe, null]);
          }
        ),
        /***/
        "./esm/astrocalc/nutation.js": (
          /*!***********************************!*\
            !*** ./esm/astrocalc/nutation.js ***!
            \***********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAANutation: () => (
                /* binding */
                c
              ),
              /* harmony export */
              NUC: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            );
            function t(u, y, g, Ee, Ve, Me, B, Pe, k) {
              this.d = 0, this.m = 0, this.mprime = 0, this.f = 0, this.omega = 0, this.sincoeff1 = 0, this.sincoeff2 = 0, this.coscoeff1 = 0, this.coscoeff2 = 0, this.d = u, this.m = y, this.mprime = g, this.f = Ee, this.omega = Ve, this.sincoeff1 = Me, this.sincoeff2 = B, this.coscoeff1 = Pe, this.coscoeff2 = k;
            }
            var l = {};
            (0, s.registerType)("NUC", [t, l, null]);
            const o = [new t(0, 0, 0, 0, 1, -171996, -174.2, 92025, 8.9), new t(-2, 0, 0, 2, 2, -13187, -1.6, 5736, -3.1), new t(0, 0, 0, 2, 2, -2274, -0.2, 977, -0.5), new t(0, 0, 0, 0, 2, 2062, 0.2, -895, 0.5), new t(0, 1, 0, 0, 0, 1426, -3.4, 54, -0.1), new t(0, 0, 1, 0, 0, 712, 0.1, -7, 0), new t(-2, 1, 0, 2, 2, -517, 1.2, 224, -0.6), new t(0, 0, 0, 2, 1, -386, -0.4, 200, 0), new t(0, 0, 1, 2, 2, -301, 0, 129, -0.1), new t(-2, -1, 0, 2, 2, 217, -0.5, -95, 0.3), new t(-2, 0, 1, 0, 0, -158, 0, 0, 0), new t(-2, 0, 0, 2, 1, 129, 0.1, -70, 0), new t(0, 0, -1, 2, 2, 123, 0, -53, 0), new t(2, 0, 0, 0, 0, 63, 0, 0, 0), new t(0, 0, 1, 0, 1, 63, 0.1, -33, 0), new t(2, 0, -1, 2, 2, -59, 0, 26, 0), new t(0, 0, -1, 0, 1, -58, -0.1, 32, 0), new t(0, 0, 1, 2, 1, -51, 0, 27, 0), new t(-2, 0, 2, 0, 0, 48, 0, 0, 0), new t(0, 0, -2, 2, 1, 46, 0, -24, 0), new t(2, 0, 0, 2, 2, -38, 0, 16, 0), new t(0, 0, 2, 2, 2, -31, 0, 13, 0), new t(0, 0, 2, 0, 0, 29, 0, 0, 0), new t(-2, 0, 1, 2, 2, 29, 0, -12, 0), new t(0, 0, 0, 2, 0, 26, 0, 0, 0), new t(-2, 0, 0, 2, 0, -22, 0, 0, 0), new t(0, 0, -1, 2, 1, 21, 0, -10, 0), new t(0, 2, 0, 0, 0, 17, -0.1, 0, 0), new t(2, 0, -1, 0, 1, 16, 0, -8, 0), new t(-2, 2, 0, 2, 2, -16, 0.1, 7, 0), new t(0, 1, 0, 0, 1, -15, 0, 9, 0), new t(-2, 0, 1, 0, 1, -13, 0, 7, 0), new t(0, -1, 0, 0, 1, -12, 0, 6, 0), new t(0, 0, 2, -2, 0, 11, 0, 0, 0), new t(2, 0, -1, 2, 1, -10, 0, 5, 0), new t(2, 0, 1, 2, 2, -8, 0, 3, 0), new t(0, 1, 0, 2, 2, 7, 0, -3, 0), new t(-2, 1, 1, 0, 0, -7, 0, 0, 0), new t(0, -1, 0, 2, 2, -7, 0, 3, 0), new t(2, 0, 0, 2, 1, -7, 0, 3, 0), new t(2, 0, 1, 0, 0, 6, 0, 0, 0), new t(-2, 0, 2, 2, 2, 6, 0, -3, 0), new t(-2, 0, 1, 2, 1, 6, 0, -3, 0), new t(2, 0, -2, 0, 1, -6, 0, 3, 0), new t(2, 0, 0, 0, 1, -6, 0, 3, 0), new t(0, -1, 1, 0, 0, 5, 0, 0, 0), new t(-2, -1, 0, 2, 1, -5, 0, 3, 0), new t(-2, 0, 0, 0, 1, -5, 0, 3, 0), new t(0, 0, 2, 2, 1, -5, 0, 3, 0), new t(-2, 0, 2, 0, 1, 4, 0, 0, 0), new t(-2, 1, 0, 2, 1, 4, 0, 0, 0), new t(0, 0, 1, -2, 0, 4, 0, 0, 0), new t(-1, 0, 1, 0, 0, -4, 0, 0, 0), new t(-2, 1, 0, 0, 0, -4, 0, 0, 0), new t(1, 0, 0, 0, 0, -4, 0, 0, 0), new t(0, 0, 1, 2, 0, 3, 0, 0, 0), new t(0, 0, -2, 2, 2, -3, 0, 0, 0), new t(-1, -1, 1, 0, 0, -3, 0, 0, 0), new t(0, 1, 1, 0, 0, -3, 0, 0, 0), new t(0, -1, 1, 2, 2, -3, 0, 0, 0), new t(2, -1, -1, 2, 2, -3, 0, 0, 0), new t(0, 0, 3, 2, 2, -3, 0, 0, 0), new t(2, -1, 0, 2, 2, -3, 0, 0, 0)];
            function c() {
            }
            c.nutationInLongitude = function(u) {
              var y = (u - 2451545) / 36525, g = y * y, Ee = g * y, Ve = 297.85036 + 445267.11148 * y - 19142e-7 * g + Ee / 189474;
              Ve = a.CT.m360(Ve);
              var Me = 357.52772 + 35999.05034 * y - 1603e-7 * g - Ee / 3e5;
              Me = a.CT.m360(Me);
              var B = 134.96298 + 477198.867398 * y + 86972e-7 * g + Ee / 56250;
              B = a.CT.m360(B);
              var Pe = 93.27191 + 483202.017538 * y - 36825e-7 * g + Ee / 327270;
              Pe = a.CT.m360(Pe);
              var k = 125.04452 - 1934.136261 * y + 20708e-7 * g + Ee / 45e4;
              k = a.CT.m360(k);
              for (var b = o.length, Le = 0, xe = 0; xe < b; xe++) {
                var ze = o[xe].d * Ve + o[xe].m * Me + o[xe].mprime * B + o[xe].f * Pe + o[xe].omega * k, Se = a.CT.d2R(ze);
                Le += (o[xe].sincoeff1 + o[xe].sincoeff2 * y) * Math.sin(Se) * 1e-4;
              }
              return Le;
            }, c.nutationInObliquity = function(u) {
              var y = (u - 2451545) / 36525, g = y * y, Ee = g * y, Ve = 297.85036 + 445267.11148 * y - 19142e-7 * g + Ee / 189474;
              Ve = a.CT.m360(Ve);
              var Me = 357.52772 + 35999.05034 * y - 1603e-7 * g - Ee / 3e5;
              Me = a.CT.m360(Me);
              var B = 134.96298 + 477198.867398 * y + 86972e-7 * g + Ee / 56250;
              B = a.CT.m360(B);
              var Pe = 93.27191 + 483202.017538 * y - 36825e-7 * g + Ee / 327270;
              Pe = a.CT.m360(Pe);
              var k = 125.04452 - 1934.136261 * y + 20708e-7 * g + Ee / 45e4;
              k = a.CT.m360(k);
              for (var b = o.length, Le = 0, xe = 0; xe < b; xe++) {
                var ze = o[xe].d * Ve + o[xe].m * Me + o[xe].mprime * B + o[xe].f * Pe + o[xe].omega * k, Se = a.CT.d2R(ze);
                Le += (o[xe].coscoeff1 + o[xe].coscoeff2 * y) * Math.cos(Se) * 1e-4;
              }
              return Le;
            }, c.nutationInRightAscension = function(u, y, g, Ee, Ve) {
              return u = a.CT.h2R(u), y = a.CT.d2R(y), g = a.CT.d2R(g), (Math.cos(g) + Math.sin(g) * Math.sin(u) * Math.tan(y)) * Ee - Math.cos(u) * Math.tan(y) * Ve;
            }, c.nutationInDeclination = function(u, y, g, Ee, Ve) {
              return u = a.CT.h2R(u), y = a.CT.d2R(y), g = a.CT.d2R(g), Math.sin(g) * Math.cos(u) * Ee + Math.sin(u) * Ve;
            }, c.meanObliquityOfEcliptic = function(u) {
              var y = (u - 2451545) / 3652500, g = y * y, Ee = g * y, Ve = Ee * y, Me = Ve * y, B = Me * y, Pe = B * y, k = Pe * y, b = k * y, Le = b * y;
              return a.CT.dmS2D(23, 26, 21.448) - a.CT.dmS2D(0, 0, 4680.93) * y - a.CT.dmS2D(0, 0, 1.55) * g + a.CT.dmS2D(0, 0, 1999.25) * Ee - a.CT.dmS2D(0, 0, 51.38) * Ve - a.CT.dmS2D(0, 0, 249.67) * Me - a.CT.dmS2D(0, 0, 39.05) * B + a.CT.dmS2D(0, 0, 7.12) * Pe + a.CT.dmS2D(0, 0, 27.87) * k + a.CT.dmS2D(0, 0, 5.79) * b + a.CT.dmS2D(0, 0, 2.45) * Le;
            }, c.trueObliquityOfEcliptic = function(u) {
              return c.meanObliquityOfEcliptic(u) + a.CT.dmS2D(0, 0, c.nutationInObliquity(u));
            };
            var _ = {};
            (0, s.registerType)("CAANutation", [c, _, null]);
          }
        ),
        /***/
        "./esm/astrocalc/parallax.js": (
          /*!***********************************!*\
            !*** ./esm/astrocalc/parallax.js ***!
            \***********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAParallax: () => (
                /* binding */
                u
              ),
              /* harmony export */
              CAATopocentricEclipticDetails: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./globe.js */
              "./esm/astrocalc/globe.js"
            ), l = n(
              /*! ./sidereal.js */
              "./esm/astrocalc/sidereal.js"
            );
            function o() {
              this.lambda = 0, this.beta = 0, this.semidiameter = 0, this.lambda = 0, this.beta = 0, this.semidiameter = 0;
            }
            var c = {};
            (0, s.registerType)("CAATopocentricEclipticDetails", [o, c, null]);
            const _ = Math.sin(a.CT.d2R(a.CT.dmS2D(0, 0, 8.794)));
            function u() {
            }
            u.equatorial2TopocentricDelta = function(g, Ee, Ve, Me, B, Pe, k) {
              var b = t.CAAGlobe.rhoSinThetaPrime(B, Pe), Le = t.CAAGlobe.rhoCosThetaPrime(B, Pe), xe = l.CAASidereal.apparentGreenwichSiderealTime(k);
              Ee = a.CT.d2R(Ee);
              var ze = Math.cos(Ee), Se = Math.asin(_ / Ve), Te = a.CT.h2R(xe - Me / 15 - g), D = Math.cos(Te), ke = Math.sin(Te), Fe = new a.COR();
              return Fe.x = a.CT.r2H(-Se * Le * ke / ze), Fe.y = a.CT.r2D(-Se * (b * ze - Le * D * Math.sin(Ee))), Fe;
            }, u.equatorial2Topocentric = function(g, Ee, Ve, Me, B, Pe, k) {
              var b = t.CAAGlobe.rhoSinThetaPrime(B, Pe), Le = t.CAAGlobe.rhoCosThetaPrime(B, Pe), xe = l.CAASidereal.apparentGreenwichSiderealTime(k);
              Ee = a.CT.d2R(Ee);
              var ze = Math.cos(Ee), Se = Math.asin(_ / Ve), Te = Math.sin(Se), D = a.CT.h2R(xe - Me / 15 - g), ke = Math.cos(D), Fe = Math.sin(D), He = Math.atan2(-Le * Te * Fe, ze - Le * Te * ke), We = new a.COR();
              return We.x = a.CT.m24(g + a.CT.r2H(He)), We.y = a.CT.r2D(Math.atan2((Math.sin(Ee) - b * Te) * Math.cos(He), ze - Le * Te * ke)), We;
            }, u.ecliptic2Topocentric = function(g, Ee, Ve, Me, B, Pe, k, b, Le) {
              var xe = t.CAAGlobe.rhoSinThetaPrime(k, b), ze = t.CAAGlobe.rhoCosThetaPrime(k, b);
              g = a.CT.d2R(g), Ee = a.CT.d2R(Ee), B = a.CT.d2R(B), Pe = a.CT.d2R(Pe), k = a.CT.d2R(k), Ve = a.CT.d2R(Ve);
              var Se = Math.sin(B), Te = Math.cos(B), D = Math.cos(Ee), ke = Math.sin(Ee), Fe = l.CAASidereal.apparentGreenwichSiderealTime(Le);
              Fe = a.CT.h2R(Fe);
              var He = Math.sin(Fe), We = Math.asin(_ / Me), Ke = Math.sin(We), $ = Math.cos(g) * D - ze * Ke * Math.cos(Fe), De = new o();
              De.lambda = Math.atan2(Math.sin(g) * D - Ke * (xe * Se + ze * Te * He), $);
              var Re = Math.cos(De.lambda);
              return De.beta = Math.atan(Re * (ke - Ke * (xe * Te - ze * Se * He)) / $), De.semidiameter = Math.asin(Re * Math.cos(De.beta) * Math.sin(Ve) / $), De.semidiameter = a.CT.r2D(De.semidiameter), De.lambda = a.CT.m360(a.CT.r2D(De.lambda)), De.beta = a.CT.r2D(De.beta), De;
            }, u.parallaxToDistance = function(g) {
              return _ / Math.sin(a.CT.d2R(g));
            }, u.distanceToParallax = function(g) {
              var Ee = Math.asin(_ / g);
              return a.CT.r2D(Ee);
            };
            var y = {};
            (0, s.registerType)("CAAParallax", [u, y, null]);
          }
        ),
        /***/
        "./esm/astrocalc/physical_jupiter.js": (
          /*!*******************************************!*\
            !*** ./esm/astrocalc/physical_jupiter.js ***!
            \*******************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAPhysicalJupiter: () => (
                /* binding */
                u
              ),
              /* harmony export */
              CAAPhysicalJupiterDetails: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./nutation.js */
              "./esm/astrocalc/nutation.js"
            ), l = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            ), o = n(
              /*! ./jupiter.js */
              "./esm/astrocalc/jupiter.js"
            );
            function c() {
              this.DE = 0, this.DS = 0, this.geometricw1 = 0, this.geometricw2 = 0, this.apparentw1 = 0, this.apparentw2 = 0, this.p = 0, this.DE = 0, this.DS = 0, this.geometricw1 = 0, this.geometricw2 = 0, this.apparentw1 = 0, this.apparentw2 = 0, this.p = 0;
            }
            var _ = {};
            (0, s.registerType)("CAAPhysicalJupiterDetails", [c, _, null]);
            function u() {
            }
            u.calculate = function(g) {
              var Ee = new c(), Ve = g - 24332825e-1, Me = Ve / 36525, B = 268 + 0.1061 * Me, Pe = a.CT.d2R(B), k = 64.5 - 0.0164 * Me, b = a.CT.d2R(k), Le = a.CT.m360(17.71 + 877.90003539 * Ve), xe = a.CT.m360(16.838 + 870.27003539 * Ve), ze = l.CAAEarth.eclipticLongitude(g), Se = a.CT.d2R(ze), Te = l.CAAEarth.eclipticLatitude(g), D = a.CT.d2R(Te), ke = l.CAAEarth.radiusVector(g), Fe = o.CAAJupiter.eclipticLongitude(g), He = a.CT.d2R(Fe), We = o.CAAJupiter.eclipticLatitude(g), Ke = a.CT.d2R(We), $ = o.CAAJupiter.radiusVector(g), De = $ * Math.cos(Ke) * Math.cos(He) - ke * Math.cos(Se), Re = $ * Math.cos(Ke) * Math.sin(He) - ke * Math.sin(Se), Ie = $ * Math.sin(Ke) - ke * Math.sin(D), O = Math.sqrt(De * De + Re * Re + Ie * Ie);
              Fe -= 0.01299 * O / ($ * $), He = a.CT.d2R(Fe), De = $ * Math.cos(Ke) * Math.cos(He) - ke * Math.cos(Se), Re = $ * Math.cos(Ke) * Math.sin(He) - ke * Math.sin(Se), Ie = $ * Math.sin(Ke) - ke * Math.sin(D), O = Math.sqrt(De * De + Re * Re + Ie * Ie);
              var Ue = t.CAANutation.meanObliquityOfEcliptic(g), $e = a.CT.d2R(Ue), Ze = Math.atan2(Math.cos($e) * Math.sin(He) - Math.sin($e) * Math.tan(Ke), Math.cos(He)), Qe = Math.asin(Math.cos($e) * Math.sin(Ke) + Math.sin($e) * Math.cos(Ke) * Math.sin(He));
              Ee.DS = a.CT.r2D(Math.asin(-Math.sin(b) * Math.sin(Qe) - Math.cos(b) * Math.cos(Qe) * Math.cos(Pe - Ze)));
              var Ae = Re * Math.cos($e) - Ie * Math.sin($e), Ne = Re * Math.sin($e) + Ie * Math.cos($e), Be = Math.atan2(Ae, De), Ge = a.CT.r2D(Be), Ye = Math.atan2(Ne, Math.sqrt(De * De + Ae * Ae)), je = a.CT.r2D(Ye), ht = Math.atan2(Math.sin(b) * Math.cos(Ye) * Math.cos(Pe - Be) - Math.sin(Ye) * Math.cos(b), Math.cos(Ye) * Math.sin(Pe - Be));
              Ee.DE = a.CT.r2D(Math.asin(-Math.sin(b) * Math.sin(Ye) - Math.cos(b) * Math.cos(Ye) * Math.cos(Pe - Be))), Ee.geometricw1 = a.CT.m360(Le - a.CT.r2D(ht) - 5.07033 * O), Ee.geometricw2 = a.CT.m360(xe - a.CT.r2D(ht) - 5.02626 * O);
              var qe = 57.2958 * (2 * $ * O + ke * ke - $ * $ - O * O) / (4 * $ * O);
              Math.sin(He - Se) > 0 ? (Ee.apparentw1 = a.CT.m360(Ee.geometricw1 + qe), Ee.apparentw2 = a.CT.m360(Ee.geometricw2 + qe)) : (Ee.apparentw1 = a.CT.m360(Ee.geometricw1 - qe), Ee.apparentw2 = a.CT.m360(Ee.geometricw2 - qe));
              var lt = t.CAANutation.nutationInLongitude(g), ft = t.CAANutation.nutationInObliquity(g);
              Ue += ft / 3600, $e = a.CT.d2R(Ue), Ge += 5693e-6 * (Math.cos(Be) * Math.cos(Se) * Math.cos($e) + Math.sin(Be) * Math.sin(Se)) / Math.cos(Ye), Ge = a.CT.m360(Ge), Be = a.CT.d2R(Ge), je += 5693e-6 * (Math.cos(Se) * Math.cos($e) * (Math.tan($e) * Math.cos(Ye) - Math.sin(Be) * Math.sin(Ye)) + Math.cos(Be) * Math.sin(Ye) * Math.sin(Se)), Ye = a.CT.d2R(je);
              var _t = t.CAANutation.nutationInRightAscension(Ge / 15, je, Ue, lt, ft), St = Ge + _t / 3600, yt = a.CT.d2R(St), Ct = t.CAANutation.nutationInDeclination(Ge / 15, je, Ue, lt, ft), Lt = je + Ct / 3600, Vt = a.CT.d2R(Lt);
              _t = t.CAANutation.nutationInRightAscension(B / 15, k, Ue, lt, ft);
              var Tt = B + _t / 3600, xt = a.CT.d2R(Tt);
              Ct = t.CAANutation.nutationInDeclination(B / 15, k, Ue, lt, ft);
              var Ot = k + Ct / 3600, Pt = a.CT.d2R(Ot);
              return Ee.p = a.CT.m360(a.CT.r2D(Math.atan2(Math.cos(Pt) * Math.sin(xt - yt), Math.sin(Pt) * Math.cos(Vt) - Math.cos(Pt) * Math.sin(Vt) * Math.cos(xt - yt)))), Ee;
            };
            var y = {};
            (0, s.registerType)("CAAPhysicalJupiter", [u, y, null]);
          }
        ),
        /***/
        "./esm/astrocalc/physical_mars.js": (
          /*!****************************************!*\
            !*** ./esm/astrocalc/physical_mars.js ***!
            \****************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAPhysicalMars: () => (
                /* binding */
                Ve
              ),
              /* harmony export */
              CAAPhysicalMarsDetails: () => (
                /* binding */
                g
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./nutation.js */
              "./esm/astrocalc/nutation.js"
            ), l = n(
              /*! ./sun.js */
              "./esm/astrocalc/sun.js"
            ), o = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            ), c = n(
              /*! ./mars.js */
              "./esm/astrocalc/mars.js"
            ), _ = n(
              /*! ./elliptical.js */
              "./esm/astrocalc/elliptical.js"
            ), u = n(
              /*! ./illuminated_fraction.js */
              "./esm/astrocalc/illuminated_fraction.js"
            ), y = n(
              /*! ./moon_illuminated_fraction.js */
              "./esm/astrocalc/moon_illuminated_fraction.js"
            );
            function g() {
              this.DE = 0, this.DS = 0, this.w = 0, this.p = 0, this.x = 0, this.k = 0, this.q = 0, this.d = 0, this.DE = 0, this.DS = 0, this.w = 0, this.p = 0, this.x = 0, this.k = 0, this.q = 0, this.d = 0;
            }
            var Ee = {};
            (0, s.registerType)("CAAPhysicalMarsDetails", [g, Ee, null]);
            function Ve() {
            }
            Ve.calculate = function(B) {
              for (var Pe = new g(), k = (B - 2451545) / 36525, b = 352.9065 + 1.1733 * k, Le = a.CT.d2R(b), xe = 63.2818 - 394e-5 * k, ze = a.CT.d2R(xe), Se = o.CAAEarth.eclipticLongitude(B), Te = a.CT.d2R(Se), D = o.CAAEarth.eclipticLatitude(B), ke = a.CT.d2R(D), Fe = o.CAAEarth.radiusVector(B), He = 0, We = 0, Ke = 0, $ = 0, De = 0, Re = !0, Ie = 0, O = 0, Ue = 0, $e = 0, Ze = 0, Qe = 0; Re; ) {
                var Ae = B - We;
                O = c.CAAMars.eclipticLongitude(Ae), Ue = a.CT.d2R(O), $e = c.CAAMars.eclipticLatitude(Ae), Ze = a.CT.d2R($e), Qe = c.CAAMars.radiusVector(Ae), Ke = Qe * Math.cos(Ze) * Math.cos(Ue) - Fe * Math.cos(Te), $ = Qe * Math.cos(Ze) * Math.sin(Ue) - Fe * Math.sin(Te), De = Qe * Math.sin(Ze) - Fe * Math.sin(ke), Ie = Math.sqrt(Ke * Ke + $ * $ + De * De), We = _.ELL.distanceToLightTime(Ie), Re = Math.abs(We - He) > 2e-6, Re && (He = We);
              }
              var Ne = Math.atan2($, Ke), Be = a.CT.r2D(Ne), Ge = Math.atan2(De, Math.sqrt(Ke * Ke + $ * $)), Ye = a.CT.r2D(Ge);
              Pe.DE = a.CT.r2D(Math.asin(-Math.sin(ze) * Math.sin(Ge) - Math.cos(ze) * Math.cos(Ge) * Math.cos(Le - Ne)));
              var je = 49.5581 + 0.7721 * k, ht = a.CT.d2R(je), qe = O - 697e-5 / Qe, lt = a.CT.d2R(qe), ft = $e - 225e-6 * (Math.cos(Ue - ht) / Qe), _t = a.CT.d2R(ft);
              Pe.DS = a.CT.r2D(Math.asin(-Math.sin(ze) * Math.sin(_t) - Math.cos(ze) * Math.cos(_t) * Math.cos(Le - lt)));
              var St = a.CT.m360(11.504 + 350.89200025 * (B - We - 24332825e-1)), yt = t.CAANutation.meanObliquityOfEcliptic(B), Ct = a.CT.d2R(yt), Lt = a.CT.ec2Eq(b, xe, yt), Vt = a.CT.h2R(Lt.x), Tt = a.CT.d2R(Lt.y), xt = $ * Math.cos(Ct) - De * Math.sin(Ct), Ot = $ * Math.sin(Ct) + De * Math.cos(Ct), Pt = Math.atan2(xt, Ke), kt = a.CT.r2H(Pt), zt = Math.atan2(Ot, Math.sqrt(Ke * Ke + xt * xt)), Bt = a.CT.r2D(zt), gt = Math.atan2(Math.sin(Tt) * Math.cos(zt) * Math.cos(Vt - Pt) - Math.sin(zt) * Math.cos(Tt), Math.cos(zt) * Math.sin(Vt - Pt));
              Pe.w = a.CT.m360(St - a.CT.r2D(gt));
              var rt = t.CAANutation.nutationInLongitude(B), nt = t.CAANutation.nutationInObliquity(B);
              Be += 5693e-6 * Math.cos(Te - Ne) / Math.cos(Ge), Ye += 5693e-6 * Math.sin(Te - Ne) * Math.sin(Ge), b += rt / 3600, Le = a.CT.d2R(b), Be += rt / 3600, Ne = a.CT.d2R(Be), yt += nt / 3600, Ct = a.CT.d2R(Ct);
              var bt = a.CT.ec2Eq(b, xe, yt), Et = a.CT.h2R(bt.x), Rt = a.CT.d2R(bt.y), $t = a.CT.ec2Eq(Be, Ye, yt), pt = a.CT.h2R($t.x), Ft = a.CT.d2R($t.y);
              Pe.p = a.CT.m360(a.CT.r2D(Math.atan2(Math.cos(Rt) * Math.sin(Et - pt), Math.sin(Rt) * Math.cos(Ft) - Math.cos(Rt) * Math.sin(Ft) * Math.cos(Et - pt))));
              var Nt = l.CAASun.geometricEclipticLongitude(B), Kt = l.CAASun.geometricEclipticLatitude(B), At = a.CT.ec2Eq(Nt, Kt, yt);
              return Pe.x = y.MIFR.positionAngle(At.x, At.y, kt, Bt), Pe.d = 9.36 / Ie, Pe.k = u.IFR.illuminatedFraction2(Qe, Fe, Ie), Pe.q = (1 - Pe.k) * Pe.d, Pe;
            };
            var Me = {};
            (0, s.registerType)("CAAPhysicalMars", [Ve, Me, null]);
          }
        ),
        /***/
        "./esm/astrocalc/physical_sun.js": (
          /*!***************************************!*\
            !*** ./esm/astrocalc/physical_sun.js ***!
            \***************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAPhysicalSun: () => (
                /* binding */
                _
              ),
              /* harmony export */
              CAAPhysicalSunDetails: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./nutation.js */
              "./esm/astrocalc/nutation.js"
            ), l = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            );
            function o() {
              this.p = 0, this.b0 = 0, this.l0 = 0, this.p = 0, this.b0 = 0, this.l0 = 0;
            }
            var c = {};
            (0, s.registerType)("CAAPhysicalSunDetails", [o, c, null]);
            function _() {
            }
            _.calculate = function(y) {
              var g = a.CT.m360((y - 2398220) * 360 / 25.38), Ee = 7.25, Ve = 73.6667 + 1.3958333 * (y - 2396758) / 36525, Me = l.CAAEarth.eclipticLongitude(y), B = l.CAAEarth.radiusVector(y), Pe = Me + 180 - a.CT.dmS2D(0, 0, 20.4898 / B), k = Pe + a.CT.dmS2D(0, 0, t.CAANutation.nutationInLongitude(y)), b = t.CAANutation.trueObliquityOfEcliptic(y);
              b = a.CT.d2R(b), Pe = a.CT.d2R(Pe), k = a.CT.d2R(k), Ve = a.CT.d2R(Ve), Ee = a.CT.d2R(Ee), g = a.CT.d2R(g);
              var Le = Math.atan(-Math.cos(Pe) * Math.tan(b)), xe = Math.atan(-Math.cos(Pe - Ve) * Math.tan(Ee)), ze = new o();
              ze.p = a.CT.r2D(Le + xe), ze.b0 = a.CT.r2D(Math.asin(Math.sin(Pe - Ve) * Math.sin(Ee)));
              var Se = Math.atan(Math.tan(Pe - Ve) * Math.cos(Ee));
              return ze.l0 = a.CT.m360(a.CT.r2D(Se - g)), ze;
            }, _.timeOfStartOfRotation = function(y) {
              var g = 2398140227e-3 + 27.2752316 * y, Ee = a.CT.m360(281.96 + 26.882476 * y);
              return Ee = a.CT.d2R(Ee), g += 0.1454 * Math.sin(Ee) - 85e-4 * Math.sin(2 * Ee) - 0.0141 * Math.cos(2 * Ee), g;
            };
            var u = {};
            (0, s.registerType)("CAAPhysicalSun", [_, u, null]);
          }
        ),
        /***/
        "./esm/astrocalc/pluto.js": (
          /*!********************************!*\
            !*** ./esm/astrocalc/pluto.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAPluto: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              PlutoCoefficient1: () => (
                /* binding */
                t
              ),
              /* harmony export */
              PlutoCoefficient2: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t(Me, B, Pe) {
              this.j = 0, this.s = 0, this.p = 0, this.j = Me, this.s = B, this.p = Pe;
            }
            var l = {};
            (0, s.registerType)("PlutoCoefficient1", [t, l, null]);
            function o(Me, B) {
              this.a = 0, this.b = 0, this.a = Me, this.b = B;
            }
            var c = {};
            (0, s.registerType)("PlutoCoefficient2", [o, c, null]);
            const _ = [new t(0, 0, 1), new t(0, 0, 2), new t(0, 0, 3), new t(0, 0, 4), new t(0, 0, 5), new t(0, 0, 6), new t(0, 1, -1), new t(0, 1, 0), new t(0, 1, 1), new t(0, 1, 2), new t(0, 1, 3), new t(0, 2, -2), new t(0, 2, -1), new t(0, 2, 0), new t(1, -1, 0), new t(1, -1, 1), new t(1, 0, -3), new t(1, 0, -2), new t(1, 0, -1), new t(1, 0, 0), new t(1, 0, 1), new t(1, 0, 2), new t(1, 0, 3), new t(1, 0, 4), new t(1, 1, -3), new t(1, 1, -2), new t(1, 1, -1), new t(1, 1, 0), new t(1, 1, 1), new t(1, 1, 3), new t(2, 0, -6), new t(2, 0, -5), new t(2, 0, -4), new t(2, 0, -3), new t(2, 0, -2), new t(2, 0, -1), new t(2, 0, 0), new t(2, 0, 1), new t(2, 0, 2), new t(2, 0, 3), new t(3, 0, -2), new t(3, 0, -1), new t(3, 0, 0)], u = [new o(-19799805, 19850055), new o(897144, -4954829), new o(611149, 1211027), new o(-341243, -189585), new o(129287, -34992), new o(-38164, 30893), new o(20442, -9987), new o(-4063, -5071), new o(-6016, -3336), new o(-3956, 3039), new o(-667, 3572), new o(1276, 501), new o(1152, -917), new o(630, -1277), new o(2571, -459), new o(899, -1449), new o(-1016, 1043), new o(-2343, -1012), new o(7042, 788), new o(1199, -338), new o(418, -67), new o(120, -274), new o(-60, -159), new o(-82, -29), new o(-36, -29), new o(-40, 7), new o(-14, 22), new o(4, 13), new o(5, 2), new o(-1, 0), new o(2, 0), new o(-4, 5), new o(4, -7), new o(14, 24), new o(-49, -34), new o(163, -48), new o(9, -24), new o(-4, 1), new o(-3, 1), new o(1, 3), new o(-3, -1), new o(5, -3), new o(0, 0)], y = [new o(-5452852, -14974862), new o(3527812, 1672790), new o(-1050748, 327647), new o(178690, -292153), new o(18650, 100340), new o(-30697, -25823), new o(4878, 11248), new o(226, -64), new o(2030, -836), new o(69, -604), new o(-247, -567), new o(-57, 1), new o(-122, 175), new o(-49, -164), new o(-197, 199), new o(-25, 217), new o(589, -248), new o(-269, 711), new o(185, 193), new o(315, 807), new o(-130, -43), new o(5, 3), new o(2, 17), new o(2, 5), new o(2, 3), new o(3, 1), new o(2, -1), new o(1, -1), new o(0, -1), new o(0, 0), new o(0, -2), new o(2, 2), new o(-7, 0), new o(10, -8), new o(-3, 20), new o(6, 5), new o(14, 17), new o(-2, 0), new o(0, 0), new o(0, 0), new o(0, 1), new o(0, 0), new o(1, 0)], g = [new o(66865439, 68951812), new o(-11827535, -332538), new o(1593179, -1438890), new o(-18444, 483220), new o(-65977, -85431), new o(31174, -6032), new o(-5794, 22161), new o(4601, 4032), new o(-1729, 234), new o(-415, 702), new o(239, 723), new o(67, -67), new o(1034, -451), new o(-129, 504), new o(480, -231), new o(2, -441), new o(-3359, 265), new o(7856, -7832), new o(36, 45763), new o(8663, 8547), new o(-809, -769), new o(263, -144), new o(-126, 32), new o(-35, -16), new o(-19, -4), new o(-15, 8), new o(-4, 12), new o(5, 6), new o(3, 1), new o(6, -2), new o(2, 2), new o(-2, -2), new o(14, 13), new o(-63, 13), new o(136, -236), new o(273, 1065), new o(251, 149), new o(-25, -9), new o(9, -2), new o(-8, 7), new o(2, -10), new o(19, 35), new o(10, 3)];
            function Ee() {
            }
            Ee.eclipticLongitude = function(Me) {
              for (var B = (Me - 2451545) / 36525, Pe = 34.35 + 3034.9057 * B, k = 50.08 + 1222.1138 * B, b = 238.96 + 144.96 * B, Le = 0, xe = _.length, ze = 0; ze < xe; ze++) {
                var Se = _[ze].j * Pe + _[ze].s * k + _[ze].p * b;
                Se = a.CT.d2R(Se), Le += u[ze].a * Math.sin(Se) + u[ze].b * Math.cos(Se);
              }
              return Le = Le / 1e6, Le += 238.958116 + 144.96 * B, Le = a.CT.m360(Le), Le;
            }, Ee.eclipticLatitude = function(Me) {
              for (var B = (Me - 2451545) / 36525, Pe = 34.35 + 3034.9057 * B, k = 50.08 + 1222.1138 * B, b = 238.96 + 144.96 * B, Le = 0, xe = _.length, ze = 0; ze < xe; ze++) {
                var Se = _[ze].j * Pe + _[ze].s * k + _[ze].p * b;
                Se = a.CT.d2R(Se), Le += y[ze].a * Math.sin(Se) + y[ze].b * Math.cos(Se);
              }
              return Le = Le / 1e6, Le += -3.908239, Le;
            }, Ee.radiusVector = function(Me) {
              for (var B = (Me - 2451545) / 36525, Pe = 34.35 + 3034.9057 * B, k = 50.08 + 1222.1138 * B, b = 238.96 + 144.96 * B, Le = 0, xe = _.length, ze = 0; ze < xe; ze++) {
                var Se = _[ze].j * Pe + _[ze].s * k + _[ze].p * b;
                Se = a.CT.d2R(Se), Le += g[ze].a * Math.sin(Se) + g[ze].b * Math.cos(Se);
              }
              return Le = Le / 1e7, Le += 40.7241346, Le;
            };
            var Ve = {};
            (0, s.registerType)("CAAPluto", [Ee, Ve, null]);
          }
        ),
        /***/
        "./esm/astrocalc/precession.js": (
          /*!*************************************!*\
            !*** ./esm/astrocalc/precession.js ***!
            \*************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAPrecession: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            );
            function t() {
            }
            t.precessEquatorial = function(o, c, _, u) {
              var y = (_ - 2451545) / 36525, g = y * y, Ee = (u - _) / 36525, Ve = Ee * Ee, Me = Ve * Ee;
              o = a.CT.h2R(o), c = a.CT.d2R(c);
              var B = (2306.2181 + 1.39656 * y - 139e-6 * g) * Ee + (0.30188 - 344e-7 * y) * Ve + 0.017988 * Me;
              B = a.CT.d2R(a.CT.dmS2D(0, 0, B));
              var Pe = (2306.2181 + 1.39656 * y - 138e-6 * g) * Ee + (1.09468 + 66e-6 * y) * Ve + 0.018203 * Me;
              Pe = a.CT.d2R(a.CT.dmS2D(0, 0, Pe));
              var k = (2004.3109 - 0.8533 * y - 217e-6 * g) * Ee - (0.42665 + 217e-6 * y) * Ve - 0.041833 * Me;
              k = a.CT.d2R(a.CT.dmS2D(0, 0, k));
              var b = Math.cos(c) * Math.sin(o + B), Le = Math.cos(k) * Math.cos(c) * Math.cos(o + B) - Math.sin(k) * Math.sin(c), xe = Math.sin(k) * Math.cos(c) * Math.cos(o + B) + Math.cos(k) * Math.sin(c), ze = new a.COR();
              return ze.x = a.CT.r2H(Math.atan2(b, Le) + Pe), ze.x < 0 && (ze.x += 24), ze.y = a.CT.r2D(Math.asin(xe)), ze;
            }, t.precessEquatorialFK4 = function(o, c, _, u) {
              var y = (_ - 24150203135e-4) / 36524.2199, g = (u - _) / 36524.2199, Ee = g * g, Ve = Ee * g;
              o = a.CT.h2R(o), c = a.CT.d2R(c);
              var Me = (2304.25 + 1.396 * y) * g + 0.302 * Ee + 0.018 * Ve;
              Me = a.CT.d2R(a.CT.dmS2D(0, 0, Me));
              var B = 0.791 * Ee + 1e-3 * Ve;
              B = a.CT.d2R(a.CT.dmS2D(0, 0, B)), B += Me;
              var Pe = (2004.682 - 0.853 * y) * g - 0.426 * Ee - 0.042 * Ve;
              Pe = a.CT.d2R(a.CT.dmS2D(0, 0, Pe));
              var k = Math.cos(c) * Math.sin(o + Me), b = Math.cos(Pe) * Math.cos(c) * Math.cos(o + Me) - Math.sin(Pe) * Math.sin(c), Le = Math.sin(Pe) * Math.cos(c) * Math.cos(o + Me) + Math.cos(Pe) * Math.sin(c), xe = new a.COR();
              return xe.x = a.CT.r2H(Math.atan2(k, b) + B), xe.x < 0 && (xe.x += 24), xe.y = a.CT.r2D(Math.asin(Le)), xe;
            }, t.precessEcliptic = function(o, c, _, u) {
              var y = (_ - 2451545) / 36525, g = y * y, Ee = (u - _) / 36525, Ve = Ee * Ee, Me = Ve * Ee;
              o = a.CT.d2R(o), c = a.CT.d2R(c);
              var B = (47.0029 - 0.06603 * y + 598e-6 * g) * Ee + (-0.03302 + 598e-6 * y) * Ve + 6e-5 * Me;
              B = a.CT.d2R(a.CT.dmS2D(0, 0, B));
              var Pe = 174.876384 * 3600 + 3289.4789 * y + 0.60622 * g - (869.8089 + 0.50491 * y) * Ee + 0.03536 * Ve;
              Pe = a.CT.d2R(a.CT.dmS2D(0, 0, Pe));
              var k = (5029.0966 + 2.22226 * y - 42e-6 * g) * Ee + (1.11113 - 42e-6 * y) * Ve - 6e-6 * Me;
              k = a.CT.d2R(a.CT.dmS2D(0, 0, k));
              var b = Math.cos(B) * Math.cos(c) * Math.sin(Pe - o) - Math.sin(B) * Math.sin(c), Le = Math.cos(c) * Math.cos(Pe - o), xe = Math.cos(B) * Math.sin(c) + Math.sin(B) * Math.cos(c) * Math.sin(Pe - o), ze = new a.COR();
              return ze.x = a.CT.r2D(k + Pe - Math.atan2(b, Le)), ze.x < 0 && (ze.x += 360), ze.y = a.CT.r2D(Math.asin(xe)), ze;
            }, t.equatorialPMToEcliptic = function(o, c, _, u, y, g) {
              g = a.CT.d2R(g), o = a.CT.h2R(o), c = a.CT.d2R(c), _ = a.CT.d2R(_);
              var Ee = Math.cos(_), Ve = Math.sin(g), Me = new a.COR();
              return Me.x = (y * Ve * Math.cos(o) + u * Math.cos(c) * (Math.cos(g) * Math.cos(c) + Ve * Math.sin(c) * Math.sin(o))) / (Ee * Ee), Me.y = (y * (Math.cos(g) * Math.cos(c) + Ve * Math.sin(c) * Math.sin(o)) - u * Ve * Math.cos(o) * Math.cos(c)) / Ee, Me;
            }, t.adjustPositionUsingUniformProperMotion = function(o, c, _, u, y) {
              var g = new a.COR();
              return g.x = c + u * o / 3600, g.y = _ + y * o / 3600, g;
            }, t.adjustPositionUsingMotionInSpace = function(o, c, _, u, y, g, Ee) {
              c /= 977792, g /= 13751, Ee /= 206265, u = a.CT.h2R(u), y = a.CT.d2R(y);
              var Ve = o * Math.cos(y) * Math.cos(u), Me = o * Math.cos(y) * Math.sin(u), B = o * Math.sin(y), Pe = Ve / o * c - B * Ee * Math.cos(u) - Me * g, k = Me / o * c - B * Ee * Math.sin(u) + Ve * g, b = B / o * c + o * Ee * Math.cos(y);
              Ve += _ * Pe, Me += _ * k, B += _ * b;
              var Le = new a.COR();
              return Le.x = a.CT.r2H(Math.atan2(Me, Ve)), Le.x < 0 && (Le.x += 24), Le.y = a.CT.r2D(Math.atan2(B, Math.sqrt(Ve * Ve + Me * Me))), Le;
            };
            var l = {};
            (0, s.registerType)("CAAPrecession", [t, l, null]);
          }
        ),
        /***/
        "./esm/astrocalc/rise_transit_set.js": (
          /*!*******************************************!*\
            !*** ./esm/astrocalc/rise_transit_set.js ***!
            \*******************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAARiseTransitSet: () => (
                /* binding */
                u
              ),
              /* harmony export */
              CAARiseTransitSetDetails: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./dynamical_time.js */
              "./esm/astrocalc/dynamical_time.js"
            ), l = n(
              /*! ./interpolate.js */
              "./esm/astrocalc/interpolate.js"
            ), o = n(
              /*! ./sidereal.js */
              "./esm/astrocalc/sidereal.js"
            );
            function c() {
              this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0, this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0;
            }
            var _ = {};
            (0, s.registerType)("CAARiseTransitSetDetails", [c, _, null]);
            function u() {
            }
            u.rise = function(g, Ee, Ve, Me, B, Pe, k, b, Le, xe) {
              var ze = new c();
              ze.bValid = !1;
              var Se = o.CAASidereal.apparentGreenwichSiderealTime(g);
              Se *= 15;
              var Te = t.DYT.deltaT(g), D = a.CT.d2R(B), ke = a.CT.d2R(Le), Fe = a.CT.d2R(xe), He = (Math.sin(Fe) - Math.sin(ke) * Math.sin(D)) / (Math.cos(ke) * Math.cos(D));
              if (He > 1 || He < -1)
                return ze;
              var We = Math.acos(He);
              We = a.CT.r2D(We);
              var Ke = (Me * 15 + b - Se) / 360, $ = Ke - We / 360, De = Ke + We / 360;
              Ke > 1 ? Ke -= 1 : Ke < 0 && (Ke += 1), $ > 1 ? $ -= 1 : $ < 0 && ($ += 1), De > 1 ? De -= 1 : De < 0 && (De += 1);
              for (var Re = 0; Re < 2; Re++) {
                var Ie = Se + 360.985647 * $;
                Ie = a.CT.m360(Ie);
                var O = $ + Te / 86400, Ue = l.INTP.interpolate(O, Ee, Me, Pe), $e = l.INTP.interpolate(O, Ve, B, k), Ze = Ie - b - Ue * 15, Qe = a.CT.eq2H(Ze / 15, $e, Le), Ae = (Qe.y - xe) / (360 * Math.cos(a.CT.d2R($e)) * Math.cos(ke) * Math.sin(a.CT.d2R(Ze)));
                $ += Ae, Ie = Se + 360.985647 * Ke, Ie = a.CT.m360(Ie), O = Ke + Te / 86400, Ue = l.INTP.interpolate(O, Ee, Me, Pe), Ze = Ie - b - Ue * 15, Ze < -180 && (Ze += 360), Ae = -Ze / 360, Ke += Ae, Ie = Se + 360.985647 * De, Ie = a.CT.m360(Ie), O = De + Te / 86400, Ue = l.INTP.interpolate(O, Ee, Me, Pe), $e = l.INTP.interpolate(O, Ve, B, k), Ze = Ie - b - Ue * 15, Qe = a.CT.eq2H(Ze / 15, $e, Le), Ae = (Qe.y - xe) / (360 * Math.cos(a.CT.d2R($e)) * Math.cos(ke) * Math.sin(a.CT.d2R(Ze))), De += Ae;
              }
              return ze.bValid = !0, ze.rise = $ * 24, ze.set = De * 24, ze.transit = Ke * 24, ze;
            };
            var y = {};
            (0, s.registerType)("CAARiseTransitSet", [u, y, null]);
          }
        ),
        /***/
        "./esm/astrocalc/saturn.js": (
          /*!*********************************!*\
            !*** ./esm/astrocalc/saturn.js ***!
            \*********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAASaturn: () => (
                /* binding */
                Te
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            );
            const l = [new t.VSC(87401354, 0, 0), new t.VSC(11107660, 3.9620509, 213.29909544), new t.VSC(1414151, 4.5858152, 7.113547), new t.VSC(398379, 0.52112, 206.185548), new t.VSC(350769, 3.303299, 426.598191), new t.VSC(206816, 0.246584, 103.092774), new t.VSC(79271, 3.84007, 220.41264), new t.VSC(23990, 4.66977, 110.20632), new t.VSC(16574, 0.43719, 419.48464), new t.VSC(15820, 0.93809, 632.78374), new t.VSC(15054, 2.7167, 639.89729), new t.VSC(14907, 5.76903, 316.39187), new t.VSC(14610, 1.56519, 3.93215), new t.VSC(13160, 4.44891, 14.22709), new t.VSC(13005, 5.98119, 11.0457), new t.VSC(10725, 3.1294, 202.2534), new t.VSC(6126, 1.7633, 277.035), new t.VSC(5863, 0.2366, 529.691), new t.VSC(5228, 4.2078, 3.1814), new t.VSC(5020, 3.1779, 433.7117), new t.VSC(4593, 0.6198, 199.072), new t.VSC(4006, 2.2448, 63.7359), new t.VSC(3874, 3.2228, 138.5175), new t.VSC(3269, 0.7749, 949.1756), new t.VSC(2954, 0.9828, 95.9792), new t.VSC(2461, 2.0316, 735.8765), new t.VSC(1758, 3.2658, 522.5774), new t.VSC(1640, 5.505, 846.0828), new t.VSC(1581, 4.3727, 309.2783), new t.VSC(1391, 4.0233, 323.5054), new t.VSC(1124, 2.8373, 415.5525), new t.VSC(1087, 4.1834, 2.4477), new t.VSC(1017, 3.717, 227.5262), new t.VSC(957, 0.507, 1265.567), new t.VSC(853, 3.421, 175.166), new t.VSC(849, 3.191, 209.367), new t.VSC(789, 5.007, 0.963), new t.VSC(749, 2.144, 853.196), new t.VSC(744, 5.253, 224.345), new t.VSC(687, 1.747, 1052.268), new t.VSC(654, 1.599, 0.048), new t.VSC(634, 2.299, 412.371), new t.VSC(625, 0.97, 210.118), new t.VSC(580, 3.093, 74.782), new t.VSC(546, 2.127, 350.332), new t.VSC(543, 1.518, 9.561), new t.VSC(530, 4.449, 117.32), new t.VSC(478, 2.965, 137.033), new t.VSC(474, 5.475, 742.99), new t.VSC(452, 1.044, 490.334), new t.VSC(449, 1.29, 127.472), new t.VSC(372, 2.278, 217.231), new t.VSC(355, 3.013, 838.969), new t.VSC(347, 1.539, 340.771), new t.VSC(343, 0.246, 0.521), new t.VSC(330, 0.247, 1581.959), new t.VSC(322, 0.961, 203.738), new t.VSC(322, 2.572, 647.011), new t.VSC(309, 3.495, 216.48), new t.VSC(287, 2.37, 351.817), new t.VSC(278, 0.4, 211.815), new t.VSC(249, 1.47, 1368.66), new t.VSC(227, 4.91, 12.53), new t.VSC(220, 4.204, 200.769), new t.VSC(209, 1.345, 625.67), new t.VSC(208, 0.483, 1162.475), new t.VSC(208, 1.283, 39.357), new t.VSC(204, 6.011, 265.989), new t.VSC(185, 3.503, 149.563), new t.VSC(184, 0.973, 4.193), new t.VSC(182, 5.491, 2.921), new t.VSC(174, 1.863, 0.751), new t.VSC(165, 0.44, 5.417), new t.VSC(149, 5.736, 52.69), new t.VSC(148, 1.535, 5.629), new t.VSC(146, 6.231, 195.14), new t.VSC(140, 4.295, 21.341), new t.VSC(131, 4.068, 10.295), new t.VSC(125, 6.277, 1898.351), new t.VSC(122, 1.976, 4.666), new t.VSC(118, 5.341, 554.07), new t.VSC(117, 2.679, 1155.361), new t.VSC(114, 5.594, 1059.382), new t.VSC(112, 1.105, 191.208), new t.VSC(110, 0.166, 1.484), new t.VSC(109, 3.438, 536.805), new t.VSC(107, 4.012, 956.289), new t.VSC(104, 2.192, 88.866), new t.VSC(103, 1.197, 1685.052), new t.VSC(101, 4.965, 269.921)], o = [new t.VSC(21354295596, 0, 0), new t.VSC(1296855, 1.8282054, 213.2990954), new t.VSC(564348, 2.885001, 7.113547), new t.VSC(107679, 2.277699, 206.185548), new t.VSC(98323, 1.0807, 426.59819), new t.VSC(40255, 2.04128, 220.41264), new t.VSC(19942, 1.27955, 103.09277), new t.VSC(10512, 2.7488, 14.22709), new t.VSC(6939, 0.4049, 639.8973), new t.VSC(4803, 2.4419, 419.4846), new t.VSC(4056, 2.9217, 110.2063), new t.VSC(3769, 3.6497, 3.9322), new t.VSC(3385, 2.4169, 3.1814), new t.VSC(3302, 1.2626, 433.7117), new t.VSC(3071, 2.3274, 199.072), new t.VSC(1953, 3.5639, 11.0457), new t.VSC(1249, 2.628, 95.9792), new t.VSC(922, 1.961, 227.526), new t.VSC(706, 4.417, 529.691), new t.VSC(650, 6.174, 202.253), new t.VSC(628, 6.111, 309.278), new t.VSC(487, 6.04, 853.196), new t.VSC(479, 4.988, 522.577), new t.VSC(468, 4.617, 63.736), new t.VSC(417, 2.117, 323.505), new t.VSC(408, 1.299, 209.367), new t.VSC(352, 2.317, 632.784), new t.VSC(344, 3.959, 412.371), new t.VSC(340, 3.634, 316.392), new t.VSC(336, 3.772, 735.877), new t.VSC(332, 2.861, 210.118), new t.VSC(289, 2.733, 117.32), new t.VSC(281, 5.744, 2.448), new t.VSC(266, 0.543, 647.011), new t.VSC(230, 1.644, 216.48), new t.VSC(192, 2.965, 224.345), new t.VSC(173, 4.077, 846.083), new t.VSC(167, 2.597, 21.341), new t.VSC(136, 2.286, 10.295), new t.VSC(131, 3.441, 742.99), new t.VSC(128, 4.095, 217.231), new t.VSC(109, 6.161, 415.552), new t.VSC(98, 4.73, 838.97), new t.VSC(94, 3.48, 1052.27), new t.VSC(92, 3.95, 88.87), new t.VSC(87, 1.22, 440.83), new t.VSC(83, 3.11, 625.67), new t.VSC(78, 6.24, 302.16), new t.VSC(67, 0.29, 4.67), new t.VSC(66, 5.65, 9.56), new t.VSC(62, 4.29, 127.47), new t.VSC(62, 1.83, 195.14), new t.VSC(58, 2.48, 191.96), new t.VSC(57, 5.02, 137.03), new t.VSC(55, 0.28, 74.78), new t.VSC(54, 5.13, 490.33), new t.VSC(51, 1.46, 536.8), new t.VSC(47, 1.18, 149.56), new t.VSC(47, 5.15, 515.46), new t.VSC(46, 2.23, 956.29), new t.VSC(44, 2.71, 5.42), new t.VSC(40, 0.41, 269.92), new t.VSC(40, 3.89, 728.76), new t.VSC(38, 0.65, 422.67), new t.VSC(38, 2.53, 12.53), new t.VSC(37, 3.78, 2.92), new t.VSC(35, 6.08, 5.63), new t.VSC(34, 3.21, 1368.66), new t.VSC(33, 4.64, 277.03), new t.VSC(33, 5.43, 1066.5), new t.VSC(33, 0.3, 351.82), new t.VSC(32, 4.39, 1155.36), new t.VSC(31, 2.43, 52.69), new t.VSC(30, 2.84, 203), new t.VSC(30, 6.19, 284.15), new t.VSC(30, 3.39, 1059.38), new t.VSC(29, 2.03, 330.62), new t.VSC(28, 2.74, 265.99), new t.VSC(26, 4.51, 340.77)], c = [new t.VSC(116441, 1.179879, 7.113547), new t.VSC(91921, 0.07425, 213.2991), new t.VSC(90592, 0, 0), new t.VSC(15277, 4.06492, 206.18555), new t.VSC(10631, 0.25778, 220.41264), new t.VSC(10605, 5.40964, 426.59819), new t.VSC(4265, 1.046, 14.2271), new t.VSC(1216, 2.9186, 103.0928), new t.VSC(1165, 4.6094, 639.8973), new t.VSC(1082, 5.6913, 433.7117), new t.VSC(1045, 4.0421, 199.072), new t.VSC(1020, 0.6337, 3.1814), new t.VSC(634, 4.388, 419.485), new t.VSC(549, 5.573, 3.932), new t.VSC(457, 1.268, 110.206), new t.VSC(425, 0.209, 227.526), new t.VSC(274, 4.288, 95.979), new t.VSC(162, 1.381, 11.046), new t.VSC(129, 1.566, 309.278), new t.VSC(117, 3.881, 853.196), new t.VSC(105, 4.9, 647.011), new t.VSC(101, 0.893, 21.341), new t.VSC(96, 2.91, 316.39), new t.VSC(95, 5.63, 412.37), new t.VSC(85, 5.73, 209.37), new t.VSC(83, 6.05, 216.48), new t.VSC(82, 1.02, 117.32), new t.VSC(75, 4.76, 210.12), new t.VSC(67, 0.46, 522.58), new t.VSC(66, 0.48, 10.29), new t.VSC(64, 0.35, 323.51), new t.VSC(61, 4.88, 632.78), new t.VSC(53, 2.75, 529.69), new t.VSC(46, 5.69, 440.83), new t.VSC(45, 1.67, 202.25), new t.VSC(42, 5.71, 88.87), new t.VSC(32, 0.07, 63.74), new t.VSC(32, 1.67, 302.16), new t.VSC(31, 4.16, 191.96), new t.VSC(27, 0.83, 224.34), new t.VSC(25, 5.66, 735.88), new t.VSC(20, 5.94, 217.23), new t.VSC(18, 4.9, 625.67), new t.VSC(17, 1.63, 742.99), new t.VSC(16, 0.58, 515.46), new t.VSC(14, 0.21, 838.97), new t.VSC(14, 3.76, 195.14), new t.VSC(12, 4.72, 203), new t.VSC(12, 0.13, 234.64), new t.VSC(12, 3.12, 846.08), new t.VSC(11, 5.92, 536.8), new t.VSC(11, 5.6, 728.76), new t.VSC(11, 3.2, 1066.5), new t.VSC(10, 4.99, 422.67), new t.VSC(10, 0.26, 330.62), new t.VSC(10, 4.15, 860.31), new t.VSC(9, 0.46, 956.29), new t.VSC(8, 2.14, 269.92), new t.VSC(8, 5.25, 429.78), new t.VSC(8, 4.03, 9.56), new t.VSC(7, 5.4, 1052.27), new t.VSC(6, 4.46, 284.15), new t.VSC(6, 5.93, 405.26)], _ = [new t.VSC(16039, 5.73945, 7.11355), new t.VSC(4250, 4.5854, 213.2991), new t.VSC(1907, 4.7608, 220.4126), new t.VSC(1466, 5.9133, 206.1855), new t.VSC(1162, 5.6197, 14.2271), new t.VSC(1067, 3.6082, 426.5982), new t.VSC(239, 3.861, 433.712), new t.VSC(237, 5.768, 199.072), new t.VSC(166, 5.116, 3.181), new t.VSC(151, 2.736, 639.897), new t.VSC(131, 4.743, 227.526), new t.VSC(63, 0.23, 419.48), new t.VSC(62, 4.74, 103.09), new t.VSC(40, 5.47, 21.34), new t.VSC(40, 5.96, 95.98), new t.VSC(39, 5.83, 110.21), new t.VSC(28, 3.01, 647.01), new t.VSC(25, 0.99, 3.93), new t.VSC(19, 1.92, 853.2), new t.VSC(18, 4.97, 10.29), new t.VSC(18, 1.03, 412.37), new t.VSC(18, 4.2, 216.48), new t.VSC(18, 3.32, 309.28), new t.VSC(16, 3.9, 440.83), new t.VSC(16, 5.62, 117.32), new t.VSC(13, 1.18, 88.87), new t.VSC(11, 5.58, 11.05), new t.VSC(11, 5.93, 191.96), new t.VSC(10, 3.95, 209.37), new t.VSC(9, 3.39, 302.16), new t.VSC(8, 4.88, 323.51), new t.VSC(7, 0.38, 632.78), new t.VSC(6, 2.25, 522.58), new t.VSC(6, 1.06, 210.12), new t.VSC(5, 4.64, 234.64), new t.VSC(4, 3.14, 0), new t.VSC(4, 2.31, 515.46), new t.VSC(3, 2.2, 860.31), new t.VSC(3, 0.59, 529.69), new t.VSC(3, 4.93, 224.34), new t.VSC(3, 0.42, 625.67), new t.VSC(2, 4.77, 330.62), new t.VSC(2, 3.35, 429.78), new t.VSC(2, 3.2, 202.25), new t.VSC(2, 1.19, 1066.5), new t.VSC(2, 1.35, 405.26), new t.VSC(2, 4.16, 223.59), new t.VSC(2, 3.07, 654.12)], u = [new t.VSC(1662, 3.9983, 7.1135), new t.VSC(257, 2.984, 220.413), new t.VSC(236, 3.902, 14.227), new t.VSC(149, 2.741, 213.299), new t.VSC(114, 3.142, 0), new t.VSC(110, 1.515, 206.186), new t.VSC(68, 1.72, 426.6), new t.VSC(40, 2.05, 433.71), new t.VSC(38, 1.24, 199.07), new t.VSC(31, 3.01, 227.53), new t.VSC(15, 0.83, 639.9), new t.VSC(9, 3.71, 21.34), new t.VSC(6, 2.42, 419.48), new t.VSC(6, 1.16, 647.01), new t.VSC(4, 1.45, 95.98), new t.VSC(4, 2.12, 440.83), new t.VSC(3, 4.09, 110.21), new t.VSC(3, 2.77, 412.37), new t.VSC(3, 3.01, 88.87), new t.VSC(3, 0, 853.2), new t.VSC(3, 0.39, 103.09), new t.VSC(2, 3.78, 117.32), new t.VSC(2, 2.83, 234.64), new t.VSC(2, 5.08, 309.28), new t.VSC(2, 2.24, 216.48), new t.VSC(2, 5.19, 302.16), new t.VSC(1, 1.55, 191.96)], y = [new t.VSC(124, 2.259, 7.114), new t.VSC(34, 2.16, 14.23), new t.VSC(28, 1.2, 220.41), new t.VSC(6, 1.22, 227.53), new t.VSC(5, 0.24, 433.71), new t.VSC(4, 6.23, 426.6), new t.VSC(3, 2.97, 199.07), new t.VSC(3, 4.29, 206.19), new t.VSC(2, 6.25, 213.3), new t.VSC(1, 5.28, 639.9), new t.VSC(1, 0.24, 440.83), new t.VSC(1, 3.14, 0)], g = [new t.VSC(4330678, 3.6028443, 213.2990954), new t.VSC(240348, 2.852385, 426.598191), new t.VSC(84746, 0, 0), new t.VSC(34116, 0.57297, 206.18555), new t.VSC(30863, 3.48442, 220.41264), new t.VSC(14734, 2.11847, 639.89729), new t.VSC(9917, 5.79, 419.4846), new t.VSC(6994, 4.736, 7.1135), new t.VSC(4808, 5.4331, 316.3919), new t.VSC(4788, 4.9651, 110.2063), new t.VSC(3432, 2.7326, 433.7117), new t.VSC(1506, 6.013, 103.0928), new t.VSC(1060, 5.631, 529.691), new t.VSC(969, 5.204, 632.784), new t.VSC(942, 1.396, 853.196), new t.VSC(708, 3.803, 323.505), new t.VSC(552, 5.131, 202.253), new t.VSC(400, 3.359, 227.526), new t.VSC(319, 3.626, 209.367), new t.VSC(316, 1.997, 647.011), new t.VSC(314, 0.465, 217.231), new t.VSC(284, 4.886, 224.345), new t.VSC(236, 2.139, 11.046), new t.VSC(215, 5.95, 846.083), new t.VSC(209, 2.12, 415.552), new t.VSC(207, 0.73, 199.072), new t.VSC(179, 2.954, 63.736), new t.VSC(141, 0.644, 490.334), new t.VSC(139, 4.595, 14.227), new t.VSC(139, 1.998, 735.877), new t.VSC(135, 5.245, 742.99), new t.VSC(122, 3.115, 522.577), new t.VSC(116, 3.109, 216.48), new t.VSC(114, 0.963, 210.118)], Ee = [new t.VSC(397555, 5.3329, 213.299095), new t.VSC(49479, 3.14159, 0), new t.VSC(18572, 6.09919, 426.59819), new t.VSC(14801, 2.30586, 206.18555), new t.VSC(9644, 1.6967, 220.4126), new t.VSC(3757, 1.2543, 419.4846), new t.VSC(2717, 5.9117, 639.8973), new t.VSC(1455, 0.8516, 433.7117), new t.VSC(1291, 2.9177, 7.1135), new t.VSC(853, 0.436, 316.392), new t.VSC(298, 0.919, 632.784), new t.VSC(292, 5.316, 853.196), new t.VSC(284, 1.619, 227.526), new t.VSC(275, 3.889, 103.093), new t.VSC(172, 0.052, 647.011), new t.VSC(166, 2.444, 199.072), new t.VSC(158, 5.209, 110.206), new t.VSC(128, 1.207, 529.691), new t.VSC(110, 2.457, 217.231), new t.VSC(82, 2.76, 210.12), new t.VSC(81, 2.86, 14.23), new t.VSC(69, 1.66, 202.25), new t.VSC(65, 1.26, 216.48), new t.VSC(61, 1.25, 209.37), new t.VSC(59, 1.82, 323.51), new t.VSC(46, 0.82, 440.83), new t.VSC(36, 1.82, 224.34), new t.VSC(34, 2.84, 117.32), new t.VSC(33, 1.31, 412.37), new t.VSC(32, 1.19, 846.08), new t.VSC(27, 4.65, 1066.5), new t.VSC(27, 4.44, 11.05)], Ve = [new t.VSC(20630, 0.50482, 213.2991), new t.VSC(3720, 3.9983, 206.1855), new t.VSC(1627, 6.1819, 220.4126), new t.VSC(1346, 0, 0), new t.VSC(706, 3.039, 419.485), new t.VSC(365, 5.099, 426.598), new t.VSC(330, 5.279, 433.712), new t.VSC(219, 3.828, 639.897), new t.VSC(139, 1.043, 7.114), new t.VSC(104, 6.157, 227.526), new t.VSC(93, 1.98, 316.39), new t.VSC(71, 4.15, 199.07), new t.VSC(52, 2.88, 632.78), new t.VSC(49, 4.43, 647.01), new t.VSC(41, 3.16, 853.2), new t.VSC(29, 4.53, 210.12), new t.VSC(24, 1.12, 14.23), new t.VSC(21, 4.35, 217.23), new t.VSC(20, 5.31, 440.83), new t.VSC(18, 0.85, 110.21), new t.VSC(17, 5.68, 216.48), new t.VSC(16, 4.26, 103.09), new t.VSC(14, 3, 412.37), new t.VSC(12, 2.53, 529.69), new t.VSC(8, 3.32, 202.25), new t.VSC(7, 5.56, 209.37), new t.VSC(7, 0.29, 323.51), new t.VSC(6, 1.16, 117.32), new t.VSC(6, 3.61, 869.31)], Me = [new t.VSC(666, 1.99, 213.299), new t.VSC(632, 5.698, 206.186), new t.VSC(398, 0, 0), new t.VSC(188, 4.338, 220.413), new t.VSC(92, 4.84, 419.48), new t.VSC(52, 3.42, 433.71), new t.VSC(42, 2.38, 426.6), new t.VSC(26, 4.4, 227.53), new t.VSC(21, 5.85, 199.07), new t.VSC(18, 1.99, 639.9), new t.VSC(11, 5.37, 7.11), new t.VSC(10, 2.55, 647.01), new t.VSC(7, 3.46, 316.39), new t.VSC(6, 4.8, 632.78), new t.VSC(6, 0.02, 210.12), new t.VSC(6, 3.52, 440.83), new t.VSC(5, 5.64, 14.23), new t.VSC(5, 1.22, 853.2), new t.VSC(4, 4.71, 412.37), new t.VSC(3, 0.63, 103.09), new t.VSC(2, 3.72, 216.48)], B = [new t.VSC(80, 1.12, 206.19), new t.VSC(32, 3.12, 213.3), new t.VSC(17, 2.48, 220.41), new t.VSC(12, 3.14, 0), new t.VSC(9, 0.38, 419.48), new t.VSC(6, 1.56, 433.71), new t.VSC(5, 2.63, 227.53), new t.VSC(5, 1.28, 199.07), new t.VSC(1, 1.43, 426.6), new t.VSC(1, 0.67, 647.01), new t.VSC(1, 1.72, 440.83), new t.VSC(1, 6.18, 639.9)], Pe = [new t.VSC(8, 2.82, 206.19), new t.VSC(1, 0.51, 220.41)], k = [new t.VSC(955758136, 0, 0), new t.VSC(52921382, 2.3922622, 213.29909544), new t.VSC(1873680, 5.2354961, 206.1855484), new t.VSC(1464664, 1.6476305, 426.5981909), new t.VSC(821891, 5.9352, 316.39187), new t.VSC(547507, 5.015326, 103.092774), new t.VSC(371684, 2.271148, 220.412642), new t.VSC(361778, 3.139043, 7.113547), new t.VSC(140618, 5.704067, 632.783739), new t.VSC(108975, 3.293136, 110.206321), new t.VSC(69007, 5.941, 419.48464), new t.VSC(61053, 0.94038, 639.89729), new t.VSC(48913, 1.55733, 202.2534), new t.VSC(34144, 0.19519, 277.03499), new t.VSC(32402, 5.47085, 949.17561), new t.VSC(20937, 0.46349, 735.87651), new t.VSC(20839, 1.52103, 433.71174), new t.VSC(20747, 5.33256, 199.072), new t.VSC(15298, 3.05944, 529.69097), new t.VSC(14296, 2.60434, 323.50542), new t.VSC(12884, 1.64892, 138.5175), new t.VSC(11993, 5.98051, 846.08283), new t.VSC(11380, 1.73106, 522.57742), new t.VSC(9796, 5.2048, 1265.5675), new t.VSC(7753, 5.8519, 95.9792), new t.VSC(6771, 3.0043, 14.2271), new t.VSC(6466, 0.1773, 1052.2684), new t.VSC(5850, 1.4552, 415.5525), new t.VSC(5307, 0.5974, 63.7359), new t.VSC(4696, 2.1492, 227.5262), new t.VSC(4044, 1.6401, 209.3669), new t.VSC(3688, 0.7802, 412.3711), new t.VSC(3461, 1.8509, 175.1661), new t.VSC(3420, 4.9455, 1581.9593), new t.VSC(3401, 0.5539, 350.3321), new t.VSC(3376, 3.6953, 224.3448), new t.VSC(2976, 5.6847, 210.1177), new t.VSC(2885, 1.3876, 838.9693), new t.VSC(2881, 0.1796, 853.1964), new t.VSC(2508, 3.5385, 742.9901), new t.VSC(2448, 6.1841, 1368.6603), new t.VSC(2406, 2.9656, 117.3199), new t.VSC(2174, 0.0151, 340.7709), new t.VSC(2024, 5.0541, 11.0457)], b = [new t.VSC(6182981, 0.2584352, 213.2990954), new t.VSC(506578, 0.711147, 206.185548), new t.VSC(341394, 5.796358, 426.598191), new t.VSC(188491, 0.472157, 220.412642), new t.VSC(186262, 3.141593, 0), new t.VSC(143891, 1.407449, 7.113547), new t.VSC(49621, 6.01744, 103.09277), new t.VSC(20928, 5.09246, 639.89729), new t.VSC(19953, 1.1756, 419.48464), new t.VSC(18840, 1.6082, 110.20632), new t.VSC(13877, 0.75886, 199.072), new t.VSC(12893, 5.9433, 433.71174), new t.VSC(5397, 1.2885, 14.2271), new t.VSC(4869, 0.8679, 323.5054), new t.VSC(4247, 0.393, 227.5262), new t.VSC(3252, 1.2585, 95.9792), new t.VSC(3081, 3.4366, 522.5774), new t.VSC(2909, 4.6068, 202.2534), new t.VSC(2856, 2.1673, 735.8765), new t.VSC(1988, 2.4505, 412.3711), new t.VSC(1941, 6.0239, 209.3669), new t.VSC(1581, 1.2919, 210.1177), new t.VSC(1340, 4.308, 853.1964), new t.VSC(1316, 1.253, 117.3199), new t.VSC(1203, 1.8665, 316.3919), new t.VSC(1091, 0.0753, 216.4805), new t.VSC(966, 0.48, 632.784), new t.VSC(954, 5.152, 647.011), new t.VSC(898, 0.983, 529.691), new t.VSC(882, 1.885, 1052.268), new t.VSC(874, 1.402, 224.345), new t.VSC(785, 3.064, 838.969), new t.VSC(740, 1.382, 625.67), new t.VSC(658, 4.144, 309.278), new t.VSC(650, 1.725, 742.99), new t.VSC(613, 3.033, 63.736), new t.VSC(599, 2.549, 217.231), new t.VSC(503, 2.13, 3.932)], Le = [new t.VSC(436902, 4.786717, 213.299095), new t.VSC(71923, 2.5007, 206.18555), new t.VSC(49767, 4.97168, 220.41264), new t.VSC(43221, 3.8694, 426.59819), new t.VSC(29646, 5.9631, 7.11355), new t.VSC(4721, 2.4753, 199.072), new t.VSC(4142, 4.1067, 433.7117), new t.VSC(3789, 3.0977, 639.8973), new t.VSC(2964, 1.3721, 103.0928), new t.VSC(2556, 2.8507, 419.4846), new t.VSC(2327, 0, 0), new t.VSC(2208, 6.2759, 110.2063), new t.VSC(2188, 5.8555, 14.2271), new t.VSC(1957, 4.9245, 227.5262), new t.VSC(924, 5.464, 323.505), new t.VSC(706, 2.971, 95.979), new t.VSC(546, 4.129, 412.371), new t.VSC(431, 5.178, 522.577), new t.VSC(405, 4.173, 209.367), new t.VSC(391, 4.481, 216.48), new t.VSC(374, 5.834, 117.32), new t.VSC(361, 3.277, 647.011), new t.VSC(356, 3.192, 210.118), new t.VSC(326, 2.269, 853.196), new t.VSC(207, 4.022, 735.877), new t.VSC(204, 0.088, 202.253), new t.VSC(180, 3.597, 632.784), new t.VSC(178, 4.097, 440.825), new t.VSC(154, 3.135, 625.67), new t.VSC(148, 0.136, 302.165), new t.VSC(133, 2.594, 191.958), new t.VSC(132, 5.933, 309.278)], xe = [new t.VSC(20315, 3.02187, 213.2991), new t.VSC(8924, 3.1914, 220.4126), new t.VSC(6909, 4.3517, 206.1855), new t.VSC(4087, 4.2241, 7.1135), new t.VSC(3879, 2.0106, 426.5982), new t.VSC(1071, 4.2036, 199.072), new t.VSC(907, 2.283, 433.712), new t.VSC(606, 3.175, 227.526), new t.VSC(597, 4.135, 14.227), new t.VSC(483, 1.173, 639.897), new t.VSC(393, 0, 0), new t.VSC(229, 4.698, 419.485), new t.VSC(188, 4.59, 110.206), new t.VSC(150, 3.202, 103.093), new t.VSC(121, 3.768, 323.505), new t.VSC(102, 4.71, 95.979), new t.VSC(101, 5.819, 412.371), new t.VSC(93, 1.44, 647.01), new t.VSC(84, 2.63, 216.48), new t.VSC(73, 4.15, 117.32), new t.VSC(62, 2.31, 440.83), new t.VSC(55, 0.31, 853.2), new t.VSC(50, 2.39, 209.37), new t.VSC(45, 4.37, 191.96), new t.VSC(41, 0.69, 522.58), new t.VSC(40, 1.84, 302.16), new t.VSC(38, 5.94, 88.87), new t.VSC(32, 4.01, 21.34)], ze = [new t.VSC(1202, 1.415, 220.4126), new t.VSC(708, 1.162, 213.299), new t.VSC(516, 6.24, 206.186), new t.VSC(427, 2.469, 7.114), new t.VSC(268, 0.187, 426.598), new t.VSC(170, 5.959, 199.072), new t.VSC(150, 0.48, 433.712), new t.VSC(145, 1.442, 227.526), new t.VSC(121, 2.405, 14.227), new t.VSC(47, 5.57, 639.9), new t.VSC(19, 5.86, 647.01), new t.VSC(17, 0.53, 440.83), new t.VSC(16, 2.9, 110.21), new t.VSC(15, 0.3, 419.48), new t.VSC(14, 1.3, 412.37), new t.VSC(13, 2.09, 323.51), new t.VSC(11, 0.22, 95.98), new t.VSC(11, 2.46, 117.32), new t.VSC(10, 3.14, 0), new t.VSC(9, 1.56, 88.87), new t.VSC(9, 2.28, 21.34), new t.VSC(9, 0.68, 216.48), new t.VSC(8, 1.27, 234.64)], Se = [new t.VSC(129, 5.913, 220.413), new t.VSC(32, 0.69, 7.11), new t.VSC(27, 5.91, 227.53), new t.VSC(20, 4.95, 433.71), new t.VSC(20, 0.67, 14.23), new t.VSC(14, 2.67, 206.19), new t.VSC(14, 1.46, 199.07), new t.VSC(13, 4.59, 426.6), new t.VSC(7, 4.63, 213.3), new t.VSC(5, 3.61, 639.9), new t.VSC(4, 4.9, 440.83), new t.VSC(3, 4.07, 647.01), new t.VSC(3, 4.66, 191.96), new t.VSC(3, 0.49, 323.51), new t.VSC(3, 3.18, 419.48), new t.VSC(2, 3.7, 88.87), new t.VSC(2, 3.32, 95.98), new t.VSC(2, 0.56, 117.32)];
            function Te() {
            }
            Te.eclipticLongitude = function(ke) {
              var Fe = (ke - 2451545) / 365250, He = Fe * Fe, We = He * Fe, Ke = We * Fe, $ = Ke * Fe, De = l.length, Re = 0, Ie;
              for (Ie = 0; Ie < De; Ie++)
                Re += l[Ie].a * Math.cos(l[Ie].b + l[Ie].c * Fe);
              var O = o.length, Ue = 0;
              for (Ie = 0; Ie < O; Ie++)
                Ue += o[Ie].a * Math.cos(o[Ie].b + o[Ie].c * Fe);
              var $e = c.length, Ze = 0;
              for (Ie = 0; Ie < $e; Ie++)
                Ze += c[Ie].a * Math.cos(c[Ie].b + c[Ie].c * Fe);
              var Qe = _.length, Ae = 0;
              for (Ie = 0; Ie < Qe; Ie++)
                Ae += _[Ie].a * Math.cos(_[Ie].b + _[Ie].c * Fe);
              var Ne = u.length, Be = 0;
              for (Ie = 0; Ie < Ne; Ie++)
                Be += u[Ie].a * Math.cos(u[Ie].b + u[Ie].c * Fe);
              var Ge = y.length, Ye = 0;
              for (Ie = 0; Ie < Ge; Ie++)
                Ye += y[Ie].a * Math.cos(y[Ie].b + y[Ie].c * Fe);
              var je = (Re + Ue * Fe + Ze * He + Ae * We + Be * Ke + Ye * $) / 1e8;
              return je = a.CT.m360(a.CT.r2D(je)), je;
            }, Te.eclipticLatitude = function(ke) {
              var Fe = (ke - 2451545) / 365250, He = Fe * Fe, We = He * Fe, Ke = We * Fe, $ = Ke * Fe, De = g.length, Re = 0, Ie;
              for (Ie = 0; Ie < De; Ie++)
                Re += g[Ie].a * Math.cos(g[Ie].b + g[Ie].c * Fe);
              var O = Ee.length, Ue = 0;
              for (Ie = 0; Ie < O; Ie++)
                Ue += Ee[Ie].a * Math.cos(Ee[Ie].b + Ee[Ie].c * Fe);
              var $e = Ve.length, Ze = 0;
              for (Ie = 0; Ie < $e; Ie++)
                Ze += Ve[Ie].a * Math.cos(Ve[Ie].b + Ve[Ie].c * Fe);
              var Qe = Me.length, Ae = 0;
              for (Ie = 0; Ie < Qe; Ie++)
                Ae += Me[Ie].a * Math.cos(Me[Ie].b + Me[Ie].c * Fe);
              var Ne = B.length, Be = 0;
              for (Ie = 0; Ie < Ne; Ie++)
                Be += B[Ie].a * Math.cos(B[Ie].b + B[Ie].c * Fe);
              var Ge = Pe.length, Ye = 0;
              for (Ie = 0; Ie < Ge; Ie++)
                Ye += Pe[Ie].a * Math.cos(Pe[Ie].b + Pe[Ie].c * Fe);
              var je = (Re + Ue * Fe + Ze * He + Ae * We + Be * Ke + Ye * $) / 1e8;
              return je = a.CT.r2D(je), je;
            }, Te.radiusVector = function(ke) {
              var Fe = (ke - 2451545) / 365250, He = Fe * Fe, We = He * Fe, Ke = We * Fe, $ = Ke * Fe, De = k.length, Re = 0, Ie;
              for (Ie = 0; Ie < De; Ie++)
                Re += k[Ie].a * Math.cos(k[Ie].b + k[Ie].c * Fe);
              var O = b.length, Ue = 0;
              for (Ie = 0; Ie < O; Ie++)
                Ue += b[Ie].a * Math.cos(b[Ie].b + b[Ie].c * Fe);
              var $e = Le.length, Ze = 0;
              for (Ie = 0; Ie < $e; Ie++)
                Ze += Le[Ie].a * Math.cos(Le[Ie].b + Le[Ie].c * Fe);
              var Qe = xe.length, Ae = 0;
              for (Ie = 0; Ie < Qe; Ie++)
                Ae += xe[Ie].a * Math.cos(xe[Ie].b + xe[Ie].c * Fe);
              var Ne = ze.length, Be = 0;
              for (Ie = 0; Ie < Ne; Ie++)
                Be += ze[Ie].a * Math.cos(ze[Ie].b + ze[Ie].c * Fe);
              var Ge = Se.length, Ye = 0;
              for (Ie = 0; Ie < Ge; Ie++)
                Ye += Se[Ie].a * Math.cos(Se[Ie].b + Se[Ie].c * Fe);
              return (Re + Ue * Fe + Ze * He + Ae * We + Be * Ke + Ye * $) / 1e8;
            };
            var D = {};
            (0, s.registerType)("CAASaturn", [Te, D, null]);
          }
        ),
        /***/
        "./esm/astrocalc/saturn_rings.js": (
          /*!***************************************!*\
            !*** ./esm/astrocalc/saturn_rings.js ***!
            \***************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAASaturnRingDetails: () => (
                /* binding */
                u
              ),
              /* harmony export */
              CAASaturnRings: () => (
                /* binding */
                g
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./fk5.js */
              "./esm/astrocalc/fk5.js"
            ), l = n(
              /*! ./elliptical.js */
              "./esm/astrocalc/elliptical.js"
            ), o = n(
              /*! ./nutation.js */
              "./esm/astrocalc/nutation.js"
            ), c = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            ), _ = n(
              /*! ./saturn.js */
              "./esm/astrocalc/saturn.js"
            );
            function u() {
              this.b = 0, this.bdash = 0, this.p = 0, this.a = 0, this.b = 0, this.deltaU = 0, this.b = 0, this.bdash = 0, this.p = 0, this.a = 0, this.b = 0, this.deltaU = 0;
            }
            var y = {};
            (0, s.registerType)("CAASaturnRingDetails", [u, y, null]);
            function g() {
            }
            g.calculate = function(Ve) {
              var Me = new u(), B = (Ve - 2451545) / 36525, Pe = B * B, k = 28.075216 - 0.012998 * B + 4e-6 * Pe, b = a.CT.d2R(k), Le = 169.50847 + 1.394681 * B + 412e-6 * Pe, xe = a.CT.d2R(Le), ze = c.CAAEarth.eclipticLongitude(Ve), Se = c.CAAEarth.eclipticLatitude(Ve);
              ze += t.CAAFK5.correctionInLongitude(ze, Se, Ve);
              var Te = a.CT.d2R(ze);
              Se += t.CAAFK5.correctionInLatitude(ze, Ve);
              for (var D = a.CT.d2R(Se), ke = c.CAAEarth.radiusVector(Ve), Fe = 9, He = 0, We = l.ELL.distanceToLightTime(Fe), Ke = Ve - We, $ = !0, De = 0, Re = 0, Ie = 0, O = 0, Ue = 0, $e = 0; $; ) {
                O = _.CAASaturn.eclipticLongitude(Ke), Ue = _.CAASaturn.eclipticLatitude(Ke), O += t.CAAFK5.correctionInLongitude(O, Ue, Ke), Ue += t.CAAFK5.correctionInLatitude(O, Ke);
                var Ze = a.CT.d2R(O), Qe = a.CT.d2R(Ue);
                $e = _.CAASaturn.radiusVector(Ke), De = $e * Math.cos(Qe) * Math.cos(Ze) - ke * Math.cos(Te), Re = $e * Math.cos(Qe) * Math.sin(Ze) - ke * Math.sin(Te), Ie = $e * Math.sin(Qe) - ke * Math.sin(D), Fe = Math.sqrt(De * De + Re * Re + Ie * Ie), We = l.ELL.distanceToLightTime(Fe), $ = Math.abs(We - He) > 2e-6, $ && (Ke = Ve - We, He = We);
              }
              var Ae = Math.atan2(Re, De), Ne = Math.atan2(Ie, Math.sqrt(De * De + Re * Re));
              Me.b = Math.asin(Math.sin(b) * Math.cos(Ne) * Math.sin(Ae - xe) - Math.cos(b) * Math.sin(Ne)), Me.a = 375.35 / Fe, Me.b = Me.a * Math.sin(Math.abs(Me.b)), Me.b = a.CT.r2D(Me.b);
              var Be = 113.6655 + 0.8771 * B, Ge = a.CT.d2R(Be), Ye = O - 0.01759 / $e, je = a.CT.d2R(Ye), ht = Ue - 764e-6 * Math.cos(je - Ge) / $e, qe = a.CT.d2R(ht);
              Me.bdash = a.CT.r2D(Math.asin(Math.sin(b) * Math.cos(qe) * Math.sin(je - xe) - Math.cos(b) * Math.sin(qe)));
              var lt = Math.atan2(Math.sin(b) * Math.sin(qe) + Math.cos(b) * Math.cos(qe) * Math.sin(je - xe), Math.cos(qe) * Math.cos(je - xe)), ft = Math.atan2(Math.sin(b) * Math.sin(Ne) + Math.cos(b) * Math.cos(Ne) * Math.sin(Ae - xe), Math.cos(Ne) * Math.cos(Ae - xe));
              Me.deltaU = a.CT.r2D(Math.abs(lt - ft));
              var _t = o.CAANutation.trueObliquityOfEcliptic(Ve), St = o.CAANutation.nutationInLongitude(Ve), yt = Le - 90, Ct = 90 - k;
              Ae += a.CT.d2R(5693e-6 * Math.cos(Te - Ae) / Math.cos(Ne)), Ne += a.CT.d2R(5693e-6 * Math.sin(Te - Ae) * Math.sin(Ne)), Ae = a.CT.r2D(Ae), Ae += St / 3600, Ae = a.CT.m360(Ae), yt += St / 3600, yt = a.CT.m360(yt), Ne = a.CT.r2D(Ne);
              var Lt = a.CT.ec2Eq(Ae, Ne, _t), Vt = a.CT.h2R(Lt.x), Tt = a.CT.d2R(Lt.y), xt = a.CT.ec2Eq(yt, Ct, _t), Ot = a.CT.h2R(xt.x), Pt = a.CT.d2R(xt.y);
              return Me.p = a.CT.r2D(Math.atan2(Math.cos(Pt) * Math.sin(Ot - Vt), Math.sin(Pt) * Math.cos(Tt) - Math.cos(Pt) * Math.sin(Tt) * Math.cos(Ot - Vt))), Me;
            };
            var Ee = {};
            (0, s.registerType)("CAASaturnRings", [g, Ee, null]);
          }
        ),
        /***/
        "./esm/astrocalc/sidereal.js": (
          /*!***********************************!*\
            !*** ./esm/astrocalc/sidereal.js ***!
            \***********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAASidereal: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./date.js */
              "./esm/astrocalc/date.js"
            ), l = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), o = n(
              /*! ./nutation.js */
              "./esm/astrocalc/nutation.js"
            );
            function c() {
            }
            c.meanGreenwichSiderealTime = function(u) {
              var y = new t.DT();
              y.setJD(u, t.DT.afterPapalReformJD(u));
              var g = y.get(), Ee = a.ss.truncate(g[0]), Ve = a.ss.truncate(g[1]), Me = a.ss.truncate(g[2]), B = a.ss.truncate(g[3]), Pe = a.ss.truncate(g[4]), k = g[5];
              y.set(Ee, Ve, Me, 0, 0, 0, y.inGregorianCalendar());
              var b = y.julian(), Le = (b - 2451545) / 36525, xe = Le * Le, ze = xe * Le, Se = 100.46061837 + 36000.770053608 * Le + 387933e-9 * xe - ze / 3871e4;
              return Se += (B * 15 + Pe * 0.25 + k * 0.00416666666666667) * 1.00273790935, Se = l.CT.d2H(Se), l.CT.m24(Se);
            }, c.apparentGreenwichSiderealTime = function(u) {
              var y = o.CAANutation.meanObliquityOfEcliptic(u), g = y + o.CAANutation.nutationInObliquity(u) / 3600, Ee = o.CAANutation.nutationInLongitude(u), Ve = c.meanGreenwichSiderealTime(u) + Ee * Math.cos(l.CT.d2R(g)) / 54e3;
              return l.CT.m24(Ve);
            };
            var _ = {};
            (0, s.registerType)("CAASidereal", [c, _, null]);
          }
        ),
        /***/
        "./esm/astrocalc/stellar_magnitudes.js": (
          /*!*********************************************!*\
            !*** ./esm/astrocalc/stellar_magnitudes.js ***!
            \*********************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAStellarMagnitudes: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            );
            function t() {
            }
            t.combinedMagnitude = function(o, c) {
              var _ = 0.4 * (c - o);
              return c - 2.5 * a.Util.log10(Math.pow(10, _) + 1);
            }, t.combinedMagnitude2 = function(o, c) {
              for (var _ = 0, u = 0; u < o; u++)
                _ += Math.pow(10, -0.4 * c[u]);
              return -2.5 * a.Util.log10(_);
            }, t.brightnessRatio = function(o, c) {
              var _ = 0.4 * (c - o);
              return Math.pow(10, _);
            }, t.magnitudeDifference = function(o) {
              return 2.5 * a.Util.log10(o);
            };
            var l = {};
            (0, s.registerType)("CAAStellarMagnitudes", [t, l, null]);
          }
        ),
        /***/
        "./esm/astrocalc/sun.js": (
          /*!******************************!*\
            !*** ./esm/astrocalc/sun.js ***!
            \******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAASun: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            ), l = n(
              /*! ./fk5.js */
              "./esm/astrocalc/fk5.js"
            ), o = n(
              /*! ./nutation.js */
              "./esm/astrocalc/nutation.js"
            );
            function c() {
            }
            c.geometricEclipticLongitude = function(u) {
              return a.CT.m360(t.CAAEarth.eclipticLongitude(u) + 180);
            }, c.geometricEclipticLatitude = function(u) {
              return -t.CAAEarth.eclipticLatitude(u);
            }, c.geometricEclipticLongitudeJ2000 = function(u) {
              return a.CT.m360(t.CAAEarth.eclipticLongitudeJ2000(u) + 180);
            }, c.geometricEclipticLatitudeJ2000 = function(u) {
              return -t.CAAEarth.eclipticLatitudeJ2000(u);
            }, c.geometricFK5EclipticLongitude = function(u) {
              var y = c.geometricEclipticLongitude(u), g = c.geometricEclipticLatitude(u);
              return y += l.CAAFK5.correctionInLongitude(y, g, u), y;
            }, c.geometricFK5EclipticLatitude = function(u) {
              var y = c.geometricEclipticLongitude(u), g = c.geometricEclipticLatitude(u), Ee = l.CAAFK5.correctionInLatitude(y, u);
              return g += Ee, g;
            }, c.apparentEclipticLongitude = function(u) {
              var y = c.geometricFK5EclipticLongitude(u);
              y += a.CT.dmS2D(0, 0, o.CAANutation.nutationInLongitude(u));
              var g = t.CAAEarth.radiusVector(u);
              return y -= a.CT.dmS2D(0, 0, 20.4898 / g), y;
            }, c.apparentEclipticLatitude = function(u) {
              return c.geometricFK5EclipticLatitude(u);
            }, c.eclipticRectangularCoordinatesMeanEquinox = function(u) {
              var y = a.CT.d2R(c.geometricFK5EclipticLongitude(u)), g = a.CT.d2R(c.geometricFK5EclipticLatitude(u)), Ee = t.CAAEarth.radiusVector(u), Ve = a.CT.d2R(o.CAANutation.meanObliquityOfEcliptic(u)), Me = new a.C3D();
              return Me.x = Ee * Math.cos(g) * Math.cos(y), Me.y = Ee * (Math.cos(g) * Math.sin(y) * Math.cos(Ve) - Math.sin(g) * Math.sin(Ve)), Me.z = Ee * (Math.cos(g) * Math.sin(y) * Math.sin(Ve) + Math.sin(g) * Math.cos(Ve)), Me;
            }, c.eclipticRectangularCoordinatesJ2000 = function(u) {
              var y = c.geometricEclipticLongitudeJ2000(u);
              y = a.CT.d2R(y);
              var g = c.geometricEclipticLatitudeJ2000(u);
              g = a.CT.d2R(g);
              var Ee = t.CAAEarth.radiusVector(u), Ve = new a.C3D(), Me = Math.cos(g);
              return Ve.x = Ee * Me * Math.cos(y), Ve.y = Ee * Me * Math.sin(y), Ve.z = Ee * Math.sin(g), Ve;
            }, c.equatorialRectangularCoordinatesJ2000 = function(u) {
              var y = c.eclipticRectangularCoordinatesJ2000(u);
              return y = l.CAAFK5.convertVSOPToFK5J2000(y), y;
            }, c.equatorialRectangularCoordinatesB1950 = function(u) {
              var y = c.eclipticRectangularCoordinatesJ2000(u);
              return y = l.CAAFK5.convertVSOPToFK5B1950(y), y;
            }, c.equatorialRectangularCoordinatesAnyEquinox = function(u, y) {
              var g = c.equatorialRectangularCoordinatesJ2000(u);
              return g = l.CAAFK5.convertVSOPToFK5AnyEquinox(g, y), g;
            };
            var _ = {};
            (0, s.registerType)("CAASun", [c, _, null]);
          }
        ),
        /***/
        "./esm/astrocalc/uranus.js": (
          /*!*********************************!*\
            !*** ./esm/astrocalc/uranus.js ***!
            \*********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAUranus: () => (
                /* binding */
                xe
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            );
            const l = [new t.VSC(548129294, 0, 0), new t.VSC(9260408, 0.8910642, 74.7815986), new t.VSC(1504248, 3.6271926, 1.4844727), new t.VSC(365982, 1.899622, 73.297126), new t.VSC(272328, 3.358237, 149.563197), new t.VSC(70328, 5.39254, 63.7359), new t.VSC(68893, 6.09292, 76.26607), new t.VSC(61999, 2.26952, 2.96895), new t.VSC(61951, 2.85099, 11.0457), new t.VSC(26469, 3.14152, 71.81265), new t.VSC(25711, 6.1138, 454.90937), new t.VSC(21079, 4.36059, 148.07872), new t.VSC(17819, 1.74437, 36.64856), new t.VSC(14613, 4.73732, 3.93215), new t.VSC(11163, 5.82682, 224.3448), new t.VSC(10998, 0.48865, 138.5175), new t.VSC(9527, 2.9552, 35.1641), new t.VSC(7546, 5.2363, 109.9457), new t.VSC(4220, 3.2333, 70.8494), new t.VSC(4052, 2.2775, 151.0477), new t.VSC(3490, 5.4831, 146.5943), new t.VSC(3355, 1.0655, 4.4534), new t.VSC(3144, 4.752, 77.7505), new t.VSC(2927, 4.629, 9.5612), new t.VSC(2922, 5.3524, 85.8273), new t.VSC(2273, 4.366, 70.3282), new t.VSC(2149, 0.6075, 38.133), new t.VSC(2051, 1.5177, 0.1119), new t.VSC(1992, 4.9244, 277.035), new t.VSC(1667, 3.6274, 380.1278), new t.VSC(1533, 2.5859, 52.6902), new t.VSC(1376, 2.0428, 65.2204), new t.VSC(1372, 4.1964, 111.4302), new t.VSC(1284, 3.1135, 202.2534), new t.VSC(1282, 0.5427, 222.8603), new t.VSC(1244, 0.9161, 2.4477), new t.VSC(1221, 0.199, 108.4612), new t.VSC(1151, 4.179, 33.6796), new t.VSC(1150, 0.9334, 3.1814), new t.VSC(1090, 1.775, 12.5302), new t.VSC(1072, 0.2356, 62.2514), new t.VSC(946, 1.192, 127.472), new t.VSC(708, 5.183, 213.299), new t.VSC(653, 0.966, 78.714), new t.VSC(628, 0.182, 984.6), new t.VSC(607, 5.432, 529.691), new t.VSC(559, 3.358, 0.521), new t.VSC(524, 2.013, 299.126), new t.VSC(483, 2.106, 0.963), new t.VSC(471, 1.407, 184.727), new t.VSC(467, 0.415, 145.11), new t.VSC(434, 5.521, 183.243), new t.VSC(405, 5.987, 8.077), new t.VSC(399, 0.338, 415.552), new t.VSC(396, 5.87, 351.817), new t.VSC(379, 2.35, 56.622), new t.VSC(310, 5.833, 145.631), new t.VSC(300, 5.644, 22.091), new t.VSC(294, 5.839, 39.618), new t.VSC(252, 1.637, 221.376), new t.VSC(249, 4.746, 225.829), new t.VSC(239, 2.35, 137.033), new t.VSC(224, 0.516, 84.343), new t.VSC(223, 2.843, 0.261), new t.VSC(220, 1.922, 67.668), new t.VSC(217, 6.142, 5.938), new t.VSC(216, 4.778, 340.771), new t.VSC(208, 5.58, 68.844), new t.VSC(202, 1.297, 0.048), new t.VSC(199, 0.956, 152.532), new t.VSC(194, 1.888, 456.394), new t.VSC(193, 0.916, 453.425), new t.VSC(187, 1.319, 0.16), new t.VSC(182, 3.536, 79.235), new t.VSC(173, 1.539, 160.609), new t.VSC(172, 5.68, 219.891), new t.VSC(170, 3.677, 5.417), new t.VSC(169, 5.879, 18.159), new t.VSC(165, 1.424, 106.977), new t.VSC(163, 3.05, 112.915), new t.VSC(158, 0.738, 54.175), new t.VSC(147, 1.263, 59.804), new t.VSC(143, 1.3, 35.425), new t.VSC(139, 5.386, 32.195), new t.VSC(139, 4.26, 909.819), new t.VSC(124, 1.374, 7.114), new t.VSC(110, 2.027, 554.07), new t.VSC(109, 5.706, 77.963), new t.VSC(104, 5.028, 0.751), new t.VSC(104, 1.458, 24.379), new t.VSC(103, 0.681, 14.978)], o = [new t.VSC(7502543122, 0, 0), new t.VSC(154458, 5.242017, 74.781599), new t.VSC(24456, 1.71256, 1.48447), new t.VSC(9258, 0.4284, 11.0457), new t.VSC(8266, 1.5022, 63.7359), new t.VSC(7842, 1.3198, 149.5632), new t.VSC(3899, 0.4648, 3.9322), new t.VSC(2284, 4.1737, 76.2661), new t.VSC(1927, 0.5301, 2.9689), new t.VSC(1233, 1.5863, 70.8494), new t.VSC(791, 5.436, 3.181), new t.VSC(767, 1.996, 73.297), new t.VSC(482, 2.984, 85.827), new t.VSC(450, 4.138, 138.517), new t.VSC(446, 3.723, 224.345), new t.VSC(427, 4.731, 71.813), new t.VSC(354, 2.583, 148.079), new t.VSC(348, 2.454, 9.561), new t.VSC(317, 5.579, 52.69), new t.VSC(206, 2.363, 2.448), new t.VSC(189, 4.202, 56.622), new t.VSC(184, 0.284, 151.048), new t.VSC(180, 5.684, 12.53), new t.VSC(171, 3.001, 78.714), new t.VSC(158, 2.909, 0.963), new t.VSC(155, 5.591, 4.453), new t.VSC(154, 4.652, 35.164), new t.VSC(152, 2.942, 77.751), new t.VSC(143, 2.59, 62.251), new t.VSC(121, 4.148, 127.472), new t.VSC(116, 3.732, 65.22), new t.VSC(102, 4.188, 145.631), new t.VSC(102, 6.034, 0.112), new t.VSC(88, 3.99, 18.16), new t.VSC(88, 6.16, 202.25), new t.VSC(81, 2.64, 22.09), new t.VSC(72, 6.05, 70.33), new t.VSC(69, 4.05, 77.96), new t.VSC(59, 3.7, 67.67), new t.VSC(47, 3.54, 351.82), new t.VSC(44, 5.91, 7.11), new t.VSC(43, 5.72, 5.42), new t.VSC(39, 4.92, 222.86), new t.VSC(36, 5.9, 33.68), new t.VSC(36, 3.29, 8.08), new t.VSC(36, 3.33, 71.6), new t.VSC(35, 5.08, 38.13), new t.VSC(31, 5.62, 984.6), new t.VSC(31, 5.5, 59.8), new t.VSC(31, 5.46, 160.61), new t.VSC(30, 1.66, 447.8), new t.VSC(29, 1.15, 462.02), new t.VSC(29, 4.52, 84.34), new t.VSC(27, 5.54, 131.4), new t.VSC(27, 6.15, 299.13), new t.VSC(26, 4.99, 137.03), new t.VSC(25, 5.74, 380.13)], c = [new t.VSC(53033, 0, 0), new t.VSC(2358, 2.2601, 74.7816), new t.VSC(769, 4.526, 11.046), new t.VSC(552, 3.258, 63.736), new t.VSC(542, 2.276, 3.932), new t.VSC(529, 4.923, 1.484), new t.VSC(258, 3.691, 3.181), new t.VSC(239, 5.858, 149.563), new t.VSC(182, 6.218, 70.849), new t.VSC(54, 1.44, 76.27), new t.VSC(49, 6.03, 56.62), new t.VSC(45, 3.91, 2.45), new t.VSC(45, 0.81, 85.83), new t.VSC(38, 1.78, 52.69), new t.VSC(37, 4.46, 2.97), new t.VSC(33, 0.86, 9.56), new t.VSC(29, 5.1, 73.3), new t.VSC(24, 2.11, 18.16), new t.VSC(22, 5.99, 138.52), new t.VSC(22, 4.82, 78.71), new t.VSC(21, 2.4, 77.96), new t.VSC(21, 2.17, 224.34), new t.VSC(17, 2.54, 145.63), new t.VSC(17, 3.47, 12.53), new t.VSC(12, 0.02, 22.09), new t.VSC(11, 0.08, 127.47), new t.VSC(10, 5.16, 71.6), new t.VSC(10, 4.46, 62.25), new t.VSC(9, 4.26, 7.11), new t.VSC(8, 5.5, 67.67), new t.VSC(7, 1.25, 5.42), new t.VSC(6, 3.36, 447.8), new t.VSC(6, 5.45, 65.22), new t.VSC(6, 4.52, 151.05), new t.VSC(6, 5.73, 462.02)], _ = [new t.VSC(121, 0.024, 74.782), new t.VSC(68, 4.12, 3.93), new t.VSC(53, 2.39, 11.05), new t.VSC(46, 0, 0), new t.VSC(45, 2.04, 3.18), new t.VSC(44, 2.96, 1.48), new t.VSC(25, 4.89, 63.74), new t.VSC(21, 4.55, 70.85), new t.VSC(20, 2.31, 149.56), new t.VSC(9, 1.58, 56.62), new t.VSC(4, 0.23, 18.16), new t.VSC(4, 5.39, 76.27), new t.VSC(4, 0.95, 77.96), new t.VSC(3, 4.98, 85.83), new t.VSC(3, 4.13, 52.69), new t.VSC(3, 0.37, 78.71), new t.VSC(2, 0.86, 145.63), new t.VSC(2, 5.66, 9.56)], u = [new t.VSC(114, 3.142, 0), new t.VSC(6, 4.58, 74.78), new t.VSC(3, 0.35, 11.05), new t.VSC(1, 3.42, 56.62)], y = [new t.VSC(1346278, 2.6187781, 74.7815986), new t.VSC(62341, 5.08111, 149.5632), new t.VSC(61601, 3.14159, 0), new t.VSC(9964, 1.616, 76.2661), new t.VSC(9926, 0.5763, 73.2971), new t.VSC(3259, 1.2612, 224.3448), new t.VSC(2972, 2.2437, 1.4845), new t.VSC(2010, 6.0555, 148.0787), new t.VSC(1522, 0.2796, 63.7359), new t.VSC(924, 4.038, 151.048), new t.VSC(761, 6.14, 71.813), new t.VSC(522, 3.321, 138.517), new t.VSC(463, 0.743, 85.827), new t.VSC(437, 3.381, 529.691), new t.VSC(435, 0.341, 77.751), new t.VSC(431, 3.554, 213.299), new t.VSC(420, 5.213, 11.046), new t.VSC(245, 0.788, 2.969), new t.VSC(233, 2.257, 222.86), new t.VSC(216, 1.591, 38.133), new t.VSC(180, 3.725, 299.126), new t.VSC(175, 1.236, 146.594), new t.VSC(174, 1.937, 380.128), new t.VSC(160, 5.336, 111.43), new t.VSC(144, 5.962, 35.164), new t.VSC(116, 5.739, 70.849), new t.VSC(106, 0.941, 70.328), new t.VSC(102, 2.619, 78.714)], g = [new t.VSC(206366, 4.123943, 74.781599), new t.VSC(8563, 0.3382, 149.5632), new t.VSC(1726, 2.1219, 73.2971), new t.VSC(1374, 0, 0), new t.VSC(1369, 3.0686, 76.2661), new t.VSC(451, 3.777, 1.484), new t.VSC(400, 2.848, 224.345), new t.VSC(307, 1.255, 148.079), new t.VSC(154, 3.786, 63.736), new t.VSC(112, 5.573, 151.048), new t.VSC(111, 5.329, 138.517), new t.VSC(83, 3.59, 71.81), new t.VSC(56, 3.4, 85.83), new t.VSC(54, 1.7, 77.75), new t.VSC(42, 1.21, 11.05), new t.VSC(41, 4.45, 78.71), new t.VSC(32, 3.77, 222.86), new t.VSC(30, 2.56, 2.97), new t.VSC(27, 5.34, 213.3), new t.VSC(26, 0.42, 380.13)], Ee = [new t.VSC(9212, 5.8004, 74.7816), new t.VSC(557, 0, 0), new t.VSC(286, 2.177, 149.563), new t.VSC(95, 3.84, 73.3), new t.VSC(45, 4.88, 76.27), new t.VSC(20, 5.46, 1.48), new t.VSC(15, 0.88, 138.52), new t.VSC(14, 2.85, 148.08), new t.VSC(14, 5.07, 63.74), new t.VSC(10, 5, 224.34), new t.VSC(8, 6.27, 78.71)], Ve = [new t.VSC(268, 1.251, 74.782), new t.VSC(11, 3.14, 0), new t.VSC(6, 4.01, 149.56), new t.VSC(3, 5.78, 73.3)], Me = [new t.VSC(6, 2.85, 74.78)], B = [new t.VSC(1921264848, 0, 0), new t.VSC(88784984, 5.60377527, 74.78159857), new t.VSC(3440836, 0.328361, 73.2971259), new t.VSC(2055653, 1.7829517, 149.5631971), new t.VSC(649322, 4.522473, 76.266071), new t.VSC(602248, 3.860038, 63.735898), new t.VSC(496404, 1.401399, 454.909367), new t.VSC(338526, 1.580027, 138.517497), new t.VSC(243508, 1.570866, 71.812653), new t.VSC(190522, 1.998094, 1.484473), new t.VSC(161858, 2.791379, 148.078724), new t.VSC(143706, 1.383686, 11.0457), new t.VSC(93192, 0.17437, 36.64856), new t.VSC(89806, 3.66105, 109.94569), new t.VSC(71424, 4.24509, 224.3448), new t.VSC(46677, 1.39977, 35.16409), new t.VSC(39026, 3.36235, 277.03499), new t.VSC(39010, 1.66971, 70.84945), new t.VSC(36755, 3.88649, 146.59425), new t.VSC(30349, 0.701, 151.04767), new t.VSC(29156, 3.18056, 77.75054), new t.VSC(25786, 3.78538, 85.8273), new t.VSC(25620, 5.25656, 380.12777), new t.VSC(22637, 0.72519, 529.69097), new t.VSC(20473, 2.7964, 70.32818), new t.VSC(20472, 1.55589, 202.2534), new t.VSC(17901, 0.55455, 2.96895), new t.VSC(15503, 5.35405, 38.13304), new t.VSC(14702, 4.90434, 108.46122), new t.VSC(12897, 2.62154, 111.43016), new t.VSC(12328, 5.96039, 127.4718), new t.VSC(11959, 1.75044, 984.60033), new t.VSC(11853, 0.99343, 52.6902), new t.VSC(11696, 3.29826, 3.93215), new t.VSC(11495, 0.43774, 65.22037), new t.VSC(10793, 1.42105, 213.2991), new t.VSC(9111, 4.9964, 62.2514), new t.VSC(8421, 5.2535, 222.8603), new t.VSC(8402, 5.0388, 415.5525), new t.VSC(7449, 0.7949, 351.8166), new t.VSC(7329, 3.9728, 183.2428), new t.VSC(6046, 5.6796, 78.7138), new t.VSC(5524, 3.115, 9.5612), new t.VSC(5445, 5.1058, 145.1098), new t.VSC(5238, 2.6296, 33.6796), new t.VSC(4079, 3.2206, 340.7709), new t.VSC(3919, 4.2502, 39.6175), new t.VSC(3802, 6.1099, 184.7273), new t.VSC(3781, 3.4584, 456.3938), new t.VSC(3687, 2.4872, 453.4249), new t.VSC(3102, 4.1403, 219.8914), new t.VSC(2963, 0.8298, 56.6224), new t.VSC(2942, 0.4239, 299.1264), new t.VSC(2940, 2.1464, 137.033), new t.VSC(2938, 3.6766, 140.002), new t.VSC(2865, 0.31, 12.5302), new t.VSC(2538, 4.8546, 131.4039), new t.VSC(2364, 0.4425, 554.07), new t.VSC(2183, 2.9404, 305.3462)], Pe = [new t.VSC(1479896, 3.6720571, 74.7815986), new t.VSC(71212, 6.22601, 63.7359), new t.VSC(68627, 6.13411, 149.5632), new t.VSC(24060, 3.14159, 0), new t.VSC(21468, 2.60177, 76.26607), new t.VSC(20857, 5.24625, 11.0457), new t.VSC(11405, 0.01848, 70.84945), new t.VSC(7497, 0.4236, 73.2971), new t.VSC(4244, 1.4169, 85.8273), new t.VSC(3927, 3.1551, 71.8127), new t.VSC(3578, 2.3116, 224.3448), new t.VSC(3506, 2.5835, 138.5175), new t.VSC(3229, 5.255, 3.9322), new t.VSC(3060, 0.1532, 1.4845), new t.VSC(2564, 0.9808, 148.0787), new t.VSC(2429, 3.9944, 52.6902), new t.VSC(1645, 2.6535, 127.4718), new t.VSC(1584, 1.4305, 78.7138), new t.VSC(1508, 5.06, 151.0477), new t.VSC(1490, 2.6756, 56.6224), new t.VSC(1413, 4.5746, 202.2534), new t.VSC(1403, 1.3699, 77.7505), new t.VSC(1228, 1.047, 62.2514), new t.VSC(1033, 0.2646, 131.4039), new t.VSC(992, 2.172, 65.22), new t.VSC(862, 5.055, 351.817), new t.VSC(744, 3.076, 35.164), new t.VSC(687, 2.499, 77.963), new t.VSC(647, 4.473, 70.328), new t.VSC(624, 0.863, 9.561), new t.VSC(604, 0.907, 984.6), new t.VSC(575, 3.231, 447.796), new t.VSC(562, 2.718, 462.023), new t.VSC(530, 5.917, 213.299), new t.VSC(528, 5.151, 2.969)], k = [new t.VSC(22440, 0.69953, 74.7816), new t.VSC(4727, 1.699, 63.7359), new t.VSC(1682, 4.6483, 70.8494), new t.VSC(1650, 3.0966, 11.0457), new t.VSC(1434, 3.5212, 149.5632), new t.VSC(770, 0, 0), new t.VSC(500, 6.172, 76.266), new t.VSC(461, 0.767, 3.932), new t.VSC(390, 4.496, 56.622), new t.VSC(390, 5.527, 85.827), new t.VSC(292, 0.204, 52.69), new t.VSC(287, 3.534, 73.297), new t.VSC(273, 3.847, 138.517), new t.VSC(220, 1.964, 131.404), new t.VSC(216, 0.848, 77.963), new t.VSC(205, 3.248, 78.714), new t.VSC(149, 4.898, 127.472), new t.VSC(129, 2.081, 3.181)], b = [new t.VSC(1164, 4.7345, 74.7816), new t.VSC(212, 3.343, 63.736), new t.VSC(196, 2.98, 70.849), new t.VSC(105, 0.958, 11.046), new t.VSC(73, 1, 149.56), new t.VSC(72, 0.03, 56.62), new t.VSC(55, 2.59, 3.93), new t.VSC(36, 5.65, 77.96), new t.VSC(34, 3.82, 76.27), new t.VSC(32, 3.6, 131.4)], Le = [new t.VSC(53, 3.01, 74.78), new t.VSC(10, 1.91, 56.62)];
            function xe() {
            }
            xe.eclipticLongitude = function(Se) {
              var Te = (Se - 2451545) / 365250, D = Te * Te, ke = D * Te, Fe = ke * Te, He = l.length, We = 0, Ke;
              for (Ke = 0; Ke < He; Ke++)
                We += l[Ke].a * Math.cos(l[Ke].b + l[Ke].c * Te);
              var $ = o.length, De = 0;
              for (Ke = 0; Ke < $; Ke++)
                De += o[Ke].a * Math.cos(o[Ke].b + o[Ke].c * Te);
              var Re = c.length, Ie = 0;
              for (Ke = 0; Ke < Re; Ke++)
                Ie += c[Ke].a * Math.cos(c[Ke].b + c[Ke].c * Te);
              var O = _.length, Ue = 0;
              for (Ke = 0; Ke < O; Ke++)
                Ue += _[Ke].a * Math.cos(_[Ke].b + _[Ke].c * Te);
              var $e = u.length, Ze = 0;
              for (Ke = 0; Ke < $e; Ke++)
                Ze += u[Ke].a * Math.cos(u[Ke].b + u[Ke].c * Te);
              var Qe = (We + De * Te + Ie * D + Ue * ke + Ze * Fe) / 1e8;
              return Qe = a.CT.m360(a.CT.r2D(Qe)), Qe;
            }, xe.eclipticLatitude = function(Se) {
              var Te = (Se - 2451545) / 365250, D = Te * Te, ke = D * Te, Fe = ke * Te, He = y.length, We = 0, Ke;
              for (Ke = 0; Ke < He; Ke++)
                We += y[Ke].a * Math.cos(y[Ke].b + y[Ke].c * Te);
              var $ = g.length, De = 0;
              for (Ke = 0; Ke < $; Ke++)
                De += g[Ke].a * Math.cos(g[Ke].b + g[Ke].c * Te);
              var Re = Ee.length, Ie = 0;
              for (Ke = 0; Ke < Re; Ke++)
                Ie += Ee[Ke].a * Math.cos(Ee[Ke].b + Ee[Ke].c * Te);
              var O = Ve.length, Ue = 0;
              for (Ke = 0; Ke < O; Ke++)
                Ue += Ve[Ke].a * Math.cos(Ve[Ke].b + Ve[Ke].c * Te);
              var $e = Me.length, Ze = 0;
              for (Ke = 0; Ke < $e; Ke++)
                Ze += Me[Ke].a * Math.cos(Me[Ke].b + Me[Ke].c * Te);
              var Qe = (We + De * Te + Ie * D + Ue * ke + Ze * Fe) / 1e8;
              return Qe = a.CT.r2D(Qe), Qe;
            }, xe.radiusVector = function(Se) {
              var Te = (Se - 2451545) / 365250, D = Te * Te, ke = D * Te, Fe = ke * Te, He = B.length, We = 0, Ke;
              for (Ke = 0; Ke < He; Ke++)
                We += B[Ke].a * Math.cos(B[Ke].b + B[Ke].c * Te);
              var $ = Pe.length, De = 0;
              for (Ke = 0; Ke < $; Ke++)
                De += Pe[Ke].a * Math.cos(Pe[Ke].b + Pe[Ke].c * Te);
              var Re = k.length, Ie = 0;
              for (Ke = 0; Ke < Re; Ke++)
                Ie += k[Ke].a * Math.cos(k[Ke].b + k[Ke].c * Te);
              var O = b.length, Ue = 0;
              for (Ke = 0; Ke < O; Ke++)
                Ue += b[Ke].a * Math.cos(b[Ke].b + b[Ke].c * Te);
              var $e = Le.length, Ze = 0;
              for (Ke = 0; Ke < $e; Ke++)
                Ze += Le[Ke].a * Math.cos(Le[Ke].b + Le[Ke].c * Te);
              return (We + De * Te + Ie * D + Ue * ke + Ze * Fe) / 1e8;
            };
            var ze = {};
            (0, s.registerType)("CAAUranus", [xe, ze, null]);
          }
        ),
        /***/
        "./esm/astrocalc/venus.js": (
          /*!********************************!*\
            !*** ./esm/astrocalc/venus.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CAAVenus: () => (
                /* binding */
                ze
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), t = n(
              /*! ./earth.js */
              "./esm/astrocalc/earth.js"
            );
            const l = [new t.VSC(317614667, 0, 0), new t.VSC(1353968, 5.5931332, 10213.2855462), new t.VSC(89892, 5.3065, 20426.57109), new t.VSC(5477, 4.4163, 7860.4194), new t.VSC(3456, 2.6996, 11790.6291), new t.VSC(2372, 2.9938, 3930.2097), new t.VSC(1664, 4.2502, 1577.3435), new t.VSC(1438, 4.1575, 9683.5946), new t.VSC(1317, 5.1867, 26.2983), new t.VSC(1201, 6.1536, 30639.8566), new t.VSC(769, 0.816, 9437.763), new t.VSC(761, 1.95, 529.691), new t.VSC(708, 1.065, 775.523), new t.VSC(585, 3.998, 191.448), new t.VSC(500, 4.123, 15720.839), new t.VSC(429, 3.586, 19367.189), new t.VSC(327, 5.677, 5507.553), new t.VSC(326, 4.591, 10404.734), new t.VSC(232, 3.163, 9153.904), new t.VSC(180, 4.653, 1109.379), new t.VSC(155, 5.57, 19651.048), new t.VSC(128, 4.226, 20.775), new t.VSC(128, 0.962, 5661.332), new t.VSC(106, 1.537, 801.821)], o = [new t.VSC(1021352943053, 0, 0), new t.VSC(95708, 2.46424, 10213.28555), new t.VSC(14445, 0.51625, 20426.57109), new t.VSC(213, 1.795, 30639.857), new t.VSC(174, 2.655, 26.298), new t.VSC(152, 6.106, 1577.344), new t.VSC(82, 5.7, 191.45), new t.VSC(70, 2.68, 9437.76), new t.VSC(52, 3.6, 775.52), new t.VSC(38, 1.03, 529.69), new t.VSC(30, 1.25, 5507.55), new t.VSC(25, 6.11, 10404.73)], c = [new t.VSC(54127, 0, 0), new t.VSC(3891, 0.3451, 10213.2855), new t.VSC(1338, 2.0201, 20426.5711), new t.VSC(24, 2.05, 26.3), new t.VSC(19, 3.54, 30639.86), new t.VSC(10, 3.97, 775.52), new t.VSC(7, 1.52, 1577.34), new t.VSC(6, 1, 191.45)], _ = [new t.VSC(136, 4.804, 10213.286), new t.VSC(78, 3.67, 20426.57), new t.VSC(26, 0, 0)], u = [new t.VSC(114, 3.1416, 0), new t.VSC(3, 5.21, 20426.57), new t.VSC(2, 2.51, 10213.29)], y = [new t.VSC(1, 3.14, 0)], g = [new t.VSC(5923638, 0.2670278, 10213.2855462), new t.VSC(40108, 1.14737, 20426.57109), new t.VSC(32815, 3.14737, 0), new t.VSC(1011, 1.0895, 30639.8566), new t.VSC(149, 6.254, 18073.705), new t.VSC(138, 0.86, 1577.344), new t.VSC(130, 3.672, 9437.763), new t.VSC(120, 3.705, 2352.866), new t.VSC(108, 4.539, 22003.915)], Ee = [new t.VSC(513348, 1.803643, 10213.285546), new t.VSC(4380, 3.3862, 20426.5711), new t.VSC(199, 0, 0), new t.VSC(197, 2.53, 30639.857)], Ve = [new t.VSC(22378, 3.38509, 10213.28555), new t.VSC(282, 0, 0), new t.VSC(173, 5.256, 20426.571), new t.VSC(27, 3.87, 30639.86)], Me = [new t.VSC(647, 4.992, 10213.286), new t.VSC(20, 3.14, 0), new t.VSC(6, 0.77, 20426.57), new t.VSC(3, 5.44, 30639.86)], B = [new t.VSC(14, 0.32, 10213.29)], Pe = [new t.VSC(72334821, 0, 0), new t.VSC(489824, 4.021518, 10213.285546), new t.VSC(1658, 4.9021, 20426.5711), new t.VSC(1632, 2.8455, 7860.4194), new t.VSC(1378, 1.1285, 11790.6291), new t.VSC(498, 2.587, 9683.595), new t.VSC(374, 1.423, 3930.21), new t.VSC(264, 5.529, 9437.763), new t.VSC(237, 2.551, 15720.839), new t.VSC(222, 2.013, 19367.189), new t.VSC(126, 2.728, 1577.344), new t.VSC(119, 3.02, 10404.734)], k = [new t.VSC(34551, 0.89199, 10213.28555), new t.VSC(234, 1.772, 20426.571), new t.VSC(234, 3.142, 0)], b = [new t.VSC(1407, 5.0637, 10213.2855), new t.VSC(16, 5.47, 20426.57), new t.VSC(13, 0, 0)], Le = [new t.VSC(50, 3.22, 10213.29)], xe = [new t.VSC(1, 0.92, 10213.29)];
            function ze() {
            }
            ze.eclipticLongitude = function(Te) {
              var D = (Te - 2451545) / 365250, ke = D * D, Fe = ke * D, He = Fe * D, We = He * D, Ke = l.length, $ = 0, De;
              for (De = 0; De < Ke; De++)
                $ += l[De].a * Math.cos(l[De].b + l[De].c * D);
              var Re = o.length, Ie = 0;
              for (De = 0; De < Re; De++)
                Ie += o[De].a * Math.cos(o[De].b + o[De].c * D);
              var O = c.length, Ue = 0;
              for (De = 0; De < O; De++)
                Ue += c[De].a * Math.cos(c[De].b + c[De].c * D);
              var $e = _.length, Ze = 0;
              for (De = 0; De < $e; De++)
                Ze += _[De].a * Math.cos(_[De].b + _[De].c * D);
              var Qe = u.length, Ae = 0;
              for (De = 0; De < Qe; De++)
                Ae += u[De].a * Math.cos(u[De].b + u[De].c * D);
              var Ne = y.length, Be = 0;
              for (De = 0; De < Ne; De++)
                Be += y[De].a * Math.cos(y[De].b + y[De].c * D);
              var Ge = ($ + Ie * D + Ue * ke + Ze * Fe + Ae * He + Be * We) / 1e8;
              return Ge = a.CT.m360(a.CT.r2D(Ge)), Ge;
            }, ze.eclipticLatitude = function(Te) {
              var D = (Te - 2451545) / 365250, ke = D * D, Fe = ke * D, He = Fe * D, We = g.length, Ke = 0, $;
              for ($ = 0; $ < We; $++)
                Ke += g[$].a * Math.cos(g[$].b + g[$].c * D);
              var De = Ee.length, Re = 0;
              for ($ = 0; $ < De; $++)
                Re += Ee[$].a * Math.cos(Ee[$].b + Ee[$].c * D);
              var Ie = Ve.length, O = 0;
              for ($ = 0; $ < Ie; $++)
                O += Ve[$].a * Math.cos(Ve[$].b + Ve[$].c * D);
              var Ue = Me.length, $e = 0;
              for ($ = 0; $ < Ue; $++)
                $e += Me[$].a * Math.cos(Me[$].b + Me[$].c * D);
              var Ze = B.length, Qe = 0;
              for ($ = 0; $ < Ze; $++)
                Qe += B[$].a * Math.cos(B[$].b + B[$].c * D);
              var Ae = (Ke + Re * D + O * ke + $e * Fe + Qe * He) / 1e8;
              return Ae = a.CT.r2D(Ae), Ae;
            }, ze.radiusVector = function(Te) {
              var D = (Te - 2451545) / 365250, ke = D * D, Fe = ke * D, He = Fe * D, We = Pe.length, Ke = 0, $;
              for ($ = 0; $ < We; $++)
                Ke += Pe[$].a * Math.cos(Pe[$].b + Pe[$].c * D);
              var De = k.length, Re = 0;
              for ($ = 0; $ < De; $++)
                Re += k[$].a * Math.cos(k[$].b + k[$].c * D);
              var Ie = b.length, O = 0;
              for ($ = 0; $ < Ie; $++)
                O += b[$].a * Math.cos(b[$].b + b[$].c * D);
              var Ue = Le.length, $e = 0;
              for ($ = 0; $ < Ue; $++)
                $e += Le[$].a * Math.cos(Le[$].b + Le[$].c * D);
              var Ze = xe.length, Qe = 0;
              for ($ = 0; $ < Ze; $++)
                Qe += xe[$].a * Math.cos(xe[$].b + xe[$].c * D);
              return (Ke + Re * D + O * ke + $e * Fe + Qe * He) / 1e8;
            };
            var Se = {};
            (0, s.registerType)("CAAVenus", [ze, Se, null]);
          }
        ),
        /***/
        "./esm/baseplanets.js": (
          /*!****************************!*\
            !*** ./esm/baseplanets.js ***!
            \****************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              BasePlanets: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), t = n(
              /*! ./graphics/primitives3d.js */
              "./esm/graphics/primitives3d.js"
            );
            function l() {
            }
            l.drawPointPlanet = function(o, c, _, u, y) {
              var g = c, Ee = _ / 2;
              if (o.gl != null) {
                var Ve = new t.PointList(o);
                Ve.minSize = 20, Ve.addPoint(c.copy(), u._clone(), new t.Dates(0, 1), _ / 100), Ve.depthBuffered = !0, Ve.draw(o, 1, !1);
              } else {
                var Me = o.WVP.transform(g);
                if (Me.z < 0 || !y && a.Vector3d.dot(o.get_viewPoint(), g) < 0.55)
                  return;
                var B = o.device;
                B.save(), B.beginPath(), B.arc(Me.x, Me.y, Ee, 0, Math.PI * 2, !0), B.lineWidth = 1, B.fillStyle = u.toString(), B.fill(), B.globalAlpha = 1, B.strokeStyle = u.toString(), B.stroke(), B.restore();
              }
            }, (0, s.registerType)("BasePlanets", [l, {}, null]);
          }
        ),
        /***/
        "./esm/baseutil.js": (
          /*!*************************!*\
            !*** ./esm/baseutil.js ***!
            \*************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Util: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./ss.js */
              "./esm/ss.js"
            );
            function t() {
            }
            t.splitString = function(o, c) {
              for (var _ = [], u = 0, y = 0, g = 0; g < o.length; g++) {
                for (var Ee = !1, Ve = 0; Ve < c.length; Ve++) {
                  if (o[g] === c[Ve]) {
                    _.push(o.substring(u, y - u)), Ee = !0;
                    continue;
                  }
                  u = g + 1, y = g + 1;
                }
                Ee || y++;
              }
              return y > u && _.push(o.substring(u, y - u)), _;
            }, t.stringContains = function(o, c) {
              for (var _ = 0; _ < c.length; _++)
                if (o.indexOf(c[_]) > -1)
                  return !0;
              return !1;
            }, t.getHashCode = function(o) {
              var c = 0;
              if (!o.length)
                return c;
              for (var _ = 0; _ < o.length; _++) {
                var u = o.charCodeAt(_);
                c = (c << 5) - c + u;
              }
              return c;
            }, t.compare = function(o, c) {
              return o === c ? 0 : o > c ? 1 : -1;
            }, t.logN = function(o, c) {
              return Math.log(o) / Math.log(c);
            }, t.parseTimeSpan = function(o) {
              var c = 0, _ = o.split(":");
              return _.length === 3 && (c += parseInt(_[0]) * 36e5, c += parseInt(_[1]) * 6e4, c += a.ss.truncate(parseFloat(_[2]) * 1e3)), c;
            }, t.xmlDuration = function(o) {
              var c = o / 1e3, _ = Math.floor(c / 3600), u = Math.floor(c / 60) - _ * 60, y = c - (_ * 3600 + u * 60);
              return a.ss.format("{0}:{1}:{2}", _, u, y);
            }, t.xmlDate = function(o) {
              var c = o.getHours(), _ = "AM";
              return c > 12 && (c -= 12, _ = "PM"), (o.getMonth() + 1).toString() + "/" + o.getDate().toString() + "/" + o.getFullYear().toString() + " " + c.toString() + ":" + o.getMinutes().toString() + ":" + o.getSeconds().toString() + " " + _;
            }, t.selectSingleNode = function(o, c) {
              for (var _ = null, u = a.ss.enumerate(o.childNodes); u.moveNext(); ) {
                var y = u.current;
                if (y.nodeName === c) {
                  _ = y;
                  break;
                }
              }
              return _;
            }, t.getInnerText = function(o) {
              if (a.ss.emptyString(o.text)) {
                var c = o;
                return c.textContent;
              } else
                return o.text;
            }, t.getWrappedText = function(o, c, _) {
              var u = [];
              return u.push(c), u;
            }, t.toHex = function(o) {
              var c = Math.max(0, Math.min(a.ss.truncate(o), 255));
              return "0123456789ABCDEF".substr((c - c % 16) / 16, 1) + "0123456789ABCDEF".substr(c % 16, 1);
            }, t.fromHex = function(o) {
              var c = 0;
              switch (o.substr(1, 1).toUpperCase()) {
                case "A":
                  c += 10;
                  break;
                case "B":
                  c += 11;
                  break;
                case "C":
                  c += 12;
                  break;
                case "D":
                  c += 13;
                  break;
                case "E":
                  c += 14;
                  break;
                case "F":
                  c += 15;
                  break;
                default:
                  c += parseInt(o.substr(1, 1));
                  break;
              }
              switch (o.substr(0, 1).toUpperCase()) {
                case "A":
                  c += 160;
                  break;
                case "B":
                  c += 176;
                  break;
                case "C":
                  c += 192;
                  break;
                case "D":
                  c += 208;
                  break;
                case "E":
                  c += 224;
                  break;
                case "F":
                  c += 240;
                  break;
                default:
                  c += parseInt(o.substr(0, 1)) * 16;
                  break;
              }
              return c;
            }, t._openUrl = function(o) {
              window.open(o);
            }, t.log10 = function(o) {
              return Math.log(o) / 2.30258509299405;
            }, t.sign = function(o) {
              return o < 0 ? -1 : 1;
            };
            var l = {};
            (0, s.registerType)("Util", [t, l, null]);
          }
        ),
        /***/
        "./esm/blend_state.js": (
          /*!****************************!*\
            !*** ./esm/blend_state.js ***!
            \****************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              BlendState: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            );
            function t() {
              this._switchedTime = new Date(1990, 0, 0, 0, 0, 0, 0), this._state = !1, this._targetState = this._state, this._delayTime = 1e3;
            }
            t.create = function(o, c) {
              var _ = new t();
              return _._state = o, _._targetState = o, _._delayTime = c, _;
            };
            var l = {
              get_state: function() {
                if (this._targetState !== this._state) {
                  var o = s.ss.now() - this._switchedTime;
                  return o > this._delayTime && (this._state = this._targetState), !0;
                }
                return this._state;
              },
              set_state: function(o) {
                return this._switchedTime = new Date(1990, 0, 0, 0, 0, 0, 0), this._state = o, this._targetState = this._state, o;
              },
              get_targetState: function() {
                return this._targetState;
              },
              set_targetState: function(o) {
                return this._targetState !== o && (this._switchedTime = s.ss.now(), this._targetState = o), o;
              },
              get_opacity: function() {
                if (this._targetState !== this._state) {
                  var o = s.ss.now() - this._switchedTime;
                  if (o > this._delayTime)
                    this._state = this._targetState;
                  else {
                    var c = o / this._delayTime;
                    return this._targetState ? c : 1 - c;
                  }
                }
                return this._state ? 1 : 0;
              },
              get_delayTime: function() {
                return this._delayTime;
              },
              set_delayTime: function(o) {
                return this._delayTime = o, o;
              }
            };
            (0, a.registerType)("BlendState", [t, l, null]);
          }
        ),
        /***/
        "./esm/camera_parameters.js": (
          /*!**********************************!*\
            !*** ./esm/camera_parameters.js ***!
            \**********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CameraParameters: () => (
                /* binding */
                _
              ),
              /* harmony export */
              InterpolationType: () => (
                /* binding */
                c
              ),
              /* harmony export */
              SolarSystemObjects: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), o = {
              sun: 0,
              mercury: 1,
              venus: 2,
              mars: 3,
              jupiter: 4,
              saturn: 5,
              uranus: 6,
              neptune: 7,
              pluto: 8,
              moon: 9,
              io: 10,
              europa: 11,
              ganymede: 12,
              callisto: 13,
              ioShadow: 14,
              europaShadow: 15,
              ganymedeShadow: 16,
              callistoShadow: 17,
              sunEclipsed: 18,
              earth: 19,
              custom: 20,
              undefined: 65536
            };
            (0, s.registerType)("SolarSystemObjects", o), (0, s.registerEnum)("SolarSystemObjects", o);
            var c = {
              linear: 0,
              easeIn: 1,
              easeOut: 2,
              easeInOut: 3,
              exponential: 4,
              defaultV: 5
            };
            (0, s.registerType)("InterpolationType", c), (0, s.registerEnum)("InterpolationType", c);
            function _() {
              this.lat = 0, this.lng = 0, this.zoom = 0, this.rotation = 0, this.angle = 0, this.raDec = !1, this.opacity = 0, this.target = 0, this.zoom = 360, this.viewTarget = new t.Vector3d();
            }
            _.create = function(y, g, Ee, Ve, Me, B) {
              var Pe = new _();
              return Pe.lat = y, Pe.lng = g, Pe.zoom = Ee, Pe.rotation = Ve, Pe.angle = Me, Pe.raDec = !1, Pe.opacity = B, Pe.viewTarget = t.Vector3d.create(0, 0, 0), Pe.target = 20, Pe.targetReferenceFrame = "", Pe;
            }, _.logN = function(y, g) {
              return Math.log(y) / Math.log(g);
            }, _.sinh = function(y) {
              return (Math.exp(y) - Math.exp(-y)) / 2;
            }, _.interpolate = function(y, g, Ee, Ve, Me) {
              var B = new _(), Pe = _.easeCurve(Ee, Ve), k = Math.min(1, Ee * 2), b = _.easeCurve(k, Ve);
              return B.angle = g.angle * Pe + y.angle * (1 - Pe), B.rotation = g.rotation * Pe + y.rotation * (1 - Pe), Me ? (B.lat = g.lat * b + y.lat * (1 - b), B.lng = g.lng * b + y.lng * (1 - b)) : (B.lat = g.lat * Pe + y.lat * (1 - Pe), B.lng = g.lng * Pe + y.lng * (1 - Pe)), B.zoom = Math.pow(2, _.logN(g.zoom, 2) * Pe + _.logN(y.zoom, 2) * (1 - Pe)), B.opacity = g.opacity * Pe + y.opacity * (1 - Pe), B.viewTarget = t.Vector3d.lerp(y.viewTarget, g.viewTarget, Pe), B.targetReferenceFrame = g.targetReferenceFrame, g.target === y.target ? B.target = g.target : B.target = 20, B;
            }, _.interpolateGreatCircle = function(y, g, Ee, Ve, Me) {
              var B = new _(), Pe = _.easeCurve(Ee, Ve), k = Math.min(1, Ee * 2);
              _.easeCurve(k, Ve), B.angle = g.angle * Pe + y.angle * (1 - Pe), B.rotation = g.rotation * Pe + y.rotation * (1 - Pe);
              var b = l.Coordinates.geoTo3dDouble(y.lat, y.lng), Le = l.Coordinates.geoTo3dDouble(g.lat, g.lng), xe = t.Vector3d.slerp(b, Le, Pe), ze = l.Coordinates.cartesianToLatLng(xe);
              return B.lat = ze.y, B.lng = ze.x, B.zoom = Math.pow(2, _.logN(g.zoom, 2) * Pe + _.logN(y.zoom, 2) * (1 - Pe)), B.opacity = g.opacity * Pe + y.opacity * (1 - Pe), B.viewTarget = t.Vector3d.lerp(y.viewTarget, g.viewTarget, Pe), B.targetReferenceFrame = g.targetReferenceFrame, g.target === y.target ? B.target = g.target : B.target = 20, B;
            }, _.easeCurve = function(y, g) {
              switch (g) {
                case 0:
                  return y;
                case 4:
                  return Math.pow(y, 2);
                case 1:
                  return (1 - y) * _.sinh(y / 0.2171424688) / 100 + y * y;
                case 2:
                  return y * (1 - _.sinh((1 - y) / 0.2171424688) / 100) + (1 - y) * y;
                case 3:
                  return y < 0.5 ? _.sinh(y / 0.1085712344) / 100 : 1 - _.sinh((1 - y) / 0.1085712344) / 100;
                default:
                  return y;
              }
            };
            var u = {
              copy: function() {
                var y = new _();
                return y.lat = this.lat, y.lng = this.lng, y.zoom = this.zoom, y.rotation = this.rotation, y.angle = this.angle, y.raDec = this.raDec, y.opacity = this.opacity, y.viewTarget = this.viewTarget.copy(), y.target = this.target, y.targetReferenceFrame = this.targetReferenceFrame, y;
              },
              get_RA: function() {
                return (180 - (this.lng - 180)) / 360 * 24 % 24;
              },
              set_RA: function(y) {
                return this.lng = 180 - y / 24 * 360 - 180, this.raDec = !0, y;
              },
              get_dec: function() {
                return this.lat;
              },
              set_dec: function(y) {
                return this.lat = y, y;
              },
              equals: function(y) {
                if (a.ss.canCast(y, _)) {
                  var g = y;
                  return !(Math.abs(g.angle - this.angle) > 0.01 || Math.abs(g.lat - this.lat) > g.zoom / 1e4 || Math.abs(g.get_RA() - this.get_RA()) > g.zoom / 1e3 || Math.abs(g.rotation - this.rotation) > 0.1 || Math.abs(g.zoom - this.zoom) > Math.abs(g.zoom) / 1e3);
                } else
                  return !1;
              }
            };
            (0, s.registerType)("CameraParameters", [_, u, null]);
          }
        ),
        /***/
        "./esm/color.js": (
          /*!**********************!*\
            !*** ./esm/color.js ***!
            \**********************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Color: () => (
                /* binding */
                l
              ),
              /* harmony export */
              Colors: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./util.js */
              "./esm/util.js"
            );
            function l() {
              this.a = 255, this.b = 255, this.g = 255, this.r = 255, this.name = "";
            }
            l.fromArgb = function(u, y, g, Ee) {
              var Ve = new l();
              return Ve.a = u, Ve.r = y, Ve.g = g, Ve.b = Ee, Ve;
            }, l._fromArgbColor = function(u, y) {
              var g = new l();
              return g.a = u, g.r = y.r, g.g = y.g, g.b = y.b, g;
            }, l.fromName = function(u) {
              var y = l.load(u);
              return y;
            }, l.load = function(u) {
              var y = 255, g = 255, Ee = 255, Ve = 255, Me = u.split(":");
              if (Me.length === 5)
                y = parseInt(Me[1]), g = parseInt(Me[2]), Ee = parseInt(Me[3]), Ve = parseInt(Me[4]);
              else {
                if (Me.length === 2)
                  return l.fromName(Me[1].toLowerCase());
                if (Me.length === 1 && a.ss.startsWith(Me[0], "#"))
                  return l.fromHex(Me[0]);
                if (Me.length === 1 && Me[0].length === 8)
                  return l.fromSimpleHex(Me[0]);
                if (Me.length === 1)
                  return l._fromWindowsNamedColor(Me[0]);
              }
              return l.fromArgb(y, g, Ee, Ve);
            }, l._fromWindowsNamedColor = function(u) {
              switch (u.toLowerCase()) {
                case "activeborder":
                  return l.fromArgb(255, 180, 180, 180);
                case "activecaption":
                  return l.fromArgb(255, 153, 180, 209);
                case "activecaptiontext":
                  return l.fromArgb(255, 0, 0, 0);
                case "appworkspace":
                  return l.fromArgb(255, 171, 171, 171);
                case "control":
                  return l.fromArgb(255, 240, 240, 240);
                case "controldark":
                  return l.fromArgb(255, 160, 160, 160);
                case "controldarkdark":
                  return l.fromArgb(255, 105, 105, 105);
                case "controllight":
                  return l.fromArgb(255, 227, 227, 227);
                case "controllightlight":
                  return l.fromArgb(255, 255, 255, 255);
                case "controltext":
                  return l.fromArgb(255, 0, 0, 0);
                case "desktop":
                  return l.fromArgb(255, 255, 255, 255);
                case "graytext":
                  return l.fromArgb(255, 109, 109, 109);
                case "highlight":
                  return l.fromArgb(255, 51, 153, 255);
                case "highlighttext":
                  return l.fromArgb(255, 255, 255, 255);
                case "hottrack":
                  return l.fromArgb(255, 0, 102, 204);
                case "inactiveborder":
                  return l.fromArgb(255, 244, 247, 252);
                case "inactivecaption":
                  return l.fromArgb(255, 191, 205, 219);
                case "inactivecaptiontext":
                  return l.fromArgb(255, 0, 0, 0);
                case "info":
                  return l.fromArgb(255, 255, 255, 225);
                case "infotext":
                  return l.fromArgb(255, 0, 0, 0);
                case "menu":
                  return l.fromArgb(255, 240, 240, 240);
                case "menutext":
                  return l.fromArgb(255, 0, 0, 0);
                case "scrollbar":
                  return l.fromArgb(255, 200, 200, 200);
                case "window":
                  return l.fromArgb(255, 255, 255, 255);
                case "windowframe":
                  return l.fromArgb(255, 100, 100, 100);
                case "windowtext":
                  return l.fromArgb(255, 0, 0, 0);
                case "transparent":
                  return l.fromArgb(0, 255, 255, 255);
                case "aliceblue":
                  return l.fromArgb(255, 240, 248, 255);
                case "antiquewhite":
                  return l.fromArgb(255, 250, 235, 215);
                case "aqua":
                  return l.fromArgb(255, 0, 255, 255);
                case "aquamarine":
                  return l.fromArgb(255, 127, 255, 212);
                case "azure":
                  return l.fromArgb(255, 240, 255, 255);
                case "beige":
                  return l.fromArgb(255, 245, 245, 220);
                case "bisque":
                  return l.fromArgb(255, 255, 228, 196);
                case "black":
                  return l.fromArgb(255, 0, 0, 0);
                case "blanchedalmond":
                  return l.fromArgb(255, 255, 235, 205);
                case "blue":
                  return l.fromArgb(255, 0, 0, 255);
                case "blueviolet":
                  return l.fromArgb(255, 138, 43, 226);
                case "brown":
                  return l.fromArgb(255, 165, 42, 42);
                case "burlywood":
                  return l.fromArgb(255, 222, 184, 135);
                case "cadetblue":
                  return l.fromArgb(255, 95, 158, 160);
                case "chartreuse":
                  return l.fromArgb(255, 127, 255, 0);
                case "chocolate":
                  return l.fromArgb(255, 210, 105, 30);
                case "coral":
                  return l.fromArgb(255, 255, 127, 80);
                case "cornflowerblue":
                  return l.fromArgb(255, 100, 149, 237);
                case "cornsilk":
                  return l.fromArgb(255, 255, 248, 220);
                case "crimson":
                  return l.fromArgb(255, 220, 20, 60);
                case "cyan":
                  return l.fromArgb(255, 0, 255, 255);
                case "darkblue":
                  return l.fromArgb(255, 0, 0, 139);
                case "darkcyan":
                  return l.fromArgb(255, 0, 139, 139);
                case "darkgoldenrod":
                  return l.fromArgb(255, 184, 134, 11);
                case "darkgray":
                  return l.fromArgb(255, 169, 169, 169);
                case "darkgreen":
                  return l.fromArgb(255, 0, 100, 0);
                case "darkkhaki":
                  return l.fromArgb(255, 189, 183, 107);
                case "darkmagenta":
                  return l.fromArgb(255, 139, 0, 139);
                case "darkolivegreen":
                  return l.fromArgb(255, 85, 107, 47);
                case "darkorange":
                  return l.fromArgb(255, 255, 140, 0);
                case "darkorchid":
                  return l.fromArgb(255, 153, 50, 204);
                case "darkred":
                  return l.fromArgb(255, 139, 0, 0);
                case "darksalmon":
                  return l.fromArgb(255, 233, 150, 122);
                case "darkseagreen":
                  return l.fromArgb(255, 143, 188, 139);
                case "darkslateblue":
                  return l.fromArgb(255, 72, 61, 139);
                case "darkslategray":
                  return l.fromArgb(255, 47, 79, 79);
                case "darkturquoise":
                  return l.fromArgb(255, 0, 206, 209);
                case "darkviolet":
                  return l.fromArgb(255, 148, 0, 211);
                case "deeppink":
                  return l.fromArgb(255, 255, 20, 147);
                case "deepskyblue":
                  return l.fromArgb(255, 0, 191, 255);
                case "dimgray":
                  return l.fromArgb(255, 105, 105, 105);
                case "dodgerblue":
                  return l.fromArgb(255, 30, 144, 255);
                case "firebrick":
                  return l.fromArgb(255, 178, 34, 34);
                case "floralwhite":
                  return l.fromArgb(255, 255, 250, 240);
                case "forestgreen":
                  return l.fromArgb(255, 34, 139, 34);
                case "fuchsia":
                  return l.fromArgb(255, 255, 0, 255);
                case "gainsboro":
                  return l.fromArgb(255, 220, 220, 220);
                case "ghostwhite":
                  return l.fromArgb(255, 248, 248, 255);
                case "gold":
                  return l.fromArgb(255, 255, 215, 0);
                case "goldenrod":
                  return l.fromArgb(255, 218, 165, 32);
                case "gray":
                  return l.fromArgb(255, 128, 128, 128);
                case "green":
                  return l.fromArgb(255, 0, 128, 0);
                case "greenyellow":
                  return l.fromArgb(255, 173, 255, 47);
                case "honeydew":
                  return l.fromArgb(255, 240, 255, 240);
                case "hotpink":
                  return l.fromArgb(255, 255, 105, 180);
                case "indianred":
                  return l.fromArgb(255, 205, 92, 92);
                case "indigo":
                  return l.fromArgb(255, 75, 0, 130);
                case "ivory":
                  return l.fromArgb(255, 255, 255, 240);
                case "khaki":
                  return l.fromArgb(255, 240, 230, 140);
                case "lavender":
                  return l.fromArgb(255, 230, 230, 250);
                case "lavenderblush":
                  return l.fromArgb(255, 255, 240, 245);
                case "lawngreen":
                  return l.fromArgb(255, 124, 252, 0);
                case "lemonchiffon":
                  return l.fromArgb(255, 255, 250, 205);
                case "lightblue":
                  return l.fromArgb(255, 173, 216, 230);
                case "lightcoral":
                  return l.fromArgb(255, 240, 128, 128);
                case "lightcyan":
                  return l.fromArgb(255, 224, 255, 255);
                case "lightgoldenrodyellow":
                  return l.fromArgb(255, 250, 250, 210);
                case "lightgray":
                  return l.fromArgb(255, 211, 211, 211);
                case "lightgreen":
                  return l.fromArgb(255, 144, 238, 144);
                case "lightpink":
                  return l.fromArgb(255, 255, 182, 193);
                case "lightsalmon":
                  return l.fromArgb(255, 255, 160, 122);
                case "lightseagreen":
                  return l.fromArgb(255, 32, 178, 170);
                case "lightskyblue":
                  return l.fromArgb(255, 135, 206, 250);
                case "lightslategray":
                  return l.fromArgb(255, 119, 136, 153);
                case "lightsteelblue":
                  return l.fromArgb(255, 176, 196, 222);
                case "lightyellow":
                  return l.fromArgb(255, 255, 255, 224);
                case "lime":
                  return l.fromArgb(255, 0, 255, 0);
                case "limegreen":
                  return l.fromArgb(255, 50, 205, 50);
                case "linen":
                  return l.fromArgb(255, 250, 240, 230);
                case "magenta":
                  return l.fromArgb(255, 255, 0, 255);
                case "maroon":
                  return l.fromArgb(255, 128, 0, 0);
                case "mediumaquamarine":
                  return l.fromArgb(255, 102, 205, 170);
                case "mediumblue":
                  return l.fromArgb(255, 0, 0, 205);
                case "mediumorchid":
                  return l.fromArgb(255, 186, 85, 211);
                case "mediumpurple":
                  return l.fromArgb(255, 147, 112, 219);
                case "mediumseagreen":
                  return l.fromArgb(255, 60, 179, 113);
                case "mediumslateblue":
                  return l.fromArgb(255, 123, 104, 238);
                case "mediumspringgreen":
                  return l.fromArgb(255, 0, 250, 154);
                case "mediumturquoise":
                  return l.fromArgb(255, 72, 209, 204);
                case "mediumvioletred":
                  return l.fromArgb(255, 199, 21, 133);
                case "midnightblue":
                  return l.fromArgb(255, 25, 25, 112);
                case "mintcream":
                  return l.fromArgb(255, 245, 255, 250);
                case "mistyrose":
                  return l.fromArgb(255, 255, 228, 225);
                case "moccasin":
                  return l.fromArgb(255, 255, 228, 181);
                case "navajowhite":
                  return l.fromArgb(255, 255, 222, 173);
                case "navy":
                  return l.fromArgb(255, 0, 0, 128);
                case "oldlace":
                  return l.fromArgb(255, 253, 245, 230);
                case "olive":
                  return l.fromArgb(255, 128, 128, 0);
                case "olivedrab":
                  return l.fromArgb(255, 107, 142, 35);
                case "orange":
                  return l.fromArgb(255, 255, 165, 0);
                case "orangered":
                  return l.fromArgb(255, 255, 69, 0);
                case "orchid":
                  return l.fromArgb(255, 218, 112, 214);
                case "palegoldenrod":
                  return l.fromArgb(255, 238, 232, 170);
                case "palegreen":
                  return l.fromArgb(255, 152, 251, 152);
                case "paleturquoise":
                  return l.fromArgb(255, 175, 238, 238);
                case "palevioletred":
                  return l.fromArgb(255, 219, 112, 147);
                case "papayawhip":
                  return l.fromArgb(255, 255, 239, 213);
                case "peachpuff":
                  return l.fromArgb(255, 255, 218, 185);
                case "peru":
                  return l.fromArgb(255, 205, 133, 63);
                case "pink":
                  return l.fromArgb(255, 255, 192, 203);
                case "plum":
                  return l.fromArgb(255, 221, 160, 221);
                case "powderblue":
                  return l.fromArgb(255, 176, 224, 230);
                case "purple":
                  return l.fromArgb(255, 128, 0, 128);
                case "red":
                  return l.fromArgb(255, 255, 0, 0);
                case "rosybrown":
                  return l.fromArgb(255, 188, 143, 143);
                case "royalblue":
                  return l.fromArgb(255, 65, 105, 225);
                case "saddlebrown":
                  return l.fromArgb(255, 139, 69, 19);
                case "salmon":
                  return l.fromArgb(255, 250, 128, 114);
                case "sandybrown":
                  return l.fromArgb(255, 244, 164, 96);
                case "seagreen":
                  return l.fromArgb(255, 46, 139, 87);
                case "seashell":
                  return l.fromArgb(255, 255, 245, 238);
                case "sienna":
                  return l.fromArgb(255, 160, 82, 45);
                case "silver":
                  return l.fromArgb(255, 192, 192, 192);
                case "skyblue":
                  return l.fromArgb(255, 135, 206, 235);
                case "slateblue":
                  return l.fromArgb(255, 106, 90, 205);
                case "slategray":
                  return l.fromArgb(255, 112, 128, 144);
                case "snow":
                  return l.fromArgb(255, 255, 250, 250);
                case "springgreen":
                  return l.fromArgb(255, 0, 255, 127);
                case "steelblue":
                  return l.fromArgb(255, 70, 130, 180);
                case "tan":
                  return l.fromArgb(255, 210, 180, 140);
                case "teal":
                  return l.fromArgb(255, 0, 128, 128);
                case "thistle":
                  return l.fromArgb(255, 216, 191, 216);
                case "tomato":
                  return l.fromArgb(255, 255, 99, 71);
                case "turquoise":
                  return l.fromArgb(255, 64, 224, 208);
                case "violet":
                  return l.fromArgb(255, 238, 130, 238);
                case "wheat":
                  return l.fromArgb(255, 245, 222, 179);
                case "white":
                  return l.fromArgb(255, 255, 255, 255);
                case "whitesmoke":
                  return l.fromArgb(255, 245, 245, 245);
                case "yellow":
                  return l.fromArgb(255, 255, 255, 0);
                case "yellowgreen":
                  return l.fromArgb(255, 154, 205, 50);
                case "buttonface":
                  return l.fromArgb(255, 240, 240, 240);
                case "buttonhighlight":
                  return l.fromArgb(255, 255, 255, 255);
                case "buttonshadow":
                  return l.fromArgb(255, 160, 160, 160);
                case "gradientactivecaption":
                  return l.fromArgb(255, 185, 209, 234);
                case "gradientinactivecaption":
                  return l.fromArgb(255, 215, 228, 242);
                case "menubar":
                  return l.fromArgb(255, 240, 240, 240);
                case "menuhighlight":
                  return l.fromArgb(255, 51, 153, 255);
              }
              return l.fromArgb(255, 255, 255, 255);
            }, l.fromHex = function(u) {
              var y = t.Util.fromHex(u.substr(1, 2)), g = t.Util.fromHex(u.substr(3, 2)), Ee = t.Util.fromHex(u.substr(5, 2)), Ve = 255;
              return l.fromArgb(Ve, y, g, Ee);
            }, l.fromSimpleHex = function(u) {
              var y = t.Util.fromHex(u.substr(0, 2)), g = t.Util.fromHex(u.substr(2, 2)), Ee = t.Util.fromHex(u.substr(4, 2)), Ve = t.Util.fromHex(u.substr(6, 2));
              return l.fromArgb(y, g, Ee, Ve);
            }, l.fromInt = function(u) {
              var y = (u & 4278190080) >>> 24, g = (u & 16711680) >>> 16, Ee = (u & 65280) >>> 8, Ve = u & 255;
              return l.fromArgb(Ve, y, g, Ee);
            };
            var o = {
              toFormat: function() {
                return a.ss.emptyString(this.name) ? a.ss.format("rgb({0},{1},{2})", this.r.toString(), this.g.toString(), this.b.toString()) : this.name;
              },
              save: function() {
                return a.ss.emptyString(this.name) ? a.ss.format("{0}:{1}:{2}:{3}:{4}", 1, this.a, this.r, this.g, this.b) : a.ss.format("{0}:{1}", 0, this.name);
              },
              toString: function() {
                return a.ss.emptyString(this.name) ? a.ss.format("#{0}{1}{2}", t.Util.toHex(this.r), t.Util.toHex(this.g), t.Util.toHex(this.b)) : this.name;
              },
              toSimpleHex: function() {
                return a.ss.emptyString(this.name) ? a.ss.format("{0}{1}{2}{3}", t.Util.toHex(this.a), t.Util.toHex(this.r), t.Util.toHex(this.g), t.Util.toHex(this.b)) : this.name;
              },
              _clone: function() {
                return l.fromArgb(this.a, this.r, this.g, this.b);
              }
            };
            (0, s.registerType)("Color", [l, o, null]);
            function c() {
            }
            c.get_black = function() {
              return l.fromArgb(255, 0, 0, 0);
            }, c.get_blue = function() {
              return l.fromArgb(255, 0, 0, 255);
            }, c.get_brown = function() {
              return l.fromArgb(255, 165, 42, 42);
            }, c.get_cyan = function() {
              return l.fromArgb(255, 0, 255, 255);
            }, c.get_darkGray = function() {
              return l.fromArgb(255, 169, 169, 169);
            }, c.get_gray = function() {
              return l.fromArgb(255, 128, 128, 128);
            }, c.get_green = function() {
              return l.fromArgb(255, 0, 255, 0);
            }, c.get_lightGray = function() {
              return l.fromArgb(255, 211, 211, 211);
            }, c.get_magenta = function() {
              return l.fromArgb(255, 255, 0, 255);
            }, c.get_orange = function() {
              return l.fromArgb(255, 255, 165, 0);
            }, c.get_purple = function() {
              return l.fromArgb(255, 128, 0, 128);
            }, c.get_red = function() {
              return l.fromArgb(255, 255, 0, 0);
            }, c.get_transparent = function() {
              return l.fromArgb(0, 255, 255, 255);
            }, c.get_white = function() {
              return l.fromArgb(255, 255, 255, 255);
            }, c.get_yellow = function() {
              return l.fromArgb(255, 255, 255, 0);
            };
            var _ = {};
            (0, s.registerType)("Colors", [c, _, null]);
          }
        ),
        /***/
        "./esm/constellation_filter.js": (
          /*!*************************************!*\
            !*** ./esm/constellation_filter.js ***!
            \*************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ConstellationFilter: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./blend_state.js */
              "./esm/blend_state.js"
            );
            function l() {
              this.bits = new Array(3), this.oldBits = new Array(3), this.blendState = t.BlendState.create(!1, 1e3), this.internal = !1, this.settingsOwned = !1;
              for (var c = 0; c < 3; c++)
                this.bits[c] = ~this.bits[c], this.oldBits[c] = this.bits[c];
            }
            l.families = {}, l.bitIDs = {}, l.buildConstellationFilters = function() {
              var c = l.get_allConstellation();
              c.internal = !0, l.families.AllConstellation = c, l.families.Zodiacal = l.get_zodiacal(), l.families["Ursa Major Family"] = l.get_ursaMajorFamily(), l.families["Perseus Family"] = l.get_perseusFamily(), l.families["Hercules Family"] = l.get_herculesFamily(), l.families["Orion Family"] = l.get_orionFamily(), l.families["Heavenly Waters"] = l.get_heavenlyWaters(), l.families["Bayer Family"] = l.get_bayerFamily(), l.families["La Caille Family"] = l.get_laCaileFamily();
            }, l.saveCustomFilters = function() {
              var c = new s.ss.StringBuilder(), _ = l.families;
              for (var u in _) {
                var y = { key: u, value: _[u] };
                y.value.internal || (c.append(y.key), c.append(";"), c.appendLine(y.value.toString()));
              }
            }, l.get_allConstellation = function() {
              var c = new l();
              return c.setAll(!0), c;
            }, l.get_zodiacal = function() {
              var c = new l();
              return c.set("ARI", !0), c.set("TAU", !0), c.set("GEM", !0), c.set("CNC", !0), c.set("LEO", !0), c.set("VIR", !0), c.set("LIB", !0), c.set("SCO", !0), c.set("SGR", !0), c.set("CAP", !0), c.set("AQR", !0), c.set("PSC", !0), c.internal = !0, c;
            }, l.get_ursaMajorFamily = function() {
              var c = new l();
              return c.set("UMA", !0), c.set("UMI", !0), c.set("DRA", !0), c.set("CVN", !0), c.set("BOO", !0), c.set("COM", !0), c.set("CRB", !0), c.set("CAM", !0), c.set("LYN", !0), c.set("LMI", !0), c.internal = !0, c;
            }, l.get_perseusFamily = function() {
              var c = new l();
              return c.set("CAS", !0), c.set("CEP", !0), c.set("AND", !0), c.set("PER", !0), c.set("PEG", !0), c.set("CET", !0), c.set("AUR", !0), c.set("LAC", !0), c.set("TRI", !0), c.internal = !0, c;
            }, l.get_herculesFamily = function() {
              var c = new l();
              return c.set("HER", !0), c.set("SGE", !0), c.set("AQL", !0), c.set("LYR", !0), c.set("CYG", !0), c.set("VUL", !0), c.set("HYA", !0), c.set("SEX", !0), c.set("CRT", !0), c.set("CRV", !0), c.set("OPH", !0), c.set("SER1", !0), c.set("SER2", !0), c.set("SCT", !0), c.set("CEN", !0), c.set("LUP", !0), c.set("CRA", !0), c.set("ARA", !0), c.set("TRA", !0), c.set("CRU", !0), c.internal = !0, c;
            }, l.get_orionFamily = function() {
              var c = new l();
              return c.set("ORI", !0), c.set("CMA", !0), c.set("CMI", !0), c.set("MON", !0), c.set("LEP", !0), c.internal = !0, c;
            }, l.get_heavenlyWaters = function() {
              var c = new l();
              return c.set("DEL", !0), c.set("EQU", !0), c.set("ERI", !0), c.set("PSA", !0), c.set("CAR", !0), c.set("PUP", !0), c.set("VEL", !0), c.set("PYX", !0), c.set("COL", !0), c.internal = !0, c;
            }, l.get_bayerFamily = function() {
              var c = new l();
              return c.set("HYA", !0), c.set("DOR", !0), c.set("VOL", !0), c.set("APS", !0), c.set("PAV", !0), c.set("GRU", !0), c.set("PHE", !0), c.set("TUC", !0), c.set("IND", !0), c.set("CHA", !0), c.set("MUS", !0), c.internal = !0, c;
            }, l.get_laCaileFamily = function() {
              var c = new l();
              return c.set("NOR", !0), c.set("CIR", !0), c.set("TEL", !0), c.set("MIC", !0), c.set("SCL", !0), c.set("FOR", !0), c.set("CAE", !0), c.set("HOR", !0), c.set("OCT", !0), c.set("MEN", !0), c.set("RET", !0), c.set("PIC", !0), c.set("ANT", !0), c.internal = !0, c;
            }, l.parse = function(c) {
              var _ = c.split(","), u = new l();
              try {
                for (var y = 0; y < 3; y++)
                  u.bits[y] = parseInt(_[y]);
              } catch {
              }
              return u;
            };
            var o = {
              _saveBits: function() {
                for (var c = 0; c < 3; c++)
                  this.oldBits[c] = this.bits[c];
              },
              _isChanged: function() {
                for (var c = 0; c < 3; c++)
                  if (this.oldBits[c] !== this.bits[c])
                    return !0;
                return !1;
              },
              _checkChanged: function() {
                this._isChanged() && this._fireChanged();
              },
              isEnabled: function(c) {
                var _ = l.bitIDs[c], u = _ / 32;
                return _ = _ % 32, this.blendState.get_state() && !!(1 << _ & this.bits[u]);
              },
              isSet: function(c) {
                this._saveBits();
                var _ = l.bitIDs[c], u = s.ss.truncate(_ / 32);
                return _ = _ % 32, !!(1 << _ & this.bits[u]);
              },
              set: function(c, _) {
                this._saveBits();
                var u = l.bitIDs[c], y = u / 32;
                u = u % 32, _ ? this.bits[y] = this.bits[y] | 1 << u : this.bits[y] = this.bits[y] ^ 1 << u, this._checkChanged();
              },
              setAll: function(c) {
                this._saveBits();
                for (var _ = 0; _ < 89; _++) {
                  var u = _ / 32, y = _ % 32;
                  c ? this.bits[u] = this.bits[u] | 1 << y : this.bits[u] = this.bits[u] ^ 1 << y;
                }
                this._checkChanged();
              },
              setBits: function(c) {
                this._saveBits();
                for (var _ = 0; _ < 3; _++)
                  this.bits[_] = c[_ * 4] + (c[_ * 4 + 1] << 8) + (c[_ * 4 + 2] << 16) + (c[_ * 4 + 3] << 24);
                this._checkChanged();
              },
              getBits: function() {
                for (var c = new Array(12), _ = 0, u = 0; u < 3; u++)
                  c[_++] = this.bits[u], c[_++] = this.bits[u] >> 8, c[_++] = this.bits[u] >> 16, c[_++] = this.bits[u] >> 24;
                return c;
              },
              cloneFilter: function(c) {
                this._saveBits();
                for (var _ = 0; _ < 3; _++)
                  this.bits[_] = c.bits[_];
                this._checkChanged();
              },
              clone: function() {
                var c = new l();
                return c.cloneFilter(this), c;
              },
              combine: function(c) {
                this._saveBits();
                for (var _ = 0; _ < 3; _++)
                  this.bits[_] = this.bits[_] | c.bits[_];
                this._checkChanged();
              },
              remove: function(c) {
                this._saveBits();
                for (var _ = 0; _ < 3; _++)
                  this.bits[_] = this.bits[_] & ~c.bits[_];
                this._checkChanged();
              },
              _fireChanged: function() {
                this.settingsOwned;
              },
              toString: function() {
                return s.ss.format("{0},{1},{2}", this.bits[0], this.bits[1], this.bits[2]);
              }
            };
            (0, a.registerType)("ConstellationFilter", [l, o, null]);
          }
        ),
        /***/
        "./esm/constellations.js": (
          /*!*******************************!*\
            !*** ./esm/constellations.js ***!
            \*******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Constellations: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              Linepoint: () => (
                /* binding */
                b
              ),
              /* harmony export */
              Lineset: () => (
                /* binding */
                Pe
              ),
              /* harmony export */
              PointType: () => (
                /* binding */
                B
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), o = n(
              /*! ./graphics/primitives3d.js */
              "./esm/graphics/primitives3d.js"
            ), c = n(
              /*! ./blend_state.js */
              "./esm/blend_state.js"
            ), _ = n(
              /*! ./color.js */
              "./esm/color.js"
            ), u = n(
              /*! ./constellation_filter.js */
              "./esm/constellation_filter.js"
            ), y = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), g = n(
              /*! ./settings.js */
              "./esm/settings.js"
            ), Ee = n(
              /*! ./sky_text.js */
              "./esm/sky_text.js"
            ), Ve = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), Me = n(
              /*! ./web_file.js */
              "./esm/web_file.js"
            ), B = {
              move: 0,
              line: 1,
              dash: 2,
              start: 3
            };
            (0, a.registerType)("PointType", B), (0, a.registerEnum)("PointType", B);
            function Pe(Se) {
              this._name = Se, this.points = [];
            }
            var k = {
              get_name: function() {
                return this._name;
              },
              set_name: function(Se) {
                return this._name = Se, Se;
              },
              add: function(Se, Te, D, ke) {
                this.points.push(new b(Se, Te, D, ke));
              }
            };
            (0, a.registerType)("Lineset", [Pe, k, null]);
            function b(Se, Te, D, ke) {
              this.RA = 0, this.dec = 0, this.pointType = 0, this.name = null, this.RA = Se, this.dec = Te, this.pointType = D, this.name = ke;
            }
            var Le = {
              toString: function() {
                return s.ss.emptyString(this.name) ? y.Coordinates.formatDMS((this.RA / 360 * 24 + 12) % 24) + ", " + y.Coordinates.formatDMS(this.dec) + ", " + this.pointType.toString() : this.name + ", " + this.pointType.toString();
              }
            };
            (0, a.registerType)("Linepoint", [b, Le, null]);
            function xe() {
              this._pointCount = 0, this._boundry = !1, this._noInterpollation = !1, this.readOnly = !1, this.radius = 1, this._drawCount = 0, this._constellationVertexBuffers = {};
            }
            xe.RC = 0.017453292519943, xe._maxSeperation = 0.745, xe.containment = null, xe._constToDraw = "", xe.selectedSegment = null, xe._artFile = null, xe.artwork = null, xe.boundries = null, xe.pictureBlendStates = {}, xe.createBasic = function(Se) {
              var Te = new xe();
              Te._name = Se, Te._url = null, Te.lines = [];
              for (var D = s.ss.enumerate(s.ss.keys(xe.fullNames)); D.moveNext(); ) {
                var ke = D.current;
                Te.lines.push(new Pe(ke));
              }
              return Te;
            }, xe.create = function(Se, Te, D, ke, Fe) {
              var He = new xe();
              return He._noInterpollation = ke, He._boundry = D, He._name = Se, He._url = Te, He.getFile(), He;
            }, xe.drawConstellationNames = function(Se, Te, D) {
              xe._namesBatch == null && (xe.initializeConstellationNames(), xe._namesBatch == null) || xe._namesBatch.draw(Se, Te, D);
            }, xe.initializeConstellationNames = function() {
              if (xe.constellationCentroids != null) {
                xe._namesBatch = new Ee.Text3dBatch(g.Settings.get_active().get_constellationLabelsHeight());
                for (var Se = s.ss.enumerate(s.ss.keys(xe.constellationCentroids)); Se.moveNext(); ) {
                  var Te = Se.current, D = xe.constellationCentroids[Te], ke = y.Coordinates.raDecTo3dAu(D.get_RA(), D.get_dec(), 1), Fe = t.Vector3d.create(0, 1, 0), He = D.get_name();
                  D.get_name() === "Triangulum Australe" && (He = s.ss.replaceString(He, " ", `
   `)), xe._namesBatch.add(new Ee.Text3d(ke, Fe, He, g.Settings.get_active().get_constellationLabelsHeight(), 125e-6));
                }
              }
            }, xe.drawArtwork = function(Se) {
              if (xe.artwork == null) {
                xe._artFile == null && (xe._artFile = (0, l.makeNewFolder)(), xe._artFile.loadFromUrl(Ve.URLHelpers.singleton.coreStaticUrl("wwtweb/catalog.aspx?W=hevelius"), xe._onArtReady));
                return;
              }
              xe._maxSeperation = Math.max(0.5, Math.cos(Se.get_fovAngle() * 2 / 180 * Math.PI));
              for (var Te = s.ss.enumerate(xe.artwork); Te.moveNext(); ) {
                var D = Te.current, ke = xe.pictureBlendStates[D.get_constellation()];
                if (ke.set_targetState(g.Settings.get_active().get_constellationArtFilter().isSet(D.get_constellation())), ke.get_state()) {
                  var Fe = !1, He = xe.constellationCentroids[D.get_constellation()];
                  if (He != null) {
                    var We = y.Coordinates.raDecTo3d(Fe ? -He.get_RA() - 6 : He.get_RA(), He.get_dec());
                    t.Vector3d.dot(Se.get_viewPoint(), We) > xe._maxSeperation && Se.drawImageSet(D.get_studyImageset(), 100);
                  }
                }
              }
            }, xe._onArtReady = function() {
              xe._artFile.childLoadCallback(xe._loadArtList);
            }, xe._loadArtList = function() {
              xe.artwork = xe._artFile.get_places();
            }, xe.initializeConstellations = function() {
              if (xe.containment == null) {
                var Se = Ve.URLHelpers.singleton.engineAssetUrl("ConstellationNamePositions_EN.txt");
                xe._webFileConstNames = new Me.WebFile(Se), xe._webFileConstNames.onStateChange = xe._loadNames, xe._webFileConstNames.send(), xe.containment = xe.create(
                  "Constellations",
                  Ve.URLHelpers.singleton.engineAssetUrl("constellations.txt"),
                  !0,
                  // "boundry"
                  !0,
                  // "noInterpollation"
                  !0
                  // "resource"
                );
              }
            }, xe._loadNames = function() {
              xe._webFileConstNames.get_state() === 2 ? alert(xe._webFileConstNames.get_message()) : xe._webFileConstNames.get_state() === 1 && xe._centroidsReady(xe._webFileConstNames.getText());
            }, xe._centroidsReady = function(Se) {
              xe.constellationCentroids = {}, xe.fullNames = {}, xe.abbreviations = {};
              for (var Te = Se.split(`\r
`), D = 0, ke, Fe = s.ss.enumerate(Te); Fe.moveNext(); ) {
                var He = Fe.current;
                ke = He;
                var We = ke.split(",");
                xe.fullNames[We[1]] = We[0], xe.abbreviations[We[0]] = We[1], u.ConstellationFilter.bitIDs[We[1]] = D++, xe.pictureBlendStates[We[1]] = c.BlendState.create(!0, 1e3), xe.constellationCentroids[We[1]] = (0, l.createPlace)(We[0], parseFloat(We[3]), parseFloat(We[2]), 128, We[1], 2, 360);
              }
              u.ConstellationFilter.buildConstellationFilters();
            }, xe.fullName = function(Se) {
              return s.ss.keyExists(xe.fullNames, Se) ? xe.fullNames[Se] : Se;
            }, xe.abbreviation = function(Se) {
              return xe.abbreviations != null && !s.ss.emptyString(Se) && s.ss.keyExists(xe.abbreviations, Se) ? xe.abbreviations[Se] : Se;
            };
            var ze = {
              get_name: function() {
                return this._name;
              },
              set_name: function(Se) {
                return this._name = Se, Se;
              },
              getFile: function() {
                this._webFile = new Me.WebFile(this._url), this._webFile.onStateChange = s.ss.bind("fileStateChange", this), this._webFile.send();
              },
              fileStateChange: function() {
                this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && this._loadConstellationData(this._webFile.getText());
              },
              _loadConstellationData: function(Se) {
                this._boundry && !this._noInterpollation && (xe.boundries = {}), this.lines = [];
                var Te = null;
                try {
                  for (var D = Se.split(`\r
`), ke, Fe = "", He, We, Ke = 0, $ = 0, De = s.ss.enumerate(D); De.moveNext(); ) {
                    var Re = De.current, Ie = Re;
                    if (Ie.substr(11, 2) === "- " && (Ie = Ie.substr(0, 11) + " -" + Ie.substr(13, Ie.length - 13)), Ie.substr(11, 2) === "+ " && (Ie = Ie.substr(0, 11) + " +" + Ie.substr(13, Ie.length - 13)), We = parseFloat(Ie.substr(11, 10)), this._noInterpollation, He = parseFloat(Ie.substr(0, 10)), ke = s.ss.trim(Ie.substr(23, 4)), !this._boundry)
                      s.ss.trim(Ie.substr(28, 1)) && ($ = parseInt(Ie.substr(28, 1)));
                    else if (this._noInterpollation && Ie.substr(28, 1) !== "O")
                      continue;
                    ke !== Fe && ($ = 3, Te = new Pe(ke), this.lines.push(Te), this._boundry && !this._noInterpollation && (xe.boundries[ke] = Te), Fe = ke, Ke = 0), this._noInterpollation && (Math.abs(He - Ke) > 12 && (He = He - 24 * (He - Ke < 0 ? -1 : 1)), Ke = He);
                    var O = null;
                    Ie.length > 30 && (O = s.ss.trim(Ie.substr(30))), (O == null || O !== "Empty") && Te.add(He, We, $, O), this._pointCount++, $ = 1;
                  }
                } catch {
                }
              },
              draw: function(Se, Te, D, ke) {
                xe._maxSeperation = Math.max(0.6, Math.cos(Se.get_fovAngle() * 2 / 180 * Math.PI)), this._drawCount = 0;
                var Fe = null;
                if (!(this.lines == null || xe.constellationCentroids == null)) {
                  xe._constToDraw = D;
                  for (var He = s.ss.enumerate(this.lines); He.moveNext(); ) {
                    var We = He.current;
                    xe._constToDraw === We.get_name() && this._boundry ? Fe = We : (!Te || !this._boundry) && this._drawSingleConstellation(Se, We, 1);
                  }
                  Fe != null && this._drawSingleConstellation(Se, Fe, 1);
                }
              },
              _drawSingleConstellation: function(Se, Te, D) {
                var ke = xe.constellationCentroids[Te.get_name()];
                if (ke != null) {
                  var Fe = y.Coordinates.raDecTo3d(ke.get_RA(), ke.get_dec());
                  if (t.Vector3d.dot(Se.get_viewPoint(), Fe) < xe._maxSeperation)
                    return;
                }
                if (!s.ss.keyExists(this._constellationVertexBuffers, Te.get_name())) {
                  var He = Te.points.length, We = new o.SimpleLineList();
                  We.set_depthBuffered(!1), this._constellationVertexBuffers[Te.get_name()] = We;
                  for (var Ke = new t.Vector3d(), $, De = 0; De < He; De++)
                    !Te.points[De].pointType || !De ? Ke = y.Coordinates.raDecTo3d(Te.points[De].RA, Te.points[De].dec) : ($ = y.Coordinates.raDecTo3d(Te.points[De].RA, Te.points[De].dec), We.addLine(Ke, $), Ke = $);
                  this._boundry && ($ = y.Coordinates.raDecTo3d(Te.points[0].RA, Te.points[0].dec), We.addLine(Ke, $));
                }
                var Re = "red";
                this._boundry ? xe._constToDraw !== Te.get_name() ? Re = g.Settings.get_globalSettings().get_constellationBoundryColor() : Re = g.Settings.get_globalSettings().get_constellationSelectionColor() : Re = g.Settings.get_globalSettings().get_constellationFigureColor(), this._constellationVertexBuffers[Te.get_name()].drawLines(Se, D, _.Color.load(Re));
              },
              _drawSingleConstellationOld: function(Se, Te) {
                var D = xe.constellationCentroids[Te.get_name()];
                if (D != null) {
                  var ke = y.Coordinates.raDecTo3d(D.get_RA(), D.get_dec());
                  if (t.Vector3d.dot(Se.get_viewPoint(), ke) < xe._maxSeperation)
                    return;
                }
                this._drawCount++;
                var Fe;
                if (this._boundry ? xe._constToDraw !== Te.get_name() ? Fe = g.Settings.get_globalSettings().get_constellationBoundryColor() : Fe = g.Settings.get_globalSettings().get_constellationSelectionColor() : Fe = g.Settings.get_globalSettings().get_constellationFigureColor(), Se.gl == null) {
                  var He = Se.device, We = Te.points.length, Ke = new t.Vector3d();
                  He.save();
                  var $ = !1;
                  He.beginPath(), He.strokeStyle = Fe, He.lineWidth = 2, He.globalAlpha = 0.25;
                  for (var De = 0; De < We; De++)
                    if (!Te.points[De].pointType || !De)
                      $ && He.stroke(), Ke = Se.WVP.transform(y.Coordinates.raDecTo3d(Te.points[De].RA, Te.points[De].dec)), He.moveTo(Ke.x, Ke.y);
                    else {
                      var Re = Se.WVP.transform(y.Coordinates.raDecTo3d(Te.points[De].RA, Te.points[De].dec));
                      He.lineTo(Re.x, Re.y), $ = !0;
                    }
                  this._boundry && He.closePath(), He.stroke(), He.restore();
                }
              },
              findConstellationForPoint: function(Se, Te) {
                if (Te > 88.402 || this.lines == null)
                  return "UMI";
                for (var D = s.ss.enumerate(this.lines); D.moveNext(); ) {
                  var ke = D.current, Fe = ke.points.length, He, We, Ke = !1;
                  for (He = 0, We = Fe - 1; He < Fe; We = He++)
                    (ke.points[He].dec <= Te && Te < ke.points[We].dec || ke.points[We].dec <= Te && Te < ke.points[He].dec) && Se < (ke.points[We].RA - ke.points[He].RA) * (Te - ke.points[He].dec) / (ke.points[We].dec - ke.points[He].dec) + ke.points[He].RA && (Ke = !Ke);
                  if (Ke)
                    return ke.get_name();
                }
                return Se > 0 ? this.findConstellationForPoint(Se - 24, Te) : Te > 65.5 ? "UMI" : Te < -65.5 ? "OCT" : "Error";
              }
            };
            (0, a.registerType)("Constellations", [xe, ze, null]);
          }
        ),
        /***/
        "./esm/coordinates.js": (
          /*!****************************!*\
            !*** ./esm/coordinates.js ***!
            \****************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Coordinates: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./baseutil.js */
              "./esm/baseutil.js"
            ), l = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            );
            function o(_, u) {
              this._ascention = 0, this._declination = 0, this._ascention = _ + Math.PI * 80 % (Math.PI * 2), this._declination = u;
            }
            o.RC = 0.01745329277777778, o.RCRA = 0.26179939166666666, o.radius = 1, o._rotationMatrix = null, o.geoTo3d = function(_, u) {
              return l.Vector3d.create(Math.cos(u * o.RC) * Math.cos(_ * o.RC) * 1, Math.sin(_ * o.RC) * 1, Math.sin(u * o.RC) * Math.cos(_ * o.RC) * 1);
            }, o.geoTo3dDouble = function(_, u) {
              return l.Vector3d.create(Math.cos(u * o.RC) * Math.cos(_ * o.RC) * 1, Math.sin(_ * o.RC) * 1, Math.sin(u * o.RC) * Math.cos(_ * o.RC) * 1);
            }, o.geoTo3dRad = function(_, u, y) {
              return l.Vector3d.create(Math.cos(u * o.RC) * Math.cos(_ * o.RC) * y, Math.sin(_ * o.RC) * y, Math.sin(u * o.RC) * Math.cos(_ * o.RC) * y);
            }, o.raDecTo3d = function(_, u) {
              return l.Vector3d.create(Math.cos(_ * o.RCRA) * Math.cos(u * o.RC) * 1, Math.sin(u * o.RC) * 1, Math.sin(_ * o.RCRA) * Math.cos(u * o.RC) * 1);
            }, o.raDecTo3dAu = function(_, u, y) {
              return l.Vector3d.create(Math.cos(_ * o.RCRA) * Math.cos(u * o.RC) * y, Math.sin(u * o.RC) * y, Math.sin(_ * o.RCRA) * Math.cos(u * o.RC) * y);
            }, o.raDecTo3dMat = function(_, u, y) {
              return l.Vector3d._transformCoordinate(l.Vector3d.create(Math.cos(_ * o.RCRA) * Math.cos(u * o.RC) * 1, Math.sin(u * o.RC) * 1, Math.sin(_ * o.RCRA) * Math.cos(u * o.RC) * 1), y);
            }, o.raDecTo3dPointRad = function(_, u) {
              return _.set_dec(-_.get_dec()), l.Vector3d.create(Math.cos(_.get_RA() * o.RCRA) * Math.cos(_.get_dec() * o.RC) * u, Math.sin(_.get_dec() * o.RC) * u, Math.sin(_.get_RA() * o.RCRA) * Math.cos(_.get_dec() * o.RC) * u);
            }, o.sterographicTo3d = function(_, u, y, g, Ee, Ve, Me, B, Pe) {
              var k = 90, b = 0;
              if (_ -= Ve, u -= Me, _ || u) {
                var Le = (1 + Math.sin(Math.abs(g) / 180 * Math.PI)) * 6371e3 / B, xe = Le * Le, ze = 180 / Math.PI;
                _ ? b = Math.atan2(u, _) * ze : b = 90 * u < 0 ? -1 : 1;
                var Se = _ * _ + u * u;
                k = (xe - Se) / (xe + Se), k = Math.asin(k) * ze, Pe || (k = -k, b = -b, Ee = -Ee);
              }
              return o.geoTo3dRad(k, 90 + b + Ee, y);
            }, o.equitorialToHorizon = function(_, u, y) {
              var g = o.mstFromUTC2(y, u.get_lng()) - _.get_RA() * 15;
              g < 0 && (g += 360);
              var Ee = g * o.RC, Ve = _.get_dec() * o.RC, Me = u.get_lat() * o.RC, B = Math.sin(Ve) * Math.sin(Me) + Math.cos(Ve) * Math.cos(Me) * Math.cos(Ee), Pe = Math.asin(B), k = (Math.sin(Ve) - Math.sin(Pe) * Math.sin(Me)) / (Math.cos(Pe) * Math.cos(Me)), b = Math.acos(k), Le = new o(b, Pe);
              return Math.sin(Ee) > 0 && Le.set_az(360 - Le.get_az()), Le;
            }, o.horizonToEquitorial = function(_, u, y) {
              var g = o.mstFromUTC2(y, u.get_lng()), Ee, Ve, Me = o._altAzToRaDec(_.get_alt() * o.RC, _.get_az() * o.RC, u.get_lat() * o.RC);
              Ee = Me.x, Ve = Me.y;
              var B = Ee / o.RC;
              return g += B, g < 0 && (g += 360), g > 360 && (g -= 360), o.fromRaDec(g / 15, Ve / o.RC);
            }, o._altAzToRaDec = function(_, u, y) {
              var g = 0, Ee = 0;
              return u = Math.PI - u, u < 0 && (u += Math.PI * 2), g = Math.atan2(Math.sin(u), Math.cos(u) * Math.sin(y) + Math.tan(_) * Math.cos(y)), g < 0 && (g += Math.PI * 2), Ee = Math.asin(Math.sin(y) * Math.sin(_) - Math.cos(y) * Math.cos(_) * Math.cos(u)), l.Vector2d.create(g, Ee);
            }, o.mstFromUTC2 = function(_, u) {
              var y = _.getUTCFullYear(), g = _.getUTCMonth() + 1, Ee = _.getUTCDate(), Ve = _.getUTCHours(), Me = _.getUTCMinutes(), B = _.getUTCSeconds() + _.getUTCMilliseconds() / 1e3;
              (g === 1 || g === 2) && (y -= 1, g += 12);
              var Pe = a.ss.truncate(y / 100), k = 2 - Pe + Math.floor(Pe / 4), b = Math.floor(365.25 * y), Le = Math.floor(30.6001 * (g + 1)), xe, ze, Se;
              if (xe = k + b + Le - 730550.5 + Ee + (Ve + Me / 60 + B / 3600) / 24, ze = xe / 36525, Se = 280.46061837 + 360.98564736629 * xe + 387933e-9 * ze * ze - ze * ze * ze / 3871e4 + u, Se > 0)
                for (; Se > 360; )
                  Se = Se - 360;
              else
                for (; Se < 0; )
                  Se = Se + 360;
              return Se;
            }, o.cartesianToSpherical = function(_) {
              var u, y, g = Math.sqrt(_.x * _.x + _.y * _.y + _.z * _.z), Ee = Math.sqrt(_.x * _.x + _.z * _.z);
              return y = Math.asin(_.y / g), 0 < _.x ? u = Math.asin(_.z / Ee) : 0 > _.x ? u = Math.PI - Math.asin(_.z / Ee) : u = 0, new o(u, y);
            }, o.cartesianToSpherical2 = function(_) {
              var u = Math.sqrt(_.x * _.x + _.y * _.y + _.z * _.z), y = Math.atan2(_.z, _.x), g = Math.asin(_.y / u);
              return new o(y, g);
            }, o.cartesianToSphericalSky = function(_) {
              var u = Math.sqrt(_.x * _.x + _.y * _.y + _.z * _.z), y = Math.atan2(_.z, _.x), g = Math.asin(_.y / u);
              return l.Vector2d.create(y / Math.PI * 12, g / Math.PI * 180);
            }, o.sphericalSkyToCartesian = function(_) {
              var u = _.x * (Math.PI / 12), y = _.y * (Math.PI / 180), g = Math.cos(u) * Math.cos(y), Ee = Math.sin(y), Ve = Math.sin(u) * Math.cos(y);
              return l.Vector3d.create(g, Ee, Ve);
            }, o.cartesianToLatLng = function(_) {
              var u = Math.sqrt(_.x * _.x + _.y * _.y + _.z * _.z), y = Math.atan2(_.z, _.x), g = Math.asin(_.y / u);
              return l.Vector2d.create(y * 180 / Math.PI, g * 180 / Math.PI);
            }, o.cartesianToSpherical3 = function(_) {
              var u = Math.sqrt(_.x * _.x + _.y * _.y + _.z * _.z), y = Math.atan2(_.z, _.x), g = Math.asin(_.y / u);
              return new o(y, g);
            }, o.sign = function(_) {
              return _ < 0 ? -1 : 1;
            }, o.formatDMSSign = function(_, u) {
              try {
                _ += o.sign(_) * 1388888888889e-16;
                var y = a.ss.truncate(_), g = (_ - a.ss.truncate(_)) * 60, Ee = (g - a.ss.truncate(g)) * 60;
                if (u) {
                  var Ve = _ > 0 ? "+" : "-";
                  return a.ss.format("{3}{0:00;00}:{1:00}:{2:00}", y, Math.abs(a.ss.truncate(g)), Math.abs(a.ss.truncate(Ee)), Ve);
                } else
                  return a.ss.format("{0:00}:{1:00}:{2:00}", y, Math.abs(a.ss.truncate(g)), Math.abs(a.ss.truncate(Ee)));
              } catch {
                return "";
              }
            }, o.twoPlaces = function(_) {
              var u = _.toString();
              return u.length < 2 && (u = "0" + u), u;
            }, o.formatDMS = function(_) {
              try {
                _ += (_ < 0 ? -1 : 1) * 1388888888889e-16;
                var u = Math.abs(a.ss.truncate(_)), y = (_ - a.ss.truncate(_)) * 60, g = (y - a.ss.truncate(y)) * 60, Ee = _ < 0 ? "-" : "";
                return a.ss.format("{3}{0}:{1}:{2}", Math.abs(u), o.twoPlaces(Math.abs(a.ss.truncate(y))), o.twoPlaces(Math.abs(a.ss.truncate(g))), Ee);
              } catch {
                return "";
              }
            }, o.formatDMSWide = function(_) {
              try {
                _ += o.sign(_) * 1388888888889e-16;
                var u = Math.abs(a.ss.truncate(_)), y = (_ - a.ss.truncate(_)) * 60, g = (y - a.ss.truncate(y)) * 60, Ee = _ < 0 ? "-" : "";
                return a.ss.format("{3}{0:00} : {1:00} : {2:00}", u, Math.abs(a.ss.truncate(y)), Math.abs(a.ss.truncate(g)), Ee);
              } catch {
                return "";
              }
            }, o.formatHMS = function(_) {
              try {
                _ += o.sign(_) * 1388888888889e-16;
                var u = a.ss.truncate(_), y = (_ - a.ss.truncate(_)) * 60, g = (y - a.ss.truncate(y)) * 60;
                return a.ss.format("{0:00}h{1:00}m{2:00}s", u, Math.abs(a.ss.truncate(y)), Math.abs(a.ss.truncate(g)));
              } catch {
                return "";
              }
            }, o.parseRA = function(_, u) {
              _ = a.ss.trim(_).toLowerCase(), (_.indexOf("d") > -1 || _.indexOf("°") > -1) && (u = !0), (_.indexOf("h") > -1 || _.indexOf(":") > -1) && (u = !1);
              var y = o.parse(_) / (u ? 15 : 1);
              return Math.max(Math.min(y, 24), 0);
            }, o.parseDec = function(_) {
              var u = o.parse(_);
              return Math.max(Math.min(u, 90), -90);
            }, o.parse = function(_) {
              try {
                if (_ = a.ss.trim(_).toLowerCase(), _ = a.ss.replaceString(a.ss.replaceString(a.ss.replaceString(a.ss.replaceString(a.ss.replaceString(a.ss.replaceString(_, "d ", "d"), "h ", "h"), "m ", "m"), "s ", "s"), "' ", "'"), '" ', '"'), t.Util.stringContains(_, [":", " ", "d", "h", "m", "s", "'", '"', "°"])) {
                  var u = 0, y = 0, g = 0, Ee = 0, Ve = t.Util.splitString(_, [":", " ", "d", "h", "m", "s", "'", '"', "°"]);
                  return Ve.length > 0 && (a.ss.emptyString(Ve[0]) || (u = Math.abs(parseFloat(Ve[0])), Ee = parseFloat(Ve[0]) < 0 ? -1 : 1, Ve[0].indexOf("-") > -1 && (Ee = -1))), Ve.length > 1 && (a.ss.emptyString(Ve[1]) || (y = parseFloat(Ve[1]))), Ve.length > 2 && (a.ss.emptyString(Ve[2]) || (g = parseFloat(Ve[2]))), Ee || (Ee = 1), Ee * (u + y / 60 + g / 3600);
                } else {
                  var Me = 0;
                  try {
                    Me = parseFloat(_);
                  } catch {
                    Me = 0;
                  }
                  return Me;
                }
              } catch {
                return 0;
              }
            }, o.fromRaDec = function(_, u) {
              return new o((_ - 12) * 15 * o.RC, u * o.RC);
            }, o.fromLatLng = function(_, u) {
              return new o(u * o.RC, _ * o.RC);
            }, o.dmsToDegrees = function(_, u, y) {
              return _ + u / 60 + y / 3600;
            }, o.degreesToRadians = function(_) {
              return _ * 0.0174532925199433;
            }, o.radiansToDegrees = function(_) {
              return _ * 57.2957795130823;
            }, o.radiansToHours = function(_) {
              return _ * 3.81971863420549;
            }, o.hoursToRadians = function(_) {
              return _ * 0.261799387799149;
            }, o.hoursToDegrees = function(_) {
              return _ * 15;
            }, o.degreesToHours = function(_) {
              return _ / 15;
            }, o.PI = function() {
              return 3.14159265358979;
            }, o.mapTo0To360Range = function(_) {
              for (var u = _; u < 0; )
                u += 360;
              for (; u > 360; )
                u -= 360;
              return u;
            }, o.mapTo0To24Range = function(_) {
              for (var u = _; u < 0; )
                u += 24;
              for (; u > 24; )
                u -= 24;
              return u;
            }, o.meanObliquityOfEcliptic = function(_) {
              var u = (_ - 2451545) / 3652500, y = u * u, g = y * u, Ee = g * u, Ve = Ee * u, Me = Ve * u, B = Me * u, Pe = B * u, k = Pe * u, b = k * u;
              return o.dmsToDegrees(23, 26, 21.448) - o.dmsToDegrees(0, 0, 4680.93) * u - o.dmsToDegrees(0, 0, 1.55) * y + o.dmsToDegrees(0, 0, 1999.25) * g - o.dmsToDegrees(0, 0, 51.38) * Ee - o.dmsToDegrees(0, 0, 249.67) * Ve - o.dmsToDegrees(0, 0, 39.05) * Me + o.dmsToDegrees(0, 0, 7.12) * B + o.dmsToDegrees(0, 0, 27.87) * Pe + o.dmsToDegrees(0, 0, 5.79) * k + o.dmsToDegrees(0, 0, 2.45) * b;
            }, o.j2000toGalactic = function(_, u) {
              var y = [Math.cos(_ / 180 * Math.PI) * Math.cos(u / 180 * Math.PI), Math.sin(_ / 180 * Math.PI) * Math.cos(u / 180 * Math.PI), Math.sin(u / 180 * Math.PI)];
              o._rotationMatrix == null && (o._rotationMatrix = new Array(3), o._rotationMatrix[0] = [-0.0548755604, -0.8734370902, -0.4838350155], o._rotationMatrix[1] = [0.4941094279, -0.44482963, 0.7469822445], o._rotationMatrix[2] = [-0.867666149, -0.1980763734, 0.4559837762]);
              for (var g = new Array(3), Ee = 0; Ee < 3; Ee++)
                g[Ee] = y[0] * o._rotationMatrix[Ee][0] + y[1] * o._rotationMatrix[Ee][1] + y[2] * o._rotationMatrix[Ee][2];
              var Ve = Math.atan2(g[1], g[0]);
              Ve < 0 && (Ve = Ve + 2 * Math.PI), Ve > 2 * Math.PI && (Ve = Ve - 2 * Math.PI);
              var Me = Math.atan2(g[2], Math.sqrt(g[0] * g[0] + g[1] * g[1]));
              return [Ve / Math.PI * 180, Me / Math.PI * 180];
            }, o.galacticTo3dDouble = function(_, u) {
              var y = o.galactictoJ2000(_, u);
              return o.raDecTo3dAu(y[0] / 15, y[1], 1);
            }, o.galactictoJ2000 = function(_, u) {
              var y = [Math.cos(_ / 180 * Math.PI) * Math.cos(u / 180 * Math.PI), Math.sin(_ / 180 * Math.PI) * Math.cos(u / 180 * Math.PI), Math.sin(u / 180 * Math.PI)];
              o._rotationMatrix == null && (o._rotationMatrix = new Array(3), o._rotationMatrix[0] = [-0.0548755604, -0.8734370902, -0.4838350155], o._rotationMatrix[1] = [0.4941094279, -0.44482963, 0.7469822445], o._rotationMatrix[2] = [-0.867666149, -0.1980763734, 0.4559837762]);
              for (var g = new Array(3), Ee = 0; Ee < 3; Ee++)
                g[Ee] = y[0] * o._rotationMatrix[0][Ee] + y[1] * o._rotationMatrix[1][Ee] + y[2] * o._rotationMatrix[2][Ee];
              var Ve = Math.atan2(g[1], g[0]);
              Ve < 0 && (Ve = Ve + 2 * Math.PI), Ve > 2 * Math.PI && (Ve = Ve - 2 * Math.PI);
              var Me = Math.atan2(g[2], Math.sqrt(g[0] * g[0] + g[1] * g[1]));
              return [Ve / Math.PI * 180, Me / Math.PI * 180];
            };
            var c = {
              distance: function(_) {
                var u = this.get_lat(), y = this.get_lng() * Math.cos(u * o.RC), g = _.get_lat(), Ee = _.get_lng() * Math.cos(g * o.RC);
                return Math.sqrt((u - g) * (u - g) + (y - Ee) * (y - Ee));
              },
              distance3d: function(_) {
                var u = o.geoTo3dDouble(_.get_lat(), _.get_lng()), y = o.geoTo3dDouble(this.get_lat(), this.get_lng()), g = l.Vector3d.subtractVectors(u, y);
                return g.length() / o.RC;
              },
              angle: function(_) {
                var u = this.get_lat(), y = this.get_lng() * Math.cos(u * o.RC), g = _.get_lat(), Ee = _.get_lng() * Math.cos(g * o.RC);
                return Math.atan2(g - u, Ee - y);
              },
              get_RA: function() {
                return (this._ascention / Math.PI * 12 + 12) % 24;
              },
              set_RA: function(_) {
                return this._ascention = _ / 12 * Math.PI, _;
              },
              get_dec: function() {
                return this._declination / o.RC;
              },
              set_dec: function(_) {
                return this._declination = _ * o.RC, _;
              },
              get_lat: function() {
                return this._declination / o.RC;
              },
              set_lat: function(_) {
                return this._declination = _ * o.RC, _;
              },
              get_lng: function() {
                var _ = this._ascention / o.RC;
                return _ <= 180 ? _ : -180 + (180 - _);
              },
              set_lng: function(_) {
                return this._ascention = _ * o.RC + Math.PI * 2 % (Math.PI * 2), _;
              },
              get_alt: function() {
                return this._declination / o.RC;
              },
              set_alt: function(_) {
                return this._declination = _ * o.RC, _;
              },
              get_az: function() {
                return this._ascention / o.RC;
              },
              set_az: function(_) {
                return this._ascention = _ * o.RC, _;
              },
              toString: function() {
                return a.ss.format("Lat: {0}, Lng: {1}", this.get_lat(), this.get_lng());
              }
            };
            (0, s.registerType)("Coordinates", [o, c, null]);
          }
        ),
        /***/
        "./esm/data_globals.js": (
          /*!*****************************!*\
            !*** ./esm/data_globals.js ***!
            \*****************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              createPlace: () => (
                /* binding */
                _
              ),
              /* harmony export */
              freestandingMode: () => (
                /* binding */
                s
              ),
              /* harmony export */
              globalScriptInterface: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              globalWWTControl: () => (
                /* binding */
                y
              ),
              /* harmony export */
              layerManagerGetAllMaps: () => (
                /* binding */
                b
              ),
              /* harmony export */
              loadWtmlFile: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              makeNewFolder: () => (
                /* binding */
                o
              ),
              /* harmony export */
              makeNewHipsProperties: () => (
                /* binding */
                t
              ),
              /* harmony export */
              setManagerVisibleLayerList: () => (
                /* binding */
                Me
              ),
              /* harmony export */
              set_createPlace: () => (
                /* binding */
                u
              ),
              /* harmony export */
              set_freestandingMode: () => (
                /* binding */
                a
              ),
              /* harmony export */
              set_globalScriptInterface: () => (
                /* binding */
                Ve
              ),
              /* harmony export */
              set_globalWWTControl: () => (
                /* binding */
                g
              ),
              /* harmony export */
              set_layerManagerGetAllMaps: () => (
                /* binding */
                Le
              ),
              /* harmony export */
              set_loadWtmlFile: () => (
                /* binding */
                ze
              ),
              /* harmony export */
              set_makeNewFolder: () => (
                /* binding */
                c
              ),
              /* harmony export */
              set_makeNewHipsProperties: () => (
                /* binding */
                l
              ),
              /* harmony export */
              set_setManagerVisibleLayerList: () => (
                /* binding */
                B
              ),
              /* harmony export */
              set_tourDocumentFromUrlRaw: () => (
                /* binding */
                k
              ),
              /* harmony export */
              tourDocumentFromUrlRaw: () => (
                /* binding */
                Pe
              )
              /* harmony export */
            });
            var s = !1;
            function a(Se) {
              s = !!Se;
            }
            var t = null;
            function l(Se) {
              t = Se;
            }
            var o = null;
            function c(Se) {
              o = Se;
            }
            var _ = null;
            function u(Se) {
              _ = Se;
            }
            var y = null;
            function g(Se) {
              y = Se;
            }
            var Ee = null;
            function Ve(Se) {
              Ee = Se;
            }
            var Me = null;
            function B(Se) {
              Me = Se;
            }
            var Pe = null;
            function k(Se) {
              Pe = Se;
            }
            var b = null;
            function Le(Se) {
              b = Se;
            }
            var xe = null;
            function ze(Se) {
              xe = Se;
            }
          }
        ),
        /***/
        "./esm/double3d.js": (
          /*!*************************!*\
            !*** ./esm/double3d.js ***!
            \*************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ConvexHull: () => (
                /* binding */
                Ze
              ),
              /* harmony export */
              DoubleUtilities: () => (
                /* binding */
                Fe
              ),
              /* harmony export */
              LocationHint: () => (
                /* binding */
                u
              ),
              /* harmony export */
              Matrix2d: () => (
                /* binding */
                D
              ),
              /* harmony export */
              Matrix3d: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              PlaneD: () => (
                /* binding */
                He
              ),
              /* harmony export */
              PositionColored: () => (
                /* binding */
                Me
              ),
              /* harmony export */
              PositionColoredTextured: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              PositionNormalTextured: () => (
                /* binding */
                Ie
              ),
              /* harmony export */
              PositionNormalTexturedTangent: () => (
                /* binding */
                Pe
              ),
              /* harmony export */
              PositionNormalTexturedX2: () => (
                /* binding */
                De
              ),
              /* harmony export */
              PositionTexture: () => (
                /* binding */
                y
              ),
              /* harmony export */
              SphereHull: () => (
                /* binding */
                Ue
              ),
              /* harmony export */
              Vector2d: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              Vector3d: () => (
                /* binding */
                b
              ),
              /* harmony export */
              Vector4d: () => (
                /* binding */
                Ke
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./color.js */
              "./esm/color.js"
            ), l = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            );
            const o = 3.1415927 / 180;
            function c(Ae, Ne) {
              return b.create(
                Math.cos(Ne * o) * Math.cos(Ae * o) * 1,
                Math.sin(Ae * o) * 1,
                Math.sin(Ne * o) * Math.cos(Ae * o) * 1
              );
            }
            function _(Ae) {
              var Ne = Math.sqrt(Ae.x * Ae.x + Ae.y * Ae.y + Ae.z * Ae.z), Be = Math.atan2(Ae.z, Ae.x), Ge = Math.asin(Ae.y / Ne);
              Be = Be + Math.PI * 80 % (Math.PI * 2);
              var Ye = Be / o;
              Ye > 180 && (Ye = -180 + (180 - Ye));
              var je = Ge / o;
              return [je, Ye];
            }
            var u = {
              slash: 0,
              backslash: 1,
              top: 2
            };
            (0, s.registerType)("LocationHint", u);
            function y() {
              this.tu = 0, this.tv = 0, this.position = new b();
            }
            y.createPos = function(Ae, Ne, Be) {
              var Ge = new y();
              return Ge.tu = Ne * l.tileUvMultiple, Ge.tv = Be * l.tileUvMultiple, Ge.position = Ae, Ge;
            }, y.createPosRaw = function(Ae, Ne, Be) {
              var Ge = new y();
              return Ge.tu = Ne, Ge.tv = Be, Ge.position = Ae, Ge;
            }, y.createPosSize = function(Ae, Ne, Be, Ge, Ye) {
              var je = new y();
              return je.tu = Ne * Ge, je.tv = Be * Ye, je.position = Ae, je;
            }, y.create = function(Ae, Ne, Be, Ge, Ye) {
              var je = new y();
              return je.position = b.create(Ae, Ne, Be), je.tu = Ge * l.tileUvMultiple, je.tv = Ye * l.tileUvMultiple, je;
            };
            var g = {
              copy: function() {
                var Ae = new y();
                return Ae.position = b.makeCopy(this.position), Ae.tu = this.tu, Ae.tv = this.tv, Ae;
              },
              toString: function() {
                return a.ss.format("{0}, {1}, {2}, {3}, {4}", this.position.x, this.position.y, this.position.z, this.tu, this.tv);
              }
            };
            (0, s.registerType)("PositionTexture", [y, g, null]);
            function Ee() {
              this.tu = 0, this.tv = 0, this.color = new t.Color(), this.position = new b();
            }
            Ee.createPos = function(Ae, Ne, Be) {
              var Ge = new Ee();
              return Ge.tu = Ne * l.tileUvMultiple, Ge.tv = Be * l.tileUvMultiple, Ge.position = Ae, Ge;
            }, Ee.createPosRaw = function(Ae, Ne, Be) {
              var Ge = new Ee();
              return Ge.tu = Ne, Ge.tv = Be, Ge.position = Ae, Ge;
            }, Ee.createPosSize = function(Ae, Ne, Be, Ge, Ye) {
              var je = new Ee();
              return je.tu = Ne * Ge, je.tv = Be * Ye, je.position = Ae, je;
            }, Ee.create = function(Ae, Ne, Be, Ge, Ye) {
              var je = new y();
              return je.position = b.create(Ae, Ne, Be), je.tu = Ge * l.tileUvMultiple, je.tv = Ye * l.tileUvMultiple, je;
            };
            var Ve = {
              copy: function() {
                var Ae = new y();
                return Ae.position = b.makeCopy(this.position), Ae.tu = this.tu, Ae.tv = this.tv, Ae;
              },
              toString: function() {
                return a.ss.format("{0}, {1}, {2}, {3}, {4}", this.position.x, this.position.y, this.position.z, this.tu, this.tv);
              }
            };
            (0, s.registerType)("PositionColoredTextured", [Ee, Ve, null]);
            function Me(Ae, Ne) {
              this.color = new t.Color(), this.color = Ne._clone(), this.position = Ae.copy();
            }
            var B = {
              copy: function() {
                var Ae = new Me(this.position, this.color);
                return Ae;
              },
              toString: function() {
                return a.ss.format("{0}, {1}, {2}, {3}", this.position.x, this.position.y, this.position.z, this.color.toString());
              }
            };
            (0, s.registerType)("PositionColored", [Me, B, null]);
            function Pe(Ae, Ne, Be, Ge) {
              this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0, this.tanx = 0, this.tany = 0, this.tanz = 0, this.x = Ae.x, this.y = Ae.y, this.z = Ae.z, this.nx = Ne.x, this.ny = Ne.y, this.nz = Ne.z, this.tu = Be.x, this.tv = Be.y, this.tanx = Ge.x, this.tany = Ge.y, this.tanz = Ge.z;
            }
            var k = {
              get_normal: function() {
                return b.create(this.nx, this.ny, this.nz);
              },
              set_normal: function(Ae) {
                return this.nx = Ae.x, this.ny = Ae.y, this.nz = Ae.z, Ae;
              },
              get_position: function() {
                return b.create(this.x, this.y, this.z);
              },
              set_position: function(Ae) {
                return this.x = Ae.x, this.y = Ae.y, this.z = Ae.z, Ae;
              },
              get_texCoord: function() {
                return xe.create(this.tu, this.tv);
              },
              set_texCoord: function(Ae) {
                return this.tu = Ae.x, this.tv = Ae.y, Ae;
              },
              get_tangent: function() {
                return b.create(this.tanx, this.tany, this.tanz);
              },
              set_tangent: function(Ae) {
                return this.tanx = Ae.x, this.tany = Ae.y, this.tanz = Ae.z, Ae;
              },
              toString: function() {
                return a.ss.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, TanX={8}, TanY={9}, TanZ={10}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv, this.tanx, this.tany, this.tanz);
              }
            };
            (0, s.registerType)("PositionNormalTexturedTangent", [Pe, k, null]);
            function b() {
              this.x = 0, this.y = 0, this.z = 0;
            }
            b.create = function(Ae, Ne, Be) {
              var Ge = new b();
              return Ge.x = Ae, Ge.y = Ne, Ge.z = Be, Ge;
            }, b.makeCopy = function(Ae) {
              var Ne = new b();
              return Ne.x = Ae.x, Ne.y = Ae.y, Ne.z = Ae.z, Ne;
            }, b.negate = function(Ae) {
              return b.create(-Ae.x, -Ae.y, -Ae.z);
            }, b.midPoint = function(Ae, Ne) {
              var Be = b.create((Ae.x + Ne.x) / 2, (Ae.y + Ne.y) / 2, (Ae.z + Ne.z) / 2);
              return Be;
            }, b.midPointByLength = function(Ae, Ne) {
              var Be = b.create((Ae.x + Ne.x) / 2, (Ae.y + Ne.y) / 2, (Ae.z + Ne.z) / 2);
              return Be.normalize(), Be.multiply(Ae.length()), Be;
            }, b.get_empty = function() {
              return b.create(0, 0, 0);
            }, b.addVectors = function(Ae, Ne) {
              return b.create(Ae.x + Ne.x, Ae.y + Ne.y, Ae.z + Ne.z);
            }, b.cross = function(Ae, Ne) {
              return b.create(Ae.y * Ne.z - Ae.z * Ne.y, Ae.z * Ne.x - Ae.x * Ne.z, Ae.x * Ne.y - Ae.y * Ne.x);
            }, b.dot = function(Ae, Ne) {
              return Ae.x * Ne.x + Ae.y * Ne.y + Ae.z * Ne.z;
            }, b.getLength = function(Ae) {
              return Math.sqrt(Ae.x * Ae.x + Ae.y * Ae.y + Ae.z * Ae.z);
            }, b.getLengthSq = function(Ae) {
              return Ae.x * Ae.x + Ae.y * Ae.y + Ae.z * Ae.z;
            }, b.lerp = function(Ae, Ne, Be) {
              return b.create(Ae.x * (1 - Be) + Ne.x * Be, Ae.y * (1 - Be) + Ne.y * Be, Ae.z * (1 - Be) + Ne.z * Be);
            }, b.midpoint = function(Ae, Ne) {
              var Be = b.create(Ae.x * 0.5 + Ne.x * 0.5, Ae.y * 0.5 + Ne.y * 0.5, Ae.z * 0.5 + Ne.z * 0.5);
              return Be.normalize(), Be;
            }, b.slerp = function(Ae, Ne, Be) {
              for (var Ge = b.dot(Ae, Ne); Ge < 0.98; ) {
                var Ye = b.midpoint(Ae, Ne);
                Be > 0.5 ? (Ae = Ye, Be -= 0.5, Be *= 2) : (Ne = Ye, Be *= 2), Ge = b.dot(Ae, Ne);
              }
              var je = b.lerp(Ae, Ne, Be);
              return je.normalize(), je;
            }, b.multiplyScalar = function(Ae, Ne) {
              var Be = Ae.copy();
              return Be.multiply(Ne), Be;
            }, b.scale = function(Ae, Ne) {
              var Be = Ae;
              return Be.multiply(Ne), Be;
            }, b.subtractVectors = function(Ae, Ne) {
              var Be = Ae.copy();
              return Be.subtract(Ne), Be;
            }, b.parse = function(Ae) {
              var Ne = new b(), Be = Ae.split(",");
              return Be.length === 3 && (Ne.x = parseFloat(Be[0]), Ne.y = parseFloat(Be[1]), Ne.z = parseFloat(Be[2])), Ne;
            }, b._transformCoordinate = function(Ae, Ne) {
              return Ne.transform(Ae);
            };
            var Le = {
              set: function(Ae, Ne, Be) {
                this.x = Ae, this.y = Ne, this.z = Be;
              },
              copy: function() {
                var Ae = new b();
                return Ae.x = this.x, Ae.y = this.y, Ae.z = this.z, Ae;
              },
              round: function() {
                this.x = a.ss.truncate(this.x * 65536) / 65536, this.y = a.ss.truncate(this.y * 65536) / 65536, this.z = a.ss.truncate(this.z * 65536) / 65536;
              },
              add: function(Ae) {
                this.x += Ae.x, this.y += Ae.y, this.z += Ae.z;
              },
              length: function() {
                return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
              },
              lengthSq: function() {
                return this.x * this.x + this.y * this.y + this.z * this.z;
              },
              multiply: function(Ae) {
                this.x *= Ae, this.y *= Ae, this.z *= Ae;
              },
              normalize: function() {
                var Ae = this.length();
                Ae && (this.x /= Ae, this.y /= Ae, this.z /= Ae);
              },
              rotateX: function(Ae) {
                var Ne, Be;
                Be = this.y * Math.cos(Ae) - this.z * Math.sin(Ae), Ne = this.y * Math.sin(Ae) + this.z * Math.cos(Ae), this.z = Ne, this.y = Be;
              },
              rotateZ: function(Ae) {
                var Ne, Be;
                Ne = this.x * Math.cos(Ae) - this.y * Math.sin(Ae), Be = this.x * Math.sin(Ae) + this.y * Math.cos(Ae), this.y = Be, this.x = Ne;
              },
              rotateY: function(Ae) {
                var Ne, Be;
                Ne = this.z * Math.cos(Ae) - this.x * Math.sin(Ae), Be = this.z * Math.sin(Ae) + this.x * Math.cos(Ae), this.x = Be, this.z = Ne;
              },
              subtract: function(Ae) {
                return this.x -= Ae.x, this.y -= Ae.y, this.z -= Ae.z, this;
              },
              toString: function() {
                return a.ss.format("{0}, {1}, {2}", this.x, this.y, this.z);
              },
              toSpherical: function() {
                var Ae, Ne, Be = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z), Ge = Math.sqrt(this.x * this.x + this.z * this.z);
                return Ne = Math.asin(this.y / Be), Ge ? 0 <= this.x ? Ae = Math.asin(this.z / Ge) : Ae = Math.PI - Math.asin(this.z / Ge) : Ae = 0, xe.create((Ae + Math.PI) % (2 * Math.PI), Ne + Math.PI / 2);
              },
              toRaDec: function() {
                var Ae = this.toSpherical();
                return Ae.x = Ae.x / Math.PI * 12, Ae.y = Ae.y / Math.PI * 180 - 90, Ae;
              },
              distanceToLine: function(Ae, Ne) {
                var Be = b.subtractVectors(Ne, Ae), Ge = b.subtractVectors(Ae, this), Ye = b.cross(Be, Ge), je = Ye.length(), ht = b.subtractVectors(Ne, Ae), qe = ht.length();
                return je / qe;
              },
              _transformByMatrics: function(Ae) {
                var Ne = Ae.transform(this);
                this.x = Ne.x, this.y = Ne.y, this.z = Ne.z;
              }
            };
            (0, s.registerType)("Vector3d", [b, Le, null]), b.zero = new b();
            function xe() {
              this.x = 0, this.y = 0;
            }
            xe.lerp = function(Ae, Ne, Be) {
              return xe.create(Ae.x * (1 - Be) + Ne.x * Be, Ae.y * (1 - Be) + Ne.y * Be);
            }, xe.cartesianToSpherical2 = function(Ae) {
              var Ne = Math.sqrt(Ae.x * Ae.x + Ae.y * Ae.y + Ae.z * Ae.z), Be = Math.atan2(Ae.z, Ae.x), Ge = Math.asin(Ae.y / Ne);
              return xe.create(Be / Math.PI * 180, Ge / Math.PI * 180);
            }, xe.average3d = function(Ae, Ne) {
              var Be = c(Ae.y, Ae.x), Ge = c(Ne.y, Ne.x), Ye = b.addVectors(Be, Ge);
              return Ye.multiply(0.5), Ye.normalize(), xe.cartesianToSpherical2(Ye);
            }, xe.create = function(Ae, Ne) {
              var Be = new xe();
              return Be.x = Ae, Be.y = Ne, Be;
            }, xe.subtract = function(Ae, Ne) {
              return xe.create(Ae.x - Ne.x, Ae.y - Ne.y);
            };
            var ze = {
              distance3d: function(Ae) {
                var Ne = c(Ae.y, Ae.x), Be = c(this.y, this.x), Ge = b.subtractVectors(Ne, Be);
                return Ge.length() / Math.PI * 180;
              },
              get_length: function() {
                return Math.sqrt(this.x * this.x + this.y * this.y);
              },
              normalize: function() {
                var Ae = this.get_length();
                Ae && (this.x /= Ae, this.y /= Ae);
              },
              extend: function(Ae) {
                this.x = this.x * Ae, this.y = this.y * Ae;
              }
            };
            (0, s.registerType)("Vector2d", [xe, ze, null]);
            function Se() {
              this._m11 = 0, this._m12 = 0, this._m13 = 0, this._m14 = 0, this._m21 = 0, this._m22 = 0, this._m23 = 0, this._m24 = 0, this._m31 = 0, this._m32 = 0, this._m33 = 0, this._m34 = 0, this._offsetX = 0, this._offsetY = 0, this._offsetZ = 0, this._m44 = 0, this._isNotKnownToBeIdentity = !1;
            }
            Se.create = function(Ae, Ne, Be, Ge, Ye, je, ht, qe, lt, ft, _t, St, yt, Ct, Lt, Vt) {
              var Tt = new Se();
              return Tt._m11 = Ae, Tt._m12 = Ne, Tt._m13 = Be, Tt._m14 = Ge, Tt._m21 = Ye, Tt._m22 = je, Tt._m23 = ht, Tt._m24 = qe, Tt._m31 = lt, Tt._m32 = ft, Tt._m33 = _t, Tt._m34 = St, Tt._offsetX = yt, Tt._offsetY = Ct, Tt._offsetZ = Lt, Tt._m44 = Vt, Tt._isNotKnownToBeIdentity = !0, Tt;
            }, Se.get_identity = function() {
              var Ae = new Se();
              return Ae.set(Se._s_identity), Ae;
            }, Se.multiplyMatrix = function(Ae, Ne) {
              return Ae.get__isDistinguishedIdentity() ? Ne : Ne.get__isDistinguishedIdentity() ? Ae : Se.create(Ae._m11 * Ne._m11 + Ae._m12 * Ne._m21 + Ae._m13 * Ne._m31 + Ae._m14 * Ne._offsetX, Ae._m11 * Ne._m12 + Ae._m12 * Ne._m22 + Ae._m13 * Ne._m32 + Ae._m14 * Ne._offsetY, Ae._m11 * Ne._m13 + Ae._m12 * Ne._m23 + Ae._m13 * Ne._m33 + Ae._m14 * Ne._offsetZ, Ae._m11 * Ne._m14 + Ae._m12 * Ne._m24 + Ae._m13 * Ne._m34 + Ae._m14 * Ne._m44, Ae._m21 * Ne._m11 + Ae._m22 * Ne._m21 + Ae._m23 * Ne._m31 + Ae._m24 * Ne._offsetX, Ae._m21 * Ne._m12 + Ae._m22 * Ne._m22 + Ae._m23 * Ne._m32 + Ae._m24 * Ne._offsetY, Ae._m21 * Ne._m13 + Ae._m22 * Ne._m23 + Ae._m23 * Ne._m33 + Ae._m24 * Ne._offsetZ, Ae._m21 * Ne._m14 + Ae._m22 * Ne._m24 + Ae._m23 * Ne._m34 + Ae._m24 * Ne._m44, Ae._m31 * Ne._m11 + Ae._m32 * Ne._m21 + Ae._m33 * Ne._m31 + Ae._m34 * Ne._offsetX, Ae._m31 * Ne._m12 + Ae._m32 * Ne._m22 + Ae._m33 * Ne._m32 + Ae._m34 * Ne._offsetY, Ae._m31 * Ne._m13 + Ae._m32 * Ne._m23 + Ae._m33 * Ne._m33 + Ae._m34 * Ne._offsetZ, Ae._m31 * Ne._m14 + Ae._m32 * Ne._m24 + Ae._m33 * Ne._m34 + Ae._m34 * Ne._m44, Ae._offsetX * Ne._m11 + Ae._offsetY * Ne._m21 + Ae._offsetZ * Ne._m31 + Ae._m44 * Ne._offsetX, Ae._offsetX * Ne._m12 + Ae._offsetY * Ne._m22 + Ae._offsetZ * Ne._m32 + Ae._m44 * Ne._offsetY, Ae._offsetX * Ne._m13 + Ae._offsetY * Ne._m23 + Ae._offsetZ * Ne._m33 + Ae._m44 * Ne._offsetZ, Ae._offsetX * Ne._m14 + Ae._offsetY * Ne._m24 + Ae._offsetZ * Ne._m34 + Ae._m44 * Ne._m44);
            }, Se.lookAtLH = function(Ae, Ne, Be) {
              var Ge = b.subtractVectors(Ne, Ae);
              Ge.normalize();
              var Ye = b.cross(Be, Ge);
              Ye.normalize();
              var je = b.cross(Ge, Ye), ht = Se.create(Ye.x, je.x, Ge.x, 0, Ye.y, je.y, Ge.y, 0, Ye.z, je.z, Ge.z, 0, -b.dot(Ye, Ae), -b.dot(je, Ae), -b.dot(Ge, Ae), 1);
              return ht;
            }, Se._createIdentity = function() {
              var Ae = Se.create(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
              return Ae.set__isDistinguishedIdentity(!0), Ae;
            }, Se.equals = function(Ae, Ne) {
              return Ae.get__isDistinguishedIdentity() || Ne.get__isDistinguishedIdentity() ? Ae.get_isIdentity() === Ne.get_isIdentity() : Ae.get_m11() === Ne.get_m11() && Ae.get_m12() === Ne.get_m12() && Ae.get_m13() === Ne.get_m13() && Ae.get_m14() === Ne.get_m14() && Ae.get_m21() === Ne.get_m21() && Ae.get_m22() === Ne.get_m22() && Ae.get_m23() === Ne.get_m23() && Ae.get_m24() === Ne.get_m24() && Ae.get_m31() === Ne.get_m31() && Ae.get_m32() === Ne.get_m32() && Ae.get_m33() === Ne.get_m33() && Ae.get_m34() === Ne.get_m34() && Ae.get_offsetX() === Ne.get_offsetX() && Ae.get_offsetY() === Ne.get_offsetY() && Ae.get_offsetZ() === Ne.get_offsetZ() ? Ae.get_m44() === Ne.get_m44() : !1;
            }, Se.fromMatrix2d = function(Ae) {
              var Ne = Se._createIdentity();
              return Ne.set_m11(Ae.m11), Ne.set_m12(Ae.m12), Ne.set_m13(Ae.m13), Ne.set_m21(Ae.m21), Ne.set_m22(Ae.m22), Ne.set_m23(Ae.m23), Ne.set_m31(Ae.m31), Ne.set_m32(Ae.m32), Ne.set_m33(Ae.m33), Ne._isNotKnownToBeIdentity = !0, Ne;
            }, Se.rotationYawPitchRoll = function(Ae, Ne, Be) {
              var Ge = Se._rotationX(Ne), Ye = Se._rotationY(Ae), je = Se._rotationZ(Be);
              return Se.multiplyMatrix(Se.multiplyMatrix(Ye, Ge), je);
            }, Se._rotationY = function(Ae) {
              var Ne = Ae, Be = Se.get_identity();
              return Be._m11 = Math.cos(Ne), Be._m22 = 1, Be._m31 = Math.sin(Ne), Be._m13 = -Math.sin(Ne), Be._m33 = Math.cos(Ne), Be._isNotKnownToBeIdentity = !0, Be;
            }, Se._rotationX = function(Ae) {
              var Ne = Ae, Be = Se.get_identity();
              return Be._m11 = 1, Be._m22 = Math.cos(Ne), Be._m32 = -Math.sin(Ne), Be._m23 = Math.sin(Ne), Be._m33 = Math.cos(Ne), Be._isNotKnownToBeIdentity = !0, Be;
            }, Se._rotationZ = function(Ae) {
              var Ne = Ae, Be = Se.get_identity();
              return Be._m11 = Math.cos(Ne), Be._m21 = -Math.sin(Ne), Be._m12 = Math.sin(Ne), Be._m22 = Math.cos(Ne), Be._m33 = 1, Be._isNotKnownToBeIdentity = !0, Be;
            }, Se._scaling = function(Ae, Ne, Be) {
              var Ge = Se.get_identity();
              return Ge._m11 = Ae, Ge._m22 = Ne, Ge._m33 = Be, Ge._isNotKnownToBeIdentity = !0, Ge;
            }, Se._translationXYZ = function(Ae, Ne, Be) {
              var Ge = Se.get_identity();
              return Ge.set_offsetX(Ae), Ge.set_offsetY(Ne), Ge.set_offsetZ(Be), Ge._isNotKnownToBeIdentity = !0, Ge;
            }, Se.perspectiveFovLH = function(Ae, Ne, Be, Ge) {
              var Ye = 1 / Math.tan(Ae / 2), je = Ye / Ne;
              return Se.create(je, 0, 0, 0, 0, Ye, 0, 0, 0, 0, Ge / (Ge - Be), 1, 0, 0, -Be * Ge / (Ge - Be), 0);
            }, Se.perspectiveOffCenterLH = function(Ae, Ne, Be, Ge, Ye, je) {
              return Se.create(2 * Ye / (Ne - Ae), 0, 0, 0, 0, 2 * Ye / (Ge - Be), 0, 0, (Ae + Ne) / (Ae - Ne), (Ge + Be) / (Be - Ge), je / (je - Ye), 1, 0, 0, Ye * je / (Ye - je), 0);
            }, Se.invertMatrix = function(Ae) {
              var Ne = Ae.clone();
              return Ne.invert(), Ne;
            }, Se.translation = function(Ae) {
              return Se._translationXYZ(Ae.x, Ae.y, Ae.z);
            }, Se.getMapMatrix = function(Ae, Ne, Be, Ge) {
              var Ye = 0, je = 0;
              Ye = -((Ae.get_lng() + 180 - Ne / 2) / 360), je = -(1 - (Ae.get_lat() + 90 + Be / 2) / 180);
              var ht = new D(), qe = 0, lt = 0;
              return qe = 360 / Ne, lt = 180 / Be, ht = D.multiply(ht, D.translation(Ye, je)), ht = D.multiply(ht, D.scaling(qe, lt)), Ge && (ht = D.multiply(ht, D.translation(-0.5, -0.5)), ht = D.multiply(ht, D.rotation(Ge)), ht = D.multiply(ht, D.translation(0.5, 0.5))), Se.fromMatrix2d(ht);
            };
            var Te = {
              clone: function() {
                var Ae = new Se();
                return Ae.set(this), Ae;
              },
              setIdentity: function() {
                this.set(Se._s_identity);
              },
              set: function(Ae) {
                this._m11 = Ae._m11, this._m12 = Ae._m12, this._m13 = Ae._m13, this._m14 = Ae._m14, this._m21 = Ae._m21, this._m22 = Ae._m22, this._m23 = Ae._m23, this._m24 = Ae._m24, this._m31 = Ae._m31, this._m32 = Ae._m32, this._m33 = Ae._m33, this._m34 = Ae._m34, this._offsetX = Ae._offsetX, this._offsetY = Ae._offsetY, this._offsetZ = Ae._offsetZ, this._m44 = Ae._m44, this._isNotKnownToBeIdentity = !0;
              },
              floatArray: function() {
                var Ae = new Array(16);
                return Ae[0] = this._m11, Ae[1] = this._m12, Ae[2] = this._m13, Ae[3] = this._m14, Ae[4] = this._m21, Ae[5] = this._m22, Ae[6] = this._m23, Ae[7] = this._m24, Ae[8] = this._m31, Ae[9] = this._m32, Ae[10] = this._m33, Ae[11] = this._m34, Ae[12] = this._offsetX, Ae[13] = this._offsetY, Ae[14] = this._offsetZ, Ae[15] = this._m44, Ae;
              },
              get_isIdentity: function() {
                return this.get__isDistinguishedIdentity() ? !0 : this._m11 === 1 && !this._m12 && !this._m13 && !this._m14 && !this._m21 && this._m22 === 1 && !this._m23 && !this._m24 && !this._m31 && !this._m32 && this._m33 === 1 && !this._m34 && !this._offsetX && !this._offsetY && !this._offsetZ && this._m44 === 1 ? (this.set__isDistinguishedIdentity(!0), !0) : !1;
              },
              prepend: function(Ae) {
                this.set(Se.multiplyMatrix(Ae, this));
              },
              append: function(Ae) {
                this._multiply(Ae);
              },
              scale: function(Ae) {
                this.get__isDistinguishedIdentity() ? this._setScaleMatrix(Ae) : (this._m11 *= Ae.x, this._m12 *= Ae.y, this._m13 *= Ae.z, this._m21 *= Ae.x, this._m22 *= Ae.y, this._m23 *= Ae.z, this._m31 *= Ae.x, this._m32 *= Ae.y, this._m33 *= Ae.z, this._offsetX *= Ae.x, this._offsetY *= Ae.y, this._offsetZ *= Ae.z);
              },
              scalePrepend: function(Ae) {
                this.get__isDistinguishedIdentity() ? this._setScaleMatrix(Ae) : (this._m11 *= Ae.x, this._m12 *= Ae.x, this._m13 *= Ae.x, this._m14 *= Ae.x, this._m21 *= Ae.y, this._m22 *= Ae.y, this._m23 *= Ae.y, this._m24 *= Ae.y, this._m31 *= Ae.z, this._m32 *= Ae.z, this._m33 *= Ae.z, this._m34 *= Ae.z);
              },
              scaleAt: function(Ae, Ne) {
                if (this.get__isDistinguishedIdentity())
                  this._setScaleMatrixCenter(Ae, Ne);
                else {
                  var Be = this._m14 * Ne.x;
                  this._m11 = Be + Ae.x * (this._m11 - Be), Be = this._m14 * Ne.y, this._m12 = Be + Ae.y * (this._m12 - Be), Be = this._m14 * Ne.z, this._m13 = Be + Ae.z * (this._m13 - Be), Be = this._m24 * Ne.x, this._m21 = Be + Ae.x * (this._m21 - Be), Be = this._m24 * Ne.y, this._m22 = Be + Ae.y * (this._m22 - Be), Be = this._m24 * Ne.z, this._m23 = Be + Ae.z * (this._m23 - Be), Be = this._m34 * Ne.x, this._m31 = Be + Ae.x * (this._m31 - Be), Be = this._m34 * Ne.y, this._m32 = Be + Ae.y * (this._m32 - Be), Be = this._m34 * Ne.z, this._m33 = Be + Ae.z * (this._m33 - Be), Be = this._m44 * Ne.x, this._offsetX = Be + Ae.x * (this._offsetX - Be), Be = this._m44 * Ne.y, this._offsetY = Be + Ae.y * (this._offsetY - Be), Be = this._m44 * Ne.z, this._offsetZ = Be + Ae.z * (this._offsetZ - Be);
                }
              },
              scaleAtPrepend: function(Ae, Ne) {
                if (this.get__isDistinguishedIdentity())
                  this._setScaleMatrixCenter(Ae, Ne);
                else {
                  var Be = Ne.x - Ne.x * Ae.x, Ge = Ne.y - Ne.y * Ae.y, Ye = Ne.z - Ne.z * Ae.z;
                  this._offsetX += this._m11 * Be + this._m21 * Ge + this._m31 * Ye, this._offsetY += this._m12 * Be + this._m22 * Ge + this._m32 * Ye, this._offsetZ += this._m13 * Be + this._m23 * Ge + this._m33 * Ye, this._m44 += this._m14 * Be + this._m24 * Ge + this._m34 * Ye, this._m11 *= Ae.x, this._m12 *= Ae.x, this._m13 *= Ae.x, this._m14 *= Ae.x, this._m21 *= Ae.y, this._m22 *= Ae.y, this._m23 *= Ae.y, this._m24 *= Ae.y, this._m31 *= Ae.z, this._m32 *= Ae.z, this._m33 *= Ae.z, this._m34 *= Ae.z;
                }
              },
              translate: function(Ae) {
                this.get__isDistinguishedIdentity() ? this._setTranslationMatrix(Ae) : (this._m11 += this._m14 * Ae.x, this._m12 += this._m14 * Ae.y, this._m13 += this._m14 * Ae.z, this._m21 += this._m24 * Ae.x, this._m22 += this._m24 * Ae.y, this._m23 += this._m24 * Ae.z, this._m31 += this._m34 * Ae.x, this._m32 += this._m34 * Ae.y, this._m33 += this._m34 * Ae.z, this._offsetX += this._m44 * Ae.x, this._offsetY += this._m44 * Ae.y, this._offsetZ += this._m44 * Ae.z);
              },
              translatePrepend: function(Ae) {
                this.get__isDistinguishedIdentity() ? this._setTranslationMatrix(Ae) : (this._offsetX += this._m11 * Ae.x + this._m21 * Ae.y + this._m31 * Ae.z, this._offsetY += this._m12 * Ae.x + this._m22 * Ae.y + this._m32 * Ae.z, this._offsetZ += this._m13 * Ae.x + this._m23 * Ae.y + this._m33 * Ae.z, this._m44 += this._m14 * Ae.x + this._m24 * Ae.y + this._m34 * Ae.z);
              },
              transform: function(Ae) {
                var Ne = new b();
                if (!this.get__isDistinguishedIdentity()) {
                  var Be = Ae.x, Ge = Ae.y, Ye = Ae.z;
                  if (Ne.x = Be * this._m11 + Ge * this._m21 + Ye * this._m31 + this._offsetX, Ne.y = Be * this._m12 + Ge * this._m22 + Ye * this._m32 + this._offsetY, Ne.z = Be * this._m13 + Ge * this._m23 + Ye * this._m33 + this._offsetZ, !this.get_isAffine()) {
                    var je = Be * this._m14 + Ge * this._m24 + Ye * this._m34 + this._m44;
                    Ne.x /= je, Ne.y /= je, Ne.z /= je;
                  }
                }
                return Ne;
              },
              _transformTo: function(Ae, Ne) {
                Ne.x = Ae.x * this._m11 + Ae.y * this._m21 + Ae.z * this._m31 + this._offsetX, Ne.y = Ae.x * this._m12 + Ae.y * this._m22 + Ae.z * this._m32 + this._offsetY, Ne.z = Ae.x * this._m13 + Ae.y * this._m23 + Ae.z * this._m33 + this._offsetZ;
                var Be = Ae.x * this._m14 + Ae.y * this._m24 + Ae.z * this._m34 + this._m44;
                Ne.x /= Be, Ne.y /= Be, Ne.z /= Be;
              },
              transformArray: function(Ae) {
                if (Ae != null)
                  for (var Ne = 0; Ne < Ae.length; Ne++)
                    this._multiplyPoint(Ae[Ne]);
              },
              projectArrayToScreen: function(Ae, Ne) {
                if (Ae != null && Ne != null)
                  for (var Be = this.get_isAffine(), Ge = 0; Ge < Ae.length; Ge++) {
                    var Ye = Ae[Ge].x, je = Ae[Ge].y, ht = Ae[Ge].z;
                    if (Be)
                      Ne[Ge].x = Ye * this._m11 + je * this._m21 + ht * this._m31 + this._offsetX, Ne[Ge].y = Ye * this._m12 + je * this._m22 + ht * this._m32 + this._offsetY, Ne[Ge].z = Ye * this._m13 + je * this._m23 + ht * this._m33 + this._offsetZ;
                    else {
                      var qe = Ye * this._m14 + je * this._m24 + ht * this._m34 + this._m44;
                      Ne[Ge].x = (Ye * this._m11 + je * this._m21 + ht * this._m31 + this._offsetX) / qe, Ne[Ge].y = (Ye * this._m12 + je * this._m22 + ht * this._m32 + this._offsetY) / qe, Ne[Ge].z = (Ye * this._m13 + je * this._m23 + ht * this._m33 + this._offsetZ) / qe;
                    }
                  }
              },
              projectToScreen: function(Ae, Ne, Be) {
                var Ge = new b(), Ye = Ae.x, je = Ae.y, ht = Ae.z;
                if (this.get_isAffine())
                  Ge.x = (Ye * this._m11 + je * this._m21 + ht * this._m31 + this._offsetX + 0.5) * Ne, Ge.y = (-(Ye * this._m12 + je * this._m22 + ht * this._m32 + this._offsetY) + 0.5) * Be, Ge.z = Ye * this._m13 + je * this._m23 + ht * this._m33 + this._offsetZ;
                else {
                  var qe = Ye * this._m14 + je * this._m24 + ht * this._m34 + this._m44;
                  Ge.x = ((Ye * this._m11 + je * this._m21 + ht * this._m31 + this._offsetX) / qe + 0.5) * Ne, Ge.y = (-((Ye * this._m12 + je * this._m22 + ht * this._m32 + this._offsetY) / qe) + 0.5) * Be, Ge.z = (Ye * this._m13 + je * this._m23 + ht * this._m33 + this._offsetZ) / qe;
                }
                return Ge;
              },
              get_isAffine: function() {
                return this.get__isDistinguishedIdentity() ? !0 : !this._m14 && !this._m24 && !this._m34 ? this._m44 === 1 : !1;
              },
              get_determinant: function() {
                if (this.get__isDistinguishedIdentity())
                  return 1;
                if (this.get_isAffine())
                  return this._getNormalizedAffineDeterminant();
                var Ae = this._m13 * this._m24 - this._m23 * this._m14, Ne = this._m13 * this._m34 - this._m33 * this._m14, Be = this._m13 * this._m44 - this._offsetZ * this._m14, Ge = this._m23 * this._m34 - this._m33 * this._m24, Ye = this._m23 * this._m44 - this._offsetZ * this._m24, je = this._m33 * this._m44 - this._offsetZ * this._m34, ht = this._m22 * Ne - this._m32 * Ae - this._m12 * Ge, qe = this._m12 * Ye - this._m22 * Be + this._offsetY * Ae, lt = this._m32 * Be - this._offsetY * Ne - this._m12 * je, ft = this._m22 * je - this._m32 * Ye + this._offsetY * Ge;
                return this._offsetX * ht + this._m31 * qe + this._m21 * lt + this._m11 * ft;
              },
              get_hasInverse: function() {
                return !Fe.isZero(this.get_determinant());
              },
              invert: function() {
                this._invertCore();
              },
              transpose: function() {
                var Ae = new Se();
                Ae.set(this), this._m12 = Ae._m21, this._m13 = Ae._m31, this._m14 = Ae._offsetX, this._m23 = Ae._m32, this._m24 = Ae._offsetY, this._m34 = Ae._offsetZ, this._m21 = Ae._m12, this._m31 = Ae._m13, this._offsetX = Ae._m14, this._m32 = Ae._m23, this._offsetY = Ae._m24, this._offsetZ = Ae._m34;
              },
              get_m11: function() {
                return this.get__isDistinguishedIdentity() ? 1 : this._m11;
              },
              set_m11: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m11 = Ae, Ae;
              },
              get_m12: function() {
                return this._m12;
              },
              set_m12: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m12 = Ae, Ae;
              },
              get_m13: function() {
                return this._m13;
              },
              set_m13: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m13 = Ae, Ae;
              },
              get_m14: function() {
                return this._m14;
              },
              set_m14: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m14 = Ae, Ae;
              },
              get_m21: function() {
                return this._m21;
              },
              set_m21: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m21 = Ae, Ae;
              },
              get_m22: function() {
                return this.get__isDistinguishedIdentity() ? 1 : this._m22;
              },
              set_m22: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m22 = Ae, Ae;
              },
              get_m23: function() {
                return this._m23;
              },
              set_m23: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m23 = Ae, Ae;
              },
              get_m24: function() {
                return this._m24;
              },
              set_m24: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m24 = Ae, Ae;
              },
              get_m31: function() {
                return this._m31;
              },
              set_m31: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m31 = Ae, Ae;
              },
              get_m32: function() {
                return this._m32;
              },
              set_m32: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m32 = Ae, Ae;
              },
              get_m33: function() {
                return this.get__isDistinguishedIdentity() ? 1 : this._m33;
              },
              set_m33: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m33 = Ae, Ae;
              },
              get_m34: function() {
                return this._m34;
              },
              set_m34: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m34 = Ae, Ae;
              },
              get_m41: function() {
                return this.get_offsetX();
              },
              set_m41: function(Ae) {
                return this.set_offsetX(Ae), Ae;
              },
              get_m42: function() {
                return this.get_offsetY();
              },
              set_m42: function(Ae) {
                return this.set_offsetY(Ae), Ae;
              },
              get_m43: function() {
                return this.get_offsetZ();
              },
              set_m43: function(Ae) {
                return this.set_offsetZ(Ae), Ae;
              },
              get_offsetX: function() {
                return this._offsetX;
              },
              set_offsetX: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetX = Ae, Ae;
              },
              get_offsetY: function() {
                return this._offsetY;
              },
              set_offsetY: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetY = Ae, Ae;
              },
              get_offsetZ: function() {
                return this._offsetZ;
              },
              set_offsetZ: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetZ = Ae, Ae;
              },
              get_m44: function() {
                return this.get__isDistinguishedIdentity() ? 1 : this._m44;
              },
              set_m44: function(Ae) {
                return this.get__isDistinguishedIdentity() && (this.set(Se._s_identity), this.set__isDistinguishedIdentity(!1)), this._m44 = Ae, Ae;
              },
              _setScaleMatrix: function(Ae) {
                this._m11 = Ae.x, this._m22 = Ae.y, this._m33 = Ae.z, this._m44 = 1, this.set__isDistinguishedIdentity(!1);
              },
              _setScaleMatrixCenter: function(Ae, Ne) {
                this._m11 = Ae.x, this._m22 = Ae.y, this._m33 = Ae.z, this._m44 = 1, this._offsetX = Ne.x - Ne.x * Ae.x, this._offsetY = Ne.y - Ne.y * Ae.y, this._offsetZ = Ne.z - Ne.z * Ae.z, this.set__isDistinguishedIdentity(!1);
              },
              _setTranslationMatrix: function(Ae) {
                this._m11 = this._m22 = this._m33 = this._m44 = 1, this._offsetX = Ae.x, this._offsetY = Ae.y, this._offsetZ = Ae.z, this.set__isDistinguishedIdentity(!1);
              },
              _multiplyPoint: function(Ae) {
                if (!this.get__isDistinguishedIdentity()) {
                  var Ne = Ae.x, Be = Ae.y, Ge = Ae.z;
                  if (Ae.x = Ne * this._m11 + Be * this._m21 + Ge * this._m31 + this._offsetX, Ae.y = Ne * this._m12 + Be * this._m22 + Ge * this._m32 + this._offsetY, Ae.z = Ne * this._m13 + Be * this._m23 + Ge * this._m33 + this._offsetZ, !this.get_isAffine()) {
                    var Ye = Ne * this._m14 + Be * this._m24 + Ge * this._m34 + this._m44;
                    Ae.x /= Ye, Ae.y /= Ye, Ae.z /= Ye;
                  }
                }
              },
              multiplyVector: function(Ae) {
                if (!this.get__isDistinguishedIdentity()) {
                  var Ne = Ae.x, Be = Ae.y, Ge = Ae.z;
                  Ae.x = Ne * this._m11 + Be * this._m21 + Ge * this._m31, Ae.y = Ne * this._m12 + Be * this._m22 + Ge * this._m32, Ae.z = Ne * this._m13 + Be * this._m23 + Ge * this._m33;
                }
              },
              _getNormalizedAffineDeterminant: function() {
                var Ae = this._m12 * this._m23 - this._m22 * this._m13, Ne = this._m32 * this._m13 - this._m12 * this._m33, Be = this._m22 * this._m33 - this._m32 * this._m23;
                return this._m31 * Ae + this._m21 * Ne + this._m11 * Be;
              },
              _normalizedAffineInvert: function() {
                var Ae = this._m12 * this._m23 - this._m22 * this._m13, Ne = this._m32 * this._m13 - this._m12 * this._m33, Be = this._m22 * this._m33 - this._m32 * this._m23, Ge = this._m31 * Ae + this._m21 * Ne + this._m11 * Be;
                if (Fe.isZero(Ge))
                  return !1;
                var Ye = this._m21 * this._m13 - this._m11 * this._m23, je = this._m11 * this._m33 - this._m31 * this._m13, ht = this._m31 * this._m23 - this._m21 * this._m33, qe = this._m11 * this._m22 - this._m21 * this._m12, lt = this._m11 * this._m32 - this._m31 * this._m12, ft = this._m11 * this._offsetY - this._offsetX * this._m12, _t = this._m21 * this._m32 - this._m31 * this._m22, St = this._m21 * this._offsetY - this._offsetX * this._m22, yt = this._m31 * this._offsetY - this._offsetX * this._m32, Ct = this._m23 * ft - this._offsetZ * qe - this._m13 * St, Lt = this._m13 * yt - this._m33 * ft + this._offsetZ * lt, Vt = this._m33 * St - this._offsetZ * _t - this._m23 * yt, Tt = qe, xt = -lt, Ot = _t, Pt = 1 / Ge;
                return this._m11 = Be * Pt, this._m12 = Ne * Pt, this._m13 = Ae * Pt, this._m21 = ht * Pt, this._m22 = je * Pt, this._m23 = Ye * Pt, this._m31 = Ot * Pt, this._m32 = xt * Pt, this._m33 = Tt * Pt, this._offsetX = Vt * Pt, this._offsetY = Lt * Pt, this._offsetZ = Ct * Pt, !0;
              },
              _invertCore: function() {
                if (!this.get__isDistinguishedIdentity()) {
                  if (this.get_isAffine())
                    return this._normalizedAffineInvert();
                  var Ae = this._m13 * this._m24 - this._m23 * this._m14, Ne = this._m13 * this._m34 - this._m33 * this._m14, Be = this._m13 * this._m44 - this._offsetZ * this._m14, Ge = this._m23 * this._m34 - this._m33 * this._m24, Ye = this._m23 * this._m44 - this._offsetZ * this._m24, je = this._m33 * this._m44 - this._offsetZ * this._m34, ht = this._m22 * Ne - this._m32 * Ae - this._m12 * Ge, qe = this._m12 * Ye - this._m22 * Be + this._offsetY * Ae, lt = this._m32 * Be - this._offsetY * Ne - this._m12 * je, ft = this._m22 * je - this._m32 * Ye + this._offsetY * Ge, _t = this._offsetX * ht + this._m31 * qe + this._m21 * lt + this._m11 * ft;
                  if (Fe.isZero(_t))
                    return !1;
                  var St = this._m11 * Ge - this._m21 * Ne + this._m31 * Ae, yt = this._m21 * Be - this._offsetX * Ae - this._m11 * Ye, Ct = this._m11 * je - this._m31 * Be + this._offsetX * Ne, Lt = this._m31 * Ye - this._offsetX * Ge - this._m21 * je;
                  Ae = this._m11 * this._m22 - this._m21 * this._m12, Ne = this._m11 * this._m32 - this._m31 * this._m12, Be = this._m11 * this._offsetY - this._offsetX * this._m12, Ge = this._m21 * this._m32 - this._m31 * this._m22, Ye = this._m21 * this._offsetY - this._offsetX * this._m22, je = this._m31 * this._offsetY - this._offsetX * this._m32;
                  var Vt = this._m13 * Ge - this._m23 * Ne + this._m33 * Ae, Tt = this._m23 * Be - this._offsetZ * Ae - this._m13 * Ye, xt = this._m13 * je - this._m33 * Be + this._offsetZ * Ne, Ot = this._m33 * Ye - this._offsetZ * Ge - this._m23 * je, Pt = this._m24 * Ne - this._m34 * Ae - this._m14 * Ge, kt = this._m14 * Ye - this._m24 * Be + this._m44 * Ae, zt = this._m34 * Be - this._m44 * Ne - this._m14 * je, Bt = this._m24 * je - this._m34 * Ye + this._m44 * Ge, gt = 1 / _t;
                  this._m11 = ft * gt, this._m12 = lt * gt, this._m13 = qe * gt, this._m14 = ht * gt, this._m21 = Lt * gt, this._m22 = Ct * gt, this._m23 = yt * gt, this._m24 = St * gt, this._m31 = Bt * gt, this._m32 = zt * gt, this._m33 = kt * gt, this._m34 = Pt * gt, this._offsetX = Ot * gt, this._offsetY = xt * gt, this._offsetZ = Tt * gt, this._m44 = Vt * gt;
                }
                return !0;
              },
              get__isDistinguishedIdentity: function() {
                return !this._isNotKnownToBeIdentity;
              },
              set__isDistinguishedIdentity: function(Ae) {
                return this._isNotKnownToBeIdentity = !Ae, Ae;
              },
              _multiply: function(Ae) {
                this.set(Se.multiplyMatrix(this, Ae));
              }
            };
            (0, s.registerType)("Matrix3d", [Se, Te, null]), Se._s_identity = Se._createIdentity();
            function D() {
              this.m11 = 1, this.m12 = 0, this.m13 = 0, this.m21 = 0, this.m22 = 1, this.m23 = 0, this.m31 = 0, this.m32 = 0, this.m33 = 1;
            }
            D.create = function(Ae, Ne, Be, Ge, Ye, je, ht, qe, lt) {
              var ft = new D();
              return ft.m11 = Ae, ft.m12 = Ne, ft.m13 = Be, ft.m21 = Ge, ft.m22 = Ye, ft.m23 = je, ft.m31 = ht, ft.m32 = qe, ft.m33 = lt, ft;
            }, D.rotation = function(Ae) {
              var Ne = new D();
              return Ne.m11 = Math.cos(Ae), Ne.m21 = -Math.sin(Ae), Ne.m12 = Math.sin(Ae), Ne.m22 = Math.cos(Ae), Ne;
            }, D.translation = function(Ae, Ne) {
              var Be = new D();
              return Be.m31 = Ae, Be.m32 = Ne, Be;
            }, D.scaling = function(Ae, Ne) {
              var Be = new D();
              return Be.m11 = Ae, Be.m22 = Ne, Be;
            }, D.multiply = function(Ae, Ne) {
              return D.create(Ae.m11 * Ne.m11 + Ae.m12 * Ne.m21 + Ae.m13 * Ne.m31, Ae.m11 * Ne.m12 + Ae.m12 * Ne.m22 + Ae.m13 * Ne.m32, Ae.m11 * Ne.m13 + Ae.m12 * Ne.m23 + Ae.m13 * Ne.m33, Ae.m21 * Ne.m11 + Ae.m22 * Ne.m21 + Ae.m23 * Ne.m31, Ae.m21 * Ne.m12 + Ae.m22 * Ne.m22 + Ae.m23 * Ne.m32, Ae.m21 * Ne.m13 + Ae.m22 * Ne.m23 + Ae.m23 * Ne.m33, Ae.m31 * Ne.m11 + Ae.m32 * Ne.m21 + Ae.m33 * Ne.m31, Ae.m31 * Ne.m12 + Ae.m32 * Ne.m22 + Ae.m33 * Ne.m32, Ae.m31 * Ne.m13 + Ae.m32 * Ne.m23 + Ae.m33 * Ne.m33);
            }, D.rotateAt = function(Ae, Ne) {
              var Be = D.translation(-Ne.x, -Ne.y), Ge = D.rotation(Ae), Ye = D.translation(Ne.x, Ne.y);
              return D.multiply(D.multiply(Be, Ge), Ye);
            };
            var ke = {
              _transformPoints: function(Ae) {
                for (var Ne = a.ss.enumerate(Ae); Ne.moveNext(); ) {
                  var Be = Ne.current;
                  this.multiplyPoint(Be);
                }
              },
              multiplyPoint: function(Ae) {
                var Ne = Ae.x, Be = Ae.y;
                Ae.x = Ne * this.m11 + Be * this.m21 + this.m31, Ae.y = Ne * this.m12 + Be * this.m22 + this.m32;
              }
            };
            (0, s.registerType)("Matrix2d", [D, ke, null]);
            function Fe() {
            }
            Fe.isZero = function(Ae) {
              return Math.abs(Ae) < 222044604925031e-64;
            }, Fe.isOne = function(Ae) {
              return Math.abs(Ae - 1) < 222044604925031e-64;
            }, Fe.radiansToDegrees = function(Ae) {
              return Ae * 180 / Math.PI;
            }, Fe.degreesToRadians = function(Ae) {
              return Ae * Math.PI / 180;
            }, Fe.clamp = function(Ae, Ne, Be) {
              return Math.max(Ne, Math.min(Ae, Be));
            }, (0, s.registerType)("DoubleUtilities", [Fe, null, null]);
            function He(Ae, Ne, Be, Ge) {
              this.a = 0, this.b = 0, this.c = 0, this.d = 0, this.a = Ae, this.b = Ne, this.c = Be, this.d = Ge;
            }
            var We = {
              normalize: function() {
                var Ae = Math.sqrt(this.a * this.a + this.b * this.b + this.c * this.c);
                this.a /= Ae, this.b /= Ae, this.c /= Ae, this.d /= Ae;
              },
              dot: function(Ae) {
                return this.b * Ae.y + this.c * Ae.z + this.d * Ae.w + this.a * Ae.x;
              }
            };
            (0, s.registerType)("PlaneD", [He, We, null]);
            function Ke(Ae, Ne, Be, Ge) {
              this.x = 0, this.y = 0, this.z = 0, this.w = 0, this.x = Ae, this.y = Ne, this.z = Be, this.w = Ge;
            }
            var $ = {};
            (0, s.registerType)("Vector4d", [Ke, $, null]);
            function De() {
              this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0, this.tu1 = 0, this.tv1 = 0;
            }
            De.create2UV = function(Ae, Ne, Be, Ge, Ye, je) {
              var ht = new De();
              return ht.x = Ae.x, ht.y = Ae.y, ht.z = Ae.z, ht.nx = Ne.x, ht.ny = Ne.y, ht.nz = Ne.z, ht.tu = Be, ht.tv = Ge, ht.tu1 = Ye, ht.tv1 = je, ht;
            }, De.create = function(Ae, Ne, Be, Ge) {
              var Ye = new De();
              Ye.x = Ae.x, Ye.y = Ae.y, Ye.z = Ae.z, Ye.nx = Ne.x, Ye.ny = Ne.y, Ye.nz = Ne.z, Ye.tu = Be, Ye.tv = Ge;
              var je = _(Ne);
              return Ye.tu1 = (je[1] + 180) / 360, Ye.tv1 = 1 - (je[0] + 90) / 180, Ye;
            }, De.createLong2UV = function(Ae, Ne, Be, Ge, Ye, je, ht, qe, lt, ft) {
              var _t = new De();
              return _t.x = Ae, _t.y = Ne, _t.z = Be, _t.nx = Ge, _t.ny = Ye, _t.nz = je, _t.tu = ht, _t.tv = qe, _t.tu1 = lt, _t.tv1 = ft, _t;
            }, De.get_strideSize = function() {
              return 40;
            };
            var Re = {
              get_lat: function() {
                return (1 - this.tv1) * 180 - 90;
              },
              set_lat: function(Ae) {
                return this.tv1 = 1 - (Ae + 90) / 180, Ae;
              },
              get_lng: function() {
                return this.tu1 * 360 - 180;
              },
              set_lng: function(Ae) {
                return this.tu1 = (Ae + 180) / 360, Ae;
              },
              createLong: function(Ae, Ne, Be, Ge, Ye, je, ht, qe) {
                var lt = new De();
                lt.x = Ae, lt.y = Ne, lt.z = Be, lt.nx = Ge, lt.ny = Ye, lt.nz = je, lt.tu = ht, lt.tv = qe;
                var ft = _(b.create(this.nx, this.ny, this.nz));
                return lt.tu1 = (ft[1] + 180) / 360, lt.tv1 = 1 - (ft[0] + 90) / 180, lt;
              },
              get_normal: function() {
                return b.create(this.nx, this.ny, this.nz);
              },
              set_normal: function(Ae) {
                return this.nx = Ae.x, this.ny = Ae.y, this.nz = Ae.z, Ae;
              },
              get_position: function() {
                return b.create(this.x, this.y, this.y);
              },
              set_position: function(Ae) {
                return this.x = Ae.x, this.y = Ae.y, this.z = Ae.z, Ae;
              },
              toString: function() {
                return a.ss.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, U1={8}, U2={9}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv, this.tu1, this.tv1);
              }
            };
            (0, s.registerType)("PositionNormalTexturedX2", [De, Re, null]);
            function Ie() {
              this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0;
            }
            Ie.createShort = function(Ae, Ne, Be, Ge) {
              var Ye = new Ie();
              return Ye.x = Ae.x, Ye.y = Ae.y, Ye.z = Ae.z, Ye.nx = Ne.x, Ye.ny = Ne.y, Ye.nz = Ne.z, Ye.tu = Be, Ye.tv = Ge, Ye;
            }, Ie._create = function(Ae, Ne, Be, Ge, Ye, je, ht, qe) {
              var lt = new Ie();
              return lt.x = Ae, lt.y = Ne, lt.z = Be, lt.nx = Ge, lt.ny = Ye, lt.nz = je, lt.tu = ht, lt.tv = qe, lt;
            }, Ie.createUV = function(Ae, Ne, Be) {
              var Ge = new Ie();
              return Ge.x = Ae.x, Ge.y = Ae.y, Ge.z = Ae.z, Ge.nx = Ne.x, Ge.ny = Ne.y, Ge.nz = Ne.z, Ge.tu = Be.x, Ge.tv = Be.y, Ge;
            };
            var O = {
              // ** is it a mistake that this returns an X2 class? almost surely! **
              //
              // Summary:
              //     Initializes a new instance of the PositionNormalTextured
              //     class.
              //
              // Parameters:
              //   xvalue:
              //     Floating-point value that represents the x coordinate of the position.
              //
              //   yvalue:
              //     Floating-point value that represents the y coordinate of the position.
              //
              //   zvalue:
              //     Floating-point value that represents the z coordinate of the position.
              //
              //   nxvalue:
              //     Floating-point value that represents the nx coordinate of the vertex normal.
              //
              //   nyvalue:
              //     Floating-point value that represents the ny coordinate of the vertex normal.
              //
              //   nzvalue:
              //     Floating-point value that represents the nz coordinate of the vertex normal.
              //
              //   u:
              //     Floating-point value that represents the PositionNormalTexturedX2.#ctor()
              //     component of the texture coordinate.
              //
              //   v:
              //     Floating-point value that represents the PositionNormalTexturedX2.#ctor()
              //     component of the texture coordinate.
              createLong: function(Ae, Ne, Be, Ge, Ye, je, ht, qe) {
                var lt = new De();
                return lt.x = Ae, lt.y = Ne, lt.z = Be, lt.nx = Ge, lt.ny = Ye, lt.nz = je, lt.tu = ht, lt.tv = qe, lt;
              },
              get_normal: function() {
                return b.create(this.nx, this.ny, this.nz);
              },
              set_normal: function(Ae) {
                return this.nx = Ae.x, this.ny = Ae.y, this.nz = Ae.z, Ae;
              },
              get_position: function() {
                return b.create(this.x, this.y, this.z);
              },
              set_position: function(Ae) {
                return this.x = Ae.x, this.y = Ae.y, this.z = Ae.z, Ae;
              },
              toString: function() {
                return a.ss.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, U1={8}, U2={9}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv);
              }
            };
            (0, s.registerType)("PositionNormalTextured", [Ie, O, null]);
            function Ue() {
              this.radius = 0;
            }
            Ue._create = function(Ae, Ne) {
              var Be = new Ue();
              return Be.center = Ae, Be.radius = Ne, Be;
            };
            var $e = {};
            (0, s.registerType)("SphereHull", [Ue, $e, null]);
            function Ze() {
            }
            Ze.findEnclosingSphereFast = function(Ae) {
              for (var Ne = new Ue(), Be = Ae.length, Ge = b.zero, Ye = 0; Ye < Be; ++Ye)
                Ge.add(Ae[Ye]);
              Ge.multiply(1 / Be);
              for (var je = 0, Ye = 0; Ye < Be; ++Ye) {
                var ht = b.getLengthSq(b.subtractVectors(Ae[Ye], Ge));
                ht > je && (je = ht);
              }
              return je = Math.sqrt(je), Ne.center = Ge, Ne.radius = je, Ne;
            }, Ze.findEnclosingSphere = function(Ae) {
              var Ne = new b(), Be = 0, Ge = Ae.length, Ye, je, ht, qe, lt, ft, _t, St, yt, Ct, Lt, Vt, Tt = new b(), xt = new b(), Ot = new b(), Pt = new b(), kt = new b(), zt = new b(), Bt = new b(), gt = new b();
              for (Tt.x = Ot.y = kt.z = 1e8, xt.x = Pt.y = zt.z = -1e9, Ye = 0; Ye < Ge; Ye++) {
                var rt = Ae[Ye];
                rt.x < Tt.x && (Tt = rt), rt.x > xt.x && (xt = rt), rt.y < Ot.y && (Ot = rt), rt.y > Pt.y && (Pt = rt), rt.z < kt.z && (kt = rt), rt.z > zt.z && (zt = rt);
              }
              for (je = xt.x - Tt.x, ht = xt.y - Tt.y, qe = xt.z - Tt.z, ft = je * je + ht * ht + qe * qe, je = Pt.x - Ot.x, ht = Pt.y - Ot.y, qe = Pt.z - Ot.z, _t = je * je + ht * ht + qe * qe, je = zt.x - kt.x, ht = zt.y - kt.y, qe = zt.z - kt.z, St = je * je + ht * ht + qe * qe, Bt = Tt, gt = xt, yt = ft, _t > yt && (yt = _t, Bt = Ot, gt = Pt), St > yt && (Bt = kt, gt = zt), Ne.x = (Bt.x + gt.x) / 2, Ne.y = (Bt.y + gt.y) / 2, Ne.z = (Bt.z + gt.z) / 2, je = gt.x - Ne.x, ht = gt.y - Ne.y, qe = gt.z - Ne.z, lt = je * je + ht * ht + qe * qe, Be = Math.sqrt(lt), Ye = 0; Ye < Ge; Ye++) {
                var rt = Ae[Ye];
                je = rt.x - Ne.x, ht = rt.y - Ne.y, qe = rt.z - Ne.z, Lt = je * je + ht * ht + qe * qe, Lt > lt && (Ct = Math.sqrt(Lt), Be = (Be + Ct) / 2, lt = Be * Be, Vt = Ct - Be, Ne.x = (Be * Ne.x + Vt * rt.x) / Ct, Ne.y = (Be * Ne.y + Vt * rt.y) / Ct, Ne.z = (Be * Ne.z + Vt * rt.z) / Ct);
              }
              return Ue._create(Ne, Be);
            };
            var Qe = {};
            (0, s.registerType)("ConvexHull", [Ze, Qe, null]);
          }
        ),
        /***/
        "./esm/equirectangular_tile.js": (
          /*!*************************************!*\
            !*** ./esm/equirectangular_tile.js ***!
            \*************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              EquirectangularTile: () => (
                /* binding */
                u
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ./graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), c = n(
              /*! ./render_triangle.js */
              "./esm/render_triangle.js"
            ), _ = n(
              /*! ./tile.js */
              "./esm/tile.js"
            );
            function u() {
              this._tileDegrees$1 = 0, this._topDown$1 = !0, this._subDivisionLevel$1 = 1, _.Tile.call(this);
            }
            u.create = function(g, Ee, Ve, Me, B) {
              var Pe = new u();
              return Pe.parent = B, Pe.level = g, Pe.tileX = Ee, Pe.tileY = Ve, Pe.dataset = Me, Pe._topDown$1 = !Me.get_bottomsUp(), Pe.computeBoundingSphere(), Pe;
            };
            var y = {
              computeBoundingSphere: function() {
                if (!this._topDown$1) {
                  this.computeBoundingSphereBottomsUp();
                  return;
                }
                this._tileDegrees$1 = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level);
                var g = 90 - this.tileY * this._tileDegrees$1, Ee = 90 - (this.tileY + 1) * this._tileDegrees$1, Ve = this.tileX * this._tileDegrees$1 - 180, Me = (this.tileX + 1) * this._tileDegrees$1 - 180, B = (g + Ee) / 2, Pe = (Ve + Me) / 2;
                this.sphereCenter = this.geoTo3d(B, Pe, !1), this.topLeft = this.geoTo3d(g, Ve, !1), this.bottomRight = this.geoTo3d(Ee, Me, !1), this.topRight = this.geoTo3d(g, Me, !1), this.bottomLeft = this.geoTo3d(Ee, Ve, !1);
                var k = this.geoTo3d(g, Ve, !1);
                k.subtract(this.sphereCenter), this.sphereRadius = k.length(), this._tileDegrees$1 = Me - Ve;
              },
              computeBoundingSphereBottomsUp: function() {
                var g = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), Ee = -90 + (this.tileY + 1) * g, Ve = -90 + this.tileY * g, Me = this.tileX * g - 180, B = (this.tileX + 1) * g - 180, Pe = (Ee + Ve) / 2, k = (Me + B) / 2;
                this.sphereCenter = this.geoTo3d(Pe, k, !1), this.topLeft = this.geoTo3d(Ee, Me, !1), this.bottomRight = this.geoTo3d(Ve, B, !1), this.topRight = this.geoTo3d(Ee, B, !1), this.bottomLeft = this.geoTo3d(Ve, Me, !1);
                var b = this.topLeft;
                b.subtract(this.sphereCenter), this.sphereRadius = b.length(), g = B - Me;
              },
              createGeometry: function(g) {
                _.Tile.prototype.createGeometry.call(this, g), g.gl == null ? (!this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1) && (this._subDivisionLevel$1 = Math.max(2, (4 - this.level) * 2)) : this._subDivisionLevel$1 = 32;
                try {
                  for (var Ee = 0; Ee < 4; Ee++)
                    this._renderTriangleLists[Ee] = [];
                  if (!this._topDown$1)
                    return this._createGeometryBottomsUp$1(g);
                  var Ve, Me, B = 0, Pe = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), k = 90 - this.tileY * Pe, b = 90 - (this.tileY + 1) * Pe, Le = this.tileX * Pe - 180, xe = (this.tileX + 1) * Pe - 180, ze = xe - Le, Se = b - k;
                  this.topLeft = this.geoTo3d(k, Le, !1), this.bottomRight = this.geoTo3d(b, xe, !1), this.topRight = this.geoTo3d(k, xe, !1), this.bottomLeft = this.geoTo3d(b, Le, !1);
                  var Te = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1)), D, ke, Fe = 1 / this._subDivisionLevel$1;
                  for (ke = 0; ke <= this._subDivisionLevel$1; ke++)
                    for (ke !== this._subDivisionLevel$1 ? Ve = k + Fe * Se * ke : Ve = b, D = 0; D <= this._subDivisionLevel$1; D++)
                      D !== this._subDivisionLevel$1 ? Me = Le + Fe * ze * D : Me = xe, B = ke * (this._subDivisionLevel$1 + 1) + D, Te[B] = l.PositionTexture.createPos(this.geoTo3d(Ve, Me, !1), D * Fe, ke * Fe);
                  this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
                  var He = this._subDivisionLevel$1 / 2, We = 0;
                  if (g.gl == null)
                    for (var Ke = 0; Ke < 2; Ke++)
                      for (var $ = 0; $ < 2; $++) {
                        B = 0;
                        for (var De = He * Ke; De < He * (Ke + 1); De++)
                          for (var Re = He * $; Re < He * ($ + 1); Re++) {
                            var Ie, O, Ue;
                            Ie = Te[De * (this._subDivisionLevel$1 + 1) + Re], O = Te[(De + 1) * (this._subDivisionLevel$1 + 1) + Re], Ue = Te[De * (this._subDivisionLevel$1 + 1) + (Re + 1)], this._renderTriangleLists[We].push(c.RenderTriangle.create(Ie, Ue, O, this.texture, this.level)), Ie = Te[De * (this._subDivisionLevel$1 + 1) + (Re + 1)], O = Te[(De + 1) * (this._subDivisionLevel$1 + 1) + Re], Ue = Te[(De + 1) * (this._subDivisionLevel$1 + 1) + (Re + 1)], this._renderTriangleLists[We].push(c.RenderTriangle.create(Ie, Ue, O, this.texture, this.level));
                          }
                        We++;
                      }
                  else {
                    this._vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                    var $e = new Float32Array(Te.length * 5), Ze = $e;
                    B = 0;
                    for (var Qe = s.ss.enumerate(Te); Qe.moveNext(); ) {
                      var Ae = Qe.current;
                      B = this.addVertex(Ze, B, Ae);
                    }
                    t.tilePrepDevice.bufferData(o.WEBGL.ARRAY_BUFFER, $e, o.WEBGL.STATIC_DRAW);
                    for (var Ke = 0; Ke < 2; Ke++)
                      for (var $ = 0; $ < 2; $++) {
                        var Ne = new Uint16Array(this.triangleCount * 3), Be = Ne;
                        B = 0;
                        for (var De = He * Ke; De < He * (Ke + 1); De++)
                          for (var Re = He * $; Re < He * ($ + 1); Re++)
                            Be[B++] = De * (this._subDivisionLevel$1 + 1) + Re, Be[B++] = (De + 1) * (this._subDivisionLevel$1 + 1) + Re, Be[B++] = De * (this._subDivisionLevel$1 + 1) + (Re + 1), Be[B++] = De * (this._subDivisionLevel$1 + 1) + (Re + 1), Be[B++] = (De + 1) * (this._subDivisionLevel$1 + 1) + Re, Be[B++] = (De + 1) * (this._subDivisionLevel$1 + 1) + (Re + 1);
                        this._indexBuffers[We] = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[We]), t.tilePrepDevice.bufferData(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ne, o.WEBGL.STATIC_DRAW), We++;
                      }
                  }
                } catch {
                }
                return !0;
              },
              _createGeometryBottomsUp$1: function(g) {
                var Ee, Ve, Me = 0, B = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), Pe = -90 + (this.tileY + 1) * B, k = -90 + this.tileY * B, b = this.tileX * B - 180, Le = (this.tileX + 1) * B - 180, xe = Le - b, ze = k - Pe, Se = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1)), Te, D, ke = 1 / this._subDivisionLevel$1;
                for (D = 0; D <= this._subDivisionLevel$1; D++)
                  for (D !== this._subDivisionLevel$1 ? Ee = Pe + ke * ze * D : Ee = k, Te = 0; Te <= this._subDivisionLevel$1; Te++)
                    Te !== this._subDivisionLevel$1 ? Ve = b + ke * xe * Te : Ve = Le, Me = D * (this._subDivisionLevel$1 + 1) + Te, Se[Me] = l.PositionTexture.createPos(this.geoTo3d(Ee, Ve, !1), Te * ke, D * ke);
                this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
                var Fe = this._subDivisionLevel$1 / 2, He = 0;
                if (g.gl == null)
                  for (var We = 0; We < 2; We++)
                    for (var Ke = 0; Ke < 2; Ke++) {
                      Me = 0;
                      for (var $ = Fe * We; $ < Fe * (We + 1); $++)
                        for (var De = Fe * Ke; De < Fe * (Ke + 1); De++) {
                          var Re, Ie, O;
                          Re = Se[$ * (this._subDivisionLevel$1 + 1) + De], Ie = Se[($ + 1) * (this._subDivisionLevel$1 + 1) + De], O = Se[$ * (this._subDivisionLevel$1 + 1) + (De + 1)], this._renderTriangleLists[He].push(c.RenderTriangle.create(Re, O, Ie, this.texture, this.level)), Re = Se[$ * (this._subDivisionLevel$1 + 1) + (De + 1)], Ie = Se[($ + 1) * (this._subDivisionLevel$1 + 1) + De], O = Se[($ + 1) * (this._subDivisionLevel$1 + 1) + (De + 1)], this._renderTriangleLists[He].push(c.RenderTriangle.create(Re, O, Ie, this.texture, this.level));
                        }
                      He++;
                    }
                else {
                  this._vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                  var Ue = new Float32Array(Se.length * 5), $e = Ue;
                  Me = 0;
                  for (var Ze = s.ss.enumerate(Se); Ze.moveNext(); ) {
                    var Qe = Ze.current;
                    Me = this.addVertex($e, Me, Qe);
                  }
                  t.tilePrepDevice.bufferData(o.WEBGL.ARRAY_BUFFER, Ue, o.WEBGL.STATIC_DRAW);
                  for (var We = 0; We < 2; We++)
                    for (var Ke = 0; Ke < 2; Ke++) {
                      var Ae = new Uint16Array(this.triangleCount * 3), Ne = Ae;
                      Me = 0;
                      for (var $ = Fe * We; $ < Fe * (We + 1); $++)
                        for (var De = Fe * Ke; De < Fe * (Ke + 1); De++)
                          Ne[Me++] = $ * (this._subDivisionLevel$1 + 1) + De, Ne[Me++] = ($ + 1) * (this._subDivisionLevel$1 + 1) + De, Ne[Me++] = $ * (this._subDivisionLevel$1 + 1) + (De + 1), Ne[Me++] = $ * (this._subDivisionLevel$1 + 1) + (De + 1), Ne[Me++] = ($ + 1) * (this._subDivisionLevel$1 + 1) + De, Ne[Me++] = ($ + 1) * (this._subDivisionLevel$1 + 1) + (De + 1);
                      this._indexBuffers[He] = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[He]), t.tilePrepDevice.bufferData(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ae, o.WEBGL.STATIC_DRAW), He++;
                    }
                }
                return !0;
              }
            };
            (0, a.registerType)("EquirectangularTile", [u, y, _.Tile]);
          }
        ),
        /***/
        "./esm/fast_math.js": (
          /*!**************************!*\
            !*** ./esm/fast_math.js ***!
            \**************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              FastMath: () => (
                /* binding */
                a
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            );
            function a() {
            }
            const t = 0.785398155450821, l = 794662735614793e-23, o = 306161699786838e-31, c = 0.318309886183791;
            a._mulsign = function(u, y) {
              return a._sign(y) * u;
            }, a._isnan = function(u) {
              return u !== u;
            }, a._isinf = function(u) {
              return Math.abs(u) === Number.POSITIVE_INFINITY;
            }, a._sign = function(u) {
              return u ? u > 0 ? 1 : -1 : 0;
            }, a._atanhelper = function(u) {
              var y = u * u, g = -188796008463073e-19;
              return g = g * y + 209850076645817e-18, g = g * y + -0.00110611831486672, g = g * y + 0.00370026744188713, g = g * y + -0.00889896195887655, g = g * y + 0.0165993297735292, g = g * y + -0.0254517624932313, g = g * y + 0.0337852580001353, g = g * y + -0.0407629191276837, g = g * y + 0.0466667150077841, g = g * y + -0.0523674852303482, g = g * y + 0.0587666392926674, g = g * y + -0.0666573579361081, g = g * y + 0.076921953831177, g = g * y + -0.090908995008245, g = g * y + 0.111111105648261, g = g * y + -0.142857142667713, g = g * y + 0.199999999996591, g = g * y + -0.333333333333311, g * y * u + u;
            }, a._atan2k = function(u, y) {
              var g = 0;
              if (y < 0 && (y = -y, g = -2), u > y) {
                var Ee = y;
                y = u, u = -Ee, g += 1;
              }
              return a._atanhelper(u / y) + g * (Math.PI / 2);
            }, a.atan2 = function(u, y) {
              var g = a._atan2k(Math.abs(u), y);
              return g = a._mulsign(g, y), (a._isinf(y) || !y) && (g = Math.PI / 2 - (a._isinf(y) ? a._sign(y) * (Math.PI / 2) : 0)), a._isinf(u) && (g = Math.PI / 2 - (a._isinf(y) ? a._sign(y) * (Math.PI * 1 / 4) : 0)), u || (g = a._sign(y) === -1 ? Math.PI : 0), a._isnan(y) || a._isnan(u) ? Number.NaN : a._mulsign(g, u);
            }, a.asin = function(u) {
              return a._mulsign(a._atan2k(Math.abs(u), Math.sqrt((1 + u) * (1 - u))), u);
            }, a.acos = function(u) {
              return a._mulsign(a._atan2k(Math.sqrt((1 + u) * (1 - u)), Math.abs(u)), u) + (u < 0 ? Math.PI : 0);
            }, a.atan = function(u) {
              var y = 0;
              u < 0 && (u = -u, y = 2), u > 1 && (u = 1 / u, y |= 1);
              var g = a._atanhelper(u);
              return y & 1 && (g = 1.5707963267949 - g), y & 2 && (g = -g), g;
            }, a._sincoshelper = function(u) {
              var y = u * u, g = -797255955009038e-32;
              return g = g * y + 281009972710863e-29, g = g * y - 764712219118159e-27, g = g * y + 160590430605665e-24, g = g * y - 250521083763502e-22, g = g * y + 275573192239199e-20, g = g * y - 198412698412696e-18, g = g * y + 0.00833333333333333, g = g * y - 0.166666666666667, y * g * u + u;
            }, a.sin = function(u) {
              var y = u * c, g = Math.floor(y < 0 ? y - 0.5 : y + 0.5), Ee = 4 * g;
              return u -= Ee * t, u -= Ee * l, u -= Ee * o, g & 1 && (u = -u), a._sincoshelper(u);
            }, a.cos = function(u) {
              var y = u * c - 0.5, g = 1 + 2 * Math.floor(y < 0 ? y - 0.5 : y + 0.5), Ee = 2 * g;
              return u -= Ee * t, u -= Ee * l, u -= Ee * o, g & 2 || (u = -u), a._sincoshelper(u);
            };
            var _ = {};
            (0, s.registerType)("FastMath", [a, _, null]);
          }
        ),
        /***/
        "./esm/fits_properties.js": (
          /*!********************************!*\
            !*** ./esm/fits_properties.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              FitsProperties: () => (
                /* binding */
                t
              ),
              /* harmony export */
              ScaleTypes: () => (
                /* binding */
                a
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = {
              linear: 0,
              log: 1,
              power: 2,
              squareRoot: 3,
              histogramEqualization: 4
            };
            (0, s.registerType)("ScaleTypes", a), (0, s.registerEnum)("ScaleTypes", a);
            function t() {
              this.bZero = 0, this.bScale = 1, this.containsBlanks = !1, this.blankValue = Number.MIN_VALUE, this.maxVal = Number.MIN_VALUE, this.minVal = Number.MAX_VALUE, this.upperCut = Number.MIN_VALUE, this.lowerCut = Number.MAX_VALUE, this.transparentBlack = !1, this.colorMapName = "viridis", this.scaleType = 0, this.onMainImageLoaded = null, this.mainImageLoadedEventHasFired = !1;
            }
            var l = {
              // See description of the onMainImageLoaded field. This method exists to
              // help non-HiPS tiled FITS datasets notify callers when the initial
              // data have loaded and these FitsProperties can be trusted.
              _fireMainImageLoaded: function(o) {
                this.onMainImageLoaded != null && !this.mainImageLoadedEventHasFired && (this.mainImageLoadedEventHasFired = !0, this.onMainImageLoaded(o));
              }
            };
            (0, s.registerType)("FitsProperties", [t, l, null]);
          }
        ),
        /***/
        "./esm/folder.js": (
          /*!***********************!*\
            !*** ./esm/folder.js ***!
            \***********************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Folder: () => (
                /* binding */
                Pe
              ),
              /* harmony export */
              FolderGroup: () => (
                /* binding */
                Ve
              ),
              /* harmony export */
              FolderRefreshType: () => (
                /* binding */
                Me
              ),
              /* harmony export */
              FolderType: () => (
                /* binding */
                B
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), l = n(
              /*! ./baseutil.js */
              "./esm/baseutil.js"
            ), o = n(
              /*! ./interfaces.js */
              "./esm/interfaces.js"
            ), c = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), _ = n(
              /*! ./folder_up.js */
              "./esm/folder_up.js"
            ), u = n(
              /*! ./imageset.js */
              "./esm/imageset.js"
            ), y = n(
              /*! ./place.js */
              "./esm/place.js"
            ), g = n(
              /*! ./tour.js */
              "./esm/tour.js"
            ), Ee = n(
              /*! ./web_file.js */
              "./esm/web_file.js"
            ), Ve = {
              explorer: 0,
              tour: 1,
              search: 2,
              constellation: 3,
              view: 4,
              goTo: 5,
              community: 6,
              context: 7,
              voTable: 8,
              imageStack: 9
            };
            (0, a.registerType)("FolderGroup", Ve), (0, a.registerEnum)("FolderGroup", Ve);
            var Me = {
              interval: 0,
              conditionalGet: 1,
              viewChange: 2
            };
            (0, a.registerType)("FolderRefreshType", Me), (0, a.registerEnum)("FolderRefreshType", Me);
            var B = {
              earth: 0,
              planet: 1,
              sky: 2,
              panorama: 3
            };
            (0, a.registerType)("FolderType", B), (0, a.registerEnum)("FolderType", B);
            function Pe() {
              this.parent = null, this.isProxy = !1, this._versionDependent = !1, this._readOnly = !0, this._dirty = !1, this._thumbnail = null, this._proxyFolder = null, this._lastUpdate = /* @__PURE__ */ new Date(), this._childList = [], this._itemsField = [], this._imagesets = [], this._tours = [], this._folders = [], this._places = [], this._groupField = 0, this._refreshTypeField = 0, this._refreshTypeFieldSpecified = !1, this._browseableField = !0, this._browseableFieldSpecified = !1, this._searchableField = !1, this._typeField = 0, this._communityIdField = 0, this._componentIdField = 0, this._permissionField = 0;
            }
            var k = {
              toString: function() {
                return this._nameField;
              },
              get_versionDependent: function() {
                return this._versionDependent;
              },
              set_versionDependent: function(b) {
                this._versionDependent = b;
                for (var Le = s.ss.enumerate(this._folders); Le.moveNext(); ) {
                  var xe = Le.current;
                  xe.set_versionDependent(this._versionDependent);
                }
                return b;
              },
              get_readOnly: function() {
                return this._readOnly;
              },
              set_readOnly: function(b) {
                return this._readOnly = b, b;
              },
              get_dirty: function() {
                return this._dirty;
              },
              set_dirty: function(b) {
                return this._dirty = b, b;
              },
              loadFromUrlWithErrorCallback: function(b, Le, xe) {
                this._onError = xe, this.loadFromUrl(b, Le);
              },
              loadFromUrl: function(b, Le) {
                this._onComplete = Le, this._webFile = new Ee.WebFile(c.URLHelpers.singleton.rewrite(b, 1)), this._webFile.onStateChange = s.ss.bind("_loadData", this), this._webFile.send();
              },
              _loadData: function() {
                if (this._webFile.get_state() === 2)
                  console.error(this._webFile.get_message()), this._onError != null && this._onError();
                else if (this._webFile.get_state() === 1) {
                  var b = l.Util.selectSingleNode(this._webFile.getXml(), "Folder");
                  if (b == null) {
                    var Le = this._webFile.getXml();
                    Le != null && (b = l.Util.selectSingleNode(Le, "Folder"));
                  }
                  b != null && (this._clearChildren(), this._parseXML(b)), this._onComplete != null && this._onComplete();
                }
              },
              _clearChildren: function() {
                this._folders.length = 0, this._tours.length = 0, this._places.length = 0, this.get_imagesets().length = 0;
              },
              _parseXML: function(b) {
                b.attributes.getNamedItem("Name") != null ? this._nameField = b.attributes.getNamedItem("Name").nodeValue : this._nameField = "", b.attributes.getNamedItem("Url") != null && (this._urlField = b.attributes.getNamedItem("Url").nodeValue), b.attributes.getNamedItem("Thumbnail") != null && (this._thumbnailUrlField = b.attributes.getNamedItem("Thumbnail").nodeValue);
                for (var Le = s.ss.enumerate(b.childNodes); Le.moveNext(); ) {
                  var xe = Le.current;
                  switch (xe.nodeName) {
                    case "Folder":
                      var ze = new Pe();
                      ze.parent = this, ze._parseXML(xe), this._folders.push(ze);
                      break;
                    case "Place":
                      this._places.push(y.Place._fromXml(xe));
                      break;
                    case "ImageSet":
                      this.get_imagesets().push(u.Imageset.fromXMLNode(xe));
                      break;
                    case "Tour":
                      this.get_tours().push(g.Tour._fromXml(xe));
                      break;
                  }
                }
              },
              addChildFolder: function(b) {
                this._folders.push(b), this._dirty = !0;
              },
              removeChildFolder: function(b) {
                s.ss.remove(this._folders, b), this._dirty = !0;
              },
              addChildPlace: function(b) {
                this._places.push(b), this._dirty = !0;
              },
              removeChildPlace: function(b) {
                s.ss.remove(this._places, b), this._dirty = !0;
              },
              get_thumbnail: function() {
                return this._thumbnail;
              },
              set_thumbnail: function(b) {
                return this._thumbnail = b, b;
              },
              get_bounds: function() {
                return this._bounds;
              },
              set_bounds: function(b) {
                return this._bounds = b, b;
              },
              get_isImage: function() {
                return !1;
              },
              get_isTour: function() {
                return !1;
              },
              get_isFolder: function() {
                return !0;
              },
              get_isCloudCommunityItem: function() {
                return !!this._communityIdField || this._permissionField > 0;
              },
              refresh: function() {
                this._proxyFolder == null && (this._proxyFolder = new Pe(), this._proxyFolder.isProxy = !0, this._proxyFolder.parent = this.parent), this._proxyFolder.loadFromUrlWithErrorCallback(this._urlField, this._childReadyCallback, this._childReadyCallback), this._childReadyCallback = null;
              },
              childLoadCallback: function(b) {
                this._childReadyCallback = b, this.get_children(), this._proxyFolder == null && b();
              },
              get_children: function() {
                if (s.ss.emptyString(this._urlField)) {
                  if (this._childList.length = 0, this.parent != null) {
                    var b = new _.FolderUp();
                    b.parent = this.parent, this._childList.push(b);
                  }
                  if (this.get_folders() != null)
                    for (var Le = s.ss.enumerate(this.get_folders()); Le.moveNext(); ) {
                      var xe = Le.current;
                      this._childList.push(xe);
                    }
                  if (this.get_imagesets() != null)
                    for (var ze = s.ss.enumerate(this.get_imagesets()); ze.moveNext(); ) {
                      var Se = ze.current;
                      this._childList.push(Se);
                    }
                  if (this.get_places() != null)
                    for (var Te = s.ss.enumerate(this.get_places()); Te.moveNext(); ) {
                      var D = Te.current;
                      this._childList.push(D);
                    }
                  if (this.get_tours() != null)
                    for (var ke = s.ss.enumerate(this.get_tours()); ke.moveNext(); ) {
                      var Fe = ke.current;
                      this._childList.push(Fe);
                    }
                  return this._childList;
                } else {
                  var He = (this._lastUpdate - s.ss.now()) / 1e3;
                  return (this.get_refreshType() === 1 || this._proxyFolder == null || !this.get_refreshType() && parseInt(this._refreshIntervalField) < He) && this.refresh(), this._proxyFolder != null ? this._proxyFolder.get_children() : null;
                }
              },
              get_msrCommunityId: function() {
                return this._communityIdField;
              },
              set_msrCommunityId: function(b) {
                return this._communityIdField = b, b;
              },
              get_msrComponentId: function() {
                return this._componentIdField;
              },
              set_msrComponentId: function(b) {
                return this._componentIdField = b, b;
              },
              get_permission: function() {
                return this._permissionField;
              },
              set_permission: function(b) {
                return this._permissionField = b, b;
              },
              get_folders: function() {
                return this._folders;
              },
              set_folders: function(b) {
                return this._folders = b, b;
              },
              get_places: function() {
                return this._places;
              },
              set_places: function(b) {
                return this._places = b, b;
              },
              get_imagesets: function() {
                return this._imagesets;
              },
              set_imagesets: function(b) {
                return this._imagesets = b, b;
              },
              get_tours: function() {
                return this._tours;
              },
              set_tours: function(b) {
                return this._tours = b, b;
              },
              get_name: function() {
                return this._nameField == null ? "" : this._nameField;
              },
              set_name: function(b) {
                return this._nameField = b, b;
              },
              get_group: function() {
                return this._groupField;
              },
              set_group: function(b) {
                return this._groupField = b, b;
              },
              get_url: function() {
                return this._urlField;
              },
              set_url: function(b) {
                return this._urlField = b, b;
              },
              get_thumbnailUrl: function() {
                return s.ss.emptyString(this._thumbnailUrlField) ? c.URLHelpers.singleton.engineAssetUrl("thumb_folder.jpg") : this._thumbnailUrlField;
              },
              set_thumbnailUrl: function(b) {
                return this._thumbnailUrlField = b, b;
              },
              get_refreshType: function() {
                return this._refreshTypeField;
              },
              set_refreshType: function(b) {
                return this._refreshTypeField = b, this.set_refreshTypeSpecified(!0), b;
              },
              get_refreshTypeSpecified: function() {
                return this._refreshTypeFieldSpecified;
              },
              set_refreshTypeSpecified: function(b) {
                return this._refreshTypeFieldSpecified = b, b;
              },
              get_refreshInterval: function() {
                return this._refreshIntervalField;
              },
              set_refreshInterval: function(b) {
                return this._refreshIntervalField = b, b;
              },
              get_browseable: function() {
                return this._browseableField;
              },
              set_browseable: function(b) {
                return this._browseableField = b, this._browseableFieldSpecified = !0, b;
              },
              get_browseableSpecified: function() {
                return this._browseableFieldSpecified;
              },
              set_browseableSpecified: function(b) {
                return this._browseableFieldSpecified = b, b;
              },
              get_searchable: function() {
                return this._searchableField;
              },
              set_searchable: function(b) {
                return this._searchableField = b, b;
              },
              get_type: function() {
                return this._typeField;
              },
              set_type: function(b) {
                return this._typeField = b, b;
              },
              get_subType: function() {
                return this._subTypeField;
              },
              set_subType: function(b) {
                return this._subTypeField = b, b;
              }
            };
            (0, a.registerType)("Folder", [Pe, k, null, o.IThumbnail]), (0, t.set_makeNewFolder)(function() {
              return new Pe();
            });
          }
        ),
        /***/
        "./esm/folder_browser.js": (
          /*!*******************************!*\
            !*** ./esm/folder_browser.js ***!
            \*******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              FolderBrowser: () => (
                /* binding */
                B
              ),
              /* harmony export */
              ThumbnailSize: () => (
                /* binding */
                Me
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), l = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), o = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), c = n(
              /*! ./folder.js */
              "./esm/folder.js"
            ), _ = n(
              /*! ./folder_up.js */
              "./esm/folder_up.js"
            ), u = n(
              /*! ./imageset.js */
              "./esm/imageset.js"
            ), y = n(
              /*! ./place.js */
              "./esm/place.js"
            ), g = n(
              /*! ./render_triangle.js */
              "./esm/render_triangle.js"
            ), Ee = n(
              /*! ./tour.js */
              "./esm/tour.js"
            ), Ve = n(
              /*! ./util.js */
              "./esm/util.js"
            ), Me = {
              small: 0,
              big: 1
            };
            (0, a.registerType)("ThumbnailSize", Me), (0, a.registerEnum)("ThumbnailSize", Me);
            function B() {
              this._items = [], this.top = 10, this.left = 10, this._indexTouchDown = -1, this._mouseDown = !1, this._lastX = 0, this._lastY = 0, this._ignoreClick = !1, this._thumbnailSize = 0, this._horzSpacing = 110, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 110, this._horzMultiple = 110, this._rowCount = 1, this._colCount = 6, this._dragging = !1, this._startIndex = 0, this._startOffset = 0, this._selectedItem = -1, this._hoverItem = -1, this.showAddButton = !1, this.width = 0, this.height = 0, this._addButtonHover = !1, this.imageClicked = !1;
            }
            B._downloading = !1, B._imagesLoaded = !1, B._imageLoadCount = 0, B.create = function() {
              var k = new B();
              return k.height = 85, k.width = 1920, k.canvas = document.createElement("canvas"), k.canvas.width = k.width, k.canvas.height = k.height, k.setup(), k.loadImages(), k;
            };
            var Pe = {
              setup: function() {
                this.canvas.addEventListener("click", s.ss.bind("onClick", this), !1), this.canvas.addEventListener("dblclick", s.ss.bind("onDoubleClick", this), !1), this.canvas.addEventListener("mousemove", s.ss.bind("onMouseMove", this), !1), this.canvas.addEventListener("mouseup", s.ss.bind("onMouseUp", this), !1), this.canvas.addEventListener("mousedown", s.ss.bind("onMouseDown", this), !1), this.canvas.addEventListener("touchstart", s.ss.bind("onTouchStart", this), !1), this.canvas.addEventListener("touchmove", s.ss.bind("onTouchMove", this), !1), this.canvas.addEventListener("touchend", s.ss.bind("onTouchEnd", this), !1), this.canvas.addEventListener("mouseout", s.ss.bind("onMouseUp", this), !1);
              },
              onTouchStart: function(k) {
                var b = k;
                b.preventDefault(), this._mouseDown = !0, this._lastX = b.targetTouches[0].pageX, this._lastY = b.targetTouches[0].pageY, this._indexTouchDown = this._getItemIndexFromCursor(o.Vector2d.create(b.targetTouches[0].pageX, b.targetTouches[0].pageY));
              },
              onTouchMove: function(k) {
                var b = k;
                if (b.preventDefault(), this._mouseDown) {
                  if (b.targetTouches[0].pageX - this._lastX, b.targetTouches[0].pageY - this._lastY, this._mouseDown && (this._dragging = !0), this._dragging) {
                    var xe = Math.round((b.targetTouches[0].pageX - this._lastX + this._startOffset) / this._horzSpacing), ze = Math.round(b.targetTouches[0].pageX - this._lastX + this._startOffset - xe * this._horzSpacing);
                    this._startOffset = ze, this._startIndex -= xe, this._startIndex < 0 && (this._startOffset -= this._horzSpacing * this._startIndex, this._startIndex = 0), this._lastX = b.targetTouches[0].pageX, this._lastY = b.targetTouches[0].pageY;
                  } else {
                    var Le = this._getItemIndexFromCursor(o.Vector2d.create(b.targetTouches[0].pageX, b.targetTouches[0].pageY));
                    this._hoverItem !== Le && (this._hoverItem = Le);
                  }
                  this.refresh();
                }
              },
              onTouchEnd: function(k) {
                var b = k;
                b.preventDefault(), this._dragging ? (this._dragging = !1, this._ignoreClick = !0) : this._indexTouchDown > -1 && this._mouseDown && this._handleClick(this._indexTouchDown), this._startOffset = 0, this._mouseDown = !1, this.refresh();
              },
              onClick: function(k) {
                if (this._ignoreClick)
                  this._ignoreClick = !1;
                else {
                  var b = this._getItemIndexFromCursor(o.Vector2d.create(k.offsetX, k.offsetY));
                  this._handleClick(b);
                }
              },
              _handleClick: function(k) {
                var b = this;
                if (k > -1) {
                  if (s.ss.canCast(this._items[k], y.Place)) {
                    var Le = this._items[k];
                    t.globalWWTControl.gotoTarget(Le, !1, !1, !0);
                    return;
                  }
                  if (s.ss.canCast(this._items[k], u.Imageset)) {
                    var xe = this._items[k];
                    l.globalRenderContext.set_backgroundImageset(xe);
                    return;
                  }
                  if (s.ss.canCast(this._items[k], Ee.Tour)) {
                    var ze = this._items[k];
                    t.globalWWTControl.playTour(ze.get_tourUrl());
                    return;
                  }
                  if (s.ss.canCast(this._items[k], c.Folder)) {
                    var Se = this._items[k];
                    this._startIndex = 0, Se.childLoadCallback(function() {
                      b._items = Se.get_children(), b.refresh();
                    });
                    return;
                  }
                  if (s.ss.canCast(this._items[k], _.FolderUp)) {
                    var Te = this._items[k];
                    Te.parent != null && (this._startIndex = 0, Te.parent.childLoadCallback(function() {
                      b._items = Te.parent.get_children(), b.refresh();
                    }));
                    return;
                  }
                }
              },
              onDoubleClick: function(k) {
                g.RenderTriangle.renderingOn = !g.RenderTriangle.renderingOn;
              },
              onGestureChange: function(k) {
                var b = k;
                this._mouseDown = !1, b.scale;
              },
              onMouseDown: function(k) {
                this._mouseDown = !0, this._lastX = Ve.Mouse.offsetX(this.canvas, k), this._lastY = Ve.Mouse.offsetY(this.canvas, k);
              },
              onMouseMove: function(k) {
                if (this._mouseDown && (this._dragging = !0), this._dragging) {
                  var Le = Math.round((Ve.Mouse.offsetX(this.canvas, k) - this._lastX + this._startOffset) / this._horzSpacing), xe = Math.round(Ve.Mouse.offsetX(this.canvas, k) - this._lastX + this._startOffset - Le * this._horzSpacing);
                  this._startOffset = xe, this._startIndex -= Le, this._startIndex < 0 && (this._startOffset -= this._horzSpacing * this._startIndex, this._startIndex = 0), this._lastX = Ve.Mouse.offsetX(this.canvas, k), this._lastY = Ve.Mouse.offsetY(this.canvas, k);
                } else {
                  var b = this._getItemIndexFromCursor(o.Vector2d.create(Ve.Mouse.offsetX(this.canvas, k), Ve.Mouse.offsetY(this.canvas, k)));
                  this._hoverItem !== b && (this._hoverItem = b);
                }
                this.refresh();
              },
              onMouseUp: function(k) {
                this._dragging && (this._startOffset = 0, this._dragging = !1, this._ignoreClick = !0), this._mouseDown = !1, this.refresh();
              },
              loadImages: function() {
                var k = this;
                !B._imagesLoaded && !B._downloading && (B._imageLoadCount = 0, B._imagesLoaded = !1, B._downloading = !0, B._bmpBackground = document.createElement("img"), B._bmpBackground.src = "images/thumbBackground.png", B._bmpBackground.addEventListener("load", function(b) {
                  B._imageLoadCount++, B._imageLoadCount === 5 && (B._downloading = !1, B._imagesLoaded = !0, k.refresh());
                }, !1), B._bmpBackgroundHover = document.createElement("img"), B._bmpBackgroundHover.src = "images/thumbBackgroundHover.png", B._bmpBackgroundHover.addEventListener("load", function(b) {
                  B._imageLoadCount++, B._imageLoadCount === 5 && (B._downloading = !1, B._imagesLoaded = !0, k.refresh());
                }, !1), B._bmpBackgroundWide = document.createElement("img"), B._bmpBackgroundWide.src = "images/thumbBackgroundWide.png", B._bmpBackgroundWide.addEventListener("load", function(b) {
                  B._imageLoadCount++, B._imageLoadCount === 5 && (B._downloading = !1, B._imagesLoaded = !0, k.refresh());
                }, !1), B._bmpBackgroundWideHover = document.createElement("img"), B._bmpBackgroundWideHover.src = "images/thumbBackgroundWideHover.png", B._bmpBackgroundWideHover.addEventListener("load", function(b) {
                  B._imageLoadCount++, B._imageLoadCount === 5 && (B._downloading = !1, B._imagesLoaded = !0, k.refresh());
                }, !1), B._bmpDropInsertMarker = document.createElement("img"), B._bmpDropInsertMarker.src = "images/dragInsertMarker.png", B._bmpDropInsertMarker.addEventListener("load", function(b) {
                  B._imageLoadCount++, B._imageLoadCount === 5 && (B._downloading = !1, B._imagesLoaded = !0, k.refresh());
                }, !1));
              },
              get_thumbnailSize: function() {
                return this._thumbnailSize;
              },
              set_thumbnailSize: function(k) {
                switch (this._thumbnailSize = k, k) {
                  case 1:
                    this._horzSpacing = 180, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 180;
                    break;
                  case 0:
                    this._horzSpacing = 110, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 110;
                    break;
                }
                return this._updatePaginator(), this.refresh(), k;
              },
              refresh: function() {
                this.width !== window.innerWidth && (this.width = window.innerWidth), this.paint();
              },
              get_rowCount: function() {
                return this._rowCount;
              },
              set_rowCount: function(k) {
                return this._rowCount !== k && (this._rowCount = k, this._updatePaginator()), k;
              },
              _updatePaginator: function() {
              },
              get_colCount: function() {
                return this._colCount;
              },
              set_colCount: function(k) {
                return this._colCount !== k && (this._colCount = k, this._updatePaginator()), k;
              },
              get_itemsPerPage: function() {
                return this._rowCount * this._colCount;
              },
              get_currentPage: function() {
                return this._startIndex / this.get_itemsPerPage();
              },
              get_pageCount: function() {
                return Math.max(1, (this._items.length + this.get_itemsPerPage() - 1 + (this.showAddButton ? 1 : 0)) / this.get_itemsPerPage());
              },
              paint: function() {
                var k = this, b = this.canvas.getContext("2d");
                if (b.fillStyle = "rgb(20, 22, 31)", b.fillRect(0, 0, this.width, this.height), !!B._imagesLoaded) {
                  var Le = this.height - 10 * 2, xe = this.width - 10 * 2;
                  this.set_rowCount(Math.round(Math.max(Le / this._thumbHeight, 1))), this.set_colCount(Math.round(Math.max(xe / this._horzSpacing, 1))), this._horzMultiple = (xe + 13) / this.get_colCount(), this._startIndex = Math.round(this._startIndex / this.get_itemsPerPage() * this.get_itemsPerPage());
                  for (var ze, Se = this._startIndex, Te = 0; Te < this._rowCount; Te++) {
                    for (var D = 0; D < this._colCount; D++) {
                      if (Se >= this._items.length) {
                        (!this._items.length || this.showAddButton) && (ze = Ve.Rectangle.create(this.left + D * this._horzMultiple + 3 + this._startOffset, this.top + Te * this._vertSpacing, this._thumbWidth - 10, 60), b.drawImage(this._thumbnailSize === 1 ? B._bmpBackgroundWide : B._bmpBackground, s.ss.truncate(D * this._horzMultiple) + this._startOffset, Te * this._vertSpacing));
                        break;
                      }
                      ze = Ve.Rectangle.create(this.left + D * this._horzMultiple + 3 + this._startOffset, this.top + Te * this._vertSpacing, this._thumbWidth - 14, 60);
                      var ke = "white";
                      Se === this._hoverItem || Se === this._selectedItem && this._hoverItem === -1 ? (b.drawImage(this._thumbnailSize === 1 ? B._bmpBackgroundWideHover : B._bmpBackgroundHover, this.left + s.ss.truncate(D * this._horzMultiple) + this._startOffset, this.top + Te * this._vertSpacing), ke = "yellow") : b.drawImage(this._thumbnailSize === 1 ? B._bmpBackgroundWide : B._bmpBackground, this.left + s.ss.truncate(D * this._horzMultiple) + this._startOffset, this.top + Te * this._vertSpacing), this._items[Se].set_bounds(Ve.Rectangle.create(this.left + D * this._horzMultiple + this._startOffset, this.top + Te * this._vertSpacing, s.ss.truncate(this._horzMultiple), this._vertSpacing));
                      try {
                        var Fe = this._items[Se].get_thumbnail();
                        Fe != null ? (b.drawImage(Fe, this.left + D * this._horzMultiple + 2 + this._startOffset, this.top + Te * this._vertSpacing + 3), b.strokeStyle = "rgb(0,0,0)", b.rect(this.left + s.ss.truncate(D * this._horzMultiple) + 2 + this._startOffset, this.top + Te * this._vertSpacing + 3, this._items[Se].get_thumbnail().width, this._items[Se].get_thumbnail().height)) : (this._items[Se].set_thumbnail(document.createElement("img")), this._items[Se].get_thumbnail().src = this._items[Se].get_thumbnailUrl(), this._items[Se].get_thumbnail().addEventListener("load", function(He) {
                          k.refresh();
                        }, !1));
                      } catch {
                      }
                      b.fillStyle = ke, b.strokeStyle = ke, b.lineWidth = 1, b.font = "normal 8pt Arial", b.fillText(this._items[Se].get_name(), ze.x, ze.y + ze.height, ze.width), Se++;
                    }
                    if (Se >= this._items.length)
                      break;
                  }
                }
              },
              _getItemIndexFromCursor: function(k) {
                var b = o.Vector2d.create(k.x + this.left, k.y + this.top);
                this.imageClicked = !1;
                var Le = -1, xe = s.ss.truncate(b.x / this._horzMultiple), ze = s.ss.truncate(b.x % this._horzMultiple);
                if (xe >= this._colCount || xe < 0)
                  return -1;
                var Se = s.ss.truncate(b.y / this._vertSpacing), Te = s.ss.truncate(b.y % this._vertSpacing);
                return Se >= this._rowCount || Se < 0 || (Le = this._startIndex + Se * this._colCount + xe, Le === this._items.length ? this._addButtonHover = !0 : this._addButtonHover = !1, Le > this._items.length - 1) ? -1 : (this._items[Le].get_isImage() && Te < 16 && ze > 78 && (this.imageClicked = !0), Le);
              },
              _addItems: function(k) {
                this._items = k;
              }
            };
            (0, a.registerType)("FolderBrowser", [B, Pe, null]);
          }
        ),
        /***/
        "./esm/folder_up.js": (
          /*!**************************!*\
            !*** ./esm/folder_up.js ***!
            \**************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              FolderUp: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./interfaces.js */
              "./esm/interfaces.js"
            ), t = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), l = n(
              /*! ./util.js */
              "./esm/util.js"
            );
            function o() {
              this.parent = null, this._bounds = new l.Rectangle();
            }
            var c = {
              get_name: function() {
                return "Up Level";
              },
              get_thumbnail: function() {
                return this._thumbnail;
              },
              set_thumbnail: function(_) {
                return this._thumbnail = _, _;
              },
              get_thumbnailUrl: function() {
                return t.URLHelpers.singleton.engineAssetUrl("thumb_folderup.jpg");
              },
              set_thumbnailUrl: function(_) {
                return _;
              },
              get_bounds: function() {
                return this._bounds;
              },
              set_bounds: function(_) {
                return this._bounds = _, _;
              },
              get_isImage: function() {
                return !1;
              },
              get_isTour: function() {
                return !1;
              },
              get_isFolder: function() {
                return !1;
              },
              get_isCloudCommunityItem: function() {
                return !1;
              },
              get_readOnly: function() {
                return !1;
              },
              get_children: function() {
                return this.parent == null ? [] : this.parent.get_children();
              }
            };
            (0, s.registerType)("FolderUp", [o, c, null, a.IThumbnail]);
          }
        ),
        /***/
        "./esm/fxyf.js": (
          /*!*********************!*\
            !*** ./esm/fxyf.js ***!
            \*********************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Fxyf: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./healpix_tables.js */
              "./esm/healpix_tables.js"
            ), l = n(
              /*! ./healpix_utils.js */
              "./esm/healpix_utils.js"
            ), o = n(
              /*! ./hploc.js */
              "./esm/hploc.js"
            );
            function c() {
              this.fx = 0, this.fy = 0, this.face = 0, t.HealpixTables.call(this);
            }
            c._halfpi$1 = Math.PI / 2, c._inv_halfpi$1 = 2 / Math.PI, c._twothird$1 = 0.6666666666666666, c.create = function(u, y, g) {
              var Ee = new c();
              return Ee.fx = u, Ee.fy = y, Ee.face = g, Ee;
            }, c._fromHploc$1 = function(u) {
              var y = new c(), g = u.z, Ee = u.phi, Ve = Math.abs(g), Me = l.HealpixUtils.fmodulo(Ee * c._inv_halfpi$1, 4);
              if (Ve <= c._twothird$1) {
                var B = 0.5 + Me, Pe = g * 0.75, k = B - Pe, b = B + Pe, Le = k, xe = b, ze = Le === xe ? Le | 4 : Le < xe ? Le : xe + 8;
                y.fx = l.HealpixUtils.fmodulo(b, 1), y.fy = 1 - l.HealpixUtils.fmodulo(k, 1), y.face = ze;
              } else {
                var Se = Math.min(3, a.ss.truncate(Me)), Te = Me - Se, D;
                Ve < 0.99 || !u.have_sth ? D = Math.sqrt(3 * (1 - Ve)) : D = u.sth / Math.sqrt((1 + Ve) / 3);
                var k = Te * D, b = (1 - Te) * D;
                k >= 1 && (k = 1), b >= 1 && (b = 1), g >= 0 ? (y.fx = 1 - b, y.fy = 1 - k, y.face = Se) : (y.fx = k, y.fy = b, y.face = Se + 8);
              }
              return y;
            }, c.fromVector = function(u) {
              return c._fromHploc$1(o.Hploc.create(u));
            };
            var _ = {
              toHploc: function() {
                var u = new o.Hploc(), y = t.HealpixTables.jrll[this.face] - this.fx - this.fy, g, Ee;
                return y < 1 ? (g = y, Ee = g * g / 3, u.z = 1 - Ee, u.z > 0.99 && (u.sth = Math.sqrt(Ee * (2 - Ee)), u.have_sth = !0)) : y > 3 ? (g = 4 - y, Ee = g * g / 3, u.z = Ee - 1, u.z < -0.99 && (u.sth = Math.sqrt(Ee * (2 - Ee)), u.have_sth = !0)) : (g = 1, u.z = (2 - y) * 2 / 3), Ee = t.HealpixTables.jpll[this.face] * g + this.fx - this.fy, Ee < 0 && (Ee += 8), Ee >= 8 && (Ee -= 8), u.phi = g < 1e-15 ? 0 : 0.5 * c._halfpi$1 * Ee / g, u;
              },
              toVec3: function() {
                return this.toHploc().toVec3();
              }
            };
            (0, s.registerType)("Fxyf", [c, _, t.HealpixTables]);
          }
        ),
        /***/
        "./esm/graphics/gl_buffers.js": (
          /*!************************************!*\
            !*** ./esm/graphics/gl_buffers.js ***!
            \************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              IndexBuffer: () => (
                /* binding */
                _
              ),
              /* harmony export */
              KeplerVertexBuffer: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              PositionColoredTexturedVertexBuffer: () => (
                /* binding */
                We
              ),
              /* harmony export */
              PositionColoredVertexBuffer: () => (
                /* binding */
                Fe
              ),
              /* harmony export */
              PositionNormalTexturedTangentVertexBuffer: () => (
                /* binding */
                b
              ),
              /* harmony export */
              PositionNormalTexturedVertexBuffer: () => (
                /* binding */
                Pe
              ),
              /* harmony export */
              PositionTextureVertexBuffer: () => (
                /* binding */
                Me
              ),
              /* harmony export */
              PositionVertexBuffer: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              ShortIndexBuffer: () => (
                /* binding */
                o
              ),
              /* harmony export */
              TimeSeriesLineVertexBuffer: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              TimeSeriesPointVertexBuffer: () => (
                /* binding */
                D
              ),
              /* harmony export */
              VertexBufferBase: () => (
                /* binding */
                y
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ./webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            );
            function o($) {
              this.buffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(l.WEBGL.ELEMENT_ARRAY_BUFFER, this.buffer), t.tilePrepDevice.bufferData(l.WEBGL.ELEMENT_ARRAY_BUFFER, $, l.WEBGL.STATIC_DRAW);
            }
            var c = {};
            (0, s.registerType)("ShortIndexBuffer", [o, c, null]);
            function _($) {
              this.buffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(l.WEBGL.ELEMENT_ARRAY_BUFFER, this.buffer), t.tilePrepDevice.bufferData(l.WEBGL.ELEMENT_ARRAY_BUFFER, $, l.WEBGL.STATIC_DRAW);
            }
            var u = {
              dispose: function() {
                t.tilePrepDevice.bindBuffer(l.WEBGL.ELEMENT_ARRAY_BUFFER, null), t.tilePrepDevice.deleteBuffer(this.buffer), this.buffer = null;
              }
            };
            (0, s.registerType)("IndexBuffer", [_, u, null, a.ss.IDisposable]);
            function y() {
            }
            var g = {
              dispose: function() {
                t.tilePrepDevice.bindBuffer(l.WEBGL.ARRAY_BUFFER, null), t.tilePrepDevice.deleteBuffer(this.vertexBuffer), this.vertexBuffer = null;
              }
            };
            (0, s.registerType)("VertexBufferBase", [y, g, null, a.ss.IDisposable]);
            function Ee($) {
              this.count = 0, this._verts$1 = null, y.call(this), this.count = $;
            }
            var Ve = {
              lock: function() {
                return this._verts$1 = new Array(this.count), this._verts$1;
              },
              unlock: function() {
                this.vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(l.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                for (var $ = new Float32Array(this.count * 3), De = $, Re = 0, Ie = a.ss.enumerate(this._verts$1); Ie.moveNext(); ) {
                  var O = Ie.current;
                  De[Re++] = O.x, De[Re++] = O.y, De[Re++] = O.z;
                }
                t.tilePrepDevice.bufferData(l.WEBGL.ARRAY_BUFFER, $, l.WEBGL.STATIC_DRAW);
              }
            };
            (0, s.registerType)("PositionVertexBuffer", [Ee, Ve, y]);
            function Me($) {
              this.count = 0, this._verts$1 = null, y.call(this), this.count = $;
            }
            Me.create = function($) {
              var De = new Me($.length);
              return De._verts$1 = $, De.unlock(), De;
            };
            var B = {
              lock: function() {
                return this._verts$1 = new Array(this.count), this._verts$1;
              },
              unlock: function() {
                this.vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(l.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                for (var $ = new Float32Array(this.count * 5), De = $, Re = 0, Ie = a.ss.enumerate(this._verts$1); Ie.moveNext(); ) {
                  var O = Ie.current;
                  De[Re++] = O.position.x, De[Re++] = O.position.y, De[Re++] = O.position.z, De[Re++] = O.tu, De[Re++] = O.tv;
                }
                t.tilePrepDevice.bufferData(l.WEBGL.ARRAY_BUFFER, $, l.WEBGL.STATIC_DRAW);
              }
            };
            (0, s.registerType)("PositionTextureVertexBuffer", [Me, B, y]);
            function Pe($) {
              this.count = 0, this._verts$1 = null, y.call(this), this.count = $;
            }
            Pe.create = function($) {
              var De = new Pe($.length);
              return De._verts$1 = $, De.unlock(), De;
            };
            var k = {
              lock: function() {
                return this._verts$1 = new Array(this.count), this._verts$1;
              },
              unlock: function() {
                this.vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(l.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                for (var $ = new Float32Array(this.count * 8), De = $, Re = 0, Ie = a.ss.enumerate(this._verts$1); Ie.moveNext(); ) {
                  var O = Ie.current;
                  De[Re++] = O.x, De[Re++] = O.y, De[Re++] = O.z, De[Re++] = O.nx, De[Re++] = O.ny, De[Re++] = O.nz, De[Re++] = O.tu, De[Re++] = O.tv;
                }
                t.tilePrepDevice.bufferData(l.WEBGL.ARRAY_BUFFER, $, l.WEBGL.STATIC_DRAW);
              }
            };
            (0, s.registerType)("PositionNormalTexturedVertexBuffer", [Pe, k, y]);
            function b($) {
              this.count = 0, this._verts$1 = null, y.call(this), this.count = $;
            }
            b.create = function($) {
              var De = new b($.length);
              return De._verts$1 = $, De.unlock(), De;
            };
            var Le = {
              lock: function() {
                return this._verts$1 = new Array(this.count), this._verts$1;
              },
              unlock: function() {
                this.vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(l.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                for (var $ = new Float32Array(this.count * 11), De = $, Re = 0, Ie = a.ss.enumerate(this._verts$1); Ie.moveNext(); ) {
                  var O = Ie.current;
                  De[Re++] = O.x, De[Re++] = O.y, De[Re++] = O.z, De[Re++] = O.nx, De[Re++] = O.ny, De[Re++] = O.nz, De[Re++] = O.tanx, De[Re++] = O.tany, De[Re++] = O.tanz, De[Re++] = O.tu, De[Re++] = O.tv;
                }
                t.tilePrepDevice.bufferData(l.WEBGL.ARRAY_BUFFER, $, l.WEBGL.STATIC_DRAW);
              }
            };
            (0, s.registerType)("PositionNormalTexturedTangentVertexBuffer", [b, Le, y]);
            function xe($) {
              this.count = 0, this._verts$1 = null, y.call(this), this.count = $;
            }
            xe.create = function($) {
              var De = new xe($.length);
              return De._verts$1 = $, De;
            };
            var ze = {
              lock: function() {
                return this._verts$1 = new Array(this.count), this._verts$1;
              },
              unlock: function() {
                this.vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(l.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                for (var $ = new Float32Array(this.count * 19), De = $, Re = 0, Ie = a.ss.enumerate(this._verts$1); Ie.moveNext(); ) {
                  var O = Ie.current;
                  De[Re++] = O.ABC.x, De[Re++] = O.ABC.y, De[Re++] = O.ABC.z, De[Re++] = O.abc1.x, De[Re++] = O.abc1.y, De[Re++] = O.abc1.z, De[Re++] = O.pointSize, De[Re++] = O.color.r / 255, De[Re++] = O.color.g / 255, De[Re++] = O.color.b / 255, De[Re++] = O.color.a / 255, De[Re++] = O.w, De[Re++] = O.e, De[Re++] = O.n, De[Re++] = O.t, De[Re++] = O.a, De[Re++] = O.z, De[Re++] = O.orbitPos, De[Re++] = O.orbits;
                }
                t.tilePrepDevice.bufferData(l.WEBGL.ARRAY_BUFFER, $, l.WEBGL.STATIC_DRAW);
              }
            };
            (0, s.registerType)("KeplerVertexBuffer", [xe, ze, y]);
            function Se($) {
              this.count = 0, this._verts$1 = null, y.call(this), this.count = $;
            }
            var Te = {
              lock: function() {
                return this._verts$1 = new Array(this.count), this._verts$1;
              },
              unlock: function() {
                this.vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(l.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                for (var $ = new Float32Array(this.count * 9), De = $, Re = 0, Ie = a.ss.enumerate(this._verts$1); Ie.moveNext(); ) {
                  var O = Ie.current;
                  De[Re++] = O.position.x, De[Re++] = O.position.y, De[Re++] = O.position.z, De[Re++] = O.get_color().r / 255, De[Re++] = O.get_color().g / 255, De[Re++] = O.get_color().b / 255, De[Re++] = O.get_color().a / 255, De[Re++] = O.tu, De[Re++] = O.tv;
                }
                t.tilePrepDevice.bufferData(l.WEBGL.ARRAY_BUFFER, $, l.WEBGL.STATIC_DRAW);
              }
            };
            (0, s.registerType)("TimeSeriesLineVertexBuffer", [Se, Te, y]);
            function D($) {
              this.count = 0, this._verts$1 = null, y.call(this), this.count = $;
            }
            var ke = {
              lock: function() {
                return this._verts$1 = new Array(this.count), this._verts$1;
              },
              unlock: function() {
                this.vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(l.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                for (var $ = new Float32Array(this.count * 10), De = $, Re = 0, Ie = a.ss.enumerate(this._verts$1); Ie.moveNext(); ) {
                  var O = Ie.current;
                  De[Re++] = O.position.x, De[Re++] = O.position.y, De[Re++] = O.position.z, De[Re++] = O.get_color().r / 255, De[Re++] = O.get_color().g / 255, De[Re++] = O.get_color().b / 255, De[Re++] = O.get_color().a / 255, De[Re++] = O.tu, De[Re++] = O.tv, De[Re++] = O.pointSize;
                }
                t.tilePrepDevice.bufferData(l.WEBGL.ARRAY_BUFFER, $, l.WEBGL.STATIC_DRAW);
              },
              dispose: function() {
                t.tilePrepDevice.bindBuffer(l.WEBGL.ARRAY_BUFFER, null), t.tilePrepDevice.deleteBuffer(this.vertexBuffer), this.vertexBuffer = null;
              }
            };
            (0, s.registerType)("TimeSeriesPointVertexBuffer", [D, ke, y]);
            function Fe($) {
              this.count = 0, this._verts$1 = null, y.call(this), this.count = $;
            }
            var He = {
              lock: function() {
                return this._verts$1 = new Array(this.count), this._verts$1;
              },
              unlock: function() {
                this.vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(l.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                for (var $ = new Float32Array(this.count * 7), De = $, Re = 0, Ie = a.ss.enumerate(this._verts$1); Ie.moveNext(); ) {
                  var O = Ie.current;
                  De[Re++] = O.position.x, De[Re++] = O.position.y, De[Re++] = O.position.z, De[Re++] = O.color.r / 255, De[Re++] = O.color.g / 255, De[Re++] = O.color.b / 255, De[Re++] = O.color.a / 255;
                }
                t.tilePrepDevice.bufferData(l.WEBGL.ARRAY_BUFFER, $, l.WEBGL.STATIC_DRAW);
              }
            };
            (0, s.registerType)("PositionColoredVertexBuffer", [Fe, He, y]);
            function We($) {
              this.count = 0, this._verts$1 = null, y.call(this), this.count = $;
            }
            var Ke = {
              lock: function() {
                return this._verts$1 = new Array(this.count), this._verts$1;
              },
              unlock: function() {
                this.vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(l.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                for (var $ = new Float32Array(this.count * 9), De = $, Re = 0, Ie = a.ss.enumerate(this._verts$1); Ie.moveNext(); ) {
                  var O = Ie.current;
                  De[Re++] = O.position.x, De[Re++] = O.position.y, De[Re++] = O.position.z, De[Re++] = O.color.r / 255, De[Re++] = O.color.g / 255, De[Re++] = O.color.b / 255, De[Re++] = O.color.a / 255, De[Re++] = O.tu, De[Re++] = O.tv;
                }
                t.tilePrepDevice.bufferData(l.WEBGL.ARRAY_BUFFER, $, l.WEBGL.STATIC_DRAW);
              }
            };
            (0, s.registerType)("PositionColoredTexturedVertexBuffer", [We, Ke, y]);
          }
        ),
        /***/
        "./esm/graphics/primitives3d.js": (
          /*!**************************************!*\
            !*** ./esm/graphics/primitives3d.js ***!
            \**************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CullMode: () => (
                /* binding */
                g
              ),
              /* harmony export */
              DataItem: () => (
                /* binding */
                Ve
              ),
              /* harmony export */
              Dates: () => (
                /* binding */
                B
              ),
              /* harmony export */
              LineList: () => (
                /* binding */
                ze
              ),
              /* harmony export */
              OrbitLineList: () => (
                /* binding */
                Le
              ),
              /* harmony export */
              PointList: () => (
                /* binding */
                He
              ),
              /* harmony export */
              PointScaleTypes: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              SimpleLineList: () => (
                /* binding */
                k
              ),
              /* harmony export */
              TimeSeriesLineVertex: () => (
                /* binding */
                Ke
              ),
              /* harmony export */
              TimeSeriesPointVertex: () => (
                /* binding */
                De
              ),
              /* harmony export */
              TriangleFanList: () => (
                /* binding */
                ke
              ),
              /* harmony export */
              TriangleList: () => (
                /* binding */
                Te
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ../color.js */
              "./esm/color.js"
            ), o = n(
              /*! ../url_helpers.js */
              "./esm/url_helpers.js"
            ), c = n(
              /*! ./webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), _ = n(
              /*! ./gl_buffers.js */
              "./esm/graphics/gl_buffers.js"
            ), u = n(
              /*! ./texture.js */
              "./esm/graphics/texture.js"
            ), y = n(
              /*! ./shaders.js */
              "./esm/graphics/shaders.js"
            ), g = {
              none: 0,
              counterClockwise: 2,
              clockwise: 1
            };
            (0, s.registerType)("CullMode", g), (0, s.registerEnum)("CullMode", g);
            var Ee = {
              linear: 0,
              power: 1,
              log: 2,
              constant: 3,
              stellarMagnitude: 4
            };
            (0, s.registerType)("PointScaleTypes", Ee), (0, s.registerEnum)("PointScaleTypes", Ee);
            function Ve() {
              this.size = 0;
            }
            var Me = {
              getColor: function() {
                return "Red";
              }
            };
            (0, s.registerType)("DataItem", [Ve, Me, null]);
            function B(Ie, O) {
              this.startDate = 0, this.endDate = 0, this.startDate = Ie, this.endDate = O;
            }
            B.empty = function() {
              return new B(0, 0);
            };
            var Pe = {
              copy: function() {
                return new B(this.startDate, this.endDate);
              }
            };
            (0, s.registerType)("Dates", [B, Pe, null]);
            function k() {
              this._zBuffer = !0, this._linePoints = [], this._usingLocalCenter = !1, this.sky = !0, this.aaFix = !0, this.pure2D = !1, this.viewTransform = t.Matrix3d.get_identity(), this._lineBuffers = [], this._lineBufferCounts = [], this.useLocalCenters = !1;
            }
            var b = {
              get_depthBuffered: function() {
                return this._zBuffer;
              },
              set_depthBuffered: function(Ie) {
                return this._zBuffer = Ie, Ie;
              },
              addLine: function(Ie, O) {
                this._linePoints.push(Ie), this._linePoints.push(O), this._emptyLineBuffer();
              },
              clear: function() {
                this._linePoints.length = 0, this._emptyLineBuffer();
              },
              drawLines: function(Ie, O, Ue) {
                if (!(this._linePoints.length < 2)) {
                  this._initLineBuffer(Ie);
                  var $e = this._linePoints.length;
                  if (Ie.gl == null) {
                    var Ze = t.Vector3d._transformCoordinate(Ie.get_viewPoint(), this.viewTransform), Qe = Ie.device;
                    Qe.save(), Qe.strokeStyle = Ue.toString(), Qe.lineWidth = 2, Qe.globalAlpha = 0.25;
                    for (var Ae = new t.Vector3d(), Ne = new t.Vector3d(), Be = 0; Be < $e; Be += 2)
                      Ae = Ie.WVP.transform(this._linePoints[Be]), Ne = Ie.WVP.transform(this._linePoints[Be + 1]), t.Vector3d.dot(this._linePoints[Be], Ze) > 0.6 && (Qe.beginPath(), Qe.moveTo(Ae.x, Ae.y), Qe.lineTo(Ne.x, Ne.y), Qe.stroke());
                    Qe.restore();
                  } else
                    for (var Ge = a.ss.enumerate(this._lineBuffers); Ge.moveNext(); ) {
                      var Ye = Ge.current;
                      this.pure2D ? y.SimpleLineShader2D.use(Ie, Ye.vertexBuffer, Ue, this._zBuffer) : y.SimpleLineShader.use(Ie, Ye.vertexBuffer, Ue, this._zBuffer), Ie.gl.drawArrays(c.WEBGL.LINES, 0, Ye.count);
                    }
                }
              },
              _initLineBuffer: function(Ie) {
                if (Ie.gl != null && !this._lineBuffers.length) {
                  var O = this._linePoints.length, Ue = null, $e = null;
                  if (this._localCenter = new t.Vector3d(), this.get_depthBuffered()) {
                    for (var Ze = a.ss.enumerate(this._linePoints); Ze.moveNext(); ) {
                      var Qe = Ze.current;
                      this._localCenter.add(Qe);
                    }
                    this._localCenter.x /= O, this._localCenter.y /= O, this._localCenter.z /= O;
                  }
                  for (var Ae = O, Ne = 0, Be, Ge = a.ss.enumerate(this._linePoints); Ge.moveNext(); ) {
                    var Qe = Ge.current;
                    if (Ne >= 1e5 || $e == null) {
                      Ue != null && Ue.unlock();
                      var Ye = Math.min(1e5, Ae);
                      Ae -= Ye, Ue = new _.PositionVertexBuffer(Ye), $e = Ue.lock(), this._lineBuffers.push(Ue), this._lineBufferCounts.push(Ye), Ne = 0;
                    }
                    this.useLocalCenters ? (Be = t.Vector3d.subtractVectors(Qe, this._localCenter), $e[Ne] = Be) : $e[Ne] = Qe, Ne++;
                  }
                  Ue != null && Ue.unlock();
                }
              },
              _emptyLineBuffer: function() {
              }
            };
            (0, s.registerType)("SimpleLineList", [k, b, null]);
            function Le() {
              this._zBuffer = !0, this._linePoints = [], this._lineColors = [], this.sky = !0, this.aaFix = !0, this.viewTransform = t.Matrix3d.get_identity(), this._lineBuffers = [], this._lineBufferCounts = [], this.useLocalCenters = !1;
            }
            var xe = {
              get_depthBuffered: function() {
                return this._zBuffer;
              },
              set_depthBuffered: function(Ie) {
                return this._zBuffer = Ie, Ie;
              },
              addLine: function(Ie, O, Ue, $e) {
                this._linePoints.push(Ie), this._lineColors.push(Ue), this._linePoints.push(O), this._lineColors.push($e), this._emptyLineBuffer();
              },
              clear: function() {
                this._linePoints.length = 0, this._emptyLineBuffer();
              },
              drawLines: function(Ie, O, Ue) {
                if (!(this._linePoints.length < 2)) {
                  this._initLineBuffer(Ie), this._linePoints.length;
                  for (var $e = a.ss.enumerate(this._lineBuffers); $e.moveNext(); ) {
                    var Ze = $e.current;
                    y.OrbitLineShader.use(Ie, Ze.vertexBuffer, Ue), Ie.gl.drawArrays(c.WEBGL.LINES, 0, Ze.count);
                  }
                }
              },
              _initLineBuffer: function(Ie) {
                if (Ie.gl != null && !this._lineBuffers.length) {
                  var O = this._linePoints.length, Ue = null, $e = null;
                  if (this._localCenter = new t.Vector3d(), this.get_depthBuffered()) {
                    for (var Ze = a.ss.enumerate(this._linePoints); Ze.moveNext(); ) {
                      var Qe = Ze.current;
                      this._localCenter.add(Qe);
                    }
                    this._localCenter.x /= O, this._localCenter.y /= O, this._localCenter.z /= O;
                  }
                  for (var Ae = O, Ne = 0, Be = 0, Ge, Ye = a.ss.enumerate(this._linePoints); Ye.moveNext(); ) {
                    var Qe = Ye.current;
                    if (Be >= 1e5 || $e == null) {
                      Ue != null && Ue.unlock();
                      var je = Math.min(1e5, Ae);
                      Ae -= je, Ue = new _.PositionColoredVertexBuffer(je), $e = Ue.lock(), this._lineBuffers.push(Ue), this._lineBufferCounts.push(je), Be = 0;
                    }
                    this.useLocalCenters ? (Ge = t.Vector3d.subtractVectors(Qe, this._localCenter), $e[Be] = new t.PositionColored(Ge, this._lineColors[Ne])) : $e[Be] = new t.PositionColored(Qe, this._lineColors[Ne]), Ne++, Be++;
                  }
                  Ue != null && Ue.unlock();
                }
              },
              _emptyLineBuffer: function() {
                for (var Ie = a.ss.enumerate(this._lineBuffers); Ie.moveNext(); ) {
                  var O = Ie.current;
                  O.dispose();
                }
                this._lineBuffers.length = 0;
              }
            };
            (0, s.registerType)("OrbitLineList", [Le, xe, null]);
            function ze() {
              this._zBuffer = !0, this.timeSeries = !1, this.showFarSide = !0, this.sky = !1, this.decay = 0, this.useNonRotatingFrame = !1, this.jNow = 0, this._linePoints = [], this._lineColors = [], this._lineDates = [], this._usingLocalCenter = !0, this._lineBuffers = [], this._lineBufferCounts = [];
            }
            var Se = {
              get_depthBuffered: function() {
                return this._zBuffer;
              },
              set_depthBuffered: function(Ie) {
                return this._zBuffer = Ie, Ie;
              },
              addLine: function(Ie, O, Ue, $e) {
                this._linePoints.push(Ie), this._linePoints.push(O), this._lineColors.push(Ue), this._lineDates.push($e), this._emptyLineBuffer();
              },
              addLineNoDate: function(Ie, O, Ue) {
                this._linePoints.push(Ie), this._linePoints.push(O), this._lineColors.push(Ue), this._lineDates.push(new B(0, 0)), this._emptyLineBuffer();
              },
              clear: function() {
                this._linePoints.length = 0, this._lineColors.length = 0, this._lineDates.length = 0;
              },
              drawLines: function(Ie, O) {
                if (!(this._linePoints.length < 2 || O <= 0) && Ie.gl != null) {
                  this._initLineBuffer();
                  for (var Ue = a.ss.enumerate(this._lineBuffers); Ue.moveNext(); ) {
                    var $e = Ue.current;
                    y.LineShaderNormalDates.use(Ie, $e.vertexBuffer, l.Color.fromArgb(255, 255, 255, 255), this._zBuffer, this.jNow, this.timeSeries ? this.decay : 0), Ie.gl.drawArrays(c.WEBGL.LINES, 0, $e.count);
                  }
                }
              },
              _initLineBuffer: function() {
                if (!this._lineBuffers.length) {
                  for (var Ie = this._linePoints.length, O = null, Ue = null, $e = Ie, Ze = 0, Qe = 0, Ae, Ne = a.ss.enumerate(this._linePoints); Ne.moveNext(); ) {
                    var Be = Ne.current;
                    if (Qe >= 1e5 || Ue == null) {
                      O != null && O.unlock();
                      var Ge = Math.min(1e5, $e);
                      $e -= Ge, O = new _.TimeSeriesLineVertexBuffer(Ge), Ue = O.lock(), this._lineBuffers.push(O), this._lineBufferCounts.push(Ge), Qe = 0;
                    }
                    var Ye = a.ss.truncate(Ze / 2);
                    Ae = Be, Ue[Qe] = new Ke(), Ue[Qe].position = Ae, Ue[Qe].normal = Be, Ue[Qe].tu = this._lineDates[Ye].startDate, Ue[Qe].tv = this._lineDates[Ye].endDate, Ue[Qe].set_color(this._lineColors[Ye]), Ze++, Qe++;
                  }
                  O != null && O.unlock();
                }
              },
              _emptyLineBuffer: function() {
              }
            };
            (0, s.registerType)("LineList", [ze, Se, null]);
            function Te() {
              this._trianglePoints = [], this._triangleColors = [], this._triangleDates = [], this.timeSeries = !1, this.showFarSide = !1, this.sky = !1, this.depthBuffered = !0, this.writeZbuffer = !1, this.decay = 0, this.autoTime = !0, this.jNow = 0, this._dataToDraw = !1, this._triangleBuffers = [], this._triangleBufferCounts = [];
            }
            var D = {
              addTriangle: function(Ie, O, Ue, $e, Ze) {
                this._trianglePoints.push(Ie), this._trianglePoints.push(O), this._trianglePoints.push(Ue), this._triangleColors.push($e), this._triangleDates.push(Ze), this._emptyTriangleBuffer();
              },
              addSubdividedTriangles: function(Ie, O, Ue, $e, Ze, Qe) {
                if (Qe--, Qe < 0)
                  this.addTriangle(Ie, O, Ue, $e, Ze);
                else {
                  var Ae, Ne, Be;
                  Ae = t.Vector3d.midPointByLength(Ie, O), Ne = t.Vector3d.midPointByLength(O, Ue), Be = t.Vector3d.midPointByLength(Ue, Ie), this.addSubdividedTriangles(Ie, Ae, Be, $e, Ze, Qe), this.addSubdividedTriangles(Ae, Ne, Be, $e, Ze, Qe), this.addSubdividedTriangles(Ae, O, Ne, $e, Ze, Qe), this.addSubdividedTriangles(Ne, Ue, Be, $e, Ze, Qe);
                }
              },
              addQuad: function(Ie, O, Ue, $e, Ze, Qe) {
                this._trianglePoints.push(Ie), this._trianglePoints.push(Ue), this._trianglePoints.push(O), this._trianglePoints.push(O), this._trianglePoints.push(Ue), this._trianglePoints.push($e), this._triangleColors.push(Ze), this._triangleDates.push(Qe), this._triangleColors.push(Ze), this._triangleDates.push(Qe), this._emptyTriangleBuffer();
              },
              clear: function() {
                this._triangleColors.length = 0, this._trianglePoints.length = 0, this._triangleDates.length = 0, this._emptyTriangleBuffer();
              },
              _emptyTriangleBuffer: function() {
              },
              _initTriangleBuffer: function() {
                if (!this._triangleBuffers.length) {
                  for (var Ie = this._trianglePoints.length, O = null, Ue = null, $e = Ie, Ze = 0, Qe = 0, Ae = a.ss.enumerate(this._trianglePoints); Ae.moveNext(); ) {
                    var Ne = Ae.current;
                    if (Qe >= 9e4 || O == null) {
                      O != null && O.unlock();
                      var Be = Math.min(9e4, $e);
                      $e -= Be, O = new _.TimeSeriesLineVertexBuffer(Be), this._triangleBuffers.push(O), this._triangleBufferCounts.push(Be), Ue = O.lock(), Qe = 0;
                    }
                    Ue[Qe] = new Ke(), Ue[Qe].position = Ne, Ue[Qe].normal = Ne;
                    var Ge = a.ss.truncate(Ze / 3);
                    Ue[Qe].set_color(this._triangleColors[Ge]), Ue[Qe].tu = this._triangleDates[Ge].startDate, Ue[Qe].tv = this._triangleDates[Ge].endDate, Ze++, Qe++;
                  }
                  O != null && O.unlock(), this._triangleColors.length = 0, this._triangleDates.length = 0, this._trianglePoints.length = 0, this._dataToDraw = !0;
                }
              },
              draw: function(Ie, O, Ue) {
                if (!(this._trianglePoints.length < 1 && !this._dataToDraw) && Ie.gl != null) {
                  this._initTriangleBuffer();
                  for (var $e = a.ss.enumerate(this._triangleBuffers); $e.moveNext(); ) {
                    var Ze = $e.current;
                    y.LineShaderNormalDates.use(Ie, Ze.vertexBuffer, l.Color.fromArgb(255, 255, 255, 255), this.depthBuffered, this.jNow, this.timeSeries ? this.decay : 0), Ie.gl.drawArrays(c.WEBGL.TRIANGLES, 0, Ze.count);
                  }
                }
              }
            };
            (0, s.registerType)("TriangleList", [Te, D, null]);
            function ke() {
              this._zBuffer = !0, this.timeSeries = !1, this.decay = 0, this.jNow = 0, this._shapes = [], this._colors = [], this._dates = [], this._buffers = [], this._bufferCounts = [];
            }
            var Fe = {
              get_depthBuffered: function() {
                return this._zBuffer;
              },
              set_depthBuffered: function(Ie) {
                return this._zBuffer = Ie, Ie;
              },
              addShape: function(Ie, O, Ue) {
                this._shapes.push(Ie), this._colors.push(O), this._dates.push(Ue);
              },
              draw: function(Ie, O) {
                if (!(O <= 0) && Ie.gl != null) {
                  this._initBuffer();
                  for (var Ue = a.ss.enumerate(this._buffers); Ue.moveNext(); ) {
                    var $e = Ue.current;
                    y.LineShaderNormalDates.use(Ie, $e.vertexBuffer, l.Color.fromArgb(255, 255, 255, 255), this._zBuffer, this.jNow, this.timeSeries ? this.decay : 0), Ie.gl.drawArrays(c.WEBGL.TRIANGLE_FAN, 0, $e.count);
                  }
                }
              },
              _initBuffer: function() {
                if (this._buffers.length !== this._shapes.length) {
                  this._buffers.length = 0;
                  for (var Ie = 0, O = a.ss.enumerate(this._shapes); O.moveNext(); ) {
                    var Ue = O.current, $e = new _.TimeSeriesLineVertexBuffer(Ue.length), Ze = $e.lock();
                    this._buffers.push($e), this._bufferCounts.push(Ue.length);
                    for (var Qe = 0, Ae = a.ss.enumerate(Ue); Ae.moveNext(); ) {
                      var Ne = Ae.current;
                      Ze[Qe] = new Ke(), Ze[Qe].position = Ne, Ze[Qe].tu = this._dates[Ie].startDate, Ze[Qe].tv = this._dates[Ie].endDate, Ze[Qe].set_color(this._colors[Ie]), Qe++;
                    }
                    Ie++, $e != null && $e.unlock();
                  }
                }
              }
            };
            (0, s.registerType)("TriangleFanList", [ke, Fe, null]);
            function He(Ie) {
              this._points = [], this._colors = [], this._dates = [], this._sizes = [], this.timeSeries = !1, this.showFarSide = !1, this.sky = !1, this.depthBuffered = !0, this.decay = 0, this.scale = 1, this.autoTime = !0, this.jNow = 0, this._dataToDraw = !1, this.items = [], this._imageReady = !1, this._init = !1, this.minSize = 2, this._pointBuffers = [], this._pointBufferCounts = [], this._device = Ie;
            }
            He.starTexture = null;
            var We = {
              addPoint: function(Ie, O, Ue, $e) {
                this._points.push(Ie), this._colors.push(O._clone()), this._dates.push(Ue), this._sizes.push($e), this._emptyPointBuffer();
              },
              clear: function() {
                this._colors.length = 0, this._points.length = 0, this._dates.length = 0, this._sizes.length = 0, this._emptyPointBuffer();
              },
              _emptyPointBuffer: function() {
                for (var Ie = a.ss.enumerate(this._pointBuffers); Ie.moveNext(); ) {
                  var O = Ie.current;
                  O.dispose();
                }
                this._pointBuffers.length = 0, this._init = !1;
              },
              _initBuffer: function(Ie) {
                var O = this;
                if (!this._init) {
                  if (Ie.gl == null) {
                    this._starProfile = document.createElement("img"), this._starProfile.addEventListener("load", function(lt) {
                      O._imageReady = !0;
                    }, !1), this._starProfile.src = o.URLHelpers.singleton.engineAssetUrl("StarProfileAlpha.png"), this._worldList = new Array(this._points.length), this._transformedList = new Array(this._points.length);
                    for (var Ue = 0, $e = a.ss.enumerate(this._points); $e.moveNext(); ) {
                      var Ze = $e.current, Qe = new Ve();
                      Qe.location = Ze, Qe.tranformed = new t.Vector3d(), Qe.size = this._sizes[Ue], Qe.color = this._colors[Ue], this._worldList[Ue] = Qe.location, this._transformedList[Ue] = Qe.tranformed, this.items.push(Qe), Ue++;
                    }
                  } else if (!this._pointBuffers.length) {
                    He.starTexture == null && (He.starTexture = u.Texture.fromUrl(o.URLHelpers.singleton.engineAssetUrl("StarProfileAlpha.png")));
                    for (var Ae = this._points.length, Ne = null, Be = null, Ge = Ae, Ue = 0, Ye = 0, je = a.ss.enumerate(this._points); je.moveNext(); ) {
                      var ht = je.current;
                      if (Ye >= 1e5 || Be == null) {
                        Ne != null && Ne.unlock();
                        var qe = Math.min(1e5, Ge);
                        Ge -= qe, Ne = new _.TimeSeriesPointVertexBuffer(qe), Be = Ne.lock(), this._pointBuffers.push(Ne), this._pointBufferCounts.push(qe), Ye = 0;
                      }
                      Be[Ye] = new De(), Be[Ye].position = ht, Be[Ye].pointSize = this._sizes[Ue], Be[Ye].tu = this._dates[Ue].startDate, Be[Ye].tv = this._dates[Ue].endDate, Be[Ye].set_color(this._colors[Ue]), Ue++, Ye++;
                    }
                    Ne != null && Ne.unlock();
                  }
                  this._init = !0;
                }
              },
              draw: function(Ie, O, Ue) {
                if (this._initBuffer(Ie), Ie.gl == null) {
                  if (!this._imageReady)
                    return;
                  Ie.device.save(), Ie.WVP.projectArrayToScreen(this._worldList, this._transformedList);
                  var $e = Ie.device;
                  $e.globalAlpha = 0.4;
                  var Ze = Ie.width, Qe = Ie.height;
                  t.Vector3d.makeCopy(Ie.get_viewPoint());
                  for (var Ae = Ie.get_fovScale() / 100, Ne = a.ss.enumerate(this.items); Ne.moveNext(); ) {
                    var Be = Ne.current;
                    if (Be.tranformed.z < 1) {
                      var Ge = Be.tranformed.x, Ye = Be.tranformed.y, je = 0.1 * Be.size / Ae, ht = je / 2;
                      Ge > -ht && Ge < Ze + ht && Ye > -ht && Ye < Qe + ht && ($e.beginPath(), $e.fillStyle = Be.color.toFormat(), $e.arc(Ge, Ye, je, 0, Math.PI * 2, !0), $e.fill());
                    }
                  }
                  Ie.device.restore();
                } else {
                  var qe = new t.Vector3d(), lt = t.Matrix3d.multiplyMatrix(Ie.get_world(), Ie.get_view());
                  lt.invert();
                  for (var ft = t.Vector3d._transformCoordinate(qe, lt), _t = a.ss.enumerate(this._pointBuffers); _t.moveNext(); ) {
                    var St = _t.current;
                    y.TimeSeriesPointSpriteShader.use(Ie, St.vertexBuffer, He.starTexture.texture2d, l.Color.fromArgb(255 * O, 255, 255, 255), this.depthBuffered, this.jNow, this.timeSeries ? this.decay : 0, ft, this.scale * (Ie.height / 960), this.minSize, this.showFarSide, this.sky), Ie.gl.drawArrays(c.WEBGL.POINTS, 0, St.count);
                  }
                }
              },
              drawTextured: function(Ie, O, Ue) {
                this._initBuffer(Ie);
                var $e = new t.Vector3d(), Ze = t.Matrix3d.multiplyMatrix(Ie.get_world(), Ie.get_view());
                Ze.invert();
                for (var Qe = t.Vector3d._transformCoordinate($e, Ze), Ae = a.ss.enumerate(this._pointBuffers); Ae.moveNext(); ) {
                  var Ne = Ae.current;
                  y.TimeSeriesPointSpriteShader.use(Ie, Ne.vertexBuffer, O, l.Color.fromArgb(255 * Ue, 255, 255, 255), this.depthBuffered, this.jNow, this.decay, Qe, this.scale * (Ie.height / 960), this.minSize, this.showFarSide, this.sky), Ie.gl.drawArrays(c.WEBGL.POINTS, 0, Ne.count);
                }
              }
            };
            (0, s.registerType)("PointList", [He, We, null]);
            function Ke() {
              this.position = new t.Vector3d(), this.normal = new t.Vector3d(), this.tu = 0, this.tv = 0;
            }
            Ke.create = function(Ie, O, Ue, $e) {
              var Ze = new Ke();
              return Ze.position = Ie, Ze.normal = O, Ze.tu = Ue, Ze.tv = 0, Ze.color = $e, Ze;
            };
            var $ = {
              get_color: function() {
                return this.color;
              },
              set_color: function(Ie) {
                return this.color = Ie, Ie;
              }
            };
            (0, s.registerType)("TimeSeriesLineVertex", [Ke, $, null]);
            function De() {
              this.pointSize = 0, this.tu = 0, this.tv = 0;
            }
            De.create = function(Ie, O, Ue, $e) {
              var Ze = new De();
              return Ze.position = Ie, Ze.pointSize = O, Ze.tu = Ue, Ze.tv = 0, Ze.color = $e, Ze;
            };
            var Re = {
              get_color: function() {
                return this.color;
              },
              set_color: function(Ie) {
                return this.color = Ie, Ie;
              }
            };
            (0, s.registerType)("TimeSeriesPointVertex", [De, Re, null]);
          }
        ),
        /***/
        "./esm/graphics/shaders.js": (
          /*!*********************************!*\
            !*** ./esm/graphics/shaders.js ***!
            \*********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              EllipseShader: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              FitsShader: () => (
                /* binding */
                We
              ),
              /* harmony export */
              ImageShader: () => (
                /* binding */
                $
              ),
              /* harmony export */
              ImageShader2: () => (
                /* binding */
                Re
              ),
              /* harmony export */
              KeplerPointSpriteShader: () => (
                /* binding */
                b
              ),
              /* harmony export */
              LineShaderNormalDates: () => (
                /* binding */
                Me
              ),
              /* harmony export */
              ModelShader: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              ModelShaderTan: () => (
                /* binding */
                D
              ),
              /* harmony export */
              OrbitLineShader: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              ShapeSpriteShader: () => (
                /* binding */
                $e
              ),
              /* harmony export */
              SimpleLineShader: () => (
                /* binding */
                _
              ),
              /* harmony export */
              SimpleLineShader2D: () => (
                /* binding */
                y
              ),
              /* harmony export */
              SpriteShader: () => (
                /* binding */
                O
              ),
              /* harmony export */
              TextShader: () => (
                /* binding */
                Qe
              ),
              /* harmony export */
              TileShader: () => (
                /* binding */
                Fe
              ),
              /* harmony export */
              TimeSeriesPointSpriteShader: () => (
                /* binding */
                Pe
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), t = n(
              /*! ../color.js */
              "./esm/color.js"
            ), l = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), o = n(
              /*! ./webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), c = n(
              /*! ./texture.js */
              "./esm/graphics/texture.js"
            );
            function _() {
            }
            _.vertLoc = 0, _.initialized = !1, _._prog = null, _.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision highp float;
        uniform vec4 lineColor;

        void main(void) {
            gl_FragColor = lineColor;
        }
    `, Ye = `        attribute vec3 aVertexPosition;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
        }
    `;
              _._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(_._frag, Ge), Be.compileShader(_._frag), Be.getShaderParameter(_._frag, o.WEBGL.COMPILE_STATUS), _._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(_._vert, Ye), Be.compileShader(_._vert), Be.getShaderParameter(_._vert, o.WEBGL.COMPILE_STATUS), _._prog = Be.createProgram(), Be.attachShader(_._prog, _._vert), Be.attachShader(_._prog, _._frag), Be.linkProgram(_._prog), Be.getProgramParameter(_._prog, o.WEBGL.LINK_STATUS), Be.useProgram(_._prog), _.vertLoc = Be.getAttribLocation(_._prog, "aVertexPosition"), _.lineColorLoc = Be.getUniformLocation(_._prog, "lineColor"), _.projMatLoc = Be.getUniformLocation(_._prog, "uPMatrix"), _.mvMatLoc = Be.getUniformLocation(_._prog, "uMVMatrix"), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), _.initialized = !0;
            }, _.use = function(Ne, Be, Ge, Ye) {
              var je = Ne.gl;
              if (je != null) {
                _.initialized || _.init(Ne), je.useProgram(_._prog);
                var ht = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                je.uniformMatrix4fv(_.mvMatLoc, !1, ht.floatArray()), je.uniformMatrix4fv(_.projMatLoc, !1, Ne.get_projection().floatArray()), je.uniform4f(_.lineColorLoc, Ge.r / 255, Ge.g / 255, Ge.b / 255, 1), Ne.space || !Ye ? je.disable(o.WEBGL.DEPTH_TEST) : je.enable(o.WEBGL.DEPTH_TEST), je.disableVertexAttribArray(0), je.disableVertexAttribArray(1), je.disableVertexAttribArray(2), je.disableVertexAttribArray(3), je.enableVertexAttribArray(_.vertLoc), je.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), je.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, null), je.vertexAttribPointer(_.vertLoc, 3, o.WEBGL.FLOAT, !1, 0, 0), je.lineWidth(1), je.enable(o.WEBGL.BLEND), je.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var u = {};
            (0, s.registerType)("SimpleLineShader", [_, u, null]);
            function y() {
            }
            y.vertLoc = 0, y.initialized = !1, y._prog = null, y.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `       precision highp float;
       uniform vec4 lineColor;

       void main(void) {
           gl_FragColor = lineColor;
       }
    `, Ye = `        attribute vec3 aVertexPosition;

        void main(void) {
            gl_Position = vec4(aVertexPosition, 1.0);
        }
    `;
              y._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(y._frag, Ge), Be.compileShader(y._frag), Be.getShaderParameter(y._frag, o.WEBGL.COMPILE_STATUS), y._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(y._vert, Ye), Be.compileShader(y._vert), Be.getShaderParameter(y._vert, o.WEBGL.COMPILE_STATUS), y._prog = Be.createProgram(), Be.attachShader(y._prog, y._vert), Be.attachShader(y._prog, y._frag), Be.linkProgram(y._prog), Be.getProgramParameter(y._prog, o.WEBGL.LINK_STATUS), Be.useProgram(y._prog), y.vertLoc = Be.getAttribLocation(y._prog, "aVertexPosition"), y.lineColorLoc = Be.getUniformLocation(y._prog, "lineColor"), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), y.initialized = !0;
            }, y.use = function(Ne, Be, Ge, Ye) {
              var je = Ne.gl;
              je != null && (y.initialized || y.init(Ne), je.useProgram(y._prog), a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view()), je.uniform4f(y.lineColorLoc, Ge.r / 255, Ge.g / 255, Ge.b / 255, 1), Ne.space || !Ye ? je.disable(o.WEBGL.DEPTH_TEST) : je.enable(o.WEBGL.DEPTH_TEST), je.disableVertexAttribArray(0), je.disableVertexAttribArray(1), je.disableVertexAttribArray(2), je.disableVertexAttribArray(3), je.enableVertexAttribArray(y.vertLoc), je.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), je.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, null), je.vertexAttribPointer(y.vertLoc, 3, o.WEBGL.FLOAT, !1, 0, 0), je.lineWidth(1), je.enable(o.WEBGL.BLEND), je.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA));
            };
            var g = {};
            (0, s.registerType)("SimpleLineShader2D", [y, g, null]);
            function Ee() {
            }
            Ee.vertLoc = 0, Ee.colorLoc = 0, Ee.initialized = !1, Ee._prog = null, Ee.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision highp float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;

        void main(void) {
            gl_FragColor = lineColor * vColor;
        }
    `, Ye = `        attribute vec3 aVertexPosition;
        attribute vec4 aVertexColor;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        varying lowp vec4 vColor;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vColor = aVertexColor;
        }
    `;
              Ee._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(Ee._frag, Ge), Be.compileShader(Ee._frag), Be.getShaderParameter(Ee._frag, o.WEBGL.COMPILE_STATUS), Ee._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(Ee._vert, Ye), Be.compileShader(Ee._vert), Be.getShaderParameter(Ee._vert, o.WEBGL.COMPILE_STATUS), Ee._prog = Be.createProgram(), Be.attachShader(Ee._prog, Ee._vert), Be.attachShader(Ee._prog, Ee._frag), Be.linkProgram(Ee._prog), Be.getProgramParameter(Ee._prog, o.WEBGL.LINK_STATUS), Be.useProgram(Ee._prog), Ee.vertLoc = Be.getAttribLocation(Ee._prog, "aVertexPosition"), Ee.colorLoc = Be.getAttribLocation(Ee._prog, "aVertexColor"), Ee.lineColorLoc = Be.getUniformLocation(Ee._prog, "lineColor"), Ee.projMatLoc = Be.getUniformLocation(Ee._prog, "uPMatrix"), Ee.mvMatLoc = Be.getUniformLocation(Ee._prog, "uMVMatrix"), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), Ee.initialized = !0;
            }, Ee.use = function(Ne, Be, Ge) {
              var Ye = Ne.gl;
              if (Ye != null) {
                Ee.initialized || Ee.init(Ne), Ye.useProgram(Ee._prog);
                var je = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                Ye.uniformMatrix4fv(Ee.mvMatLoc, !1, je.floatArray()), Ye.uniformMatrix4fv(Ee.projMatLoc, !1, Ne.get_projection().floatArray()), Ye.uniform4f(Ee.lineColorLoc, Ge.r / 255, Ge.g / 255, Ge.b / 255, 1), Ne.space ? Ye.disable(o.WEBGL.DEPTH_TEST) : Ye.enable(o.WEBGL.DEPTH_TEST), Ye.disableVertexAttribArray(0), Ye.disableVertexAttribArray(1), Ye.disableVertexAttribArray(2), Ye.disableVertexAttribArray(3), Ye.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), Ye.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, null), Ye.enableVertexAttribArray(Ee.vertLoc), Ye.enableVertexAttribArray(Ee.colorLoc), Ye.vertexAttribPointer(Ee.vertLoc, 3, o.WEBGL.FLOAT, !1, 28, 0), Ye.vertexAttribPointer(Ee.colorLoc, 4, o.WEBGL.FLOAT, !1, 28, 12), Ye.lineWidth(1), Ye.enable(o.WEBGL.BLEND), Ye.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var Ve = {};
            (0, s.registerType)("OrbitLineShader", [Ee, Ve, null]);
            function Me() {
            }
            Me.vertLoc = 0, Me.colorLoc = 0, Me.timeLoc = 0, Me.initialized = !1, Me._prog = null, Me.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision highp float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;

        void main(void)
        {
            gl_FragColor = lineColor * vColor;
        }
    `, Ye = `        attribute vec3 aVertexPosition;
        attribute vec4 aVertexColor;
        attribute vec2 aTime;
        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform float jNow;
        uniform float decay;

        varying lowp vec4 vColor;

        void main(void)
        {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            float dAlpha = 1.0;

            if (decay > 0.0)
            {
                    dAlpha = 1.0 - ((jNow - aTime.y) / decay);
                    if (dAlpha > 1.0 )
                    {
                        dAlpha = 1.0;
                    }
            }

            if (jNow < aTime.x && decay > 0.0)
            {
                vColor = vec4(1, 1, 1, 1);
            }
            else
            {
                vColor = vec4(aVertexColor.r, aVertexColor.g, aVertexColor.b, dAlpha * aVertexColor.a);
            }
        }
    `;
              Me._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(Me._frag, Ge), Be.compileShader(Me._frag), Be.getShaderParameter(Me._frag, o.WEBGL.COMPILE_STATUS), Me._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(Me._vert, Ye), Be.compileShader(Me._vert), Be.getShaderParameter(Me._vert, o.WEBGL.COMPILE_STATUS), Me._prog = Be.createProgram(), Be.attachShader(Me._prog, Me._vert), Be.attachShader(Me._prog, Me._frag), Be.linkProgram(Me._prog), Be.getProgramParameter(Me._prog, o.WEBGL.LINK_STATUS), Be.useProgram(Me._prog), Me.vertLoc = Be.getAttribLocation(Me._prog, "aVertexPosition"), Me.colorLoc = Be.getAttribLocation(Me._prog, "aVertexColor"), Me.timeLoc = Be.getAttribLocation(Me._prog, "aTime"), Me.lineColorLoc = Be.getUniformLocation(Me._prog, "lineColor"), Me.projMatLoc = Be.getUniformLocation(Me._prog, "uPMatrix"), Me.mvMatLoc = Be.getUniformLocation(Me._prog, "uMVMatrix"), Me.jNowLoc = Be.getUniformLocation(Me._prog, "jNow"), Me.decayLoc = Be.getUniformLocation(Me._prog, "decay"), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), Me.initialized = !0;
            }, Me.use = function(Ne, Be, Ge, Ye, je, ht) {
              var qe = Ne.gl;
              if (qe != null) {
                Me.initialized || Me.init(Ne), qe.useProgram(Me._prog);
                var lt = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                qe.uniformMatrix4fv(Me.mvMatLoc, !1, lt.floatArray()), qe.uniformMatrix4fv(Me.projMatLoc, !1, Ne.get_projection().floatArray()), qe.uniform4f(Me.lineColorLoc, Ge.r / 255, Ge.g / 255, Ge.b / 255, 1), qe.uniform1f(Me.jNowLoc, je), qe.uniform1f(Me.decayLoc, ht), Ye ? qe.enable(o.WEBGL.DEPTH_TEST) : qe.disable(o.WEBGL.DEPTH_TEST), qe.disableVertexAttribArray(0), qe.disableVertexAttribArray(1), qe.disableVertexAttribArray(2), qe.disableVertexAttribArray(3), qe.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), qe.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, null), qe.enableVertexAttribArray(Me.vertLoc), qe.enableVertexAttribArray(Me.colorLoc), qe.vertexAttribPointer(Me.vertLoc, 3, o.WEBGL.FLOAT, !1, 36, 0), qe.vertexAttribPointer(Me.colorLoc, 4, o.WEBGL.FLOAT, !1, 36, 12), qe.vertexAttribPointer(Me.timeLoc, 2, o.WEBGL.FLOAT, !1, 36, 28), qe.lineWidth(1), qe.enable(o.WEBGL.BLEND), qe.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var B = {};
            (0, s.registerType)("LineShaderNormalDates", [Me, B, null]);
            function Pe() {
            }
            Pe.vertLoc = 0, Pe.colorLoc = 0, Pe.pointSizeLoc = 0, Pe.timeLoc = 0, Pe.initialized = !1, Pe._prog = null, Pe.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision mediump float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;
        uniform sampler2D uSampler;

        void main(void)
        {
            vec4 texColor;
            texColor = texture2D(uSampler, gl_PointCoord);
            gl_FragColor = lineColor * vColor * texColor;
        }
    `, Ye = `        attribute vec3 aVertexPosition;
        attribute vec4 aVertexColor;
        attribute vec2 aTime;
        attribute float aPointSize;
        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform float jNow;
        uniform vec3 cameraPosition;
        uniform float decay;
        uniform float scale;
        uniform float minSize;
        uniform float sky;
        uniform float showFarSide;

        varying lowp vec4 vColor;

        void main(void)
        {
            float dotCam = dot( normalize(cameraPosition-aVertexPosition), normalize(aVertexPosition));
            float dist = distance(aVertexPosition, cameraPosition);
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            float dAlpha = 1.0;

            if ( decay > 0.0)
            {
                    dAlpha = 1.0 - ((jNow - aTime.y) / decay);
                    if (dAlpha > 1.0 )
                    {
                        dAlpha = 1.0;
                    }
            }

            if ( showFarSide == 0.0 && (dotCam * sky) < 0.0 || (jNow < aTime.x && decay > 0.0))
            {
                vColor = vec4(0.0, 0.0, 0.0, 0.0);
            }
            else
            {
                vColor = vec4(aVertexColor.r, aVertexColor.g, aVertexColor.b, dAlpha);
            }

            float lSize = scale;

            if (scale < 0.0)
            {
                lSize = -scale;
                dist = 1.0;
            }

            gl_PointSize = max(minSize, (lSize * ( aPointSize ) / dist));
        }
    `;
              Pe._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(Pe._frag, Ge), Be.compileShader(Pe._frag), Be.getShaderParameter(Pe._frag, o.WEBGL.COMPILE_STATUS), Pe._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(Pe._vert, Ye), Be.compileShader(Pe._vert), Be.getShaderParameter(Pe._vert, o.WEBGL.COMPILE_STATUS), Be.getShaderInfoLog(Pe._vert), Pe._prog = Be.createProgram(), Be.attachShader(Pe._prog, Pe._vert), Be.attachShader(Pe._prog, Pe._frag), Be.linkProgram(Pe._prog), Be.getProgramParameter(Pe._prog, o.WEBGL.LINK_STATUS), Be.useProgram(Pe._prog), Pe.vertLoc = Be.getAttribLocation(Pe._prog, "aVertexPosition"), Pe.colorLoc = Be.getAttribLocation(Pe._prog, "aVertexColor"), Pe.pointSizeLoc = Be.getAttribLocation(Pe._prog, "aPointSize"), Pe.timeLoc = Be.getAttribLocation(Pe._prog, "aTime"), Pe.projMatLoc = Be.getUniformLocation(Pe._prog, "uPMatrix"), Pe.mvMatLoc = Be.getUniformLocation(Pe._prog, "uMVMatrix"), Pe.sampLoc = Be.getUniformLocation(Pe._prog, "uSampler"), Pe.jNowLoc = Be.getUniformLocation(Pe._prog, "jNow"), Pe.decayLoc = Be.getUniformLocation(Pe._prog, "decay"), Pe.lineColorLoc = Be.getUniformLocation(Pe._prog, "lineColor"), Pe.cameraPosLoc = Be.getUniformLocation(Pe._prog, "cameraPosition"), Pe.scaleLoc = Be.getUniformLocation(Pe._prog, "scale"), Pe.skyLoc = Be.getUniformLocation(Pe._prog, "sky"), Pe.showFarSideLoc = Be.getUniformLocation(Pe._prog, "showFarSide"), Pe.minSizeLoc = Be.getUniformLocation(Pe._prog, "minSize"), Be.enable(o.WEBGL.BLEND), Pe.initialized = !0;
            }, Pe.use = function(Ne, Be, Ge, Ye, je, ht, qe, lt, ft, _t, St, yt) {
              Ge == null && (Ge = c.Texture.getEmpty());
              var Ct = Ne.gl;
              if (Ct != null) {
                Pe.initialized || Pe.init(Ne), Ct.useProgram(Pe._prog);
                var Lt = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                Ct.uniformMatrix4fv(Pe.mvMatLoc, !1, Lt.floatArray()), Ct.uniformMatrix4fv(Pe.projMatLoc, !1, Ne.get_projection().floatArray()), Ct.uniform1i(Pe.sampLoc, 0), Ct.uniform1f(Pe.jNowLoc, ht), Ct.uniform1f(Pe.decayLoc, qe), Ct.uniform4f(Pe.lineColorLoc, Ye.r / 255, Ye.g / 255, Ye.b / 255, Ye.a / 255), Ct.uniform3f(Pe.cameraPosLoc, lt.x, lt.y, lt.z), Ct.uniform1f(Pe.scaleLoc, ft), Ct.uniform1f(Pe.minSizeLoc, _t), Ct.uniform1f(Pe.showFarSideLoc, St ? 1 : 0), Ct.uniform1f(Pe.skyLoc, yt ? -1 : 1), je ? Ct.enable(o.WEBGL.DEPTH_TEST) : Ct.disable(o.WEBGL.DEPTH_TEST), Ct.disableVertexAttribArray(0), Ct.disableVertexAttribArray(1), Ct.disableVertexAttribArray(2), Ct.disableVertexAttribArray(3), Ct.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), Ct.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, null), Ct.enableVertexAttribArray(Pe.vertLoc), Ct.enableVertexAttribArray(Pe.colorLoc), Ct.enableVertexAttribArray(Pe.pointSizeLoc), Ct.enableVertexAttribArray(Pe.timeLoc), Ct.vertexAttribPointer(Pe.vertLoc, 3, o.WEBGL.FLOAT, !1, 40, 0), Ct.vertexAttribPointer(Pe.colorLoc, 4, o.WEBGL.FLOAT, !1, 40, 12), Ct.vertexAttribPointer(Pe.pointSizeLoc, 1, o.WEBGL.FLOAT, !1, 40, 36), Ct.vertexAttribPointer(Pe.timeLoc, 2, o.WEBGL.FLOAT, !1, 40, 28), Ct.activeTexture(o.WEBGL.TEXTURE0), Ct.bindTexture(o.WEBGL.TEXTURE_2D, Ge), Ct.lineWidth(1), Ct.enable(o.WEBGL.BLEND), Ct.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE);
              }
            };
            var k = {};
            (0, s.registerType)("TimeSeriesPointSpriteShader", [Pe, k, null]);
            function b() {
            }
            b.abcLoc = 0, b.abcLoc1 = 0, b.pointSizeLoc = 0, b.colorLoc = 0, b.weLoc = 0, b.nTLoc = 0, b.azLoc = 0, b.orbitLoc = 0, b.initialized = !1, b._prog = null, b.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision mediump float;
        uniform vec4 lineColor;
        varying lowp vec4 vColor;
        uniform sampler2D uSampler;

        void main(void)
        {
            vec4 texColor;
            texColor = texture2D(uSampler, gl_PointCoord);
            gl_FragColor = lineColor * vColor * texColor;
        }
    `, Ye = `        attribute vec3 ABC;
        attribute vec3 abc;
        attribute float PointSize;
        attribute vec4 Color;
        attribute vec2 we;
        attribute vec2 nT;
        attribute vec2 az;
        attribute vec2 orbit;
        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform float jNow;
        uniform vec3 cameraPosition;
        uniform float MM;
        uniform float scaling;
        uniform float minSize;
        uniform float opacity;
        varying lowp vec4 vColor;

        void main(void)
        {
            float M = nT.x * (jNow - nT.y) * 0.01745329251994;
            float e = we.y;
            float a = az.x;
            float PI = 3.1415926535897932384;
            float w = we.x* 0.01745329251994;
            float F = 1.0;

            if (M < 0.0)
                F = -1.0;

            M = abs(M) / (2.0 * PI);
            M = (M - float(int(M)))*2.0 *PI *F;

            if (MM != 0.0)
            {
                M = MM + (1.0- orbit.x) *2.0 *PI;
                if (M > (2.0*PI))
                    M = M - (2.0*PI);
            }

            if (M < 0.0)
                M += 2.0 *PI;

            F = 1.0;
            if (M > PI)
                F = -1.0;

            if (M > PI)
                M = 2.0 *PI - M;

            float E = PI / 2.0;
            float scale = PI / 4.0;

            for (int i =0; i<23; i++)
            {
                float R = E - e *sin(E);
                if (M > R)
                    E += scale;
                else
                    E -= scale;
                scale /= 2.0;
            }

            E = E * F;

            float v = 2.0 * atan(sqrt((1.0 + e) / (1.0 -e )) * tan(E/2.0));
            float r = a * (1.0-e * cos(E));

            vec4 pnt;
            pnt.x = r * abc.x * sin(ABC.x + w + v);
            pnt.z = r * abc.y * sin(ABC.y + w + v);
            pnt.y = r * abc.z * sin(ABC.z + w + v);
            pnt.w = 1.0;

            float dist = distance(pnt.xyz, cameraPosition.xyz);
            gl_Position = uPMatrix * uMVMatrix * pnt;
            vColor.a = opacity * (1.0-(orbit.x));
            vColor.r = Color.r;
            vColor.g = Color.g;
            vColor.b = Color.b;
            gl_PointSize = max(minSize, scaling * (PointSize / dist));
        }
    `;
              b._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(b._frag, Ge), Be.compileShader(b._frag), Be.getShaderParameter(b._frag, o.WEBGL.COMPILE_STATUS), b._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(b._vert, Ye), Be.compileShader(b._vert), Be.getShaderParameter(b._vert, o.WEBGL.COMPILE_STATUS), Be.getShaderInfoLog(b._vert), b._prog = Be.createProgram(), Be.attachShader(b._prog, b._vert), Be.attachShader(b._prog, b._frag), Be.linkProgram(b._prog), Be.getProgramParameter(b._prog, o.WEBGL.LINK_STATUS), Be.useProgram(b._prog), b.abcLoc1 = Be.getAttribLocation(b._prog, "abc"), b.abcLoc = Be.getAttribLocation(b._prog, "ABC"), b.pointSizeLoc = Be.getAttribLocation(b._prog, "PointSize"), b.colorLoc = Be.getAttribLocation(b._prog, "Color"), b.weLoc = Be.getAttribLocation(b._prog, "we"), b.nTLoc = Be.getAttribLocation(b._prog, "nT"), b.azLoc = Be.getAttribLocation(b._prog, "az"), b.orbitLoc = Be.getAttribLocation(b._prog, "orbit"), b.projMatLoc = Be.getUniformLocation(b._prog, "uPMatrix"), b.mvMatLoc = Be.getUniformLocation(b._prog, "uMVMatrix"), b.jNowLoc = Be.getUniformLocation(b._prog, "jNow"), b.cameraPosLoc = Be.getUniformLocation(b._prog, "cameraPosition"), b.mmLoc = Be.getUniformLocation(b._prog, "MM"), b.scaleLoc = Be.getUniformLocation(b._prog, "scaling"), b.minSizeLoc = Be.getUniformLocation(b._prog, "minSize"), b.lineColorLoc = Be.getUniformLocation(b._prog, "lineColor"), b.opacityLoc = Be.getUniformLocation(b._prog, "opacity"), b.sampLoc = Be.getUniformLocation(b._prog, "uSampler"), Be.enable(o.WEBGL.BLEND), b.initialized = !0;
            }, b.use = function(Ne, Be, Ge, Ye, je, ht, qe, lt, ft, _t, St, yt) {
              Ye == null && (Ye = c.Texture.getEmpty());
              var Ct = Ne.gl;
              Ct != null && (b.initialized || b.init(Ne), Ct.useProgram(b._prog), Ct.uniformMatrix4fv(b.mvMatLoc, !1, Be.floatArray()), Ct.uniformMatrix4fv(b.projMatLoc, !1, Ne.get_projection().floatArray()), Ct.uniform1i(b.sampLoc, 0), Ct.uniform1f(b.jNowLoc, lt), Ct.uniform1f(b.mmLoc, ft), Ct.uniform4f(b.lineColorLoc, je.r / 255, je.g / 255, je.b / 255, je.a / 255), Ct.uniform1f(b.opacityLoc, ht), Ct.uniform3f(b.cameraPosLoc, _t.x, _t.y, _t.z), Ct.uniform1f(b.scaleLoc, St), Ct.uniform1f(b.minSizeLoc, yt), qe ? Ct.enable(o.WEBGL.DEPTH_TEST) : Ct.disable(o.WEBGL.DEPTH_TEST), Ct.disableVertexAttribArray(0), Ct.disableVertexAttribArray(1), Ct.disableVertexAttribArray(2), Ct.disableVertexAttribArray(3), Ct.bindBuffer(o.WEBGL.ARRAY_BUFFER, Ge), Ct.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, null), Ct.enableVertexAttribArray(b.abcLoc), Ct.enableVertexAttribArray(b.abcLoc1), Ct.enableVertexAttribArray(b.colorLoc), Ct.enableVertexAttribArray(b.pointSizeLoc), Ct.enableVertexAttribArray(b.weLoc), Ct.enableVertexAttribArray(b.nTLoc), Ct.enableVertexAttribArray(b.azLoc), Ct.enableVertexAttribArray(b.orbitLoc), Ct.enableVertexAttribArray(b.weLoc), Ct.vertexAttribPointer(b.abcLoc, 3, o.WEBGL.FLOAT, !1, 76, 0), Ct.vertexAttribPointer(b.abcLoc1, 3, o.WEBGL.FLOAT, !1, 76, 12), Ct.vertexAttribPointer(b.pointSizeLoc, 1, o.WEBGL.FLOAT, !1, 76, 24), Ct.vertexAttribPointer(b.colorLoc, 4, o.WEBGL.FLOAT, !1, 76, 28), Ct.vertexAttribPointer(b.weLoc, 2, o.WEBGL.FLOAT, !1, 76, 44), Ct.vertexAttribPointer(b.nTLoc, 2, o.WEBGL.FLOAT, !1, 76, 52), Ct.vertexAttribPointer(b.azLoc, 2, o.WEBGL.FLOAT, !1, 76, 60), Ct.vertexAttribPointer(b.orbitLoc, 2, o.WEBGL.FLOAT, !1, 76, 68), Ct.activeTexture(o.WEBGL.TEXTURE0), Ct.bindTexture(o.WEBGL.TEXTURE_2D, Ye), Ct.lineWidth(1), Ct.enable(o.WEBGL.BLEND), Ct.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE));
            };
            var Le = {};
            (0, s.registerType)("KeplerPointSpriteShader", [b, Le, null]);
            function xe() {
            }
            xe.angleLoc = 0, xe.initialized = !1, xe._prog = null, xe.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision mediump float;
        varying lowp vec4 vColor;

        void main(void)
        {
            gl_FragColor = vColor;
        }
    `, Ye = `        attribute vec3 Angle;
        uniform mat4 matWVP;
        uniform mat4 matPosition;
        uniform vec3 positionNow;
        uniform float semiMajorAxis;
        uniform float eccentricity;
        uniform vec4 color;
        uniform float eccentricAnomaly;
        varying lowp vec4 vColor;

        void main(void)
        {
            float fade = (1.0 - Angle.x);
            float PI = 3.1415927;
            float E = eccentricAnomaly - Angle.x * 2.0 * PI;
            vec2 semiAxes = vec2(1.0, sqrt(1.0 - eccentricity * eccentricity)) * semiMajorAxis;
            vec2 planePos = semiAxes * vec2(cos(E) - eccentricity, sin(E));

            if (Angle.x == 0.0)
                gl_Position =  matPosition * vec4(positionNow, 1.0);
            else
                gl_Position = matWVP * vec4(planePos.x, planePos.y, 0.0, 1.0);

            vColor = vec4(color.rgb, fade * color.a);
        }
    `;
              xe._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(xe._frag, Ge), Be.compileShader(xe._frag), Be.getShaderParameter(xe._frag, o.WEBGL.COMPILE_STATUS), xe._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(xe._vert, Ye), Be.compileShader(xe._vert), Be.getShaderParameter(xe._vert, o.WEBGL.COMPILE_STATUS), Be.getShaderInfoLog(xe._vert), xe._prog = Be.createProgram(), Be.attachShader(xe._prog, xe._vert), Be.attachShader(xe._prog, xe._frag), Be.linkProgram(xe._prog), Be.getProgramParameter(xe._prog, o.WEBGL.LINK_STATUS), Be.useProgram(xe._prog), xe.angleLoc = Be.getAttribLocation(xe._prog, "Angle"), xe.matWVPLoc = Be.getUniformLocation(xe._prog, "matWVP"), xe.matPositionLoc = Be.getUniformLocation(xe._prog, "matPosition"), xe.positionNowLoc = Be.getUniformLocation(xe._prog, "positionNow"), xe.colorLoc = Be.getUniformLocation(xe._prog, "color"), xe.semiMajorAxisLoc = Be.getUniformLocation(xe._prog, "semiMajorAxis"), xe.eccentricityLoc = Be.getUniformLocation(xe._prog, "eccentricity"), xe.eccentricAnomalyLoc = Be.getUniformLocation(xe._prog, "eccentricAnomaly"), Be.enable(o.WEBGL.BLEND), xe.initialized = !0;
            }, xe.use = function(Ne, Be, Ge, Ye, je, ht, qe, lt) {
              var ft = Ne.gl;
              if (ft != null) {
                xe.initialized || xe.init(Ne), ft.useProgram(xe._prog);
                var _t = a.Matrix3d.multiplyMatrix(a.Matrix3d.multiplyMatrix(qe, Ne.get_view()), Ne.get_projection()), St = a.Matrix3d.multiplyMatrix(a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view()), Ne.get_projection());
                ft.uniformMatrix4fv(xe.matWVPLoc, !1, St.floatArray()), ft.uniformMatrix4fv(xe.matPositionLoc, !1, _t.floatArray()), ft.uniform3f(xe.positionNowLoc, lt.x, lt.y, lt.z), ft.uniform4f(xe.colorLoc, je.r / 255, je.g / 255, je.b / 255, je.a / 255), ft.uniform1f(xe.semiMajorAxisLoc, Be), ft.uniform1f(xe.eccentricityLoc, Ge), ft.uniform1f(xe.eccentricAnomalyLoc, Ye), ft.disable(o.WEBGL.DEPTH_TEST), ft.disableVertexAttribArray(0), ft.disableVertexAttribArray(1), ft.disableVertexAttribArray(2), ft.disableVertexAttribArray(3), ft.enableVertexAttribArray(xe.angleLoc), ft.vertexAttribPointer(xe.angleLoc, 3, o.WEBGL.FLOAT, !1, 0, 0), ft.lineWidth(1), ft.enable(o.WEBGL.BLEND), ft.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE);
              }
            };
            var ze = {};
            (0, s.registerType)("EllipseShader", [xe, ze, null]);
            function Se() {
            }
            Se.vertLoc = 0, Se.normalLoc = 0, Se.textureLoc = 0, Se.initialized = !1, Se._prog = null, Se.sunPosition = a.Vector3d.create(-1, -1, -1), Se.minLightingBrightness = 1, Se.atmosphereColor = t.Color.fromArgb(0, 0, 0, 0), Se.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision mediump float;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        uniform sampler2D uSampler;
        uniform float opacity;
        uniform vec3 uSunPosition;
        uniform float uMinBrightness;
        uniform vec3 uAtmosphereColor;

        void main(void) {
            vec3 normal = normalize(vNormal);
            vec3 camVN = normalize(vCamVector);
            vec3 cam = normalize(vec3(0.0,0.0,-1.0));
            float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);
            float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;
            atm = (dt > uMinBrightness) ? atm : 0.0;
            if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
            gl_FragColor.rgb *= dt;
            gl_FragColor.rgb += atm * uAtmosphereColor;
        }
    `, Ye = `        attribute vec3 aVertexPosition;
        attribute vec3 aNormal;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);
            vec3 normalT = normalize(mat3(uMVMatrix) * aNormal);
            vTextureCoord = aTextureCoord;
            vNormal = normalT;
        }
    `;
              Se._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(Se._frag, Ge), Be.compileShader(Se._frag);
              var je = Be.getShaderParameter(Se._frag, o.WEBGL.COMPILE_STATUS);
              je || Be.getShaderInfoLog(Se._frag), Se._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(Se._vert, Ye), Be.compileShader(Se._vert);
              var ht = Be.getShaderParameter(Se._vert, o.WEBGL.COMPILE_STATUS);
              ht || Be.getShaderInfoLog(Se._vert), Se._prog = Be.createProgram(), Be.attachShader(Se._prog, Se._vert), Be.attachShader(Se._prog, Se._frag), Be.linkProgram(Se._prog), Be.getProgramParameter(Se._prog, o.WEBGL.LINK_STATUS), Be.useProgram(Se._prog), Se.vertLoc = Be.getAttribLocation(Se._prog, "aVertexPosition"), Se.normalLoc = Be.getAttribLocation(Se._prog, "aNormal"), Se.textureLoc = Be.getAttribLocation(Se._prog, "aTextureCoord"), Se.projMatLoc = Be.getUniformLocation(Se._prog, "uPMatrix"), Se.mvMatLoc = Be.getUniformLocation(Se._prog, "uMVMatrix"), Se.sampLoc = Be.getUniformLocation(Se._prog, "uSampler"), Se.sunLoc = Be.getUniformLocation(Se._prog, "uSunPosition"), Se.minBrightnessLoc = Be.getUniformLocation(Se._prog, "uMinBrightness"), Se.opacityLoc = Be.getUniformLocation(Se._prog, "opacity"), Se.atmosphereColorLoc = Be.getUniformLocation(Se._prog, "uAtmosphereColor"), (0, l.set_tileUvMultiple)(1), (0, l.set_tileDemEnabled)(!0), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), Se.initialized = !0;
            }, Se.use = function(Ne, Be, Ge, Ye, je, ht, qe) {
              Ye == null && (Ye = c.Texture.getEmpty());
              var lt = Ne.gl;
              if (lt != null) {
                Se.initialized || Se.init(Ne), lt.useProgram(Se._prog);
                var ft = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                lt.uniform1f(Se.opacityLoc, je), lt.uniform1f(Se.minBrightnessLoc, Ne.lighting ? Se.minLightingBrightness : 1), Ne.lighting ? lt.uniform3f(Se.atmosphereColorLoc, Se.atmosphereColor.r / 255, Se.atmosphereColor.g / 255, Se.atmosphereColor.b / 255) : lt.uniform3f(Se.atmosphereColorLoc, 0, 0, 0), lt.uniformMatrix4fv(Se.mvMatLoc, !1, ft.floatArray()), lt.uniformMatrix4fv(Se.projMatLoc, !1, Ne.get_projection().floatArray()), Se.sunPosition.normalize();
                var _t = Ne.get_view().clone();
                _t.set_m41(0), _t.set_m42(0), _t.set_m43(0), _t.set_m44(1);
                var St = a.Vector3d._transformCoordinate(Se.sunPosition, _t);
                St.normalize(), lt.uniform3f(Se.sunLoc, St.x, St.y, St.z), lt.uniform1i(Se.sampLoc, 0), Ne.space || ht ? lt.disable(o.WEBGL.DEPTH_TEST) : lt.enable(o.WEBGL.DEPTH_TEST), lt.disableVertexAttribArray(0), lt.disableVertexAttribArray(1), lt.disableVertexAttribArray(2), lt.disableVertexAttribArray(3), lt.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), lt.enableVertexAttribArray(Se.vertLoc), lt.enableVertexAttribArray(Se.normalLoc), lt.enableVertexAttribArray(Se.textureLoc), lt.vertexAttribPointer(Se.vertLoc, 3, o.WEBGL.FLOAT, !1, qe, 0), lt.vertexAttribPointer(Se.normalLoc, 3, o.WEBGL.FLOAT, !1, qe, 12), lt.vertexAttribPointer(Se.textureLoc, 2, o.WEBGL.FLOAT, !1, qe, qe - 8), lt.activeTexture(o.WEBGL.TEXTURE0), lt.bindTexture(o.WEBGL.TEXTURE_2D, Ye), lt.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ge), lt.enable(o.WEBGL.BLEND), ht ? lt.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE) : lt.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var Te = {};
            (0, s.registerType)("ModelShader", [Se, Te, null]);
            function D() {
            }
            D.vertLoc = 0, D.normalLoc = 0, D.textureLoc = 0, D.initialized = !1, D._prog = null, D.sunPosition = a.Vector3d.create(-1, -1, -1), D.minLightingBrightness = 1, D.atmosphereColor = t.Color.fromArgb(0, 0, 0, 0), D.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision mediump float;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        uniform sampler2D uSampler;
        uniform float opacity;
        uniform vec3 uSunPosition;
        uniform float uMinBrightness;
        uniform vec3 uAtmosphereColor;

        void main(void) {
            vec3 normal = normalize(vNormal);
            vec3 camVN = normalize(vCamVector);
            vec3 cam = normalize(vec3(0.0,0.0,-1.0));
            float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);
            float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;
            atm = (dt > uMinBrightness) ? atm : 0.0;
            if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
            gl_FragColor.rgb *= dt;
            gl_FragColor.rgb += atm * uAtmosphereColor;
        }
    `, Ye = `        attribute vec3 aVertexPosition;
        attribute vec3 aNormal;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);
            vec3 normalT = normalize(mat3(uMVMatrix) * aNormal);
            vTextureCoord = aTextureCoord;
            vNormal = normalT;
        }
    `;
              D._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(D._frag, Ge), Be.compileShader(D._frag);
              var je = Be.getShaderParameter(D._frag, o.WEBGL.COMPILE_STATUS);
              je || Be.getShaderInfoLog(D._frag), D._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(D._vert, Ye), Be.compileShader(D._vert);
              var ht = Be.getShaderParameter(D._vert, o.WEBGL.COMPILE_STATUS);
              ht || Be.getShaderInfoLog(D._vert), D._prog = Be.createProgram(), Be.attachShader(D._prog, D._vert), Be.attachShader(D._prog, D._frag), Be.linkProgram(D._prog), Be.getProgramParameter(D._prog, o.WEBGL.LINK_STATUS), Be.useProgram(D._prog), D.vertLoc = Be.getAttribLocation(D._prog, "aVertexPosition"), D.normalLoc = Be.getAttribLocation(D._prog, "aNormal"), D.textureLoc = Be.getAttribLocation(D._prog, "aTextureCoord"), D.projMatLoc = Be.getUniformLocation(D._prog, "uPMatrix"), D.mvMatLoc = Be.getUniformLocation(D._prog, "uMVMatrix"), D.sampLoc = Be.getUniformLocation(D._prog, "uSampler"), D.sunLoc = Be.getUniformLocation(D._prog, "uSunPosition"), D.minBrightnessLoc = Be.getUniformLocation(D._prog, "uMinBrightness"), D.opacityLoc = Be.getUniformLocation(D._prog, "opacity"), D.atmosphereColorLoc = Be.getUniformLocation(D._prog, "uAtmosphereColor"), (0, l.set_tileUvMultiple)(1), (0, l.set_tileDemEnabled)(!0), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), D.initialized = !0;
            }, D.use = function(Ne, Be, Ge, Ye, je, ht, qe) {
              Ye == null && (Ye = c.Texture.getEmpty());
              var lt = Ne.gl;
              if (lt != null) {
                D.initialized || D.init(Ne), lt.useProgram(D._prog);
                var ft = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                lt.uniform1f(D.opacityLoc, je), lt.uniform1f(D.minBrightnessLoc, Ne.lighting ? D.minLightingBrightness : 1), Ne.lighting ? lt.uniform3f(D.atmosphereColorLoc, D.atmosphereColor.r / 255, D.atmosphereColor.g / 255, D.atmosphereColor.b / 255) : lt.uniform3f(D.atmosphereColorLoc, 0, 0, 0), lt.uniformMatrix4fv(D.mvMatLoc, !1, ft.floatArray()), lt.uniformMatrix4fv(D.projMatLoc, !1, Ne.get_projection().floatArray()), D.sunPosition.normalize();
                var _t = Ne.get_view().clone();
                _t.set_m41(0), _t.set_m42(0), _t.set_m43(0), _t.set_m44(1);
                var St = a.Vector3d._transformCoordinate(D.sunPosition, _t);
                St.normalize(), lt.uniform3f(D.sunLoc, -St.x, -St.y, -St.z), lt.uniform1i(D.sampLoc, 0), Ne.space || ht ? lt.disable(o.WEBGL.DEPTH_TEST) : lt.enable(o.WEBGL.DEPTH_TEST), lt.disableVertexAttribArray(0), lt.disableVertexAttribArray(1), lt.disableVertexAttribArray(2), lt.disableVertexAttribArray(3), lt.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), lt.enableVertexAttribArray(D.vertLoc), lt.enableVertexAttribArray(D.normalLoc), lt.enableVertexAttribArray(D.textureLoc), lt.vertexAttribPointer(D.vertLoc, 3, o.WEBGL.FLOAT, !1, qe, 0), lt.vertexAttribPointer(D.normalLoc, 3, o.WEBGL.FLOAT, !1, qe, 12), lt.vertexAttribPointer(D.textureLoc, 2, o.WEBGL.FLOAT, !1, qe, qe - 8), lt.activeTexture(o.WEBGL.TEXTURE0), lt.bindTexture(o.WEBGL.TEXTURE_2D, Ye), lt.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ge), lt.enable(o.WEBGL.BLEND), ht ? lt.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE) : lt.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var ke = {};
            (0, s.registerType)("ModelShaderTan", [D, ke, null]);
            function Fe() {
            }
            Fe.vertLoc = 0, Fe.textureLoc = 0, Fe.initialized = !1, Fe._prog = null, Fe.sunPosition = a.Vector3d.create(-1, -1, -1), Fe.minLightingBrightness = 1, Fe.atmosphereColor = t.Color.fromArgb(0, 0, 0, 0), Fe.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision mediump float;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        uniform sampler2D uSampler;
        uniform float opacity;
        uniform vec3 uSunPosition;
        uniform float uMinBrightness;
        uniform vec3 uAtmosphereColor;

        void main(void) {
            vec3 normal = normalize(vNormal);
            vec3 camVN = normalize(vCamVector);
            vec3 cam = normalize(vec3(0.0,0.0,-1.0));
            float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);
            float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;
            atm = (dt > uMinBrightness) ? atm : 0.0;
            if ( uMinBrightness == 1.0 ) { dt = 1.0; atm = 0.0; }
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
            gl_FragColor.rgb *= dt;
            gl_FragColor.rgb += atm * uAtmosphereColor;
        }
    `, Ye = `        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform vec3 uCenterScreen;
        uniform vec3 uCenterWorld;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            vec3 normal;

            if (length(uCenterWorld) > 0.00001) {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 0.0) + vec4(uCenterScreen, 1.0);
                vCamVector = normalize((mat3(uMVMatrix) * (aVertexPosition + uCenterWorld)).xyz);
                normal = normalize(aVertexPosition + uCenterWorld);
            } else {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
                vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);
                normal = normalize(aVertexPosition);
            }

            vec3 normalT = normalize(mat3(uMVMatrix) * normal);
            vTextureCoord = aTextureCoord;
            vNormal = normalT;
        }
    `;
              Fe._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(Fe._frag, Ge), Be.compileShader(Fe._frag);
              var je = Be.getShaderParameter(Fe._frag, o.WEBGL.COMPILE_STATUS);
              je || Be.getShaderInfoLog(Fe._frag), Fe._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(Fe._vert, Ye), Be.compileShader(Fe._vert);
              var ht = Be.getShaderParameter(Fe._vert, o.WEBGL.COMPILE_STATUS);
              ht || Be.getShaderInfoLog(Fe._vert), Fe._prog = Be.createProgram(), Be.attachShader(Fe._prog, Fe._vert), Be.attachShader(Fe._prog, Fe._frag), Be.linkProgram(Fe._prog), Be.getProgramParameter(Fe._prog, o.WEBGL.LINK_STATUS), Be.useProgram(Fe._prog), Fe.vertLoc = Be.getAttribLocation(Fe._prog, "aVertexPosition"), Fe.textureLoc = Be.getAttribLocation(Fe._prog, "aTextureCoord"), Fe.projMatLoc = Be.getUniformLocation(Fe._prog, "uPMatrix"), Fe.mvMatLoc = Be.getUniformLocation(Fe._prog, "uMVMatrix"), Fe.sampLoc = Be.getUniformLocation(Fe._prog, "uSampler"), Fe.centerScreenLoc = Be.getUniformLocation(Fe._prog, "uCenterScreen"), Fe.centerWorldLoc = Be.getUniformLocation(Fe._prog, "uCenterWorld"), Fe.sunLoc = Be.getUniformLocation(Fe._prog, "uSunPosition"), Fe.minBrightnessLoc = Be.getUniformLocation(Fe._prog, "uMinBrightness"), Fe.opacityLoc = Be.getUniformLocation(Fe._prog, "opacity"), Fe.atmosphereColorLoc = Be.getUniformLocation(Fe._prog, "uAtmosphereColor"), (0, l.set_tileUvMultiple)(1), (0, l.set_tileDemEnabled)(!0), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), Fe.initialized = !0;
            }, Fe.use = function(Ne, Be, Ge, Ye, je, ht, qe) {
              Ye == null && (Ye = c.Texture.getEmpty());
              var lt = Ne.gl;
              if (lt != null) {
                Fe.initialized || Fe.init(Ne), lt.useProgram(Fe._prog);
                var ft = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                if (lt.uniform1f(Fe.opacityLoc, je), lt.uniform1f(Fe.minBrightnessLoc, Ne.lighting ? Fe.minLightingBrightness : 1), Ne.lighting ? lt.uniform3f(Fe.atmosphereColorLoc, Fe.atmosphereColor.r / 255, Fe.atmosphereColor.g / 255, Fe.atmosphereColor.b / 255) : lt.uniform3f(Fe.atmosphereColorLoc, 0, 0, 0), lt.uniform3f(Fe.centerWorldLoc, qe.x, qe.y, qe.z), qe.lengthSq() > 1e-3) {
                  var _t = a.Matrix3d.multiplyMatrix(ft, Ne.get_projection()), St = _t.transform(qe);
                  lt.uniform3f(Fe.centerScreenLoc, St.x, St.y, St.z);
                } else
                  lt.uniform3f(Fe.centerScreenLoc, 0, 0, 0);
                lt.uniformMatrix4fv(Fe.mvMatLoc, !1, ft.floatArray()), lt.uniformMatrix4fv(Fe.projMatLoc, !1, Ne.get_projection().floatArray()), Fe.sunPosition.normalize();
                var yt = Ne.get_view().clone();
                yt.set_m41(0), yt.set_m42(0), yt.set_m43(0), yt.set_m44(1);
                var Ct = a.Vector3d._transformCoordinate(Fe.sunPosition, yt);
                Ct.normalize(), lt.uniform3f(Fe.sunLoc, -Ct.x, -Ct.y, -Ct.z), lt.uniform1i(Fe.sampLoc, 0), Ne.space || ht ? lt.disable(o.WEBGL.DEPTH_TEST) : lt.enable(o.WEBGL.DEPTH_TEST), lt.disableVertexAttribArray(0), lt.disableVertexAttribArray(1), lt.disableVertexAttribArray(2), lt.disableVertexAttribArray(3), lt.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), lt.enableVertexAttribArray(Fe.vertLoc), lt.enableVertexAttribArray(Fe.textureLoc), lt.vertexAttribPointer(Fe.vertLoc, 3, o.WEBGL.FLOAT, !1, 20, 0), lt.vertexAttribPointer(Fe.textureLoc, 2, o.WEBGL.FLOAT, !1, 20, 12), lt.activeTexture(o.WEBGL.TEXTURE0), lt.bindTexture(o.WEBGL.TEXTURE_2D, Ye), lt.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ge), lt.enable(o.WEBGL.BLEND), ht ? lt.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE) : lt.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var He = {};
            (0, s.registerType)("TileShader", [Fe, He, null]);
            function We() {
            }
            We.vertLoc = 0, We.textureLoc = 0, We.initialized = !1, We._prog = null, We.blankValue = 0, We.bScale = 1, We.bZero = 0, We.min = 0, We.max = 0, We.transparentBlack = !1, We.containsBlanks = !1, We.scaleType = 0, We.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        #version 300 es

        precision mediump float;
        in vec2 vTextureCoord;
        in vec3 vNormal;
        in vec3 vCamVector;
        out vec4 fragmentColor;

        uniform sampler2D uSampler;
        uniform sampler2D colorSampler;
        uniform float blank;
        uniform float bzero;
        uniform float bscale;
        uniform float min;
        uniform float max;
        uniform bool containsBlanks;
        uniform bool transparentBlack;
        uniform int scaleType;
        uniform float opacity;

        bool isNaN(float value) {
            // See https://stackoverflow.com/questions/9446888/best-way-to-detect-nans-in-opengl-shaders
            // PKGW also finds that we need "value != value" on his Dell laptop running
            // Chrome on Linux.
            return (value != value) || !(value < 0.0 || 0.0 < value || value == 0.0);
        }

        void main(void) {
            //FITS images are flipped on the y axis
            vec4 color = texture(uSampler, vec2(vTextureCoord.x, 1.0 - vTextureCoord.y));

            if(isNaN(color.r) || (containsBlanks && abs(blank - color.r) < 0.00000001)){
                fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);
            } else {
                float physicalValue = (bzero + bscale * color.r - min) / (max - min);
                if(transparentBlack && physicalValue <= 0.0){
                    fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);
                    return;
                }

                physicalValue = clamp(physicalValue, 0.0, 1.0);

                switch(scaleType){
                    case 1:
                        physicalValue = log(physicalValue * 255.0 + 1.0 ) / log(256.0);
                        break;
                    case 2:
                        physicalValue = physicalValue * physicalValue;
                        break;
                    case 3:
                        physicalValue = sqrt(physicalValue);
                        break;
                }
                vec4 colorFromColorMapper = texture(colorSampler, vec2(physicalValue, 0.5));
                fragmentColor = vec4(colorFromColorMapper.rgb, opacity);
            }
        }
    `, Ye = `        #version 300 es

        in vec3 aVertexPosition;
        in vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;
        uniform vec3 uCenterScreen;

        out vec2 vTextureCoord;

        void main(void) {
            if(length(uCenterScreen) > 0.0000001) {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 0.0) + vec4(uCenterScreen, 1.0);
            } else {
                gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            }

            vTextureCoord = aTextureCoord;
        }
    `;
              We._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(We._frag, Ge), Be.compileShader(We._frag);
              var je = Be.getShaderParameter(We._frag, o.WEBGL.COMPILE_STATUS);
              if (!je) {
                var ht = Be.getShaderInfoLog(We._frag);
                console.log(ht);
              }
              We._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(We._vert, Ye), Be.compileShader(We._vert);
              var qe = Be.getShaderParameter(We._vert, o.WEBGL.COMPILE_STATUS);
              if (!qe) {
                var lt = Be.getShaderInfoLog(We._vert);
                console.log(lt);
              }
              We._prog = Be.createProgram(), Be.attachShader(We._prog, We._vert), Be.attachShader(We._prog, We._frag), Be.linkProgram(We._prog), Be.getProgramParameter(We._prog, o.WEBGL.LINK_STATUS), Be.useProgram(We._prog), We.vertLoc = Be.getAttribLocation(We._prog, "aVertexPosition"), We.textureLoc = Be.getAttribLocation(We._prog, "aTextureCoord"), We.projMatLoc = Be.getUniformLocation(We._prog, "uPMatrix"), We.mvMatLoc = Be.getUniformLocation(We._prog, "uMVMatrix"), We.sampLoc = Be.getUniformLocation(We._prog, "uSampler"), We.colorLoc = Be.getUniformLocation(We._prog, "colorSampler"), We.centerScreenLoc = Be.getUniformLocation(We._prog, "uCenterScreen"), We.blank = Be.getUniformLocation(We._prog, "blank"), We.bzero = Be.getUniformLocation(We._prog, "bzero"), We.bscale = Be.getUniformLocation(We._prog, "bscale"), We.minLoc = Be.getUniformLocation(We._prog, "min"), We.maxLoc = Be.getUniformLocation(We._prog, "max"), We.transparentBlackLoc = Be.getUniformLocation(We._prog, "transparentBlack"), We.containsBlanksLoc = Be.getUniformLocation(We._prog, "containsBlanks"), We.scalingLocation = Be.getUniformLocation(We._prog, "scaleType"), We.opacityLoc = Be.getUniformLocation(We._prog, "opacity"), (0, l.set_tileUvMultiple)(1), (0, l.set_tileDemEnabled)(!0), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), We.initialized = !0;
            }, We.use = function(Ne, Be, Ge, Ye, je, ht, qe) {
              Ye == null && (Ye = c.Texture.getEmpty());
              var lt = Ne.gl;
              if (lt != null) {
                We.initialized || We.init(Ne), lt.useProgram(We._prog);
                var ft = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                if (lt.uniform1f(We.opacityLoc, je), lt.uniformMatrix4fv(We.mvMatLoc, !1, ft.floatArray()), lt.uniformMatrix4fv(We.projMatLoc, !1, Ne.get_projection().floatArray()), qe.lengthSq() > 1e-3) {
                  var _t = a.Matrix3d.multiplyMatrix(ft, Ne.get_projection()), St = _t.transform(qe);
                  lt.uniform3f(We.centerScreenLoc, St.x, St.y, St.z);
                } else
                  lt.uniform3f(We.centerScreenLoc, 0, 0, 0);
                lt.uniform1i(We.sampLoc, 0), lt.uniform1i(We.colorLoc, 1), lt.uniform1f(We.blank, We.blankValue), lt.uniform1f(We.bzero, We.bZero), lt.uniform1f(We.bscale, We.bScale), lt.uniform1f(We.minLoc, We.min), lt.uniform1f(We.maxLoc, We.max), lt.uniform1i(We.transparentBlackLoc, We.transparentBlack), lt.uniform1i(We.containsBlanksLoc, We.containsBlanks), lt.uniform1i(We.scalingLocation, We.scaleType), Ne.space || ht ? lt.disable(o.WEBGL.DEPTH_TEST) : lt.enable(o.WEBGL.DEPTH_TEST), lt.disableVertexAttribArray(0), lt.disableVertexAttribArray(1), lt.disableVertexAttribArray(2), lt.disableVertexAttribArray(3), lt.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), lt.enableVertexAttribArray(We.vertLoc), lt.enableVertexAttribArray(We.textureLoc), lt.vertexAttribPointer(We.vertLoc, 3, o.WEBGL.FLOAT, !1, 20, 0), lt.vertexAttribPointer(We.textureLoc, 2, o.WEBGL.FLOAT, !1, 20, 12), lt.activeTexture(o.WEBGL.TEXTURE0), lt.bindTexture(o.WEBGL.TEXTURE_2D, Ye), lt.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ge), lt.enable(o.WEBGL.BLEND), ht ? lt.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE) : lt.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var Ke = {};
            (0, s.registerType)("FitsShader", [We, Ke, null]);
            function $() {
            }
            $.vertLoc = 0, $.textureLoc = 0, $.initialized = !1, $._prog = null, $.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision mediump float;

        varying vec2 vTextureCoord;

        uniform sampler2D uSampler;
        uniform float opacity;

        void main(void) {
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
        }
    `, Ye = `        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
        }
    `;
              $._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource($._frag, Ge), Be.compileShader($._frag);
              var je = Be.getShaderParameter($._frag, o.WEBGL.COMPILE_STATUS);
              je || Be.getShaderInfoLog($._frag), $._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource($._vert, Ye), Be.compileShader($._vert);
              var ht = Be.getShaderParameter($._vert, o.WEBGL.COMPILE_STATUS);
              ht || Be.getShaderInfoLog($._vert), $._prog = Be.createProgram(), Be.attachShader($._prog, $._vert), Be.attachShader($._prog, $._frag), Be.linkProgram($._prog), Be.getProgramParameter($._prog, o.WEBGL.LINK_STATUS), Be.useProgram($._prog), $.vertLoc = Be.getAttribLocation($._prog, "aVertexPosition"), $.textureLoc = Be.getAttribLocation($._prog, "aTextureCoord"), $.projMatLoc = Be.getUniformLocation($._prog, "uPMatrix"), $.mvMatLoc = Be.getUniformLocation($._prog, "uMVMatrix"), $.sampLoc = Be.getUniformLocation($._prog, "uSampler"), $.opacityLoc = Be.getUniformLocation($._prog, "opacity"), (0, l.set_tileUvMultiple)(1), (0, l.set_tileDemEnabled)(!0), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), $.initialized = !0;
            }, $.use = function(Ne, Be, Ge, Ye, je, ht) {
              Ye == null && (Ye = c.Texture.getEmpty());
              var qe = Ne.gl;
              if (qe != null) {
                $.initialized || $.init(Ne), qe.useProgram($._prog);
                var lt = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                qe.uniform1f($.opacityLoc, je), qe.uniformMatrix4fv($.mvMatLoc, !1, lt.floatArray()), qe.uniformMatrix4fv($.projMatLoc, !1, Ne.get_projection().floatArray()), qe.uniform1i($.sampLoc, 0), Ne.space || ht ? qe.disable(o.WEBGL.DEPTH_TEST) : qe.enable(o.WEBGL.DEPTH_TEST), qe.disableVertexAttribArray(0), qe.disableVertexAttribArray(1), qe.disableVertexAttribArray(2), qe.disableVertexAttribArray(3), qe.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), qe.enableVertexAttribArray($.vertLoc), qe.enableVertexAttribArray($.textureLoc), qe.vertexAttribPointer($.vertLoc, 3, o.WEBGL.FLOAT, !1, 20, 0), qe.vertexAttribPointer($.textureLoc, 2, o.WEBGL.FLOAT, !1, 20, 12), qe.activeTexture(o.WEBGL.TEXTURE0), qe.bindTexture(o.WEBGL.TEXTURE_2D, Ye), qe.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ge), qe.enable(o.WEBGL.BLEND), ht ? qe.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE) : qe.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var De = {};
            (0, s.registerType)("ImageShader", [$, De, null]);
            function Re() {
            }
            Re.vertLoc = 0, Re.textureLoc = 0, Re.initialized = !1, Re._prog = null, Re.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision mediump float;

        varying vec2 vTextureCoord;

        uniform sampler2D uSampler;
        uniform float opacity;

        void main(void) {
            vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
            gl_FragColor = col * opacity;
        }
    `, Ye = `        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec3 vNormal;
        varying vec3 vCamVector;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
        }
    `;
              Re._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(Re._frag, Ge), Be.compileShader(Re._frag);
              var je = Be.getShaderParameter(Re._frag, o.WEBGL.COMPILE_STATUS);
              je || Be.getShaderInfoLog(Re._frag), Re._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(Re._vert, Ye), Be.compileShader(Re._vert);
              var ht = Be.getShaderParameter(Re._vert, o.WEBGL.COMPILE_STATUS);
              ht || Be.getShaderInfoLog(Re._vert), Re._prog = Be.createProgram(), Be.attachShader(Re._prog, Re._vert), Be.attachShader(Re._prog, Re._frag), Be.linkProgram(Re._prog), Be.getProgramParameter(Re._prog, o.WEBGL.LINK_STATUS), Be.useProgram(Re._prog), Re.vertLoc = Be.getAttribLocation(Re._prog, "aVertexPosition"), Re.textureLoc = Be.getAttribLocation(Re._prog, "aTextureCoord"), Re.projMatLoc = Be.getUniformLocation(Re._prog, "uPMatrix"), Re.mvMatLoc = Be.getUniformLocation(Re._prog, "uMVMatrix"), Re.sampLoc = Be.getUniformLocation(Re._prog, "uSampler"), Re.opacityLoc = Be.getUniformLocation(Re._prog, "opacity"), (0, l.set_tileUvMultiple)(1), (0, l.set_tileDemEnabled)(!0), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), Re.initialized = !0;
            }, Re.use = function(Ne, Be, Ge, Ye, je, ht) {
              Ye == null && (Ye = c.Texture.getEmpty());
              var qe = Ne.gl;
              if (qe != null) {
                Re.initialized || Re.init(Ne), qe.useProgram(Re._prog);
                var lt = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                qe.uniform1f(Re.opacityLoc, je), qe.uniformMatrix4fv(Re.mvMatLoc, !1, lt.floatArray()), qe.uniformMatrix4fv(Re.projMatLoc, !1, Ne.get_projection().floatArray()), qe.uniform1i(Re.sampLoc, 0), Ne.space || ht ? qe.disable(o.WEBGL.DEPTH_TEST) : qe.enable(o.WEBGL.DEPTH_TEST), qe.disableVertexAttribArray(0), qe.disableVertexAttribArray(1), qe.disableVertexAttribArray(2), qe.disableVertexAttribArray(3), qe.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), qe.enableVertexAttribArray(Re.vertLoc), qe.enableVertexAttribArray(Re.textureLoc), qe.vertexAttribPointer(Re.vertLoc, 3, o.WEBGL.FLOAT, !1, 32, 0), qe.vertexAttribPointer(Re.textureLoc, 2, o.WEBGL.FLOAT, !1, 32, 24), qe.activeTexture(o.WEBGL.TEXTURE0), qe.bindTexture(o.WEBGL.TEXTURE_2D, Ye), qe.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ge), qe.enable(o.WEBGL.BLEND), ht ? qe.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE) : qe.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var Ie = {};
            (0, s.registerType)("ImageShader2", [Re, Ie, null]);
            function O() {
            }
            O.vertLoc = 0, O.textureLoc = 0, O.colorLoc = 0, O.initialized = !1, O._prog = null, O.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision mediump float;

        varying vec2 vTextureCoord;
        varying lowp vec4 vColor;
        uniform sampler2D uSampler;

        void main(void) {
            gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t)) * vColor;
        }
    `, Ye = `        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;
        attribute lowp vec4 aColor;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec4 vColor;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
            vColor = aColor;
        }
    `;
              O._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(O._frag, Ge), Be.compileShader(O._frag), Be.getShaderParameter(O._frag, o.WEBGL.COMPILE_STATUS), O._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(O._vert, Ye), Be.compileShader(O._vert), Be.getShaderParameter(O._vert, o.WEBGL.COMPILE_STATUS), O._prog = Be.createProgram(), Be.attachShader(O._prog, O._vert), Be.attachShader(O._prog, O._frag), Be.linkProgram(O._prog), Be.getProgramParameter(O._prog, o.WEBGL.LINK_STATUS), Be.useProgram(O._prog), O.vertLoc = Be.getAttribLocation(O._prog, "aVertexPosition"), O.textureLoc = Be.getAttribLocation(O._prog, "aTextureCoord"), O.colorLoc = Be.getAttribLocation(O._prog, "aColor"), O.projMatLoc = Be.getUniformLocation(O._prog, "uPMatrix"), O.mvMatLoc = Be.getUniformLocation(O._prog, "uMVMatrix"), O.sampLoc = Be.getUniformLocation(O._prog, "uSampler"), (0, l.set_tileUvMultiple)(1), (0, l.set_tileDemEnabled)(!0), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), O.initialized = !0;
            }, O.use = function(Ne, Be, Ge) {
              Ge == null && (Ge = c.Texture.getEmpty());
              var Ye = Ne.gl;
              if (Ye != null) {
                O.initialized || O.init(Ne), Ye.useProgram(O._prog);
                var je = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                Ye.uniformMatrix4fv(O.mvMatLoc, !1, je.floatArray()), Ye.uniformMatrix4fv(O.projMatLoc, !1, Ne.get_projection().floatArray()), Ye.uniform1i(O.sampLoc, 0), Ye.disable(o.WEBGL.DEPTH_TEST), Ye.disableVertexAttribArray(0), Ye.disableVertexAttribArray(1), Ye.disableVertexAttribArray(2), Ye.disableVertexAttribArray(3), Ye.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), Ye.enableVertexAttribArray(O.vertLoc), Ye.enableVertexAttribArray(O.textureLoc), Ye.enableVertexAttribArray(O.colorLoc), Ye.vertexAttribPointer(O.vertLoc, 3, o.WEBGL.FLOAT, !1, 36, 0), Ye.vertexAttribPointer(O.colorLoc, 4, o.WEBGL.FLOAT, !1, 36, 12), Ye.vertexAttribPointer(O.textureLoc, 2, o.WEBGL.FLOAT, !1, 36, 28), Ye.activeTexture(o.WEBGL.TEXTURE0), Ye.bindTexture(o.WEBGL.TEXTURE_2D, Ge), Ye.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, null), Ye.enable(o.WEBGL.BLEND), Ye.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var Ue = {};
            (0, s.registerType)("SpriteShader", [O, Ue, null]);
            function $e() {
            }
            $e.vertLoc = 0, $e.textureLoc = 0, $e.colorLoc = 0, $e.initialized = !1, $e._prog = null, $e.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision mediump float;

        varying lowp vec4 vColor;

        void main(void) {
            gl_FragColor =  vColor;
        }
    `, Ye = `        attribute vec3 aVertexPosition;
        attribute lowp vec4 aColor;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;
        varying vec4 vColor;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vColor = aColor;
        }
    `;
              $e._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource($e._frag, Ge), Be.compileShader($e._frag), Be.getShaderParameter($e._frag, o.WEBGL.COMPILE_STATUS), $e._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource($e._vert, Ye), Be.compileShader($e._vert), Be.getShaderParameter($e._vert, o.WEBGL.COMPILE_STATUS), $e._prog = Be.createProgram(), Be.attachShader($e._prog, $e._vert), Be.attachShader($e._prog, $e._frag), Be.linkProgram($e._prog), Be.getProgramParameter($e._prog, o.WEBGL.LINK_STATUS), Be.useProgram($e._prog), $e.vertLoc = Be.getAttribLocation($e._prog, "aVertexPosition"), $e.colorLoc = Be.getAttribLocation($e._prog, "aColor"), $e.projMatLoc = Be.getUniformLocation($e._prog, "uPMatrix"), $e.mvMatLoc = Be.getUniformLocation($e._prog, "uMVMatrix"), Be.disable(o.WEBGL.DEPTH_TEST), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), $e.initialized = !0;
            }, $e.use = function(Ne, Be) {
              var Ge = Ne.gl;
              if (Ge != null) {
                $e.initialized || $e.init(Ne), Ge.useProgram($e._prog);
                var Ye = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                Ge.uniformMatrix4fv($e.mvMatLoc, !1, Ye.floatArray()), Ge.uniformMatrix4fv($e.projMatLoc, !1, Ne.get_projection().floatArray()), Ge.uniform1i($e.sampLoc, 0), Ge.disable(o.WEBGL.DEPTH_TEST), Ge.disableVertexAttribArray(0), Ge.disableVertexAttribArray(1), Ge.disableVertexAttribArray(2), Ge.disableVertexAttribArray(3), Ge.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), Ge.enableVertexAttribArray($e.vertLoc), Ge.enableVertexAttribArray($e.textureLoc), Ge.enableVertexAttribArray($e.colorLoc), Ge.vertexAttribPointer($e.vertLoc, 3, o.WEBGL.FLOAT, !1, 36, 0), Ge.vertexAttribPointer($e.colorLoc, 4, o.WEBGL.FLOAT, !1, 36, 12), Ge.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, null), Ge.enable(o.WEBGL.BLEND), Ge.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var Ze = {};
            (0, s.registerType)("ShapeSpriteShader", [$e, Ze, null]);
            function Qe() {
            }
            Qe.vertLoc = 0, Qe.textureLoc = 0, Qe.initialized = !1, Qe._prog = null, Qe.init = function(Ne) {
              var Be = Ne.gl;
              const Ge = `        precision mediump float;

        varying vec2 vTextureCoord;

        uniform sampler2D uSampler;

        void main(void) {
            gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
        }
    `, Ye = `        attribute vec3 aVertexPosition;
        attribute vec2 aTextureCoord;

        uniform mat4 uMVMatrix;
        uniform mat4 uPMatrix;

        varying vec2 vTextureCoord;

        void main(void) {
            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
            vTextureCoord = aTextureCoord;
        }
    `;
              Qe._frag = Be.createShader(o.WEBGL.FRAGMENT_SHADER), Be.shaderSource(Qe._frag, Ge), Be.compileShader(Qe._frag), Be.getShaderParameter(Qe._frag, o.WEBGL.COMPILE_STATUS), Qe._vert = Be.createShader(o.WEBGL.VERTEX_SHADER), Be.shaderSource(Qe._vert, Ye), Be.compileShader(Qe._vert), Be.getShaderParameter(Qe._vert, o.WEBGL.COMPILE_STATUS), Qe._prog = Be.createProgram(), Be.attachShader(Qe._prog, Qe._vert), Be.attachShader(Qe._prog, Qe._frag), Be.linkProgram(Qe._prog), Be.getProgramParameter(Qe._prog, o.WEBGL.LINK_STATUS), Be.useProgram(Qe._prog), Qe.vertLoc = Be.getAttribLocation(Qe._prog, "aVertexPosition"), Qe.textureLoc = Be.getAttribLocation(Qe._prog, "aTextureCoord"), Qe.projMatLoc = Be.getUniformLocation(Qe._prog, "uPMatrix"), Qe.mvMatLoc = Be.getUniformLocation(Qe._prog, "uMVMatrix"), Qe.sampLoc = Be.getUniformLocation(Qe._prog, "uSampler"), (0, l.set_tileUvMultiple)(1), (0, l.set_tileDemEnabled)(!0), Be.enable(o.WEBGL.BLEND), Be.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA), Qe.initialized = !0;
            }, Qe.use = function(Ne, Be, Ge) {
              Ge == null && (Ge = c.Texture.getEmpty());
              var Ye = Ne.gl;
              if (Ye != null) {
                Qe.initialized || Qe.init(Ne), Ye.useProgram(Qe._prog);
                var je = a.Matrix3d.multiplyMatrix(Ne.get_world(), Ne.get_view());
                Ye.uniformMatrix4fv(Qe.mvMatLoc, !1, je.floatArray()), Ye.uniformMatrix4fv(Qe.projMatLoc, !1, Ne.get_projection().floatArray()), Ye.uniform1i(Qe.sampLoc, 0), Ne.space ? Ye.disable(o.WEBGL.DEPTH_TEST) : Ye.enable(o.WEBGL.DEPTH_TEST), Ye.disableVertexAttribArray(0), Ye.disableVertexAttribArray(1), Ye.disableVertexAttribArray(2), Ye.disableVertexAttribArray(3), Ye.bindBuffer(o.WEBGL.ARRAY_BUFFER, Be), Ye.enableVertexAttribArray(Qe.vertLoc), Ye.enableVertexAttribArray(Qe.textureLoc), Ye.vertexAttribPointer(Qe.vertLoc, 3, o.WEBGL.FLOAT, !1, 20, 0), Ye.vertexAttribPointer(Qe.textureLoc, 2, o.WEBGL.FLOAT, !1, 20, 12), Ye.activeTexture(o.WEBGL.TEXTURE0), Ye.bindTexture(o.WEBGL.TEXTURE_2D, Ge), Ye.enable(o.WEBGL.BLEND), Ye.blendFunc(o.WEBGL.SRC_ALPHA, o.WEBGL.ONE_MINUS_SRC_ALPHA);
              }
            };
            var Ae = {};
            (0, s.registerType)("TextShader", [Qe, Ae, null]);
          }
        ),
        /***/
        "./esm/graphics/sprite2d.js": (
          /*!**********************************!*\
            !*** ./esm/graphics/sprite2d.js ***!
            \**********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Sprite2d: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ./shaders.js */
              "./esm/graphics/shaders.js"
            ), o = n(
              /*! ./webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            );
            function c() {
              this.vertCount = 0;
            }
            var _ = {
              draw: function(u, y, g, Ee, Ve, Me) {
                this.vertexBuffer == null ? this.create(y) : this.update(y), Ee == null ? (l.ShapeSpriteShader.use(u, this.vertexBuffer), u.gl.drawArrays(Ve ? o.WEBGL.TRIANGLE_STRIP : o.WEBGL.TRIANGLES, 0, y.length)) : (l.SpriteShader.use(u, this.vertexBuffer, Ee != null ? Ee.texture2d : null), u.gl.drawArrays(Ve ? o.WEBGL.TRIANGLE_STRIP : o.WEBGL.TRIANGLES, 0, y.length));
              },
              create: function(u) {
                this.vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                for (var y = new Float32Array(u.length * 9), g = y, Ee = 0, Ve = a.ss.enumerate(u); Ve.moveNext(); ) {
                  var Me = Ve.current;
                  g[Ee++] = Me.position.x, g[Ee++] = Me.position.y, g[Ee++] = Me.position.z, g[Ee++] = Me.color.r / 255, g[Ee++] = Me.color.g / 255, g[Ee++] = Me.color.b / 255, g[Ee++] = Me.color.a / 255, g[Ee++] = Me.tu, g[Ee++] = Me.tv;
                }
                t.tilePrepDevice.bufferData(o.WEBGL.ARRAY_BUFFER, y, o.WEBGL.DYNAMIC_DRAW);
              },
              update: function(u) {
                if (this.vertCount < u.length) {
                  t.tilePrepDevice.deleteBuffer(this.vertexBuffer), this.create(u);
                  return;
                }
                t.tilePrepDevice.bindBuffer(o.WEBGL.ARRAY_BUFFER, this.vertexBuffer);
                for (var y = new Float32Array(u.length * 9), g = y, Ee = 0, Ve = a.ss.enumerate(u); Ve.moveNext(); ) {
                  var Me = Ve.current;
                  g[Ee++] = Me.position.x, g[Ee++] = Me.position.y, g[Ee++] = Me.position.z, g[Ee++] = Me.color.r / 255, g[Ee++] = Me.color.g / 255, g[Ee++] = Me.color.b / 255, g[Ee++] = Me.color.a / 255, g[Ee++] = Me.tu, g[Ee++] = Me.tv;
                }
                t.tilePrepDevice.bufferSubData(o.WEBGL.ARRAY_BUFFER, 0, y);
              }
            };
            (0, s.registerType)("Sprite2d", [c, _, null]);
          }
        ),
        /***/
        "./esm/graphics/tessellator.js": (
          /*!*************************************!*\
            !*** ./esm/graphics/tessellator.js ***!
            \*************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Tessellator: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            );
            function t() {
            }
            t.tesselateSimplePoly = function(o) {
              var c = [], _ = new t();
              return _.process(o, c), c;
            };
            var l = {
              _isLeftOfHalfSpace: function(o, c, _) {
                o.normalize(), c.normalize();
                var u = a.Vector3d.cross(o, c), y = a.Vector3d.dot(u, _);
                return y > 0;
              },
              _insideTriangle: function(o, c, _, u) {
                return !(!this._isLeftOfHalfSpace(o, c, u) || !this._isLeftOfHalfSpace(c, _, u) || !this._isLeftOfHalfSpace(_, o, u));
              },
              _canClipEar: function(o, c, _, u, y, g) {
                var Ee, Ve = o[g[c]].copy(), Me = o[g[_]].copy(), B = o[g[u]].copy(), Pe, k = a.Vector3d.subtractVectors(Me, Ve);
                k.normalize();
                var b = a.Vector3d.subtractVectors(Me, B);
                b.normalize();
                var Le = a.Vector3d.cross(k, b), xe = Me.copy();
                if (xe.normalize(), a.Vector3d.dot(Le, xe) > 0)
                  return !1;
                for (Ee = 0; Ee < y; Ee++)
                  if (!(Ee === c || Ee === _ || Ee === u) && (Pe = o[g[Ee]].copy(), this._insideTriangle(Ve, Me, B, Pe)))
                    return !1;
                return !0;
              },
              process: function(o, c) {
                var _ = o.length;
                if (o.length < 3)
                  return !1;
                for (var u = new Array(o.length), y = 0; y < _; y++)
                  u[y] = y;
                for (var g = _, Ee = 2 * g, Ve = 0, Me = g - 1; g > 2; ) {
                  if (0 >= Ee--)
                    return !1;
                  var B = Me;
                  g <= B && (B = 0), Me = B + 1, g <= Me && (Me = 0);
                  var Pe = Me + 1;
                  if (g <= Pe && (Pe = 0), this._canClipEar(o, B, Me, Pe, g, u)) {
                    var k, b;
                    for (c.push(u[B]), c.push(u[Me]), c.push(u[Pe]), Ve++, k = Me, b = Me + 1; b < g; k++, b++)
                      u[k] = u[b];
                    g--, Ee = 2 * g;
                  }
                }
                return !0;
              }
            };
            (0, s.registerType)("Tessellator", [t, l, null]);
          }
        ),
        /***/
        "./esm/graphics/texture.js": (
          /*!*********************************!*\
            !*** ./esm/graphics/texture.js ***!
            \*********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Texture: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ../url_helpers.js */
              "./esm/url_helpers.js"
            ), o = n(
              /*! ./webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            );
            function c() {
              this.imageElement = null, this.texture2d = null, this._downloading = !1, this._ready = !1, this._errored = !1, this.URL = "";
            }
            c.empty = null, c.getEmpty = function() {
              return c.empty == null && (c.empty = t.tilePrepDevice.createTexture(), t.tilePrepDevice.bindTexture(o.WEBGL.TEXTURE_2D, c.empty), t.tilePrepDevice.texImage2D(o.WEBGL.TEXTURE_2D, 0, o.WEBGL.RGBA, 1, 1, 0, o.WEBGL.RGBA, o.WEBGL.UNSIGNED_BYTE, new Uint8Array([0, 0, 0, 0])), t.tilePrepDevice.bindTexture(o.WEBGL.TEXTURE_2D, null)), c.empty;
            }, c.fromUrl = function(u) {
              var y = new c();
              return y.load(u), y;
            }, c.isPowerOfTwo = function(u) {
              return !(u & u - 1);
            }, c.fitPowerOfTwo = function(u) {
              u--;
              for (var y = 1; y < 32; y <<= 1)
                u = u | u >> y;
              return u + 1;
            };
            var _ = {
              cleanUp: function() {
                this.imageElement = null, t.tilePrepDevice.deleteTexture(this.texture2d);
              },
              dispose: function() {
                this.cleanUp();
              },
              load: function(u) {
                var y = this;
                if (this.URL = u, !(typeof document > "u") && !this._downloading) {
                  this._downloading = !0, this.imageElement = document.createElement("img");
                  var g = this.imageElement;
                  this.imageElement.addEventListener("load", function(Ee) {
                    y._ready = !0, y._downloading = !1, y._errored = !1, y.makeTexture();
                  }, !1), this.imageElement.addEventListener("error", function(Ee) {
                    if (!y.imageElement.hasAttribute("proxyattempt")) {
                      y.imageElement.setAttribute("proxyattempt", !0);
                      var Ve = l.URLHelpers.singleton.activateProxy(y.URL);
                      if (Ve != null) {
                        y.imageElement.src = Ve;
                        return;
                      }
                    }
                    y._downloading = !1, y._ready = !1, y._errored = !0;
                  }, !1), g.crossOrigin = "anonymous", this.imageElement.src = this.URL;
                }
              },
              makeTexture: function() {
                if (t.tilePrepDevice != null)
                  try {
                    this.texture2d = t.tilePrepDevice.createTexture(), t.tilePrepDevice.bindTexture(o.WEBGL.TEXTURE_2D, this.texture2d);
                    var u = this.imageElement;
                    if ((!c.isPowerOfTwo(this.imageElement.height) | !c.isPowerOfTwo(this.imageElement.width)) === 1) {
                      var y = document.createElement("canvas");
                      y.height = c.fitPowerOfTwo(u.height), y.width = c.fitPowerOfTwo(u.width);
                      var g = y.getContext("2d");
                      g.drawImage(u, 0, 0, y.width, y.height), u = y;
                    }
                    t.tilePrepDevice.texParameteri(o.WEBGL.TEXTURE_2D, o.WEBGL.TEXTURE_WRAP_S, o.WEBGL.CLAMP_TO_EDGE), t.tilePrepDevice.texParameteri(o.WEBGL.TEXTURE_2D, o.WEBGL.TEXTURE_WRAP_T, o.WEBGL.CLAMP_TO_EDGE), t.tilePrepDevice.texImage2D(o.WEBGL.TEXTURE_2D, 0, o.WEBGL.RGBA, o.WEBGL.RGBA, o.WEBGL.UNSIGNED_BYTE, u), t.tilePrepDevice.texParameteri(o.WEBGL.TEXTURE_2D, o.WEBGL.TEXTURE_MIN_FILTER, o.WEBGL.LINEAR_MIPMAP_NEAREST), t.tilePrepDevice.generateMipmap(o.WEBGL.TEXTURE_2D), t.tilePrepDevice.bindTexture(o.WEBGL.TEXTURE_2D, null);
                  } catch {
                    this._errored = !0;
                  }
              }
            };
            (0, s.registerType)("Texture", [c, _, null, a.ss.IDisposable]);
          }
        ),
        /***/
        "./esm/graphics/webgl_constants.js": (
          /*!*****************************************!*\
            !*** ./esm/graphics/webgl_constants.js ***!
            \*****************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              WEBGL: () => (
                /* binding */
                s
              )
              /* harmony export */
            });
            const s = {
              ACTIVE_ATTRIBUTE_MAX_LENGTH: 35722,
              ACTIVE_ATTRIBUTES: 35721,
              ACTIVE_TEXTURE: 34016,
              ACTIVE_UNIFORM_MAX_LENGTH: 35719,
              ACTIVE_UNIFORMS: 35718,
              ALIASED_LINE_WIDTH_RANGE: 33902,
              ALIASED_POINT_SIZE_RANGE: 33901,
              ALPHA: 6406,
              ALPHA_BITS: 3413,
              ALWAYS: 519,
              ARRAY_BUFFER: 34962,
              ARRAY_BUFFER_BINDING: 34964,
              ATTACHED_SHADERS: 35717,
              BACK: 1029,
              BLEND: 3042,
              BLEND_COLOR: 32773,
              BLEND_DST_ALPHA: 32970,
              BLEND_DST_RGB: 32968,
              BLEND_EQUATION: 32777,
              BLEND_EQUATION_ALPHA: 34877,
              BLEND_EQUATION_RGB: 32777,
              BLEND_SRC_ALPHA: 32971,
              BLEND_SRC_RGB: 32969,
              BLUE_BITS: 3412,
              BOOL: 35670,
              BOOL_VEC2: 35671,
              BOOL_VEC3: 35672,
              BOOL_VEC4: 35673,
              BUFFER_SIZE: 34660,
              BUFFER_USAGE: 34661,
              BYTE: 5120,
              CCW: 2305,
              CLAMP_TO_EDGE: 33071,
              COLOR_ATTACHMENT0: 36064,
              COLOR_BUFFER_BIT: 16384,
              COLOR_CLEAR_VALUE: 3106,
              COLOR_WRITEMASK: 3107,
              COMPILE_STATUS: 35713,
              COMPRESSED_TEXTURE_FORMATS: 34467,
              CONSTANT_ALPHA: 32771,
              CONSTANT_COLOR: 32769,
              CULL_FACE: 2884,
              CULL_FACE_MODE: 2885,
              CURRENT_PROGRAM: 35725,
              CURRENT_VERTEX_ATTRIB: 34342,
              CW: 2304,
              DECR: 7683,
              DECR_WRAP: 34056,
              DELETE_STATUS: 35712,
              DEPTH_ATTACHMENT: 36096,
              DEPTH_BITS: 3414,
              DEPTH_BUFFER_BIT: 256,
              DEPTH_CLEAR_VALUE: 2931,
              DEPTH_COMPONENT: 6402,
              DEPTH_COMPONENT16: 33189,
              DEPTH_FUNC: 2932,
              DEPTH_RANGE: 2928,
              DEPTH_STENCIL: 34041,
              DEPTH_STENCIL_ATTACHMENT: 33306,
              DEPTH_TEST: 2929,
              DEPTH_WRITEMASK: 2930,
              DITHER: 3024,
              DONT_CARE: 4352,
              DST_ALPHA: 772,
              DST_COLOR: 774,
              DYNAMIC_DRAW: 35048,
              ELEMENT_ARRAY_BUFFER: 34963,
              ELEMENT_ARRAY_BUFFER_BINDING: 34965,
              EQUAL: 514,
              EXTENSIONS: 7939,
              FASTEST: 4353,
              FLOAT: 5126,
              FLOAT_MAT2: 35674,
              FLOAT_MAT3: 35675,
              FLOAT_MAT4: 35676,
              FLOAT_VEC2: 35664,
              FLOAT_VEC3: 35665,
              FLOAT_VEC4: 35666,
              FRAGMENT_SHADER: 35632,
              FRAMEBUFFER: 36160,
              FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: 36049,
              FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: 36048,
              FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: 36051,
              FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: 36050,
              FRAMEBUFFER_BINDING: 36006,
              FRAMEBUFFER_COMPLETE: 36053,
              FRAMEBUFFER_INCOMPLETE_ATTACHMENT: 36054,
              FRAMEBUFFER_INCOMPLETE_DIMENSIONS: 36057,
              FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: 36055,
              FRAMEBUFFER_UNSUPPORTED: 36061,
              FRONT: 1028,
              FRONT_AND_BACK: 1032,
              FRONT_FACE: 2886,
              FUNC_ADD: 32774,
              FUNC_REVERSE_SUBTRACT: 32779,
              FUNC_SUBTRACT: 32778,
              GENERATE_MIPMAP_HINT: 33170,
              GEQUAL: 518,
              GREATER: 516,
              GREEN_BITS: 3411,
              HIGH_FLOAT: 36338,
              HIGH_INT: 36341,
              IMPLEMENTATION_COLOR_READ_FORMAT: 35739,
              IMPLEMENTATION_COLOR_READ_TYPE: 35738,
              INCR: 7682,
              INCR_WRAP: 34055,
              INFO_LOG_LENGTH: 35716,
              INT: 5124,
              INT_VEC2: 35667,
              INT_VEC3: 35668,
              INT_VEC4: 35669,
              INVALID_ENUM: 1280,
              INVALID_FRAMEBUFFER_OPERATION: 1286,
              INVALID_OPERATION: 1282,
              INVALID_VALUE: 1281,
              INVERT: 5386,
              KEEP: 7680,
              LEQUAL: 515,
              LESS: 513,
              LINE_LOOP: 2,
              LINE_STRIP: 3,
              LINE_WIDTH: 2849,
              LINEAR: 9729,
              LINEAR_MIPMAP_LINEAR: 9987,
              LINEAR_MIPMAP_NEAREST: 9985,
              LINES: 1,
              LINK_STATUS: 35714,
              LOW_FLOAT: 36336,
              LOW_INT: 36339,
              LUMINANCE: 6409,
              LUMINANCE_ALPHA: 6410,
              MAX_COMBINED_TEXTURE_IMAGE_UNITS: 35661,
              MAX_CUBE_MAP_TEXTURE_SIZE: 34076,
              MAX_FRAGMENT_UNIFORM_VECTORS: 36349,
              MAX_RENDERBUFFER_SIZE: 34024,
              MAX_TEXTURE_IMAGE_UNITS: 34930,
              MAX_TEXTURE_SIZE: 3379,
              MAX_VARYING_VECTORS: 36348,
              MAX_VERTEX_ATTRIBS: 34921,
              MAX_VERTEX_TEXTURE_IMAGE_UNITS: 35660,
              MAX_VERTEX_UNIFORM_VECTORS: 36347,
              MAX_VIEWPORT_DIMS: 3386,
              MEDIUM_FLOAT: 36337,
              MEDIUM_INT: 36340,
              MIRRORED_REPEAT: 33648,
              NEAREST: 9728,
              NEAREST_MIPMAP_LINEAR: 9986,
              NEAREST_MIPMAP_NEAREST: 9984,
              NEVER: 512,
              NICEST: 4354,
              NO_ERROR: 0,
              NONE: 0,
              NOTEQUAL: 517,
              NUM_COMPRESSED_TEXTURE_FORMATS: 34466,
              ONE: 1,
              ONE_MINUS_CONSTANT_ALPHA: 32772,
              ONE_MINUS_CONSTANT_COLOR: 32770,
              ONE_MINUS_DST_ALPHA: 773,
              ONE_MINUS_DST_COLOR: 775,
              ONE_MINUS_SRC_ALPHA: 771,
              ONE_MINUS_SRC_COLOR: 769,
              OUT_OF_MEMORY: 1285,
              PACK_ALIGNMENT: 3333,
              POINTS: 0,
              POLYGON_OFFSET_FACTOR: 32824,
              POLYGON_OFFSET_FILL: 32823,
              POLYGON_OFFSET_UNITS: 10752,
              RED_BITS: 3410,
              RENDERBUFFER: 36161,
              RENDERBUFFER_ALPHA_SIZE: 36179,
              RENDERBUFFER_BINDING: 36007,
              RENDERBUFFER_BLUE_SIZE: 36178,
              RENDERBUFFER_DEPTH_SIZE: 36180,
              RENDERBUFFER_GREEN_SIZE: 36177,
              RENDERBUFFER_HEIGHT: 36163,
              RENDERBUFFER_INTERNAL_FORMAT: 36164,
              RENDERBUFFER_RED_SIZE: 36176,
              RENDERBUFFER_STENCIL_SIZE: 36181,
              RENDERBUFFER_WIDTH: 36162,
              RENDERER: 7937,
              REPEAT: 10497,
              REPLACE: 7681,
              RGB: 6407,
              RGB8: 32849,
              RGB5_A1: 32855,
              RGB565: 36194,
              RGBA: 6408,
              RGBA8: 32856,
              RGBA16I: 36232,
              RED_INTEGER: 36244,
              RED: 6403,
              R32F: 33326,
              R16I: 33331,
              RGBA4: 32854,
              SAMPLE_ALPHA_TO_COVERAGE: 32926,
              SAMPLE_BUFFERS: 32936,
              SAMPLE_COVERAGE: 32928,
              SAMPLE_COVERAGE_INVERT: 32939,
              SAMPLE_COVERAGE_VALUE: 32938,
              SAMPLER_2D: 35678,
              SAMPLER_CUBE: 35680,
              SAMPLES: 32937,
              SCISSOR_BOX: 3088,
              SCISSOR_TEST: 3089,
              SHADER_COMPILER: 36346,
              SHADER_SOURCE_LENGTH: 35720,
              SHADER_TYPE: 35663,
              SHADING_LANGUAGE_VERSION: 35724,
              SHORT: 5122,
              SRC_ALPHA: 770,
              SRC_ALPHA_SATURATE: 776,
              SRC_COLOR: 768,
              STATIC_DRAW: 35044,
              STENCIL_ATTACHMENT: 36128,
              STENCIL_BACK_FAIL: 34817,
              STENCIL_BACK_FUNC: 34816,
              STENCIL_BACK_PASS_DEPTH_FAIL: 34818,
              STENCIL_BACK_PASS_DEPTH_PASS: 34819,
              STENCIL_BACK_REF: 36003,
              STENCIL_BACK_VALUE_MASK: 36004,
              STENCIL_BACK_WRITEMASK: 36005,
              STENCIL_BITS: 3415,
              STENCIL_BUFFER_BIT: 1024,
              STENCIL_CLEAR_VALUE: 2961,
              STENCIL_FAIL: 2964,
              STENCIL_FUNC: 2962,
              STENCIL_INDEX: 6401,
              STENCIL_INDEX8: 36168,
              STENCIL_PASS_DEPTH_FAIL: 2965,
              STENCIL_PASS_DEPTH_PASS: 2966,
              STENCIL_REF: 2967,
              STENCIL_TEST: 2960,
              STENCIL_VALUE_MASK: 2963,
              STENCIL_WRITEMASK: 2968,
              STREAM_DRAW: 35040,
              SUBPIXEL_BITS: 3408,
              TEXTURE: 5890,
              TEXTURE_2D: 3553,
              TEXTURE_BINDING_2D: 32873,
              TEXTURE_BINDING_CUBE_MAP: 34068,
              TEXTURE_CUBE_MAP: 34067,
              TEXTURE_CUBE_MAP_NEGATIVE_X: 34070,
              TEXTURE_CUBE_MAP_NEGATIVE_Y: 34072,
              TEXTURE_CUBE_MAP_NEGATIVE_Z: 34074,
              TEXTURE_CUBE_MAP_POSITIVE_X: 34069,
              TEXTURE_CUBE_MAP_POSITIVE_Y: 34071,
              TEXTURE_CUBE_MAP_POSITIVE_Z: 34073,
              UNPACK_FLIP_Y_WEBGL: 37440,
              TEXTURE_MAG_FILTER: 10240,
              TEXTURE_MIN_FILTER: 10241,
              TEXTURE_WRAP_S: 10242,
              TEXTURE_WRAP_T: 10243,
              TEXTURE0: 33984,
              TEXTURE1: 33985,
              TEXTURE10: 33994,
              TEXTURE11: 33995,
              TEXTURE12: 33996,
              TEXTURE13: 33997,
              TEXTURE14: 33998,
              TEXTURE15: 33999,
              TEXTURE16: 34e3,
              TEXTURE17: 34001,
              TEXTURE18: 34002,
              TEXTURE19: 34003,
              TEXTURE2: 33986,
              TEXTURE20: 34004,
              TEXTURE21: 34005,
              TEXTURE22: 34006,
              TEXTURE23: 34007,
              TEXTURE24: 34008,
              TEXTURE25: 34009,
              TEXTURE26: 34010,
              TEXTURE27: 34011,
              TEXTURE28: 34012,
              TEXTURE29: 34013,
              TEXTURE3: 33987,
              TEXTURE30: 34014,
              TEXTURE31: 34015,
              TEXTURE4: 33988,
              TEXTURE5: 33989,
              TEXTURE6: 33990,
              TEXTURE7: 33991,
              TEXTURE8: 33992,
              TEXTURE9: 33993,
              TRIANGLE_FAN: 6,
              TRIANGLE_STRIP: 5,
              TRIANGLES: 4,
              UNPACK_ALIGNMENT: 3317,
              UNSIGNED_BYTE: 5121,
              UNSIGNED_INT: 5125,
              UNSIGNED_SHORT: 5123,
              UNSIGNED_SHORT_4_4_4_4: 32819,
              UNSIGNED_SHORT_5_5_5_1: 32820,
              UNSIGNED_SHORT_5_6_5: 33635,
              VALIDATE_STATUS: 35715,
              VENDOR: 7936,
              VERSION: 7938,
              VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: 34975,
              VERTEX_ATTRIB_ARRAY_ENABLED: 34338,
              VERTEX_ATTRIB_ARRAY_NORMALIZED: 34922,
              VERTEX_ATTRIB_ARRAY_POINTER: 34373,
              VERTEX_ATTRIB_ARRAY_SIZE: 34339,
              VERTEX_ATTRIB_ARRAY_STRIDE: 34340,
              VERTEX_ATTRIB_ARRAY_TYPE: 34341,
              VERTEX_SHADER: 35633,
              VIEWPORT: 2978,
              ZERO: 0
            };
          }
        ),
        /***/
        "./esm/grids.js": (
          /*!**********************!*\
            !*** ./esm/grids.js ***!
            \**********************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Grids: () => (
                /* binding */
                Te
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), l = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ./astrocalc/date.js */
              "./esm/astrocalc/date.js"
            ), c = n(
              /*! ./astrocalc/coordinate_transformation.js */
              "./esm/astrocalc/coordinate_transformation.js"
            ), _ = n(
              /*! ./graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), u = n(
              /*! ./graphics/primitives3d.js */
              "./esm/graphics/primitives3d.js"
            ), y = n(
              /*! ./graphics/gl_buffers.js */
              "./esm/graphics/gl_buffers.js"
            ), g = n(
              /*! ./graphics/texture.js */
              "./esm/graphics/texture.js"
            ), Ee = n(
              /*! ./graphics/shaders.js */
              "./esm/graphics/shaders.js"
            ), Ve = n(
              /*! ./color.js */
              "./esm/color.js"
            ), Me = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), B = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), Pe = n(
              /*! ./utilities/binary_reader.js */
              "./esm/utilities/binary_reader.js"
            ), k = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), b = n(
              /*! ./sky_text.js */
              "./esm/sky_text.js"
            ), Le = n(
              /*! ./planets.js */
              "./esm/planets.js"
            ), xe = n(
              /*! ./space_time_controller.js */
              "./esm/space_time_controller.js"
            ), ze = n(
              /*! ./star.js */
              "./esm/star.js"
            ), Se = n(
              /*! ./web_file.js */
              "./esm/web_file.js"
            );
            function Te() {
            }
            Te._galaxyImageIndexBuffer = null, Te._galaxyImageTriangleCount = 0, Te._milkyWayImage = null, Te._starSprites = null, Te._starCount = 0, Te._starsDownloading = !1, Te._stars = null, Te._hipparcosIndex = {}, Te._limitingMagnitude = 16, Te._galaxyTextures = null, Te._galaxyVertexCounts = null, Te._largeSet = !0, Te._cosmosReady = !1, Te._cosmos = null, Te._downloadingGalaxy = !1, Te._eclipticCount = 0, Te._eclipticYear = 0, Te._monthDays = [31, 28.2421, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], Te._monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], Te._eclipticTextYear = 0, Te._createGalaxyImage = function(ke) {
              Te._milkyWayImage == null && (Te._milkyWayImage = g.Texture.fromUrl(t.URLHelpers.singleton.engineAssetUrl("milkywaybar.jpg")));
              var Fe = 50, He, We, Ke = 0, $ = 64, De = -64, Re = -64, Ie = 64;
              Te._galaxyImageVertexBuffer = new y.PositionTextureVertexBuffer((Fe + 1) * (Fe + 1));
              var O = Te._galaxyImageVertexBuffer.lock(), Ue, $e, Ze = De - $, Qe = Ie - Re, Ae = 608e5, Ne = k.Coordinates.meanObliquityOfEcliptic(xe.SpaceTimeController.get_jNow()) / 180 * Math.PI, Be, Ge = 1 / Fe, Ye = 1 / Fe;
              for ($e = 0; $e <= Fe; $e++)
                for ($e !== Fe ? He = De - Ye * Ze * $e : He = $, Ue = 0; Ue <= Fe; Ue++)
                  Ue !== Fe ? We = Re + Ge * Qe * Ue : We = Ie, Ke = $e * (Fe + 1) + Ue, Be = l.Vector3d.create(We * Ae, 0, (He - 28) * Ae), Be.rotateY(1.1833333333333333 * Math.PI), Be.rotateZ(-0.3492875 * Math.PI), Be.rotateY(-1.0714417127777778 * Math.PI), Be.rotateX(Ne), O[Ke] = l.PositionTexture.createPosRaw(Be, 1 - Ue * Ge, $e * Ye);
              Te._galaxyImageVertexBuffer.unlock(), Te._galaxyImageTriangleCount = Fe * Fe * 2;
              var je = new Uint16Array(Fe * Fe * 6), ht = je;
              for ($e = 0; $e < Fe; $e++)
                for (Ue = 0; Ue < Fe; Ue++)
                  Ke = $e * Fe * 6 + 6 * Ue, ht[Ke] = $e * (Fe + 1) + Ue, ht[Ke + 2] = ($e + 1) * (Fe + 1) + Ue, ht[Ke + 1] = $e * (Fe + 1) + (Ue + 1), ht[Ke + 3] = $e * (Fe + 1) + (Ue + 1), ht[Ke + 5] = ($e + 1) * (Fe + 1) + Ue, ht[Ke + 4] = ($e + 1) * (Fe + 1) + (Ue + 1);
              Te._galaxyImageIndexBuffer = B.tilePrepDevice.createBuffer(), B.tilePrepDevice.bindBuffer(_.WEBGL.ELEMENT_ARRAY_BUFFER, Te._galaxyImageIndexBuffer), B.tilePrepDevice.bufferData(_.WEBGL.ELEMENT_ARRAY_BUFFER, je, _.WEBGL.STATIC_DRAW);
            }, Te.drawGalaxyImage = function(ke, Fe) {
              Te._galaxyImageIndexBuffer == null && Te._createGalaxyImage(ke), ke.viewCamera.zoom, Ee.ImageShader.use(ke, Te._galaxyImageVertexBuffer.vertexBuffer, Te._galaxyImageIndexBuffer, Te._milkyWayImage.texture2d, Fe, !0), ke.gl.drawElements(_.WEBGL.TRIANGLES, Te._galaxyImageTriangleCount * 3, _.WEBGL.UNSIGNED_SHORT, 0);
            }, Te.drawStars3D = function(ke, Fe) {
              var He = ke.viewCamera.zoom, We = Math.max(Math.min(255, (Math.log(He) - 15.5) * 40.8), 0), Ke = Math.min(255, Math.max(0, s.ss.truncate(We)));
              Ke > 254 || (Ke = (255 - Ke) * Fe, Te._starSprites == null && Te.initStarVertexBuffer(ke), Te._starSprites != null && Te._starSprites.draw(ke, Ke / 255, !1));
            }, Te.initStarVertexBuffer = function(ke) {
              if (!Te._starsDownloading && !Me.freestandingMode && (Te.getStarFile(t.URLHelpers.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=hipparcos")), Te._starsDownloading = !0), Te._starSprites == null && Te._starCount > 0) {
                var Fe = k.Coordinates.meanObliquityOfEcliptic(xe.SpaceTimeController.get_jNow()) / 180 * Math.PI, He = Te._stars.length;
                Te._starCount = He, Te._starSprites = new u.PointList(ke), Te._starSprites.depthBuffered = !1, Te._starSprites.showFarSide = !0;
                for (var We = s.ss.enumerate(Te._stars); We.moveNext(); ) {
                  var Ke = We.current, $ = k.Coordinates.raDecTo3dAu(Ke.RA, Ke.dec, Ke.distance);
                  $.rotateX(Fe), Ke.position = $;
                  var De = 12e5 / Math.pow(1.6, Ke.absoluteMagnitude);
                  Te._starSprites.addPoint($, Ke.col, new u.Dates(0, 1), De * 100);
                }
              }
            }, Te.initializeStarDB = function(ke) {
              if (Te._stars == null && Te._stars == null) {
                Te._stars = [];
                for (var Fe = ke.split(`\r
`), He, We = s.ss.enumerate(Fe); We.moveNext(); ) {
                  var Ke = We.current, $ = Ke;
                  He = new ze.Star($), He.magnitude < Te._limitingMagnitude && He.par > 1e-3 && (Te._stars.push(He), Te._hipparcosIndex[He.id] = He);
                }
                Te._starCount = Te._stars.length;
              }
            }, Te.getStarFile = function(ke) {
              Te._webFileStar = new Se.WebFile(ke), Te._webFileStar.onStateChange = Te.starFileStateChange, Te._webFileStar.send();
            }, Te.starFileStateChange = function() {
              Te._webFileStar.get_state() === 2 ? alert(Te._webFileStar.get_message()) : Te._webFileStar.get_state() === 1 && Te.initializeStarDB(Te._webFileStar.getText());
            }, Te.getGalaxyFile = function(ke) {
              Te._webFileGalaxy = new Se.WebFile(ke), Te._webFileGalaxy.responseType = "blob", Te._webFileGalaxy.onStateChange = Te.galaxyFileStateChange, Te._webFileGalaxy.send();
            }, Te.galaxyFileStateChange = function() {
              if (Te._webFileGalaxy.get_state() === 2)
                alert(Te._webFileGalaxy.get_message());
              else if (Te._webFileGalaxy.get_state() === 1) {
                var ke = Te._webFileGalaxy.getBlob(), Fe = new FileReader();
                Fe.onloadend = function(He) {
                  var We = new Pe.BinaryReader(new Uint8Array(Fe.result));
                  Te.initializeCosmos(We);
                }, Fe.readAsArrayBuffer(ke);
              }
            }, Te.drawCosmos3D = function(ke, Fe) {
              ke.gl;
              var He = ke.viewCamera.zoom, We = (Math.log(Math.max(1, He)) / Math.log(4) - 15.5) * 90, Ke = Math.min(255, Math.max(0, s.ss.truncate(We)));
              if (!(Ke < 3)) {
                if (Te.initCosmosVertexBuffer(), Te._galaxyTextures == null && Te._largeSet) {
                  Te._galaxyTextures = new Array(256);
                  for (var $ = 0; $ < 256; $++) {
                    for (var De = $.toString(); De.length < 4; )
                      De = "0" + De;
                    var Re = s.ss.format(t.URLHelpers.singleton.engineAssetUrl("galimg/gal_{0}.jpg"), De);
                    Te._galaxyTextures[$] = g.Texture.fromUrl(Re);
                  }
                }
                if (Te._cosmosReady)
                  for (var Ie = 256, $ = 0; $ < Ie; $++)
                    Te._cosmosSprites[$].drawTextured(ke, Te._galaxyTextures[$].texture2d, Ke * Fe / 255);
              }
            }, Te.initCosmosVertexBuffer = function() {
              Te._cosmosSprites == null && Te._downloadCosmosFile();
            }, Te._createCosmosVertexBuffer = function(ke) {
              B.tilePrepDevice;
              var Fe = 256;
              if (Te._cosmosSprites != null)
                for (var He = 0; He < Fe; He++)
                  Te._cosmosSprites[He] != null && (Te._cosmosSprites[He] = null);
              Te._cosmosSprites = null;
              var We = k.Coordinates.meanObliquityOfEcliptic(xe.SpaceTimeController.get_jNow()) / 180 * Math.PI;
              Te._cosmosSprites = new Array(Fe);
              for (var Ke = new Array(Fe), $ = 0; $ < Fe; $++)
                Te._galaxyVertexCounts[$], Te._cosmosSprites[$] = new u.PointList(ke), Te._cosmosSprites[$].depthBuffered = !1, Te._cosmosSprites[$].showFarSide = !0, Ke[$] = 0;
              for (var De = s.ss.enumerate(Te._cosmos); De.moveNext(); ) {
                var Re = De.current, Ie = Re.eTypeBucket;
                Ke[Ie];
                var O = k.Coordinates.raDecTo3dAu(Re.RA, Re.dec, Re.distance * 206264.806 * 1e6 / 0.73);
                O.rotateX(We), Re.position = O, Te._cosmosSprites[Ie].addPoint(O, Ve.Colors.get_white(), new u.Dates(0, 1), 1e9 * Re.size * 100), Ke[Ie]++;
              }
              Te._cosmosReady = !0;
            }, Te.initializeCosmos = function(ke) {
              if (Te._cosmos == null) {
                if (Te._galaxyVertexCounts = new Array(Te._largeSet ? 256 : 20), Te._cosmos == null) {
                  Te._cosmos = [];
                  var Fe;
                  try {
                    for (var He = 0; ke.get_position() < ke.get_length(); )
                      Fe = new ze.Galaxy(ke), Te._cosmos.push(Fe), Te._galaxyVertexCounts[Fe.eTypeBucket]++, He++;
                  } catch {
                  }
                  ke.close();
                }
                Te._createCosmosVertexBuffer(B.globalRenderContext);
              }
            }, Te._downloadCosmosFile = function() {
              return !Te._downloadingGalaxy && !Me.freestandingMode && (Te.getGalaxyFile(t.URLHelpers.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=cosmosnewbin")), Te._downloadingGalaxy = !0), !1;
            }, Te.drawEquitorialGrid = function(ke, Fe, He) {
              if (Te._equLineList == null) {
                Te._equLineList = new u.SimpleLineList(), Te._equLineList.set_depthBuffered(!1);
                for (var We = 0; We < 24; We++)
                  for (var Ke = -80; Ke < 80; Ke += 2)
                    Te._equLineList.addLine(k.Coordinates.raDecTo3dAu(We, Ke, 1), k.Coordinates.raDecTo3dAu(We, Ke + 2, 1));
                for (var Ke = -80; Ke <= 80; Ke += 10)
                  for (var We = 0; We < 23.8; We += 0.2)
                    Te._equLineList.addLine(k.Coordinates.raDecTo3dAu(We, Ke, 1), k.Coordinates.raDecTo3dAu(We + 0.2, Ke, 1));
                for (var $ = 0, De = 0; De < 24; De += 0.25) {
                  var Ke = 0.5;
                  switch ($ % 4) {
                    case 0:
                      $++;
                      continue;
                    case 3:
                    case 1:
                      Ke = 0.25;
                      break;
                  }
                  $++, Te._equLineList.addLine(k.Coordinates.raDecTo3dAu(De, Ke, 1), k.Coordinates.raDecTo3dAu(De, -Ke, 1));
                }
                $ = 0;
                for (var De = 0; De < 24; De += 3) {
                  $ = 0;
                  for (var Ke = -80; Ke <= 80; Ke += 1) {
                    var Re = 0.016666666666666666;
                    switch ($ % 10) {
                      case 0:
                        $++;
                        continue;
                      case 5:
                        Re = 0.03333333333333333;
                        break;
                    }
                    $++, Te._equLineList.addLine(k.Coordinates.raDecTo3dAu(De + Re, Ke, 1), k.Coordinates.raDecTo3dAu(De - Re, Ke, 1));
                  }
                }
              }
              return Te._equLineList.drawLines(ke, Fe, He), !0;
            }, Te.drawEquitorialGridText = function(ke, Fe, He) {
              return Te._makeEquitorialGridText(), Te._equTextBatch.draw(ke, Fe, He), !0;
            }, Te._makeEquitorialGridText = function() {
              if (Te._equTextBatch == null) {
                Te._equTextBatch = new b.Text3dBatch(30);
                for (var ke = 0; ke < 24; ke++) {
                  var Fe = ke.toString() + " hr";
                  ke < 10 && (Fe = "  " + ke.toString() + " hr"), Te._equTextBatch.add(new b.Text3d(k.Coordinates.raDecTo3dAu(ke + 5e-3, 0.4, 1), k.Coordinates.raDecTo3dAu(ke + 5e-3, 0.5, 1), Fe, 45, 18e-5));
                }
                for (var ke = 0; ke < 24; ke += 3)
                  for (var He = -80; He <= 80; He += 10)
                    if (He) {
                      var Fe = He.toString();
                      He > 0 ? (Fe = "  +" + He.toString(), Te._equTextBatch.add(new b.Text3d(k.Coordinates.raDecTo3dAu(ke, He - 0.4, 1), k.Coordinates.raDecTo3dAu(ke, He - 0.3, 1), Fe, 45, 18e-5))) : (Fe = "  - " + Fe.substr(1), Te._equTextBatch.add(new b.Text3d(k.Coordinates.raDecTo3dAu(ke, He + 0.4, 1), k.Coordinates.raDecTo3dAu(ke, He + 0.5, 1), Fe, 45, 18e-5)));
                    }
              }
            }, Te.drawEcliptic = function(ke, Fe, He) {
              var We = xe.SpaceTimeController.get_now().getUTCFullYear();
              if (Te._eclipticOverviewLineList == null || We !== Te._eclipticYear) {
                Te._eclipticOverviewLineList != null && (Te._eclipticOverviewLineList.clear(), Te._eclipticOverviewLineList = null), Te._eclipticYear = We;
                var Ke = k.Coordinates.meanObliquityOfEcliptic(xe.SpaceTimeController.get_jNow()), $ = l.Matrix3d._rotationX(-Ke / 360 * (Math.PI * 2)), De = 365.25;
                o.DT.isLeap(We, !0) ? (Te._monthDays[1] = 29, De = 366) : (Te._monthDays[1] = 28, De = 365), 2 * s.ss.truncate(De), Te._eclipticCount = s.ss.truncate(De);
                var Re = xe.SpaceTimeController.utcToJulian(new Date(We, 0, 1, 12, 0, 0)), Ie = 0;
                Te._eclipticOverviewLineList = new u.SimpleLineList(), Te._eclipticOverviewLineList.set_depthBuffered(!1);
                for (var O = 0; O < 12; O++) {
                  for (var Ue = s.ss.truncate(Te._monthDays[O]), $e = 0; $e < Ue; $e++) {
                    var Ze = Le.Planets.getPlanetLocationJD("Sun", Re), Qe = c.CT.eq2Ec(Ze.RA, Ze.dec, Ke);
                    Ie = Qe.x;
                    var Ae = 5e-3;
                    $e || (Ae = 0.01);
                    var Ne = Ie;
                    Te._eclipticOverviewLineList.addLine(l.Vector3d._transformCoordinate(l.Vector3d.create(Math.cos(Ne * Math.PI * 2 / 360), Ae, Math.sin(Ne * Math.PI * 2 / 360)), $), l.Vector3d._transformCoordinate(l.Vector3d.create(Math.cos(Ne * Math.PI * 2 / 360), -Ae, Math.sin(Ne * Math.PI * 2 / 360)), $)), Re += 1;
                  }
                  Ie += Te._monthDays[O];
                }
              }
              return Te._eclipticOverviewLineList.drawLines(ke, Fe, He), !0;
            }, Te.drawEclipticText = function(ke, Fe, He) {
              return Te._makeEclipticText(), Te._eclipOvTextBatch.draw(ke, Fe, He), !0;
            }, Te._makeEclipticText = function() {
              var ke = xe.SpaceTimeController.get_now().getUTCFullYear();
              if (Te._eclipOvTextBatch == null) {
                Te._eclipOvTextBatch = new b.Text3dBatch(80), Te._eclipticTextYear = ke;
                var Fe = k.Coordinates.meanObliquityOfEcliptic(xe.SpaceTimeController.get_jNow()), He = l.Matrix3d._rotationX(-Fe / 360 * (Math.PI * 2)), We = 365.25;
                o.DT.isLeap(ke, !0) ? (Te._monthDays[1] = 29, We = 366) : (Te._monthDays[1] = 28, We = 365), 2 * s.ss.truncate(We), Te._eclipticCount = s.ss.truncate(We);
                for (var Ke = xe.SpaceTimeController.utcToJulian(new Date(ke, 0, 1, 12, 0, 0)), $ = 0, De = 0; De < 12; De++) {
                  for (var Re = s.ss.truncate(Te._monthDays[De]), Ie = 0; Ie < Re; Ie++) {
                    var O = Le.Planets.getPlanetLocationJD("Sun", Ke), Ue = c.CT.eq2Ec(O.RA, O.dec, Fe);
                    $ = Ue.x;
                    var $e = $;
                    if (Ie === Math.floor(Re / 2)) {
                      var Ze = l.Vector3d._transformCoordinate(l.Vector3d.create(Math.cos($e * Math.PI * 2 / 360), 0.025, Math.sin($e * Math.PI * 2 / 360)), He), Qe = l.Vector3d._transformCoordinate(l.Vector3d.create(Math.cos($e * Math.PI * 2 / 360), 0.045, Math.sin($e * Math.PI * 2 / 360)), He);
                      Qe.subtract(Ze), Qe.normalize(), Te._eclipOvTextBatch.add(new b.Text3d(Ze, Qe, Te._monthNames[De], 80, 159375e-9));
                    }
                    Ke += 1;
                  }
                  $ += Te._monthDays[De];
                }
              }
            }, Te.drawPrecessionChart = function(ke, Fe, He) {
              return Te._makePrecessionChart(), Te._precTextBatch.draw(ke, Fe, He), Te._precLineList.drawLines(ke, Fe, He), !0;
            }, Te._makePrecessionChart = function() {
              var ke = k.Coordinates.meanObliquityOfEcliptic(xe.SpaceTimeController.get_jNow()), Fe = l.Matrix3d._rotationX(ke / 360 * (Math.PI * 2));
              if (Ve.Colors.get_white(), Te._precLineList == null) {
                Te._precLineList = new u.SimpleLineList(), Te._precLineList.set_depthBuffered(!1);
                for (var He = 0; He < 360; He++) {
                  var We = 90 - ke;
                  Te._precLineList.addLine(l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(He / 15, We, 1), Fe), l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu((He + 1) / 15, We, 1), Fe));
                }
                for (var He = -12e3; He < 13e3; He += 2e3) {
                  var We = 90 - ke, Ke = -((He - 2e3) / 25772 * 24) - 6;
                  Te._precLineList.addLine(l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(Ke, We - 0.5, 1), Fe), l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(Ke, We + 0.5, 1), Fe));
                }
              }
              if (Te._precTextBatch == null) {
                Te._precTextBatch = new b.Text3dBatch(50);
                for (var He = -12e3; He < 13e3; He += 2e3) {
                  var We = 90 - ke + 3, Ke = -((He - 2e3) / 25772 * 24) - 6, $ = He.toString();
                  He ? He < 0 ? $ = "  " + Math.abs(He).toString() + " BCE" : $ = Math.abs(He).toString() + " CE" : (We = 90 - ke + 2, $ = "1 CE"), $.length === 9 && ($ = "   " + $), Te._precTextBatch.add(new b.Text3d(l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(Ke, We, 1), Fe), l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(Ke + 0.01, We, 1), Fe), $, 75, 15e-5));
                }
              }
            }, Te.drawAltAzGrid = function(ke, Fe, He) {
              var We = new k.Coordinates(0, 0), Ke = k.Coordinates.horizonToEquitorial(We, xe.SpaceTimeController.get_location(), xe.SpaceTimeController.get_now()), $ = -((Ke.get_RA() + 6) / 24 * (Math.PI * 2)), De = -(Ke.get_dec() / 360 * (Math.PI * 2));
              k.Coordinates.formatDMS(Ke.get_RA());
              var Re = l.Matrix3d._rotationY(-$);
              if (Re._multiply(l.Matrix3d._rotationX(De)), Re.invert(), Te._altAzLineList == null) {
                Te._altAzLineList = new u.SimpleLineList(), Te._altAzLineList.set_depthBuffered(!1);
                for (var Ie = 0; Ie < 360; Ie += 10)
                  for (var O = -80; O < 80; O += 2)
                    Te._altAzLineList.addLine(k.Coordinates.raDecTo3dAu(Ie / 15, O, 1), k.Coordinates.raDecTo3dAu(Ie / 15, O + 2, 1));
                for (var O = -80; O <= 80; O += 10)
                  for (var Ie = 0; Ie < 360; Ie += 5)
                    Te._altAzLineList.addLine(k.Coordinates.raDecTo3dAu(Ie / 15, O, 1), k.Coordinates.raDecTo3dAu((Ie + 5) / 15, O, 1));
                for (var Ue = 0, Ie = 0; Ie < 360; Ie += 1) {
                  var O = 0.25;
                  switch (Ue % 10) {
                    case 0:
                      Ue++;
                      continue;
                    case 5:
                      O = 0.5;
                      break;
                  }
                  Ue++, Te._altAzLineList.addLine(k.Coordinates.raDecTo3dAu(Ie / 15, O, 1), k.Coordinates.raDecTo3dAu(Ie / 15, -O, 1));
                }
                Ue = 0;
                for (var Ie = 0; Ie < 360; Ie += 90) {
                  Ue = 0;
                  for (var O = -80; O <= 80; O += 1) {
                    var $e = 0.25;
                    switch (Ue % 10) {
                      case 0:
                        Ue++;
                        continue;
                      case 5:
                        $e = 0.5;
                        break;
                    }
                    Ue++, Te._altAzLineList.addLine(k.Coordinates.raDecTo3dAu((Ie + $e) / 15, O, 1), k.Coordinates.raDecTo3dAu((Ie - $e) / 15, O, 1));
                  }
                }
              }
              var Ze = ke.get_world().clone(), Qe = ke.get_worldBase().clone();
              return ke.set_worldBase(l.Matrix3d.multiplyMatrix(Re, ke.get_world())), ke.set_world(ke.get_worldBase().clone()), ke.makeFrustum(), Te._altAzLineList.viewTransform = l.Matrix3d.invertMatrix(Re), Te._altAzLineList.drawLines(ke, Fe, He), ke.set_worldBase(Qe), ke.set_world(Ze), ke.makeFrustum(), !0;
            }, Te.drawAltAzGridText = function(ke, Fe, He) {
              var We = new k.Coordinates(0, 0), Ke = k.Coordinates.horizonToEquitorial(We, xe.SpaceTimeController.get_location(), xe.SpaceTimeController.get_now()), $ = -((Ke.get_RA() - 6) / 24 * (Math.PI * 2)), De = -(Ke.get_dec() / 360 * (Math.PI * 2));
              k.Coordinates.formatDMS(Ke.get_RA());
              var Re = l.Matrix3d._rotationY(-$ - Math.PI);
              Re._multiply(l.Matrix3d._rotationX(De)), Re.invert(), Te._makeAltAzGridText();
              var Ie = ke.get_world().clone(), O = ke.get_worldBase().clone();
              return ke.set_worldBase(l.Matrix3d.multiplyMatrix(Re, ke.get_world())), ke.set_world(ke.get_worldBase().clone()), ke.makeFrustum(), Te._altAzTextBatch.viewTransform = l.Matrix3d.invertMatrix(Re), Te._altAzTextBatch.draw(ke, Fe, He), ke.set_worldBase(O), ke.set_world(Ie), ke.makeFrustum(), !0;
            }, Te._makeAltAzGridText = function() {
              if (Ve.Colors.get_white(), Te._altAzTextBatch == null) {
                Te._altAzTextBatch = new b.Text3dBatch(30);
                for (var ke = 0; ke < 360; ke += 10) {
                  var Fe = "       " + ke.toString();
                  ke < 10 ? Fe = "   " + ke.toString() : ke < 100 && (Fe = "     " + ke.toString());
                  var He = 360 - ke;
                  Te._altAzTextBatch.add(new b.Text3d(k.Coordinates.raDecTo3dAu(He / 15 - 6, 0.4, 1), k.Coordinates.raDecTo3dAu(He / 15 - 6, 0.5, 1), Fe, 75, 18e-5));
                }
                for (var ke = 0; ke < 360; ke += 90)
                  for (var We = -80; We <= 80; We += 10)
                    if (We) {
                      var Fe = We.toString();
                      We > 0 ? (Fe = "  +" + We.toString(), Te._altAzTextBatch.add(new b.Text3d(k.Coordinates.raDecTo3dAu(ke / 15, We - 0.4, 1), k.Coordinates.raDecTo3dAu(ke / 15, We - 0.3, 1), Fe, 75, 18e-5))) : (Fe = "  - " + Fe.substr(1), Te._altAzTextBatch.add(new b.Text3d(k.Coordinates.raDecTo3dAu(ke / 15, We + 0.4, 1), k.Coordinates.raDecTo3dAu(ke / 15, We + 0.5, 1), Fe, 75, 18e-5)));
                    }
              }
            }, Te.drawEclipticGrid = function(ke, Fe, He) {
              if (Te._eclipticLineList == null) {
                Te._eclipticLineList = new u.SimpleLineList(), Te._eclipticLineList.set_depthBuffered(!1);
                for (var We = k.Coordinates.meanObliquityOfEcliptic(2451545), Ke = l.Matrix3d._rotationX(-We / 360 * (Math.PI * 2)), $ = 0; $ < 360; $ += 10)
                  for (var De = -80; De < 80; De += 2)
                    Te._eclipticLineList.addLine(l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu($ / 15, De, 1), Ke), l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu($ / 15, De + 2, 1), Ke));
                for (var De = -80; De <= 80; De += 10)
                  for (var $ = 0; $ < 360; $ += 5)
                    Te._eclipticLineList.addLine(l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu($ / 15, De, 1), Ke), l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(($ + 5) / 15, De, 1), Ke));
                for (var Re = 0, $ = 0; $ < 360; $ += 1) {
                  var De = 0.25;
                  switch (Re % 10) {
                    case 0:
                      Re++;
                      continue;
                    case 5:
                      De = 0.5;
                      break;
                  }
                  Re++, Te._eclipticLineList.addLine(l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu($ / 15, De, 1), Ke), l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu($ / 15, -De, 1), Ke));
                }
                Re = 0;
                for (var $ = 0; $ < 360; $ += 90) {
                  Re = 0;
                  for (var De = -80; De <= 80; De += 1) {
                    var Ie = 0.25;
                    switch (Re % 10) {
                      case 0:
                        Re++;
                        continue;
                      case 5:
                        Ie = 0.5;
                        break;
                    }
                    Re++, Te._eclipticLineList.addLine(l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(($ + Ie) / 15, De, 1), Ke), l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(($ - Ie) / 15, De, 1), Ke));
                  }
                }
              }
              return Te._eclipticLineList.drawLines(ke, Fe, He), !0;
            }, Te.drawEclipticGridText = function(ke, Fe, He) {
              return Te._makeEclipticGridText(), Te._eclipticTextBatch.draw(ke, Fe, He), !0;
            }, Te._makeEclipticGridText = function() {
              Ve.Colors.get_white();
              var ke = k.Coordinates.meanObliquityOfEcliptic(xe.SpaceTimeController.get_jNow()), Fe = l.Matrix3d._rotationX(-ke / 360 * (Math.PI * 2));
              if (Te._eclipticTextBatch == null) {
                Te._eclipticTextBatch = new b.Text3dBatch(30);
                for (var He = 0; He < 360; He += 10) {
                  var We = "       " + He.toString();
                  He < 10 ? We = "   " + He.toString() : He < 100 && (We = "     " + He.toString()), Te._eclipticTextBatch.add(new b.Text3d(l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(He / 15, 0.4, 1), Fe), l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(He / 15, 0.5, 1), Fe), We, 75, 18e-5));
                }
                for (var He = 0; He < 360; He += 90)
                  for (var Ke = -80; Ke <= 80; Ke += 10)
                    if (Ke) {
                      var We = Ke.toString();
                      Ke > 0 ? (We = "  +" + Ke.toString(), Te._eclipticTextBatch.add(new b.Text3d(l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(He / 15, Ke - 0.4, 1), Fe), l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(He / 15, Ke - 0.3, 1), Fe), We, 75, 18e-5))) : (We = "  - " + We.substr(1), Te._eclipticTextBatch.add(new b.Text3d(l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(He / 15, Ke + 0.4, 1), Fe), l.Vector3d._transformCoordinate(k.Coordinates.raDecTo3dAu(He / 15, Ke + 0.5, 1), Fe), We, 75, 18e-5)));
                    }
              }
            }, Te.drawGalacticGrid = function(ke, Fe, He) {
              if (Te._galLineList == null) {
                Te._galLineList = new u.SimpleLineList(), Te._galLineList.set_depthBuffered(!1);
                for (var We = 0; We < 360; We += 10)
                  for (var Ke = -80; Ke < 80; Ke += 2)
                    Te._galLineList.addLine(k.Coordinates.galacticTo3dDouble(We, Ke), k.Coordinates.galacticTo3dDouble(We, Ke + 2));
                for (var Ke = -80; Ke <= 80; Ke += 10)
                  for (var We = 0; We < 360; We += 5)
                    Te._galLineList.addLine(k.Coordinates.galacticTo3dDouble(We, Ke), k.Coordinates.galacticTo3dDouble(We + 5, Ke));
                for (var $ = 0, We = 0; We < 360; We += 1) {
                  var Ke = 0.25;
                  switch ($ % 10) {
                    case 0:
                      $++;
                      continue;
                    case 5:
                      Ke = 0.5;
                      break;
                  }
                  $++, Te._galLineList.addLine(k.Coordinates.galacticTo3dDouble(We, Ke), k.Coordinates.galacticTo3dDouble(We, -Ke));
                }
                $ = 0;
                for (var We = 0; We < 360; We += 90) {
                  $ = 0;
                  for (var Ke = -80; Ke <= 80; Ke += 1) {
                    var De = 0.25;
                    switch ($ % 10) {
                      case 0:
                        $++;
                        continue;
                      case 5:
                        De = 0.5;
                        break;
                    }
                    $++, Te._galLineList.addLine(k.Coordinates.galacticTo3dDouble(We + De, Ke), k.Coordinates.galacticTo3dDouble(We - De, Ke));
                  }
                }
              }
              return Te._galLineList.drawLines(ke, Fe, He), !0;
            }, Te.drawGalacticGridText = function(ke, Fe, He) {
              return Te._makeGalacticGridText(), Te._galTextBatch.draw(ke, Fe, He), !0;
            }, Te._makeGalacticGridText = function() {
              if (Te._galTextBatch == null) {
                Te._galTextBatch = new b.Text3dBatch(30);
                for (var ke = 0; ke < 360; ke += 10) {
                  var Fe = "       " + ke.toString();
                  ke < 10 ? Fe = "   " + ke.toString() : ke < 100 && (Fe = "     " + ke.toString()), Te._galTextBatch.add(new b.Text3d(k.Coordinates.galacticTo3dDouble(ke, 0.4), k.Coordinates.galacticTo3dDouble(ke, 0.5), Fe, 75, 18e-5));
                }
                for (var ke = 0; ke < 360; ke += 90)
                  for (var He = -80; He <= 80; He += 10)
                    if (He) {
                      var Fe = He.toString();
                      He > 0 ? (Fe = "  +" + He.toString(), Te._galTextBatch.add(new b.Text3d(k.Coordinates.galacticTo3dDouble(ke, He - 0.4), k.Coordinates.galacticTo3dDouble(ke, He - 0.3), Fe, 75, 18e-5))) : (Fe = "  - " + Fe.substr(1), Te._galTextBatch.add(new b.Text3d(k.Coordinates.galacticTo3dDouble(ke, He + 0.4), k.Coordinates.galacticTo3dDouble(ke, He + 0.5), Fe, 75, 18e-5)));
                    }
              }
            }, Te.drawPlanetGrid = function(ke, Fe, He) {
              if (Te._planetLineList == null) {
                Te._planetLineList = new u.SimpleLineList(), Te._planetLineList.set_depthBuffered(!0);
                for (var We = 0; We < 360; We += 10)
                  for (var Ke = -80; Ke < 80; Ke += 2)
                    Te._planetLineList.addLine(k.Coordinates.geoTo3dDouble(Ke, We), k.Coordinates.geoTo3dDouble(Ke + 2, We));
                for (var Ke = -80; Ke <= 80; Ke += 10)
                  for (var $ = 0; $ < 360; $ += 5)
                    Te._planetLineList.addLine(k.Coordinates.geoTo3dDouble(Ke, $), k.Coordinates.geoTo3dDouble(Ke, $ + 5));
                for (var De = 0, We = 0; We < 360; We += 1) {
                  var Ke = 0.25;
                  switch (De % 10) {
                    case 0:
                      De++;
                      continue;
                    case 5:
                      Ke = 0.5;
                      break;
                  }
                  De++, Te._planetLineList.addLine(k.Coordinates.geoTo3dDouble(Ke, We), k.Coordinates.geoTo3dDouble(-Ke, We));
                }
                De = 0;
                for (var We = 0; We < 360; We += 90) {
                  De = 0;
                  for (var Re = -80; Re <= 80; Re += 1) {
                    var Ie = 0.25;
                    switch (De % 10) {
                      case 0:
                        De++;
                        continue;
                      case 5:
                        Ie = 0.5;
                        break;
                    }
                    De++, Te._planetLineList.addLine(k.Coordinates.geoTo3dDouble(Re, We + Ie), k.Coordinates.geoTo3dDouble(Re, We - Ie));
                  }
                }
              }
              return Te._planetLineList.aaFix = !1, Te._planetLineList.set_depthBuffered(!0), Te._planetLineList.sky = !1, Te._planetLineList.drawLines(ke, Fe, He), !0;
            }, Te.drawPlanetGridText = function(ke, Fe, He) {
              return Te._makePlanetGridText(), Te._planetTextBatch.draw(ke, Fe, He), !0;
            }, Te._makePlanetGridText = function() {
              if (Te._planetTextBatch == null) {
                Te._planetTextBatch = new b.Text3dBatch(80);
                for (var ke = -180; ke < 180; ke += 10) {
                  var Fe = "       " + ke.toString();
                  ke < 10 ? Fe = "   " + ke.toString() : ke < 100 && (Fe = "     " + ke.toString()), Te._planetTextBatch.add(new b.Text3d(k.Coordinates.geoTo3dDouble(0.4, ke), k.Coordinates.geoTo3dDouble(0.5, ke), Fe, -80, 6e-5));
                }
                for (var ke = 0; ke < 360; ke += 90)
                  for (var He = -80; He <= 80; He += 10)
                    if (He) {
                      var Fe = He.toString();
                      He > 0 ? (Fe = "  +" + He.toString(), Te._planetTextBatch.add(new b.Text3d(k.Coordinates.geoTo3dDouble(He - 0.4, ke), k.Coordinates.geoTo3dDouble(He - 0.3, ke), Fe, -80, 6e-5))) : (Fe = "  - " + Fe.substring(1), Te._planetTextBatch.add(new b.Text3d(k.Coordinates.geoTo3dDouble(He + 0.4, ke), k.Coordinates.geoTo3dDouble(He + 0.5, ke), Fe, -80, 6e-5)));
                    }
              }
            };
            var D = {};
            (0, a.registerType)("Grids", [Te, D, null]);
          }
        ),
        /***/
        "./esm/healpix_tables.js": (
          /*!*******************************!*\
            !*** ./esm/healpix_tables.js ***!
            \*******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              HealpixTables: () => (
                /* binding */
                a
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            );
            function a() {
            }
            a.ctab = [0, 1, 256, 257, 2, 3, 258, 259, 512, 513, 768, 769, 514, 515, 770, 771, 4, 5, 260, 261, 6, 7, 262, 263, 516, 517, 772, 773, 518, 519, 774, 775, 1024, 1025, 1280, 1281, 1026, 1027, 1282, 1283, 1536, 1537, 1792, 1793, 1538, 1539, 1794, 1795, 1028, 1029, 1284, 1285, 1030, 1031, 1286, 1287, 1540, 1541, 1796, 1797, 1542, 1543, 1798, 1799, 8, 9, 264, 265, 10, 11, 266, 267, 520, 521, 776, 777, 522, 523, 778, 779, 12, 13, 268, 269, 14, 15, 270, 271, 524, 525, 780, 781, 526, 527, 782, 783, 1032, 1033, 1288, 1289, 1034, 1035, 1290, 1291, 1544, 1545, 1800, 1801, 1546, 1547, 1802, 1803, 1036, 1037, 1292, 1293, 1038, 1039, 1294, 1295, 1548, 1549, 1804, 1805, 1550, 1551, 1806, 1807, 2048, 2049, 2304, 2305, 2050, 2051, 2306, 2307, 2560, 2561, 2816, 2817, 2562, 2563, 2818, 2819, 2052, 2053, 2308, 2309, 2054, 2055, 2310, 2311, 2564, 2565, 2820, 2821, 2566, 2567, 2822, 2823, 3072, 3073, 3328, 3329, 3074, 3075, 3330, 3331, 3584, 3585, 3840, 3841, 3586, 3587, 3842, 3843, 3076, 3077, 3332, 3333, 3078, 3079, 3334, 3335, 3588, 3589, 3844, 3845, 3590, 3591, 3846, 3847, 2056, 2057, 2312, 2313, 2058, 2059, 2314, 2315, 2568, 2569, 2824, 2825, 2570, 2571, 2826, 2827, 2060, 2061, 2316, 2317, 2062, 2063, 2318, 2319, 2572, 2573, 2828, 2829, 2574, 2575, 2830, 2831, 3080, 3081, 3336, 3337, 3082, 3083, 3338, 3339, 3592, 3593, 3848, 3849, 3594, 3595, 3850, 3851, 3084, 3085, 3340, 3341, 3086, 3087, 3342, 3343, 3596, 3597, 3852, 3853, 3598, 3599, 3854, 3855], a.utab = [0, 1, 4, 5, 16, 17, 20, 21, 64, 65, 68, 69, 80, 81, 84, 85, 256, 257, 260, 261, 272, 273, 276, 277, 320, 321, 324, 325, 336, 337, 340, 341, 1024, 1025, 1028, 1029, 1040, 1041, 1044, 1045, 1088, 1089, 1092, 1093, 1104, 1105, 1108, 1109, 1280, 1281, 1284, 1285, 1296, 1297, 1300, 1301, 1344, 1345, 1348, 1349, 1360, 1361, 1364, 1365, 4096, 4097, 4100, 4101, 4112, 4113, 4116, 4117, 4160, 4161, 4164, 4165, 4176, 4177, 4180, 4181, 4352, 4353, 4356, 4357, 4368, 4369, 4372, 4373, 4416, 4417, 4420, 4421, 4432, 4433, 4436, 4437, 5120, 5121, 5124, 5125, 5136, 5137, 5140, 5141, 5184, 5185, 5188, 5189, 5200, 5201, 5204, 5205, 5376, 5377, 5380, 5381, 5392, 5393, 5396, 5397, 5440, 5441, 5444, 5445, 5456, 5457, 5460, 5461, 16384, 16385, 16388, 16389, 16400, 16401, 16404, 16405, 16448, 16449, 16452, 16453, 16464, 16465, 16468, 16469, 16640, 16641, 16644, 16645, 16656, 16657, 16660, 16661, 16704, 16705, 16708, 16709, 16720, 16721, 16724, 16725, 17408, 17409, 17412, 17413, 17424, 17425, 17428, 17429, 17472, 17473, 17476, 17477, 17488, 17489, 17492, 17493, 17664, 17665, 17668, 17669, 17680, 17681, 17684, 17685, 17728, 17729, 17732, 17733, 17744, 17745, 17748, 17749, 20480, 20481, 20484, 20485, 20496, 20497, 20500, 20501, 20544, 20545, 20548, 20549, 20560, 20561, 20564, 20565, 20736, 20737, 20740, 20741, 20752, 20753, 20756, 20757, 20800, 20801, 20804, 20805, 20816, 20817, 20820, 20821, 21504, 21505, 21508, 21509, 21520, 21521, 21524, 21525, 21568, 21569, 21572, 21573, 21584, 21585, 21588, 21589, 21760, 21761, 21764, 21765, 21776, 21777, 21780, 21781, 21824, 21825, 21828, 21829, 21840, 21841, 21844, 21845], a.jrll = [2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4], a.jpll = [1, 3, 5, 7, 0, 2, 4, 6, 1, 3, 5, 7], a.xoffset = [-1, -1, 0, 1, 1, 1, 0, -1], a.yoffset = [0, 1, 1, 1, 0, -1, -1, -1];
            var t = {};
            (0, s.registerType)("HealpixTables", [a, t, null]);
          }
        ),
        /***/
        "./esm/healpix_tile.js": (
          /*!*****************************!*\
            !*** ./esm/healpix_tile.js ***!
            \*****************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              HealpixTile: () => (
                /* binding */
                B
              ),
              /* harmony export */
              Xyf: () => (
                /* binding */
                Ve
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ./util.js */
              "./esm/util.js"
            ), c = n(
              /*! ./graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), _ = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), u = n(
              /*! ./fxyf.js */
              "./esm/fxyf.js"
            ), y = n(
              /*! ./web_file.js */
              "./esm/web_file.js"
            ), g = n(
              /*! ./ui_tools.js */
              "./esm/ui_tools.js"
            ), Ee = n(
              /*! ./tile.js */
              "./esm/tile.js"
            );
            function Ve() {
              this.ix = 0, this.iy = 0, this.face = 0;
            }
            Ve.create = function(k, b, Le) {
              var xe = new Ve();
              return xe.ix = k, xe.iy = b, xe.face = Le, xe;
            };
            var Me = {};
            (0, a.registerType)("Xyf", [Ve, Me, null]);
            function B(k, b, Le, xe, ze) {
              if (this.ipix = 0, this.indexBuffer = new Array(4), this._vertexList$1 = null, this._nside$1 = 0, this._tileIndex$1 = 0, this._face$1 = 0, this._faceX$1 = 0, this._faceY$1 = 0, this._step$1 = 0, this._subDivided$1 = !1, this._catalogRows$1 = [], Ee.Tile.call(this), this.level = k, this.tileX = b, this.tileY = Le, this.dataset = xe, (0, t.set_tileDemEnabled)(!1), k ? this._nside$1 = Math.pow(2, k + 1) : this._nside$1 = 4, ze == null)
                this._face$1 = b * 4 + Le, this.ipix = this._face$1;
              else {
                this.parent = ze;
                var Se = ze;
                this._face$1 = Se._face$1, this._tileIndex$1 = Se._tileIndex$1 * 4 + Le * 2 + b, this.ipix = this._face$1 * this._nside$1 * this._nside$1 / 4 + this._tileIndex$1, this._faceX$1 = Se._faceX$1 * 2 + b, this._faceY$1 = Se._faceY$1 * 2 + Le;
              }
              this.isCatalogTile = s.ss.keyExists(xe.get_hipsProperties().get_properties(), "dataproduct_type") && xe.get_hipsProperties().get_properties().dataproduct_type.toLowerCase() === "catalog", this._computeBoundingSphere$1();
            }
            B._galacticMatrix$1 = l.Matrix3d.create(-0.0548755604024359, -0.483835015526738, -0.873437090247923, 0, -0.867666148981161, 0.455983776232537, -0.198076373464674, 0, 0.494109427943568, 0.746982244476371, -0.444829629919504, 0, 0, 0, 0, 1);
            var Pe = {
              get_URL: function() {
                return this._url$1 == null ? (this._url$1 = this._getUrl$1(this.dataset, this.level, this.tileX, this.tileY), this._url$1) : this._url$1;
              },
              _computeBoundingSphere$1: function() {
                this._setStep$1(), this.createGeometry(null);
                for (var k = new Array(this._vertexList$1.length), b = 0; b < this._vertexList$1.length; b++)
                  k[b] = this._vertexList$1[b].position;
                this._calcSphere$1(k), this._setCorners$1();
              },
              createGeometry: function(k) {
                if (this._vertexList$1 != null)
                  return !0;
                if (this._vertexList$1 = [], this._populateVertexList$1(this._vertexList$1, this._step$1), s.ss.keyExists(this.dataset.get_hipsProperties().get_properties(), "hips_frame") && this.dataset.get_hipsProperties().get_properties().hips_frame === "galactic")
                  for (var b = 0; b < this._vertexList$1.length; b++) {
                    var Le = this._vertexList$1[b];
                    B._galacticMatrix$1.multiplyVector(Le.position);
                  }
                this.triangleCount = this._step$1 * this._step$1 / 2;
                var xe = new Uint16Array(3 * this.triangleCount), ze = xe;
                if (!this._subDivided$1)
                  try {
                    this._vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(c.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                    for (var Se = new Float32Array(this._vertexList$1.length * 5), Te = Se, D = 0, ke = s.ss.enumerate(this._vertexList$1); ke.moveNext(); ) {
                      var Le = ke.current;
                      D = this.addVertex(Te, D, Le);
                    }
                    t.tilePrepDevice.bufferData(c.WEBGL.ARRAY_BUFFER, Se, c.WEBGL.STATIC_DRAW), D = 0;
                    var Fe = this._vertexList$1.length / (4 * this._step$1);
                    this._setIndexBufferForQuadrant$1(ze, 0, 1), this._step$1 > 1 && (this._setIndexBufferForQuadrant$1(ze, 0, 0), this._setIndexBufferForQuadrant$1(ze, 1, 1), this._setIndexBufferForQuadrant$1(ze, 1, 0));
                  } catch {
                  }
                return !0;
              },
              _setIndexBufferForQuadrant$1: function(k, b, Le) {
                for (var xe = 0, ze = b * this._step$1 / 2; ze < this._step$1 / 2 * (b + 1); ze++)
                  for (var Se = Le * this._step$1 / 2; Se < this._step$1 / 2 * (Le + 1); Se++)
                    k[xe++] = ze * (this._step$1 + 1) + Se, k[xe++] = 1 + ze * (this._step$1 + 1) + Se, k[xe++] = this._step$1 + 1 + ze * (this._step$1 + 1) + Se, k[xe++] = 1 + ze * (this._step$1 + 1) + Se, k[xe++] = this._step$1 + 1 + ze * (this._step$1 + 1) + Se, k[xe++] = this._step$1 + 2 + ze * (this._step$1 + 1) + Se;
                this._processIndexBuffer$1(k, b * 2 + Le);
              },
              _getUrl$1: function(k, b, Le, xe) {
                var ze = this._getHipsFileExtension$1(), Se = -1;
                b ? Se = this._face$1 * this._nside$1 * this._nside$1 / 4 + this._tileIndex$1 : Se = this._face$1, new s.ss.StringBuilder();
                var Te = Math.floor(Se / 1e4) * 1e4;
                return s.ss.format(k.get_url(), b.toString(), Te.toString(), Se.toString() + ze);
              },
              _getHipsFileExtension$1: function() {
                return this.dataset.get_extension().toLowerCase().indexOf("png") > -1 ? ".png" : this.dataset.get_extension().toLowerCase().indexOf("jpeg") > -1 || this.dataset.get_extension().toLowerCase().indexOf("jpg") > -1 ? ".jpg" : this.dataset.get_extension().toLowerCase().indexOf("tsv") > -1 ? ".tsv" : this.dataset.get_extension().toLowerCase().indexOf("fits") > -1 ? ".fits" : ".jpg";
              },
              isTileBigEnough: function(k) {
                if (this.dataset.get_dataSetType() === 1) {
                  var b = 180 / (Math.pow(2, this.level) * 4);
                  return k.get_fovScale() < b;
                } else {
                  var b = 3600 / (Math.pow(2, this.level) * 4);
                  return k.get_fovScale() < b;
                }
              },
              _boundaries$1: function(k, b, Le) {
                var xe = Le * Math.pow(2, this.level), ze = new Array(4), Se = Ve.create(k + this._faceX$1 * Le, b + this._faceY$1 * Le, this._face$1), Te = 0.5 / xe, D = (Se.ix + 0.5) / xe, ke = (Se.iy + 0.5) / xe;
                return ze[0] = u.Fxyf.create(D + Te, ke + Te, Se.face).toVec3(), ze[1] = u.Fxyf.create(D - Te, ke + Te, Se.face).toVec3(), ze[2] = u.Fxyf.create(D - Te, ke - Te, Se.face).toVec3(), ze[3] = u.Fxyf.create(D + Te, ke - Te, Se.face).toVec3(), ze;
              },
              _setCorners$1: function() {
                var k = Ve.create(this.tileX, this.tileY, this._face$1), b = 0.5 / this._nside$1, Le = (k.ix + 0.5) / this._nside$1, xe = (k.iy + 0.5) / this._nside$1;
                this.topLeft = u.Fxyf.create(Le + b, xe + b, k.face).toVec3(), this.bottomLeft = u.Fxyf.create(Le - b, xe + b, k.face).toVec3(), this.bottomRight = u.Fxyf.create(Le - b, xe - b, k.face).toVec3(), this.topRight = u.Fxyf.create(Le + b, xe - b, k.face).toVec3();
              },
              draw3D: function(k, b) {
                if (this.isCatalogTile)
                  return this.drawCatalogTile(k, b), !0;
                this.renderedGeneration = Ee.Tile.currentRenderGeneration, Ee.Tile.tilesTouched++, this.inViewFrustum = !0;
                var Le = !1;
                if (!this.readyToRender) {
                  if (!this.errored)
                    return (0, t.tileCacheAddTileToQueue)(this), !1;
                  if (this.errored && this.level < 3)
                    Le = !0;
                  else
                    return !1;
                }
                var xe = this.triangleCount;
                Ee.Tile.trianglesRendered += xe;
                for (var ze = !1, Se = !1, Te = 0, D = 0; D < 2; D++)
                  for (var ke = 0; ke < 2; ke++)
                    this.level < this.dataset.get_levels() ? (this.children[Te] == null && (this.children[Te] = (0, t.tileCacheGetTile)(this.level + 1, ke, D, this.dataset, this)), this.children[Te].isTileInFrustum(k.get_frustum()) ? (this.inViewFrustum = !0, this.children[Te].isTileBigEnough(k) || Le ? (this.renderChildPart[Te].set_targetState(!this.children[Te].draw3D(k, b)), this.renderChildPart[Te].get_targetState() && (Se = !0)) : this.renderChildPart[Te].set_targetState(!0)) : this.renderChildPart[Te].set_targetState(this.renderChildPart[Te].set_state(!1))) : this.renderChildPart[Te].set_state(!0), this.renderChildPart[Te].get_state() && (ze = !0), Te++;
                if ((Se || ze) && (this.renderedAtOrBelowGeneration = Ee.Tile.currentRenderGeneration, this.parent != null && (this.parent.renderedAtOrBelowGeneration = this.renderedAtOrBelowGeneration)), !ze)
                  return !0;
                if (!this.createGeometry(k))
                  return !1;
                if (Le)
                  return !0;
                Ee.Tile.tilesInView++;
                for (var Fe = 0; Fe < 4; Fe++)
                  this.renderChildPart[Fe].get_targetState() && this.renderPart(k, Fe, b / 100, !1);
                return !0;
              },
              drawCatalogTile: function(k, b) {
                this.renderedGeneration = Ee.Tile.currentRenderGeneration, Ee.Tile.tilesTouched++, this.inViewFrustum = !0;
                var Le = !1;
                if (!this.readyToRender) {
                  if (!this.errored) {
                    (0, t.tileCacheAddTileToQueue)(this);
                    return;
                  }
                  if (this.errored && this.level < 3)
                    Le = !0;
                  else
                    return;
                }
                for (var xe = !1, ze = 0, Se = 0; Se < 2; Se++)
                  for (var Te = 0; Te < 2; Te++)
                    this.level < this.dataset.get_levels() && (this.children[ze] == null && (this.children[ze] = (0, t.tileCacheGetTile)(this.level + 1, Te, Se, this.dataset, this)), this.children[ze].isTileInFrustum(k.get_frustum()) ? (this.inViewFrustum = !0, xe = !0, this.children[ze].isTileBigEnough(k) || Le ? this.children[ze].drawCatalogTile(k, b) : this.children[ze].removeCatalogTile()) : this.children[ze].removeCatalogTile()), ze++;
                !this.level && !xe && !Le ? this.removeCatalogTile() : xe && (Ee.Tile.tilesInView++, this._addCatalogTile$1());
              },
              removeCatalogTile: function() {
                this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().removeTileRows(this.get_key(), this._catalogRows$1);
              },
              _addCatalogTile$1: function() {
                this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().addTileRows(this.get_key(), this._catalogRows$1);
              },
              _extractCatalogTileRows$1: function() {
                for (var k = !1, b = s.ss.enumerate(this._catalogData$1.getText().split(`
`)); b.moveNext(); ) {
                  var Le = b.current;
                  if (!s.ss.startsWith(Le, "#") && !k) {
                    k = !0;
                    continue;
                  }
                  if (!s.ss.startsWith(Le, "#")) {
                    var xe = g.UiTools.splitString(Le, this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().get__table().delimiter);
                    this._catalogRows$1.push(xe);
                  }
                }
              },
              getDataInView: function(k, b, Le) {
                if (!this.readyToRender) {
                  if (this.errored) {
                    if (this.level >= 3)
                      return !0;
                  } else if (this.requestImage(), b)
                    return !1;
                }
                for (var xe = !0, ze = !1, Se = 0, Te = 0; Te < 2; Te++)
                  for (var D = 0; D < 2; D++)
                    this.level < this.dataset.get_levels() && (this.children[Se] == null && (this.children[Se] = (0, t.tileCacheGetTile)(this.level + 1, D, Te, this.dataset, this)), this.children[Se].isTileInFrustum(k.get_frustum()) && (ze = !0, xe = xe && this.children[Se].getDataInView(k, b, Le))), Se++;
                return ze && Le.addTileRows(this.get_key(), this._catalogRows$1), xe && !this.downloading;
              },
              _setStep$1: function() {
                if (this.isCatalogTile)
                  this._step$1 = 2;
                else
                  switch (this.level) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                      this._step$1 = 16;
                      break;
                    case 5:
                      this._step$1 = 8;
                      break;
                    case 6:
                      this._step$1 = 4;
                      break;
                    default:
                      this._step$1 = 2;
                      break;
                  }
              },
              requestImage: function() {
                this.isCatalogTile ? !this.downloading && !this.readyToRender && (this.downloading = !0, this._catalogData$1 = new y.WebFile(this.get_URL()), this._catalogData$1.onStateChange = s.ss.bind("_loadCatalogData$1", this), this._catalogData$1.send()) : Ee.Tile.prototype.requestImage.call(this);
              },
              _loadCatalogData$1: function() {
                this._catalogData$1.get_state() === 2 ? (this.requestPending = !1, this.downloading = !1, this.errored = !0, (0, t.tileCacheRemoveFromQueue)(this.get_key(), !0)) : this._catalogData$1.get_state() === 1 && (this._extractCatalogTileRows$1(), this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = !0, this.requestPending = !1, (0, t.tileCacheRemoveFromQueue)(this.get_key(), !0));
              },
              getIndexBuffer: function(k, b) {
                return this.indexBuffer[k];
              },
              _calcSphere$1: function(k) {
                var b = l.ConvexHull.findEnclosingSphere(k);
                this.sphereCenter = b.center, this.sphereRadius = b.radius;
              },
              isPointInTile: function(k, b) {
                if (!this.level || this.level === 1 && (b >= 0 && b <= 90 && !this.tileX && this.tileY === 1 || b > 90 && b <= 180 && this.tileX === 1 && this.tileY === 1 || b < 0 && b >= -90 && !this.tileX && !this.tileY || b < -90 && b >= -180 && this.tileX === 1 && !this.tileY))
                  return !0;
                var Le = _.Coordinates.geoTo3dDouble(k, b), xe = this._isLeftOfHalfSpace$1(this.topLeft, this.topRight, Le), ze = this._isLeftOfHalfSpace$1(this.topRight, this.bottomRight, Le), Se = this._isLeftOfHalfSpace$1(this.bottomRight, this.bottomLeft, Le), Te = this._isLeftOfHalfSpace$1(this.bottomLeft, this.topLeft, Le);
                return !!(xe && ze && Se && Te);
              },
              _isLeftOfHalfSpace$1: function(k, b, Le) {
                k.normalize(), b.normalize();
                var xe = l.Vector3d.cross(k, b), ze = l.Vector3d.dot(xe, Le);
                return ze > 0;
              },
              getSurfacePointAltitude: function(k, b, Le) {
                if (this.level < Ee.Tile.lastDeepestLevel)
                  for (var xe = s.ss.enumerate(this.children); xe.moveNext(); ) {
                    var ze = xe.current;
                    if (ze != null && ze.isPointInTile(k, b)) {
                      var Se = ze.getSurfacePointAltitude(k, b, Le);
                      if (Se)
                        return Se;
                      break;
                    }
                  }
                return this._getAltitudeFromLatLng$1(k, b, Le);
              },
              _getAltitudeFromLatLng$1: function(k, b, Le) {
                var xe = _.Coordinates.geoTo3dDouble(k, b), ze = o.DistanceCalc.getUVFromInnerPoint(this.topLeft, this.topRight, this.bottomLeft, this.bottomRight, xe), Se = Math.max(0, Math.min(16, ze.x * 16)), Te = Math.max(0, Math.min(16, ze.y * 16)), D = Math.max(0, Math.min(15, s.ss.truncate(ze.x * 16))), ke = Math.max(0, Math.min(15, s.ss.truncate(ze.y * 16))), Fe = Se - D, He = Te - ke;
                if (this.demArray != null) {
                  var We = this.demArray[D + 17 * ke], Ke = this.demArray[D + 1 + 17 * ke], $ = this.demArray[D + 17 * (ke + 1)], De = this.demArray[D + 1 + 17 * (ke + 1)], Re = We * (1 - Fe) + Fe * Ke, Ie = $ * (1 - Fe) + Fe * De, O = Re * (1 - He) + He * Ie;
                  return O / (Le ? 1 : this.get__demScaleFactor());
                }
                return this.demAverage / (Le ? 1 : this.get__demScaleFactor());
              },
              _processIndexBuffer$1: function(k, b) {
                this.indexBuffer[b] = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(c.WEBGL.ELEMENT_ARRAY_BUFFER, this.indexBuffer[b]), t.tilePrepDevice.bufferData(c.WEBGL.ELEMENT_ARRAY_BUFFER, k, c.WEBGL.STATIC_DRAW);
              },
              cleanUp: function(k) {
                Ee.Tile.prototype.cleanUp.call(this, k), this._returnBuffers$1(), this._subDivided$1 = !1;
              },
              _returnBuffers$1: function() {
                this._vertexList$1 != null && (this._vertexList$1 = null);
              },
              // Vertices distributed in a grid pattern like the example below
              // Example for pattern with step set to 4
              //            24
              //          19  23
              //       14   18  22
              //      9   13  17  21
              //    4   8   12  16  20
              //      3   7   11  15
              //        2   6   10
              //          1   5
              //            0
              _populateVertexList$1: function(k, b) {
                for (var Le = 0; Le < b; Le += 2)
                  for (var xe = 0; xe < b; xe += 2) {
                    var ze = this._boundaries$1(xe, Le, b);
                    k[Le * (b + 1) + xe] = l.PositionTexture.createPos(ze[2], 1 / b * Le, 1 / b * xe), k[Le * (b + 1) + xe + 1] = l.PositionTexture.createPos(ze[3], 1 / b * Le, 1 / b + 1 / b * xe), k[(Le + 1) * (b + 1) + xe] = l.PositionTexture.createPos(ze[1], 1 / b + 1 / b * Le, 1 / b * xe), k[(Le + 1) * (b + 1) + xe + 1] = l.PositionTexture.createPos(ze[0], 1 / b + 1 / b * Le, 1 / b + 1 / b * xe), xe + 2 >= b && b > 1 && (xe = b - 1, ze = this._boundaries$1(xe, Le, b), k[Le * (b + 1) + b] = l.PositionTexture.createPos(ze[3], 1 / b * Le, 1 / b + 1 / b * xe), k[(Le + 1) * (b + 1) + b] = l.PositionTexture.createPos(ze[0], 1 / b + 1 / b * Le, 1 / b + 1 / b * xe));
                  }
                b > 1 && this._vertexOfLastRow$1(k, b);
              },
              _vertexOfLastRow$1: function(k, b) {
                for (var Le = b - 1, xe = 0; xe < b; xe += 2) {
                  var ze = this._boundaries$1(xe, Le, b);
                  k[(Le + 1) * (b + 1) + xe] = l.PositionTexture.createPos(ze[1], 1 / b + 1 / b * Le, 1 / b * xe), k[(Le + 1) * (b + 1) + xe + 1] = l.PositionTexture.createPos(ze[0], 1 / b + 1 / b * Le, 1 / b + 1 / b * xe), xe + 2 >= b && (xe = b - 1, ze = this._boundaries$1(xe, Le, b), k[(Le + 1) * (b + 1) + b] = l.PositionTexture.createPos(ze[0], 1 / b + 1 / b * Le, 1 / b + 1 / b * xe));
                }
              }
            };
            (0, a.registerType)("HealpixTile", [B, Pe, Ee.Tile]);
          }
        ),
        /***/
        "./esm/healpix_utils.js": (
          /*!******************************!*\
            !*** ./esm/healpix_utils.js ***!
            \******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              HealpixUtils: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./fast_math.js */
              "./esm/fast_math.js"
            );
            function t() {
            }
            t.check = function(o, c) {
              if (!o)
                throw new Error(c);
            }, t.isqrt = function(o) {
              var c = Math.sqrt(o + 0.5);
              return o < 262144 || (c * c > o ? --c : (c + 1) * (c + 1) <= o && ++c), c;
            }, t.cosdist_zphi = function(o, c, _, u) {
              return o * _ + a.FastMath.cos(c - u) * Math.sqrt((1 - o * o) * (1 - _ * _));
            }, t.fmodulo = function(o, c) {
              if (o >= 0)
                return o < c ? o : o % c;
              var _ = o % c + c;
              return _ === c ? 0 : _;
            };
            var l = {};
            (0, s.registerType)("HealpixUtils", [t, l, null]);
          }
        ),
        /***/
        "./esm/hips_properties.js": (
          /*!********************************!*\
            !*** ./esm/hips_properties.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              HipsProperties: () => (
                /* binding */
                y
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), l = n(
              /*! ./web_file.js */
              "./esm/web_file.js"
            ), o = n(
              /*! ./util.js */
              "./esm/util.js"
            ), c = n(
              /*! ./layers/spreadsheet_layer.js */
              "./esm/layers/spreadsheet_layer.js"
            ), _ = n(
              /*! ./layers/vo_table.js */
              "./esm/layers/vo_table.js"
            ), u = n(
              /*! ./layers/layer_manager.js */
              "./esm/layers/layer_manager.js"
            );
            function y(Ee) {
              this._properties = {}, this._catalogColumnInfo = null, this._catalogSpreadSheetLayer = new c.CatalogSpreadSheetLayer(), this._downloadComplete = !1, this.dataset = Ee, this._datasetName = Ee.get_name(), this._url = Ee.get_url(), this._url.toLowerCase().indexOf("norder") > -1 && (this._url = this._url.substring(0, this._url.toLowerCase().indexOf("norder"))), this._url += "properties", this._download();
            }
            var g = {
              get_properties: function() {
                return this._properties;
              },
              get_catalogSpreadSheetLayer: function() {
                return this._catalogSpreadSheetLayer;
              },
              set_catalogSpreadSheetLayer: function(Ee) {
                return this._catalogSpreadSheetLayer = Ee, Ee;
              },
              get_catalogColumnInfo: function() {
                return this._catalogColumnInfo;
              },
              set_catalogColumnInfo: function(Ee) {
                return this._catalogColumnInfo = Ee, Ee;
              },
              get_downloadComplete: function() {
                return this._downloadComplete;
              },
              _download: function() {
                this._webFile = new l.WebFile(this._url), this._webFile.onStateChange = s.ss.bind("_onPropertiesDownloadComplete", this), this._webFile.send();
              },
              _onPropertiesDownloadComplete: function() {
                if (this._webFile.get_state() === 1)
                  if (this._parseProperties(this._webFile.getText()), s.ss.keyExists(this.get_properties(), "dataproduct_type") && this.get_properties().dataproduct_type.toLowerCase() === "catalog")
                    this._catalogColumnInfo = _.VoTable.loadFromUrl(s.ss.replaceString(this._url, "/properties", "/metadata.xml"), s.ss.bind("_onCatalogMetadataDownloadComplete", this));
                  else {
                    if (s.ss.keyExists(this.get_properties(), "hips_data_range")) {
                      var Ee = this.get_properties().hips_data_range;
                      this.dataset.get_fitsProperties().minVal = parseFloat(Ee.split(" ")[0]), this.dataset.get_fitsProperties().maxVal = parseFloat(Ee.split(" ")[1]), this.dataset.get_fitsProperties().lowerCut = this.dataset.get_fitsProperties().minVal, this.dataset.get_fitsProperties().upperCut = this.dataset.get_fitsProperties().maxVal;
                    }
                    if (s.ss.keyExists(this.get_properties(), "hips_pixel_cut")) {
                      var Ve = this.get_properties().hips_pixel_cut;
                      this.dataset.get_fitsProperties().lowerCut = parseFloat(Ve.split(" ")[0]), this.dataset.get_fitsProperties().upperCut = parseFloat(Ve.split(" ")[1]), s.ss.keyExists(this.get_properties(), "hips_data_range") || (this.dataset.get_fitsProperties().minVal = this.dataset.get_fitsProperties().lowerCut, this.dataset.get_fitsProperties().maxVal = this.dataset.get_fitsProperties().upperCut);
                    }
                    this._downloadComplete = !0, this._onDownloadComplete != null && this._onDownloadComplete();
                  }
              },
              _onCatalogMetadataDownloadComplete: function() {
                this._catalogSpreadSheetLayer.useHeadersFromVoTable(this._catalogColumnInfo), this._catalogSpreadSheetLayer.set_name(this._datasetName), this._catalogSpreadSheetLayer.id = o.Guid.createFrom(this._datasetName), u.LayerManager.addSpreadsheetLayer(this.get_catalogSpreadSheetLayer(), "Sky"), this._downloadComplete = !0, this._onDownloadComplete != null && this._onDownloadComplete();
              },
              setDownloadCompleteListener: function(Ee) {
                this._onDownloadComplete = Ee;
              },
              _parseProperties: function(Ee) {
                for (var Ve = Ee.split(`
`), Me = s.ss.enumerate(Ve); Me.moveNext(); ) {
                  var B = Me.current;
                  if (!s.ss.whitespace(B) && !s.ss.startsWith(B, "#")) {
                    var Pe = B.split("=");
                    if (Pe.length === 2) {
                      var k = s.ss.trim(Pe[0]), b = s.ss.trim(Pe[1]);
                      !s.ss.whitespace(k) && !s.ss.whitespace(b) && (this.get_properties()[k] = b);
                    }
                  }
                }
              }
            };
            (0, a.registerType)("HipsProperties", [y, g, null]), (0, t.set_makeNewHipsProperties)(function(Ee) {
              return new y(Ee);
            });
          }
        ),
        /***/
        "./esm/hploc.js": (
          /*!**********************!*\
            !*** ./esm/hploc.js ***!
            \**********************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Hploc: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), t = n(
              /*! ./fast_math.js */
              "./esm/fast_math.js"
            );
            function l() {
              this.z = 0, this.phi = 0, this.sth = 0, this.have_sth = !1;
            }
            l.create = function(c) {
              var _ = new l(), u = 1 / c.length();
              return _.z = c.z * u, _.phi = t.FastMath.atan2(c.y, c.x), Math.abs(_.z) > 0.99 && (_.sth = Math.sqrt(c.x * c.x + c.y * c.y) * u, _.have_sth = !0), _;
            };
            var o = {
              toVec3: function() {
                var c;
                this.have_sth ? c = this.sth : c = Math.sqrt((1 - this.z) * (1 + this.z));
                var _ = c * t.FastMath.cos(this.phi), u = c * t.FastMath.sin(this.phi);
                return a.Vector3d.create(_, this.z, u);
              }
            };
            (0, s.registerType)("Hploc", [l, o, null]);
          }
        ),
        /***/
        "./esm/imageset.js": (
          /*!*************************!*\
            !*** ./esm/imageset.js ***!
            \*************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              BandPass: () => (
                /* binding */
                ze
              ),
              /* harmony export */
              ImageSetType: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              Imageset: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              ProjectionType: () => (
                /* binding */
                Le
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), l = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ./baseutil.js */
              "./esm/baseutil.js"
            ), c = n(
              /*! ./interfaces.js */
              "./esm/interfaces.js"
            ), _ = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), u = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), y = n(
              /*! ./fits_properties.js */
              "./esm/fits_properties.js"
            ), g = n(
              /*! ./layers/fits_image.js */
              "./esm/layers/fits_image.js"
            ), Ee = n(
              /*! ./equirectangular_tile.js */
              "./esm/equirectangular_tile.js"
            ), Ve = n(
              /*! ./healpix_tile.js */
              "./esm/healpix_tile.js"
            ), Me = n(
              /*! ./mercator_tile.js */
              "./esm/mercator_tile.js"
            ), B = n(
              /*! ./plot_tile.js */
              "./esm/plot_tile.js"
            ), Pe = n(
              /*! ./tangent_tile.js */
              "./esm/tangent_tile.js"
            ), k = n(
              /*! ./sky_image_tile.js */
              "./esm/sky_image_tile.js"
            ), b = n(
              /*! ./toast_tile.js */
              "./esm/toast_tile.js"
            ), Le = {
              mercator: 0,
              equirectangular: 1,
              tangent: 2,
              tan: 2,
              toast: 3,
              spherical: 4,
              skyImage: 5,
              plotted: 6,
              healpix: 7
            };
            (0, a.registerType)("ProjectionType", Le), (0, a.registerEnum)("ProjectionType", Le);
            var xe = {
              earth: 0,
              planet: 1,
              sky: 2,
              panorama: 3,
              solarSystem: 4,
              sandbox: 5
            };
            (0, a.registerType)("ImageSetType", xe), (0, a.registerEnum)("ImageSetType", xe);
            var ze = {
              gamma: 0,
              xRay: 1,
              ultraviolet: 2,
              visible: 3,
              hydrogenAlpha: 4,
              IR: 4,
              microwave: 5,
              radio: 6,
              visibleNight: 6
            };
            (0, a.registerType)("BandPass", ze), (0, a.registerEnum)("BandPass", ze);
            function Se() {
              this._projection = 0, this._imageSetID = 0, this._baseTileDegrees = 0, this._widthFactor = 1, this.demUrl = "", this._levels = 0, this._mercator = !1, this._bottomsUp = !1, this._baseLevel = 1, this._quadTreeTileMap = "0123", this._centerX = 0, this._centerY = 0, this._rotation = 0, this._meanRadius = 0, this._dataSetType = 0, this._bandPass = 3, this._altUrl = "", this._singleImage = !1, this._fitsProperties = new y.FitsProperties(), this._matrixComputed = !1, this._name = "", this._sparse = !1, this._thumbnailUrl = "", this._generic = !1, this._defaultSet = !1, this._elevationModel = !1, this._offsetX = 0, this._offsetY = 0;
            }
            Se.getNewTile = function(D, ke, Fe, He, We) {
              switch (D.get_projection()) {
                case Le.mercator:
                  var Ke = Me.MercatorTile.create(ke, Fe, He, D, We);
                  return Ke;
                case Le.equirectangular:
                  return Ee.EquirectangularTile.create(ke, Fe, He, D, We);
                case Le.toast:
                default:
                  return b.ToastTile.create(ke, Fe, He, D, We);
                case Le.skyImage:
                  return new k.SkyImageTile(ke, Fe, He, D, We);
                case Le.plotted:
                  return B.PlotTile.create(ke, Fe, He, D, We);
                case Le.healpix:
                  return D.get_hipsProperties() == null && D.set_hipsProperties((0, t.makeNewHipsProperties)(D)), D.get_hipsProperties().get_downloadComplete() ? new Ve.HealpixTile(ke, Fe, He, D, We) : null;
                case Le.tangent:
                  var Ke = new Pe.TangentTile(ke, Fe, He, D, We);
                  return Ke;
              }
            }, Se.fromXMLNode = function(D) {
              try {
                var ke = 2, Fe = 2;
                D.attributes.getNamedItem("DataSetType") != null && (ke = a.Enums.parse("ImageSetType", D.attributes.getNamedItem("DataSetType").nodeValue));
                var He = 3;
                He = a.Enums.parse("BandPass", D.attributes.getNamedItem("BandPass").nodeValue);
                var We = 1;
                if (D.attributes.getNamedItem("WidthFactor") != null && (We = parseInt(D.attributes.getNamedItem("WidthFactor").nodeValue)), D.attributes.getNamedItem("Generic") == null || !s.ss.boolean(D.attributes.getNamedItem("Generic").nodeValue)) {
                  Fe = a.Enums.parse("ProjectionType", D.attributes.getNamedItem("Projection").nodeValue);
                  var Ke = D.attributes.getNamedItem("FileType").nodeValue;
                  s.ss.startsWith(Ke, ".") || (Ke = "." + Ke);
                  var $ = "", De = o.Util.selectSingleNode(D, "ThumbnailUrl");
                  if (De != null)
                    if (s.ss.emptyString(De.text)) {
                      var Re = De;
                      $ = Re.textContent;
                    } else
                      $ = De.text;
                  var Ie = !1, O = !1;
                  D.attributes.getNamedItem("StockSet") != null && (Ie = s.ss.boolean(D.attributes.getNamedItem("StockSet").nodeValue)), D.attributes.getNamedItem("ElevationModel") != null && (O = s.ss.boolean(D.attributes.getNamedItem("ElevationModel").nodeValue));
                  var Ue = "";
                  D.attributes.getNamedItem("DemUrl") != null && (Ue = D.attributes.getNamedItem("DemUrl").nodeValue);
                  var $e = "";
                  D.attributes.getNamedItem("AltUrl") != null && ($e = D.attributes.getNamedItem("AltUrl").nodeValue);
                  var Ze = 0;
                  D.attributes.getNamedItem("OffsetX") != null && (Ze = parseFloat(D.attributes.getNamedItem("OffsetX").nodeValue));
                  var Qe = 0;
                  D.attributes.getNamedItem("OffsetY") != null && (Qe = parseFloat(D.attributes.getNamedItem("OffsetY").nodeValue));
                  var Ae = "", Ne = o.Util.selectSingleNode(D, "Credits");
                  Ne != null && (Ae = o.Util.getInnerText(Ne));
                  var Be = "";
                  Ne = o.Util.selectSingleNode(D, "CreditsUrl"), Ne != null && (Be = o.Util.getInnerText(Ne));
                  var Ge = 0;
                  D.attributes.getNamedItem("MeanRadius") != null && (Ge = parseFloat(D.attributes.getNamedItem("MeanRadius").nodeValue));
                  var Ye = null;
                  D.attributes.getNamedItem("ReferenceFrame") != null && (Ye = D.attributes.getNamedItem("ReferenceFrame").nodeValue);
                  var je = "";
                  D.attributes.getNamedItem("Name") != null && (je = D.attributes.getNamedItem("Name").nodeValue);
                  var ht = "";
                  D.attributes.getNamedItem("Url") != null && (ht = D.attributes.getNamedItem("Url").nodeValue);
                  var qe = 0;
                  D.attributes.getNamedItem("BaseTileLevel") != null && (qe = parseInt(D.attributes.getNamedItem("BaseTileLevel").nodeValue));
                  var lt = 0;
                  D.attributes.getNamedItem("TileLevels") != null && (lt = parseInt(D.attributes.getNamedItem("TileLevels").nodeValue));
                  var ft = 0;
                  D.attributes.getNamedItem("BaseDegreesPerTile") != null && (ft = parseFloat(D.attributes.getNamedItem("BaseDegreesPerTile").nodeValue));
                  var _t = !1;
                  D.attributes.getNamedItem("BottomsUp") != null && (_t = s.ss.boolean(D.attributes.getNamedItem("BottomsUp").nodeValue));
                  var St = "";
                  D.attributes.getNamedItem("QuadTreeMap") != null && (St = D.attributes.getNamedItem("QuadTreeMap").nodeValue);
                  var yt = 0;
                  D.attributes.getNamedItem("CenterX") != null && (yt = parseFloat(D.attributes.getNamedItem("CenterX").nodeValue));
                  var Ct = 0;
                  D.attributes.getNamedItem("CenterY") != null && (Ct = parseFloat(D.attributes.getNamedItem("CenterY").nodeValue));
                  var Lt = 0;
                  D.attributes.getNamedItem("Rotation") != null && (Lt = parseFloat(D.attributes.getNamedItem("Rotation").nodeValue));
                  var Vt = !1;
                  return D.attributes.getNamedItem("Sparse") != null && (Vt = s.ss.boolean(D.attributes.getNamedItem("Sparse").nodeValue)), Se.create(je, ht, ke, He, Fe, Math.abs(o.Util.getHashCode(ht)), qe, lt, 256, ft, Ke, _t, St, yt, Ct, Lt, Vt, $, Ie, O, We, Ze, Qe, Ae, Be, Ue, $e, Ge, Ye);
                } else
                  return Se.createGeneric(ke, He);
              } catch {
                return null;
              }
            }, Se.saveToXml = function(D, ke, Fe) {
              D._writeStartElement("ImageSet"), D._writeAttributeString("Generic", ke.get_generic().toString()), D._writeAttributeString("DataSetType", a.Enums.toXml("ImageSetType", ke.get_dataSetType())), D._writeAttributeString("BandPass", a.Enums.toXml("BandPass", ke.get_bandPass())), ke.get_generic() || (D._writeAttributeString("Name", ke.get_name()), s.ss.emptyString(Fe) ? D._writeAttributeString("Url", ke.get_url()) : D._writeAttributeString("Url", Fe), D._writeAttributeString("DemUrl", ke.get_demUrl()), D._writeAttributeString("BaseTileLevel", ke.get_baseLevel().toString()), D._writeAttributeString("TileLevels", ke.get_levels().toString()), D._writeAttributeString("BaseDegreesPerTile", ke.get_baseTileDegrees().toString()), D._writeAttributeString("FileType", ke.get_extension()), D._writeAttributeString("BottomsUp", ke.get_bottomsUp().toString()), D._writeAttributeString("Projection", a.Enums.toXml("ProjectionType", ke.get_projection())), D._writeAttributeString("QuadTreeMap", ke.get_quadTreeTileMap()), D._writeAttributeString("CenterX", ke.get_centerX().toString()), D._writeAttributeString("CenterY", ke.get_centerY().toString()), D._writeAttributeString("OffsetX", ke.get_offsetX().toString()), D._writeAttributeString("OffsetY", ke.get_offsetY().toString()), D._writeAttributeString("Rotation", ke.get_rotation().toString()), D._writeAttributeString("Sparse", ke.get_sparse().toString()), D._writeAttributeString("ElevationModel", ke.get_elevationModel().toString()), D._writeAttributeString("StockSet", ke.get_defaultSet().toString()), D._writeAttributeString("WidthFactor", ke.get_widthFactor().toString()), D._writeAttributeString("MeanRadius", ke.get_meanRadius().toString()), D._writeAttributeString("ReferenceFrame", ke.get_referenceFrame()), s.ss.emptyString(Fe) ? D._writeElementString("ThumbnailUrl", ke.get_thumbnailUrl()) : D._writeElementString("ThumbnailUrl", ke.get_url())), D._writeEndElement();
            }, Se.createGeneric = function(D, ke) {
              var Fe = new Se();
              return Fe._generic = !0, Fe._name = "Generic", Fe._sparse = !1, Fe._dataSetType = D, Fe._bandPass = ke, Fe._quadTreeTileMap = "", Fe.url = "", Fe._levels = 0, Fe._baseTileDegrees = 0, Fe._imageSetID = 0, Fe._extension = "", Fe._projection = 1, Fe._bottomsUp = !1, Fe._baseLevel = 0, Fe._mercator = !Fe._projection, Fe._centerX = 0, Fe._centerY = 0, Fe._rotation = 0, Fe._thumbnailUrl = "", Fe._matrix = l.Matrix3d.get_identity(), Fe._matrix._multiply(l.Matrix3d._rotationX(Fe.get_rotation() / 180 * Math.PI)), Fe._matrix._multiply(l.Matrix3d._rotationZ(Fe.get_centerY() / 180 * Math.PI)), Fe._matrix._multiply(l.Matrix3d._rotationY((360 - Fe.get_centerX() + 180) / 180 * Math.PI)), Fe;
            }, Se.create = function(D, ke, Fe, He, We, Ke, $, De, Re, Ie, O, Ue, $e, Ze, Qe, Ae, Ne, Be, Ge, Ye, je, ht, qe, lt, ft, _t, St, yt, Ct) {
              var Lt = new Se();
              return Lt.setInitialParameters(D, ke, Fe, He, We, Ke, $, De, Ie, O, Ue, $e, Ze, Qe, Ae, Ne, Be, Ge, Ye, je, ht, qe, lt, ft, _t, St, yt, Ct), Lt;
            };
            var Te = {
              get_wcsImage: function() {
                return this._wcsImage;
              },
              set_wcsImage: function(D) {
                return this._wcsImage = D, D;
              },
              get_projection: function() {
                return this._projection;
              },
              set_projection: function(D) {
                return this._projection = D, D;
              },
              get_referenceFrame: function() {
                return this._referenceFrame;
              },
              set_referenceFrame: function(D) {
                return this._referenceFrame = D, D;
              },
              get_imageSetID: function() {
                return this._imageSetID;
              },
              set_imageSetID: function(D) {
                return this._imageSetID = D, D;
              },
              get_baseTileDegrees: function() {
                return this._baseTileDegrees;
              },
              set_baseTileDegrees: function(D) {
                return this._baseTileDegrees = D, D;
              },
              get_widthFactor: function() {
                return this._widthFactor;
              },
              set_widthFactor: function(D) {
                return this._widthFactor = D, D;
              },
              getHashCode: function() {
                return o.Util.getHashCode(this.get_url());
              },
              get_url: function() {
                return this.url;
              },
              set_url: function(D) {
                return this.url = D, D;
              },
              get_demUrl: function() {
                return s.ss.emptyString(this.demUrl) && !this._projection && !t.freestandingMode ? _.URLHelpers.singleton.coreStaticUrl("wwtweb/BingDemTile.aspx?Q={0},{1},{2}") : this.demUrl;
              },
              set_demUrl: function(D) {
                return this.demUrl = D, D;
              },
              get_extension: function() {
                return this._extension;
              },
              set_extension: function(D) {
                return this._extension = D, D;
              },
              get_levels: function() {
                return this._levels;
              },
              set_levels: function(D) {
                return this._levels = D, D;
              },
              get_bottomsUp: function() {
                return this._bottomsUp;
              },
              set_bottomsUp: function(D) {
                return this._bottomsUp = D, D;
              },
              get_mercator: function() {
                return this._mercator;
              },
              set_mercator: function(D) {
                return this._mercator = D, D;
              },
              get_baseLevel: function() {
                return this._baseLevel;
              },
              set_baseLevel: function(D) {
                return this._baseLevel = D, D;
              },
              get_quadTreeTileMap: function() {
                return this._quadTreeTileMap;
              },
              set_quadTreeTileMap: function(D) {
                return this._quadTreeTileMap = D, D;
              },
              get_centerX: function() {
                return this._centerX;
              },
              set_centerX: function(D) {
                return this._centerX !== D && (this._centerX = D, this._computeMatrix()), D;
              },
              get_centerY: function() {
                return this._centerY;
              },
              set_centerY: function(D) {
                return this._centerY !== D && (this._centerY = D, this._computeMatrix()), D;
              },
              get_rotation: function() {
                return this._rotation;
              },
              set_rotation: function(D) {
                return this._rotation !== D && (this._rotation = D, this._computeMatrix()), D;
              },
              get_meanRadius: function() {
                return this._meanRadius;
              },
              set_meanRadius: function(D) {
                return this._meanRadius = D, D;
              },
              get_bandPass: function() {
                return this._bandPass;
              },
              set_bandPass: function(D) {
                return this._bandPass = D, D;
              },
              get_dataSetType: function() {
                return this._dataSetType;
              },
              set_dataSetType: function(D) {
                return this._dataSetType = D, D;
              },
              get_altUrl: function() {
                return this._altUrl;
              },
              set_altUrl: function(D) {
                return this._altUrl = D, D;
              },
              get_singleImage: function() {
                return this._singleImage;
              },
              set_singleImage: function(D) {
                return this._singleImage = D, D;
              },
              get_hipsProperties: function() {
                return this._hipsProperties;
              },
              set_hipsProperties: function(D) {
                return this._hipsProperties = D, D;
              },
              get_fitsProperties: function() {
                return this._fitsProperties;
              },
              set_fitsProperties: function(D) {
                return this._fitsProperties = D, D;
              },
              toString: function() {
                return this.get_defaultSet() ? this._name + " *" : this._name;
              },
              get_stockImageSet: function() {
                return this._generic || !this._defaultSet ? this : Se.createGeneric(this.get_dataSetType(), this.get_bandPass());
              },
              equals: function(D) {
                if (D == null || !s.ss.canCast(D, Se))
                  return !1;
                var ke = D;
                return o.Util.getHashCode(ke.get_url()) === o.Util.getHashCode(this.get_url()) && ke.get_dataSetType() === this.get_dataSetType() && ke.get_bandPass() === this.get_bandPass() && ke.get_generic() === this.get_generic();
              },
              get_matrix: function() {
                return this._matrixComputed || this._computeMatrix(), this._matrix;
              },
              set_matrix: function(D) {
                return this._matrix = D, D;
              },
              _computeMatrix: function() {
                this._matrixComputed = !0, this._matrix = l.Matrix3d.get_identity(), this._matrix._multiply(l.Matrix3d._rotationX(this.get_rotation() / 180 * Math.PI)), this._matrix._multiply(l.Matrix3d._rotationZ(this.get_centerY() / 180 * Math.PI)), this._matrix._multiply(l.Matrix3d._rotationY((360 - this.get_centerX()) / 180 * Math.PI));
              },
              get_name: function() {
                return this._name;
              },
              set_name: function(D) {
                return this._name = D, D;
              },
              get_sparse: function() {
                return this._sparse;
              },
              set_sparse: function(D) {
                return this._sparse = D, D;
              },
              get_thumbnailUrl: function() {
                return this._thumbnailUrl;
              },
              set_thumbnailUrl: function(D) {
                return this._thumbnailUrl = D, D;
              },
              get_generic: function() {
                return this._generic;
              },
              set_generic: function(D) {
                return this._generic = D, D;
              },
              get_elevationModel: function() {
                return this._elevationModel;
              },
              set_elevationModel: function(D) {
                return this._elevationModel = D, D;
              },
              get_defaultSet: function() {
                return this._defaultSet;
              },
              set_defaultSet: function(D) {
                return this._defaultSet = D, D;
              },
              get_offsetX: function() {
                return this._offsetX;
              },
              set_offsetX: function(D) {
                return this._offsetX = D, D;
              },
              get_offsetY: function() {
                return this._offsetY;
              },
              set_offsetY: function(D) {
                return this._offsetY = D, D;
              },
              get_creditsText: function() {
                return this._creditsText;
              },
              set_creditsText: function(D) {
                return this._creditsText = D, D;
              },
              get_creditsUrl: function() {
                return this._creditsUrl;
              },
              set_creditsUrl: function(D) {
                return this._creditsUrl = D, D;
              },
              get_isMandelbrot: function() {
                return !1;
              },
              // Calculate either the X or Y coordinate of the estimated image center.
              //
              // This estimate has some important limitations. First, because images
              // might contain transparent regions, the "center" of the image that a
              // user will perceive might have nothing to do with the center of the
              // image bitmap. For instance, imagine that the bitmap is 100x100 but
              // that everything is transparent except for 10x10 pixels in the
              // top-left corner. We don't know anything about the "barycenter" of the
              // image here, so we can't account for that.
              //
              // Second, for untiled SkyImage imagesets, to properly compute the
              // bitmap center we need its dimensions, which simply aren't available
              // here. All we can do is guess a "reasonable" image size.
              //
              // For these reasons, this method should be avoided when possible. The
              // preferred way to "know" the location of an image's center is to wrap
              // the image in a Place object, which can just specify the exact
              // coordinates and zoom level too.
              //
              // Even disregarding the above, it's non-trivial to locate the image
              // center because of the OffsetX/Y parameters and potential rotation of
              // the image's coordinate system relative to the sky.
              _calcViewCenterCoordinate: function(D) {
                var ke = u.Coordinates.degreesToRadians(this._rotation), Fe = Math.cos(ke), He = Math.sin(ke), We = 0, Ke = 0;
                if (this.get_levels() > 0)
                  We = -this._offsetX, Ke = this._offsetY;
                else {
                  var $ = 800, De = 800;
                  We = (this._offsetX - $ / 2) * this._baseTileDegrees, Ke = (De / 2 - this._offsetY) * this._baseTileDegrees;
                }
                return this._bottomsUp && (We = -We), D ? this._centerX + We * Fe + Ke * He : this._centerY - We * He + Ke * Fe;
              },
              get_viewCenterX: function() {
                return this.get_wcsImage() != null ? this.get_wcsImage().get_viewCenterX() : this._calcViewCenterCoordinate(!0);
              },
              get_viewCenterY: function() {
                return this.get_wcsImage() != null ? this.get_wcsImage().get_viewCenterY() : this._calcViewCenterCoordinate(!1);
              },
              setInitialParameters: function(D, ke, Fe, He, We, Ke, $, De, Re, Ie, O, Ue, $e, Ze, Qe, Ae, Ne, Be, Ge, Ye, je, ht, qe, lt, ft, _t, St, yt) {
                this.set_referenceFrame(yt), this.set_meanRadius(St), this._altUrl = _t, this.demUrl = ft, this._creditsText = qe, this._creditsUrl = lt, this._offsetY = ht, this._offsetX = je, this._widthFactor = Ye, this._elevationModel = Ge, this._defaultSet = Be, this._name = D, this._sparse = Ae, this._dataSetType = Fe, this._bandPass = He, this._quadTreeTileMap = Ue, this.url = ke, this._levels = De, this._baseTileDegrees = Re, this._imageSetID = Ke, this._extension = Ie, this._projection = We, this._bottomsUp = O, this._baseLevel = $, this._mercator = !We, this._centerX = $e, this._centerY = Ze, this._rotation = Qe, this._thumbnailUrl = Ne, this._computeMatrix();
              },
              // Ideally, imagesets will be associated with Places that specify
              // exactly how the view should be set up when "going to" them, but
              // sometimes (especially research datasets) we're interested in deriving
              // a reasonable zoom setting without that extra information. The returned value
              // isn't going to be perfect but it should hopefully be OK.
              _guessZoomSetting: function(D) {
                var Fe = D, He = s.ss.safeCast(this._wcsImage, g.FitsImage);
                return this.get_projection() === Le.skyImage ? He != null && (Fe = this.get_baseTileDegrees() * He.get_sizeY() * 6 * 1.7) : He != null ? Fe = He.get_scaleY() * He.get_sizeY() * 6 * 1.7 : Fe = this.get_baseTileDegrees() * 6 * 1.7, Fe > D && (Fe = D), Fe;
              },
              // URL parameters
              //{0} ImageSetID
              //{1} level
              //{2} x tile id
              //{3} y tile id
              //{4} quadtree address (VE style)
              //{5} quadtree address (Google maps style)
              //{6} top left corner RA
              //{7} top left corner Dec
              //{8} bottom right corner RA
              //{9} bottom right corner dec
              //{10} bottom left corner RA
              //{11} bottom left corner dec
              //{12} top right corner RA
              //{13} top right corner dec
              get_thumbnail: function() {
                return this._thumbnail;
              },
              set_thumbnail: function(D) {
                return this._thumbnail = D, D;
              },
              get_bounds: function() {
                return this._bounds;
              },
              set_bounds: function(D) {
                return this._bounds = D, D;
              },
              get_isImage: function() {
                return !0;
              },
              get_isTour: function() {
                return !1;
              },
              get_isFolder: function() {
                return !1;
              },
              get_isCloudCommunityItem: function() {
                return !1;
              },
              get_readOnly: function() {
                return !1;
              },
              get_children: function() {
                return [];
              }
            };
            (0, a.registerType)("Imageset", [Se, Te, null, c.IThumbnail]);
          }
        ),
        /***/
        "./esm/interfaces.js": (
          /*!***************************!*\
            !*** ./esm/interfaces.js ***!
            \***************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              IFolder: () => (
                /* binding */
                a
              ),
              /* harmony export */
              IPlace: () => (
                /* binding */
                l
              ),
              /* harmony export */
              ISettings: () => (
                /* binding */
                u
              ),
              /* harmony export */
              IThumbnail: () => (
                /* binding */
                t
              ),
              /* harmony export */
              IUIServicesCallbacks: () => (
                /* binding */
                _
              ),
              /* harmony export */
              IUiController: () => (
                /* binding */
                o
              ),
              /* harmony export */
              IUndoStep: () => (
                /* binding */
                y
              ),
              /* harmony export */
              IViewMover: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            );
            function a() {
            }
            (0, s.registerType)("IFolder", [a]);
            function t() {
            }
            (0, s.registerType)("IThumbnail", [t]);
            function l() {
            }
            (0, s.registerType)("IPlace", [l]);
            function o() {
            }
            (0, s.registerType)("IUiController", [o]);
            function c() {
            }
            (0, s.registerType)("IViewMover", [c]);
            function _() {
            }
            (0, s.registerType)("IUIServicesCallbacks", [_]);
            function u() {
            }
            (0, s.registerType)("ISettings", [u]);
            function y() {
            }
            (0, s.registerType)("IUndoStep", [y]);
          }
        ),
        /***/
        "./esm/kepler_vertex.js": (
          /*!******************************!*\
            !*** ./esm/kepler_vertex.js ***!
            \******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              KeplerVertex: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), t = n(
              /*! ./color.js */
              "./esm/color.js"
            );
            function l() {
              this.ABC = new a.Vector3d(), this.abc1 = new a.Vector3d(), this.pointSize = 0, this.w = 0, this.e = 0, this.n = 0, this.t = 0, this.a = 0, this.z = 0, this.orbitPos = 0, this.orbits = 0;
            }
            l._sine = 0, l._cose = 1, l._degrad = Math.PI / 180;
            var o = {
              fill: function(c) {
                var _ = Math.cos(c.omega * l._degrad), u = Math.sin(c.omega * l._degrad), y = Math.cos(c.i * l._degrad), g = Math.sin(c.i * l._degrad), Ee = u * l._cose, Ve = u * l._sine, Me = -u * y, B = _ * y * l._cose - g * l._sine, Pe = _ * y * l._sine + g * l._cose;
                this.ABC.x = Math.atan2(_, Me), this.ABC.y = Math.atan2(Ee, B), this.ABC.z = Math.atan2(Ve, Pe), this.abc1.x = Math.sqrt(_ * _ + Me * Me), this.abc1.y = Math.sqrt(Ee * Ee + B * B), this.abc1.z = Math.sqrt(Ve * Ve + Pe * Pe), this.pointSize = 0.1, c.a < 2.5 ? this.color = t.Colors.get_white() : c.a < 2.83 ? this.color = t.Colors.get_red() : c.a < 2.96 ? this.color = t.Colors.get_green() : c.a < 3.3 ? this.color = t.Colors.get_magenta() : c.a < 5 ? this.color = t.Colors.get_cyan() : c.a < 10 ? (this.color = t.Colors.get_yellow(), this.pointSize = 0.9) : (this.color = t.Colors.get_white(), this.pointSize = 8), this.w = c.w, this.e = c.e, c.n ? this.n = c.n : this.n = 0.9856076686 / (c.a * Math.sqrt(c.a)), this.t = c.t - l.baseDate, this.a = c.a, this.z = 0, this.orbitPos = 0, this.orbits = 0;
              }
            };
            (0, s.registerType)("KeplerVertex", [l, o, null]);
          }
        ),
        /***/
        "./esm/layers/color_map_container.js": (
          /*!*******************************************!*\
            !*** ./esm/layers/color_map_container.js ***!
            \*******************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ColorMapContainer: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../color.js */
              "./esm/color.js"
            ), l = n(
              /*! ../graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            );
            function o() {
              this.colors = [];
            }
            o.colorTextures = {}, o.fromArgbList = function(_) {
              for (var u = new o(), y = s.ss.enumerate(_); y.moveNext(); ) {
                var g = y.current;
                u.colors.push(t.Color.fromArgb(g[0], g[1], g[2], g[3]));
              }
              return u;
            }, o.fromStringList = function(_) {
              for (var u = new o(), y = s.ss.enumerate(_); y.moveNext(); ) {
                var g = y.current;
                u.colors.push(t.Color.load(g));
              }
              return u;
            }, o.fromNamedColormap = function(_) {
              if (_ == null)
                return null;
              switch (_.toLowerCase()) {
                case "viridis":
                  return o.viridis;
                case "plasma":
                  return o.plasma;
                case "inferno":
                  return o.inferno;
                case "magma":
                  return o.magma;
                case "cividis":
                  return o.cividis;
                case "greys":
                  return o.greys;
                case "gray":
                  return o.gray;
                case "purples":
                  return o.purples;
                case "blues":
                  return o.blues;
                case "greens":
                  return o.greens;
                case "oranges":
                  return o.oranges;
                case "reds":
                  return o.reds;
                case "rdylbu":
                  return o.rdYlBu;
              }
              return null;
            }, o._getTextureFromName = function(_, u) {
              var y = o.colorTextures[u];
              if (y == null) {
                var g = o.fromNamedColormap(u);
                g != null && (y = o._initColorTexture(_, g), o.colorTextures[u.toLowerCase()] = y);
              }
              return y;
            }, o.bindColorMapTexture = function(_, u) {
              var y = o._getTextureFromName(_, u);
              y == null && (y = o._getTextureFromName(_, "gray")), _.activeTexture(l.WEBGL.TEXTURE1), _.bindTexture(l.WEBGL.TEXTURE_2D, y);
            }, o._initColorTexture = function(_, u) {
              var y = _.createTexture();
              _.activeTexture(l.WEBGL.TEXTURE1), _.bindTexture(l.WEBGL.TEXTURE_2D, y), _.texParameteri(l.WEBGL.TEXTURE_2D, l.WEBGL.TEXTURE_WRAP_S, l.WEBGL.CLAMP_TO_EDGE), _.texParameteri(l.WEBGL.TEXTURE_2D, l.WEBGL.TEXTURE_WRAP_T, l.WEBGL.CLAMP_TO_EDGE);
              var g = o._extractColorArray(u.colors);
              return _.texImage2D(l.WEBGL.TEXTURE_2D, 0, l.WEBGL.RGB8, g.length / 3, 1, 0, l.WEBGL.RGB, l.WEBGL.UNSIGNED_BYTE, g), _.texParameteri(l.WEBGL.TEXTURE_2D, l.WEBGL.TEXTURE_MIN_FILTER, l.WEBGL.NEAREST), _.texParameteri(l.WEBGL.TEXTURE_2D, l.WEBGL.TEXTURE_MAG_FILTER, l.WEBGL.NEAREST), y;
            }, o._extractColorArray = function(_) {
              for (var u = 0, y = new Uint8Array(_.length * 3), g = s.ss.enumerate(_); g.moveNext(); ) {
                var Ee = g.current;
                y[u++] = Ee.r, y[u++] = Ee.g, y[u++] = Ee.b;
              }
              return y;
            };
            var c = {
              // Given a floating-point value in the range 0 to 1, find the color that is
              // the closest to it.
              findClosestColor: function(_) {
                var u;
                return _ <= 0 ? this.colors[0] : _ >= 1 ? this.colors[this.colors.length - 1] : (u = s.ss.truncate(_ * this.colors.length), this.colors[u]);
              }
            };
            (0, a.registerType)("ColorMapContainer", [o, c, null]), o.viridis = o.fromStringList([
              "#440154",
              "#440256",
              "#450457",
              "#450559",
              "#46075a",
              "#46085c",
              "#460a5d",
              "#460b5e",
              "#470d60",
              "#470e61",
              "#471063",
              "#471164",
              "#471365",
              "#481467",
              "#481668",
              "#481769",
              "#48186a",
              "#481a6c",
              "#481b6d",
              "#481c6e",
              "#481d6f",
              "#481f70",
              "#482071",
              "#482173",
              "#482374",
              "#482475",
              "#482576",
              "#482677",
              "#482878",
              "#482979",
              "#472a7a",
              "#472c7a",
              "#472d7b",
              "#472e7c",
              "#472f7d",
              "#46307e",
              "#46327e",
              "#46337f",
              "#463480",
              "#453581",
              "#453781",
              "#453882",
              "#443983",
              "#443a83",
              "#443b84",
              "#433d84",
              "#433e85",
              "#423f85",
              "#424086",
              "#424186",
              "#414287",
              "#414487",
              "#404588",
              "#404688",
              "#3f4788",
              "#3f4889",
              "#3e4989",
              "#3e4a89",
              "#3e4c8a",
              "#3d4d8a",
              "#3d4e8a",
              "#3c4f8a",
              "#3c508b",
              "#3b518b",
              "#3b528b",
              "#3a538b",
              "#3a548c",
              "#39558c",
              "#39568c",
              "#38588c",
              "#38598c",
              "#375a8c",
              "#375b8d",
              "#365c8d",
              "#365d8d",
              "#355e8d",
              "#355f8d",
              "#34608d",
              "#34618d",
              "#33628d",
              "#33638d",
              "#32648e",
              "#32658e",
              "#31668e",
              "#31678e",
              "#31688e",
              "#30698e",
              "#306a8e",
              "#2f6b8e",
              "#2f6c8e",
              "#2e6d8e",
              "#2e6e8e",
              "#2e6f8e",
              "#2d708e",
              "#2d718e",
              "#2c718e",
              "#2c728e",
              "#2c738e",
              "#2b748e",
              "#2b758e",
              "#2a768e",
              "#2a778e",
              "#2a788e",
              "#29798e",
              "#297a8e",
              "#297b8e",
              "#287c8e",
              "#287d8e",
              "#277e8e",
              "#277f8e",
              "#27808e",
              "#26818e",
              "#26828e",
              "#26828e",
              "#25838e",
              "#25848e",
              "#25858e",
              "#24868e",
              "#24878e",
              "#23888e",
              "#23898e",
              "#238a8d",
              "#228b8d",
              "#228c8d",
              "#228d8d",
              "#218e8d",
              "#218f8d",
              "#21908d",
              "#21918c",
              "#20928c",
              "#20928c",
              "#20938c",
              "#1f948c",
              "#1f958b",
              "#1f968b",
              "#1f978b",
              "#1f988b",
              "#1f998a",
              "#1f9a8a",
              "#1e9b8a",
              "#1e9c89",
              "#1e9d89",
              "#1f9e89",
              "#1f9f88",
              "#1fa088",
              "#1fa188",
              "#1fa187",
              "#1fa287",
              "#20a386",
              "#20a486",
              "#21a585",
              "#21a685",
              "#22a785",
              "#22a884",
              "#23a983",
              "#24aa83",
              "#25ab82",
              "#25ac82",
              "#26ad81",
              "#27ad81",
              "#28ae80",
              "#29af7f",
              "#2ab07f",
              "#2cb17e",
              "#2db27d",
              "#2eb37c",
              "#2fb47c",
              "#31b57b",
              "#32b67a",
              "#34b679",
              "#35b779",
              "#37b878",
              "#38b977",
              "#3aba76",
              "#3bbb75",
              "#3dbc74",
              "#3fbc73",
              "#40bd72",
              "#42be71",
              "#44bf70",
              "#46c06f",
              "#48c16e",
              "#4ac16d",
              "#4cc26c",
              "#4ec36b",
              "#50c46a",
              "#52c569",
              "#54c568",
              "#56c667",
              "#58c765",
              "#5ac864",
              "#5cc863",
              "#5ec962",
              "#60ca60",
              "#63cb5f",
              "#65cb5e",
              "#67cc5c",
              "#69cd5b",
              "#6ccd5a",
              "#6ece58",
              "#70cf57",
              "#73d056",
              "#75d054",
              "#77d153",
              "#7ad151",
              "#7cd250",
              "#7fd34e",
              "#81d34d",
              "#84d44b",
              "#86d549",
              "#89d548",
              "#8bd646",
              "#8ed645",
              "#90d743",
              "#93d741",
              "#95d840",
              "#98d83e",
              "#9bd93c",
              "#9dd93b",
              "#a0da39",
              "#a2da37",
              "#a5db36",
              "#a8db34",
              "#aadc32",
              "#addc30",
              "#b0dd2f",
              "#b2dd2d",
              "#b5de2b",
              "#b8de29",
              "#bade28",
              "#bddf26",
              "#c0df25",
              "#c2df23",
              "#c5e021",
              "#c8e020",
              "#cae11f",
              "#cde11d",
              "#d0e11c",
              "#d2e21b",
              "#d5e21a",
              "#d8e219",
              "#dae319",
              "#dde318",
              "#dfe318",
              "#e2e418",
              "#e5e419",
              "#e7e419",
              "#eae51a",
              "#ece51b",
              "#efe51c",
              "#f1e51d",
              "#f4e61e",
              "#f6e620",
              "#f8e621",
              "#fbe723",
              "#fde725"
            ]), o.plasma = o.fromStringList([
              "#0d0887",
              "#100788",
              "#130789",
              "#16078a",
              "#19068c",
              "#1b068d",
              "#1d068e",
              "#20068f",
              "#220690",
              "#240691",
              "#260591",
              "#280592",
              "#2a0593",
              "#2c0594",
              "#2e0595",
              "#2f0596",
              "#310597",
              "#330597",
              "#350498",
              "#370499",
              "#38049a",
              "#3a049a",
              "#3c049b",
              "#3e049c",
              "#3f049c",
              "#41049d",
              "#43039e",
              "#44039e",
              "#46039f",
              "#48039f",
              "#4903a0",
              "#4b03a1",
              "#4c02a1",
              "#4e02a2",
              "#5002a2",
              "#5102a3",
              "#5302a3",
              "#5502a4",
              "#5601a4",
              "#5801a4",
              "#5901a5",
              "#5b01a5",
              "#5c01a6",
              "#5e01a6",
              "#6001a6",
              "#6100a7",
              "#6300a7",
              "#6400a7",
              "#6600a7",
              "#6700a8",
              "#6900a8",
              "#6a00a8",
              "#6c00a8",
              "#6e00a8",
              "#6f00a8",
              "#7100a8",
              "#7201a8",
              "#7401a8",
              "#7501a8",
              "#7701a8",
              "#7801a8",
              "#7a02a8",
              "#7b02a8",
              "#7d03a8",
              "#7e03a8",
              "#8004a8",
              "#8104a7",
              "#8305a7",
              "#8405a7",
              "#8606a6",
              "#8707a6",
              "#8808a6",
              "#8a09a5",
              "#8b0aa5",
              "#8d0ba5",
              "#8e0ca4",
              "#8f0da4",
              "#910ea3",
              "#920fa3",
              "#9410a2",
              "#9511a1",
              "#9613a1",
              "#9814a0",
              "#99159f",
              "#9a169f",
              "#9c179e",
              "#9d189d",
              "#9e199d",
              "#a01a9c",
              "#a11b9b",
              "#a21d9a",
              "#a31e9a",
              "#a51f99",
              "#a62098",
              "#a72197",
              "#a82296",
              "#aa2395",
              "#ab2494",
              "#ac2694",
              "#ad2793",
              "#ae2892",
              "#b02991",
              "#b12a90",
              "#b22b8f",
              "#b32c8e",
              "#b42e8d",
              "#b52f8c",
              "#b6308b",
              "#b7318a",
              "#b83289",
              "#ba3388",
              "#bb3488",
              "#bc3587",
              "#bd3786",
              "#be3885",
              "#bf3984",
              "#c03a83",
              "#c13b82",
              "#c23c81",
              "#c33d80",
              "#c43e7f",
              "#c5407e",
              "#c6417d",
              "#c7427c",
              "#c8437b",
              "#c9447a",
              "#ca457a",
              "#cb4679",
              "#cc4778",
              "#cc4977",
              "#cd4a76",
              "#ce4b75",
              "#cf4c74",
              "#d04d73",
              "#d14e72",
              "#d24f71",
              "#d35171",
              "#d45270",
              "#d5536f",
              "#d5546e",
              "#d6556d",
              "#d7566c",
              "#d8576b",
              "#d9586a",
              "#da5a6a",
              "#da5b69",
              "#db5c68",
              "#dc5d67",
              "#dd5e66",
              "#de5f65",
              "#de6164",
              "#df6263",
              "#e06363",
              "#e16462",
              "#e26561",
              "#e26660",
              "#e3685f",
              "#e4695e",
              "#e56a5d",
              "#e56b5d",
              "#e66c5c",
              "#e76e5b",
              "#e76f5a",
              "#e87059",
              "#e97158",
              "#e97257",
              "#ea7457",
              "#eb7556",
              "#eb7655",
              "#ec7754",
              "#ed7953",
              "#ed7a52",
              "#ee7b51",
              "#ef7c51",
              "#ef7e50",
              "#f07f4f",
              "#f0804e",
              "#f1814d",
              "#f1834c",
              "#f2844b",
              "#f3854b",
              "#f3874a",
              "#f48849",
              "#f48948",
              "#f58b47",
              "#f58c46",
              "#f68d45",
              "#f68f44",
              "#f79044",
              "#f79143",
              "#f79342",
              "#f89441",
              "#f89540",
              "#f9973f",
              "#f9983e",
              "#f99a3e",
              "#fa9b3d",
              "#fa9c3c",
              "#fa9e3b",
              "#fb9f3a",
              "#fba139",
              "#fba238",
              "#fca338",
              "#fca537",
              "#fca636",
              "#fca835",
              "#fca934",
              "#fdab33",
              "#fdac33",
              "#fdae32",
              "#fdaf31",
              "#fdb130",
              "#fdb22f",
              "#fdb42f",
              "#fdb52e",
              "#feb72d",
              "#feb82c",
              "#feba2c",
              "#febb2b",
              "#febd2a",
              "#febe2a",
              "#fec029",
              "#fdc229",
              "#fdc328",
              "#fdc527",
              "#fdc627",
              "#fdc827",
              "#fdca26",
              "#fdcb26",
              "#fccd25",
              "#fcce25",
              "#fcd025",
              "#fcd225",
              "#fbd324",
              "#fbd524",
              "#fbd724",
              "#fad824",
              "#fada24",
              "#f9dc24",
              "#f9dd25",
              "#f8df25",
              "#f8e125",
              "#f7e225",
              "#f7e425",
              "#f6e626",
              "#f6e826",
              "#f5e926",
              "#f5eb27",
              "#f4ed27",
              "#f3ee27",
              "#f3f027",
              "#f2f227",
              "#f1f426",
              "#f1f525",
              "#f0f724",
              "#f0f921"
            ]), o.inferno = o.fromStringList([
              "#000004",
              "#010005",
              "#010106",
              "#010108",
              "#02010a",
              "#02020c",
              "#02020e",
              "#030210",
              "#040312",
              "#040314",
              "#050417",
              "#060419",
              "#07051b",
              "#08051d",
              "#09061f",
              "#0a0722",
              "#0b0724",
              "#0c0826",
              "#0d0829",
              "#0e092b",
              "#10092d",
              "#110a30",
              "#120a32",
              "#140b34",
              "#150b37",
              "#160b39",
              "#180c3c",
              "#190c3e",
              "#1b0c41",
              "#1c0c43",
              "#1e0c45",
              "#1f0c48",
              "#210c4a",
              "#230c4c",
              "#240c4f",
              "#260c51",
              "#280b53",
              "#290b55",
              "#2b0b57",
              "#2d0b59",
              "#2f0a5b",
              "#310a5c",
              "#320a5e",
              "#340a5f",
              "#360961",
              "#380962",
              "#390963",
              "#3b0964",
              "#3d0965",
              "#3e0966",
              "#400a67",
              "#420a68",
              "#440a68",
              "#450a69",
              "#470b6a",
              "#490b6a",
              "#4a0c6b",
              "#4c0c6b",
              "#4d0d6c",
              "#4f0d6c",
              "#510e6c",
              "#520e6d",
              "#540f6d",
              "#550f6d",
              "#57106e",
              "#59106e",
              "#5a116e",
              "#5c126e",
              "#5d126e",
              "#5f136e",
              "#61136e",
              "#62146e",
              "#64156e",
              "#65156e",
              "#67166e",
              "#69166e",
              "#6a176e",
              "#6c186e",
              "#6d186e",
              "#6f196e",
              "#71196e",
              "#721a6e",
              "#741a6e",
              "#751b6e",
              "#771c6d",
              "#781c6d",
              "#7a1d6d",
              "#7c1d6d",
              "#7d1e6d",
              "#7f1e6c",
              "#801f6c",
              "#82206c",
              "#84206b",
              "#85216b",
              "#87216b",
              "#88226a",
              "#8a226a",
              "#8c2369",
              "#8d2369",
              "#8f2469",
              "#902568",
              "#922568",
              "#932667",
              "#952667",
              "#972766",
              "#982766",
              "#9a2865",
              "#9b2964",
              "#9d2964",
              "#9f2a63",
              "#a02a63",
              "#a22b62",
              "#a32c61",
              "#a52c60",
              "#a62d60",
              "#a82e5f",
              "#a92e5e",
              "#ab2f5e",
              "#ad305d",
              "#ae305c",
              "#b0315b",
              "#b1325a",
              "#b3325a",
              "#b43359",
              "#b63458",
              "#b73557",
              "#b93556",
              "#ba3655",
              "#bc3754",
              "#bd3853",
              "#bf3952",
              "#c03a51",
              "#c13a50",
              "#c33b4f",
              "#c43c4e",
              "#c63d4d",
              "#c73e4c",
              "#c83f4b",
              "#ca404a",
              "#cb4149",
              "#cc4248",
              "#ce4347",
              "#cf4446",
              "#d04545",
              "#d24644",
              "#d34743",
              "#d44842",
              "#d54a41",
              "#d74b3f",
              "#d84c3e",
              "#d94d3d",
              "#da4e3c",
              "#db503b",
              "#dd513a",
              "#de5238",
              "#df5337",
              "#e05536",
              "#e15635",
              "#e25734",
              "#e35933",
              "#e45a31",
              "#e55c30",
              "#e65d2f",
              "#e75e2e",
              "#e8602d",
              "#e9612b",
              "#ea632a",
              "#eb6429",
              "#eb6628",
              "#ec6726",
              "#ed6925",
              "#ee6a24",
              "#ef6c23",
              "#ef6e21",
              "#f06f20",
              "#f1711f",
              "#f1731d",
              "#f2741c",
              "#f3761b",
              "#f37819",
              "#f47918",
              "#f57b17",
              "#f57d15",
              "#f67e14",
              "#f68013",
              "#f78212",
              "#f78410",
              "#f8850f",
              "#f8870e",
              "#f8890c",
              "#f98b0b",
              "#f98c0a",
              "#f98e09",
              "#fa9008",
              "#fa9207",
              "#fa9407",
              "#fb9606",
              "#fb9706",
              "#fb9906",
              "#fb9b06",
              "#fb9d07",
              "#fc9f07",
              "#fca108",
              "#fca309",
              "#fca50a",
              "#fca60c",
              "#fca80d",
              "#fcaa0f",
              "#fcac11",
              "#fcae12",
              "#fcb014",
              "#fcb216",
              "#fcb418",
              "#fbb61a",
              "#fbb81d",
              "#fbba1f",
              "#fbbc21",
              "#fbbe23",
              "#fac026",
              "#fac228",
              "#fac42a",
              "#fac62d",
              "#f9c72f",
              "#f9c932",
              "#f9cb35",
              "#f8cd37",
              "#f8cf3a",
              "#f7d13d",
              "#f7d340",
              "#f6d543",
              "#f6d746",
              "#f5d949",
              "#f5db4c",
              "#f4dd4f",
              "#f4df53",
              "#f4e156",
              "#f3e35a",
              "#f3e55d",
              "#f2e661",
              "#f2e865",
              "#f2ea69",
              "#f1ec6d",
              "#f1ed71",
              "#f1ef75",
              "#f1f179",
              "#f2f27d",
              "#f2f482",
              "#f3f586",
              "#f3f68a",
              "#f4f88e",
              "#f5f992",
              "#f6fa96",
              "#f8fb9a",
              "#f9fc9d",
              "#fafda1",
              "#fcffa4"
            ]), o.magma = o.fromStringList([
              "#000004",
              "#010005",
              "#010106",
              "#010108",
              "#020109",
              "#02020b",
              "#02020d",
              "#03030f",
              "#030312",
              "#040414",
              "#050416",
              "#060518",
              "#06051a",
              "#07061c",
              "#08071e",
              "#090720",
              "#0a0822",
              "#0b0924",
              "#0c0926",
              "#0d0a29",
              "#0e0b2b",
              "#100b2d",
              "#110c2f",
              "#120d31",
              "#130d34",
              "#140e36",
              "#150e38",
              "#160f3b",
              "#180f3d",
              "#19103f",
              "#1a1042",
              "#1c1044",
              "#1d1147",
              "#1e1149",
              "#20114b",
              "#21114e",
              "#221150",
              "#241253",
              "#251255",
              "#271258",
              "#29115a",
              "#2a115c",
              "#2c115f",
              "#2d1161",
              "#2f1163",
              "#311165",
              "#331067",
              "#341069",
              "#36106b",
              "#38106c",
              "#390f6e",
              "#3b0f70",
              "#3d0f71",
              "#3f0f72",
              "#400f74",
              "#420f75",
              "#440f76",
              "#451077",
              "#471078",
              "#491078",
              "#4a1079",
              "#4c117a",
              "#4e117b",
              "#4f127b",
              "#51127c",
              "#52137c",
              "#54137d",
              "#56147d",
              "#57157e",
              "#59157e",
              "#5a167e",
              "#5c167f",
              "#5d177f",
              "#5f187f",
              "#601880",
              "#621980",
              "#641a80",
              "#651a80",
              "#671b80",
              "#681c81",
              "#6a1c81",
              "#6b1d81",
              "#6d1d81",
              "#6e1e81",
              "#701f81",
              "#721f81",
              "#732081",
              "#752181",
              "#762181",
              "#782281",
              "#792282",
              "#7b2382",
              "#7c2382",
              "#7e2482",
              "#802582",
              "#812581",
              "#832681",
              "#842681",
              "#862781",
              "#882781",
              "#892881",
              "#8b2981",
              "#8c2981",
              "#8e2a81",
              "#902a81",
              "#912b81",
              "#932b80",
              "#942c80",
              "#962c80",
              "#982d80",
              "#992d80",
              "#9b2e7f",
              "#9c2e7f",
              "#9e2f7f",
              "#a02f7f",
              "#a1307e",
              "#a3307e",
              "#a5317e",
              "#a6317d",
              "#a8327d",
              "#aa337d",
              "#ab337c",
              "#ad347c",
              "#ae347b",
              "#b0357b",
              "#b2357b",
              "#b3367a",
              "#b5367a",
              "#b73779",
              "#b83779",
              "#ba3878",
              "#bc3978",
              "#bd3977",
              "#bf3a77",
              "#c03a76",
              "#c23b75",
              "#c43c75",
              "#c53c74",
              "#c73d73",
              "#c83e73",
              "#ca3e72",
              "#cc3f71",
              "#cd4071",
              "#cf4070",
              "#d0416f",
              "#d2426f",
              "#d3436e",
              "#d5446d",
              "#d6456c",
              "#d8456c",
              "#d9466b",
              "#db476a",
              "#dc4869",
              "#de4968",
              "#df4a68",
              "#e04c67",
              "#e24d66",
              "#e34e65",
              "#e44f64",
              "#e55064",
              "#e75263",
              "#e85362",
              "#e95462",
              "#ea5661",
              "#eb5760",
              "#ec5860",
              "#ed5a5f",
              "#ee5b5e",
              "#ef5d5e",
              "#f05f5e",
              "#f1605d",
              "#f2625d",
              "#f2645c",
              "#f3655c",
              "#f4675c",
              "#f4695c",
              "#f56b5c",
              "#f66c5c",
              "#f66e5c",
              "#f7705c",
              "#f7725c",
              "#f8745c",
              "#f8765c",
              "#f9785d",
              "#f9795d",
              "#f97b5d",
              "#fa7d5e",
              "#fa7f5e",
              "#fa815f",
              "#fb835f",
              "#fb8560",
              "#fb8761",
              "#fc8961",
              "#fc8a62",
              "#fc8c63",
              "#fc8e64",
              "#fc9065",
              "#fd9266",
              "#fd9467",
              "#fd9668",
              "#fd9869",
              "#fd9a6a",
              "#fd9b6b",
              "#fe9d6c",
              "#fe9f6d",
              "#fea16e",
              "#fea36f",
              "#fea571",
              "#fea772",
              "#fea973",
              "#feaa74",
              "#feac76",
              "#feae77",
              "#feb078",
              "#feb27a",
              "#feb47b",
              "#feb67c",
              "#feb77e",
              "#feb97f",
              "#febb81",
              "#febd82",
              "#febf84",
              "#fec185",
              "#fec287",
              "#fec488",
              "#fec68a",
              "#fec88c",
              "#feca8d",
              "#fecc8f",
              "#fecd90",
              "#fecf92",
              "#fed194",
              "#fed395",
              "#fed597",
              "#fed799",
              "#fed89a",
              "#fdda9c",
              "#fddc9e",
              "#fddea0",
              "#fde0a1",
              "#fde2a3",
              "#fde3a5",
              "#fde5a7",
              "#fde7a9",
              "#fde9aa",
              "#fdebac",
              "#fcecae",
              "#fceeb0",
              "#fcf0b2",
              "#fcf2b4",
              "#fcf4b6",
              "#fcf6b8",
              "#fcf7b9",
              "#fcf9bb",
              "#fcfbbd",
              "#fcfdbf"
            ]), o.cividis = o.fromStringList([
              "#00224e",
              "#00234f",
              "#002451",
              "#002553",
              "#002554",
              "#002656",
              "#002758",
              "#002859",
              "#00285b",
              "#00295d",
              "#002a5f",
              "#002a61",
              "#002b62",
              "#002c64",
              "#002c66",
              "#002d68",
              "#002e6a",
              "#002e6c",
              "#002f6d",
              "#00306f",
              "#003070",
              "#003170",
              "#003171",
              "#013271",
              "#053371",
              "#083370",
              "#0c3470",
              "#0f3570",
              "#123570",
              "#143670",
              "#163770",
              "#18376f",
              "#1a386f",
              "#1c396f",
              "#1e3a6f",
              "#203a6f",
              "#213b6e",
              "#233c6e",
              "#243c6e",
              "#263d6e",
              "#273e6e",
              "#293f6e",
              "#2a3f6d",
              "#2b406d",
              "#2d416d",
              "#2e416d",
              "#2f426d",
              "#31436d",
              "#32436d",
              "#33446d",
              "#34456c",
              "#35456c",
              "#36466c",
              "#38476c",
              "#39486c",
              "#3a486c",
              "#3b496c",
              "#3c4a6c",
              "#3d4a6c",
              "#3e4b6c",
              "#3f4c6c",
              "#404c6c",
              "#414d6c",
              "#424e6c",
              "#434e6c",
              "#444f6c",
              "#45506c",
              "#46516c",
              "#47516c",
              "#48526c",
              "#49536c",
              "#4a536c",
              "#4b546c",
              "#4c556c",
              "#4d556c",
              "#4e566c",
              "#4f576c",
              "#50576c",
              "#51586d",
              "#52596d",
              "#535a6d",
              "#545a6d",
              "#555b6d",
              "#555c6d",
              "#565c6d",
              "#575d6d",
              "#585e6d",
              "#595e6e",
              "#5a5f6e",
              "#5b606e",
              "#5c616e",
              "#5d616e",
              "#5e626e",
              "#5e636f",
              "#5f636f",
              "#60646f",
              "#61656f",
              "#62656f",
              "#636670",
              "#646770",
              "#656870",
              "#656870",
              "#666970",
              "#676a71",
              "#686a71",
              "#696b71",
              "#6a6c71",
              "#6b6d72",
              "#6c6d72",
              "#6c6e72",
              "#6d6f72",
              "#6e6f73",
              "#6f7073",
              "#707173",
              "#717274",
              "#727274",
              "#727374",
              "#737475",
              "#747475",
              "#757575",
              "#767676",
              "#777776",
              "#777777",
              "#787877",
              "#797977",
              "#7a7a78",
              "#7b7a78",
              "#7c7b78",
              "#7d7c78",
              "#7e7c78",
              "#7e7d78",
              "#7f7e78",
              "#807f78",
              "#817f78",
              "#828079",
              "#838179",
              "#848279",
              "#858279",
              "#868379",
              "#878478",
              "#888578",
              "#898578",
              "#8a8678",
              "#8b8778",
              "#8c8878",
              "#8d8878",
              "#8e8978",
              "#8f8a78",
              "#908b78",
              "#918b78",
              "#928c78",
              "#928d78",
              "#938e78",
              "#948e77",
              "#958f77",
              "#969077",
              "#979177",
              "#989277",
              "#999277",
              "#9a9376",
              "#9b9476",
              "#9c9576",
              "#9d9576",
              "#9e9676",
              "#9f9775",
              "#a09875",
              "#a19975",
              "#a29975",
              "#a39a74",
              "#a49b74",
              "#a59c74",
              "#a69c74",
              "#a79d73",
              "#a89e73",
              "#a99f73",
              "#aaa073",
              "#aba072",
              "#aca172",
              "#ada272",
              "#aea371",
              "#afa471",
              "#b0a571",
              "#b1a570",
              "#b3a670",
              "#b4a76f",
              "#b5a86f",
              "#b6a96f",
              "#b7a96e",
              "#b8aa6e",
              "#b9ab6d",
              "#baac6d",
              "#bbad6d",
              "#bcae6c",
              "#bdae6c",
              "#beaf6b",
              "#bfb06b",
              "#c0b16a",
              "#c1b26a",
              "#c2b369",
              "#c3b369",
              "#c4b468",
              "#c5b568",
              "#c6b667",
              "#c7b767",
              "#c8b866",
              "#c9b965",
              "#cbb965",
              "#ccba64",
              "#cdbb63",
              "#cebc63",
              "#cfbd62",
              "#d0be62",
              "#d1bf61",
              "#d2c060",
              "#d3c05f",
              "#d4c15f",
              "#d5c25e",
              "#d6c35d",
              "#d7c45c",
              "#d9c55c",
              "#dac65b",
              "#dbc75a",
              "#dcc859",
              "#ddc858",
              "#dec958",
              "#dfca57",
              "#e0cb56",
              "#e1cc55",
              "#e2cd54",
              "#e4ce53",
              "#e5cf52",
              "#e6d051",
              "#e7d150",
              "#e8d24f",
              "#e9d34e",
              "#ead34c",
              "#ebd44b",
              "#edd54a",
              "#eed649",
              "#efd748",
              "#f0d846",
              "#f1d945",
              "#f2da44",
              "#f3db42",
              "#f5dc41",
              "#f6dd3f",
              "#f7de3e",
              "#f8df3c",
              "#f9e03a",
              "#fbe138",
              "#fce236",
              "#fde334",
              "#fee434",
              "#fee535",
              "#fee636",
              "#fee838"
            ]), o.greys = o.fromStringList([
              "#ffffff",
              "#ffffff",
              "#fefefe",
              "#fefefe",
              "#fdfdfd",
              "#fdfdfd",
              "#fcfcfc",
              "#fcfcfc",
              "#fbfbfb",
              "#fbfbfb",
              "#fafafa",
              "#fafafa",
              "#f9f9f9",
              "#f9f9f9",
              "#f8f8f8",
              "#f8f8f8",
              "#f7f7f7",
              "#f7f7f7",
              "#f7f7f7",
              "#f6f6f6",
              "#f6f6f6",
              "#f5f5f5",
              "#f5f5f5",
              "#f4f4f4",
              "#f4f4f4",
              "#f3f3f3",
              "#f3f3f3",
              "#f2f2f2",
              "#f2f2f2",
              "#f1f1f1",
              "#f1f1f1",
              "#f0f0f0",
              "#f0f0f0",
              "#efefef",
              "#eeeeee",
              "#eeeeee",
              "#ededed",
              "#ececec",
              "#ececec",
              "#ebebeb",
              "#eaeaea",
              "#e9e9e9",
              "#e9e9e9",
              "#e8e8e8",
              "#e7e7e7",
              "#e7e7e7",
              "#e6e6e6",
              "#e5e5e5",
              "#e4e4e4",
              "#e4e4e4",
              "#e3e3e3",
              "#e2e2e2",
              "#e1e1e1",
              "#e1e1e1",
              "#e0e0e0",
              "#dfdfdf",
              "#dfdfdf",
              "#dedede",
              "#dddddd",
              "#dcdcdc",
              "#dcdcdc",
              "#dbdbdb",
              "#dadada",
              "#dadada",
              "#d9d9d9",
              "#d8d8d8",
              "#d7d7d7",
              "#d6d6d6",
              "#d5d5d5",
              "#d4d4d4",
              "#d4d4d4",
              "#d3d3d3",
              "#d2d2d2",
              "#d1d1d1",
              "#d0d0d0",
              "#cfcfcf",
              "#cecece",
              "#cdcdcd",
              "#cccccc",
              "#cccccc",
              "#cbcbcb",
              "#cacaca",
              "#c9c9c9",
              "#c8c8c8",
              "#c7c7c7",
              "#c6c6c6",
              "#c5c5c5",
              "#c5c5c5",
              "#c4c4c4",
              "#c3c3c3",
              "#c2c2c2",
              "#c1c1c1",
              "#c0c0c0",
              "#bfbfbf",
              "#bebebe",
              "#bebebe",
              "#bdbdbd",
              "#bbbbbb",
              "#bababa",
              "#b9b9b9",
              "#b8b8b8",
              "#b6b6b6",
              "#b5b5b5",
              "#b4b4b4",
              "#b3b3b3",
              "#b2b2b2",
              "#b0b0b0",
              "#afafaf",
              "#aeaeae",
              "#adadad",
              "#ababab",
              "#aaaaaa",
              "#a9a9a9",
              "#a8a8a8",
              "#a7a7a7",
              "#a5a5a5",
              "#a4a4a4",
              "#a3a3a3",
              "#a2a2a2",
              "#a0a0a0",
              "#9f9f9f",
              "#9e9e9e",
              "#9d9d9d",
              "#9c9c9c",
              "#9a9a9a",
              "#999999",
              "#989898",
              "#979797",
              "#959595",
              "#949494",
              "#939393",
              "#929292",
              "#919191",
              "#909090",
              "#8f8f8f",
              "#8e8e8e",
              "#8d8d8d",
              "#8c8c8c",
              "#8a8a8a",
              "#898989",
              "#888888",
              "#878787",
              "#868686",
              "#858585",
              "#848484",
              "#838383",
              "#828282",
              "#818181",
              "#7f7f7f",
              "#7e7e7e",
              "#7d7d7d",
              "#7c7c7c",
              "#7b7b7b",
              "#7a7a7a",
              "#797979",
              "#787878",
              "#777777",
              "#767676",
              "#757575",
              "#737373",
              "#727272",
              "#717171",
              "#707070",
              "#6f6f6f",
              "#6e6e6e",
              "#6d6d6d",
              "#6c6c6c",
              "#6b6b6b",
              "#6a6a6a",
              "#696969",
              "#686868",
              "#676767",
              "#666666",
              "#656565",
              "#646464",
              "#636363",
              "#626262",
              "#616161",
              "#606060",
              "#5f5f5f",
              "#5e5e5e",
              "#5d5d5d",
              "#5c5c5c",
              "#5b5b5b",
              "#5a5a5a",
              "#585858",
              "#575757",
              "#565656",
              "#555555",
              "#545454",
              "#535353",
              "#525252",
              "#515151",
              "#505050",
              "#4e4e4e",
              "#4d4d4d",
              "#4b4b4b",
              "#4a4a4a",
              "#484848",
              "#474747",
              "#464646",
              "#444444",
              "#434343",
              "#414141",
              "#404040",
              "#3f3f3f",
              "#3d3d3d",
              "#3c3c3c",
              "#3a3a3a",
              "#393939",
              "#383838",
              "#363636",
              "#353535",
              "#333333",
              "#323232",
              "#303030",
              "#2f2f2f",
              "#2e2e2e",
              "#2c2c2c",
              "#2b2b2b",
              "#292929",
              "#282828",
              "#272727",
              "#252525",
              "#242424",
              "#232323",
              "#222222",
              "#212121",
              "#1f1f1f",
              "#1e1e1e",
              "#1d1d1d",
              "#1c1c1c",
              "#1b1b1b",
              "#1a1a1a",
              "#181818",
              "#171717",
              "#161616",
              "#151515",
              "#141414",
              "#131313",
              "#111111",
              "#101010",
              "#0f0f0f",
              "#0e0e0e",
              "#0d0d0d",
              "#0c0c0c",
              "#0a0a0a",
              "#090909",
              "#080808",
              "#070707",
              "#060606",
              "#050505",
              "#030303",
              "#020202",
              "#010101",
              "#000000"
            ]), o.gray = o.fromStringList([
              "#000000",
              "#010101",
              "#020202",
              "#030303",
              "#040404",
              "#050505",
              "#060606",
              "#070707",
              "#080808",
              "#090909",
              "#0a0a0a",
              "#0b0b0b",
              "#0c0c0c",
              "#0d0d0d",
              "#0e0e0e",
              "#0f0f0f",
              "#101010",
              "#111111",
              "#121212",
              "#131313",
              "#141414",
              "#151515",
              "#161616",
              "#171717",
              "#181818",
              "#191919",
              "#1a1a1a",
              "#1b1b1b",
              "#1c1c1c",
              "#1d1d1d",
              "#1e1e1e",
              "#1f1f1f",
              "#202020",
              "#212121",
              "#222222",
              "#232323",
              "#242424",
              "#252525",
              "#262626",
              "#272727",
              "#282828",
              "#292929",
              "#2a2a2a",
              "#2b2b2b",
              "#2c2c2c",
              "#2d2d2d",
              "#2e2e2e",
              "#2f2f2f",
              "#303030",
              "#313131",
              "#323232",
              "#333333",
              "#343434",
              "#353535",
              "#363636",
              "#373737",
              "#383838",
              "#393939",
              "#3a3a3a",
              "#3b3b3b",
              "#3c3c3c",
              "#3d3d3d",
              "#3e3e3e",
              "#3f3f3f",
              "#404040",
              "#414141",
              "#424242",
              "#434343",
              "#444444",
              "#454545",
              "#464646",
              "#474747",
              "#484848",
              "#494949",
              "#4a4a4a",
              "#4b4b4b",
              "#4c4c4c",
              "#4d4d4d",
              "#4e4e4e",
              "#4f4f4f",
              "#505050",
              "#515151",
              "#525252",
              "#535353",
              "#545454",
              "#555555",
              "#565656",
              "#575757",
              "#585858",
              "#595959",
              "#5a5a5a",
              "#5b5b5b",
              "#5c5c5c",
              "#5d5d5d",
              "#5e5e5e",
              "#5f5f5f",
              "#606060",
              "#616161",
              "#626262",
              "#636363",
              "#646464",
              "#656565",
              "#666666",
              "#676767",
              "#686868",
              "#696969",
              "#6a6a6a",
              "#6b6b6b",
              "#6c6c6c",
              "#6d6d6d",
              "#6e6e6e",
              "#6f6f6f",
              "#707070",
              "#717171",
              "#727272",
              "#737373",
              "#747474",
              "#757575",
              "#767676",
              "#777777",
              "#787878",
              "#797979",
              "#7a7a7a",
              "#7b7b7b",
              "#7c7c7c",
              "#7d7d7d",
              "#7e7e7e",
              "#7f7f7f",
              "#808080",
              "#818181",
              "#828282",
              "#838383",
              "#848484",
              "#858585",
              "#868686",
              "#878787",
              "#888888",
              "#898989",
              "#8a8a8a",
              "#8b8b8b",
              "#8c8c8c",
              "#8d8d8d",
              "#8e8e8e",
              "#8f8f8f",
              "#909090",
              "#919191",
              "#929292",
              "#939393",
              "#949494",
              "#959595",
              "#969696",
              "#979797",
              "#989898",
              "#999999",
              "#9a9a9a",
              "#9b9b9b",
              "#9c9c9c",
              "#9d9d9d",
              "#9e9e9e",
              "#9f9f9f",
              "#a0a0a0",
              "#a1a1a1",
              "#a2a2a2",
              "#a3a3a3",
              "#a4a4a4",
              "#a5a5a5",
              "#a6a6a6",
              "#a7a7a7",
              "#a8a8a8",
              "#a9a9a9",
              "#aaaaaa",
              "#ababab",
              "#acacac",
              "#adadad",
              "#aeaeae",
              "#afafaf",
              "#b0b0b0",
              "#b1b1b1",
              "#b2b2b2",
              "#b3b3b3",
              "#b4b4b4",
              "#b5b5b5",
              "#b6b6b6",
              "#b7b7b7",
              "#b8b8b8",
              "#b9b9b9",
              "#bababa",
              "#bbbbbb",
              "#bcbcbc",
              "#bdbdbd",
              "#bebebe",
              "#bfbfbf",
              "#c0c0c0",
              "#c1c1c1",
              "#c2c2c2",
              "#c3c3c3",
              "#c4c4c4",
              "#c5c5c5",
              "#c6c6c6",
              "#c7c7c7",
              "#c8c8c8",
              "#c9c9c9",
              "#cacaca",
              "#cbcbcb",
              "#cccccc",
              "#cdcdcd",
              "#cecece",
              "#cfcfcf",
              "#d0d0d0",
              "#d1d1d1",
              "#d2d2d2",
              "#d3d3d3",
              "#d4d4d4",
              "#d5d5d5",
              "#d6d6d6",
              "#d7d7d7",
              "#d8d8d8",
              "#d9d9d9",
              "#dadada",
              "#dbdbdb",
              "#dcdcdc",
              "#dddddd",
              "#dedede",
              "#dfdfdf",
              "#e0e0e0",
              "#e1e1e1",
              "#e2e2e2",
              "#e3e3e3",
              "#e4e4e4",
              "#e5e5e5",
              "#e6e6e6",
              "#e7e7e7",
              "#e8e8e8",
              "#e9e9e9",
              "#eaeaea",
              "#ebebeb",
              "#ececec",
              "#ededed",
              "#eeeeee",
              "#efefef",
              "#f0f0f0",
              "#f1f1f1",
              "#f2f2f2",
              "#f3f3f3",
              "#f4f4f4",
              "#f5f5f5",
              "#f6f6f6",
              "#f7f7f7",
              "#f8f8f8",
              "#f9f9f9",
              "#fafafa",
              "#fbfbfb",
              "#fcfcfc",
              "#fdfdfd",
              "#fefefe",
              "#ffffff"
            ]), o.purples = o.fromStringList([
              "#fcfbfd",
              "#fcfbfd",
              "#fbfafc",
              "#fbfafc",
              "#faf9fc",
              "#faf9fc",
              "#faf8fb",
              "#f9f8fb",
              "#f9f7fb",
              "#f8f7fb",
              "#f8f7fa",
              "#f8f6fa",
              "#f7f6fa",
              "#f7f5fa",
              "#f6f5f9",
              "#f6f4f9",
              "#f5f4f9",
              "#f5f4f9",
              "#f5f3f8",
              "#f4f3f8",
              "#f4f2f8",
              "#f3f2f8",
              "#f3f1f7",
              "#f3f1f7",
              "#f2f0f7",
              "#f2f0f7",
              "#f1f0f6",
              "#f1eff6",
              "#f1eff6",
              "#f0eef6",
              "#f0eef5",
              "#efedf5",
              "#efedf5",
              "#eeecf5",
              "#eeecf4",
              "#edebf4",
              "#ecebf4",
              "#eceaf3",
              "#ebe9f3",
              "#eae9f3",
              "#eae8f2",
              "#e9e8f2",
              "#e8e7f2",
              "#e8e6f2",
              "#e7e6f1",
              "#e6e5f1",
              "#e6e5f1",
              "#e5e4f0",
              "#e4e3f0",
              "#e4e3f0",
              "#e3e2ef",
              "#e2e2ef",
              "#e2e1ef",
              "#e1e0ee",
              "#e0e0ee",
              "#e0dfee",
              "#dfdfed",
              "#dedeed",
              "#dedded",
              "#ddddec",
              "#dcdcec",
              "#dcdcec",
              "#dbdbec",
              "#dadaeb",
              "#dadaeb",
              "#d9d9ea",
              "#d8d8ea",
              "#d7d7e9",
              "#d6d6e9",
              "#d5d5e9",
              "#d4d4e8",
              "#d3d3e8",
              "#d2d2e7",
              "#d1d2e7",
              "#d0d1e6",
              "#cfd0e6",
              "#cecfe5",
              "#cecee5",
              "#cdcde4",
              "#cccce4",
              "#cbcbe3",
              "#cacae3",
              "#c9c9e2",
              "#c8c8e2",
              "#c7c8e1",
              "#c6c7e1",
              "#c5c6e1",
              "#c4c5e0",
              "#c3c4e0",
              "#c2c3df",
              "#c1c2df",
              "#c0c1de",
              "#bfc0de",
              "#bebfdd",
              "#bebedd",
              "#bdbedc",
              "#bcbddc",
              "#bbbbdb",
              "#babadb",
              "#b9b9da",
              "#b8b8d9",
              "#b7b7d9",
              "#b6b6d8",
              "#b5b5d7",
              "#b4b4d7",
              "#b3b3d6",
              "#b2b2d5",
              "#b1b1d5",
              "#b0afd4",
              "#afaed4",
              "#aeadd3",
              "#aeacd2",
              "#adabd2",
              "#acaad1",
              "#aba9d0",
              "#aaa8d0",
              "#a9a7cf",
              "#a8a6cf",
              "#a7a4ce",
              "#a6a3cd",
              "#a5a2cd",
              "#a4a1cc",
              "#a3a0cb",
              "#a29fcb",
              "#a19eca",
              "#a09dca",
              "#9f9cc9",
              "#9e9bc8",
              "#9e9ac8",
              "#9d99c7",
              "#9c98c7",
              "#9b97c6",
              "#9a96c6",
              "#9995c6",
              "#9894c5",
              "#9793c5",
              "#9692c4",
              "#9591c4",
              "#9490c3",
              "#9390c3",
              "#928fc3",
              "#918ec2",
              "#908dc2",
              "#8f8cc1",
              "#8e8bc1",
              "#8e8ac0",
              "#8d89c0",
              "#8c88bf",
              "#8b87bf",
              "#8a86bf",
              "#8986be",
              "#8885be",
              "#8784bd",
              "#8683bd",
              "#8582bc",
              "#8481bc",
              "#8380bb",
              "#827fbb",
              "#817ebb",
              "#807dba",
              "#807cba",
              "#7f7bb9",
              "#7e79b8",
              "#7d78b7",
              "#7d77b7",
              "#7c75b6",
              "#7b74b5",
              "#7b72b4",
              "#7a71b4",
              "#7970b3",
              "#796eb2",
              "#786db2",
              "#776cb1",
              "#776ab0",
              "#7669af",
              "#7567af",
              "#7566ae",
              "#7465ad",
              "#7363ad",
              "#7262ac",
              "#7261ab",
              "#715faa",
              "#705eaa",
              "#705ca9",
              "#6f5ba8",
              "#6e5aa8",
              "#6e58a7",
              "#6d57a6",
              "#6c55a5",
              "#6c54a5",
              "#6b53a4",
              "#6a51a3",
              "#6950a3",
              "#694fa2",
              "#684da1",
              "#674ca1",
              "#674ba0",
              "#66499f",
              "#65489f",
              "#65479e",
              "#64459e",
              "#63449d",
              "#63439c",
              "#62429c",
              "#61409b",
              "#613f9a",
              "#603e9a",
              "#5f3c99",
              "#5e3b98",
              "#5e3a98",
              "#5d3897",
              "#5c3797",
              "#5c3696",
              "#5b3495",
              "#5a3395",
              "#5a3294",
              "#593093",
              "#582f93",
              "#582e92",
              "#572c92",
              "#562b91",
              "#552a90",
              "#552890",
              "#54278f",
              "#53268f",
              "#53258e",
              "#52238d",
              "#51228d",
              "#51218c",
              "#50208c",
              "#4f1f8b",
              "#4f1d8b",
              "#4e1c8a",
              "#4d1b89",
              "#4d1a89",
              "#4c1888",
              "#4c1788",
              "#4b1687",
              "#4a1587",
              "#4a1486",
              "#491285",
              "#481185",
              "#481084",
              "#470f84",
              "#460d83",
              "#460c83",
              "#450b82",
              "#440a82",
              "#440981",
              "#430780",
              "#420680",
              "#42057f",
              "#41047f",
              "#40027e",
              "#40017e",
              "#3f007d"
            ]), o.blues = o.fromStringList([
              "#f7fbff",
              "#f6faff",
              "#f5fafe",
              "#f5f9fe",
              "#f4f9fe",
              "#f3f8fe",
              "#f2f8fd",
              "#f2f7fd",
              "#f1f7fd",
              "#f0f6fd",
              "#eff6fc",
              "#eef5fc",
              "#eef5fc",
              "#edf4fc",
              "#ecf4fb",
              "#ebf3fb",
              "#eaf3fb",
              "#eaf2fb",
              "#e9f2fa",
              "#e8f1fa",
              "#e7f1fa",
              "#e7f0fa",
              "#e6f0f9",
              "#e5eff9",
              "#e4eff9",
              "#e3eef9",
              "#e3eef8",
              "#e2edf8",
              "#e1edf8",
              "#e0ecf8",
              "#dfecf7",
              "#dfebf7",
              "#deebf7",
              "#ddeaf7",
              "#dceaf6",
              "#dce9f6",
              "#dbe9f6",
              "#dae8f6",
              "#d9e8f5",
              "#d9e7f5",
              "#d8e7f5",
              "#d7e6f5",
              "#d6e6f4",
              "#d6e5f4",
              "#d5e5f4",
              "#d4e4f4",
              "#d3e4f3",
              "#d3e3f3",
              "#d2e3f3",
              "#d1e2f3",
              "#d0e2f2",
              "#d0e1f2",
              "#cfe1f2",
              "#cee0f2",
              "#cde0f1",
              "#cddff1",
              "#ccdff1",
              "#cbdef1",
              "#cadef0",
              "#caddf0",
              "#c9ddf0",
              "#c8dcf0",
              "#c7dcef",
              "#c7dbef",
              "#c6dbef",
              "#c4daee",
              "#c3daee",
              "#c2d9ee",
              "#c1d9ed",
              "#bfd8ed",
              "#bed8ec",
              "#bdd7ec",
              "#bcd7eb",
              "#bad6eb",
              "#b9d6ea",
              "#b8d5ea",
              "#b7d4ea",
              "#b5d4e9",
              "#b4d3e9",
              "#b3d3e8",
              "#b2d2e8",
              "#b0d2e7",
              "#afd1e7",
              "#aed1e7",
              "#add0e6",
              "#abd0e6",
              "#aacfe5",
              "#a9cfe5",
              "#a8cee4",
              "#a6cee4",
              "#a5cde3",
              "#a4cce3",
              "#a3cce3",
              "#a1cbe2",
              "#a0cbe2",
              "#9fcae1",
              "#9dcae1",
              "#9cc9e1",
              "#9ac8e0",
              "#99c7e0",
              "#97c6df",
              "#95c5df",
              "#94c4df",
              "#92c4de",
              "#91c3de",
              "#8fc2de",
              "#8dc1dd",
              "#8cc0dd",
              "#8abfdd",
              "#89bedc",
              "#87bddc",
              "#85bcdc",
              "#84bcdb",
              "#82bbdb",
              "#81badb",
              "#7fb9da",
              "#7db8da",
              "#7cb7da",
              "#7ab6d9",
              "#79b5d9",
              "#77b5d9",
              "#75b4d8",
              "#74b3d8",
              "#72b2d8",
              "#71b1d7",
              "#6fb0d7",
              "#6dafd7",
              "#6caed6",
              "#6aaed6",
              "#69add5",
              "#68acd5",
              "#66abd4",
              "#65aad4",
              "#64a9d3",
              "#63a8d3",
              "#61a7d2",
              "#60a7d2",
              "#5fa6d1",
              "#5da5d1",
              "#5ca4d0",
              "#5ba3d0",
              "#5aa2cf",
              "#58a1cf",
              "#57a0ce",
              "#56a0ce",
              "#549fcd",
              "#539ecd",
              "#529dcc",
              "#519ccc",
              "#4f9bcb",
              "#4e9acb",
              "#4d99ca",
              "#4b98ca",
              "#4a98c9",
              "#4997c9",
              "#4896c8",
              "#4695c8",
              "#4594c7",
              "#4493c7",
              "#4292c6",
              "#4191c6",
              "#4090c5",
              "#3f8fc5",
              "#3e8ec4",
              "#3d8dc4",
              "#3c8cc3",
              "#3b8bc2",
              "#3a8ac2",
              "#3989c1",
              "#3888c1",
              "#3787c0",
              "#3686c0",
              "#3585bf",
              "#3484bf",
              "#3383be",
              "#3282be",
              "#3181bd",
              "#3080bd",
              "#2f7fbc",
              "#2e7ebc",
              "#2d7dbb",
              "#2c7cba",
              "#2b7bba",
              "#2a7ab9",
              "#2979b9",
              "#2777b8",
              "#2676b8",
              "#2575b7",
              "#2474b7",
              "#2373b6",
              "#2272b6",
              "#2171b5",
              "#2070b4",
              "#206fb4",
              "#1f6eb3",
              "#1e6db2",
              "#1d6cb1",
              "#1c6bb0",
              "#1c6ab0",
              "#1b69af",
              "#1a68ae",
              "#1967ad",
              "#1966ad",
              "#1865ac",
              "#1764ab",
              "#1663aa",
              "#1562a9",
              "#1561a9",
              "#1460a8",
              "#135fa7",
              "#125ea6",
              "#125da6",
              "#115ca5",
              "#105ba4",
              "#0f5aa3",
              "#0e59a2",
              "#0e58a2",
              "#0d57a1",
              "#0c56a0",
              "#0b559f",
              "#0a549e",
              "#0a539e",
              "#09529d",
              "#08519c",
              "#08509b",
              "#084f99",
              "#084e98",
              "#084d96",
              "#084c95",
              "#084b93",
              "#084a91",
              "#084990",
              "#08488e",
              "#08478d",
              "#08468b",
              "#08458a",
              "#084488",
              "#084387",
              "#084285",
              "#084184",
              "#084082",
              "#083e81",
              "#083d7f",
              "#083c7d",
              "#083b7c",
              "#083a7a",
              "#083979",
              "#083877",
              "#083776",
              "#083674",
              "#083573",
              "#083471",
              "#083370",
              "#08326e",
              "#08316d",
              "#08306b"
            ]), o.greens = o.fromStringList([
              "#f7fcf5",
              "#f6fcf4",
              "#f6fcf4",
              "#f5fbf3",
              "#f5fbf2",
              "#f4fbf2",
              "#f4fbf1",
              "#f3faf0",
              "#f2faf0",
              "#f2faef",
              "#f1faee",
              "#f1faee",
              "#f0f9ed",
              "#f0f9ec",
              "#eff9ec",
              "#eff9eb",
              "#eef8ea",
              "#edf8ea",
              "#edf8e9",
              "#ecf8e8",
              "#ecf8e8",
              "#ebf7e7",
              "#ebf7e7",
              "#eaf7e6",
              "#e9f7e5",
              "#e9f7e5",
              "#e8f6e4",
              "#e8f6e3",
              "#e7f6e3",
              "#e7f6e2",
              "#e6f5e1",
              "#e5f5e1",
              "#e5f5e0",
              "#e4f5df",
              "#e3f4de",
              "#e2f4dd",
              "#e1f3dc",
              "#e0f3db",
              "#dff3da",
              "#def2d9",
              "#ddf2d8",
              "#dcf2d7",
              "#dbf1d6",
              "#dbf1d5",
              "#daf0d4",
              "#d9f0d3",
              "#d8f0d2",
              "#d7efd1",
              "#d6efd0",
              "#d5efcf",
              "#d4eece",
              "#d3eecd",
              "#d2edcc",
              "#d1edcb",
              "#d0edca",
              "#cfecc9",
              "#ceecc8",
              "#cdecc7",
              "#ccebc6",
              "#cbebc5",
              "#cbeac4",
              "#caeac3",
              "#c9eac2",
              "#c8e9c1",
              "#c7e9c0",
              "#c6e8bf",
              "#c4e8bd",
              "#c3e7bc",
              "#c2e7bb",
              "#c1e6ba",
              "#c0e6b9",
              "#bee5b8",
              "#bde5b6",
              "#bce4b5",
              "#bbe4b4",
              "#bae3b3",
              "#b8e3b2",
              "#b7e2b1",
              "#b6e2af",
              "#b5e1ae",
              "#b4e1ad",
              "#b2e0ac",
              "#b1e0ab",
              "#b0dfaa",
              "#afdfa8",
              "#aedea7",
              "#acdea6",
              "#abdda5",
              "#aadda4",
              "#a9dca3",
              "#a8dca2",
              "#a7dba0",
              "#a5db9f",
              "#a4da9e",
              "#a3da9d",
              "#a2d99c",
              "#a0d99b",
              "#9fd899",
              "#9ed798",
              "#9cd797",
              "#9bd696",
              "#99d595",
              "#98d594",
              "#97d492",
              "#95d391",
              "#94d390",
              "#92d28f",
              "#91d28e",
              "#90d18d",
              "#8ed08b",
              "#8dd08a",
              "#8bcf89",
              "#8ace88",
              "#88ce87",
              "#87cd86",
              "#86cc85",
              "#84cc83",
              "#83cb82",
              "#81ca81",
              "#80ca80",
              "#7fc97f",
              "#7dc87e",
              "#7cc87c",
              "#7ac77b",
              "#79c67a",
              "#78c679",
              "#76c578",
              "#75c477",
              "#73c476",
              "#72c375",
              "#70c274",
              "#6ec173",
              "#6dc072",
              "#6bc072",
              "#6abf71",
              "#68be70",
              "#66bd6f",
              "#65bd6f",
              "#63bc6e",
              "#62bb6d",
              "#60ba6c",
              "#5eb96b",
              "#5db96b",
              "#5bb86a",
              "#5ab769",
              "#58b668",
              "#56b567",
              "#55b567",
              "#53b466",
              "#52b365",
              "#50b264",
              "#4eb264",
              "#4db163",
              "#4bb062",
              "#4aaf61",
              "#48ae60",
              "#46ae60",
              "#45ad5f",
              "#43ac5e",
              "#42ab5d",
              "#40aa5d",
              "#3fa95c",
              "#3fa85b",
              "#3ea75a",
              "#3da65a",
              "#3ca559",
              "#3ba458",
              "#3aa357",
              "#39a257",
              "#38a156",
              "#37a055",
              "#369f54",
              "#359e53",
              "#349d53",
              "#339c52",
              "#329b51",
              "#319a50",
              "#309950",
              "#2f984f",
              "#2f974e",
              "#2e964d",
              "#2d954d",
              "#2c944c",
              "#2b934b",
              "#2a924a",
              "#29914a",
              "#289049",
              "#278f48",
              "#268e47",
              "#258d47",
              "#248c46",
              "#238b45",
              "#228a44",
              "#218944",
              "#208843",
              "#1f8742",
              "#1e8741",
              "#1d8640",
              "#1c8540",
              "#1a843f",
              "#19833e",
              "#18823d",
              "#17813d",
              "#16803c",
              "#157f3b",
              "#147e3a",
              "#137d39",
              "#127c39",
              "#117b38",
              "#107a37",
              "#0e7936",
              "#0d7836",
              "#0c7735",
              "#0b7734",
              "#0a7633",
              "#097532",
              "#087432",
              "#077331",
              "#067230",
              "#05712f",
              "#03702e",
              "#026f2e",
              "#016e2d",
              "#006d2c",
              "#006c2c",
              "#006b2b",
              "#00692a",
              "#00682a",
              "#006729",
              "#006529",
              "#006428",
              "#006328",
              "#006227",
              "#006027",
              "#005f26",
              "#005e26",
              "#005c25",
              "#005b25",
              "#005a24",
              "#005924",
              "#005723",
              "#005622",
              "#005522",
              "#005321",
              "#005221",
              "#005120",
              "#005020",
              "#004e1f",
              "#004d1f",
              "#004c1e",
              "#004a1e",
              "#00491d",
              "#00481d",
              "#00471c",
              "#00451c",
              "#00441b"
            ]), o.oranges = o.fromStringList([
              "#fff5eb",
              "#fff5ea",
              "#fff4e9",
              "#fff4e8",
              "#fff3e7",
              "#fff3e6",
              "#fff2e6",
              "#fff2e5",
              "#fff1e4",
              "#fff1e3",
              "#fff0e2",
              "#fff0e1",
              "#ffefe0",
              "#ffefdf",
              "#ffeede",
              "#ffeedd",
              "#feeddc",
              "#feeddc",
              "#feeddb",
              "#feecda",
              "#feecd9",
              "#feebd8",
              "#feebd7",
              "#feead6",
              "#feead5",
              "#fee9d4",
              "#fee9d3",
              "#fee8d2",
              "#fee8d2",
              "#fee7d1",
              "#fee7d0",
              "#fee6cf",
              "#fee6ce",
              "#fee5cc",
              "#fee5cb",
              "#fee4ca",
              "#fee3c8",
              "#fee2c7",
              "#fee2c6",
              "#fee1c4",
              "#fee0c3",
              "#fee0c1",
              "#fedfc0",
              "#fedebf",
              "#fedebd",
              "#feddbc",
              "#fedcbb",
              "#fedcb9",
              "#fddbb8",
              "#fddab6",
              "#fdd9b5",
              "#fdd9b4",
              "#fdd8b2",
              "#fdd7b1",
              "#fdd7af",
              "#fdd6ae",
              "#fdd5ad",
              "#fdd5ab",
              "#fdd4aa",
              "#fdd3a9",
              "#fdd3a7",
              "#fdd2a6",
              "#fdd1a4",
              "#fdd1a3",
              "#fdd0a2",
              "#fdcfa0",
              "#fdce9e",
              "#fdcd9c",
              "#fdcb9b",
              "#fdca99",
              "#fdc997",
              "#fdc895",
              "#fdc794",
              "#fdc692",
              "#fdc590",
              "#fdc48f",
              "#fdc38d",
              "#fdc28b",
              "#fdc189",
              "#fdc088",
              "#fdbf86",
              "#fdbe84",
              "#fdbd83",
              "#fdbb81",
              "#fdba7f",
              "#fdb97d",
              "#fdb87c",
              "#fdb77a",
              "#fdb678",
              "#fdb576",
              "#fdb475",
              "#fdb373",
              "#fdb271",
              "#fdb170",
              "#fdb06e",
              "#fdaf6c",
              "#fdae6a",
              "#fdad69",
              "#fdac67",
              "#fdab66",
              "#fda965",
              "#fda863",
              "#fda762",
              "#fda660",
              "#fda55f",
              "#fda45d",
              "#fda35c",
              "#fda25a",
              "#fda159",
              "#fda057",
              "#fd9f56",
              "#fd9e54",
              "#fd9d53",
              "#fd9c51",
              "#fd9b50",
              "#fd9a4e",
              "#fd994d",
              "#fd984b",
              "#fd974a",
              "#fd9649",
              "#fd9547",
              "#fd9446",
              "#fd9344",
              "#fd9243",
              "#fd9141",
              "#fd9040",
              "#fd8f3e",
              "#fd8e3d",
              "#fd8c3b",
              "#fc8b3a",
              "#fc8a39",
              "#fc8937",
              "#fb8836",
              "#fb8735",
              "#fb8634",
              "#fa8532",
              "#fa8331",
              "#f98230",
              "#f9812e",
              "#f9802d",
              "#f87f2c",
              "#f87e2b",
              "#f87d29",
              "#f77b28",
              "#f77a27",
              "#f67925",
              "#f67824",
              "#f67723",
              "#f57622",
              "#f57520",
              "#f5741f",
              "#f4721e",
              "#f4711c",
              "#f3701b",
              "#f36f1a",
              "#f36e19",
              "#f26d17",
              "#f26c16",
              "#f26b15",
              "#f16913",
              "#f16813",
              "#f06712",
              "#ef6612",
              "#ee6511",
              "#ee6410",
              "#ed6310",
              "#ec620f",
              "#eb610f",
              "#eb600e",
              "#ea5f0e",
              "#e95e0d",
              "#e85d0c",
              "#e75c0c",
              "#e75b0b",
              "#e65a0b",
              "#e5590a",
              "#e4580a",
              "#e45709",
              "#e35608",
              "#e25508",
              "#e15407",
              "#e15307",
              "#e05206",
              "#df5106",
              "#de5005",
              "#de4e05",
              "#dd4d04",
              "#dc4c03",
              "#db4b03",
              "#db4a02",
              "#da4902",
              "#d94801",
              "#d84801",
              "#d64701",
              "#d54601",
              "#d34601",
              "#d14501",
              "#d04501",
              "#ce4401",
              "#cd4401",
              "#cb4302",
              "#c94202",
              "#c84202",
              "#c64102",
              "#c54102",
              "#c34002",
              "#c14002",
              "#c03f02",
              "#be3f02",
              "#bd3e02",
              "#bb3d02",
              "#b93d02",
              "#b83c02",
              "#b63c02",
              "#b53b02",
              "#b33b02",
              "#b13a03",
              "#b03903",
              "#ae3903",
              "#ad3803",
              "#ab3803",
              "#a93703",
              "#a83703",
              "#a63603",
              "#a53603",
              "#a43503",
              "#a23503",
              "#a13403",
              "#a03403",
              "#9f3303",
              "#9e3303",
              "#9c3203",
              "#9b3203",
              "#9a3103",
              "#993103",
              "#973003",
              "#963003",
              "#952f03",
              "#942f03",
              "#932f03",
              "#912e04",
              "#902e04",
              "#8f2d04",
              "#8e2d04",
              "#8c2c04",
              "#8b2c04",
              "#8a2b04",
              "#892b04",
              "#882a04",
              "#862a04",
              "#852904",
              "#842904",
              "#832804",
              "#812804",
              "#802704",
              "#7f2704"
            ]), o.reds = o.fromStringList([
              "#fff5f0",
              "#fff4ef",
              "#fff4ee",
              "#fff3ed",
              "#fff2ec",
              "#fff2eb",
              "#fff1ea",
              "#fff0e9",
              "#fff0e8",
              "#ffefe8",
              "#ffeee7",
              "#ffeee6",
              "#ffede5",
              "#ffece4",
              "#ffece3",
              "#ffebe2",
              "#feeae1",
              "#feeae0",
              "#fee9df",
              "#fee8de",
              "#fee8dd",
              "#fee7dc",
              "#fee7db",
              "#fee6da",
              "#fee5d9",
              "#fee5d8",
              "#fee4d8",
              "#fee3d7",
              "#fee3d6",
              "#fee2d5",
              "#fee1d4",
              "#fee1d3",
              "#fee0d2",
              "#fedfd0",
              "#fedecf",
              "#fedccd",
              "#fedbcc",
              "#fedaca",
              "#fed9c9",
              "#fed8c7",
              "#fdd7c6",
              "#fdd5c4",
              "#fdd4c2",
              "#fdd3c1",
              "#fdd2bf",
              "#fdd1be",
              "#fdd0bc",
              "#fdcebb",
              "#fdcdb9",
              "#fdccb8",
              "#fdcbb6",
              "#fdcab5",
              "#fdc9b3",
              "#fdc7b2",
              "#fdc6b0",
              "#fdc5ae",
              "#fcc4ad",
              "#fcc3ab",
              "#fcc2aa",
              "#fcc1a8",
              "#fcbfa7",
              "#fcbea5",
              "#fcbda4",
              "#fcbca2",
              "#fcbba1",
              "#fcb99f",
              "#fcb89e",
              "#fcb79c",
              "#fcb69b",
              "#fcb499",
              "#fcb398",
              "#fcb296",
              "#fcb095",
              "#fcaf93",
              "#fcae92",
              "#fcad90",
              "#fcab8f",
              "#fcaa8d",
              "#fca98c",
              "#fca78b",
              "#fca689",
              "#fca588",
              "#fca486",
              "#fca285",
              "#fca183",
              "#fca082",
              "#fc9e80",
              "#fc9d7f",
              "#fc9c7d",
              "#fc9b7c",
              "#fc997a",
              "#fc9879",
              "#fc9777",
              "#fc9576",
              "#fc9474",
              "#fc9373",
              "#fc9272",
              "#fc9070",
              "#fc8f6f",
              "#fc8e6e",
              "#fc8d6d",
              "#fc8b6b",
              "#fc8a6a",
              "#fc8969",
              "#fc8767",
              "#fc8666",
              "#fc8565",
              "#fc8464",
              "#fc8262",
              "#fc8161",
              "#fc8060",
              "#fc7f5f",
              "#fb7d5d",
              "#fb7c5c",
              "#fb7b5b",
              "#fb7a5a",
              "#fb7858",
              "#fb7757",
              "#fb7656",
              "#fb7555",
              "#fb7353",
              "#fb7252",
              "#fb7151",
              "#fb7050",
              "#fb6e4e",
              "#fb6d4d",
              "#fb6c4c",
              "#fb6b4b",
              "#fb694a",
              "#fa6849",
              "#fa6648",
              "#fa6547",
              "#f96346",
              "#f96245",
              "#f96044",
              "#f85f43",
              "#f85d42",
              "#f75c41",
              "#f75b40",
              "#f7593f",
              "#f6583e",
              "#f6563d",
              "#f6553c",
              "#f5533b",
              "#f5523a",
              "#f4503a",
              "#f44f39",
              "#f44d38",
              "#f34c37",
              "#f34a36",
              "#f34935",
              "#f24734",
              "#f24633",
              "#f14432",
              "#f14331",
              "#f14130",
              "#f0402f",
              "#f03f2e",
              "#f03d2d",
              "#ef3c2c",
              "#ee3a2c",
              "#ed392b",
              "#ec382b",
              "#eb372a",
              "#ea362a",
              "#e93529",
              "#e83429",
              "#e63328",
              "#e53228",
              "#e43027",
              "#e32f27",
              "#e22e27",
              "#e12d26",
              "#e02c26",
              "#de2b25",
              "#dd2a25",
              "#dc2924",
              "#db2824",
              "#da2723",
              "#d92523",
              "#d82422",
              "#d72322",
              "#d52221",
              "#d42121",
              "#d32020",
              "#d21f20",
              "#d11e1f",
              "#d01d1f",
              "#cf1c1f",
              "#ce1a1e",
              "#cc191e",
              "#cb181d",
              "#ca181d",
              "#c9181d",
              "#c8171c",
              "#c7171c",
              "#c5171c",
              "#c4161c",
              "#c3161b",
              "#c2161b",
              "#c1161b",
              "#bf151b",
              "#be151a",
              "#bd151a",
              "#bc141a",
              "#bb141a",
              "#b91419",
              "#b81419",
              "#b71319",
              "#b61319",
              "#b51318",
              "#b31218",
              "#b21218",
              "#b11218",
              "#b01217",
              "#af1117",
              "#ad1117",
              "#ac1117",
              "#ab1016",
              "#aa1016",
              "#a91016",
              "#a81016",
              "#a60f15",
              "#a50f15",
              "#a30f15",
              "#a10e15",
              "#9f0e14",
              "#9d0d14",
              "#9c0d14",
              "#9a0c14",
              "#980c13",
              "#960b13",
              "#940b13",
              "#920a13",
              "#900a12",
              "#8e0912",
              "#8c0912",
              "#8a0812",
              "#880811",
              "#860811",
              "#840711",
              "#820711",
              "#800610",
              "#7e0610",
              "#7c0510",
              "#7a0510",
              "#79040f",
              "#77040f",
              "#75030f",
              "#73030f",
              "#71020e",
              "#6f020e",
              "#6d010e",
              "#6b010e",
              "#69000d",
              "#67000d"
            ]), o.rdYlBu = o.fromStringList([
              "#a50026",
              "#a70226",
              "#a90426",
              "#ab0626",
              "#ad0826",
              "#af0926",
              "#b10b26",
              "#b30d26",
              "#b50f26",
              "#b71126",
              "#b91326",
              "#bb1526",
              "#bd1726",
              "#be1827",
              "#c01a27",
              "#c21c27",
              "#c41e27",
              "#c62027",
              "#c82227",
              "#ca2427",
              "#cc2627",
              "#ce2827",
              "#d02927",
              "#d22b27",
              "#d42d27",
              "#d62f27",
              "#d83128",
              "#d93429",
              "#da362a",
              "#db382b",
              "#dc3b2c",
              "#dd3d2d",
              "#de402e",
              "#e0422f",
              "#e14430",
              "#e24731",
              "#e34933",
              "#e44c34",
              "#e54e35",
              "#e65036",
              "#e75337",
              "#e95538",
              "#ea5739",
              "#eb5a3a",
              "#ec5c3b",
              "#ed5f3c",
              "#ee613e",
              "#ef633f",
              "#f16640",
              "#f26841",
              "#f36b42",
              "#f46d43",
              "#f47044",
              "#f57245",
              "#f57547",
              "#f57748",
              "#f67a49",
              "#f67c4a",
              "#f67f4b",
              "#f7814c",
              "#f7844e",
              "#f8864f",
              "#f88950",
              "#f88c51",
              "#f98e52",
              "#f99153",
              "#f99355",
              "#fa9656",
              "#fa9857",
              "#fa9b58",
              "#fb9d59",
              "#fba05b",
              "#fba35c",
              "#fca55d",
              "#fca85e",
              "#fcaa5f",
              "#fdad60",
              "#fdaf62",
              "#fdb164",
              "#fdb366",
              "#fdb567",
              "#fdb769",
              "#fdb96b",
              "#fdbb6d",
              "#fdbd6f",
              "#fdbf71",
              "#fdc173",
              "#fdc374",
              "#fdc576",
              "#fdc778",
              "#fec87a",
              "#feca7c",
              "#fecc7e",
              "#fece7f",
              "#fed081",
              "#fed283",
              "#fed485",
              "#fed687",
              "#fed889",
              "#feda8a",
              "#fedc8c",
              "#fede8e",
              "#fee090",
              "#fee192",
              "#fee294",
              "#fee496",
              "#fee597",
              "#fee699",
              "#fee79b",
              "#fee99d",
              "#feea9f",
              "#feeba1",
              "#feeca2",
              "#feeda4",
              "#feefa6",
              "#fff0a8",
              "#fff1aa",
              "#fff2ac",
              "#fff3ad",
              "#fff5af",
              "#fff6b1",
              "#fff7b3",
              "#fff8b5",
              "#fffab7",
              "#fffbb9",
              "#fffcba",
              "#fffdbc",
              "#fffebe",
              "#feffc0",
              "#fdfec2",
              "#fcfec5",
              "#fbfdc7",
              "#fafdc9",
              "#f8fccb",
              "#f7fcce",
              "#f6fbd0",
              "#f5fbd2",
              "#f3fbd4",
              "#f2fad6",
              "#f1fad9",
              "#f0f9db",
              "#eff9dd",
              "#edf8df",
              "#ecf8e2",
              "#ebf7e4",
              "#eaf7e6",
              "#e9f6e8",
              "#e7f6eb",
              "#e6f5ed",
              "#e5f5ef",
              "#e4f4f1",
              "#e2f4f4",
              "#e1f3f6",
              "#e0f3f8",
              "#def2f7",
              "#dcf1f7",
              "#daf0f6",
              "#d8eff6",
              "#d6eef5",
              "#d4edf4",
              "#d1ecf4",
              "#cfebf3",
              "#cdeaf3",
              "#cbe9f2",
              "#c9e8f2",
              "#c7e7f1",
              "#c5e6f0",
              "#c3e5f0",
              "#c1e4ef",
              "#bfe3ef",
              "#bde2ee",
              "#bbe1ed",
              "#b9e0ed",
              "#b6dfec",
              "#b4deec",
              "#b2ddeb",
              "#b0dcea",
              "#aedbea",
              "#acdae9",
              "#aad8e9",
              "#a8d6e8",
              "#a6d5e7",
              "#a3d3e6",
              "#a1d1e5",
              "#9fd0e4",
              "#9dcee3",
              "#9bcce2",
              "#99cae1",
              "#97c9e0",
              "#94c7df",
              "#92c5de",
              "#90c3dd",
              "#8ec2dc",
              "#8cc0db",
              "#8abeda",
              "#87bdd9",
              "#85bbd9",
              "#83b9d8",
              "#81b7d7",
              "#7fb6d6",
              "#7db4d5",
              "#7ab2d4",
              "#78b0d3",
              "#76afd2",
              "#74add1",
              "#72abd0",
              "#70a9cf",
              "#6ea6ce",
              "#6da4cc",
              "#6ba2cb",
              "#69a0ca",
              "#679ec9",
              "#659bc8",
              "#6399c7",
              "#6297c6",
              "#6095c4",
              "#5e93c3",
              "#5c90c2",
              "#5a8ec1",
              "#588cc0",
              "#578abf",
              "#5588be",
              "#5385bd",
              "#5183bb",
              "#4f81ba",
              "#4d7fb9",
              "#4b7db8",
              "#4a7ab7",
              "#4878b6",
              "#4676b5",
              "#4574b3",
              "#4471b2",
              "#436fb1",
              "#426cb0",
              "#416aaf",
              "#4167ad",
              "#4065ac",
              "#3f62ab",
              "#3e60aa",
              "#3e5ea8",
              "#3d5ba7",
              "#3c59a6",
              "#3b56a5",
              "#3a54a4",
              "#3a51a2",
              "#394fa1",
              "#384ca0",
              "#374a9f",
              "#36479e",
              "#36459c",
              "#35429b",
              "#34409a",
              "#333d99",
              "#333b97",
              "#323896",
              "#313695"
            ]);
          }
        ),
        /***/
        "./esm/layers/fits_image.js": (
          /*!**********************************!*\
            !*** ./esm/layers/fits_image.js ***!
            \**********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              FitsImage: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../web_file.js */
              "./esm/web_file.js"
            ), l = n(
              /*! ../coordinates.js */
              "./esm/coordinates.js"
            ), o = n(
              /*! ./wcs_image.js */
              "./esm/layers/wcs_image.js"
            );
            function c(u, y, g, Ee) {
              this.errored = !1, this.numAxis = 0, this.histogramMaxCount = 0, this.sourceBlob = null, this.header = {}, this.position = 0, this.bufferSize = 1, this._parseSuccessful$1 = !1, o.WcsImage.call(this), this.dataset = u, this.fitsProperties = u.get_fitsProperties(), this._callBack$1 = Ee, this.filename = y, g != null ? this._readFromBlob$1(g) : this.getFile(y);
            }
            c.naN = NaN;
            var _ = {
              getFile: function(u) {
                this._webFile$1 = new t.WebFile(u), this._webFile$1.responseType = "blob", this._webFile$1.onStateChange = s.ss.bind("fileStateChange", this), this._webFile$1.send();
              },
              fileStateChange: function() {
                if (this._webFile$1.get_state() === 2)
                  this.errored = !0, this._callBack$1 != null && this._callBack$1(this);
                else if (this._webFile$1.get_state() === 1) {
                  var u = this._webFile$1.getBlob();
                  this._readFromBlob$1(u);
                }
              },
              _readFromBlob$1: function(u) {
                var y = this;
                this.sourceBlob = u;
                var g = new FileReader();
                g.onloadend = function(Ee) {
                  y.readFromBin(new DataView(g.result)), y.errored = !y._parseSuccessful$1, y._callBack$1 != null && y._callBack$1(y);
                }, g.readAsArrayBuffer(u);
              },
              _readByteString$1: function(u, y) {
                for (var g = "", Ee = 0; Ee < y; Ee++)
                  g += String.fromCharCode(u.getUint8(this.position)), this.position++;
                return g;
              },
              _validateFitsSimple$1: function(u) {
                var y = this._readByteString$1(u, 8), g = s.ss.trimEnd(y);
                return this.position -= 8, g.toUpperCase() === "SIMPLE";
              },
              readFromBin: function(u) {
                if (!this._validateFitsSimple$1(u)) {
                  console.log("The requested file is not a valid FITS file.");
                  return;
                }
                for (var y = !1; !y; )
                  for (var g = 0; g < 36; g++) {
                    var Ee = this._readByteString$1(u, 80);
                    if (!y) {
                      var Ve = s.ss.trimEnd(Ee.substring(0, 8)), Me = Ee.substring(10).split("/");
                      if (Ve.toUpperCase() === "END") {
                        for (y = !0, g++, Ee = this._readByteString$1(u, 80); s.ss.whitespace(Ee); )
                          g++, Ee = this._readByteString$1(u, 80);
                        Ve = s.ss.trimEnd(Ee.substring(0, 8)), Ve.toUpperCase() === "XTENSION" ? y = !1 : this.position -= 80;
                      } else
                        this._addKeyword$1(Ve, Me);
                    }
                  }
                if (!y) {
                  console.log("Unable to parse requested FITS file.");
                  return;
                }
                this.numAxis = parseInt(this.header.NAXIS), s.ss.keyExists(this.header, "BLANK") && (this.fitsProperties.blankValue = parseFloat(this.header.BLANK), this.fitsProperties.containsBlanks = !0), s.ss.keyExists(this.header, "BZERO") && (this.fitsProperties.bZero = parseFloat(this.header.BZERO)), s.ss.keyExists(this.header, "BSCALE") && (this.fitsProperties.bScale = parseFloat(this.header.BSCALE)), this.axisSize = new Array(this.numAxis);
                for (var B = 0; B < this.numAxis; B++)
                  this.axisSize[B] = parseInt(this.header[s.ss.format("NAXIS{0}", B + 1)]), this.bufferSize *= this.axisSize[B];
                var Pe = parseInt(this.header.BITPIX);
                this.readDataUnit(u, Pe), this.numAxis > 1 && (this.sizeX = this.axisSize[0], this.sizeY = this.axisSize[1], this.histogram = this.computeHistogram(256), this.histogramMaxCount = this.histogram[256]), this.computeWcs(), this._parseSuccessful$1 = !0;
              },
              _addKeyword$1: function(u, y) {
                if (u !== "CONTINUE" && u !== "COMMENT" && u !== "HISTORY" && !s.ss.emptyString(u))
                  try {
                    s.ss.keyExists(this.header, u) ? this.header[u] = s.ss.trim(y[0]) : this.header[u.toUpperCase()] = s.ss.trim(y[0]);
                  } catch {
                  }
              },
              readDataUnit: function(u, y) {
                switch (this.dataUnit = new Float32Array(this.bufferSize), y) {
                  case -64:
                    this.readDataUnitFloat64(u);
                    break;
                  case -32:
                    this.readDataUnitFloat32(u);
                    break;
                  case 8:
                    this.readDataUnitUint8(u);
                    break;
                  case 16:
                    this.readDataUnitInt16(u);
                    break;
                  case 32:
                    this.readDataUnitInt32(u);
                    break;
                  case 64:
                    console.log("64 bit integer FITS are not yet supported");
                    break;
                }
              },
              readDataUnitFloat64: function(u) {
                for (var y = 0; this.position < u.byteLength; ) {
                  this.dataUnit[y] = u.getFloat64(this.position, !1);
                  var g = this.dataUnit[y] * this.fitsProperties.bScale + this.fitsProperties.bZero;
                  this.fitsProperties.minVal > g && (this.fitsProperties.minVal = g), this.fitsProperties.maxVal < g && (this.fitsProperties.maxVal = g), y++, this.position += 8;
                }
                this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
              },
              readDataUnitFloat32: function(u) {
                for (var y = 0; this.position < u.byteLength; ) {
                  this.dataUnit[y] = u.getFloat32(this.position, !1);
                  var g = this.dataUnit[y] * this.fitsProperties.bScale + this.fitsProperties.bZero;
                  this.fitsProperties.minVal > g && (this.fitsProperties.minVal = g), this.fitsProperties.maxVal < g && (this.fitsProperties.maxVal = g), y++, this.position += 4;
                }
                this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
              },
              readDataUnitUint8: function(u) {
                for (var y = 0; this.position < u.byteLength; )
                  this.dataUnit[y] = u.getUint8(this.position), this.fitsProperties.minVal > this.dataUnit[y] && (this.fitsProperties.minVal = this.dataUnit[y]), this.fitsProperties.maxVal < this.dataUnit[y] && (this.fitsProperties.maxVal = this.dataUnit[y]), y++, this.position += 1;
                this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
              },
              readDataUnitInt16: function(u) {
                for (var y = 0; this.position < u.byteLength; )
                  this.dataUnit[y] = u.getInt16(this.position, !1), this.fitsProperties.minVal > this.dataUnit[y] && (this.fitsProperties.minVal = this.dataUnit[y]), this.fitsProperties.maxVal < this.dataUnit[y] && (this.fitsProperties.maxVal = this.dataUnit[y]), y++, this.position += 2;
                this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
              },
              readDataUnitInt32: function(u) {
                for (var y = 0; this.position < u.byteLength; )
                  this.dataUnit[y] = u.getInt32(this.position, !1), this.fitsProperties.minVal > this.dataUnit[y] && (this.fitsProperties.minVal = this.dataUnit[y]), this.fitsProperties.maxVal < this.dataUnit[y] && (this.fitsProperties.maxVal = this.dataUnit[y]), y++, this.position += 4;
                this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
              },
              computeWcs: function() {
                s.ss.keyExists(this.header, "CROTA2") && (this.rotation = parseFloat(s.ss.trim(this.header.CROTA2)), this.hasRotation = !0), s.ss.keyExists(this.header, "CDELT1") && (this.scaleX = parseFloat(s.ss.trim(this.header.CDELT1)), s.ss.keyExists(this.header, "CDELT2") && (this.scaleY = parseFloat(s.ss.trim(this.header.CDELT2)), this.hasScale = !0)), s.ss.keyExists(this.header, "CRPIX1") && (this.referenceX = parseFloat(s.ss.trim(this.header.CRPIX1)) - 0.5, s.ss.keyExists(this.header, "CRPIX2") && (this.referenceY = parseFloat(s.ss.trim(this.header.CRPIX2)) - 0.5, this.hasPixel = !0));
                var u = !1, y = !1;
                if (s.ss.keyExists(this.header, "CTYPE1") && (this.header.CTYPE1.indexOf("GLON-") > -1 && (u = !0, y = !0), this.header.CTYPE2.indexOf("GLAT-") > -1 && (u = !0, y = !0), this.header.CTYPE1.indexOf("-TAN") > -1 && (y = !0), this.header.CTYPE1.indexOf("-SIN") > -1 && (y = !0)), !y)
                  throw new Error("Only TAN projected images are supported: ");
                if (this.hasSize = !0, s.ss.keyExists(this.header, "CRVAL1") && (this.centerX = parseFloat(s.ss.trim(this.header.CRVAL1)), s.ss.keyExists(this.header, "CRVAL2") && (this.centerY = parseFloat(s.ss.trim(this.header.CRVAL2)), this.hasLocation = !0)), u) {
                  var g = l.Coordinates.galactictoJ2000(this.centerX, this.centerY);
                  this.centerX = g[0], this.centerY = g[1];
                }
                s.ss.keyExists(this.header, "CD1_1") && s.ss.keyExists(this.header, "CD1_2") && s.ss.keyExists(this.header, "CD2_1") && s.ss.keyExists(this.header, "CD2_2") && (this.cd1_1 = parseFloat(s.ss.trim(this.header.CD1_1)), this.cd1_2 = parseFloat(s.ss.trim(this.header.CD1_2)), this.cd2_1 = parseFloat(s.ss.trim(this.header.CD2_1)), this.cd2_2 = parseFloat(s.ss.trim(this.header.CD2_2)), this.hasRotation || this.calculateRotationFromCD(), this.hasScale || this.calculateScaleFromCD(), this.hasScale = !0, this.hasRotation = !0), this.set_validWcs(this.hasScale && this.hasRotation && this.hasPixel && this.hasLocation);
              },
              // Modify the FitsProperties object to apply any settings stored in this
              // FITS image's header keywords. This mechanism gives us a way to set up
              // the rendering of a tiled FITS image through keywords set on its
              // level-0 tile file.
              //
              // I'm not aware of any standard, or even standard-ish, headers to
              // define these settings, so we'll roll our own here.
              applyDisplaySettings: function() {
                s.ss.keyExists(this.header, "DATAMIN") && (this.fitsProperties.lowerCut = parseFloat(s.ss.trim(this.header.DATAMIN)), this.fitsProperties.minVal = this.fitsProperties.lowerCut), s.ss.keyExists(this.header, "DATAMAX") && (this.fitsProperties.upperCut = parseFloat(s.ss.trim(this.header.DATAMAX)), this.fitsProperties.maxVal = this.fitsProperties.upperCut), s.ss.keyExists(this.header, "PXCUTMIN") && (this.fitsProperties.lowerCut = parseFloat(s.ss.trim(this.header.PXCUTMIN))), s.ss.keyExists(this.header, "PXCUTMAX") && (this.fitsProperties.upperCut = parseFloat(s.ss.trim(this.header.PXCUTMAX)));
              },
              computeHistogram: function(u) {
                for (var y = new Array(u + 1), g = 0; g < u + 1; g++)
                  y[g] = 0;
                this.populateHistogram(y);
                for (var Ee = 1, Ve = s.ss.enumerate(y); Ve.moveNext(); ) {
                  var Me = Ve.current;
                  Me > Ee && (Ee = Me);
                }
                return y[u] = Ee, y;
              },
              populateHistogram: function(u) {
                for (var y = u.length, g = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / y, Ee = 0; Ee < this.dataUnit.length; Ee++)
                  this.dataUnit[Ee] !== c.naN && u[Math.min(y - 1, s.ss.truncate((this.fitsProperties.bZero + this.fitsProperties.bScale * this.dataUnit[Ee] - this.fitsProperties.minVal) / g))]++;
              },
              drawHistogram: function(u) {
                u.clearRect(0, 0, 255, 150), u.beginPath(), u.strokeStyle = "rgba(255,255,255,255)";
                for (var y = Math.log(this.histogramMaxCount), g = 0; g < this.histogram.length; g++) {
                  var Ee = Math.log(this.histogram[g]) / y;
                  Ee < 0 && (Ee = 0), u.moveTo(g, 150), u.lineTo(g, 150 - Ee * 150), u.stroke();
                }
              }
            };
            (0, a.registerType)("FitsImage", [c, _, o.WcsImage]);
          }
        ),
        /***/
        "./esm/layers/fits_image_js.js": (
          /*!*************************************!*\
            !*** ./esm/layers/fits_image_js.js ***!
            \*************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              DataTypes: () => (
                /* binding */
                _
              ),
              /* harmony export */
              FitsImageJs: () => (
                /* binding */
                ze
              ),
              /* harmony export */
              HistogramEqualization: () => (
                /* binding */
                Le
              ),
              /* harmony export */
              ScaleLinear: () => (
                /* binding */
                g
              ),
              /* harmony export */
              ScaleLog: () => (
                /* binding */
                Ve
              ),
              /* harmony export */
              ScaleMap: () => (
                /* binding */
                u
              ),
              /* harmony export */
              ScalePow: () => (
                /* binding */
                B
              ),
              /* harmony export */
              ScaleSqrt: () => (
                /* binding */
                k
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../utilities/binary_reader.js */
              "./esm/utilities/binary_reader.js"
            ), l = n(
              /*! ../utilities/bitmap.js */
              "./esm/utilities/bitmap.js"
            ), o = n(
              /*! ./color_map_container.js */
              "./esm/layers/color_map_container.js"
            ), c = n(
              /*! ./fits_image.js */
              "./esm/layers/fits_image.js"
            ), _ = {
              byteT: 0,
              int16T: 1,
              int32T: 2,
              floatT: 3,
              doubleT: 4,
              none: 5
            };
            (0, a.registerType)("DataTypes", _), (0, a.registerEnum)("DataTypes", _);
            function u() {
            }
            var y = {};
            (0, a.registerType)("ScaleMap", [u, y, null]);
            function g(Te, D) {
              this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._logFactor$1 = 0, u.call(this), this._min$1 = Te, this._max$1 = D, this._factor$1 = D - Te;
            }
            var Ee = {
              map: function(Te) {
                return Math.min(255, Math.max(0, s.ss.truncate((Te - this._min$1) / this._factor$1 * 255)));
              }
            };
            (0, a.registerType)("ScaleLinear", [g, Ee, u]);
            function Ve(Te, D) {
              this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._logFactor$1 = 0, u.call(this), this._min$1 = Te, this._max$1 = D, this._factor$1 = D - Te, this._logFactor$1 = 255 / Math.log(255);
            }
            var Me = {
              map: function(Te) {
                return Math.min(255, Math.max(0, s.ss.truncate(Math.log((Te - this._min$1) / this._factor$1 * 255) * this._logFactor$1)));
              }
            };
            (0, a.registerType)("ScaleLog", [Ve, Me, u]);
            function B(Te, D) {
              this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._powFactor$1 = 0, u.call(this), this._min$1 = Te, this._max$1 = D, this._factor$1 = D - Te, this._powFactor$1 = 255 / Math.pow(255, 2);
            }
            var Pe = {
              map: function(Te) {
                return Math.min(255, Math.max(0, s.ss.truncate(Math.pow((Te - this._min$1) / this._factor$1 * 255, 2) * this._powFactor$1)));
              }
            };
            (0, a.registerType)("ScalePow", [B, Pe, u]);
            function k(Te, D) {
              this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._sqrtFactor$1 = 0, u.call(this), this._min$1 = Te, this._max$1 = D, this._factor$1 = D - Te, this._sqrtFactor$1 = 255 / Math.sqrt(255);
            }
            var b = {
              map: function(Te) {
                return Math.min(255, Math.max(0, s.ss.truncate(Math.sqrt((Te - this._min$1) / this._factor$1 * 255) * this._sqrtFactor$1)));
              }
            };
            (0, a.registerType)("ScaleSqrt", [k, b, u]);
            function Le(Te, D, ke) {
              this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._maxHistogramValue$1 = 1, u.call(this), this._min$1 = D, this._max$1 = ke, this._factor$1 = ke - D, this._histogram$1 = Te.computeHistogram(1e4), this._maxHistogramValue$1 = this._histogram$1[1e4], this._lookup$1 = new Array(1e4);
              for (var Fe = s.ss.truncate(Te.get_sizeX() * Te.get_sizeY()), He = 0, We = 0; We < 1e4; We++)
                He += this._histogram$1[We], this._lookup$1[We] = Math.min(255, He * 255 / Fe) + 0.5;
            }
            var xe = {
              map: function(Te) {
                return this._lookup$1[Math.min(9999, Math.max(0, s.ss.truncate((Te - this._min$1) / this._factor$1 * 9999)))];
              }
            };
            (0, a.registerType)("HistogramEqualization", [Le, xe, u]);
            function ze(Te, D, ke, Fe) {
              this.dataType = _.none, this._color$2 = !1, this.isTiledFits = !1, c.FitsImage.call(this, Te, D, ke, Fe);
            }
            ze.createTiledFits = function(Te, D, ke) {
              var Fe = new ze(Te, D, null, ke);
              return Fe.isTiledFits = !0, Fe;
            };
            var Se = {
              readFromBin: function(Te) {
                c.FitsImage.prototype.readFromBin.call(this, Te), this.numAxis === 3 && this.axisSize[2] === 3 && (this._color$2 = !0);
              },
              readDataUnit: function(Te, D) {
                var ke = new t.BinaryReader(new Uint8Array(Te.buffer));
                switch (ke.position = this.position, D) {
                  case -64:
                    this.dataType = _.doubleT, this._readDataUnitFloat64$2(ke);
                    break;
                  case -32:
                    this.dataType = _.floatT, this._readDataUnitFloat32$2(ke);
                    break;
                  case 8:
                    this.dataType = _.byteT, this._readDataUnitUint8$2(ke);
                    break;
                  case 16:
                    this.dataType = _.int16T, this._readDataUnitInt16$2(ke);
                    break;
                  case 32:
                    this.dataType = _.int32T, this._readDataUnitInt32$2(ke);
                    break;
                }
                this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
              },
              _readDataUnitUint8$2: function(Te) {
                var D = new Array(this.bufferSize);
                this._dataBuffer$2 = D;
                for (var ke = 0; ke < this.bufferSize; ke++)
                  D[ke] = Te.readByte(), this.fitsProperties.minVal > D[ke] && (this.fitsProperties.minVal = D[ke]), this.fitsProperties.maxVal < D[ke] && (this.fitsProperties.maxVal = D[ke]);
              },
              _readDataUnitInt16$2: function(Te) {
                var D = new Array(this.bufferSize);
                this._dataBuffer$2 = D;
                for (var ke = 0; ke < this.bufferSize; ke++)
                  D[ke] = Te.readSByte() * 256 + Te.readByte(), this.fitsProperties.minVal > D[ke] && (this.fitsProperties.minVal = D[ke]), this.fitsProperties.maxVal < D[ke] && (this.fitsProperties.maxVal = D[ke]);
              },
              _readDataUnitInt32$2: function(Te) {
                var D = new Array(this.bufferSize);
                this._dataBuffer$2 = D;
                for (var ke = 0; ke < this.bufferSize; ke++)
                  D[ke] = (Te.readSByte() << 24) + (Te.readSByte() << 16) + (Te.readSByte() << 8) + Te.readByte(), this.fitsProperties.minVal > D[ke] && (this.fitsProperties.minVal = D[ke]), this.fitsProperties.maxVal < D[ke] && (this.fitsProperties.maxVal = D[ke]);
              },
              _readDataUnitFloat32$2: function(Te) {
                var D = new Array(this.bufferSize);
                this._dataBuffer$2 = D;
                for (var ke = new Uint8Array(4), Fe = 0; Fe < this.bufferSize; Fe++)
                  ke[3] = Te.readByte(), ke[2] = Te.readByte(), ke[1] = Te.readByte(), ke[0] = Te.readByte(), D[Fe] = new Float32Array(ke.buffer, 0, 1)[0], this.fitsProperties.minVal > D[Fe] && (this.fitsProperties.minVal = D[Fe]), this.fitsProperties.maxVal < D[Fe] && (this.fitsProperties.maxVal = D[Fe]);
              },
              _readDataUnitFloat64$2: function(Te) {
                var D = new Array(this.bufferSize), ke = new Uint8Array(8);
                this._dataBuffer$2 = D;
                for (var Fe = 0; Fe < this.bufferSize; Fe++)
                  ke[7] = Te.readByte(), ke[6] = Te.readByte(), ke[5] = Te.readByte(), ke[4] = Te.readByte(), ke[3] = Te.readByte(), ke[2] = Te.readByte(), ke[1] = Te.readByte(), ke[0] = Te.readByte(), D[Fe] = new Float64Array(ke.buffer, 0, 1)[0], this.fitsProperties.minVal > D[Fe] && (this.fitsProperties.minVal = D[Fe]), this.fitsProperties.maxVal < D[Fe] && (this.fitsProperties.maxVal = D[Fe]);
              },
              getBitmap: function() {
                return !this.fitsProperties.upperCut && !this.fitsProperties.lowerCut && (this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal), this.getScaledBitmap(this.fitsProperties.lowerCut, this.fitsProperties.upperCut, this.fitsProperties.scaleType, 0, this.fitsProperties.colorMapName);
              },
              getScaledBitmap: function(Te, D, ke, Fe, He) {
                var We;
                this.fitsProperties.scaleType = ke, this.fitsProperties.lowerCut = Te, this.fitsProperties.upperCut = D, this.fitsProperties.colorMapName = He;
                var Ke = o.ColorMapContainer.fromNamedColormap(He);
                switch (ke) {
                  case 0:
                  default:
                    We = new g(Te, D);
                    break;
                  case 1:
                    We = new Ve(Te, D);
                    break;
                  case 2:
                    We = new B(Te, D);
                    break;
                  case 3:
                    We = new k(Te, D);
                    break;
                  case 4:
                    We = new Le(this, Te, D);
                    break;
                }
                try {
                  switch (this.dataType) {
                    case _.byteT:
                      return this._getBitmapByte$2(Te, D, We, 0, Ke);
                    case _.int16T:
                      return this.getBitmapShort(Te, D, We, 0, Ke);
                    case _.int32T:
                      return this._getBitmapInt$2(Te, D, We, 0, Ke);
                    case _.floatT:
                      return this._getBitmapFloat$2(Te, D, We, 0, Ke);
                    case _.doubleT:
                      return this._getBitmapDouble$2(Te, D, We, 0, Ke);
                    case _.none:
                    default:
                      return l.Bitmap.create(100, 100);
                  }
                } catch {
                  return l.Bitmap.create(10, 10);
                }
              },
              _setPixelWithColorMap$2: function(Te, D, ke, Fe, He) {
                if (He == null) {
                  Te.setPixel(D, ke, Fe, Fe, Fe, this.fitsProperties.transparentBlack && !Fe ? 0 : 255);
                  return;
                }
                var We = Fe / 255;
                if (Number.isNaN(We)) {
                  Te.setPixel(D, ke, 0, 0, 0, 0);
                  return;
                }
                var Ke = He.findClosestColor(We);
                Te.setPixel(D, ke, s.ss.truncate(Ke.r), s.ss.truncate(Ke.g), s.ss.truncate(Ke.b), this.fitsProperties.transparentBlack && !Fe ? 0 : 255);
              },
              _getBitmapByte$2: function(Te, D, ke, Fe, He) {
                for (var We = this._dataBuffer$2, Ke = this.axisSize[0], $ = this.axisSize[0] * this.axisSize[1] * Fe, De = l.Bitmap.create(this.axisSize[0], this.axisSize[1]), Re = 0; Re < this.axisSize[1]; Re++)
                  for (var Ie = this.axisSize[1] - 1 - Re, O = 0; O < this.axisSize[0]; O++)
                    if (this._color$2) {
                      var Ue = We[O + Ie * Ke], $e = We[O + Ie * Ke + $], Ze = We[O + Ie * Ke + $ * 2];
                      if (this.fitsProperties.containsBlanks && Ue === this.fitsProperties.blankValue)
                        De.setPixel(O, Re, 0, 0, 0, 0);
                      else {
                        var Qe = ke.map(Ue), Ae = ke.map($e), Ne = ke.map(Ze);
                        De.setPixel(O, Re, Qe, Ae, Ne, 255);
                      }
                    } else {
                      var Be = We[O + Ie * Ke + $];
                      if (this.fitsProperties.containsBlanks && Be === this.fitsProperties.blankValue)
                        De.setPixel(O, Re, 0, 0, 0, 0);
                      else {
                        var Ge = ke.map(Be);
                        this._setPixelWithColorMap$2(De, O, Re, Ge, He);
                      }
                    }
                return De;
              },
              _getBitmapDouble$2: function(Te, D, ke, Fe, He) {
                for (var We = this._dataBuffer$2, Ke = this.axisSize[0], $ = this.axisSize[0] * this.axisSize[1] * Fe, De = l.Bitmap.create(this.axisSize[0], this.axisSize[1]), Re = 0; Re < this.axisSize[1]; Re++)
                  for (var Ie = this.axisSize[1] - 1 - Re, O = 0; O < this.axisSize[0]; O++)
                    if (this._color$2) {
                      var Ue = We[O + Ie * Ke], $e = We[O + Ie * Ke + $], Ze = We[O + Ie * Ke + $ * 2];
                      if (this.fitsProperties.containsBlanks && Ue === this.fitsProperties.blankValue)
                        De.setPixel(O, Re, 0, 0, 0, 0);
                      else {
                        var Qe = ke.map(Ue), Ae = ke.map($e), Ne = ke.map(Ze);
                        De.setPixel(O, Re, Qe, Ae, Ne, 255);
                      }
                    } else {
                      var Be = We[O + Ie * Ke + $];
                      if (this.fitsProperties.containsBlanks && Be === this.fitsProperties.blankValue)
                        De.setPixel(O, Re, 0, 0, 0, 0);
                      else {
                        var Ge = ke.map(Be);
                        this._setPixelWithColorMap$2(De, O, Re, Ge, He);
                      }
                    }
                return De;
              },
              _getBitmapFloat$2: function(Te, D, ke, Fe, He) {
                for (var We = this._dataBuffer$2, Ke = this.axisSize[0], $ = this.axisSize[0] * this.axisSize[1] * Fe, De = l.Bitmap.create(this.axisSize[0], this.axisSize[1]), Re = 0; Re < this.axisSize[1]; Re++)
                  for (var Ie = this.axisSize[1] - 1 - Re, O = 0; O < this.axisSize[0]; O++)
                    if (this._color$2) {
                      var Ue = We[O + Ie * Ke], $e = We[O + Ie * Ke + $], Ze = We[O + Ie * Ke + $ * 2];
                      if (this.fitsProperties.containsBlanks && Ue === this.fitsProperties.blankValue)
                        De.setPixel(O, Re, 0, 0, 0, 0);
                      else {
                        var Qe = ke.map(Ue), Ae = ke.map($e), Ne = ke.map(Ze);
                        De.setPixel(O, Re, Qe, Ae, Ne, 255);
                      }
                    } else {
                      var Be = We[O + Ie * Ke + $];
                      if (this.fitsProperties.containsBlanks && Be === this.fitsProperties.blankValue)
                        De.setPixel(O, Re, 0, 0, 0, 0);
                      else {
                        var Ge = ke.map(Be);
                        this._setPixelWithColorMap$2(De, O, Re, Ge, He);
                      }
                    }
                return De;
              },
              _getBitmapInt$2: function(Te, D, ke, Fe, He) {
                for (var We = this._dataBuffer$2, Ke = this.axisSize[0], $ = this.axisSize[0] * this.axisSize[1] * Fe, De = l.Bitmap.create(this.axisSize[0], this.axisSize[1]), Re = 0; Re < this.axisSize[1]; Re++)
                  for (var Ie = this.axisSize[1] - 1 - Re, O = 0; O < this.axisSize[0]; O++)
                    if (this._color$2) {
                      var Ue = We[O + Ie * Ke], $e = We[O + Ie * Ke + $], Ze = We[O + Ie * Ke + $ * 2];
                      if (this.fitsProperties.containsBlanks && Ue === this.fitsProperties.blankValue)
                        De.setPixel(O, Re, 0, 0, 0, 0);
                      else {
                        var Qe = ke.map(Ue), Ae = ke.map($e), Ne = ke.map(Ze);
                        De.setPixel(O, Re, Qe, Ae, Ne, 255);
                      }
                    } else {
                      var Be = We[O + Ie * Ke + $];
                      if (this.fitsProperties.containsBlanks && Be === this.fitsProperties.blankValue)
                        De.setPixel(O, Re, 0, 0, 0, 0);
                      else {
                        var Ge = ke.map(Be);
                        this._setPixelWithColorMap$2(De, O, Re, Ge, He);
                      }
                    }
                return De;
              },
              getBitmapShort: function(Te, D, ke, Fe, He) {
                for (var We = this._dataBuffer$2, Ke = this.axisSize[0], $ = this.axisSize[0] * this.axisSize[1] * Fe, De = l.Bitmap.create(this.axisSize[0], this.axisSize[1]), Re = 0; Re < this.axisSize[1]; Re++)
                  for (var Ie = this.axisSize[1] - 1 - Re, O = 0; O < this.axisSize[0]; O++)
                    if (this._color$2) {
                      var Ue = We[O + Ie * Ke], $e = We[O + Ie * Ke + $], Ze = We[O + Ie * Ke + $ * 2];
                      if (this.fitsProperties.containsBlanks && Ue === this.fitsProperties.blankValue)
                        De.setPixel(O, Re, 0, 0, 0, 0);
                      else {
                        var Qe = ke.map(Ue), Ae = ke.map($e), Ne = ke.map(Ze);
                        De.setPixel(O, Re, Qe, Ae, Ne, 255);
                      }
                    } else {
                      var Be = We[O + Ie * Ke + $];
                      if (this.fitsProperties.containsBlanks && Be === this.fitsProperties.blankValue)
                        De.setPixel(O, Re, 0, 0, 0, 0);
                      else {
                        var Ge = ke.map(Be);
                        this._setPixelWithColorMap$2(De, O, Re, Ge, He);
                      }
                    }
                return De;
              },
              computeWcs: function() {
                this.isTiledFits || c.FitsImage.prototype.computeWcs.call(this);
              },
              populateHistogram: function(Te) {
                switch (this.dataType) {
                  case _.byteT:
                    this._populateHistogramByte$2(Te);
                    break;
                  case _.int16T:
                    this._populateHistogramInt16$2(Te);
                    break;
                  case _.int32T:
                    this._populateHistogramInt32$2(Te);
                    break;
                  case _.floatT:
                    this._populateHistogramFloat$2(Te);
                    break;
                  case _.doubleT:
                    this._populateHistogramDouble$2(Te);
                    break;
                }
              },
              _populateHistogramDouble$2: function(Te) {
                for (var D = Te.length, ke = this._dataBuffer$2, Fe = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / D, He = s.ss.enumerate(ke); He.moveNext(); ) {
                  var We = He.current;
                  Number.isNaN(We) || Te[Math.min(D - 1, s.ss.truncate((We - this.fitsProperties.minVal) / Fe))]++;
                }
              },
              _populateHistogramFloat$2: function(Te) {
                for (var D = Te.length, ke = this._dataBuffer$2, Fe = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / D, He = s.ss.enumerate(ke); He.moveNext(); ) {
                  var We = He.current;
                  We !== c.FitsImage.naN && Te[Math.min(D - 1, s.ss.truncate((We - this.fitsProperties.minVal) / Fe))]++;
                }
              },
              _populateHistogramInt32$2: function(Te) {
                for (var D = Te.length, ke = this._dataBuffer$2, Fe = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / D, He = s.ss.enumerate(ke); He.moveNext(); ) {
                  var We = He.current;
                  Te[Math.min(D - 1, s.ss.truncate((We - this.fitsProperties.minVal) / Fe))]++;
                }
              },
              _populateHistogramInt16$2: function(Te) {
                for (var D = Te.length, ke = this._dataBuffer$2, Fe = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / D, He = s.ss.enumerate(ke); He.moveNext(); ) {
                  var We = He.current;
                  Te[Math.min(D - 1, s.ss.truncate((We - this.fitsProperties.minVal) / Fe))]++;
                }
              },
              _populateHistogramByte$2: function(Te) {
                for (var D = Te.length, ke = this._dataBuffer$2, Fe = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / D, He = s.ss.enumerate(ke); He.moveNext(); ) {
                  var We = He.current;
                  Te[Math.min(D - 1, s.ss.truncate((We - this.fitsProperties.minVal) / Fe))]++;
                }
              }
            };
            (0, a.registerType)("FitsImageJs", [ze, Se, c.FitsImage]);
          }
        ),
        /***/
        "./esm/layers/fits_image_tile.js": (
          /*!***************************************!*\
            !*** ./esm/layers/fits_image_tile.js ***!
            \***************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              FitsImageTile: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./fits_image.js */
              "./esm/layers/fits_image.js"
            );
            function t(o, c, _) {
              a.FitsImage.call(this, o, c, null, _);
            }
            var l = {
              readDataUnitFloat64: function(o) {
                for (var c = 0; this.position < o.byteLength; )
                  this.dataUnit[c] = o.getFloat64(this.position, !1), c++, this.position += 8;
              },
              readDataUnitFloat32: function(o) {
                for (var c = 0; this.position < o.byteLength; )
                  this.dataUnit[c] = o.getFloat32(this.position, !1), c++, this.position += 4;
              },
              readDataUnitUint8: function(o) {
                for (var c = 0; this.position < o.byteLength; )
                  this.dataUnit[c] = o.getUint8(this.position), c++, this.position += 1;
              },
              readDataUnitInt16: function(o) {
                for (var c = 0; this.position < o.byteLength; )
                  this.dataUnit[c] = o.getInt16(this.position, !1), c++, this.position += 2;
              },
              readDataUnitInt32: function(o) {
                for (var c = 0; this.position < o.byteLength; )
                  this.dataUnit[c] = o.getInt32(this.position, !1), c++, this.position += 4;
              },
              computeWcs: function() {
              }
            };
            (0, s.registerType)("FitsImageTile", [t, l, a.FitsImage]);
          }
        ),
        /***/
        "./esm/layers/from_xml.js": (
          /*!********************************!*\
            !*** ./esm/layers/from_xml.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              layerFromXml: () => (
                /* binding */
                g
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./layer.js */
              "./esm/layers/layer.js"
            ), t = n(
              /*! ./great_circle_route_layer.js */
              "./esm/layers/great_circle_route_layer.js"
            ), l = n(
              /*! ./grid_layer.js */
              "./esm/layers/grid_layer.js"
            ), o = n(
              /*! ./imageset_layer.js */
              "./esm/layers/imageset_layer.js"
            ), c = n(
              /*! ./object3d.js */
              "./esm/layers/object3d.js"
            ), _ = n(
              /*! ./orbit_layer.js */
              "./esm/layers/orbit_layer.js"
            ), u = n(
              /*! ./spreadsheet_layer.js */
              "./esm/layers/spreadsheet_layer.js"
            ), y = n(
              /*! ./vo_table_layer.js */
              "./esm/layers/vo_table_layer.js"
            );
            function g(Ee, Ve) {
              var Me = Ee.attributes.getNamedItem("Type").nodeValue, B = s.ss.replaceString(Me, "TerraViewer.", "");
              if (B == null)
                return null;
              var Pe = null;
              switch (B) {
                case "SpreadSheetLayer":
                  Pe = new u.SpreadSheetLayer();
                  break;
                case "GreatCirlceRouteLayer":
                  Pe = new t.GreatCirlceRouteLayer();
                  break;
                case "GridLayer":
                  Pe = new l.GridLayer();
                  break;
                case "ImageSetLayer":
                  Pe = new o.ImageSetLayer();
                  break;
                case "Object3dLayer":
                  Pe = new c.Object3dLayer();
                  break;
                case "OrbitLayer":
                  Pe = new _.OrbitLayer();
                  break;
                case "VoTableLayer":
                  Pe = new y.VoTableLayer();
                  break;
                default:
                  return null;
              }
              return Pe.initFromXml(Ee), Pe;
            }
            a.Layer.fromXml = g;
          }
        ),
        /***/
        "./esm/layers/great_circle_route_layer.js": (
          /*!************************************************!*\
            !*** ./esm/layers/great_circle_route_layer.js ***!
            \************************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              GreatCirlceRouteLayer: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), t = n(
              /*! ../graphics/primitives3d.js */
              "./esm/graphics/primitives3d.js"
            ), l = n(
              /*! ../coordinates.js */
              "./esm/coordinates.js"
            ), o = n(
              /*! ./layer.js */
              "./esm/layers/layer.js"
            );
            function c() {
              this._triangleList$1 = null, this._latStart$1 = 0, this._lngStart$1 = 0, this._latEnd$1 = 0, this._lngEnd$1 = 0, this._width$1 = 4, this._percentComplete$1 = 100, o.Layer.call(this);
            }
            var _ = {
              // Even if we fix the typo in this class's name in an API break, we need to
              // maintain it here to maintain compatibility with existing data files and
              // older WWT clients.
              getTypeName: function() {
                return "TerraViewer.GreatCirlceRouteLayer";
              },
              cleanUp: function() {
                this._triangleList$1 != null && this._triangleList$1.clear(), this._triangleList$1 = null, o.Layer.prototype.cleanUp.call(this);
              },
              draw: function(u, y, g) {
                return this._triangleList$1 == null && this._initializeRoute$1(u), this._triangleList$1.jNow = this._percentComplete$1 / 100, this._triangleList$1.draw(u, y * this.get_opacity(), 2), !0;
              },
              _initializeRoute$1: function(u) {
                this._triangleList$1 = new t.TriangleList(), this._triangleList$1.decay = 1e3, this._triangleList$1.sky = this.get_astronomical(), this._triangleList$1.timeSeries = !0, this._triangleList$1.depthBuffered = !1, this._triangleList$1.autoTime = !1;
                var y = 500, g = l.Coordinates.geoTo3dDouble(this._latStart$1, this._lngStart$1), Ee = l.Coordinates.geoTo3dDouble(this._latEnd$1, this._lngEnd$1), Ve = a.Vector3d.subtractVectors(Ee, g);
                Ve.normalize();
                var Me = g;
                Me.normalize();
                var B = a.Vector3d.cross(Me, Ve), Pe = a.Vector3d.cross(Ve, Me);
                B.normalize(), Pe.normalize(), B.multiply(1e-3 * this._width$1), Pe.multiply(1e-3 * this._width$1);
                for (var k = new a.Vector3d(), b = new a.Vector3d(), Le = !0, xe = 0; xe <= y; xe++) {
                  var ze = a.Vector3d.lerp(g, Ee, xe / y);
                  ze.normalize();
                  var Se = ze, Te = ze;
                  Se.add(B), Te.add(Pe), Le ? Le = !1 : this._triangleList$1.addQuad(b, k, Te, Se, this.get_color(), new t.Dates(xe / y, 2)), k = Se, b = Te;
                }
              },
              getParams: function() {
                return [this._percentComplete$1];
              },
              getParamNames: function() {
                return ["Percentage"];
              },
              setParams: function(u) {
                u.length > 0 && (this._percentComplete$1 = u[0]);
              },
              get_latStart: function() {
                return this._latStart$1;
              },
              set_latStart: function(u) {
                return this._latStart$1 !== u && (this._latStart$1 = u, this.version++), u;
              },
              get_lngStart: function() {
                return this._lngStart$1;
              },
              set_lngStart: function(u) {
                return this._lngStart$1 !== u && (this._lngStart$1 = u, this.version++), u;
              },
              get_latEnd: function() {
                return this._latEnd$1;
              },
              set_latEnd: function(u) {
                return this._latEnd$1 !== u && (this._latEnd$1 = u, this.version++), u;
              },
              get_lngEnd: function() {
                return this._lngEnd$1;
              },
              set_lngEnd: function(u) {
                return this._lngEnd$1 !== u && (this._lngEnd$1 = u, this.version++), u;
              },
              get_width: function() {
                return this._width$1;
              },
              set_width: function(u) {
                return this._width$1 !== u && (this._width$1 = u, this.version++), u;
              },
              get_percentComplete: function() {
                return this._percentComplete$1;
              },
              set_percentComplete: function(u) {
                return this._percentComplete$1 !== u && (this._percentComplete$1 = u, this.version++), u;
              },
              writeLayerProperties: function(u) {
                u._writeAttributeString("LatStart", this.get_latStart().toString()), u._writeAttributeString("LngStart", this.get_lngStart().toString()), u._writeAttributeString("LatEnd", this.get_latEnd().toString()), u._writeAttributeString("LngEnd", this.get_lngEnd().toString()), u._writeAttributeString("Width", this.get_width().toString()), u._writeAttributeString("PercentComplete", this.get_percentComplete().toString());
              },
              initializeFromXml: function(u) {
                this._latStart$1 = parseFloat(u.attributes.getNamedItem("LatStart").nodeValue), this._lngStart$1 = parseFloat(u.attributes.getNamedItem("LngStart").nodeValue), this._latEnd$1 = parseFloat(u.attributes.getNamedItem("LatEnd").nodeValue), this._lngEnd$1 = parseFloat(u.attributes.getNamedItem("LngEnd").nodeValue), this._width$1 = parseFloat(u.attributes.getNamedItem("Width").nodeValue), this._percentComplete$1 = parseFloat(u.attributes.getNamedItem("PercentComplete").nodeValue);
              }
            };
            (0, s.registerType)("GreatCirlceRouteLayer", [c, _, o.Layer]);
          }
        ),
        /***/
        "./esm/layers/grid_layer.js": (
          /*!**********************************!*\
            !*** ./esm/layers/grid_layer.js ***!
            \**********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              GridLayer: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../grids.js */
              "./esm/grids.js"
            ), t = n(
              /*! ./layer.js */
              "./esm/layers/layer.js"
            );
            function l() {
              t.Layer.call(this);
            }
            var o = {
              draw: function(c, _, u) {
                return a.Grids.drawPlanetGrid(c, _ * this.get_opacity(), this.get_color()), a.Grids.drawPlanetGridText(c, _ * this.get_opacity(), this.get_color()), !0;
              }
            };
            (0, s.registerType)("GridLayer", [l, o, t.Layer]);
          }
        ),
        /***/
        "./esm/layers/imageset_layer.js": (
          /*!**************************************!*\
            !*** ./esm/layers/imageset_layer.js ***!
            \**************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ImageSetLayer: () => (
                /* binding */
                Ee
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), l = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), o = n(
              /*! ../utilities/histogram.js */
              "./esm/utilities/histogram.js"
            ), c = n(
              /*! ./color_map_container.js */
              "./esm/layers/color_map_container.js"
            ), _ = n(
              /*! ./fits_image.js */
              "./esm/layers/fits_image.js"
            ), u = n(
              /*! ./fits_image_js.js */
              "./esm/layers/fits_image_js.js"
            ), y = n(
              /*! ../imageset.js */
              "./esm/imageset.js"
            ), g = n(
              /*! ./layer.js */
              "./esm/layers/layer.js"
            );
            function Ee() {
              this._imageSet$1 = null, this._extension$1 = ".txt", this._overrideDefaultLayer$1 = !1, this._loaded$1 = !1, g.Layer.call(this);
            }
            Ee.create = function(Me) {
              var B = new Ee();
              return B._imageSet$1 = Me, B;
            };
            var Ve = {
              get_imageSet: function() {
                return this._imageSet$1;
              },
              set_imageSet: function(Me) {
                return this._imageSet$1 = Me, Me;
              },
              get_overrideDefaultLayer: function() {
                return this._overrideDefaultLayer$1;
              },
              set_overrideDefaultLayer: function(Me) {
                return this._overrideDefaultLayer$1 = Me, Me;
              },
              getFitsImage: function() {
                return s.ss.safeCast(this._imageSet$1.get_wcsImage(), _.FitsImage);
              },
              // Test whether our underlying imagery is FITS based.
              //
              // This can come in two flavors: a single FITS image, or tiled FITS.
              // Note that even though the FileType/Extension field can currently
              // specify multiple file formats, the rendering code requires that the
              // extension is exactly ".fits" for FITS rendering to kick in.
              _isFitsImageset$1: function() {
                var Me = this._imageSet$1.get_extension() === ".fits";
                return s.ss.canCast(this._imageSet$1.get_wcsImage(), _.FitsImage) || this._imageSet$1.get_wcsImage() == null && Me;
              },
              initializeFromXml: function(Me) {
                var B = t.Util.selectSingleNode(Me, "ImageSet");
                this._imageSet$1 = y.Imageset.fromXMLNode(B), Me.attributes.getNamedItem("Extension") != null && (this._extension$1 = Me.attributes.getNamedItem("Extension").nodeValue), Me.attributes.getNamedItem("ScaleType") != null && (this.get_imageSet().get_fitsProperties().scaleType = a.Enums.parse("ScaleTypes", Me.attributes.getNamedItem("ScaleType").nodeValue)), Me.attributes.getNamedItem("MinValue") != null && (this.get_imageSet().get_fitsProperties().minVal = parseFloat(Me.attributes.getNamedItem("MinValue").nodeValue), this.get_imageSet().get_fitsProperties().lowerCut = Me.attributes.getNamedItem("LowerCut") != null ? parseFloat(Me.attributes.getNamedItem("LowerCut").nodeValue) : this.get_imageSet().get_fitsProperties().minVal), Me.attributes.getNamedItem("MaxValue") != null && (this.get_imageSet().get_fitsProperties().maxVal = parseFloat(Me.attributes.getNamedItem("MaxValue").nodeValue), this.get_imageSet().get_fitsProperties().upperCut = Me.attributes.getNamedItem("UpperCut") != null ? parseFloat(Me.attributes.getNamedItem("UpperCut").nodeValue) : this.get_imageSet().get_fitsProperties().maxVal), Me.attributes.getNamedItem("ColorMapperName") != null && (this.get_imageSet().get_fitsProperties().colorMapName = Me.attributes.getNamedItem("ColorMapperName").nodeValue), Me.attributes.getNamedItem("OverrideDefault") != null && (this._overrideDefaultLayer$1 = s.ss.boolean(Me.attributes.getNamedItem("OverrideDefault").nodeValue));
              },
              draw: function(Me, B, Pe) {
                return this._loaded$1 ? (Me.set_worldBase(Me.get_world()), Me.set_viewBase(Me.get_view()), Me.makeFrustum(), Me.drawImageSet(this._imageSet$1, this.get_opacity() * B * 100), !0) : !1;
              },
              writeLayerProperties: function(Me) {
                this._imageSet$1.get_wcsImage() != null && (this._isFitsImageset$1() ? this._extension$1 = ".fit" : this._extension$1 = ".png", Me._writeAttributeString("Extension", this._extension$1)), this._isFitsImageset$1() && (Me._writeAttributeString("ScaleType", a.Enums.toXml("ScaleTypes", this._imageSet$1.get_fitsProperties().scaleType)), Me._writeAttributeString("MinValue", this._imageSet$1.get_fitsProperties().minVal.toString()), Me._writeAttributeString("MaxValue", this._imageSet$1.get_fitsProperties().maxVal.toString()), Me._writeAttributeString("LowerCut", this._imageSet$1.get_fitsProperties().lowerCut.toString()), Me._writeAttributeString("UpperCut", this._imageSet$1.get_fitsProperties().upperCut.toString()), this._imageSet$1.get_fitsProperties().colorMapName != null && Me._writeAttributeString("ColorMapperName", this._imageSet$1.get_fitsProperties().colorMapName)), Me._writeAttributeString("OverrideDefault", this._overrideDefaultLayer$1.toString()), y.Imageset.saveToXml(Me, this._imageSet$1, ""), g.Layer.prototype.writeLayerProperties.call(this, Me);
              },
              getTypeName: function() {
                return "TerraViewer.ImageSetLayer";
              },
              cleanUp: function() {
                g.Layer.prototype.cleanUp.call(this);
              },
              addFilesToCabinet: function(Me) {
                if (s.ss.canCast(this._imageSet$1.get_wcsImage(), _.FitsImage)) {
                  this._imageSet$1.get_wcsImage().get_filename();
                  var B = Me.tempDirectory + s.ss.format("{0}\\{1}{2}", Me.get_packageID(), this.id.toString(), this._extension$1);
                  Me.addFile(B, this._imageSet$1.get_wcsImage().sourceBlob);
                }
              },
              getParamNames: function() {
                return g.Layer.prototype.getParamNames.call(this);
              },
              getParams: function() {
                return g.Layer.prototype.getParams.call(this);
              },
              setParams: function(Me) {
                g.Layer.prototype.setParams.call(this, Me);
              },
              setImageScale: function(Me, B, Pe) {
                console.warn("SetImageScale is considered deprecated. Use setImageScaleRaw or setImageScalePhysical instead."), this.setImageScaleRaw(Me, B, Pe);
              },
              setImageScaleRaw: function(Me, B, Pe) {
                this.get_imageSet().get_fitsProperties().lowerCut = B, this.get_imageSet().get_fitsProperties().upperCut = Pe, this.get_imageSet().get_fitsProperties().scaleType = Me, s.ss.canCast(this._imageSet$1.get_wcsImage(), u.FitsImageJs) && o.Histogram.updateScale(this, Me, B, Pe);
              },
              setImageScalePhysical: function(Me, B, Pe) {
                var k = B, b = Pe;
                this._isFitsImageset$1() && (k = (k - this._imageSet$1.get_fitsProperties().bZero) / this._imageSet$1.get_fitsProperties().bScale, b = (b - this._imageSet$1.get_fitsProperties().bZero) / this._imageSet$1.get_fitsProperties().bScale), this.setImageScaleRaw(Me, k, b);
              },
              setImageZ: function(Me) {
                this._isFitsImageset$1() && o.Histogram.updateImage(this, Me);
              },
              get_colorMapperName: function() {
                return this.get_imageSet().get_fitsProperties().colorMapName;
              },
              set_colorMapperName: function(Me) {
                if (c.ColorMapContainer.fromNamedColormap(Me) == null)
                  throw new Error("Invalid colormap name");
                return this.version++, this._isFitsImageset$1() && (l.useGlVersion2 ? this._imageSet$1.get_fitsProperties().colorMapName = Me : o.Histogram.updateColorMapper(this, Me)), Me;
              },
              get_colorMapper: function() {
                return this.get_imageSet().get_fitsProperties().colorMapName == null ? null : c.ColorMapContainer.fromNamedColormap(this.get_imageSet().get_fitsProperties().colorMapName);
              },
              loadData: function(Me, B) {
                if (s.ss.startsWith(this._extension$1.toLowerCase(), ".fit")) {
                  var Pe = Me.getFileBlob(s.ss.replaceString(B, ".txt", this._extension$1)), k;
                  l.useGlVersion2 ? k = new _.FitsImage(this._imageSet$1, "image.fit", Pe, s.ss.bind("doneLoading", this)) : k = new u.FitsImageJs(this._imageSet$1, "image.fit", Pe, s.ss.bind("doneLoading", this)), this._imageSet$1.set_wcsImage(k);
                } else
                  this._loaded$1 = !0;
              },
              doneLoading: function(Me) {
                this._loaded$1 = !0;
              }
            };
            (0, a.registerType)("ImageSetLayer", [Ee, Ve, g.Layer]);
          }
        ),
        /***/
        "./esm/layers/iss_layer.js": (
          /*!*********************************!*\
            !*** ./esm/layers/iss_layer.js ***!
            \*********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ISSLayer: () => (
                /* binding */
                y
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../util.js */
              "./esm/util.js"
            ), l = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ../data_globals.js */
              "./esm/data_globals.js"
            ), c = n(
              /*! ../color.js */
              "./esm/color.js"
            ), _ = n(
              /*! ../url_helpers.js */
              "./esm/url_helpers.js"
            ), u = n(
              /*! ./object3d.js */
              "./esm/layers/object3d.js"
            );
            function y() {
              u.Object3dLayer.call(this), this.id = y.issGuid;
            }
            y.issGuid = t.Guid.fromString("00000001-0002-0003-0405-060708090a0b"), y._loading$2 = !1, y._issmodel$2 = null, y._doc$2 = null, y.loadBackground = function() {
              if (!(y._loading$2 || o.freestandingMode)) {
                y._loading$2 = !0;
                var Ee = _.URLHelpers.singleton.coreStaticUrl("data/iss.wtt");
                y._doc$2 = (0, o.tourDocumentFromUrlRaw)(Ee, function() {
                  y.createSpaceStation();
                });
              }
            }, y.createSpaceStation = function() {
              y._doc$2.set_id("28016047-97a9-4b33-a226-cd820262a151");
              var Ee = "0c10ae54-b6da-4282-bfda-f34562d403bc.3ds", Ve = new u.Object3d(y._doc$2, Ee, !0, !1, !0, c.Colors.get_white());
              Ve != null && (Ve.issLayer = !0, y._issmodel$2 = Ve);
            };
            var g = {
              draw: function(Ee, Ve, Me) {
                if (this.object3d == null && y._issmodel$2 == null && !y._loading$2) {
                  var B = l.Matrix3d.multiplyMatrix(Ee.get_world(), Ee.get_view()), Pe = B.transform(l.Vector3d.get_empty()), k = Math.sqrt(B.get_m11() * B.get_m11() + B.get_m22() * B.get_m22() + B.get_m33() * B.get_m33()), b = Pe.length(), Le = k, xe = s.ss.truncate(Ee.height), ze = Ee.get_projection().get_m11(), Se = Ee.get_projection().get_m34(), Te = Ee.get_projection().get_m44(), D = Math.abs(Se) * b + Te, ke = ze / D * xe, Fe = Le * ke;
                  Fe > 0.5 && y.loadBackground();
                }
                return this.object3d = y._issmodel$2, u.Object3dLayer.prototype.draw.call(this, Ee, Ve, Me);
              },
              getPrimaryUI: function() {
                return null;
              },
              addFilesToCabinet: function(Ee) {
              },
              loadData: function(Ee, Ve) {
              },
              cleanUp: function() {
              }
            };
            (0, a.registerType)("ISSLayer", [y, g, u.Object3dLayer]);
          }
        ),
        /***/
        "./esm/layers/layer.js": (
          /*!*****************************!*\
            !*** ./esm/layers/layer.js ***!
            \*****************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              AltUnits: () => (
                /* binding */
                y
              ),
              /* harmony export */
              DomainValue: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              FadeType: () => (
                /* binding */
                g
              ),
              /* harmony export */
              Layer: () => (
                /* binding */
                Me
              ),
              /* harmony export */
              LayerCollection: () => (
                /* binding */
                Pe
              )
              /* harmony export */
            });
            var s = n(
              /*! pako */
              "../node_modules/pako/index.js"
            ), a = /* @__PURE__ */ n.n(s), t = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), l = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), o = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), c = n(
              /*! ../color.js */
              "./esm/color.js"
            ), _ = n(
              /*! ../interfaces.js */
              "./esm/interfaces.js"
            ), u = n(
              /*! ../util.js */
              "./esm/util.js"
            ), y = {
              meters: 1,
              feet: 2,
              inches: 3,
              miles: 4,
              kilometers: 5,
              astronomicalUnits: 6,
              lightYears: 7,
              parsecs: 8,
              megaParsecs: 9,
              custom: 10
            };
            (0, l.registerType)("AltUnits", y), (0, l.registerEnum)("AltUnits", y);
            var g = {
              fadeIn: 1,
              fadeOut: 2,
              both: 3,
              none: 4
            };
            (0, l.registerType)("FadeType", g), (0, l.registerEnum)("FadeType", g);
            function Ee(b, Le) {
              this.markerIndex = 4, this.customMarker = null, this.text = b, this.markerIndex = Le;
            }
            var Ve = {};
            (0, l.registerType)("DomainValue", [Ee, Ve, null]);
            function Me() {
              this.id = u.Guid.newGuid(), this.loadedFromTour = !1, this.tourDocument = null, this.opacity = 1, this.opened = !1, this._startTime = t.ss.date("01/01/1900"), this._endTime = t.ss.date("01/01/2100"), this._fadeSpan = 0, this._fadeType = 4, this.version = 0, this.color = c.Colors.get_white(), this.enabled = !0, this.astronomical = !1;
            }
            var B = {
              getPrimaryUI: function() {
                return null;
              },
              getFileStreamUrl: function(b) {
                return this.tourDocument != null ? this.tourDocument.getFileStream(b) : null;
              },
              get_opacity: function() {
                return this.opacity;
              },
              set_opacity: function(b) {
                return this.opacity !== b && (this.version++, this.opacity = b), b;
              },
              get_opened: function() {
                return this.opened;
              },
              set_opened: function(b) {
                return this.opened !== b && (this.version++, this.opened = b), b;
              },
              get_startTime: function() {
                return this._startTime;
              },
              set_startTime: function(b) {
                return t.ss.compareDates(this._startTime, b) || (this.version++, this._startTime = b), b;
              },
              get_endTime: function() {
                return this._endTime;
              },
              set_endTime: function(b) {
                return t.ss.compareDates(this._endTime, b) || (this.version++, this._endTime = b), b;
              },
              get_fadeSpan: function() {
                return this._fadeSpan;
              },
              set_fadeSpan: function(b) {
                return this.version++, this._fadeSpan = b, b;
              },
              get_fadeType: function() {
                return this._fadeType;
              },
              set_fadeType: function(b) {
                return this._fadeType !== b && (this.set_version(this.get_version() + 1) - 1, this._fadeType = b), b;
              },
              get_version: function() {
                return this.version;
              },
              set_version: function(b) {
                return this.version = b, b;
              },
              findClosest: function(b, Le, xe, ze) {
                return xe;
              },
              hoverCheckScreenSpace: function(b) {
                return !1;
              },
              clickCheckScreenSpace: function(b) {
                return !1;
              },
              draw: function(b, Le, xe) {
                return !0;
              },
              preDraw: function(b, Le) {
                return !0;
              },
              updateData: function(b, Le, xe, ze) {
                return !0;
              },
              // "updateData" used to be named this. We add this function as a
              // compatibility shim just in case there's some JavaScript out there
              // still using the old name.
              upadteData: function(b, Le, xe, ze) {
                return this.updateData(b, Le, xe, ze);
              },
              canCopyToClipboard: function() {
                return !1;
              },
              copyToClipboard: function() {
              },
              getParams: function() {
                var b = new Array(5);
                return b[0] = this.color.r / 255, b[1] = this.color.g / 255, b[2] = this.color.b / 255, b[3] = this.color.a / 255, b[4] = this.opacity, b;
              },
              setParams: function(b) {
                b.length === 5 && (this.opacity = b[4], this.color = c.Color.fromArgb(b[3] * 255, b[0] * 255, b[1] * 255, b[2] * 255));
              },
              getParamNames: function() {
                return ["Color.Red", "Color.Green", "Color.Blue", "Color.Alpha", "Opacity"];
              },
              getEditUI: function() {
                return t.ss.safeCast(this, _.IUiController);
              },
              cleanUp: function() {
              },
              get_name: function() {
                return this._name;
              },
              set_name: function(b) {
                return this._name !== b && (this.version++, this._name = b), b;
              },
              toString: function() {
                return this._name;
              },
              get_referenceFrame: function() {
                return this.referenceFrame;
              },
              set_referenceFrame: function(b) {
                return this.referenceFrame = b, b;
              },
              getProps: function() {
                return "";
              },
              get_color: function() {
                return this.color;
              },
              set_color: function(b) {
                return this.color !== b && (this.color = b, this.version++), b;
              },
              colorChanged: function() {
              },
              get_colorValue: function() {
                return this.get_color().toString();
              },
              set_colorValue: function(b) {
                return this.set_color(c.Color.fromName(b)), b;
              },
              // These named accessor functions were added so that we can support
              // `enabled` as a "setting" in our TypeScript framework, without breaking
              // anything that might rely on `this.enabled` being a genuine bool.
              get_enabled: function() {
                return this.enabled;
              },
              set_enabled: function(b) {
                return this.enabled = b, b;
              },
              get_astronomical: function() {
                return this.astronomical;
              },
              set_astronomical: function(b) {
                return this.astronomical !== b && (this.version++, this.astronomical = b), b;
              },
              getTypeName: function() {
                return "TerraViewer.Layer";
              },
              saveToXml: function(b) {
                b._writeStartElement("Layer"), b._writeAttributeString("Id", this.id.toString()), b._writeAttributeString("Type", this.getTypeName()), b._writeAttributeString("Name", this.get_name()), b._writeAttributeString("ReferenceFrame", this.referenceFrame), b._writeAttributeString("Color", this.color.save()), b._writeAttributeString("Opacity", this.opacity.toString()), b._writeAttributeString("StartTime", o.Util.xmlDate(this.get_startTime())), b._writeAttributeString("EndTime", o.Util.xmlDate(this.get_endTime())), b._writeAttributeString("FadeSpan", this.get_fadeSpan().toString()), b._writeAttributeString("FadeType", this.get_fadeType().toString()), this.writeLayerProperties(b), b._writeEndElement();
              },
              writeLayerProperties: function(b) {
              },
              initializeFromXml: function(b) {
              },
              initFromXml: function(b) {
                if (this.id = u.Guid.fromString(b.attributes.getNamedItem("Id").nodeValue), this.set_name(b.attributes.getNamedItem("Name").nodeValue), this.referenceFrame = b.attributes.getNamedItem("ReferenceFrame").nodeValue, this.color = c.Color.load(b.attributes.getNamedItem("Color").nodeValue), this.opacity = parseFloat(b.attributes.getNamedItem("Opacity").nodeValue), b.attributes.getNamedItem("StartTime") != null && this.set_startTime(new Date(b.attributes.getNamedItem("StartTime").nodeValue)), b.attributes.getNamedItem("EndTime") != null && this.set_endTime(new Date(b.attributes.getNamedItem("EndTime").nodeValue)), b.attributes.getNamedItem("FadeSpan") != null && this.set_fadeSpan(o.Util.parseTimeSpan(b.attributes.getNamedItem("FadeSpan").nodeValue)), b.attributes.getNamedItem("FadeType") != null)
                  switch (b.attributes.getNamedItem("FadeType").nodeValue) {
                    case "In":
                      this.set_fadeType(1);
                      break;
                    case "Out":
                      this.set_fadeType(2);
                      break;
                    case "Both":
                      this.set_fadeType(3);
                      break;
                    case "None":
                      this.set_fadeType(4);
                      break;
                  }
                this.initializeFromXml(b);
              },
              loadData: function(b, Le) {
              },
              addFilesToCabinet: function(b) {
              },
              // This method decompresses a blob into a string, and if the string cannot be decompressed
              // due to an invalid header, we assume the blob is not compressed and return the string
              // as-is.
              getStringFromGzipBlob: function(b, Le) {
                var xe = new FileReader();
                xe.onloadend = function(ze) {
                  var Se = "";
                  try {
                    Se = a().inflate(ze.target.result, { to: "string" });
                  } catch (D) {
                    var Te = D.toString();
                    if (Te === "incorrect header check" || Te === "unknown compression method")
                      Se = String.fromCharCode.apply(null, new Uint8Array(ze.target.result));
                    else
                      throw D;
                  }
                  Le(Se);
                }, xe.readAsArrayBuffer(b);
              }
            };
            (0, l.registerType)("Layer", [Me, B, null]);
            function Pe() {
              Me.call(this);
            }
            var k = {
              draw: function(b, Le, xe) {
                return Me.prototype.draw.call(this, b, Le, !1);
              }
            };
            (0, l.registerType)("LayerCollection", [Pe, k, Me]);
          }
        ),
        /***/
        "./esm/layers/layer_manager.js": (
          /*!*************************************!*\
            !*** ./esm/layers/layer_manager.js ***!
            \*************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              FrameTarget: () => (
                /* binding */
                Ge
              ),
              /* harmony export */
              GroundOverlayLayer: () => (
                /* binding */
                Ne
              ),
              /* harmony export */
              LayerManager: () => (
                /* binding */
                O
              ),
              /* harmony export */
              LayerMap: () => (
                /* binding */
                $e
              ),
              /* harmony export */
              ReferenceFrames: () => (
                /* binding */
                Ie
              ),
              /* harmony export */
              SkyOverlays: () => (
                /* binding */
                Qe
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../data_globals.js */
              "./esm/data_globals.js"
            ), l = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), o = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), c = n(
              /*! ../astrocalc/elliptical.js */
              "./esm/astrocalc/elliptical.js"
            ), _ = n(
              /*! ../utilities/histogram.js */
              "./esm/utilities/histogram.js"
            ), u = n(
              /*! ../utilities/simple_input.js */
              "./esm/utilities/simple_input.js"
            ), y = n(
              /*! ../utilities/color_picker.js */
              "./esm/utilities/color_picker.js"
            ), g = n(
              /*! ../utilities/context_menu_strip.js */
              "./esm/utilities/context_menu_strip.js"
            ), Ee = n(
              /*! ../color.js */
              "./esm/color.js"
            ), Ve = n(
              /*! ./fits_image.js */
              "./esm/layers/fits_image.js"
            ), Me = n(
              /*! ../imageset.js */
              "./esm/imageset.js"
            ), B = n(
              /*! ../planets.js */
              "./esm/planets.js"
            ), Pe = n(
              /*! ../settings.js */
              "./esm/settings.js"
            ), k = n(
              /*! ../space_time_controller.js */
              "./esm/space_time_controller.js"
            ), b = n(
              /*! ../url_helpers.js */
              "./esm/url_helpers.js"
            ), Le = n(
              /*! ../util.js */
              "./esm/util.js"
            ), xe = n(
              /*! ../web_file.js */
              "./esm/web_file.js"
            ), ze = n(
              /*! ./layer.js */
              "./esm/layers/layer.js"
            ), Se = n(
              /*! ./reference_frame.js */
              "./esm/layers/reference_frame.js"
            ), Te = n(
              /*! ./great_circle_route_layer.js */
              "./esm/layers/great_circle_route_layer.js"
            ), D = n(
              /*! ./grid_layer.js */
              "./esm/layers/grid_layer.js"
            ), ke = n(
              /*! ./imageset_layer.js */
              "./esm/layers/imageset_layer.js"
            ), Fe = n(
              /*! ./iss_layer.js */
              "./esm/layers/iss_layer.js"
            ), He = n(
              /*! ./orbit.js */
              "./esm/layers/orbit.js"
            ), We = n(
              /*! ./orbit_layer.js */
              "./esm/layers/orbit_layer.js"
            ), Ke = n(
              /*! ./spreadsheet_layer.js */
              "./esm/layers/spreadsheet_layer.js"
            ), $ = n(
              /*! ./vo_table_layer.js */
              "./esm/layers/vo_table_layer.js"
            ), De = n(
              /*! ../tours/tour_stop.js */
              "./esm/tours/tour_stop.js"
            ), Re = n(
              /*! ../tours/tour_player.js */
              "./esm/tours/tour_player.js"
            ), Ie = {
              sky: 0,
              ecliptic: 1,
              galactic: 2,
              sun: 3,
              mercury: 4,
              venus: 5,
              earth: 6,
              mars: 7,
              jupiter: 8,
              saturn: 9,
              uranus: 10,
              neptune: 11,
              pluto: 12,
              moon: 13,
              io: 14,
              europa: 15,
              ganymede: 16,
              callisto: 17,
              custom: 18,
              identity: 19,
              sandbox: 20
            };
            (0, a.registerType)("ReferenceFrames", Ie), (0, a.registerEnum)("ReferenceFrames", Ie);
            function O() {
            }
            O._version = 0, O._tourLayers = !1, O._layerMaps = {}, O._layerMapsTours = {}, O._allMaps = {}, O._allMapsTours = {}, O._currentMap = "Earth", O._layerList = {}, O._layerListTours = {}, O._moonfile = "", O._selectedLayer = null, O._lastMenuClick = new o.Vector2d(), O.get_version = function() {
              return O._version;
            }, O.set_version = function(je) {
              return O._version = je, je;
            }, O.get_frameWizardDialog = function() {
              return O._frameWizardDialog;
            }, O.get_dataVizWizardDialog = function() {
              return O._dataVizWizardDialog;
            }, O.get_referenceFramePropsDialog = function() {
              return O._referenceFramePropsDialog;
            }, O.get_greatCircleDlg = function() {
              return O._greatCircleDialog;
            }, O.get_tourLayers = function() {
              return O._tourLayers;
            }, O.set_tourLayers = function(je) {
              return O._tourLayers !== je && !je ? (O._clearLayers(), O._tourLayers = je, O.loadTree()) : O._tourLayers !== je && je && (O._tourLayers = je, O.initLayers()), je;
            }, O.loadTree = function() {
              t.globalScriptInterface != null && t.globalScriptInterface.refreshLayerManagerNow();
            }, O.get_layerMaps = function() {
              return O.get_tourLayers() ? O._layerMapsTours : O._layerMaps;
            }, O.set_layerMaps = function(je) {
              return O.get_tourLayers() ? O._layerMapsTours = je : O._layerMaps = je, je;
            }, O.get_allMaps = function() {
              return O.get_tourLayers() ? O._allMapsTours : O._allMaps;
            }, (0, t.set_layerManagerGetAllMaps)(O.get_allMaps), O.set_allMaps = function(je) {
              return O.get_tourLayers() ? O._allMapsTours = je : O._allMaps = je, je;
            }, O.get_currentMap = function() {
              return O._currentMap;
            }, O.set_currentMap = function(je) {
              return O._currentMap = je, je;
            }, O.get_layerList = function() {
              return O.get_tourLayers() ? O._layerListTours : O._layerList;
            }, O.set_layerList = function(je) {
              return O.get_tourLayers() ? O._layerListTours = je : O._layerList = je, je;
            }, O.oneTimeInitialization = function() {
              O._webFileMoons == null && O.getMoonFile(b.URLHelpers.singleton.engineAssetUrl("moons.txt")), Ke.PushPin.triggerLoadSprite();
            }, O.initLayers = function() {
              O._clearLayers();
              var je = null, ht = !O.get_tourLayers() && !t.freestandingMode;
              if (ht) {
                je = new $e("ISS", 18), je.frame.epoch = k.SpaceTimeController._twoLineDateToJulian("10184.51609218"), je.frame.semiMajorAxis = 672882941e-2, je.frame.referenceFrameType = 1, je.frame.inclination = 51.6442, je.frame.longitudeOfAscendingNode = 147.0262, je.frame.eccentricity = 9909e-7, je.frame.meanAnomolyAtEpoch = 325.5563, je.frame.meanDailyMotion = 5659.821558, je.frame.argumentOfPeriapsis = 286.4623, je.frame.scale = 1, je.frame.semiMajorAxisUnits = 1, je.frame.meanRadius = 130, je.frame.oblateness = 0, je.frame.showOrbitPath = !0;
                var qe = new Array(0), lt = b.URLHelpers.singleton.coreDynamicUrl("wwtweb/isstle.aspx"), ft;
                ft = new xe.WebFile(lt), ft.onStateChange = function() {
                  if (ft.get_state() === 1) {
                    var _t = ft.getText();
                    qe = _t.split(`
`), qe.length > 1 && je.frame.fromTLE(qe[0], qe[1], 3986004418e5);
                  }
                }, ft.send(), je.enabled = !0;
              }
              O.get_layerMaps().Sun = new $e("Sun", 3), O.get_layerMaps().Sun.addChild(new $e("Mercury", 4)), O.get_layerMaps().Sun.addChild(new $e("Venus", 5)), O.get_layerMaps().Sun.addChild(new $e("Earth", 6)), O.get_layerMaps().Sun.childMaps.Earth.addChild(new $e("Moon", 13)), ht && O.get_layerMaps().Sun.childMaps.Earth.addChild(je), O.get_layerMaps().Sun.addChild(new $e("Mars", 7)), O.get_layerMaps().Sun.addChild(new $e("Jupiter", 8)), O.get_layerMaps().Sun.childMaps.Jupiter.addChild(new $e("Io", 14)), O.get_layerMaps().Sun.childMaps.Jupiter.addChild(new $e("Europa", 15)), O.get_layerMaps().Sun.childMaps.Jupiter.addChild(new $e("Ganymede", 16)), O.get_layerMaps().Sun.childMaps.Jupiter.addChild(new $e("Callisto", 17)), O.get_layerMaps().Sun.addChild(new $e("Saturn", 9)), O.get_layerMaps().Sun.addChild(new $e("Uranus", 10)), O.get_layerMaps().Sun.addChild(new $e("Neptune", 11)), O.get_layerMaps().Sun.addChild(new $e("Pluto", 12)), O._addMoons(O._moonfile), O.get_layerMaps().Sky = new $e("Sky", 0), O.get_layerMaps().Sun.open = !0, O._allMaps = {}, O._addAllMaps(O.get_layerMaps(), null), ht && O._addIss(), O._version++, O.loadTree();
            }, O._addIss = function() {
              var je = new Fe.ISSLayer();
              je.set_name(Le.Language.getLocalizedText(1314, "ISS Model  (Toshiyuki Takahei)")), je.enabled = Pe.Settings.get_active().get_showISSModel(), O.get_layerList()[je.id] = je, je.set_referenceFrame("ISS"), O.get_allMaps().ISS.layers.push(je), O.get_allMaps().ISS.open = !0;
            }, O._addAllMaps = function(je, ht) {
              for (var qe = s.ss.enumerate(s.ss.keys(je)); qe.moveNext(); ) {
                var lt = qe.current, ft = je[lt];
                ft.frame.parent = ht, O.get_allMaps()[ft.get_name()] = ft, O._addAllMaps(ft.childMaps, ft.get_name());
              }
            }, O._clearLayers = function() {
              for (var je = s.ss.enumerate(s.ss.keys(O.get_layerList())); je.moveNext(); ) {
                var ht = je.current, qe = O.get_layerList()[ht];
                qe.cleanUp();
              }
              s.ss.clearKeys(O.get_layerList()), s.ss.clearKeys(O.get_layerMaps());
            }, O.getMoonFile = function(je) {
              O._webFileMoons = new xe.WebFile(je), O._webFileMoons.onStateChange = O.moonFileStateChange, O._webFileMoons.send();
            }, O.moonFileStateChange = function() {
              O._webFileMoons.get_state() === 2 ? alert(O._webFileMoons.get_message()) : O._webFileMoons.get_state() === 1 && (O._moonfile = O._webFileMoons.getText(), O.initLayers());
            }, O._addMoons = function(je) {
              for (var ht = je.split(`\r
`), qe = !0, lt = s.ss.enumerate(ht); lt.moveNext(); ) {
                var ft = lt.current;
                if (qe) {
                  qe = !1;
                  continue;
                }
                var _t = ft.split("	");
                if (_t.length > 16) {
                  var St = _t[0], yt = new $e(_t[2], 18);
                  yt.frame._systemGenerated = !0, yt.frame.epoch = parseFloat(_t[1]), yt.frame.semiMajorAxis = parseFloat(_t[3]) * 1e3, yt.frame.referenceFrameType = 1, yt.frame.inclination = parseFloat(_t[7]), yt.frame.longitudeOfAscendingNode = parseFloat(_t[8]), yt.frame.eccentricity = parseFloat(_t[4]), yt.frame.meanAnomolyAtEpoch = parseFloat(_t[6]), yt.frame.meanDailyMotion = parseFloat(_t[9]), yt.frame.argumentOfPeriapsis = parseFloat(_t[5]), yt.frame.scale = 1, yt.frame.semiMajorAxisUnits = 1, yt.frame.meanRadius = parseFloat(_t[16]) * 1e3, yt.frame.rotationalPeriod = parseFloat(_t[17]), yt.frame.showAsPoint = !1, yt.frame.showOrbitPath = !0, yt.frame.set_representativeColor(Ee.Color.fromArgb(255, 175, 216, 230)), yt.frame.oblateness = 0, O.get_layerMaps().Sun.childMaps[St].addChild(yt);
                }
              }
            }, O.addVoTableLayer = function(je, ht) {
              return O.addVoTableLayerWithPlotType(je, ht, 2);
            }, O.addVoTableLayerWithPlotType = function(je, ht, qe) {
              var lt = $.VoTableLayer.create(je, qe);
              return lt.set_name(ht), lt.set_astronomical(!0), lt.set_referenceFrame("Sky"), O.get_layerList()[lt.id] = lt, O.get_allMaps().Sky.layers.push(lt), O.get_allMaps().Sky.open = !0, lt.enabled = !0, O._version++, O.loadTree(), lt;
            }, O.addImageSetLayer = function(je, ht) {
              var qe = ke.ImageSetLayer.create(je);
              return O.addFitsImageSetLayer(qe, ht);
            }, O.addImageSetLayerCallback = function(je, ht, qe) {
              var lt = ke.ImageSetLayer.create(je), ft = je.get_extension() === ".fits" && lt.getFitsImage() == null && je.get_projection() !== Me.ProjectionType.healpix;
              return ft && (je.get_fitsProperties().onMainImageLoaded = function(_t) {
                _t.applyDisplaySettings(), qe != null && qe(lt);
              }), O.addFitsImageSetLayer(lt, ht), qe != null && (!ft || je.get_fitsProperties().mainImageLoadedEventHasFired) && qe(lt), lt;
            }, O.addFitsImageSetLayer = function(je, ht) {
              return je.doneLoading(null), je.set_name(ht), je.set_astronomical(!0), je.set_referenceFrame("Sky"), O.get_layerList()[je.id] = je, O.get_allMaps().Sky.layers.push(je), O.get_allMaps().Sky.open = !0, je.enabled = !0, O._version++, O.loadTree(), je;
            }, O.getNextFitsName = function() {
              return O._getNextName("Fits Image");
            }, O.getNextImageSetName = function() {
              return O._getNextName("Image Set");
            }, O._getNextName = function(je) {
              for (var ht = 0, qe = s.ss.enumerate(s.ss.keys(O.get_allMaps())); qe.moveNext(); )
                for (var lt = qe.current, ft = s.ss.enumerate(O.get_allMaps()[lt].layers); ft.moveNext(); ) {
                  var _t = ft.current;
                  if (s.ss.startsWith(_t.get_name(), je + " ")) {
                    var St = s.ss.replaceString(_t.get_name(), je + " ", "");
                    try {
                      var yt = parseInt(St);
                      yt > ht && (ht = yt);
                    } catch {
                    }
                  }
                }
              return s.ss.format("{0} {1}", je, ht + 1);
            }, O._closeAllTourLoadedLayers = function() {
              for (var je = [], ht = s.ss.enumerate(s.ss.keys(O.get_layerList())); ht.moveNext(); ) {
                var qe = ht.current, lt = O.get_layerList()[qe];
                lt.loadedFromTour && je.push(lt.id);
              }
              for (var ft = s.ss.enumerate(je); ft.moveNext(); ) {
                var _t = ft.current;
                O.deleteLayerByID(_t, !0, !1);
              }
              for (var St = [], yt = s.ss.enumerate(s.ss.keys(O.get_allMaps())); yt.moveNext(); ) {
                var qe = yt.current, Ct = O.get_allMaps()[qe];
                Ct.loadedFromTour && !Ct.layers.length && St.push(Ct.get_name());
              }
              for (var Lt = s.ss.enumerate(St); Lt.moveNext(); ) {
                var Vt = Lt.current;
                O.purgeLayerMapDeep(O.get_allMaps()[Vt], !0);
              }
              O.set_version(O.get_version() + 1) - 1, O.loadTree();
            }, O.purgeLayerMapDeep = function(je, ht) {
              for (var qe = s.ss.enumerate(je.layers); qe.moveNext(); ) {
                var lt = qe.current;
                O.deleteLayerByID(lt.id, !1, !1);
              }
              je.layers.length = 0;
              for (var ft = s.ss.enumerate(s.ss.keys(je.childMaps)); ft.moveNext(); ) {
                var _t = ft.current, St = je.childMaps[_t];
                O.purgeLayerMapDeep(St, !1);
              }
              s.ss.clearKeys(je.childMaps), ht && (s.ss.emptyString(je.frame.parent) ? s.ss.keyExists(O.get_layerMaps(), je.get_name()) && delete O.get_layerMaps()[je.get_name()] : s.ss.keyExists(O.get_allMaps(), je.frame.parent) && delete O.get_allMaps()[je.frame.parent].childMaps[je.get_name()]), delete O.get_allMaps()[je.get_name()], O._version++;
            }, O._cleanAllTourLoadedLayers = function() {
              for (var je = s.ss.enumerate(s.ss.keys(O.get_layerList())); je.moveNext(); ) {
                var ht = je.current, qe = O.get_layerList()[ht];
                qe.loadedFromTour && (qe.loadedFromTour = !1);
              }
            }, O.mergeToursLayers = function() {
              O._tourLayers = !1;
              for (var je = !1, ht = !1, qe = s.ss.enumerate(s.ss.keys(O._allMapsTours)); qe.moveNext(); ) {
                var lt = qe.current, ft = O._allMapsTours[lt];
                if (!s.ss.keyExists(O._allMaps, ft.get_name())) {
                  var _t = new $e(ft.get_name(), 18);
                  _t.frame = ft.frame, _t.loadedFromTour = !0, O.get_allMaps()[_t.get_name()] = _t;
                }
              }
              O.connectAllChildren();
              for (var St = s.ss.enumerate(s.ss.keys(O._layerListTours)); St.moveNext(); ) {
                var lt = St.current, yt = O._layerListTours[lt];
                s.ss.keyExists(O.get_layerList(), yt.id) && (ht || (je = !0, ht = !0), je && O.deleteLayerByID(yt.id, !0, !1)), s.ss.keyExists(O.get_layerList(), yt.id) ? yt.cleanUp() : s.ss.keyExists(O.get_allMaps(), yt.get_referenceFrame()) && (O.get_layerList()[yt.id] = yt, O.get_allMaps()[yt.get_referenceFrame()].layers.push(yt));
              }
              s.ss.clearKeys(O._layerListTours), s.ss.clearKeys(O._allMapsTours), s.ss.clearKeys(O._layerMapsTours), O.loadTree();
            }, O.connectAllChildren = function() {
              for (var je = s.ss.enumerate(s.ss.keys(O.get_allMaps())); je.moveNext(); ) {
                var ht = je.current, qe = O.get_allMaps()[ht];
                s.ss.emptyString(qe.frame.parent) && !s.ss.keyExists(O.get_layerMaps(), qe.frame.name) ? O.get_layerMaps()[qe.get_name()] = qe : !s.ss.emptyString(qe.frame.parent) && s.ss.keyExists(O.get_allMaps(), qe.frame.parent) && (s.ss.keyExists(O.get_allMaps()[qe.frame.parent].childMaps, qe.frame.name) || (O.get_allMaps()[qe.frame.parent].childMaps[qe.frame.name] = qe, qe.parent = O.get_allMaps()[qe.frame.parent]));
              }
            }, O.deleteLayerByID = function(je, ht, qe) {
              if (s.ss.keyExists(O.get_layerList(), je)) {
                var lt = O.get_layerList()[je];
                return lt.cleanUp(), ht && s.ss.remove(O.get_allMaps()[lt.get_referenceFrame()].layers, lt), delete O.get_layerList()[je], O._version++, qe && O.loadTree(), !0;
              } else
                return !1;
            }, O._getFrameTarget = function(je, ht) {
              var qe = new Ge(), lt = o.Vector3d.get_empty();
              if (qe.target = o.Vector3d.get_empty(), qe.matrix = o.Matrix3d.get_identity(), !s.ss.keyExists(O.get_allMaps(), ht))
                return qe;
              var ft = [], _t = O.get_allMaps()[ht];
              for (ft.push(_t); _t.frame.reference === 18; )
                _t = _t.parent, ft.splice(0, 0, _t);
              for (var St = je.get_world().clone(), yt = je.get_worldBaseNonRotating(), Ct = je.get_worldBase(), Lt = je.get_nominalRadius(), Vt = s.ss.enumerate(ft); Vt.moveNext(); ) {
                var Tt = Vt.current;
                Tt.frame.reference !== 18 && Tt.frame.reference !== 20 ? B.Planets.setupPlanetMatrix(je, a.Enums.parse("SolarSystemObjects", Tt.frame.name), o.Vector3d.get_empty(), !1) : (Tt.computeFrame(je), Tt.frame.useRotatingParentFrame() ? je.set_world(o.Matrix3d.multiplyMatrix(Tt.frame.worldMatrix, je.get_world())) : je.set_world(o.Matrix3d.multiplyMatrix(Tt.frame.worldMatrix, je.get_worldBaseNonRotating())), Tt.frame.referenceFrameType === 3 && je.set_worldBaseNonRotating(je.get_world().clone()), je.set_nominalRadius(Tt.frame.meanRadius));
              }
              lt = je.get_world().transform(lt);
              var xt = je.get_world().transform(o.Vector3d.create(0, 0, 1)), Ot = o.Vector3d.subtractVectors(je.get_world().transform(o.Vector3d.create(0, 1, 0)), lt);
              return Ot.normalize(), qe.matrix = o.Matrix3d.lookAtLH(new o.Vector3d(), o.Vector3d.subtractVectors(xt, lt), Ot), je.set_nominalRadius(Lt), je.set_world(St), je.set_worldBaseNonRotating(yt), je.set_worldBase(Ct), qe.target = lt, qe;
            }, O._prepTourLayers = function() {
              if (Re.TourPlayer.get_playing()) {
                var je = t.globalWWTControl.uiController;
                if (je != null) {
                  var ht = je.get_tour();
                  if (ht.get_currentTourStop() != null && (je.updateTweenPosition(-1), !ht.get_currentTourStop().get_keyFramed())) {
                    ht.get_currentTourStop()._updateLayerOpacity();
                    for (var qe = s.ss.enumerate(s.ss.keys(ht.get_currentTourStop().layers)); qe.moveNext(); ) {
                      var lt = qe.current, ft = ht.get_currentTourStop().layers[lt];
                      s.ss.keyExists(O.get_layerList(), ft.id) && (O.get_layerList()[ft.id].set_opacity(ft.frameOpacity), O.get_layerList()[ft.id].setParams(ft.frameParams));
                    }
                  }
                }
              }
            }, O._draw = function(je, ht, qe, lt, ft, _t) {
              if (s.ss.keyExists(O.get_allMaps(), lt)) {
                var St = O.get_allMaps()[lt];
                if (!(!St.enabled || !s.ss.keyCount(St.childMaps) && !St.layers.length && !(St.frame.showAsPoint || St.frame.showOrbitPath))) {
                  if (Re.TourPlayer.get_playing()) {
                    var yt = t.globalWWTControl.uiController;
                    if (yt != null) {
                      var Ct = yt.get_tour();
                      if (Ct.get_currentTourStop() != null) {
                        yt.updateTweenPosition(-1), Ct.get_currentTourStop()._updateLayerOpacity();
                        for (var Lt = s.ss.enumerate(s.ss.keys(Ct.get_currentTourStop().layers)); Lt.moveNext(); ) {
                          var Vt = Lt.current, Tt = Ct.get_currentTourStop().layers[Vt];
                          s.ss.keyExists(O.get_layerList(), Tt.id) && (O.get_layerList()[Tt.id].set_opacity(Tt.frameOpacity), O.get_layerList()[Tt.id].setParams(Tt.frameParams));
                        }
                      }
                    }
                  }
                  var xt = je.get_world(), Ot = je.get_worldBaseNonRotating(), Pt = je.get_nominalRadius();
                  (St.frame.reference === 18 | St.frame.reference === 18) === 1 && (St.computeFrame(je), St.frame.referenceFrameType !== 1 && St.frame.referenceFrameType !== 2 ? je.set_world(o.Matrix3d.multiplyMatrix(St.frame.worldMatrix, je.get_world())) : je.set_world(o.Matrix3d.multiplyMatrix(St.frame.worldMatrix, je.get_worldBaseNonRotating())), je.set_nominalRadius(St.frame.meanRadius)), St.frame.showAsPoint;
                  for (var kt = 0; kt < 2; kt++)
                    for (var zt = s.ss.enumerate(O.get_allMaps()[lt].layers); zt.moveNext(); ) {
                      var Bt = zt.current;
                      if (!kt && s.ss.canCast(Bt, ke.ImageSetLayer) || kt === 1 && !s.ss.canCast(Bt, ke.ImageSetLayer)) {
                        var gt = !1;
                        if (kt || (gt = !qe && Bt.get_overrideDefaultLayer()), Bt.enabled && !gt) {
                          var rt = k.SpaceTimeController.utcToJulian(Bt.get_startTime()), nt = k.SpaceTimeController.utcToJulian(Bt.get_endTime()), bt = k.SpaceTimeController.utcToJulian(Bt.get_startTime()) - (Bt.get_fadeType() === 1 || Bt.get_fadeType() === 3 ? Bt.get_fadeSpan() / 864e6 : 0), Et = k.SpaceTimeController.utcToJulian(Bt.get_endTime()) + (Bt.get_fadeType() === 2 || Bt.get_fadeType() === 3 ? Bt.get_fadeSpan() / 864e6 : 0);
                          if (k.SpaceTimeController.get_jNow() > bt && k.SpaceTimeController.get_jNow() < Et) {
                            var Rt = 1;
                            if (k.SpaceTimeController.get_jNow() < rt && (Rt = (k.SpaceTimeController.get_jNow() - bt) / (Bt.get_fadeSpan() / 864e6)), k.SpaceTimeController.get_jNow() > nt && (Rt = (Et - k.SpaceTimeController.get_jNow()) / (Bt.get_fadeSpan() / 864e6)), Bt.set_astronomical(qe), s.ss.canCast(Bt, Ke.SpreadSheetLayer)) {
                              var $t = s.ss.safeCast(Bt, Ke.SpreadSheetLayer);
                              $t.draw(je, ht * Rt, _t);
                            } else
                              Bt.draw(je, ht * Rt, _t);
                          }
                        }
                      }
                    }
                  if (ft)
                    for (var pt = s.ss.enumerate(s.ss.keys(O.get_allMaps()[lt].childMaps)); pt.moveNext(); ) {
                      var Vt = pt.current, Ft = O.get_allMaps()[lt].childMaps[Vt];
                      if (s.ss.canCast(Ft, $e)) {
                        if (Ft.enabled && Ft.frame.showOrbitPath && Pe.Settings.get_active().get_solarSystemOrbits() && Pe.Settings.get_active().get_solarSystemMinorOrbits())
                          if (Ft.frame.referenceFrameType === 1) {
                            Ft.frame.get_orbit() == null && Ft.frame.set_orbit(new He.Orbit(Ft.frame.get_elements(), 360, Ft.frame.get_representativeColor(), 1, Ft.parent.frame.meanRadius));
                            var Nt = je.get_world();
                            je.set_world(o.Matrix3d.multiplyMatrix(St.frame.worldMatrix, je.get_worldBaseNonRotating())), Ft.frame.get_orbit().draw3D(je, 0.5, o.Vector3d.create(0, 0, 0)), je.set_world(Nt);
                          } else
                            Ft.frame.referenceFrameType;
                        (Ft.frame.reference === 18 || Ft.frame.reference === 19) && O._draw(je, ht, qe, Ft.get_name(), ft, _t);
                      }
                    }
                  je.set_nominalRadius(Pt), je.set_world(xt), je.set_worldBaseNonRotating(Ot);
                }
              }
            }, O._getVisibleLayerList = function(je) {
              for (var ht = {}, qe = s.ss.enumerate(s.ss.keys(O.get_layerList())); qe.moveNext(); ) {
                var lt = qe.current, ft = O.get_layerList()[lt];
                if (ft.enabled) {
                  var _t = new De.LayerInfo();
                  _t.startOpacity = _t.endOpacity = ft.get_opacity(), _t.id = ft.id, _t.startParams = ft.getParams(), s.ss.keyExists(je, _t.id) ? (_t.endOpacity = je[_t.id].endOpacity, _t.endParams = je[_t.id].endParams) : _t.endParams = ft.getParams(), ht[ft.id] = _t;
                }
              }
              return ht;
            }, O.setVisibleLayerList = function(je) {
              for (var ht = s.ss.enumerate(s.ss.keys(O.get_layerList())); ht.moveNext(); ) {
                var qe = ht.current, lt = O.get_layerList()[qe];
                lt.enabled = s.ss.keyExists(je, lt.id);
                try {
                  lt.enabled && (lt.set_opacity(je[lt.id].frameOpacity), lt.setParams(je[lt.id].frameParams));
                } catch {
                }
              }
            }, (0, t.set_setManagerVisibleLayerList)(O.setVisibleLayerList), O._preDraw = function(je, ht, qe, lt, ft) {
              if (s.ss.keyExists(O.get_allMaps(), lt)) {
                var _t = O.get_allMaps()[lt];
                if (!(!s.ss.keyCount(_t.childMaps) && !_t.layers.length)) {
                  if (Re.TourPlayer.get_playing()) {
                    var St = s.ss.safeCast(t.globalWWTControl.uiController, Re.TourPlayer);
                    if (St != null) {
                      var yt = St.get_tour();
                      if (yt.get_currentTourStop() != null) {
                        St.updateTweenPosition(-1), yt.get_currentTourStop()._updateLayerOpacity();
                        for (var Ct = s.ss.enumerate(s.ss.keys(yt.get_currentTourStop().layers)); Ct.moveNext(); ) {
                          var Lt = Ct.current, Vt = yt.get_currentTourStop().layers[Lt];
                          s.ss.keyExists(O.get_layerList(), Vt.id) && (O.get_layerList()[Vt.id].set_opacity(Vt.frameOpacity), O.get_layerList()[Vt.id].setParams(Vt.frameParams));
                        }
                      }
                    }
                  }
                  var Tt = je.get_world(), xt = je.get_worldBaseNonRotating(), Ot = je.get_nominalRadius();
                  _t.frame.reference === 18 && (_t.computeFrame(je), _t.frame.referenceFrameType !== 1 ? je.set_world(o.Matrix3d.multiplyMatrix(_t.frame.worldMatrix, je.get_world())) : je.set_world(o.Matrix3d.multiplyMatrix(_t.frame.worldMatrix, je.get_worldBaseNonRotating())), je.set_nominalRadius(_t.frame.meanRadius));
                  for (var Pt = 0; Pt < 2; Pt++)
                    for (var kt = s.ss.enumerate(O.get_allMaps()[lt].layers); kt.moveNext(); ) {
                      var zt = kt.current;
                      if ((!Pt && s.ss.canCast(zt, ke.ImageSetLayer) || Pt === 1 && !s.ss.canCast(zt, ke.ImageSetLayer)) && zt.enabled) {
                        var Bt = k.SpaceTimeController.utcToJulian(zt.get_startTime()), gt = k.SpaceTimeController.utcToJulian(zt.get_endTime()), rt = k.SpaceTimeController.utcToJulian(zt.get_startTime()) - (zt.get_fadeType() === 1 || zt.get_fadeType() === 3 ? zt.get_fadeSpan() / 864e6 : 0), nt = k.SpaceTimeController.utcToJulian(zt.get_endTime()) + (zt.get_fadeType() === 2 || zt.get_fadeType() === 3 ? zt.get_fadeSpan() / 864e6 : 0);
                        if (k.SpaceTimeController.get_jNow() > rt && k.SpaceTimeController.get_jNow() < nt) {
                          var bt = 1;
                          k.SpaceTimeController.get_jNow() < Bt && (bt = (k.SpaceTimeController.get_jNow() - rt) / (zt.get_fadeSpan() / 864e6)), k.SpaceTimeController.get_jNow() > gt && (bt = (nt - k.SpaceTimeController.get_jNow()) / (zt.get_fadeSpan() / 864e6)), _t.frame.reference || zt.set_astronomical(!0), zt.preDraw(je, ht * bt);
                        }
                      }
                    }
                  if (ft)
                    for (var Et = s.ss.enumerate(s.ss.keys(O.get_allMaps()[lt].childMaps)); Et.moveNext(); ) {
                      var Lt = Et.current, Rt = O.get_allMaps()[lt].childMaps[Lt];
                      (Rt.frame.reference === 18 || Rt.frame.reference === 19) && O._preDraw(je, ht, qe, Rt.get_name(), ft);
                    }
                  je.set_nominalRadius(Ot), je.set_world(Tt), je.set_worldBaseNonRotating(xt);
                }
              }
            }, O.add = function(je, ht) {
              s.ss.keyExists(O.get_layerList(), je.id) || s.ss.keyExists(O.get_allMaps(), je.get_referenceFrame()) && (O.get_layerList()[je.id] = je, O.get_allMaps()[je.get_referenceFrame()].layers.push(je), O._version++, ht && O.loadTree());
            }, O.layerSelectionChanged = function(je) {
              if (O._selectedLayer = je, O._selectedLayer != null)
                if (s.ss.canCast(O._selectedLayer, $e)) {
                  var ht = s.ss.safeCast(O._selectedLayer, $e);
                  ht != null && O.set_currentMap(ht.get_name());
                } else {
                  var qe = s.ss.safeCast(O._selectedLayer, ke.ImageSetLayer);
                  if (qe != null && s.ss.canCast(qe.get_imageSet().get_wcsImage(), Ve.FitsImage))
                    return;
                }
              t.globalScriptInterface.setTimeSlider("left", ""), t.globalScriptInterface.setTimeSlider("right", ""), t.globalScriptInterface.setTimeSlider("title", Le.Language.getLocalizedText(667, "Time Scrubber"));
            }, O.setTimeSliderValue = function(je) {
              var ht = s.ss.safeCast(O._selectedLayer, ke.ImageSetLayer);
              ht != null && s.ss.canCast(ht.get_imageSet().get_wcsImage(), Ve.FitsImage);
            }, O.showLayerMenu = function(je, ht, qe) {
              if (O._lastMenuClick = o.Vector2d.create(ht, qe), O._selectedLayer = je, s.ss.canCast(je, $e) ? O.set_currentMap(je.get_name()) : s.ss.canCast(je, ze.Layer) && O.set_currentMap(je.get_referenceFrame()), s.ss.canCast(je, ze.Layer) && !s.ss.canCast(je, Qe)) {
                var lt = je;
                O._contextMenu = new g.ContextMenuStrip();
                var ft = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(225, "Rename")), _t = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(981, "Expand")), St = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(982, "Collapse")), yt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(428, "Copy")), Ct = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(167, "Delete")), Lt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(960, "Save...")), Vt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(983, "Publish to Community...")), Tt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(458, "Color/Opacity")), xt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(305, "Opacity")), Ot = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(20, "Properties")), Pt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(1291, "Scale/Histogram")), kt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(683, "Lifetime")), zt = new g.ToolStripSeparator(), Bt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(684, "Move to Top")), gt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(685, "Move Up")), rt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(686, "Move Down")), nt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(687, "Move to Bottom")), bt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(957, "VO Table Viewer")), Et = new g.ToolStripSeparator(), Rt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(1294, "Background Image Set"));
                if (Bt.click = O._top_Click, gt.click = O._up_Click, rt.click = O._down_Click, nt.click = O._bottom_Click, Lt.click = O._saveMenu_Click, Vt.click = O._publishMenu_Click, _t.click = O._expand_Click, St.click = O._collapse_Click, yt.click = O._copyMenu_Click, Tt.click = O._colorMenu_Click, Ct.click = O._deleteMenu_Click, ft.click = O._renameMenu_Click, Ot.click = O._propertiesMenu_Click, Pt.click = O.scaleMenu_click, Rt.click = O._defaultImageset_Click, xt.click = O._opacityMenu_Click, kt.click = O._lifeTimeMenu_Click, bt.click = O._showViewer_Click, O._contextMenu.items.push(ft), !lt.get_opened() && lt.getPrimaryUI() != null && lt.getPrimaryUI().get_hasTreeViewNodes() && O._contextMenu.items.push(_t), lt.get_opened() && O._contextMenu.items.push(St), lt.canCopyToClipboard(), O._contextMenu.items.push(Ct), O._contextMenu.items.push(Et), O._contextMenu.items.push(Tt), s.ss.canCast(je, ke.ImageSetLayer)) {
                  O._contextMenu.items.push(Rt);
                  var $t = s.ss.safeCast(je, ke.ImageSetLayer);
                  Rt.checked = $t.get_overrideDefaultLayer();
                }
                if ((s.ss.canCast(je, Ke.SpreadSheetLayer) || s.ss.canCast(je, Te.GreatCirlceRouteLayer)) && O._contextMenu.items.push(Ot), s.ss.canCast(je, $.VoTableLayer) && O._contextMenu.items.push(bt), s.ss.canCast(je, ke.ImageSetLayer)) {
                  var $t = s.ss.safeCast(je, ke.ImageSetLayer);
                  O._contextMenu.items.push(Pt);
                }
                O.get_allMaps()[lt.get_referenceFrame()].layers.length > 1 && (O._contextMenu.items.push(zt), O._contextMenu.items.push(Bt), O._contextMenu.items.push(gt), O._contextMenu.items.push(rt), O._contextMenu.items.push(nt)), O._contextMenu._show(o.Vector2d.create(ht, qe));
              } else if (s.ss.canCast(je, $e)) {
                var pt = s.ss.safeCast(je, $e), Ft = pt.frame.reference.toString() === "Sandbox", Nt = pt.frame.name === "Dome", Kt = pt.frame.name === "Sky";
                if (Nt)
                  return;
                O._contextMenu = new g.ContextMenuStrip();
                var At = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(1298, "Track this frame")), Wt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(1299, "Fly Here")), vt = g.ToolStripMenuItem.create("Show Orbit"), Xt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(674, "New Reference Frame")), qt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(675, "New Layer Group")), ot = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(166, "Add")), Ut = g.ToolStripMenuItem.create("Add Light");
                g.ToolStripMenuItem.create(Le.Language.getLocalizedText(956, "Add OData/table feed as Layer")), g.ToolStripMenuItem.create(Le.Language.getLocalizedText(987, "New WMS Layer"));
                var dt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(1300, "New Lat/Lng Grid")), Je = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(988, "New Great Circle"));
                g.ToolStripMenuItem.create(Le.Language.getLocalizedText(989, "Import Orbital Elements"));
                var mt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(1301, "Add Minor Planet")), wt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(167, "Delete")), jt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(425, "Paste"));
                g.ToolStripMenuItem.create(Le.Language.getLocalizedText(1290, "Add to Timeline")), g.ToolStripMenuItem.create(Le.Language.getLocalizedText(1280, "Add Keyframe"));
                var Gt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(20, "Properties")), Lt = g.ToolStripMenuItem.create(Le.Language.getLocalizedText(990, "Save Layers"));
                g.ToolStripMenuItem.create(Le.Language.getLocalizedText(991, "Publish Layers to Community"));
                var zt = new g.ToolStripSeparator(), Yt = new g.ToolStripSeparator(), Et = new g.ToolStripSeparator(), Qt = g.ToolStripMenuItem.create("As Reference Frame"), tr = g.ToolStripMenuItem.create("As Orbital Line");
                if (At.click = O._trackFrame_Click, Wt.click = O._goTo_Click, Qt.click = O._addMpc_Click, tr.click = O._asOrbitalLines_Click, mt.dropDownItems.push(Qt), mt.dropDownItems.push(tr), ot.click = O._addMenu_Click, qt.click = O._newLayerGroupMenu_Click, jt.click = O._pasteLayer_Click, Xt.click = O._newMenu_Click, wt.click = O._deleteFrameMenu_Click, Gt.click = O._framePropertiesMenu_Click, Je.click = O._addGreatCircle_Click, dt.click = O._addGirdLayer_Click, g.ToolStripMenuItem.create("Extract Orbit Layer"), pt.frame.reference !== 19) {
                  if ((t.globalWWTControl.get_solarSystemMode() | t.globalWWTControl.sandboxMode) === 1) {
                    var rr = !1;
                    if (pt.frame.reference !== 18 && !t.globalWWTControl.sandboxMode)
                      try {
                        var er = pt.frame.reference.toString();
                        if (er !== "Sandbox") {
                          var sr = a.Enums.parse("SolarSystemObjects", er), hr = sr, lr = Math.pow(2, hr);
                          vt.checked = !!(Pe.Settings.get_active().get_planetOrbitsFilter() & lr), vt.click = O._showOrbitPlanet_Click, vt.tag = lr.toString();
                        }
                      } catch {
                      }
                    else
                      !Ft && !Kt && (O._contextMenu.items.push(At), rr = !0), vt.checked = pt.frame.showOrbitPath, vt.click = O._showOrbit_Click;
                    rr && O._contextMenu.items.push(Et), !Kt && !Ft && (O._contextMenu.items.push(vt), O._contextMenu.items.push(Yt)), pt.frame.reference.toString() === "Sandbox" && O._contextMenu.items.push(Ut);
                  }
                  Kt || O._contextMenu.items.push(Xt);
                }
                Kt || (O._contextMenu.items.push(Je), O._contextMenu.items.push(dt)), (pt.frame.reference !== 19 && pt.frame.name === "Sun" || pt.frame.reference === 19 && pt.parent != null && pt.parent.frame.name === "Sun") && O._contextMenu.items.push(mt), pt.frame.reference === 18 && pt.frame.referenceFrameType === 1 && pt.parent != null && pt.parent.frame.name, O._contextMenu.items.push(jt), pt.frame.reference === 19 && O._contextMenu.items.push(wt), pt.frame.reference === 18 && (O._contextMenu.items.push(wt), O._contextMenu.items.push(Gt)), O._contextMenu.items.push(zt), O._contextMenu._show(o.Vector2d.create(ht, qe));
              }
            }, O._publishMenu_Click = function(je, ht) {
            }, O._addGirdLayer_Click = function(je, ht) {
              var qe = new D.GridLayer();
              qe.enabled = !0, qe.set_name("Lat-Lng Grid"), O.get_layerList()[qe.id] = qe, qe.set_referenceFrame(O._currentMap), O.get_allMaps()[O._currentMap].layers.push(qe), O.get_allMaps()[O._currentMap].open = !0, O._version++, O.loadTree();
            }, O._trackFrame_Click = function(je, ht) {
              var qe = O._selectedLayer;
              l.globalRenderContext.set_solarSystemTrack(20), l.globalRenderContext.set_trackingFrame(qe.get_name()), l.globalRenderContext.viewCamera.zoom = l.globalRenderContext.targetCamera.zoom = 1e-9;
            }, O._goTo_Click = function(je, ht) {
            }, O._saveMenu_Click = function(je, ht) {
            }, O._expand_Click = function(je, ht) {
            }, O._collapse_Click = function(je, ht) {
            }, O._copyMenu_Click = function(je, ht) {
              if (O._selectedLayer != null && s.ss.canCast(O._selectedLayer, ze.Layer)) {
                var qe = O._selectedLayer;
                qe.copyToClipboard();
              }
            }, O._newLayerGroupMenu_Click = function(je, ht) {
            }, O._importTLEFile = function(je) {
            }, O._makeLayerGroupNow = function(je) {
              var ht = O._selectedLayer;
              O._makeLayerGroup(je, ht);
            }, O._makeLayerGroup = function(je, ht) {
              var qe = new Se.ReferenceFrame();
              qe.name = je, qe.reference = 19;
              var lt = new $e(qe.name, 19);
              lt.frame = qe, lt.frame._systemGenerated = !1, ht.addChild(lt), lt.frame.parent = ht.get_name(), O.get_allMaps()[qe.name] = lt, O._version++;
            }, O._lifeTimeMenu_Click = function(je, ht) {
            }, O._deleteFrameMenu_Click = function(je, ht) {
            }, O._framePropertiesMenu_Click = function(je, ht) {
              var qe = O._selectedLayer;
              O.get_referenceFramePropsDialog().show(qe.frame, ht);
            }, O._newMenu_Click = function(je, ht) {
              var qe = new Se.ReferenceFrame();
              O.get_frameWizardDialog().show(qe, ht);
            }, O.referenceFrameWizardFinished = function(je) {
              var ht = O._selectedLayer, qe = new $e(je.name, 18);
              s.ss.keyExists(O.get_allMaps(), je.name) || (qe.frame = je, ht.addChild(qe), qe.frame.parent = ht.get_name(), O.get_allMaps()[je.name] = qe, O._version++, O.loadTree());
            }, O.pasteFromTle = function(je, ht) {
              for (var qe = "", lt = "", ft = 0; ft < je.length; ft++)
                je[ft] = s.ss.trim(je[ft]), je[ft].length === 69 && Se.ReferenceFrame.isTLECheckSumGood(je[ft]) && (!qe.length && je[ft].substring(0, 1) === "1" && (qe = je[ft]), !lt.length && je[ft].substring(0, 1) === "2" && (lt = je[ft]));
              return qe.length === 69 && lt.length === 69 ? (ht.fromTLE(qe, lt, 3986004418e5), !0) : !1;
            }, O._opacityMenu_Click = function(je, ht) {
            }, O._defaultImageset_Click = function(je, ht) {
              var qe = s.ss.safeCast(O._selectedLayer, ke.ImageSetLayer);
              qe.set_overrideDefaultLayer(!qe.get_overrideDefaultLayer());
            }, O._propertiesMenu_Click = function(je, ht) {
              if (s.ss.canCast(O._selectedLayer, Ke.SpreadSheetLayer)) {
                var qe = O._selectedLayer;
                O.get_dataVizWizardDialog().show(qe, ht);
              }
              s.ss.canCast(O._selectedLayer, Te.GreatCirlceRouteLayer) && O.get_greatCircleDlg().show(O._selectedLayer, new s.ss.EventArgs());
            }, O._renameMenu_Click = function(je, ht) {
              var qe = O._selectedLayer, lt = new u.SimpleInput(Le.Language.getLocalizedText(225, "Rename"), Le.Language.getLocalizedText(228, "New Name"), qe.get_name(), 32);
              lt.show(O._lastMenuClick, function() {
                s.ss.emptyString(lt.text) || (qe.set_name(lt.text), O._version++, O.loadTree());
              });
            }, O._colorMenu_Click = function(je, ht) {
              var qe = O._selectedLayer, lt = new y.ColorPicker();
              qe.get_color() != null && (lt.color = qe.get_color()), lt.callBack = function() {
                qe.set_color(lt.color);
              }, lt.show(ht);
            }, O._addMenu_Click = function(je, ht) {
            }, O._deleteMenu_Click = function(je, ht) {
              O._deleteSelectedLayer();
            }, O._deleteSelectedLayer = function() {
              if (O._selectedLayer != null && s.ss.canCast(O._selectedLayer, ze.Layer)) {
                var je = O._selectedLayer;
                delete O.get_layerList()[je.id], s.ss.remove(O.get_allMaps()[O.get_currentMap()].layers, je), je.cleanUp(), je.set_version(je.get_version() + 1) - 1, O.loadTree(), O._version++;
              }
            }, O.scaleMenu_click = function(je, ht) {
              var qe = s.ss.safeCast(O._selectedLayer, ke.ImageSetLayer);
              if (qe != null) {
                var lt = new _.Histogram();
                lt.image = qe.getFitsImage(), lt.layer = qe, lt.show(o.Vector2d.create(200, 200));
              }
            }, O._showViewer_Click = function(je, ht) {
              if (s.ss.canCast(O._selectedLayer, $.VoTableLayer)) {
                var qe = s.ss.safeCast(O._selectedLayer, $.VoTableLayer);
                t.globalScriptInterface.displayVoTableLayer(qe);
              }
            }, O._bottom_Click = function(je, ht) {
              var qe = s.ss.safeCast(O._selectedLayer, ze.Layer);
              qe != null && (s.ss.remove(O.get_allMaps()[qe.get_referenceFrame()].layers, qe), O.get_allMaps()[qe.get_referenceFrame()].layers.push(qe)), O._version++, O.loadTree();
            }, O._down_Click = function(je, ht) {
              var qe = s.ss.safeCast(O._selectedLayer, ze.Layer);
              if (qe != null) {
                var lt = O.get_allMaps()[qe.get_referenceFrame()].layers.lastIndexOf(qe);
                lt < O.get_allMaps()[qe.get_referenceFrame()].layers.length - 1 && (s.ss.remove(O.get_allMaps()[qe.get_referenceFrame()].layers, qe), O.get_allMaps()[qe.get_referenceFrame()].layers.splice(lt + 1, 0, qe));
              }
              O._version++, O.loadTree();
            }, O._up_Click = function(je, ht) {
              var qe = s.ss.safeCast(O._selectedLayer, ze.Layer);
              if (qe != null) {
                var lt = O.get_allMaps()[qe.get_referenceFrame()].layers.lastIndexOf(qe);
                lt > 0 && (s.ss.remove(O.get_allMaps()[qe.get_referenceFrame()].layers, qe), O.get_allMaps()[qe.get_referenceFrame()].layers.splice(lt - 1, 0, qe));
              }
              O._version++, O.loadTree();
            }, O._top_Click = function(je, ht) {
              var qe = s.ss.safeCast(O._selectedLayer, ze.Layer);
              qe != null && (s.ss.remove(O.get_allMaps()[qe.get_referenceFrame()].layers, qe), O.get_allMaps()[qe.get_referenceFrame()].layers.splice(0, 0, qe)), O._version++, O.loadTree();
            }, O._pasteLayer_Click = function(je, ht) {
              O.get_dataVizWizardDialog().show(O.get_currentMap(), ht);
            }, O.createSpreadsheetLayer = function(je, ht, qe) {
              var lt = new Ke.SpreadSheetLayer();
              return lt.loadFromString(qe, !1, !1, !1, !0), lt.set_name(ht), O.addSpreadsheetLayer(lt, je), lt;
            }, O.addSpreadsheetLayer = function(je, ht) {
              je.enabled = !0, je.set_referenceFrame(ht), O.add(je, !0);
            }, O._showOrbitPlanet_Click = function(je, ht) {
              try {
                var qe = parseInt(je.tag.toString());
                Pe.Settings.get_globalSettings().get_planetOrbitsFilter() & qe ? Pe.Settings.get_globalSettings().set_planetOrbitsFilter(Pe.Settings.get_globalSettings().get_planetOrbitsFilter() & ~qe) : Pe.Settings.get_globalSettings().set_planetOrbitsFilter(Pe.Settings.get_globalSettings().get_planetOrbitsFilter() | qe);
              } catch {
              }
            }, O._showOrbit_Click = function(je, ht) {
              var qe = s.ss.safeCast(O._selectedLayer, $e);
              qe.frame.showOrbitPath = !qe.frame.showOrbitPath;
            }, O._addGreatCircle_Click = function(je, ht) {
              O._addGreatCircleLayer();
            }, O._addMpc_Click = function(je, ht) {
              var qe = O._selectedLayer, lt = new u.SimpleInput(Le.Language.getLocalizedText(1302, "Minor planet name or designation"), Le.Language.getLocalizedText(238, "Name"), "", 32), ft = !1;
              do
                if (lt.showDialog() === 1)
                  if (s.ss.keyExists(qe.childMaps, lt.text))
                    ft = !0;
                  else
                    try {
                      O._getMpc(lt.text, qe), ft = !1;
                    } catch {
                      ft = !0;
                    }
                else
                  ft = !1;
              while (ft);
            }, O._asOrbitalLines_Click = function(je, ht) {
              var qe = O._selectedLayer, lt = new u.SimpleInput(Le.Language.getLocalizedText(1302, "Minor planet name or designation"), Le.Language.getLocalizedText(238, "Name"), "", 32);
              lt.show(Le.Cursor.get_position(), function() {
                s.ss.keyExists(qe.childMaps, lt.text) || O._getMpcAsTLE(lt.text, qe);
              });
            }, O._getMpcAsTLE = function(je, ht) {
              var qe = new xe.WebFile("https://www.minorplanetcenter.net/db_search/show_object?object_id=" + je);
              qe.onStateChange = function() {
                if (qe.get_state() === 1) {
                  var lt = qe.getText(), ft = lt.indexOf("show-orbit-button"), _t = lt.indexOf("/form", ft), St = lt.substring(ft, _t), yt = je, Ct = new Se.ReferenceFrame();
                  Ct.oblateness = 0, Ct.showOrbitPath = !0, Ct.showAsPoint = !0, Ct.epoch = k.SpaceTimeController.utcToJulian(s.ss.date(O._getValueByID(St, "epoch").substring(0, 10))), Ct.semiMajorAxis = parseFloat(O._getValueByID(St, "a")) * 149598e3 * 1e3, Ct.referenceFrameType = 1, Ct.inclination = parseFloat(O._getValueByID(St, "incl")), Ct.longitudeOfAscendingNode = parseFloat(O._getValueByID(St, "node")), Ct.eccentricity = parseFloat(O._getValueByID(St, "e")), Ct.meanAnomolyAtEpoch = parseFloat(O._getValueByID(St, "m")), Ct.meanDailyMotion = c.ELL.meanMotionFromSemiMajorAxis(parseFloat(O._getValueByID(St, "a"))), Ct.argumentOfPeriapsis = parseFloat(O._getValueByID(St, "peri")), Ct.scale = 1, Ct.semiMajorAxisUnits = 1, Ct.meanRadius = 10, Ct.oblateness = 0;
                  var Lt = yt + `
` + Ct.toTLE();
                  O._loadOrbitsFile(je, Lt, ht.get_name()), O.loadTree();
                }
              }, qe.send();
            }, O._getMpc = function(je, ht) {
              var qe = new xe.WebFile("https://www.minorplanetcenter.net/db_search/show_object?object_id=" + je);
              qe.onStateChange = function() {
                var lt = qe.getText(), ft = lt.indexOf("show-orbit-button"), _t = lt.indexOf("/form", ft), St = lt.substring(ft, _t), yt = je, Ct = new $e(s.ss.trim(yt), 18);
                Ct.frame.oblateness = 0, Ct.frame.showOrbitPath = !0, Ct.frame.showAsPoint = !0, Ct.frame.epoch = k.SpaceTimeController.utcToJulian(s.ss.date(O._getValueByID(St, "epoch").substring(0, 10))), Ct.frame.semiMajorAxis = parseFloat(O._getValueByID(St, "a")) * 149598e3 * 1e3, Ct.frame.referenceFrameType = 1, Ct.frame.inclination = parseFloat(O._getValueByID(St, "incl")), Ct.frame.longitudeOfAscendingNode = parseFloat(O._getValueByID(St, "node")), Ct.frame.eccentricity = parseFloat(O._getValueByID(St, "e")), Ct.frame.meanAnomolyAtEpoch = parseFloat(O._getValueByID(St, "m")), Ct.frame.meanDailyMotion = c.ELL.meanMotionFromSemiMajorAxis(parseFloat(O._getValueByID(St, "a"))), Ct.frame.argumentOfPeriapsis = parseFloat(O._getValueByID(St, "peri")), Ct.frame.scale = 1, Ct.frame.semiMajorAxisUnits = 1, Ct.frame.meanRadius = 10, Ct.frame.oblateness = 0, s.ss.keyExists(O.get_allMaps()[ht.get_name()].childMaps, s.ss.trim(yt)) || O.get_allMaps()[ht.get_name()].addChild(Ct), O.get_allMaps()[Ct.get_name()] = Ct, Ct.frame.parent = ht.get_name(), O._makeLayerGroup("Minor Planet", Ct), O.loadTree();
              };
            }, O._getValueByID = function(je, ht) {
              var qe = je.indexOf('id="' + ht + '"');
              qe = je.indexOf("value=", qe) + 7;
              var lt = je.indexOf('"', qe);
              return je.substr(qe, lt - qe);
            }, O._addGreatCircleLayer = function() {
              var je = new Te.GreatCirlceRouteLayer(), ht = l.globalRenderContext.viewCamera;
              je.set_latStart(ht.lat), je.set_latEnd(ht.lat - 5), je.set_lngStart(ht.lng), je.set_lngEnd(ht.lng + 5), je.set_width(4), je.enabled = !0, je.set_name(Le.Language.getLocalizedText(1144, "Great Circle Route")), O.get_layerList()[je.id] = je, je.set_referenceFrame(O._currentMap), O.get_allMaps()[O._currentMap].layers.push(je), O.get_allMaps()[O._currentMap].open = !0, O._version++, O.loadTree(), O.get_greatCircleDlg().show(je, new s.ss.EventArgs());
            }, O._loadOrbitsFile = function(je, ht, qe) {
              var lt = new We.OrbitLayer();
              return lt.loadString(ht), lt.enabled = !0, lt.set_name(je), O.get_layerList()[lt.id] = lt, lt.set_referenceFrame(qe), O.get_allMaps()[qe].layers.push(lt), O.get_allMaps()[qe].open = !0, O._version++, O.loadTree(), lt;
            };
            var Ue = {};
            (0, a.registerType)("LayerManager", [O, Ue, null]);
            function $e(je, ht) {
              this.childMaps = {}, this.parent = null, this.layers = [], this.open = !1, this.enabled = !0, this.loadedFromTour = !1, this.frame = new Se.ReferenceFrame(), this.set_name(je), this.frame.reference = ht;
              var qe = 6371e3;
              switch (ht) {
                case 0:
                  break;
                case 1:
                  break;
                case 2:
                  break;
                case 3:
                  qe = 696e6;
                  break;
                case 4:
                  qe = 2439700;
                  break;
                case 5:
                  qe = 6051800;
                  break;
                case 6:
                  qe = 6371e3;
                  break;
                case 7:
                  qe = 339e4;
                  break;
                case 8:
                  qe = 69911e3;
                  break;
                case 9:
                  qe = 58232e3;
                  break;
                case 10:
                  qe = 25362e3;
                  break;
                case 11:
                  qe = 24622e3;
                  break;
                case 12:
                  qe = 1161e3;
                  break;
                case 13:
                  qe = 1737100;
                  break;
                case 14:
                  qe = 1821500;
                  break;
                case 15:
                  qe = 1561e3;
                  break;
                case 16:
                  qe = 2631200;
                  break;
                case 17:
                  qe = 2410300;
                  break;
              }
              this.frame.meanRadius = qe;
            }
            var Ze = {
              addChild: function(je) {
                je.parent = this, this.childMaps[je.get_name()] = je;
              },
              get_name: function() {
                return this.frame.name;
              },
              set_name: function(je) {
                return this.frame.name = je, je;
              },
              computeFrame: function(je) {
                this.frame.reference === 18 && this.frame.computeFrame(je);
              },
              toString: function() {
                return this.get_name();
              }
            };
            (0, a.registerType)("LayerMap", [$e, Ze, null]);
            function Qe() {
            }
            var Ae = {};
            (0, a.registerType)("SkyOverlays", [Qe, Ae, null]);
            function Ne() {
            }
            var Be = {};
            (0, a.registerType)("GroundOverlayLayer", [Ne, Be, null]);
            function Ge() {
            }
            var Ye = {};
            (0, a.registerType)("FrameTarget", [Ge, Ye, null]);
          }
        ),
        /***/
        "./esm/layers/layer_ui.js": (
          /*!********************************!*\
            !*** ./esm/layers/layer_ui.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              LayerUI: () => (
                /* binding */
                l
              ),
              /* harmony export */
              LayerUIMenuItem: () => (
                /* binding */
                c
              ),
              /* harmony export */
              LayerUITreeNode: () => (
                /* binding */
                u
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../color.js */
              "./esm/color.js"
            );
            function l() {
            }
            l._type = null;
            var o = {
              get_hasTreeViewNodes: function() {
                return !1;
              },
              getTreeNodes: function() {
                return null;
              },
              getNodeContextMenu: function(g) {
                return null;
              },
              setUICallbacks: function(g) {
              }
            };
            (0, a.registerType)("LayerUI", [l, o, null]);
            function c() {
              this._tag = null, this._isChecked = !1, this._isEnabled = !0, this._subMenus = null;
            }
            var _ = {
              get_name: function() {
                return this._name;
              },
              set_name: function(g) {
                return this._name = g, g;
              },
              get_tag: function() {
                return this._tag;
              },
              set_tag: function(g) {
                return this._tag = g, g;
              },
              get_checked: function() {
                return this._isChecked;
              },
              set_checked: function(g) {
                return this._isChecked = g, g;
              },
              get_enabled: function() {
                return this._isEnabled;
              },
              set_enabled: function(g) {
                return this._isEnabled = g, g;
              },
              add_menuItemSelected: function(g) {
                this.__menuItemSelected = s.ss.bindAdd(this.__menuItemSelected, g);
              },
              remove_menuItemSelected: function(g) {
                this.__menuItemSelected = s.ss.bindSub(this.__menuItemSelected, g);
              },
              fireMenuItemSelected: function() {
                this.__menuItemSelected != null && this.__menuItemSelected(this);
              },
              get_subMenus: function() {
                return this._subMenus == null && (this._subMenus = []), this._subMenus;
              }
            };
            (0, a.registerType)("LayerUIMenuItem", [c, _, null]);
            function u() {
              this._parent = null, this._level = 0, this._open = !1, this._isChecked = !1, this._bold = !1, this._color = t.Colors.get_white(), this._nodes = null;
            }
            var y = {
              add_nodeChecked: function(g) {
                this.__nodeChecked = s.ss.bindAdd(this.__nodeChecked, g);
              },
              remove_nodeChecked: function(g) {
                this.__nodeChecked = s.ss.bindSub(this.__nodeChecked, g);
              },
              fireNodeChecked: function(g) {
                this.__nodeChecked != null && this.__nodeChecked(this, g);
              },
              add_nodeUpdated: function(g) {
                this.__nodeUpdated = s.ss.bindAdd(this.__nodeUpdated, g);
              },
              remove_nodeUpdated: function(g) {
                this.__nodeUpdated = s.ss.bindSub(this.__nodeUpdated, g);
              },
              fireNodeUpdated: function() {
                this.__nodeUpdated != null && this.__nodeUpdated(this);
              },
              add_nodeSelected: function(g) {
                this.__nodeSelected = s.ss.bindAdd(this.__nodeSelected, g);
              },
              remove_nodeSelected: function(g) {
                this.__nodeSelected = s.ss.bindSub(this.__nodeSelected, g);
              },
              fireNodeSelected: function() {
                this.__nodeSelected != null && this.__nodeSelected(this);
              },
              add_nodeActivated: function(g) {
                this.__nodeActivated = s.ss.bindAdd(this.__nodeActivated, g);
              },
              remove_nodeActivated: function(g) {
                this.__nodeActivated = s.ss.bindSub(this.__nodeActivated, g);
              },
              fireNodeActivated: function() {
                this.__nodeActivated != null && this.__nodeActivated(this);
              },
              get_name: function() {
                return this._name;
              },
              set_name: function(g) {
                return this._name !== g && (this._name = g, this.fireNodeUpdated()), g;
              },
              get_parent: function() {
                return this._parent;
              },
              set_parent: function(g) {
                return this._parent = g, g;
              },
              get_level: function() {
                return this._level;
              },
              set_level: function(g) {
                return this._level = g, g;
              },
              get_tag: function() {
                return this._tag;
              },
              set_tag: function(g) {
                return this._tag = g, g;
              },
              get_referenceTag: function() {
                return this._referenceTag;
              },
              set_referenceTag: function(g) {
                return this._referenceTag = g, g;
              },
              get_opened: function() {
                return this._open;
              },
              set_opened: function(g) {
                return this._open !== g && (this._open = g, this.fireNodeUpdated()), g;
              },
              get_checked: function() {
                return this._isChecked;
              },
              set_checked: function(g) {
                return this._isChecked !== g && (this._isChecked = g, this.fireNodeUpdated()), g;
              },
              get_bold: function() {
                return this._bold;
              },
              set_bold: function(g) {
                return this._bold !== g && (this._bold = g, this.fireNodeUpdated()), g;
              },
              get_color: function() {
                return this._color;
              },
              set_color: function(g) {
                return this._color !== g && (this._color = g, this.fireNodeUpdated()), g;
              },
              add: function(g) {
                var Ee = new u();
                return Ee.set_name(g), Ee.set_parent(this), Ee.set_level(this.get_level() + 1), this.get_nodes().push(Ee), Ee;
              },
              get_nodes: function() {
                return this._nodes == null && (this._nodes = []), this._nodes;
              }
            };
            (0, a.registerType)("LayerUITreeNode", [u, y, null]);
          }
        ),
        /***/
        "./esm/layers/manager_dialogs.js": (
          /*!***************************************!*\
            !*** ./esm/layers/manager_dialogs.js ***!
            \***************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              DataVizWizard: () => (
                /* binding */
                g
              ),
              /* harmony export */
              FrameWizard: () => (
                /* binding */
                l
              ),
              /* harmony export */
              GreatCircleDialog: () => (
                /* binding */
                u
              ),
              /* harmony export */
              ReferenceFrameProps: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../utilities/dialog.js */
              "./esm/utilities/dialog.js"
            ), t = n(
              /*! ./layer_manager.js */
              "./esm/layers/layer_manager.js"
            );
            function l() {
              a.Dialog.call(this);
            }
            var o = {
              OK: function(Ve) {
                t.LayerManager.referenceFrameWizardFinished(Ve);
              }
            };
            (0, s.registerType)("FrameWizard", [l, o, a.Dialog]);
            function c() {
              a.Dialog.call(this);
            }
            var _ = {
              OK: function(Ve) {
                t.LayerManager.loadTree();
              }
            };
            (0, s.registerType)("ReferenceFrameProps", [c, _, a.Dialog]);
            function u() {
              a.Dialog.call(this);
            }
            var y = {
              OK: function(Ve) {
              }
            };
            (0, s.registerType)("GreatCircleDialog", [u, y, a.Dialog]);
            function g() {
              a.Dialog.call(this);
            }
            var Ee = {
              OK: function() {
              }
            };
            (0, s.registerType)("DataVizWizard", [g, Ee, a.Dialog]), t.LayerManager._frameWizardDialog = new l(), t.LayerManager._dataVizWizardDialog = new g(), t.LayerManager._referenceFramePropsDialog = new c(), t.LayerManager._greatCircleDialog = new u();
          }
        ),
        /***/
        "./esm/layers/object3d.js": (
          /*!********************************!*\
            !*** ./esm/layers/object3d.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Group: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              Material: () => (
                /* binding */
                b
              ),
              /* harmony export */
              Mesh: () => (
                /* binding */
                D
              ),
              /* harmony export */
              Object3d: () => (
                /* binding */
                We
              ),
              /* harmony export */
              Object3dLayer: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              Object3dLayerUI: () => (
                /* binding */
                Re
              ),
              /* harmony export */
              ObjectNode: () => (
                /* binding */
                $
              ),
              /* harmony export */
              VertexPosition: () => (
                /* binding */
                Fe
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../color.js */
              "./esm/color.js"
            ), l = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), c = n(
              /*! ../graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), _ = n(
              /*! ../graphics/primitives3d.js */
              "./esm/graphics/primitives3d.js"
            ), u = n(
              /*! ../graphics/gl_buffers.js */
              "./esm/graphics/gl_buffers.js"
            ), y = n(
              /*! ../graphics/shaders.js */
              "./esm/graphics/shaders.js"
            ), g = n(
              /*! ../utilities/binary_reader.js */
              "./esm/utilities/binary_reader.js"
            ), Ee = n(
              /*! ../baseplanets.js */
              "./esm/baseplanets.js"
            ), Ve = n(
              /*! ../interfaces.js */
              "./esm/interfaces.js"
            ), Me = n(
              /*! ../settings.js */
              "./esm/settings.js"
            ), B = n(
              /*! ../util.js */
              "./esm/util.js"
            ), Pe = n(
              /*! ./layer.js */
              "./esm/layers/layer.js"
            ), k = n(
              /*! ./layer_ui.js */
              "./esm/layers/layer_ui.js"
            );
            function b() {
              this.specularSharpness = 0, this.opacity = 0, this.isDefault = !1;
            }
            var Le = {};
            (0, a.registerType)("Material", [b, Le, null]);
            function xe() {
              this._primaryUI$1 = null, this._heading$1 = 0, this._flipV$1 = !0, this._flipHandedness$1 = !1, this._smooth$1 = !0, this._twoSidedGeometry$1 = !1, this._pitch$1 = 0, this._roll$1 = 0, this._scale$1 = l.Vector3d.create(1, 1, 1), this._translate$1 = l.Vector3d.create(0, 0, 0), this._lightID$1 = 0, this._dirty$1 = !1, this.objType = !1, this._xHandle$1 = new l.Vector2d(), this._yHandle$1 = new l.Vector2d(), this._zHandle$1 = new l.Vector2d(), this._hprHandles$1 = new Array(6), this._uiScale$1 = 1, this._showEditUi$1 = !1, this._dragMode$1 = 0, this._pntDown$1 = new l.Vector2d(), this._valueOnDown$1 = 0, this._valueOnDown2$1 = 0, this._hitDist$1 = 20, this._lockPreferedAxis$1 = !1, this._preferY$1 = !1, Pe.Layer.call(this);
            }
            xe._translateUI$1 = null, xe._translateUILines$1 = null, xe._scaleUI$1 = null, xe._rotateUi$1 = null, xe._initTranslateUI$1 = function() {
              xe._translateUILines$1 = new _.LineList(), xe._translateUILines$1.timeSeries = !1, xe._translateUILines$1.set_depthBuffered(!1), xe._translateUILines$1.showFarSide = !0, xe._translateUI$1 = new _.TriangleList(), xe._translateUI$1.depthBuffered = !1, xe._translateUI$1.timeSeries = !1, xe._translateUI$1.writeZbuffer = !1;
              for (var O = Math.PI * 2, Ue = O / 45, $e = 0.05, Ze = 0; Ze < O; Ze += Ue) {
                var Qe = l.Vector3d.create(1 - $e * 4, 0, 0), Ae = l.Vector3d.create(1 - $e * 4, Math.cos(Ze) * $e, Math.sin(Ze) * $e), Ne = l.Vector3d.create(1 - $e * 4, Math.cos(Ze + Ue) * $e, Math.sin(Ze + Ue) * $e);
                xe._translateUI$1.addTriangle(Qe, Ae, Ne, t.Colors.get_red(), _.Dates.empty());
              }
              for (var Ze = 0; Ze < O; Ze += Ue) {
                var Qe = l.Vector3d.create(1, 0, 0), Ne = l.Vector3d.create(1 - $e * 4, Math.cos(Ze) * $e, Math.sin(Ze) * $e), Ae = l.Vector3d.create(1 - $e * 4, Math.cos(Ze + Ue) * $e, Math.sin(Ze + Ue) * $e);
                xe._translateUI$1.addTriangle(Qe, Ae, Ne, t.Color.fromArgb(255, 255, Math.max(0, Math.sin(Ze) * 128), Math.max(0, Math.sin(Ze) * 128)), _.Dates.empty());
              }
              xe._translateUILines$1.addLine(l.Vector3d.create(0, 0, 0), l.Vector3d.create(1, 0, 0), t.Colors.get_red(), _.Dates.empty());
              for (var Ze = 0; Ze < O; Ze += Ue) {
                var Qe = l.Vector3d.create(0, 1 - $e * 4, 0), Ne = l.Vector3d.create(Math.cos(Ze) * $e, 1 - $e * 4, Math.sin(Ze) * $e), Ae = l.Vector3d.create(Math.cos(Ze + Ue) * $e, 1 - $e * 4, Math.sin(Ze + Ue) * $e);
                xe._translateUI$1.addTriangle(Qe, Ae, Ne, t.Colors.get_green(), _.Dates.empty());
              }
              for (var Ze = 0; Ze < O; Ze += Ue) {
                var Qe = l.Vector3d.create(0, 1, 0), Ae = l.Vector3d.create(Math.cos(Ze) * $e, 1 - $e * 4, Math.sin(Ze) * $e), Ne = l.Vector3d.create(Math.cos(Ze + Ue) * $e, 1 - $e * 4, Math.sin(Ze + Ue) * $e);
                xe._translateUI$1.addTriangle(Qe, Ae, Ne, t.Color.fromArgb(255, Math.max(0, Math.sin(Ze) * 128), 255, Math.max(0, Math.sin(Ze) * 128)), _.Dates.empty());
              }
              xe._translateUILines$1.addLine(l.Vector3d.create(0, 0, 0), l.Vector3d.create(0, 1, 0), t.Colors.get_green(), _.Dates.empty());
              for (var Ze = 0; Ze < O; Ze += Ue) {
                var Qe = l.Vector3d.create(0, 0, 1 - $e * 4), Ae = l.Vector3d.create(Math.cos(Ze) * $e, Math.sin(Ze) * $e, 1 - $e * 4), Ne = l.Vector3d.create(Math.cos(Ze + Ue) * $e, Math.sin(Ze + Ue) * $e, 1 - $e * 4);
                xe._translateUI$1.addTriangle(Qe, Ae, Ne, t.Colors.get_blue(), _.Dates.empty());
              }
              for (var Ze = 0; Ze < O; Ze += Ue) {
                var Qe = l.Vector3d.create(0, 0, 1), Ne = l.Vector3d.create(Math.cos(Ze) * $e, Math.sin(Ze) * $e, 1 - $e * 4), Ae = l.Vector3d.create(Math.cos(Ze + Ue) * $e, Math.sin(Ze + Ue) * $e, 1 - $e * 4);
                xe._translateUI$1.addTriangle(Qe, Ae, Ne, t.Color.fromArgb(255, Math.max(0, Math.sin(Ze) * 128), Math.max(0, Math.sin(Ze) * 128), 255), _.Dates.empty());
              }
              xe._translateUILines$1.addLine(l.Vector3d.create(0, 0, 0), l.Vector3d.create(0, 0, 1), t.Colors.get_blue(), _.Dates.empty()), xe._initRotateUI$1(), xe._initScaleUI$1();
            }, xe._initScaleUI$1 = function() {
              xe._scaleUI$1 = new _.TriangleList(), xe._scaleUI$1.depthBuffered = !1, xe._scaleUI$1.timeSeries = !1, xe._scaleUI$1.writeZbuffer = !1;
              var O = 0.05;
              xe._makeCube$1(xe._scaleUI$1, l.Vector3d.create(1 - O * 2, 0, 0), O * 2, t.Colors.get_red()), xe._makeCube$1(xe._scaleUI$1, l.Vector3d.create(0, 1 - O * 2, 0), O * 2, t.Colors.get_green()), xe._makeCube$1(xe._scaleUI$1, l.Vector3d.create(0, 0, 1 - O * 2), O * 2, t.Colors.get_blue());
            }, xe._makeCube$1 = function(O, Ue, $e, Ze) {
              var Qe = t.Color.fromArgb(255, s.ss.truncate(Ze.r * 0.6), Ze.g, s.ss.truncate(Ze.b * 0.6)), Ae = t.Color.fromArgb(255, s.ss.truncate(Ze.r * 0.8), s.ss.truncate(Ze.g * 0.8), s.ss.truncate(Ze.b * 0.8));
              O.addQuad(l.Vector3d.create(Ue.x + $e, Ue.y + $e, Ue.z + $e), l.Vector3d.create(Ue.x + $e, Ue.y + $e, Ue.z - $e), l.Vector3d.create(Ue.x - $e, Ue.y + $e, Ue.z + $e), l.Vector3d.create(Ue.x - $e, Ue.y + $e, Ue.z - $e), Ze, _.Dates.empty()), O.addQuad(l.Vector3d.create(Ue.x + $e, Ue.y - $e, Ue.z + $e), l.Vector3d.create(Ue.x - $e, Ue.y - $e, Ue.z + $e), l.Vector3d.create(Ue.x + $e, Ue.y - $e, Ue.z - $e), l.Vector3d.create(Ue.x - $e, Ue.y - $e, Ue.z - $e), Ze, _.Dates.empty()), O.addQuad(l.Vector3d.create(Ue.x - $e, Ue.y + $e, Ue.z + $e), l.Vector3d.create(Ue.x - $e, Ue.y + $e, Ue.z - $e), l.Vector3d.create(Ue.x - $e, Ue.y - $e, Ue.z + $e), l.Vector3d.create(Ue.x - $e, Ue.y - $e, Ue.z - $e), Qe, _.Dates.empty()), O.addQuad(l.Vector3d.create(Ue.x + $e, Ue.y + $e, Ue.z + $e), l.Vector3d.create(Ue.x + $e, Ue.y - $e, Ue.z + $e), l.Vector3d.create(Ue.x + $e, Ue.y + $e, Ue.z - $e), l.Vector3d.create(Ue.x + $e, Ue.y - $e, Ue.z - $e), Qe, _.Dates.empty()), O.addQuad(l.Vector3d.create(Ue.x + $e, Ue.y + $e, Ue.z + $e), l.Vector3d.create(Ue.x - $e, Ue.y + $e, Ue.z + $e), l.Vector3d.create(Ue.x + $e, Ue.y - $e, Ue.z + $e), l.Vector3d.create(Ue.x - $e, Ue.y - $e, Ue.z + $e), Ae, _.Dates.empty()), O.addQuad(l.Vector3d.create(Ue.x + $e, Ue.y + $e, Ue.z - $e), l.Vector3d.create(Ue.x + $e, Ue.y - $e, Ue.z - $e), l.Vector3d.create(Ue.x - $e, Ue.y + $e, Ue.z - $e), l.Vector3d.create(Ue.x - $e, Ue.y - $e, Ue.z - $e), Ae, _.Dates.empty());
            }, xe._initRotateUI$1 = function() {
              xe._rotateUi$1 = new _.TriangleList(), xe._rotateUi$1.depthBuffered = !1, xe._rotateUi$1.timeSeries = !1, xe._rotateUi$1.writeZbuffer = !1;
              for (var O = Math.PI * 2, Ue = O / 40, $e = 0.05, Ze = 0, Qe = 0; Qe < O; Qe += Ue) {
                var Ae = !(Ze % 10), Ne = !((Ze + 1) % 10), Be = l.Vector3d.create($e * (Ae ? 0 : Ne ? 1.5 : 1), Math.cos(Qe), Math.sin(Qe)), Ge = l.Vector3d.create(-$e * (Ae ? 0 : Ne ? 1.5 : 1), Math.cos(Qe), Math.sin(Qe)), Ye = l.Vector3d.create($e * (Ae ? 1.5 : Ne ? 0 : 1), Math.cos(Qe + Ue), Math.sin(Qe + Ue)), je = l.Vector3d.create(-$e * (Ae ? 1.5 : Ne ? 0 : 1), Math.cos(Qe + Ue), Math.sin(Qe + Ue));
                xe._rotateUi$1.addQuad(Be, Ye, Ge, je, t.Color._fromArgbColor(192, t.Colors.get_red()), _.Dates.empty()), Ze++;
              }
              Ze = 0;
              for (var Qe = 0; Qe < O; Qe += Ue) {
                var Ae = !(Ze % 10), Ne = !((Ze + 1) % 10), Be = l.Vector3d.create(Math.cos(Qe), Math.sin(Qe), $e * (Ae ? 0 : Ne ? 1.5 : 1)), Ge = l.Vector3d.create(Math.cos(Qe), Math.sin(Qe), -$e * (Ae ? 0 : Ne ? 1.5 : 1)), Ye = l.Vector3d.create(Math.cos(Qe + Ue), Math.sin(Qe + Ue), $e * (Ae ? 1.5 : Ne ? 0 : 1)), je = l.Vector3d.create(Math.cos(Qe + Ue), Math.sin(Qe + Ue), -$e * (Ae ? 1.5 : Ne ? 0 : 1));
                xe._rotateUi$1.addQuad(Be, Ye, Ge, je, t.Color._fromArgbColor(192, t.Colors.get_blue()), _.Dates.empty()), Ze++;
              }
              Ze = 0;
              for (var Qe = 0; Qe < O; Qe += Ue) {
                var Ae = !(Ze % 10), Ne = !((Ze + 1) % 10), Be = l.Vector3d.create(Math.cos(Qe), $e * (Ae ? 0 : Ne ? 1.5 : 1), Math.sin(Qe)), Ge = l.Vector3d.create(Math.cos(Qe), -$e * (Ae ? 0 : Ne ? 1.5 : 1), Math.sin(Qe)), Ye = l.Vector3d.create(Math.cos(Qe + Ue), $e * (Ae ? 1.5 : Ne ? 0 : 1), Math.sin(Qe + Ue)), je = l.Vector3d.create(Math.cos(Qe + Ue), -$e * (Ae ? 1.5 : Ne ? 0 : 1), Math.sin(Qe + Ue));
                xe._rotateUi$1.addQuad(Be, Ge, Ye, je, t.Color._fromArgbColor(192, t.Colors.get_green()), _.Dates.empty()), Ze++;
              }
              Ze = 0;
              for (var Qe = 0; Qe < O; Qe += Ue) {
                var Ae = !(Ze % 10), Ne = !((Ze + 1) % 10), Be = l.Vector3d.create(-$e * (Ae ? 0 : Ne ? 1.5 : 1), Math.cos(Qe), Math.sin(Qe)), Ge = l.Vector3d.create($e * (Ae ? 0 : Ne ? 1.5 : 1), Math.cos(Qe), Math.sin(Qe)), Ye = l.Vector3d.create(-$e * (Ae ? 1.5 : Ne ? 0 : 1), Math.cos(Qe + Ue), Math.sin(Qe + Ue)), je = l.Vector3d.create($e * (Ae ? 1.5 : Ne ? 0 : 1), Math.cos(Qe + Ue), Math.sin(Qe + Ue));
                xe._rotateUi$1.addQuad(Be, Ye, Ge, je, t.Colors.get_red(), _.Dates.empty()), Ze++;
              }
              Ze = 0;
              for (var Qe = 0; Qe < O; Qe += Ue) {
                var Ae = !(Ze % 10), Ne = !((Ze + 1) % 10), Be = l.Vector3d.create(Math.cos(Qe), Math.sin(Qe), -$e * (Ae ? 0 : Ne ? 1.5 : 1)), Ge = l.Vector3d.create(Math.cos(Qe), Math.sin(Qe), $e * (Ae ? 0 : Ne ? 1.5 : 1)), Ye = l.Vector3d.create(Math.cos(Qe + Ue), Math.sin(Qe + Ue), -$e * (Ae ? 1.5 : Ne ? 0 : 1)), je = l.Vector3d.create(Math.cos(Qe + Ue), Math.sin(Qe + Ue), $e * (Ae ? 1.5 : Ne ? 0 : 1));
                xe._rotateUi$1.addQuad(Be, Ye, Ge, je, t.Colors.get_blue(), _.Dates.empty()), Ze++;
              }
              Ze = 0;
              for (var Qe = 0; Qe < O; Qe += Ue) {
                var Ae = !(Ze % 10), Ne = !((Ze + 1) % 10), Be = l.Vector3d.create(Math.cos(Qe), -$e * (Ae ? 0 : Ne ? 1.5 : 1), Math.sin(Qe)), Ge = l.Vector3d.create(Math.cos(Qe), $e * (Ae ? 0 : Ne ? 1.5 : 1), Math.sin(Qe)), Ye = l.Vector3d.create(Math.cos(Qe + Ue), -$e * (Ae ? 1.5 : Ne ? 0 : 1), Math.sin(Qe + Ue)), je = l.Vector3d.create(Math.cos(Qe + Ue), $e * (Ae ? 1.5 : Ne ? 0 : 1), Math.sin(Qe + Ue));
                xe._rotateUi$1.addQuad(Be, Ge, Ye, je, t.Colors.get_green(), _.Dates.empty()), Ze++;
              }
            };
            var ze = {
              getPrimaryUI: function() {
                return this._primaryUI$1 == null && (this._primaryUI$1 = new Re(this)), this._primaryUI$1;
              },
              get_flipV: function() {
                return this._flipV$1;
              },
              set_flipV: function(O) {
                return this._flipV$1 !== O && (this._flipV$1 = O, this.object3d != null && (this.object3d.flipV = this._flipV$1, this.object3d._reload()), this.version++), O;
              },
              get_flipHandedness: function() {
                return this._flipHandedness$1;
              },
              set_flipHandedness: function(O) {
                return this._flipHandedness$1 !== O && (this._flipHandedness$1 = O, this.object3d != null && (this.object3d.flipHandedness = this._flipHandedness$1, this.object3d._reload()), this.version++), O;
              },
              get_smooth: function() {
                return this._smooth$1;
              },
              set_smooth: function(O) {
                return this._smooth$1 !== O && (this._smooth$1 = O, this.object3d != null && (this.object3d.smooth = this._smooth$1, this.object3d._reload()), this.version++), O;
              },
              get_twoSidedGeometry: function() {
                return this._twoSidedGeometry$1;
              },
              set_twoSidedGeometry: function(O) {
                return this._twoSidedGeometry$1 !== O && (this._twoSidedGeometry$1 = O, this.version++), O;
              },
              get_heading: function() {
                return this._heading$1;
              },
              set_heading: function(O) {
                return this._heading$1 !== O && (this.version++, this._heading$1 = O), O;
              },
              get_pitch: function() {
                return this._pitch$1;
              },
              set_pitch: function(O) {
                return this._pitch$1 !== O && (this.version++, this._pitch$1 = O), O;
              },
              get_roll: function() {
                return this._roll$1;
              },
              set_roll: function(O) {
                return this._roll$1 !== O && (this.version++, this._roll$1 = O), O;
              },
              get_scale: function() {
                return this._scale$1;
              },
              set_scale: function(O) {
                return this._scale$1 !== O && (this.version++, this._scale$1 = O), O;
              },
              get_translate: function() {
                return this._translate$1;
              },
              set_translate: function(O) {
                return this._translate$1 !== O && (this.version++, this._translate$1 = O), O;
              },
              get_lightID: function() {
                return this._lightID$1;
              },
              set_lightID: function(O) {
                return this._lightID$1 = O, O;
              },
              cleanUp: function() {
                this._dirty$1 = !0;
              },
              colorChanged: function() {
                this.object3d != null && (this.object3d.color = this.get_color());
              },
              writeLayerProperties: function(O) {
                O._writeAttributeString("FlipV", this.get_flipV().toString()), O._writeAttributeString("FlipHandedness", this.get_flipHandedness().toString()), O._writeAttributeString("Smooth", this.get_smooth().toString()), O._writeAttributeString("TwoSidedGeometry", this.get_twoSidedGeometry().toString()), O._writeAttributeString("Heading", this.get_heading().toString()), O._writeAttributeString("Pitch", this.get_pitch().toString()), O._writeAttributeString("Roll", this.get_roll().toString()), O._writeAttributeString("Scale", this.get_scale().toString()), O._writeAttributeString("Translate", this.get_translate().toString()), O._writeAttributeString("LightID", this.get_lightID().toString()), O._writeAttributeString("Obj", this.objType.toString());
              },
              getParams: function() {
                var O = new Array(14);
                return O[0] = this._heading$1, O[1] = this._pitch$1, O[2] = this._roll$1, O[3] = this._scale$1.x, O[4] = this._scale$1.y, O[5] = this._scale$1.z, O[6] = this._translate$1.x, O[7] = this._translate$1.y, O[8] = this._translate$1.z, O[9] = this.get_color().r / 255, O[10] = this.get_color().g / 255, O[11] = this.get_color().b / 255, O[12] = this.get_color().a / 255, O[13] = this.get_opacity(), O;
              },
              getParamNames: function() {
                return ["Heading", "Pitch", "Roll", "Scale.X", "Scale.Y", "Scale.Z", "Translate.X", "Translate.Y", "Translate.Z", "Colors.Red", "Colors.Green", "Colors.Blue", "Colors.Alpha", "Opacity"];
              },
              setParams: function(O) {
                if (O.length === 14) {
                  this._heading$1 = O[0], this._pitch$1 = O[1], this._roll$1 = O[2], this._scale$1.x = O[3], this._scale$1.y = O[4], this._scale$1.z = O[5], this._translate$1.x = O[6], this._translate$1.y = O[7], this._translate$1.z = O[8], this.set_opacity(O[13]);
                  var Ue = t.Color.fromArgb(s.ss.truncate(O[12] * 255), s.ss.truncate(O[9] * 255), s.ss.truncate(O[10] * 255), s.ss.truncate(O[11] * 255));
                  this.set_color(Ue);
                }
              },
              add_propertiesChanged: function(O) {
                this.__propertiesChanged$1 = s.ss.bindAdd(this.__propertiesChanged$1, O);
              },
              remove_propertiesChanged: function(O) {
                this.__propertiesChanged$1 = s.ss.bindSub(this.__propertiesChanged$1, O);
              },
              fireChanged: function() {
                this.__propertiesChanged$1 != null && this.__propertiesChanged$1(this, new s.ss.EventArgs());
              },
              getEditUI: function() {
                return s.ss.safeCast(this, Ve.IUiController);
              },
              initializeFromXml: function(O) {
                this.set_flipV(s.ss.boolean(O.attributes.getNamedItem("FlipV").nodeValue)), O.attributes.getNamedItem("FlipHandedness") != null ? this.set_flipHandedness(s.ss.boolean(O.attributes.getNamedItem("FlipHandedness").nodeValue)) : this.set_flipHandedness(!1), O.attributes.getNamedItem("Smooth") != null ? this.set_smooth(s.ss.boolean(O.attributes.getNamedItem("Smooth").nodeValue)) : this.set_smooth(!0), O.attributes.getNamedItem("TwoSidedGeometry") != null ? this.set_twoSidedGeometry(s.ss.boolean(O.attributes.getNamedItem("TwoSidedGeometry").nodeValue)) : this.set_twoSidedGeometry(!1), O.attributes.getNamedItem("Obj") != null ? this.objType = s.ss.boolean(O.attributes.getNamedItem("Obj").nodeValue) : this.objType = !1, this.set_heading(parseFloat(O.attributes.getNamedItem("Heading").nodeValue)), this.set_pitch(parseFloat(O.attributes.getNamedItem("Pitch").nodeValue)), this.set_roll(parseFloat(O.attributes.getNamedItem("Roll").nodeValue)), this.set_scale(l.Vector3d.parse(O.attributes.getNamedItem("Scale").nodeValue)), this.set_translate(l.Vector3d.parse(O.attributes.getNamedItem("Translate").nodeValue)), O.attributes.getNamedItem("LightID") != null && this.set_lightID(parseInt(O.attributes.getNamedItem("LightID").nodeValue));
              },
              draw: function(O, Ue, $e) {
                var Ze = O.get_world(), Qe = l.Matrix3d.multiplyMatrix(l.Matrix3d.multiplyMatrix(l.Matrix3d._rotationZ(-this._roll$1 / 180 * Math.PI), l.Matrix3d._rotationX(-this._pitch$1 / 180 * Math.PI)), l.Matrix3d._rotationY(this._heading$1 / 180 * Math.PI));
                return O.set_world(l.Matrix3d.multiplyMatrix(l.Matrix3d.multiplyMatrix(l.Matrix3d.multiplyMatrix(Qe, l.Matrix3d._scaling(this._scale$1.x, this._scale$1.y, this._scale$1.z)), l.Matrix3d.translation(this._translate$1)), Ze)), O.set_twoSidedLighting(this.get_twoSidedGeometry()), Ee.BasePlanets.drawPointPlanet(O, new l.Vector3d(), 1, t.Colors.get_red(), !1), this._lightID$1 > 0 || this.object3d != null && (this.object3d.color = this.get_color(), this.object3d.render(O, Ue * this.get_opacity())), O.set_twoSidedLighting(!1), O.set_world(Ze), !0;
              },
              addFilesToCabinet: function(O) {
              },
              loadData: function(O, Ue) {
                s.ss.endsWith(Ue.toLowerCase(), ".obj") && (this.objType = !0), this._lightID$1 || (this.objType ? this.object3d = new We(O, s.ss.replaceString(Ue, ".txt", ".obj"), this.get_flipV(), this._flipHandedness$1, !0, this.get_color()) : this.object3d = new We(O, s.ss.replaceString(Ue, ".txt", ".3ds"), this.get_flipV(), this._flipHandedness$1, !0, this.get_color()));
              },
              pointToView: function(O) {
                var Ue = o.globalRenderContext.height, $e = o.globalRenderContext.width, Ze = o.globalRenderContext.width / o.globalRenderContext.height * 1116, Qe = O.x / $e * Ze - (Ze - 1920) / 2, Ae = O.y / Ue * 1116;
                return l.Vector2d.create(Qe, Ae);
              },
              render: function(O) {
                this._showEditUi$1 = !0;
              },
              preRender: function(O) {
                this._showEditUi$1 = !0;
              },
              mouseDown: function(O, Ue) {
                var $e = this.pointToView(l.Vector2d.create(Ue.offsetX, Ue.offsetY));
                this._pntDown$1 = $e;
                var Ze = $e;
                if (Ue.shiftKey) {
                  if (l.Vector2d.subtract(Ze, this._xHandle$1).get_length() < this._hitDist$1)
                    return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.x, !0;
                  if (l.Vector2d.subtract(Ze, this._yHandle$1).get_length() < this._hitDist$1)
                    return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.y, !0;
                  if (l.Vector2d.subtract(Ze, this._zHandle$1).get_length() < this._hitDist$1)
                    return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.z, !0;
                } else {
                  if (l.Vector2d.subtract(Ze, this._xHandle$1).get_length() < this._hitDist$1)
                    return this._dragMode$1 = 1, this._valueOnDown$1 = this._translate$1.x, !0;
                  if (l.Vector2d.subtract(Ze, this._yHandle$1).get_length() < this._hitDist$1)
                    return this._dragMode$1 = 2, this._valueOnDown$1 = this._translate$1.y, !0;
                  if (l.Vector2d.subtract(Ze, this._zHandle$1).get_length() < this._hitDist$1)
                    return this._dragMode$1 = 3, this._valueOnDown$1 = this._translate$1.z, !0;
                }
                for (var Qe = 0; Qe < this._hprHandles$1.length; Qe++)
                  if (l.Vector2d.subtract(Ze, this._hprHandles$1[Qe]).get_length() < this._hitDist$1)
                    switch (Qe) {
                      case 0:
                        return this._dragMode$1 = 4, this._valueOnDown$1 = this._heading$1, this._valueOnDown2$1 = this._pitch$1, !0;
                      case 1:
                        return this._dragMode$1 = 7, this._valueOnDown$1 = this._heading$1, this._valueOnDown2$1 = this._pitch$1, !0;
                      case 2:
                        return this._dragMode$1 = 5, this._valueOnDown$1 = this._pitch$1, this._valueOnDown2$1 = this._roll$1, !0;
                      case 3:
                        return this._dragMode$1 = 8, this._valueOnDown$1 = this._pitch$1, this._valueOnDown2$1 = this._roll$1, !0;
                      case 4:
                        return this._dragMode$1 = 6, this._valueOnDown$1 = this._roll$1, this._valueOnDown2$1 = this._heading$1, !0;
                      case 5:
                        return this._dragMode$1 = 9, this._valueOnDown$1 = this._roll$1, this._valueOnDown2$1 = this._heading$1, !0;
                    }
                return !1;
              },
              mouseUp: function(O, Ue) {
                return this._dragMode$1 ? (this._dragMode$1 = 0, this._lockPreferedAxis$1 = !1, !0) : !1;
              },
              mouseMove: function(O, Ue) {
                var $e = this.pointToView(l.Vector2d.create(Ue.offsetX, Ue.offsetY));
                if (this._dragMode$1) {
                  var Ze = 0, Qe = $e.x - this._pntDown$1.x, Ae = -($e.y - this._pntDown$1.y);
                  switch (this._lockPreferedAxis$1 ? this._preferY$1 ? (Ze = Ae, this._preferY$1 = !0, B.Cursor.set_current(B.Cursors.get_sizeNS())) : (Ze = Qe, this._preferY$1 = !1, B.Cursor.set_current(B.Cursors.get_sizeWE())) : (Math.abs(Qe) > Math.abs(Ae) ? (Ze = Qe, this._preferY$1 = !1) : (Ze = Ae, this._preferY$1 = !0), Ze > 5 && (this._lockPreferedAxis$1 = !0)), this._dragMode$1) {
                    case 0:
                      break;
                    case 1:
                      this._translate$1.x = this._valueOnDown$1 + 12 * this._uiScale$1 * (Ze / o.globalRenderContext.width);
                      break;
                    case 2:
                      this._translate$1.y = this._valueOnDown$1 + 12 * this._uiScale$1 * (Ze / o.globalRenderContext.width);
                      break;
                    case 3:
                      this._translate$1.z = this._valueOnDown$1 + 12 * this._uiScale$1 * (Ze / o.globalRenderContext.width);
                      break;
                    case 4:
                      this._heading$1 = this._valueOnDown$1 - Qe / 4, this._pitch$1 = this._valueOnDown2$1 + Ae / 4;
                      break;
                    case 5:
                      this._pitch$1 = this._valueOnDown$1 + Ae / 4, this._roll$1 = this._valueOnDown2$1 - Qe / 4;
                      break;
                    case 6:
                      this._roll$1 = this._valueOnDown$1 + Ae / 4, this._heading$1 = this._valueOnDown2$1 - Qe / 4;
                      break;
                    case 7:
                      this._heading$1 = this._valueOnDown$1 - Qe / 4, this._pitch$1 = this._valueOnDown2$1 - Ae / 4;
                      break;
                    case 8:
                      this._pitch$1 = this._valueOnDown$1 + Ae / 4, this._roll$1 = this._valueOnDown2$1 + Qe / 4;
                      break;
                    case 9:
                      this._roll$1 = this._valueOnDown$1 - Ae / 4, this._heading$1 = this._valueOnDown2$1 - Qe / 4;
                      break;
                    case 10:
                      this._scale$1.x = this._scale$1.y = this._scale$1.z = this._valueOnDown$1 * Math.pow(2, Ze / 100);
                      break;
                  }
                  return this.fireChanged(), !0;
                } else {
                  var Ne = $e;
                  if (l.Vector2d.subtract(Ne, this._xHandle$1).get_length() < this._hitDist$1 || l.Vector2d.subtract(Ne, this._yHandle$1).get_length() < this._hitDist$1 || l.Vector2d.subtract(Ne, this._zHandle$1).get_length() < this._hitDist$1)
                    return B.Cursor.set_current(B.Cursors.get_sizeAll()), !0;
                  for (var Be = 0; Be < this._hprHandles$1.length; Be++)
                    if (l.Vector2d.subtract(Ne, this._hprHandles$1[Be]).get_length() < this._hitDist$1)
                      return B.Cursor.set_current(B.Cursors.get_sizeAll()), !0;
                }
                return !1;
              },
              mouseClick: function(O, Ue) {
                return !1;
              },
              click: function(O, Ue) {
                return !1;
              },
              mouseDoubleClick: function(O, Ue) {
                return !1;
              },
              keyDown: function(O, Ue) {
                return !1;
              },
              keyUp: function(O, Ue) {
                return !1;
              },
              hover: function(O) {
                return !1;
              }
            };
            (0, a.registerType)("Object3dLayer", [xe, ze, Pe.Layer, Ve.IUiController]);
            function Se() {
              this.startIndex = 0, this.indexCount = 0, this.materialIndex = 0;
            }
            var Te = {};
            (0, a.registerType)("Group", [Se, Te, null]);
            function D() {
              this.boundingSphere = new l.SphereHull();
            }
            D.create = function(O, Ue) {
              var $e = new D();
              $e.vertices = O, $e.indices = Ue;
              for (var Ze = new Array(O.length), Qe = 0; Qe < O.length; ++Qe)
                Ze[Qe] = O[Qe].get_position();
              return $e.boundingSphere = l.ConvexHull.findEnclosingSphereFast(Ze), $e;
            }, D.createTangent = function(O, Ue) {
              var $e = new D();
              $e.tangentVertices = O, $e.indices = Ue;
              for (var Ze = new Array($e.tangentVertices.length), Qe = 0; Qe < $e.tangentVertices.length; ++Qe)
                Ze[Qe] = $e.tangentVertices[Qe].get_position();
              return $e.boundingSphere = l.ConvexHull.findEnclosingSphereFast(Ze), $e;
            };
            var ke = {
              dispose: function() {
                this.vertexBuffer != null && (this.vertexBuffer.dispose(), this.vertexBuffer = null), this.tangentVertexBuffer != null && (this.tangentVertexBuffer.dispose(), this.tangentVertexBuffer = null), this.indexBuffer != null && (this.indexBuffer.dispose(), this.indexBuffer = null);
              },
              setObjects: function(O) {
                this._objects = O;
              },
              // Convert the vertex data to a GPU vertex buffer
              commitToDevice: function() {
                this.vertices != null ? this.vertexBuffer = u.PositionNormalTexturedVertexBuffer.create(this.vertices) : this.tangentVertices != null && (this.tangentVertexBuffer = u.PositionNormalTexturedTangentVertexBuffer.create(this.tangentVertices)), this.indexBuffer = new u.IndexBuffer(new Uint32Array(this.indices));
              },
              beginDrawing: function(O) {
                this.vertexBuffer != null ? O._setVertexBuffer(this.vertexBuffer) : this.tangentVertexBuffer != null && O._setVertexBuffer(this.tangentVertexBuffer), this.indexBuffer != null && O._setIndexBuffer(this.indexBuffer);
              },
              drawSubset: function(O, Ue) {
                this.indexBuffer == null || this._objects == null || this.drawHierarchy(this._objects, Ue, O, 0);
              },
              drawHierarchy: function(O, Ue, $e, Ze) {
                if (!(Ze > 1212))
                  for (var Qe = s.ss.enumerate(O); Qe.moveNext(); ) {
                    var Ae = Qe.current;
                    if (Ae.drawGroup != null && Ae.enabled)
                      for (var Ne = s.ss.enumerate(Ae.drawGroup); Ne.moveNext(); ) {
                        var Be = Ne.current;
                        Be.materialIndex === Ue && $e.gl.drawElements(c.WEBGL.TRIANGLES, Be.indexCount, c.WEBGL.UNSIGNED_INT, Be.startIndex * 4);
                      }
                    this.drawHierarchy(Ae.children, Ue, $e, Ze + 1);
                  }
              },
              get_objects: function() {
                return this._objects;
              },
              set_objects: function(O) {
                return this._objects = O, O;
              }
            };
            (0, a.registerType)("Mesh", [D, ke, null, s.ss.IDisposable]);
            function Fe() {
              this.index = 0;
            }
            var He = {};
            (0, a.registerType)("VertexPosition", [Fe, He, null]);
            function We(O, Ue, $e, Ze, Qe, Ae) {
              this.flipHandedness = !1, this.flipV = !0, this.smooth = !0, this._mesh = null, this._meshMaterials = [], this._meshTextures = [], this._meshSpecularTextures = [], this._meshNormalMaps = [], this.meshFilenames = [], this.color = t.Colors.get_white(), this._textureCache = {}, this._matFiles = new Array(0), this._matFileIndex = 0, this.objects = [], this._matLib = {}, this._textureLib = {}, this._tourDocument = null, this.issLayer = !1, this._readyToRender = !1, this.useCurrentAmbient = !1, this._dirty = !0, this.color = Ae, this.smooth = Qe, this.flipV = $e, this.flipHandedness = Ze, this.filename = Ue, s.ss.endsWith(this.filename.toLowerCase(), ".obj") ? this._loadMeshFromObj(O, this.filename) : this._loadMeshFrom3ds(O, this.filename, 1);
            }
            We._compareVector3 = function(O, Ue) {
              return O.x < Ue.x ? -1 : O.x > Ue.x ? 1 : O.y < Ue.y ? -1 : O.y > Ue.y ? 1 : O.z < Ue.z ? -1 : O.z > Ue.z ? 1 : 0;
            }, We._compareVector = function(O, Ue) {
              return O.x < Ue.x ? -1 : O.x > Ue.x ? 1 : O.y < Ue.y ? -1 : O.y > Ue.y ? 1 : 0;
            }, We._getMaterialID = function(O, Ue) {
              for (var $e = 0, Ze = s.ss.enumerate(Ue); Ze.moveNext(); ) {
                var Qe = Ze.current;
                if (Qe === O)
                  return $e;
                $e++;
              }
              return -1;
            }, We._disposeTextureList = function(O) {
              if (O != null) {
                for (var Ue = 0; Ue < O.length; ++Ue)
                  O[Ue] != null && (O[Ue].dispose(), O[Ue] = null);
                O.length = 0;
              }
            };
            var Ke = {
              _reload: function() {
                this.issLayer || (this.dispose(), s.ss.endsWith(this.filename.toLowerCase(), ".obj") ? this._loadMeshFromObj(this._tourDocument, this.filename) : this._loadMeshFrom3ds(this._tourDocument, this.filename, 1));
              },
              // Calculate per-vertex normals by averaging face normals. Normals of adjacent faces with an
              // angle of greater than crease angle are not included in the average. CalculateVertexNormalsMerged
              // is slower than the other normal generation method, CalculateVertexNormals, but it produces better
              // results. Vertices with identical positions (bot possibly different texture coordinates) are treated
              // as the same vertex for purposes of normal calculation. This allows smooth normals across texture
              // wrap seams.
              //
              // This method returns an array of vertex normals, one for each index in the index list
              _calculateVertexNormalsMerged: function(O, Ue, $e) {
                if (!O.length)
                  return null;
                O.length;
                for (var Ze = Math.floor(Ue.length / 3), Qe = [], Ae = 0; Ae < O.length; ++Ae) {
                  var Ne = new Fe();
                  Ne.position = O[Ae].get_position(), Ne.index = Ae, Qe.push(Ne);
                }
                Qe.sort(function(nt, bt) {
                  return We._compareVector3(nt.position, bt.position);
                });
                for (var Be = new Array(Qe.length), Ge = 0, Ae = 0; Ae < Qe.length; Ae++)
                  (!Ae || We._compareVector3(Qe[Ae].position, Qe[Ae - 1].position)) && ++Ge, Be[Qe[Ae].index] = Ge - 1;
                for (var Ye = new Array(Ge), je = 0; je < Ge; je++)
                  Ye[je] = 0;
                for (var ht = s.ss.enumerate(Ue); ht.moveNext(); ) {
                  var Ae = ht.current, qe = Be[Ae];
                  Ye[qe]++;
                }
                for (var lt = new Array(Ge), je = 0; je < Ge; ++je) {
                  var ft = Ye[je];
                  if (ft > 0) {
                    lt[je] = new Array(ft);
                    for (var _t = 0; _t < ft; _t++)
                      lt[je][_t] = 0;
                  }
                }
                for (var je = 0; je < Ue.length; ++je) {
                  var St = Math.floor(je / 3), qe = Be[Ue[je]];
                  lt[qe][--Ye[qe]] = St;
                }
                for (var yt = new Array(Ze), je = 0; je < Ze; ++je) {
                  var Ct = Ue[je * 3 + 0], Lt = Ue[je * 3 + 1], Vt = Ue[je * 3 + 2], Tt = l.Vector3d.subtractVectors(O[Lt].get_position(), O[Ct].get_position()), xt = l.Vector3d.subtractVectors(O[Vt].get_position(), O[Lt].get_position());
                  yt[je] = l.Vector3d.cross(Tt, xt), yt[je].normalize();
                }
                for (var Ot = Ze * 3, Pt = new Array(Ot), kt = Math.min(0.9999, Math.cos($e)), je = 0; je < Ot; ++je) {
                  for (var Ae = Ue[je], qe = Be[Ae], zt = yt[Math.floor(je / 3)], Bt = new l.Vector3d(), gt = s.ss.enumerate(lt[qe]); gt.moveNext(); ) {
                    var St = gt.current, rt = yt[St];
                    l.Vector3d.dot(zt, rt) > kt && Bt.add(rt);
                  }
                  Pt[je] = Bt, Pt[je].normalize();
                }
                return Pt;
              },
              // Calculate tangent vectors at each vertex. The 'face tangent' is a direction in the plane of the
              // triangle and parallel to the direction of increasing tex coord u, i.e. the partial derivative
              // with respect to u of the triangle's plane equation expressed in terms of the texture coordinate
              // (u, v). Partial derivatives of the triangles containing a vertex are averaged to compute the
              // vertex tangent. Faces are not included in the when the angle formed with the test face is
              // greater than the crease angle, or when the texture texture coordinates are not continuous.
              //
              // This method returns an array of vertex normals, one for each index in the index list
              _calculateVertexTangents: function(O, Ue, $e) {
                if (!O.length)
                  return null;
                O.length;
                for (var Ze = Math.floor(Ue.length / 3), Qe = [], Ae = 0; Ae < O.length; ++Ae) {
                  var Ne = new Fe();
                  Ne.position = O[Ae].get_position(), Ne.index = Ae, Qe.push(Ne);
                }
                Qe.sort(function(At, Wt) {
                  return We._compareVector3(At.position, Wt.position);
                });
                for (var Be = new Array(Qe.length), Ge = 0, Ae = 0; Ae < Qe.length; Ae++)
                  (!Ae || We._compareVector3(Qe[Ae].position, Qe[Ae - 1].position)) && ++Ge, Be[Qe[Ae].index] = Ge - 1;
                for (var Ye = new Array(Ge), je = 0; je < Ge; je++)
                  Ye[je] = 0;
                for (var ht = s.ss.enumerate(Ue); ht.moveNext(); ) {
                  var Ae = ht.current, qe = Be[Ae];
                  Ye[qe]++;
                }
                for (var lt = new Array(Ge), je = 0; je < Ge; ++je) {
                  var ft = Ye[je];
                  if (ft > 0) {
                    lt[je] = new Array(ft);
                    for (var _t = 0; _t < ft; _t++)
                      lt[je][_t] = 0;
                  }
                }
                for (var je = 0; je < Ue.length; ++je) {
                  var St = Math.floor(je / 3), qe = Be[Ue[je]];
                  lt[qe][--Ye[qe]] = St;
                }
                for (var yt = new Array(Ze), je = 0; je < Ze; ++je) {
                  var Ct = O[Ue[je * 3 + 0]], Lt = O[Ue[je * 3 + 1]], Vt = O[Ue[je * 3 + 2]], Tt = l.Vector3d.subtractVectors(Lt.get_position(), Ct.get_position()), xt = l.Vector3d.subtractVectors(Vt.get_position(), Ct.get_position()), Ot = Lt.tu - Ct.tu, Pt = Lt.tv - Ct.tv, kt = Vt.tu - Ct.tu, zt = Vt.tv - Ct.tv, Bt = Ot * zt - Pt * kt;
                  if (Math.abs(Bt) < 1e-6)
                    Tt.lengthSq() > 0 ? (yt[je] = Tt, yt[je].normalize()) : yt[je] = l.Vector3d.create(1, 0, 0);
                  else {
                    var gt = 1 / Bt, rt = zt * gt, nt = -Pt * gt;
                    yt[je] = l.Vector3d.addVectors(l.Vector3d.multiplyScalar(Tt, rt), l.Vector3d.multiplyScalar(xt, nt)), yt[je].normalize();
                  }
                }
                for (var bt = Ze * 3, Et = new Array(bt), Rt = Math.min(0.9999, Math.cos($e)), je = 0; je < bt; ++je) {
                  for (var Ae = Ue[je], qe = Be[Ae], $t = yt[Math.floor(je / 3)], pt = new l.Vector3d(), Ft = s.ss.enumerate(lt[qe]); Ft.moveNext(); ) {
                    var St = Ft.current, Nt = yt[St];
                    l.Vector3d.dot($t, Nt) > Rt && pt.add(Nt);
                  }
                  var Kt = O[Ae].get_normal();
                  Et[je] = l.Vector3d.subtractVectors(pt, l.Vector3d.multiplyScalar(Kt, l.Vector3d.dot(Kt, pt))), Et[je].normalize();
                }
                return Et;
              },
              // Calculate per-vertex normals by averaging face normals. Normals of adjacent faces with an
              // angle of greater than crease angle are not included in the average.
              //
              // This method returns an array of vertex normals, one for each index in the index list
              _calculateVertexNormals: function(O, Ue, $e) {
                for (var Ze = O.length, Qe = Math.floor(Ue.length / 3), Ae = new Array(Ze), Ne = s.ss.enumerate(Ue); Ne.moveNext(); ) {
                  var Be = Ne.current;
                  Ae[Be]++;
                }
                for (var Ge = new Array(Ze), Ye = 0; Ye < Ze; ++Ye) {
                  var je = Ae[Ye];
                  je > 0 && (Ge[Ye] = new Array(je));
                }
                for (var Ye = 0; Ye < Ue.length; ++Ye) {
                  var ht = Math.floor(Ye / 3), Be = Ue[Ye];
                  Ge[Be][--Ae[Be]] = ht;
                }
                for (var qe = new Array(Qe), Ye = 0; Ye < Qe; ++Ye) {
                  var lt = Ue[Ye * 3 + 0], ft = Ue[Ye * 3 + 1], _t = Ue[Ye * 3 + 2], St = l.Vector3d.subtractVectors(O[ft].get_position(), O[lt].get_position()), yt = l.Vector3d.subtractVectors(O[_t].get_position(), O[ft].get_position());
                  qe[Ye] = l.Vector3d.cross(St, yt), qe[Ye].normalize();
                }
                for (var Ct = Qe * 3, Lt = new Array(Ct), Vt = Math.min(0.9999, Math.cos($e)), Ye = 0; Ye < Ct; ++Ye) {
                  for (var Be = Ue[Ye], Tt = qe[Math.floor(Ye / 3)], xt = new l.Vector3d(), Ot = s.ss.enumerate(Ge[Be]); Ot.moveNext(); ) {
                    var ht = Ot.current, Pt = qe[ht];
                    l.Vector3d.dot(Tt, Pt) > Vt && xt.add(Pt);
                  }
                  Lt[Ye] = xt, Lt[Ye].normalize();
                }
                return Lt;
              },
              // Add textures to ensure that we have as many textures as [...]
              _addMaterial: function(O) {
                for (this._meshMaterials.push(O); this._meshTextures.length < this._meshMaterials.length; )
                  this._meshTextures.push(null);
                for (; this._meshSpecularTextures.length < this._meshMaterials.length; )
                  this._meshSpecularTextures.push(null);
                for (; this._meshNormalMaps.length < this._meshMaterials.length; )
                  this._meshNormalMaps.push(null);
              },
              // Load a color chunk from a 3ds file`
              // Colors may be stored in a 3ds file either as 3 floats or 3 bytes
              _loadColorChunk: function(O) {
                var Ue = O.readUInt16(), $e = O.readUInt32(), Ze = t.Colors.get_black();
                if ((Ue === 16 || Ue === 19) && $e === 18) {
                  var Qe = Math.max(0, Math.min(1, O.readSingle())), Ae = Math.max(0, Math.min(1, O.readSingle())), Ne = Math.max(0, Math.min(1, O.readSingle()));
                  Ze = t.Color.fromArgb(255, s.ss.truncate(255 * Qe), s.ss.truncate(255 * Ae), s.ss.truncate(255 * Ne));
                } else
                  (Ue === 17 || Ue === 18) && $e === 9 ? Ze = t.Color.fromArgb(255, O.readByte(), O.readByte(), O.readByte()) : O.readBytes($e - 6);
                return Ze;
              },
              // Load a percentage chunk from a 3ds file
              // A percentage may be stored as either a float or a 16-bit integer
              _loadPercentageChunk: function(O) {
                var Ue = O.readUInt16(), $e = O.readUInt32(), Ze = 0;
                return Ue === 48 && $e === 8 ? Ze = O.readUInt16() : Ue === 49 && $e === 10 ? Ze = O.readSingle() : O.readBytes($e - 6), Ze;
              },
              _loadMeshFromObj: function(O, Ue) {
                var $e = this;
                this.filename = Ue, this._tourDocument = O;
                var Ze = O.getFileBlob(Ue), Qe = new FileReader();
                Qe.onloadend = function(Ae) {
                  $e._matFiles = $e._readObjMaterialsFromBin(s.ss.safeCast(Qe.result, String)), $e._matFileIndex = 0, $e._loadMatLib(s.ss.safeCast(Qe.result, String));
                }, Qe.readAsText(Ze);
              },
              _readObjMaterialsFromBin: function(O) {
                for (var Ue = [], $e = O.split(`
`), Ze = s.ss.enumerate($e); Ze.moveNext(); ) {
                  var Qe = Ze.current, Ae = s.ss.replaceString(Qe, "  ", " "), Ne = s.ss.trim(Ae).split(" ");
                  if (Ne.length > 0)
                    switch (Ne[0]) {
                      case "mtllib":
                        var Be = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1), Ge = Be + Ne[1];
                        Ue.push(Ge);
                        break;
                    }
                }
                return Ue;
              },
              _readObjFromBin: function(O) {
                var Ue = !1, $e = [], Ze = new $();
                Ze.name = "Default";
                var Qe = [], Ae = [], Ne = [], Be = [];
                Ae.push(new l.Vector3d()), Ne.push(new l.Vector3d()), Be.push(new l.Vector2d());
                var Ge = [], Ye = -1, je = new b(), ht = new Se(), qe = 0;
                je = new b(), je.diffuse = this.color, je.ambient = this.color, je.specular = t.Colors.get_white(), je.specularSharpness = 30, je.opacity = 1, je.isDefault = !0, ht.startIndex = 0, ht.indexCount = 0, ht.materialIndex = 0;
                for (var lt = O.split(`
`), ft = s.ss.enumerate(lt); ft.moveNext(); ) {
                  var _t = ft.current, St = s.ss.replaceString(_t, "  ", " "), yt = s.ss.trim(St).split(" ");
                  if (yt.length > 0)
                    switch (yt[0]) {
                      case "mtllib":
                        break;
                      case "usemtl":
                        var Ct = yt[1];
                        if (s.ss.keyExists(this._matLib, Ct) && (Ye === -1 && qe > 0 && (this._addMaterial(je), Ye++), Ye > -1 && (ht.indexCount = qe - ht.startIndex, Ze.drawGroup.push(ht)), Ye++, s.ss.keyExists(this._matLib, Ct))) {
                          if (je = this._matLib[Ct], s.ss.keyExists(this._textureLib, Ct))
                            try {
                              if (!s.ss.keyExists(this._textureCache, this._textureLib[Ct])) {
                                var Lt = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1), Vt = this._tourDocument.getCachedTexture2d(Lt + this._textureLib[Ct]);
                                Vt != null && (this.meshFilenames.push(this._textureLib[Ct]), this._textureCache[this._textureLib[Ct]] = Vt);
                              }
                              this._meshTextures.push(this._textureCache[this._textureLib[Ct]]);
                            } catch {
                            }
                          this._addMaterial(je), ht = new Se(), ht.startIndex = qe, ht.indexCount = 0, ht.materialIndex = Ye;
                        }
                        break;
                      case "v":
                        this.flipHandedness ? Ae.push(l.Vector3d.create(-parseFloat(yt[1]), parseFloat(yt[2]), parseFloat(yt[3]))) : Ae.push(l.Vector3d.create(parseFloat(yt[1]), parseFloat(yt[2]), parseFloat(yt[3])));
                        break;
                      case "vn":
                        this.flipHandedness ? Ne.push(l.Vector3d.create(-parseFloat(yt[1]), parseFloat(yt[2]), parseFloat(yt[3]))) : Ne.push(l.Vector3d.create(parseFloat(yt[1]), parseFloat(yt[2]), parseFloat(yt[3])));
                        break;
                      case "vt":
                        Be.push(l.Vector2d.create(parseFloat(yt[1]), this.flipV ? 1 - parseFloat(yt[2]) : parseFloat(yt[2])));
                        break;
                      case "g":
                      case "o":
                        Ue && (Ye > -1 && (ht.indexCount = qe - ht.startIndex, Ze.drawGroup.push(ht), ht = new Se(), ht.startIndex = qe, ht.indexCount = 0, ht.materialIndex = Ye), Ze = new $()), Ue = !0, yt.length > 1 ? Ze.name = yt[1] : Ze.name = "Unnamed", $e.push(Ze);
                        break;
                      case "f":
                        var Tt = this._getIndexies(yt[1]), xt = this._getIndexies(yt[2]), Ot = this._getIndexies(yt[3]);
                        if (Qe.push(l.PositionNormalTextured.createUV(Ae[Tt[0]], Ne[Tt[2]], Be[Tt[1]])), Qe.push(l.PositionNormalTextured.createUV(Ae[xt[0]], Ne[xt[2]], Be[xt[1]])), Qe.push(l.PositionNormalTextured.createUV(Ae[Ot[0]], Ne[Ot[2]], Be[Ot[1]])), this.flipHandedness ? (Ge.push(qe), Ge.push(qe + 2), Ge.push(qe + 1)) : (Ge.push(qe), Ge.push(qe + 1), Ge.push(qe + 2)), qe += 3, yt.length > 4)
                          for (var Pt = 4; Pt < yt.length; )
                            this.flipHandedness ? (Tt = this._getIndexies(yt[1]), Ot = this._getIndexies(yt[Pt]), xt = this._getIndexies(yt[Pt - 1])) : (Tt = this._getIndexies(yt[1]), xt = this._getIndexies(yt[Pt - 1]), Ot = this._getIndexies(yt[Pt])), Qe.push(l.PositionNormalTextured.createUV(Ae[Tt[0]], Ne[Tt[2]], Be[Tt[1]])), Qe.push(l.PositionNormalTextured.createUV(Ae[xt[0]], Ne[xt[2]], Be[xt[1]])), Qe.push(l.PositionNormalTextured.createUV(Ae[Ot[0]], Ne[Ot[2]], Be[Ot[1]])), Ge.push(qe), Ge.push(qe + 1), Ge.push(qe + 2), qe += 3, Pt++;
                        break;
                    }
                }
                if (Ue || $e.push(Ze), Ye === -1 && qe > 0 && (this._addMaterial(je), Ye++), Ye > -1 && (ht.indexCount = qe - ht.startIndex, Ze.drawGroup.push(ht)), Ne.length < 2) {
                  for (var kt = Math.PI / 180, zt = this.smooth ? 170 * kt : 45 * kt, Bt = this._calculateVertexNormalsMerged(Qe, Ge, zt), gt = [], rt = Ge.length, nt = 0; nt < rt; ++nt) {
                    var bt = Qe[Ge[nt]];
                    bt.set_normal(Bt[nt]), gt.push(bt);
                  }
                  Qe = gt;
                }
                this._mesh = D.create(Qe, Ge);
                var Et = new $();
                Et.name = "Root", Et.parent = null, Et.level = -1, Et.drawGroup = null, Et.children = $e, this.objects = [], this.objects.push(Et), this._mesh.setObjects(this.objects), this._mesh.commitToDevice(), this._dirty = !1, this._readyToRender = !0;
              },
              _loadMatLib: function(O) {
                var Ue = this;
                if (this._matFileIndex < this._matFiles.length) {
                  var $e = this._matFiles[this._matFileIndex++], Ze = this._tourDocument.getFileBlob($e), Qe = new FileReader();
                  Qe.onloadend = function(Ae) {
                    Ue._readMatLibFromBin(s.ss.safeCast(Qe.result, String)), Ue._loadMatLib(O);
                  }, Qe.readAsText(Ze);
                } else
                  this._readObjFromBin(O);
              },
              _readMatLibFromBin: function(O) {
                try {
                  var Ue = new b(), $e = "";
                  this._matLib = {}, this._textureLib = {};
                  for (var Ze = O.split(`
`), Qe = s.ss.enumerate(Ze); Qe.moveNext(); ) {
                    var Ae = Qe.current, Ne = Ae, Be = s.ss.trim(Ne).split(" ");
                    if (Be.length > 0)
                      switch (Be[0]) {
                        case "newmtl":
                          s.ss.emptyString($e) || (this._matLib[$e] = Ue), Ue = new b(), Ue.diffuse = t.Colors.get_white(), Ue.ambient = t.Colors.get_white(), Ue.specular = t.Colors.get_black(), Ue.specularSharpness = 30, Ue.opacity = 1, $e = Be[1];
                          break;
                        case "Ka":
                          Ue.ambient = t.Color.fromArgb(255, Math.min(parseFloat(Be[1]) * 255, 255), Math.min(parseFloat(Be[2]) * 255, 255), Math.min(parseFloat(Be[3]) * 255, 255));
                          break;
                        case "map_Kd":
                          Ue.diffuse = t.Colors.get_white();
                          for (var Ge = Be[1], Ye = 2; Ye < Be.length; Ye++)
                            Ge += " " + Be[Ye];
                          var je = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                          Ge = s.ss.replaceString(Ge, "/", "\\"), Ge.indexOf("\\") !== -1 && (Ge = Ge.substring(Ge.lastIndexOf("\\") + 1)), this._textureLib[$e] = Ge;
                          break;
                        case "Kd":
                          Ue.diffuse = t.Color.fromArgb(255, Math.min(parseFloat(Be[1]) * 255, 255), Math.min(parseFloat(Be[2]) * 255, 255), Math.min(parseFloat(Be[3]) * 255, 255));
                          break;
                        case "Ks":
                          Ue.specular = t.Color.fromArgb(255, Math.min(parseFloat(Be[1]) * 255, 255), Math.min(parseFloat(Be[2]) * 255, 255), Math.min(parseFloat(Be[3]) * 255, 255));
                          break;
                        case "d":
                          Ue.opacity = parseFloat(Be[1]);
                          break;
                        case "Tr":
                          Ue.opacity = 1 - parseFloat(Be[1]);
                          break;
                        case "illum":
                          var ht = parseInt(Be[1]);
                          break;
                        case "sharpness":
                          Ue.specularSharpness = parseFloat(Be[1]);
                          break;
                        case "Ns":
                          Ue.specularSharpness = 1 + 2 * parseFloat(Be[1]), Ue.specularSharpness = Math.max(10, Ue.specularSharpness);
                          break;
                      }
                  }
                  s.ss.emptyString($e) || (this._matLib[$e] = Ue);
                } catch {
                }
              },
              _getIndexies: function(O) {
                var Ue = s.ss.trim(O).split("/"), $e = new Array(3);
                return s.ss.emptyString(O) || (Ue.length > 0 && ($e[0] = parseInt(Ue[0])), Ue.length > 1 && (s.ss.emptyString(Ue[1]) ? $e[1] = 0 : $e[1] = parseInt(Ue[1])), Ue.length > 2 && ($e[2] = parseInt(Ue[2]))), $e;
              },
              _loadMeshFrom3ds: function(O, Ue, $e) {
                var Ze = this;
                this._tourDocument = O;
                var Qe = O.getFileBlob(Ue), Ae = new FileReader();
                Ae.onloadend = function(Ne) {
                  Ze._read3dsFromBin(new g.BinaryReader(new Uint8Array(Ae.result)), $e);
                }, Ae.readAsArrayBuffer(Qe);
              },
              _read3dsFromBin: function(O, Ue) {
                for (var $e, Ze, Qe, Ae = "", Ne = "", Be = 0, Ge = 0, Ye = [], je = [], ht = [], qe = -1, lt = new b(), ft = 0, _t = 0, St = !1, yt = !1, Ct = 0, Lt = 0, Vt = 0, Tt = [], xt = null, Ot = [], Pt = [], kt = {}, zt = O.get_length() - 1, Bt = 0, gt = 0; O.get_position() < zt && !St; )
                  switch (Ze = O.readUInt16(), Qe = O.readUInt32(), Ze) {
                    case 19789:
                      break;
                    case 15677:
                      break;
                    case 16384:
                      Ae = "";
                      var rt;
                      do
                        rt = O.readByte(), rt > 0 && (Ae += String.fromCharCode(rt));
                      while (rt);
                      xt = new $(), xt.name = Ae, Tt.push(xt), s.ss.keyExists(kt, xt.name) || (kt[xt.name] = xt);
                      break;
                    case 16640:
                      Bt = Ye.length, gt = Math.floor(je.length / 3);
                      break;
                    case 16656:
                      for (Ge = O.readUInt16(), $e = 0; $e < Ge; $e++) {
                        var nt = O.readSingle() - Ct, bt = O.readSingle() - Lt, Et = O.readSingle() - Vt, Rt = l.PositionNormalTextured._create(nt * Ue, Et * Ue, bt * Ue, 0, 0, 0, 0, 0);
                        Ye.push(Rt);
                      }
                      break;
                    case 16672:
                      var Nt = O.readUInt16();
                      for (Be += Nt, $e = 0; $e < Nt; $e++) {
                        var $t = O.readUInt16() + Bt, pt = O.readUInt16() + Bt, Ft = O.readUInt16() + Bt;
                        je.push(Ft), je.push(pt), je.push($t), O.readUInt16();
                      }
                      break;
                    case 16688:
                      Ne = "", $e = 0;
                      var wt;
                      do
                        wt = O.readByte(), wt > 0 && (Ne += String.fromCharCode(wt)), $e++;
                      while (wt);
                      var Nt = O.readUInt16(), Kt = new Array(Nt);
                      for (ft = We._getMaterialID(Ne, ht), $e = 0; $e < Nt; $e++)
                        Kt[$e] = O.readUInt16() + gt;
                      xt.applyLists.push(Kt), xt.applyListsIndex.push(ft);
                      break;
                    case 16704:
                      for (_t = O.readUInt16(), $e = 0; $e < _t; $e++) {
                        var Rt = Ye[Bt + $e], At = l.Vector2d.create(O.readSingle(), this.flipV ? 1 - O.readSingle() : O.readSingle());
                        Ye[Bt + $e] = l.PositionNormalTextured.createUV(Rt.get_position(), new l.Vector3d(), At);
                      }
                      break;
                    case 16736:
                      var Wt = new Array(12);
                      for ($e = 0; $e < 12; $e++)
                        Wt[$e] = O.readSingle();
                      s.ss.keyExists(kt, Ae) && (kt[Ae].localMat = l.Matrix3d.create(Wt[0], Wt[1], Wt[2], 0, Wt[3], Wt[4], Wt[5], 0, Wt[6], Wt[7], Wt[8], 0, Wt[9], Wt[10], Wt[11], 1), kt[Ae].localMat.invert());
                      break;
                    case 45055:
                      break;
                    case 40960:
                      var vt = "";
                      $e = 0;
                      var Ut;
                      do
                        Ut = O.readByte(), Ut > 0 && (vt += String.fromCharCode(Ut)), $e++;
                      while (Ut);
                      ht.push(vt), qe > -1 && this._addMaterial(lt), qe++, lt = new b(), lt.diffuse = t.Colors.get_white(), lt.ambient = t.Colors.get_white(), lt.specular = t.Colors.get_black(), lt.specularSharpness = 30, lt.opacity = 1;
                      break;
                    case 40976:
                      lt.ambient = this._loadColorChunk(O);
                      break;
                    case 40992:
                      lt.diffuse = this._loadColorChunk(O);
                      break;
                    case 41008:
                      lt.specular = this._loadColorChunk(O);
                      break;
                    case 41024:
                      lt.specularSharpness = 1 + 2 * this._loadPercentageChunk(O), lt.specularSharpness = Math.max(10, lt.specularSharpness);
                      break;
                    case 41472:
                      break;
                    case 41728:
                      var ot = "";
                      $e = 0;
                      var Ut;
                      do
                        Ut = O.readByte(), Ut > 0 && (ot += String.fromCharCode(Ut)), $e++;
                      while (Ut);
                      var dt = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                      try {
                        var Xt = this._tourDocument.getCachedTexture2d(dt + ot);
                        Xt != null ? (this._meshTextures.push(Xt), this.meshFilenames.push(ot), lt.diffuse = t.Colors.get_white()) : this._meshTextures.push(null);
                      } catch {
                        this._meshTextures.push(null);
                      }
                      break;
                    case 41520:
                      this._loadPercentageChunk(O), O.readUInt16(), O.readUInt32();
                      var ot = "";
                      $e = 0;
                      var Ut;
                      do
                        Ut = O.readByte(), Ut > 0 && (ot += String.fromCharCode(Ut)), $e++;
                      while (Ut);
                      var dt = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                      try {
                        var Xt = this._tourDocument.getCachedTexture2d(dt + ot);
                        Xt != null ? (this._meshNormalMaps.push(Xt), this.meshFilenames.push(ot), yt = !0) : this._meshNormalMaps.push(null);
                      } catch {
                        this._meshNormalMaps.push(null);
                      }
                      break;
                    case 41476:
                      var qt = this._loadPercentageChunk(O);
                      O.readUInt16(), O.readUInt32();
                      var ot = "";
                      $e = 0;
                      var Ut;
                      do
                        Ut = O.readByte(), Ut > 0 && (ot += String.fromCharCode(Ut)), $e++;
                      while (Ut);
                      var dt = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                      try {
                        var Xt = this._tourDocument.getCachedTexture2d(dt + ot);
                        if (Xt != null) {
                          this._meshSpecularTextures.push(Xt), this.meshFilenames.push(ot);
                          var Je = s.ss.truncate(255.99 * qt / 100);
                          lt.specular = t.Color.fromArgb(255, Je, Je, Je);
                        } else
                          this._meshSpecularTextures.push(null);
                      } catch {
                        this._meshSpecularTextures.push(null);
                      }
                      break;
                    case 45056:
                      break;
                    case 45058:
                      break;
                    case 45072:
                      Ae = "", $e = 0;
                      var wt;
                      do
                        wt = O.readByte(), wt > 0 && (Ae += String.fromCharCode(wt)), $e++;
                      while (wt);
                      O.readUInt16(), O.readUInt16();
                      var mt = O.readUInt16();
                      mt === 65535 && (mt = -1), s.ss.startsWith(Ae, "$") || Pt.push(Ae), Ot.push(mt), s.ss.keyExists(kt, Ae) && (kt[Ae].level = mt);
                      break;
                    case 45073:
                      Ae = "", $e = 0;
                      var wt;
                      do
                        wt = O.readByte(), wt > 0 && (Ae += String.fromCharCode(wt)), $e++;
                      while (wt);
                      Pt.push("$$$" + Ae);
                      break;
                    case 45075:
                      var jt = new Array(3);
                      for ($e = 0; $e < 3; $e++)
                        jt[$e] = O.readSingle();
                      s.ss.keyExists(kt, Ae) && (kt[Ae].pivotPoint = l.Vector3d.create(-jt[0], -jt[1], -jt[2]));
                      break;
                    case 45088:
                      var Gt = new Array(8);
                      for ($e = 0; $e < 8; $e++)
                        Gt[$e] = O.readSingle();
                      break;
                    default:
                      O.seekRelative(Qe - 6);
                      break;
                  }
                O.close(), qe > -1 && this._addMaterial(lt);
                for (var Yt = Math.PI / 180, Qt = this.smooth ? 70 * Yt : 45 * Yt, tr = this._calculateVertexNormalsMerged(Ye, je, Qt), rr = [], er = Be * 3, sr = 0; sr < er; ++sr) {
                  var hr = Ye[je[sr]];
                  hr.set_normal(tr[sr]), rr.push(hr);
                }
                for (var lr = [], vr = s.ss.enumerate(Tt); vr.moveNext(); ) {
                  var fr = vr.current, or = [];
                  for ($e = 0; $e < fr.applyLists.length; $e++) {
                    for (var dr = fr.applyListsIndex[$e], cr = lr.length, Sr = s.ss.enumerate(fr.applyLists[$e]); Sr.moveNext(); ) {
                      var ur = Sr.current;
                      lr.push(ur * 3), lr.push(ur * 3 + 1), lr.push(ur * 3 + 2);
                    }
                    var gr = new Se();
                    gr.startIndex = cr, gr.indexCount = fr.applyLists[$e].length * 3, gr.materialIndex = dr, or.push(gr);
                  }
                  fr.drawGroup = or;
                }
                var Cr = new s.ss.Stack(), kr = [], Ar = new $();
                Ar.name = "Root", Ar.parent = null, Ar.level = -1, Ar.drawGroup = null;
                var Xe = -1;
                for (Cr.push(Ar), kr.push(Ar), $e = 0; $e < Ot.length; $e++) {
                  var mt = Ot[$e];
                  if (mt <= Xe) {
                    for (; mt <= Cr.peek().level && Cr.count > 1; )
                      Cr.pop();
                    Xe = mt;
                  }
                  if (s.ss.startsWith(Pt[$e], "$$$")) {
                    var ut = new $();
                    ut.name = s.ss.replaceString(Pt[$e], "$$$", ""), ut.parent = Cr.peek(), ut.parent.children.push(ut), ut.level = Xe = mt, ut.drawGroup = null, Cr.push(ut);
                  } else
                    kt[Pt[$e]].level = Xe = mt, kt[Pt[$e]].parent = Cr.peek(), kt[Pt[$e]].parent.children.push(kt[Pt[$e]]), Cr.push(kt[Pt[$e]]);
                }
                if (!Ot.length)
                  for (var ct = s.ss.enumerate(Tt); ct.moveNext(); ) {
                    var fr = ct.current;
                    Ar.children.push(fr), fr.parent = Ar;
                  }
                if (yt) {
                  for (var Mt = [], Dt = 0; Dt < er; ++Dt)
                    Mt.push(Dt);
                  for (var It = this._calculateVertexTangents(rr, Mt, Qt), Ht = new Array(rr.length), sr = 0, Zt = s.ss.enumerate(rr); Zt.moveNext(); ) {
                    var hr = Zt.current, ir = new l.PositionNormalTexturedTangent(hr.get_position(), hr.get_normal(), l.Vector2d.create(hr.tu, hr.tv), It[sr]);
                    Ht[sr] = ir, ++sr;
                  }
                  this._mesh = D.createTangent(Ht, lr);
                } else
                  this._mesh = D.create(rr, lr);
                this.objects = kr, this._mesh.setObjects(kr), this._mesh.commitToDevice(), this._dirty = !1, this._readyToRender = !0;
              },
              _offsetObjects: function(O, Ue, $e, Ze) {
                for (var Qe = s.ss.enumerate(Ue); Qe.moveNext(); ) {
                  var Ae = Qe.current, Ne = Ae.localMat;
                  this._offsetObjects(O, Ae.children, Ne, l.Vector3d.addVectors(Ae.pivotPoint, Ze));
                  for (var Be = s.ss.enumerate(Ae.drawGroup); Be.moveNext(); )
                    for (var Ge = Be.current, Ye = Ge.startIndex + Ge.indexCount, je = Ge.startIndex; je < Ye; je++) {
                      var ht = O[je];
                      ht.set_position(l.Vector3d.addVectors(ht.get_position(), l.Vector3d.addVectors(Ae.pivotPoint, Ze))), O[je] = ht;
                    }
                }
              },
              // Set up lighting state to account for:
              //   - Light reflected from a nearby planet
              //   - Shadows cast by nearby planets
              setupLighting: function(O) {
                var Ue = l.Vector3d.create(O.get_world().get_offsetX(), O.get_world().get_offsetY(), O.get_world().get_offsetZ()), $e = l.Vector3d.subtractVectors(Ue, O.get_reflectedLightPosition()), Ze = l.Vector3d.subtractVectors(O.get_sunPosition(), O.get_reflectedLightPosition()), Qe = Ze.length() <= 0 ? 1 : l.Vector3d.dot($e, Ze) / ($e.length() * Ze.length()), Ae = Math.max(0, Qe);
                Ae = Math.sqrt(Ae);
                var Ne = 0, Be = 1;
                if (O.get_occludingPlanetRadius() > 0) {
                  var Ge = l.Vector3d.subtractVectors(Ue, O.get_occludingPlanetPosition()).length() - O.get_occludingPlanetRadius();
                  Ne = Math.max(0, Math.min(1, 1 - Ge / O.get_occludingPlanetRadius() * 300)), Ae *= 1 - Ne;
                  var Ye = l.Vector3d.subtractVectors(O.get_occludingPlanetPosition(), O.get_sunPosition()), je = l.Vector3d.subtractVectors(O.get_occludingPlanetPosition(), Ue), ht = l.Vector3d.create(-je.x, -je.y, -je.z);
                  ht.normalize(), O.set_hemisphereLightUp(ht);
                  var qe = l.Vector3d.subtractVectors(O.get_sunPosition(), Ue), lt = Ye.length(), ft = -l.Vector3d.dot(qe, Ye) / (lt * lt);
                  if (ft > 1) {
                    var _t = l.Vector3d.addVectors(O.get_sunPosition(), l.Vector3d.multiplyScalar(Ye, ft)), St = l.Vector3d.subtractVectors(_t, Ue).length();
                    l.Vector3d.subtractVectors(_t, O.get_sunPosition()).length();
                    var yt = 4645784e-9, Ct = O.get_occludingPlanetRadius() + (ft - 1) * (O.get_occludingPlanetRadius() + yt), Lt = O.get_occludingPlanetRadius() + (ft - 1) * (O.get_occludingPlanetRadius() - yt);
                    if (St < Ct) {
                      var Vt = 0;
                      if (Lt < 0) {
                        var Tt = Math.pow(1 / (1 - Lt), 2);
                        Lt = 0, Vt = 1 - Tt;
                      }
                      var xt = Math.max(0, Lt);
                      Be = Math.max(Vt, (St - xt) / (Ct - xt));
                      var Ot = s.ss.truncate(255.99 * Be);
                      O.set_sunlightColor(t.Color.fromArgb(255, Ot, Ot, Ot)), Ne *= Be;
                    }
                  }
                }
                O.set_reflectedLightColor(t.Color.fromArgb(255, s.ss.truncate(O.get_reflectedLightColor().r * Ae), s.ss.truncate(O.get_reflectedLightColor().g * Ae), s.ss.truncate(O.get_reflectedLightColor().b * Ae))), O.set_hemisphereLightColor(t.Color.fromArgb(255, s.ss.truncate(O.get_hemisphereLightColor().r * Ne), s.ss.truncate(O.get_hemisphereLightColor().g * Ne), s.ss.truncate(O.get_hemisphereLightColor().b * Ne)));
              },
              render: function(O, Ue) {
                if (this._readyToRender) {
                  this._dirty && !this.issLayer && this._reload();
                  var $e = O.get_world(), Ze = this._mesh.boundingSphere.center, Qe = 1;
                  this._mesh.boundingSphere.radius > 0 && (Qe = 1 / this._mesh.boundingSphere.radius), O.set_world(l.Matrix3d.multiplyMatrix(l.Matrix3d.multiplyMatrix(l.Matrix3d.translation(l.Vector3d.create(-Ze.x, -Ze.y, -Ze.z)), l.Matrix3d._scaling(Qe, Qe, Qe)), $e));
                  var Ae = l.Matrix3d.multiplyMatrix(O.get_world(), O.get_view()), Ne = Ae.transform(l.Vector3d.get_empty()), Be = Math.sqrt(Ae.get_m11() * Ae.get_m11() + Ae.get_m22() * Ae.get_m22() + Ae.get_m33() * Ae.get_m33()) / Qe, Ge = Ne.length(), Ye = Be, je = s.ss.truncate(O.height), ht = O.get_projection().get_m11(), qe = O.get_projection().get_m34(), lt = O.get_projection().get_m44(), ft = Math.abs(qe) * Ge + lt, _t = ht / ft * je, St = Ye * _t;
                  if (!(St < 0.5)) {
                    var yt = O.get_sunlightColor(), Ct = O.get_reflectedLightColor(), Lt = O.get_hemisphereLightColor();
                    if (Me.Settings.get_current().get_solarSystemLighting() ? (this.setupLighting(O), this.useCurrentAmbient || O.set_ambientLightColor(t.Color.fromArgb(255, 11, 11, 11))) : (O.set_sunlightColor(t.Colors.get_black()), O.set_reflectedLightColor(t.Colors.get_black()), O.set_hemisphereLightColor(t.Colors.get_black()), O.set_ambientLightColor(t.Colors.get_white())), this._mesh != null) {
                      y.ModelShader.minLightingBrightness = 0.1;
                      var Vt = this._meshMaterials.length;
                      if (this._mesh.beginDrawing(O), Vt > 0)
                        for (var Tt = 0; Tt < this._meshMaterials.length; Tt++) {
                          if (this._meshMaterials[Tt].isDefault) {
                            var xt = this._meshMaterials[Tt];
                            xt.diffuse = this.color, xt.ambient = this.color, this._meshMaterials[Tt] = xt;
                          }
                          O.setMaterial(this._meshMaterials[Tt], this._meshTextures[Tt], this._meshSpecularTextures[Tt], this._meshNormalMaps[Tt], Ue), this._mesh.vertexBuffer != null ? y.ModelShader.use(O, this._mesh.vertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[Tt] != null ? this._meshTextures[Tt].texture2d : null, Ue, !1, 32) : y.ModelShader.use(O, this._mesh.tangentVertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[Tt] != null ? this._meshTextures[Tt].texture2d : null, Ue, !1, 44), O.preDraw(), this._mesh.drawSubset(O, Tt);
                        }
                      else {
                        O.preDraw();
                        for (var Tt = 0; Tt < this._meshTextures.length; Tt++)
                          this._meshTextures[Tt] != null && (O.set_mainTexture(this._meshTextures[Tt]), this._mesh.vertexBuffer != null ? y.ModelShader.use(O, this._mesh.vertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[Tt] != null ? this._meshTextures[Tt].texture2d : null, Ue, !1, 32) : y.ModelShader.use(O, this._mesh.tangentVertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[Tt] != null ? this._meshTextures[Tt].texture2d : null, Ue, !1, 44)), O.preDraw(), this._mesh.drawSubset(O, Tt);
                      }
                      O.set_world($e), O.set_sunlightColor(yt), O.set_reflectedLightColor(Ct), O.set_hemisphereLightColor(Lt), O.set_ambientLightColor(t.Colors.get_black());
                    }
                  }
                }
              },
              dispose: function() {
                this._mesh != null && (this._mesh.dispose(), this._mesh = null);
                for (var O = s.ss.enumerate(s.ss.keys(this._textureCache)); O.moveNext(); ) {
                  var Ue = O.current, $e = this._textureCache[Ue];
                  $e != null && $e.dispose();
                }
                s.ss.clearKeys(this._textureCache), We._disposeTextureList(this._meshTextures), We._disposeTextureList(this._meshSpecularTextures), We._disposeTextureList(this._meshNormalMaps), this._meshMaterials.length = 0, this._dirty = !0;
              }
            };
            (0, a.registerType)("Object3d", [We, Ke, null]);
            function $() {
              this.level = -1, this.children = [], this.enabled = !0, this.drawGroup = [], this.applyLists = [], this.applyListsIndex = [];
            }
            var De = {};
            (0, a.registerType)("ObjectNode", [$, De, null]);
            function Re(O) {
              this._layer$1 = null, this._opened$1 = !0, this._callbacks$1 = null, k.LayerUI.call(this), this._layer$1 = O;
            }
            var Ie = {
              setUICallbacks: function(O) {
                this._callbacks$1 = O;
              },
              get_hasTreeViewNodes: function() {
                return !0;
              },
              getTreeNodes: function() {
                var O = [];
                return this._layer$1.object3d.objects.length > 0 && this._layer$1.object3d.objects[0].children != null && this._loadTree$1(O, this._layer$1.object3d.objects[0].children), O;
              },
              _loadTree$1: function(O, Ue) {
                for (var $e = s.ss.enumerate(Ue); $e.moveNext(); ) {
                  var Ze = $e.current, Qe = new k.LayerUITreeNode();
                  Qe.set_name(Ze.name), Qe.set_tag(Ze), Qe.set_checked(Ze.enabled), Qe.add_nodeSelected(s.ss.bind("_node_NodeSelected$1", this)), Qe.add_nodeChecked(s.ss.bind("_node_NodeChecked$1", this)), O.push(Qe), this._loadTree$1(Qe.get_nodes(), Ze.children);
                }
              },
              _node_NodeChecked$1: function(O, Ue) {
                var $e = O.get_tag();
                $e != null && ($e.enabled = Ue);
              },
              _node_NodeSelected$1: function(O) {
                if (this._callbacks$1 != null) {
                  var Ue = O.get_tag(), $e = {};
                  $e.Name = Ue.name, $e["Pivot.X"] = Ue.pivotPoint.x.toString(), $e["Pivot.Y"] = Ue.pivotPoint.y.toString(), $e["Pivot.Z"] = Ue.pivotPoint.z.toString(), this._callbacks$1.showRowData($e);
                }
              },
              getNodeContextMenu: function(O) {
                return k.LayerUI.prototype.getNodeContextMenu.call(this, O);
              }
            };
            (0, a.registerType)("Object3dLayerUI", [Re, Ie, k.LayerUI]);
          }
        ),
        /***/
        "./esm/layers/orbit.js": (
          /*!*****************************!*\
            !*** ./esm/layers/orbit.js ***!
            \*****************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              EllipseRenderer: () => (
                /* binding */
                Ve
              ),
              /* harmony export */
              Orbit: () => (
                /* binding */
                g
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ../graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), o = n(
              /*! ../graphics/shaders.js */
              "./esm/graphics/shaders.js"
            ), c = n(
              /*! ../graphics/gl_buffers.js */
              "./esm/graphics/gl_buffers.js"
            ), _ = n(
              /*! ../color.js */
              "./esm/color.js"
            ), u = n(
              /*! ../coordinates.js */
              "./esm/coordinates.js"
            ), y = n(
              /*! ../space_time_controller.js */
              "./esm/space_time_controller.js"
            );
            function g(B, Pe, k, b, Le) {
              this._elements = null, this._orbitColor = _.Colors.get_white(), this._scale = 0, this._segmentCount = 0, this._elements = B, this._segmentCount = Pe, this._orbitColor = k, this._scale = Le;
            }
            g._orbitalToWwt = t.Matrix3d.create(1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1), g._initBegun = !1;
            var Ee = {
              cleanUp: function() {
              },
              // Get the radius of a sphere (centered at a focus of the ellipse) that is
              // large enough to contain the orbit. The value returned has units of the orbit scale.
              get_boundingRadius: function() {
                return this._elements != null ? this._elements.a * (1 + this._elements.e) / this._scale : 0;
              },
              draw3D: function(B, Pe, k) {
                var b = t.Matrix3d.multiplyMatrix(t.Matrix3d._rotationZ(u.Coordinates.degreesToRadians(this._elements.w)), t.Matrix3d.multiplyMatrix(t.Matrix3d._rotationX(u.Coordinates.degreesToRadians(this._elements.i)), t.Matrix3d._rotationZ(u.Coordinates.degreesToRadians(this._elements.omega))));
                b = t.Matrix3d.multiplyMatrix(b, g._orbitalToWwt);
                var Le = t.Matrix3d.multiplyMatrix(t.Matrix3d.multiplyMatrix(b, t.Matrix3d.translation(k)), B.get_world()), xe = this._elements.n * (y.SpaceTimeController.get_jNow() - this._elements.t), ze = 1;
                xe < 0 && (ze = -1), xe = Math.abs(xe) / 360, xe = (xe - s.ss.truncate(xe)) * 360 * ze;
                var Se = _.Color._fromArgbColor(s.ss.truncate(Pe * 255), this._orbitColor);
                xe = u.Coordinates.degreesToRadians(xe);
                for (var Te = xe, D = 0; D < 5; D++)
                  Te += (xe - Te + this._elements.e * Math.sin(Te)) / (1 - this._elements.e * Math.cos(Te));
                Ve.drawEllipse(B, this._elements.a / this._scale, this._elements.e, Te, Se, Le);
              }
            };
            (0, a.registerType)("Orbit", [g, Ee, null]);
            function Ve() {
            }
            Ve.drawEllipseWithPosition = function(B, Pe, k, b, Le, xe, ze) {
              Ve._ellipseShader == null && (Ve._ellipseShader = new o.EllipseShader()), Ve._ellipseVertexBuffer == null && (Ve._ellipseVertexBuffer = Ve.createEllipseVertexBuffer(500));
              var Se = B.get_world();
              B.set_world(xe), B.gl.bindBuffer(l.WEBGL.ARRAY_BUFFER, Ve._ellipseVertexBuffer.vertexBuffer), B.gl.bindBuffer(l.WEBGL.ELEMENT_ARRAY_BUFFER, null), o.EllipseShader.use(B, Pe, k, b, Le, 1, Se, ze), B.gl.drawArrays(l.WEBGL.LINE_STRIP, 0, Ve._ellipseVertexBuffer.count), B.set_world(Se);
            }, Ve.drawEllipse = function(B, Pe, k, b, Le, xe) {
              Ve._ellipseShader == null && (Ve._ellipseShader = new o.EllipseShader()), Ve._ellipseWithoutStartPointVertexBuffer == null && (Ve._ellipseWithoutStartPointVertexBuffer = Ve.createEllipseVertexBufferWithoutStartPoint(360));
              var ze = B.get_world();
              B.set_world(xe), B.gl.bindBuffer(l.WEBGL.ARRAY_BUFFER, Ve._ellipseWithoutStartPointVertexBuffer.vertexBuffer), B.gl.bindBuffer(l.WEBGL.ELEMENT_ARRAY_BUFFER, null), o.EllipseShader.use(B, Pe, k, b, Le, 1, ze, t.Vector3d.create(0, 0, 0)), B.gl.drawArrays(l.WEBGL.LINE_STRIP, 0, Ve._ellipseWithoutStartPointVertexBuffer.count - 1), B.set_world(ze);
            }, Ve.createEllipseVertexBuffer = function(B) {
              for (var Pe = new c.PositionVertexBuffer(B), k = Pe.lock(), b = 0, Le = 0; Le < B / 2; ++Le)
                k[b++] = t.Vector3d.create(2 * Le / B * 0.05, 0, 0);
              for (var Le = 0; Le < B / 2; ++Le)
                k[b++] = t.Vector3d.create(2 * Le / B * 0.95 + 0.05, 0, 0);
              return Pe.unlock(), Pe;
            }, Ve.createEllipseVertexBufferWithoutStartPoint = function(B) {
              var Pe = new c.PositionVertexBuffer(B), k = Pe.lock();
              k[0] = t.Vector3d.create(1e-6, 0, 0);
              for (var b = 1; b < B; ++b)
                k[b] = t.Vector3d.create(2 * b / B, 0, 0);
              return Pe.unlock(), Pe;
            };
            var Me = {};
            (0, a.registerType)("EllipseRenderer", [Ve, Me, null]);
          }
        ),
        /***/
        "./esm/layers/orbit_layer.js": (
          /*!***********************************!*\
            !*** ./esm/layers/orbit_layer.js ***!
            \***********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              OrbitLayer: () => (
                /* binding */
                y
              ),
              /* harmony export */
              OrbitLayerUI: () => (
                /* binding */
                Ee
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ../color.js */
              "./esm/color.js"
            ), o = n(
              /*! ./layer.js */
              "./esm/layers/layer.js"
            ), c = n(
              /*! ./layer_ui.js */
              "./esm/layers/layer_ui.js"
            ), _ = n(
              /*! ./orbit.js */
              "./esm/layers/orbit.js"
            ), u = n(
              /*! ./reference_frame.js */
              "./esm/layers/reference_frame.js"
            );
            function y() {
              this._frames$1 = [], this._primaryUI$1 = null, this._pointOpacity$1 = 1, this._pointColor$1 = l.Colors.get_yellow(), this._filename$1 = "", this._dataFile$1 = "", o.Layer.call(this);
            }
            var g = {
              get_frames: function() {
                return this._frames$1;
              },
              set_frames: function(Me) {
                return this._frames$1 = Me, Me;
              },
              getPrimaryUI: function() {
                return this._primaryUI$1 == null && (this._primaryUI$1 = new Ee(this)), this._primaryUI$1;
              },
              cleanUp: function() {
                for (var Me = s.ss.enumerate(this._frames$1); Me.moveNext(); ) {
                  var B = Me.current;
                  B.get_orbit() != null && (B.get_orbit().cleanUp(), B.set_orbit(null));
                }
              },
              writeLayerProperties: function(Me) {
                Me._writeAttributeString("PointOpacity", this.get_pointOpacity().toString()), Me._writeAttributeString("PointColor", this._pointColor$1.save());
              },
              get_pointOpacity: function() {
                return this._pointOpacity$1;
              },
              set_pointOpacity: function(Me) {
                return this._pointOpacity$1 !== Me && (this.version++, this._pointOpacity$1 = Me), Me;
              },
              get_pointColor: function() {
                return this._pointColor$1;
              },
              set_pointColor: function(Me) {
                return this._pointColor$1 !== Me && (this.version++, this._pointColor$1 = Me), Me;
              },
              getParams: function() {
                var Me = new Array(6);
                return Me[0] = this._pointOpacity$1, Me[1] = this.get_color().r / 255, Me[2] = this.get_color().g / 255, Me[3] = this.get_color().b / 255, Me[4] = this.get_color().a / 255, Me[5] = this.get_opacity(), Me;
              },
              getParamNames: function() {
                return ["PointOpacity", "Color.Red", "Color.Green", "Color.Blue", "Color.Alpha", "Opacity"];
              },
              setParams: function(Me) {
                if (Me.length === 6) {
                  this._pointOpacity$1 = Me[0], this.set_opacity(Me[5]);
                  var B = l.Color.fromArgb(s.ss.truncate(Me[4] * 255), s.ss.truncate(Me[1] * 255), s.ss.truncate(Me[2] * 255), s.ss.truncate(Me[3] * 255));
                  this.set_color(B);
                }
              },
              initializeFromXml: function(Me) {
                this.set_pointOpacity(parseFloat(Me.attributes.getNamedItem("PointOpacity").nodeValue)), this.set_pointColor(l.Color.load(Me.attributes.getNamedItem("PointColor").nodeValue));
              },
              draw: function(Me, B, Pe) {
                var k = Me.get_world();
                Me.set_world(Me.get_worldBaseNonRotating());
                for (var b = s.ss.enumerate(this._frames$1); b.moveNext(); ) {
                  var Le = b.current;
                  Le.showOrbitPath && (Le.get_orbit() == null && Le.set_orbit(new _.Orbit(Le.get_elements(), 360, this.get_color(), 1, Me.get_nominalRadius())), Le.get_orbit().draw3D(Me, B * this.get_opacity(), new t.Vector3d()));
                }
                return Me.set_world(k), !0;
              },
              addFilesToCabinet: function(Me) {
                this._filename$1 = Me.tempDirectory + s.ss.format("{0}\\{1}.txt", Me.get_packageID(), this.id.toString()), this._filename$1.substring(0, this._filename$1.lastIndexOf("\\"));
                var B = new Blob([this._dataFile$1]);
                Me.addFile(this._filename$1, B), o.Layer.prototype.addFilesToCabinet.call(this, Me);
              },
              loadData: function(Me, B) {
                var Pe = this, k = Me.getFileBlob(B), b = new FileReader();
                b.onloadend = function(Le) {
                  Pe._dataFile$1 = s.ss.safeCast(b.result, String), Pe.loadString(Pe._dataFile$1);
                }, b.readAsText(k);
              },
              loadString: function(Me) {
                var B = Me.split(`
`);
                this._frames$1.length = 0;
                for (var Pe = 0; Pe < B.length; Pe += 2) {
                  var k = Pe, b = Pe + 1;
                  if (B[Pe].length > 0) {
                    var Le = new u.ReferenceFrame();
                    if (B[Pe].substring(0, 1) !== "1")
                      k++, b++, Le.name = s.ss.trim(B[Pe]), Pe++;
                    else if (B[Pe].substring(0, 1) === "1")
                      Le.name = B[Pe].substring(2, 5);
                    else {
                      Pe -= 2;
                      continue;
                    }
                    Le.reference = 18, Le.oblateness = 0, Le.showOrbitPath = !0, Le.showAsPoint = !0, Le.referenceFrameType = 1, Le.scale = 1, Le.semiMajorAxisUnits = 1, Le.meanRadius = 10, Le.oblateness = 0, Le.fromTLE(B[k], B[b], 3986004418e5), this._frames$1.push(Le);
                  } else
                    Pe -= 1;
                }
              }
            };
            (0, a.registerType)("OrbitLayer", [y, g, o.Layer]);
            function Ee(Me) {
              this._layer$1 = null, this._opened$1 = !0, this._callbacks$1 = null, c.LayerUI.call(this), this._layer$1 = Me;
            }
            var Ve = {
              setUICallbacks: function(Me) {
                this._callbacks$1 = Me;
              },
              get_hasTreeViewNodes: function() {
                return !0;
              },
              getTreeNodes: function() {
                for (var Me = [], B = s.ss.enumerate(this._layer$1.get_frames()); B.moveNext(); ) {
                  var Pe = B.current, k = new c.LayerUITreeNode();
                  k.set_name(Pe.name), k.set_tag(Pe), k.set_checked(Pe.showOrbitPath), k.add_nodeSelected(s.ss.bind("_node_NodeSelected$1", this)), k.add_nodeChecked(s.ss.bind("_node_NodeChecked$1", this)), Me.push(k);
                }
                return Me;
              },
              _node_NodeChecked$1: function(Me, B) {
                var Pe = Me.get_tag();
                Pe != null && (Pe.showOrbitPath = B);
              },
              _node_NodeSelected$1: function(Me) {
                if (this._callbacks$1 != null) {
                  var B = Me.get_tag(), Pe = {};
                  Pe.Name = B.name, Pe["SemiMajor Axis"] = B.semiMajorAxis.toString(), Pe["SMA Units"] = B.semiMajorAxisUnits.toString(), Pe.Inclination = B.inclination.toString(), Pe.Eccentricity = B.eccentricity.toString(), Pe["Long of Asc. Node"] = B.longitudeOfAscendingNode.toString(), Pe["Argument Of Periapsis"] = B.argumentOfPeriapsis.toString(), Pe.Epoch = B.epoch.toString(), Pe["Mean Daily Motion"] = B.meanDailyMotion.toString(), Pe["Mean Anomoly at Epoch"] = B.meanAnomolyAtEpoch.toString(), this._callbacks$1.showRowData(Pe);
                }
              },
              getNodeContextMenu: function(Me) {
                return c.LayerUI.prototype.getNodeContextMenu.call(this, Me);
              }
            };
            (0, a.registerType)("OrbitLayerUI", [Ee, Ve, c.LayerUI]);
          }
        ),
        /***/
        "./esm/layers/reference_frame.js": (
          /*!***************************************!*\
            !*** ./esm/layers/reference_frame.js ***!
            \***************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ReferenceFrame: () => (
                /* binding */
                u
              ),
              /* harmony export */
              ReferenceFrameTypes: () => (
                /* binding */
                _
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../astrocalc/elliptical.js */
              "./esm/astrocalc/elliptical.js"
            ), l = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ../color.js */
              "./esm/color.js"
            ), c = n(
              /*! ../space_time_controller.js */
              "./esm/space_time_controller.js"
            ), _ = {
              fixedSherical: 0,
              orbital: 1,
              trajectory: 2,
              synodic: 3
            };
            (0, a.registerType)("ReferenceFrameTypes", _), (0, a.registerEnum)("ReferenceFrameTypes", _);
            function u() {
              this._systemGenerated = !1, this.meanAnomoly = 0, this.orbitalYears = 0, this.observingLocation = !1, this.reference = 18, this.parentsRoationalBase = !1, this.referenceFrameType = 0, this.meanRadius = 6371e3, this.oblateness = 33528e-7, this.heading = 0, this.pitch = 0, this.roll = 0, this.scale = 1, this.tilt = 0, this.translation = new l.Vector3d(), this.lat = 0, this.lng = 0, this.altitude = 0, this.rotationalPeriod = 0, this.zeroRotationDate = 0, this.representativeColor = o.Colors.get_white(), this.showAsPoint = !1, this.showOrbitPath = !1, this.stationKeeping = !0, this.semiMajorAxis = 0, this.semiMajorAxisUnits = 1, this.eccentricity = 0, this.inclination = 0, this.argumentOfPeriapsis = 0, this.longitudeOfAscendingNode = 0, this.meanAnomolyAtEpoch = 0, this.meanDailyMotion = 0, this.epoch = 0, this._orbit = null, this._elements = new t.EOE(), this.worldMatrix = new l.Matrix3d(), this.worldMatrix = l.Matrix3d.get_identity();
            }
            u.isTLECheckSumGood = function(g) {
              if (g.length !== 69)
                return !1;
              for (var Ee = 0, Ve = 0; Ve < 68; Ve++)
                switch (g.substr(Ve, 1)) {
                  case "1":
                    Ee += 1;
                    break;
                  case "2":
                    Ee += 2;
                    break;
                  case "3":
                    Ee += 3;
                    break;
                  case "4":
                    Ee += 4;
                    break;
                  case "5":
                    Ee += 5;
                    break;
                  case "6":
                    Ee += 6;
                    break;
                  case "7":
                    Ee += 7;
                    break;
                  case "8":
                    Ee += 8;
                    break;
                  case "9":
                    Ee += 9;
                    break;
                  case "-":
                    Ee += 1;
                    break;
                }
              return (Ee % 10).toString() === g.charAt(68).toString();
            }, u.toTLEExponential = function(g, Ee) {
              var Ve = g.toExponential(Ee);
              return Ve.length < Ee + 6 && (Ve = Ve.substring(0, Ee + 4) + "0" + Ve.substr(Ee + 4, 1)), Ve;
            }, u.tleNumberString = function(g, Ee, Ve) {
              var Me = g.toFixed(Ve), B = Me.indexOf(".");
              B === -1 && (B = Me.length, Me += ".0");
              var Pe = Me.length - B - 1, k = "00000000";
              return Me = k.substr(0, Ee - B) + Me + k.substr(0, Ve - Pe), Me;
            }, u.computeTLECheckSum = function(g) {
              if (g.length !== 68)
                return "0";
              for (var Ee = 0, Ve = 0; Ve < 68; Ve++)
                switch (g[Ve]) {
                  case "1":
                    Ee += 1;
                    break;
                  case "2":
                    Ee += 2;
                    break;
                  case "3":
                    Ee += 3;
                    break;
                  case "4":
                    Ee += 4;
                    break;
                  case "5":
                    Ee += 5;
                    break;
                  case "6":
                    Ee += 6;
                    break;
                  case "7":
                    Ee += 7;
                    break;
                  case "8":
                    Ee += 8;
                    break;
                  case "9":
                    Ee += 9;
                    break;
                  case "-":
                    Ee += 1;
                    break;
                }
              return Ee % 10;
            };
            var y = {
              get_representativeColor: function() {
                return this.representativeColor;
              },
              set_representativeColor: function(g) {
                return g !== this.representativeColor && (this.representativeColor = g, this._orbit = null), g;
              },
              get_orbit: function() {
                return this._orbit;
              },
              set_orbit: function(g) {
                return this._orbit = g, g;
              },
              getIndentifier: function() {
                return this.name;
              },
              importTrajectory: function(g) {
              },
              saveToXml: function(g) {
                g._writeStartElement("ReferenceFrame"), g._writeAttributeString("Name", this.name), g._writeAttributeString("Parent", this.parent), g._writeAttributeString("ReferenceFrameType", a.Enums.toXml("ReferenceFrameTypes", this.referenceFrameType)), g._writeAttributeString("Reference", a.Enums.toXml("ReferenceFrames", this.reference)), g._writeAttributeString("ParentsRoationalBase", this.parentsRoationalBase.toString()), g._writeAttributeString("MeanRadius", this.meanRadius.toString()), g._writeAttributeString("Oblateness", this.oblateness.toString()), g._writeAttributeString("Heading", this.heading.toString()), g._writeAttributeString("Pitch", this.pitch.toString()), g._writeAttributeString("Roll", this.roll.toString()), g._writeAttributeString("Scale", this.scale.toString()), g._writeAttributeString("Tilt", this.tilt.toString()), g._writeAttributeString("Translation", this.translation.toString()), this.referenceFrameType || (g._writeAttributeString("Lat", this.lat.toString()), g._writeAttributeString("Lng", this.lng.toString()), g._writeAttributeString("Altitude", this.altitude.toString())), g._writeAttributeString("RotationalPeriod", this.rotationalPeriod.toString()), g._writeAttributeString("ZeroRotationDate", this.zeroRotationDate.toString()), g._writeAttributeString("RepresentativeColor", this.get_representativeColor().save()), g._writeAttributeString("ShowAsPoint", this.showAsPoint.toString()), g._writeAttributeString("ShowOrbitPath", this.showOrbitPath.toString()), g._writeAttributeString("StationKeeping", this.stationKeeping.toString()), this.referenceFrameType === 1 && (g._writeAttributeString("SemiMajorAxis", this.semiMajorAxis.toString()), g._writeAttributeString("SemiMajorAxisScale", a.Enums.toXml("AltUnits", this.semiMajorAxisUnits)), g._writeAttributeString("Eccentricity", this.eccentricity.toString()), g._writeAttributeString("Inclination", this.inclination.toString()), g._writeAttributeString("ArgumentOfPeriapsis", this.argumentOfPeriapsis.toString()), g._writeAttributeString("LongitudeOfAscendingNode", this.longitudeOfAscendingNode.toString()), g._writeAttributeString("MeanAnomolyAtEpoch", this.meanAnomolyAtEpoch.toString()), g._writeAttributeString("MeanDailyMotion", this.meanDailyMotion.toString()), g._writeAttributeString("Epoch", this.epoch.toString())), g._writeEndElement();
              },
              initializeFromXml: function(g) {
                this.name = g.attributes.getNamedItem("Name").nodeValue, this.parent = g.attributes.getNamedItem("Parent").nodeValue, this.referenceFrameType = a.Enums.parse("ReferenceFrameTypes", g.attributes.getNamedItem("ReferenceFrameType").nodeValue), this.reference = a.Enums.parse("ReferenceFrames", g.attributes.getNamedItem("Reference").nodeValue), this.parentsRoationalBase = s.ss.boolean(g.attributes.getNamedItem("ParentsRoationalBase").nodeValue), this.meanRadius = parseFloat(g.attributes.getNamedItem("MeanRadius").nodeValue), this.oblateness = parseFloat(g.attributes.getNamedItem("Oblateness").nodeValue), this.heading = parseFloat(g.attributes.getNamedItem("Heading").nodeValue), this.pitch = parseFloat(g.attributes.getNamedItem("Pitch").nodeValue), this.roll = parseFloat(g.attributes.getNamedItem("Roll").nodeValue), this.scale = parseFloat(g.attributes.getNamedItem("Scale").nodeValue), this.tilt = parseFloat(g.attributes.getNamedItem("Tilt").nodeValue), this.translation = l.Vector3d.parse(g.attributes.getNamedItem("Translation").nodeValue), this.referenceFrameType || (this.lat = parseFloat(g.attributes.getNamedItem("Lat").nodeValue), this.lng = parseFloat(g.attributes.getNamedItem("Lng").nodeValue), this.altitude = parseFloat(g.attributes.getNamedItem("Altitude").nodeValue)), this.rotationalPeriod = parseFloat(g.attributes.getNamedItem("RotationalPeriod").nodeValue), this.zeroRotationDate = parseFloat(g.attributes.getNamedItem("ZeroRotationDate").nodeValue), this.set_representativeColor(o.Color.load(g.attributes.getNamedItem("RepresentativeColor").nodeValue)), this.showAsPoint = s.ss.boolean(g.attributes.getNamedItem("ShowAsPoint").nodeValue), g.attributes.getNamedItem("StationKeeping") != null && (this.stationKeeping = s.ss.boolean(g.attributes.getNamedItem("StationKeeping").nodeValue)), this.referenceFrameType === 1 && (this.showOrbitPath = s.ss.boolean(g.attributes.getNamedItem("ShowOrbitPath").nodeValue), this.semiMajorAxis = parseFloat(g.attributes.getNamedItem("SemiMajorAxis").nodeValue), this.semiMajorAxisUnits = a.Enums.parse("AltUnits", g.attributes.getNamedItem("SemiMajorAxisScale").nodeValue), this.eccentricity = parseFloat(g.attributes.getNamedItem("Eccentricity").nodeValue), this.inclination = parseFloat(g.attributes.getNamedItem("Inclination").nodeValue), this.argumentOfPeriapsis = parseFloat(g.attributes.getNamedItem("ArgumentOfPeriapsis").nodeValue), this.longitudeOfAscendingNode = parseFloat(g.attributes.getNamedItem("LongitudeOfAscendingNode").nodeValue), this.meanAnomolyAtEpoch = parseFloat(g.attributes.getNamedItem("MeanAnomolyAtEpoch").nodeValue), this.meanDailyMotion = parseFloat(g.attributes.getNamedItem("MeanDailyMotion").nodeValue), this.epoch = parseFloat(g.attributes.getNamedItem("Epoch").nodeValue));
              },
              fromTLE: function(g, Ee, Ve) {
                this.epoch = c.SpaceTimeController._twoLineDateToJulian(g.substr(18, 14)), this.eccentricity = parseFloat("0." + Ee.substr(26, 7)), this.inclination = parseFloat(Ee.substr(8, 8)), this.longitudeOfAscendingNode = parseFloat(Ee.substr(17, 8)), this.argumentOfPeriapsis = parseFloat(Ee.substr(34, 8));
                var Me = parseFloat(Ee.substr(52, 11));
                this.meanAnomolyAtEpoch = parseFloat(Ee.substr(43, 8)), this.meanDailyMotion = Me * 360;
                var B = 86400 / Me / (Math.PI * 2);
                this.semiMajorAxis = Math.pow(B * B * Ve, 1 / 3), this.semiMajorAxisUnits = 1;
              },
              toTLE: function() {
                var g = new s.ss.StringBuilder();
                g.append("1 99999U 00111AAA "), g.append(c.SpaceTimeController.julianToTwoLineDate(this.epoch)), g.append(" "), g.append(this.semiMajorAxis.toExponential(4)), g.append(" 00000-0 "), g.append(u.toTLEExponential(this.meanDailyMotion, 5)), g.append("  001"), g.append(u.computeTLECheckSum(g.toString())), g.appendLine("");
                var Ee = new s.ss.StringBuilder();
                return Ee.append("2 99999 "), Ee.append(u.tleNumberString(this.inclination, 3, 4) + " "), Ee.append(u.tleNumberString(this.longitudeOfAscendingNode, 3, 4) + " "), Ee.append((u.tleNumberString(this.eccentricity, 1, 7) + " ").substring(2)), Ee.append(u.tleNumberString(this.argumentOfPeriapsis, 3, 4) + " "), Ee.append(u.tleNumberString(this.meanAnomolyAtEpoch, 3, 4) + " "), Ee.append(u.toTLEExponential(this.meanDailyMotion / 207732, 5)), Ee.append("00001"), Ee.append(u.computeTLECheckSum(Ee.toString())), Ee.appendLine(""), g.toString() + Ee.toString();
              },
              get_elements: function() {
                return this._elements.a = this.semiMajorAxis, this._elements.e = this.eccentricity, this._elements.i = this.inclination, this._elements.w = this.argumentOfPeriapsis, this._elements.omega = this.longitudeOfAscendingNode, this._elements.jdEquinox = this.epoch, this.meanDailyMotion ? this._elements.n = this.meanDailyMotion : this._elements.n = t.ELL.meanMotionFromSemiMajorAxis(this._elements.a), this._elements.t = this.epoch - this.meanAnomolyAtEpoch / this._elements.n, this._elements;
              },
              set_elements: function(g) {
                return this._elements = g, g;
              },
              computeFrame: function(g) {
                switch (this.referenceFrameType) {
                  case 1:
                    this._computeOrbital(g);
                    break;
                  case 0:
                    this._computeFixedSherical(g);
                    break;
                  case 2:
                    this._computeFrameTrajectory(g);
                    break;
                }
              },
              useRotatingParentFrame: function() {
                switch (this.referenceFrameType) {
                  case 1:
                  case 2:
                  case 3:
                    return !1;
                  default:
                    return !0;
                }
              },
              _computeFixedRectangular: function(g) {
              },
              _computeFixedSherical: function(g) {
                this.observingLocation && (this.lat = c.SpaceTimeController.get_location().get_lat(), this.lng = c.SpaceTimeController.get_location().get_lng(), this.altitude = c.SpaceTimeController.get_altitude()), this.worldMatrix = l.Matrix3d.get_identity(), this.worldMatrix.translate(this.translation);
                var Ee = 1 / g.get_nominalRadius() * this.scale * this.meanRadius;
                if (this.worldMatrix.scale(l.Vector3d.create(Ee, Ee, Ee)), this.worldMatrix._multiply(l.Matrix3d.rotationYawPitchRoll(this.heading / 180 * Math.PI, this.pitch / 180 * Math.PI, this.roll / 180 * Math.PI)), this.worldMatrix._multiply(l.Matrix3d._rotationZ(-90 / 180 * Math.PI)), this.rotationalPeriod) {
                  var Ve = (c.SpaceTimeController.get_jNow() - this.zeroRotationDate) / this.rotationalPeriod * Math.PI * 2 % (Math.PI * 2);
                  this.worldMatrix._multiply(l.Matrix3d._rotationX(-Ve));
                }
                this.worldMatrix.translate(l.Vector3d.create(1 + this.altitude / g.get_nominalRadius(), 0, 0)), this.worldMatrix._multiply(l.Matrix3d._rotationZ(this.lat / 180 * Math.PI)), this.worldMatrix._multiply(l.Matrix3d._rotationY(-(this.lng + 180) / 180 * Math.PI));
              },
              _computeFrameTrajectory: function(g) {
              },
              _computeOrbital: function(g) {
                var Ee = this.get_elements(), Ve = t.ELL.calculateRectangularJD(c.SpaceTimeController.get_jNow(), Ee);
                this.meanAnomoly = Ee.meanAnnomolyOut;
                var Me = t.ELL.calculateRectangular(Ee, this.meanAnomoly + 1e-3), B = l.Vector3d.subtractVectors(Ve, Me), Pe = Ve.copy();
                Pe.normalize(), B.normalize(), Ve.length();
                var k = 1;
                switch (this.semiMajorAxisUnits) {
                  case 1:
                    k = 1;
                    break;
                  case 2:
                    k = 1 / 3.2808399;
                    break;
                  case 3:
                    k = 1 / 3.2808399 / 12;
                    break;
                  case 4:
                    k = 1609.344;
                    break;
                  case 5:
                    k = 1e3;
                    break;
                  case 6:
                    k = 149598e3 * 1e3;
                    break;
                  case 7:
                    k = 63239.6717 * 149598e3 * 1e3;
                    break;
                  case 8:
                    k = 206264.806 * 149598e3 * 1e3;
                    break;
                  case 9:
                    k = 206264.806 * 149598e3 * 1e3 * 1e6;
                    break;
                  case 10:
                    k = 1;
                    break;
                }
                k *= 1 / g.get_nominalRadius();
                var b = l.Matrix3d.lookAtLH(l.Vector3d.create(0, 0, 0), B, Pe);
                b.invert(), this.worldMatrix = l.Matrix3d.get_identity(), this.worldMatrix.translate(this.translation);
                var Le = 1 / g.get_nominalRadius() * this.scale * this.meanRadius;
                if (this.worldMatrix.scale(l.Vector3d.create(Le, Le, Le)), this.worldMatrix._multiply(l.Matrix3d.rotationYawPitchRoll(this.heading / 180 * Math.PI, this.pitch / 180 * Math.PI, this.roll / 180 * Math.PI)), this.rotationalPeriod) {
                  var xe = (c.SpaceTimeController.get_jNow() - this.zeroRotationDate) / this.rotationalPeriod * Math.PI * 2 % (Math.PI * 2);
                  this.worldMatrix._multiply(l.Matrix3d._rotationX(-xe));
                }
                Ve = l.Vector3d.scale(Ve, k), this.worldMatrix.translate(Ve), this.stationKeeping && (this.worldMatrix = l.Matrix3d.multiplyMatrix(b, this.worldMatrix));
              }
            };
            (0, a.registerType)("ReferenceFrame", [u, y, null]);
          }
        ),
        /***/
        "./esm/layers/spreadsheet_layer.js": (
          /*!*****************************************!*\
            !*** ./esm/layers/spreadsheet_layer.js ***!
            \*****************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              CatalogSpreadSheetLayer: () => (
                /* binding */
                We
              ),
              /* harmony export */
              KmlCoordinate: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              KmlLineList: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              PushPin: () => (
                /* binding */
                D
              ),
              /* harmony export */
              SpreadSheetLayer: () => (
                /* binding */
                Fe
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), l = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ../data_globals.js */
              "./esm/data_globals.js"
            ), c = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), _ = n(
              /*! ../graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), u = n(
              /*! ../graphics/primitives3d.js */
              "./esm/graphics/primitives3d.js"
            ), y = n(
              /*! ../graphics/texture.js */
              "./esm/graphics/texture.js"
            ), g = n(
              /*! ../graphics/tessellator.js */
              "./esm/graphics/tessellator.js"
            ), Ee = n(
              /*! ../color.js */
              "./esm/color.js"
            ), Ve = n(
              /*! ../coordinates.js */
              "./esm/coordinates.js"
            ), Me = n(
              /*! ../space_time_controller.js */
              "./esm/space_time_controller.js"
            ), B = n(
              /*! ../ui_tools.js */
              "./esm/ui_tools.js"
            ), Pe = n(
              /*! ../url_helpers.js */
              "./esm/url_helpers.js"
            ), k = n(
              /*! ./color_map_container.js */
              "./esm/layers/color_map_container.js"
            ), b = n(
              /*! ./layer.js */
              "./esm/layers/layer.js"
            ), Le = n(
              /*! ./table.js */
              "./esm/layers/table.js"
            );
            function xe() {
              this.lat = 0, this.lng = 0, this.alt = 0;
            }
            var ze = {};
            (0, a.registerType)("KmlCoordinate", [xe, ze, null]);
            function Se() {
              this.extrude = !1, this.astronomical = !1, this.meanRadius = 6371e3, this.pointList = [];
            }
            var Te = {
              parseWkt: function($, De, Re, Ie) {
                for (var O = B.UiTools.split($, "(,)"), Ue = s.ss.enumerate(O); Ue.moveNext(); ) {
                  var $e = Ue.current, Ze = s.ss.trim($e).split(" ");
                  if (Ze.length > 1) {
                    var Qe = new xe();
                    Qe.lng = parseFloat(Ze[0]), this.astronomical && (Qe.lng -= 180), Qe.lat = parseFloat(Ze[1]), Ze.length > 2 && !Re ? Qe.alt = parseFloat(Ze[2]) : Qe.alt = Re, Qe.date = Ie, this.pointList.push(Qe);
                  }
                }
              },
              getCenterPoint: function() {
                var $ = new xe();
                $.lat = 0, $.lng = 0, $.alt = 0;
                for (var De = s.ss.enumerate(this.pointList); De.moveNext(); ) {
                  var Re = De.current;
                  $.lat += Re.lat, $.lng += Re.lng, $.alt += Re.alt;
                }
                return $.lat /= this.pointList.length, $.lng /= this.pointList.length, $.alt /= this.pointList.length, $;
              }
            };
            (0, a.registerType)("KmlLineList", [Se, Te, null]);
            function D() {
            }
            D._pinTextureCache = {}, D._pins = null, D.triggerLoadSprite = function() {
              D._pins == null && (D._pins = y.Texture.fromUrl(Pe.URLHelpers.singleton.engineAssetUrl("pins.png")));
            }, D.getPushPinTexture = function($) {
              var De = null;
              if (s.ss.keyExists(D._pinTextureCache, $))
                return D._pinTextureCache[$];
              try {
                De = c.tilePrepDevice.createTexture(), c.tilePrepDevice.bindTexture(_.WEBGL.TEXTURE_2D, De);
                var Re = Math.floor($ / 16), Ie = $ % 16, O = document.createElement("canvas");
                O.height = 32, O.width = 32;
                var Ue = O.getContext("2d");
                Ue.drawImage(D._pins.imageElement, Ie * 32, Re * 32, 32, 32, 0, 0, 32, 32);
                var $e = O;
                c.tilePrepDevice.texParameteri(_.WEBGL.TEXTURE_2D, _.WEBGL.TEXTURE_WRAP_S, _.WEBGL.CLAMP_TO_EDGE), c.tilePrepDevice.texParameteri(_.WEBGL.TEXTURE_2D, _.WEBGL.TEXTURE_WRAP_T, _.WEBGL.CLAMP_TO_EDGE), c.tilePrepDevice.texImage2D(_.WEBGL.TEXTURE_2D, 0, _.WEBGL.RGBA, _.WEBGL.RGBA, _.WEBGL.UNSIGNED_BYTE, $e), c.tilePrepDevice.texParameteri(_.WEBGL.TEXTURE_2D, _.WEBGL.TEXTURE_MIN_FILTER, _.WEBGL.LINEAR_MIPMAP_NEAREST), c.tilePrepDevice.generateMipmap(_.WEBGL.TEXTURE_2D), c.tilePrepDevice.bindTexture(_.WEBGL.TEXTURE_2D, null), D._pinTextureCache[$] = De;
              } catch {
              }
              return De;
            };
            var ke = {};
            (0, a.registerType)("PushPin", [D, ke, null]);
            function Fe() {
              this._dataDirty$1 = !1, this._lastNormalizeSizeColumnIndex$1 = -1, this._lastDynamicColorColumnIndex$1 = -1, this._table_backcompat$1 = null, this._barChartBitmask$1 = 0, this._barScaleFactor$1 = 20, this._meanRadius$1 = 6371e3, this._table$1 = new Le.Table(), this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 16, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = /* @__PURE__ */ new Date("1/1/2100"), this._endRange$1 = /* @__PURE__ */ new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this.colorMap = 3, this.colorMapperName = "Greys", this._dynamicColorColumnName$1 = "2efc32e3-b9d9-47ff-8036-8cc344c585bd", this.dynamicColor = !1, this.normalizeColorMap = !1, this.normalizeColorMapMin = 0, this.normalizeColorMapMax = 1, this._markerColumn$1 = -1, this.colorMapColumn = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this._normalizeSizeColumnName$1 = "dfe78b4c-f972-4796-b04f-68c5efd4ecb0", this.normalizeSize = !1, this.normalizeSizeClip = !1, this.normalizeSizeMin = 0, this.normalizeSizeMax = 1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this.lastVersion = 0, b.Layer.call(this);
            }
            Fe._circleTexture$1 = null, Fe._getDatafromFeed$1 = function($) {
              return "";
            }, Fe._executeQuery$1 = function($) {
              return "";
            }, Fe.parseDate = function($) {
              var De = s.ss.now();
              try {
                De = new Date($);
              } catch {
                try {
                  return Fe.execlToDateTime(parseFloat($));
                } catch {
                }
              }
              return De;
            }, Fe.execlToDateTime = function($) {
              $ > 59 && ($ -= 1), $ > 73e4 && ($ = 73e4);
              var De = new Date(1899, 12, 31);
              return new Date(De.getDate() + s.ss.truncate($ * 24 * 60 * 60 * 1e3));
            }, Fe.get__circleTexture$1 = function() {
              if (Fe._circleTexture$1 == null) {
                var $ = Pe.URLHelpers.singleton.engineAssetUrl("circle.png");
                Fe._circleTexture$1 = y.Texture.fromUrl($);
              }
              return Fe._circleTexture$1;
            };
            var He = {
              getTypeName: function() {
                return "TerraViewer.SpreadSheetLayer";
              },
              get_header: function() {
                return this._table$1.header;
              },
              canCopyToClipboard: function() {
                return !0;
              },
              copyToClipboard: function() {
              },
              dynamicUpdate: function() {
                var $ = Fe._getDatafromFeed$1(this.get_dataSourceUrl());
                return $ != null ? (this.updateData($, !1, !0, !0), this.guessHeaderAssignments(), !0) : !1;
              },
              updateData: function($, De, Re, Ie) {
                return this.loadFromString(s.ss.safeCast($, String), !0, De, Re, Ie), this.computeDateDomainRange(-1, -1), this._dataDirty$1 = !0, this.dirty = !0, !0;
              },
              loadData: function($, De) {
                var Re = this;
                this._table$1 = new Le.Table();
                var Ie = $.getFileBlob(De);
                this.getStringFromGzipBlob(Ie, function(O) {
                  Re._table$1.loadFromString(O, !1, !0, !0), Re._table$1.header.indexOf(Re._normalizeSizeColumnName$1) > -1 && Re._table$1.removeColumn(Re._normalizeSizeColumnName$1), Re.computeDateDomainRange(-1, -1), Re.get_dynamicData() && Re.get_autoUpdate() && Re.dynamicUpdate(), Re._dataDirty$1 = !0, Re.dirty = !0;
                });
              },
              addFilesToCabinet: function($) {
                this._fileName$1 = $.tempDirectory + s.ss.format("{0}\\{1}.txt", $.get_packageID(), this.id.toString()), this._fileName$1.substring(0, this._fileName$1.lastIndexOf("\\"));
                var De = "";
                this._table_backcompat$1 == null ? De = this._table$1.save() : De = this._table_backcompat$1.save();
                var Re = new Blob([De]);
                $.addFile(this._fileName$1, Re), b.Layer.prototype.addFilesToCabinet.call(this, $);
              },
              _prepareBackCompatTable$1: function() {
                if ((this.sizeColumn === -1 || !this.get_normalizeSize()) && (this.colorMapColumn === -1 || !this.get_dynamicColor())) {
                  this._lastNormalizeSizeColumnIndex$1 = -1, this._lastDynamicColorColumnIndex$1 = -1;
                  return;
                }
                if (this._table_backcompat$1 = this._table$1.clone(), this.sizeColumn > -1 && this.get_normalizeSize()) {
                  for (var $ = [], De = s.ss.enumerate(this._table_backcompat$1.rows); De.moveNext(); ) {
                    var Re = De.current;
                    $.push(this.normalizePointSize(parseFloat(Re[this.sizeColumn])).toString());
                  }
                  this._table_backcompat$1.addColumn(this._normalizeSizeColumnName$1, $), this._lastNormalizeSizeColumnIndex$1 = this._table_backcompat$1.header.length - 1;
                } else
                  this._lastNormalizeSizeColumnIndex$1 = -1;
                if (this.colorMapColumn > -1 && this.get_dynamicColor()) {
                  for (var Ie = [], O = s.ss.enumerate(this._table_backcompat$1.rows); O.moveNext(); ) {
                    var Re = O.current;
                    Ie.push(this.get_colorMapper().findClosestColor(this.normalizeColorMapValue(parseFloat(Re[this.get_colorMapColumn()]))).toSimpleHex());
                  }
                  this._table_backcompat$1.addColumn(this._dynamicColorColumnName$1, Ie), this._lastDynamicColorColumnIndex$1 = this._table_backcompat$1.header.length - 1;
                } else
                  this._lastDynamicColorColumnIndex$1 = -1;
              },
              guessHeaderAssignments: function() {
                for (var $ = 0, De = s.ss.enumerate(this._table$1.header); De.moveNext(); ) {
                  var Re = De.current;
                  this._guessHeaderAssignment$1(Re, $++);
                }
                this._table$1.header.length > 0 && (this.nameColumn = 0);
              },
              guessHeaderAssignmentsFromVoTable: function($) {
                var De = $.getDecColumn();
                De != null && (this.latColumn = De.index, this.astronomical = !0);
                var Re = $.getRAColumn();
                Re != null && (this.lngColumn = Re.index, this.astronomical = !0, this.pointScaleType = 4);
                var Ie = $.getMagColumn();
                Ie != null && (this.sizeColumn = Ie.index);
                for (var O = 0, Ue = s.ss.enumerate($.column); Ue.moveNext(); ) {
                  var $e = Ue.current;
                  this._guessHeaderAssignment$1($e.name, O++);
                }
                this._table$1.header.length > 0 && (this.nameColumn = 0);
              },
              _guessHeaderAssignment$1: function($, De) {
                $ = $.toLowerCase(), $.indexOf("lat") > -1 && this.latColumn === -1 && (this.latColumn = De), ($.indexOf("lon") > -1 || $.indexOf("lng") > -1) && this.lngColumn === -1 && (this.lngColumn = De), $.indexOf("dec") > -1 && this.latColumn === -1 && (this.latColumn = De, this.astronomical = !0), ($.indexOf("ra") > -1 || $.indexOf("ascen") > -1) && this.lngColumn === -1 && (this.lngColumn = De, this.astronomical = !0, this.pointScaleType = 4), ($.indexOf("mag") > -1 || $.indexOf("size") > -1) && this.sizeColumn === -1 && (this.sizeColumn = De), ($.indexOf("date") > -1 || $.indexOf("time") > -1 || $.indexOf("dt") > -1 || $.indexOf("tm") > -1) && ($.indexOf("end") > -1 && this.endDateColumn === -1 ? this.endDateColumn = De : this.startDateColumn === -1 && (this.startDateColumn = De)), ($.indexOf("altitude") > -1 || $.indexOf("alt") > -1) && this.altColumn === -1 && (this.altColumn = De, this.set_altType(1), this.set_altUnit(1)), $.indexOf("depth") > -1 && this.altColumn === -1 && (this.altColumn = De, this.set_altType(0), this.set_altUnit(5)), s.ss.startsWith($, "x") && this.get_xAxisColumn() === -1 && this.set_xAxisColumn(De), s.ss.startsWith($, "y") && this.get_yAxisColumn() === -1 && this.set_yAxisColumn(De), s.ss.startsWith($, "z") && this.get_zAxisColumn() === -1 && this.set_zAxisColumn(De), $.indexOf("color") > -1 && this.get_colorMapColumn() === -1 && this.set_colorMapColumn(De), ($.indexOf("geometry") > -1 || $.indexOf("geography") > -1) && this.geometryColumn === -1 && (this.geometryColumn = De);
              },
              computeDateDomainRange: function($, De) {
                $ === -1 && ($ = this.startDateColumn), De === -1 && (De = this.endDateColumn), De === -1 && (De = $), this.set_beginRange(/* @__PURE__ */ new Date("12/31/2100")), this.set_endRange(/* @__PURE__ */ new Date("12/31/1890"));
                for (var Re = s.ss.enumerate(this._table$1.rows); Re.moveNext(); ) {
                  var Ie = Re.current;
                  try {
                    if ($ > -1) {
                      var O = !0, Ue = /* @__PURE__ */ new Date("12/31/2100");
                      try {
                        Ue = new Date(Ie[$]), Ue < this.get_beginRange() && this.set_beginRange(Ue);
                      } catch {
                      }
                      try {
                        var $e = /* @__PURE__ */ new Date("12/31/1890");
                        De > -1 && ($e = new Date(Ie[De]), O && $e > this.get_endRange() && this.set_endRange($e));
                      } catch {
                      }
                    }
                  } catch {
                  }
                }
              },
              checkState: function() {
              },
              getMaxValue: function($) {
                var De = 0;
                this._table$1.lock();
                for (var Re = s.ss.enumerate(this._table$1.rows); Re.moveNext(); ) {
                  var Ie = Re.current;
                  try {
                    if ($ > -1) {
                      var O = !0;
                      try {
                        var Ue = parseFloat(Ie[$]);
                        O && Ue > De && (De = Ue);
                      } catch {
                      }
                    }
                  } catch {
                  }
                }
                return this._table$1.unlock(), De;
              },
              getDomainValues: function($) {
                var De = [];
                this._table$1.lock();
                for (var Re = s.ss.enumerate(this._table$1.rows); Re.moveNext(); ) {
                  var Ie = Re.current;
                  try {
                    $ > -1 && (De.indexOf(Ie[$]) >= 0 || De.push(Ie[$]));
                  } catch {
                  }
                }
                return De.sort(), this._table$1.unlock(), De;
              },
              get_barChartBitmask: function() {
                return this._barChartBitmask$1;
              },
              set_barChartBitmask: function($) {
                return this._barChartBitmask$1 = $, $;
              },
              _isPointInFrustum$1: function($, De) {
                for (var Re = new l.Vector4d($.x, $.y, $.z, 1), Ie = 0; Ie < 6; Ie++)
                  if (De[Ie].dot(Re) < 0)
                    return !1;
                return !0;
              },
              getTableDataInView: function() {
                for (var $ = "", De = !0, Re = s.ss.enumerate(this.get_header()); Re.moveNext(); ) {
                  var Ie = Re.current;
                  De ? De = !1 : $ += "	", $ += Ie;
                }
                $ += `\r
`;
                for (var O = s.ss.enumerate(this.get__table().rows); O.moveNext(); ) {
                  var Ue = O.current, $e = parseFloat(Ue[this.get_lngColumn()]), Ze = parseFloat(Ue[this.get_latColumn()]), Qe = Ve.Coordinates.geoTo3dDouble(Ze, $e);
                  if (this._isPointInFrustum$1(Qe, c.globalRenderContext.get_frustum())) {
                    De = !0;
                    for (var Ae = s.ss.enumerate(Ue); Ae.moveNext(); ) {
                      var Ie = Ae.current;
                      De ? De = !1 : $ += "	", $ += Ie;
                    }
                    $ += `\r
`;
                  }
                }
                return $;
              },
              prepVertexBuffer: function($, De) {
                this._table$1.lock(), this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList != null && this.triangleList.clear(), this.pointList != null && this.pointList.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.lineList == null && (this.lineList = new u.LineList()), this.pointList == null && (this.pointList = new u.PointList($)), this.lineList.timeSeries = this.timeSeries, this.lineList2d == null && (this.lineList2d = new u.LineList(), this.lineList2d.set_depthBuffered(!1)), this.lineList.timeSeries = this.timeSeries, this.triangleList == null && (this.triangleList = new u.TriangleList()), this.triangleList2d == null && (this.triangleList2d = new u.TriangleList(), this.triangleList2d.depthBuffered = !1), this.positions.length = 0;
                var Re = 0, Ie = this.get_color(), O = Ve.Coordinates.meanObliquityOfEcliptic(Me.SpaceTimeController.get_jNow()) / 180 * Math.PI, Ue = (0, o.layerManagerGetAllMaps)()[this.get_referenceFrame()].frame.meanRadius;
                Ue && (this._meanRadius$1 = Ue);
                for (var $e = new l.Vector3d(), Ze = 2e-4, Qe = Ee.Colors.get_white(), Ae = 0, Ne = 0, Be = s.ss.enumerate(this._table$1.rows); Be.moveNext(); ) {
                  var Ge = Be.current;
                  try {
                    if (this.geometryColumn > -1 || !this.get_coordinatesType() && this.lngColumn > -1 && this.latColumn > -1 || this.get_coordinatesType() === 1 && this.get_xAxisColumn() > -1 && this.get_yAxisColumn() > -1) {
                      var Ye = 0, je = 0, ht = 0, qe = 1, lt = 0, ft = 0, _t = this.getScaleFactor(this.get_altUnit(), 1);
                      if (this.altColumn === -1 || this.get_altType() === 3 || this.bufferIsFlat)
                        qe = 1, (this.astronomical & !this.bufferIsFlat) === 1 && (qe = 63239.6717 * 100);
                      else {
                        this.get_altType() || (_t = -_t), qe = 0;
                        try {
                          qe = parseFloat(Ge[this.altColumn]);
                        } catch {
                        }
                        this.astronomical ? (_t = _t / (1e3 * 149598e3), ft = qe * _t / 206264.806, lt = _t * qe, qe = _t * qe) : this.get_altType() === 2 ? (lt = _t * qe, qe = _t * qe / this._meanRadius$1) : (lt = _t * qe, qe = 1 + _t * qe / this._meanRadius$1);
                      }
                      if (!this.get_coordinatesType() && this.lngColumn > -1 && this.latColumn > -1) {
                        Ye = parseFloat(Ge[this.lngColumn]), je = parseFloat(Ge[this.latColumn]), this.astronomical ? (this.get_raUnits() || (Ye *= 15), this.bufferIsFlat) : Ye += 180;
                        var St = Ve.Coordinates.geoTo3dRad(je, Ye, qe);
                        this.astronomical && !this.bufferIsFlat && St.rotateX(O), $e = St, this.positions.push($e);
                      } else if (this.get_coordinatesType() === 1) {
                        var yt = this.getScaleFactor(this.get_cartesianScale(), this.get_cartesianCustomScale());
                        this.astronomical ? yt /= 1e3 * 149598e3 : yt /= this._meanRadius$1, this.get_zAxisColumn() > -1 && (ht = parseFloat(Ge[this.get_zAxisColumn()])), Ye = parseFloat(Ge[this.get_xAxisColumn()]), je = parseFloat(Ge[this.get_yAxisColumn()]), this.get_xAxisReverse() && (Ye = -Ye), this.get_yAxisReverse() && (je = -je), this.get_zAxisReverse() && (ht = -ht), $e = l.Vector3d.create(Ye * yt, ht * yt, je * yt), this.positions.push($e);
                      }
                      switch (this.get_colorMap()) {
                        case 0:
                          Qe = Ie;
                          break;
                        case 3:
                          this.get_colorMapColumn() > -1 ? this.get_dynamicColor() ? Qe = this.get_colorMapper().findClosestColor(this.normalizeColorMapValue(parseFloat(Ge[this.get_colorMapColumn()]))) : Qe = this._parseColor$1(Ge[this.get_colorMapColumn()], Ie) : Qe = Ie;
                          break;
                        default:
                          break;
                      }
                      if (Qe == null && (Qe = Ee.Colors.get_transparent()), this.sizeColumn > -1)
                        switch (this.pointScaleType) {
                          case 0:
                            Ze = parseFloat(Ge[this.sizeColumn]), Ze = this.normalizePointSize(Ze);
                            break;
                          case 2:
                            Ze = parseFloat(Ge[this.sizeColumn]), Ze = Math.log(Ze);
                            break;
                          case 1:
                            try {
                              Ze = parseFloat(Ge[this.sizeColumn]), Ze = this.normalizePointSize(Ze), Ze = Math.pow(2, Ze);
                            } catch {
                              Ze = 0;
                            }
                            break;
                          case 4:
                            var Ct = 0;
                            try {
                              Ct = parseFloat(Ge[this.sizeColumn]), this.bufferIsFlat ? Ze = 40 / Math.pow(1.6, Ct) : (Ct = Ct - 5 * (t.Util.logN(ft, 10) - 1), Ze = 12e7 / Math.pow(1.6, Ct));
                            } catch {
                              Ze = 0;
                            }
                            break;
                          case 3:
                            Ze = 1;
                            break;
                          default:
                            break;
                        }
                      else
                        Ze = 0.2;
                      if (this.get_plotType() === 1 && (Ze = 1), this.astronomical & !this.bufferIsFlat, this.startDateColumn > -1) {
                        var Lt = new Date(Ge[this.startDateColumn]);
                        Ae = Me.SpaceTimeController.utcToJulian(Lt) - Me.SpaceTimeController.utcToJulian(this.baseDate), this.endDateColumn > -1 ? (Lt = new Date(Ge[this.endDateColumn]), Ne = Me.SpaceTimeController.utcToJulian(Lt) - Me.SpaceTimeController.utcToJulian(this.baseDate)) : Ne = Ae;
                      }
                      this.pointList.addPoint($e, Qe, new u.Dates(Ae, Ne), Ze), this.geometryColumn > -1 && this._parseGeometry$1(Ge[this.geometryColumn], Qe, Qe, lt, new u.Dates(Ae, Ne)), Re++;
                    }
                  } catch {
                  }
                  this.lines = !1;
                }
                return this._table$1.unlock(), this._dataDirty$1 = !1, this.dirty = !1, !1;
              },
              _parseGeometry$1: function($, De, Re, Ie, O) {
                $ = s.ss.trim($).toLowerCase();
                var Ue = $.indexOf("(");
                if (!(Ue < 0) && s.ss.endsWith($, ")")) {
                  var $e = s.ss.trim($.substring(0, Ue)), Ze = $.substr(Ue), Qe = $e.split(" "), Ae = null, Ne = null;
                  if (Qe.length > 0)
                    for (var Be = s.ss.enumerate(Qe); Be.moveNext(); ) {
                      var Ge = Be.current;
                      s.ss.emptyString(Ae) ? Ae = Ge : s.ss.emptyString(Ne) && (Ne = Ge);
                    }
                  switch (Ae) {
                    case "multipolygon":
                    case "polygon":
                      this._parsePolygon$1(Ze, Ne, De, Re, Ie, O);
                      break;
                    case "multilinestring":
                      this._parseLineString$1(Ze, Ne, De, Ie, !1, O);
                      break;
                    case "linestring":
                      this._parseLineString$1(Ze, Ne, De, Ie, !0, O);
                      break;
                    case "geometrycollection":
                      Ze = Ze.substring(1, Ze.length - 2);
                      for (var Ye = B.UiTools.splitString(Ze, ","), je = s.ss.enumerate(Ye); je.moveNext(); ) {
                        var ht = je.current;
                        this._parseGeometry$1(ht, De, Re, Ie, O);
                      }
                      break;
                  }
                }
              },
              _parsePolygon$1: function($, De, Re, Ie, O, Ue) {
                if (!(!s.ss.startsWith($, "(") && s.ss.endsWith($, ")"))) {
                  $ = $.substring(1, $.length - 2);
                  for (var $e = B.UiTools.splitString($, ","), Ze = s.ss.enumerate($e); Ze.moveNext(); ) {
                    var Qe = Ze.current, Ae = new Se();
                    Ae.astronomical = this.astronomical, Ae.meanRadius = this._meanRadius$1, Ae.parseWkt(Qe, De, O, Ue), O ? this._addPolygon$1(!1, Ae, 1, Ie, Re, !0, !0, Ue) : this._addPolygonFlat$1(!1, Ae, 1, Ie, Re, !0, !0, Ue);
                  }
                }
              },
              _parseLineString$1: function($, De, Re, Ie, O, Ue) {
                if (!(!s.ss.startsWith($, "(") && s.ss.endsWith($, ")"))) {
                  O || ($ = $.substring(1, $.length - 2));
                  for (var $e = B.UiTools.splitString($, ","), Ze = s.ss.enumerate($e); Ze.moveNext(); ) {
                    var Qe = Ze.current, Ae = new Se();
                    Ae.astronomical = this.astronomical, Ae.meanRadius = this._meanRadius$1, Ae.parseWkt(Qe, De, Ie, Ue), this._addPolygon$1(!1, Ae, 1, Ee.Colors.get_white(), Re, !1, !1, Ue);
                  }
                }
              },
              _splitShapes$1: function($) {
                for (var De = [], Re = 0; Re < $.length; )
                  $.substr(Re, 1);
                return De;
              },
              _addPolygon$1: function($, De, Re, Ie, O, Ue, $e, Ze) {
                for (var Qe = [], Ae = [], Ne = 0; Ne < De.pointList.length; Ne++)
                  Qe.push(Ve.Coordinates.geoTo3dRad(De.pointList[Ne].lat, De.pointList[Ne].lng, 1 + De.pointList[Ne].alt / this._meanRadius$1)), Ae.push(Ve.Coordinates.geoTo3dRad(De.pointList[Ne].lat, De.pointList[Ne].lng, 1));
                for (var Ne = 0; Ne < De.pointList.length - 1; Ne++)
                  $ || (Ue && this.triangleList.addQuad(Qe[Ne], Qe[Ne + 1], Ae[Ne], Ae[Ne + 1], Ie, Ze), Re > 0 && (Ue ? this.lineList.addLine(Qe[Ne], Qe[Ne + 1], O, Ze) : this.lineList2d.addLine(Qe[Ne], Qe[Ne + 1], O, Ze), Ue && (this.lineList.addLine(Ae[Ne], Ae[Ne + 1], O, Ze), this.lineList.addLine(Qe[Ne], Ae[Ne], O, Ze), this.lineList.addLine(Qe[Ne + 1], Ae[Ne + 1], O, Ze))));
                if ($e)
                  for (var Be = g.Tessellator.tesselateSimplePoly(Qe), Ne = 0; Ne < Be.length; Ne += 3)
                    this.triangleList.addTriangle(Qe[Be[Ne]], Qe[Be[Ne + 1]], Qe[Be[Ne + 2]], Ie, Ze);
              },
              _addPolygonFlat$1: function($, De, Re, Ie, O, Ue, $e, Ze) {
                for (var Qe = [], Ae = 0; Ae < De.pointList.length; Ae++)
                  Qe.push(Ve.Coordinates.geoTo3dRad(De.pointList[Ae].lat, De.pointList[Ae].lng, 1 + De.pointList[Ae].alt / this._meanRadius$1));
                for (var Ae = 0; Ae < De.pointList.length - 1; Ae++)
                  $ || Re > 0 && this.lineList2d.addLine(Qe[Ae], Qe[Ae + 1], O, Ze);
                if ($e)
                  for (var Ne = g.Tessellator.tesselateSimplePoly(Qe), Ae = 0; Ae < Ne.length; Ae += 3)
                    this.triangleList2d.addSubdividedTriangles(Qe[Ne[Ae]], Qe[Ne[Ae + 1]], Qe[Ne[Ae + 2]], Ie, Ze, 2);
              },
              _parseColor$1: function($, De) {
                return Ee.Color.load($);
              },
              getScaleFactor: function($, De) {
                var Re = 1;
                switch ($) {
                  case 1:
                    Re = 1;
                    break;
                  case 2:
                    Re = 1 * 0.3048;
                    break;
                  case 3:
                    Re = 1 / 12 * 0.3048;
                    break;
                  case 4:
                    Re = 5280 * 0.3048;
                    break;
                  case 5:
                    Re = 1e3;
                    break;
                  case 6:
                    Re = 1e3 * 149598e3;
                    break;
                  case 7:
                    Re = 1e3 * 149598e3 * 63239.6717;
                    break;
                  case 8:
                    Re = 1e3 * 149598e3 * 206264.806;
                    break;
                  case 9:
                    Re = 1e3 * 149598e3 * 206264.806 * 1e6;
                    break;
                  case 10:
                    Re = De;
                    break;
                }
                return Re;
              },
              get__table: function() {
                return this._table$1;
              },
              set__table: function($) {
                return this._table$1 = $, $;
              },
              useHeadersFromVoTable: function($) {
                for (var De = s.ss.enumerate($.column); De.moveNext(); ) {
                  var Re = De.current;
                  this.get_header().push(Re.name);
                }
                this.guessHeaderAssignmentsFromVoTable($), $.getRAColumn() != null && $.getRAColumn().unit.toLowerCase() === "deg" && this.set_raUnits(1);
              },
              loadFromString: function($, De, Re, Ie, O) {
                if (De || (this._table$1 = new Le.Table()), this._table$1.lock(), this._table$1.loadFromString($, De, Ie, O), !De && (this.guessHeaderAssignments(), this.astronomical && this.lngColumn > -1)) {
                  var Ue = this.getMaxValue(this.lngColumn);
                  Ue > 24 && this.set_raUnits(1);
                }
                Re && this.purgeByTime(), this._table$1.unlock();
              },
              purgeByTime: function() {
                if (!(this.startDateColumn < 0)) {
                  var $ = this.startDateColumn;
                  this.endDateColumn > -1 && ($ = this.endDateColumn);
                  var De = Me.SpaceTimeController.get_now(), Re = s.ss.truncate(this.decay) * 24 * 60 * 60 * 1e3;
                  De = new Date(De.getDate() - Re);
                  for (var Ie = this._table$1.rows.length, O = 0; O < Ie; O++)
                    try {
                      var Ue = this._table$1.rows[O], $e = new Date(Ue[$]);
                      $e < De && (this._table$1.rows.splice(O, 1), Ie--, O--);
                    } catch {
                    }
                }
              },
              cleanUp: function() {
                this.cleanUpBase(), this._table$1.lock(), b.Layer.prototype.cleanUp.call(this), this._table$1.unlock(), this.dirty = !0;
              },
              writeLayerProperties: function($) {
                $._writeAttributeString("TimeSeries", this.get_timeSeries().toString()), $._writeAttributeString("BeginRange", t.Util.xmlDate(this.get_beginRange())), $._writeAttributeString("EndRange", t.Util.xmlDate(this.get_endRange())), $._writeAttributeString("Decay", this.get_decay().toString()), $._writeAttributeString("CoordinatesType", a.Enums.toXml("CoordinatesTypes", this.get_coordinatesType())), $._writeAttributeString("LatColumn", this.get_latColumn().toString()), $._writeAttributeString("LngColumn", this.get_lngColumn().toString()), $._writeAttributeString("GeometryColumn", this.get_geometryColumn().toString()), $._writeAttributeString("AltType", a.Enums.toXml("AltTypes", this.get_altType())), $._writeAttributeString("MarkerMix", a.Enums.toXml("MarkerMixes", this.get_markerMix())), $._writeAttributeString("ColorMap", a.Enums.toXml("ColorMaps", this.get_colorMap())), $._writeAttributeString("MarkerColumn", this.get_markerColumn().toString()), $._writeAttributeString("PlotType", a.Enums.toXml("PlotTypes", this.get_plotType())), $._writeAttributeString("MarkerIndex", this.get_markerIndex().toString()), $._writeAttributeString("MarkerScale", a.Enums.toXml("MarkerScales", this.get_markerScale())), $._writeAttributeString("AltUnit", a.Enums.toXml("AltUnits", this.get_altUnit())), $._writeAttributeString("AltColumn", this.get_altColumn().toString()), $._writeAttributeString("StartDateColumn", this.get_startDateColumn().toString()), $._writeAttributeString("EndDateColumn", this.get_endDateColumn().toString()), this._prepareBackCompatTable$1(), this._lastNormalizeSizeColumnIndex$1 > -1 ? ($._writeAttributeString("SizeColumn", this._lastNormalizeSizeColumnIndex$1), $._writeAttributeString("NormalizeSizeColumn", this.sizeColumn.toString())) : $._writeAttributeString("SizeColumn", this.get_sizeColumn().toString()), $._writeAttributeString("NormalizeSize", this.get_normalizeSize().toString()), $._writeAttributeString("NormalizeSizeClip", this.get_normalizeSizeClip().toString()), $._writeAttributeString("NormalizeSizeMin", this.get_normalizeSizeMin().toString()), $._writeAttributeString("NormalizeSizeMax", this.get_normalizeSizeMax().toString()), this._lastDynamicColorColumnIndex$1 > -1 ? ($._writeAttributeString("ColorMapColumn", this._lastDynamicColorColumnIndex$1), $._writeAttributeString("DynamicColorColumn", this.get_colorMapColumn().toString())) : $._writeAttributeString("ColorMapColumn", this.get_colorMapColumn().toString()), $._writeAttributeString("DynamicColor", this.get_dynamicColor().toString()), $._writeAttributeString("ColorMapperName", this.get_colorMapperName()), $._writeAttributeString("NormalizeColorMap", this.get_normalizeColorMap().toString()), $._writeAttributeString("NormalizeColorMapMin", this.get_normalizeColorMapMin().toString()), $._writeAttributeString("NormalizeColorMapMax", this.get_normalizeColorMapMax().toString()), $._writeAttributeString("HyperlinkFormat", this.get_hyperlinkFormat()), $._writeAttributeString("HyperlinkColumn", this.get_hyperlinkColumn().toString()), $._writeAttributeString("ScaleFactor", this.get_scaleFactor().toString()), $._writeAttributeString("PointScaleType", a.Enums.toXml("PointScaleTypes", this.get_pointScaleType())), $._writeAttributeString("ShowFarSide", this.get_showFarSide().toString()), $._writeAttributeString("RaUnits", a.Enums.toXml("RAUnits", this.get_raUnits())), $._writeAttributeString("HoverTextColumn", this.get_nameColumn().toString()), $._writeAttributeString("XAxisColumn", this.get_xAxisColumn().toString()), $._writeAttributeString("XAxisReverse", this.get_xAxisReverse().toString()), $._writeAttributeString("YAxisColumn", this.get_yAxisColumn().toString()), $._writeAttributeString("YAxisReverse", this.get_yAxisReverse().toString()), $._writeAttributeString("ZAxisColumn", this.get_zAxisColumn().toString()), $._writeAttributeString("ZAxisReverse", this.get_zAxisReverse().toString()), $._writeAttributeString("CartesianScale", a.Enums.toXml("AltUnits", this.get_cartesianScale())), $._writeAttributeString("CartesianCustomScale", this.get_cartesianCustomScale().toString()), $._writeAttributeString("DynamicData", this.get_dynamicData().toString()), $._writeAttributeString("AutoUpdate", this.get_autoUpdate().toString()), $._writeAttributeString("DataSourceUrl", this.get_dataSourceUrl());
              },
              get_dynamicData: function() {
                return this._dynamicData$1;
              },
              set_dynamicData: function($) {
                return this._dynamicData$1 = $, $;
              },
              get_autoUpdate: function() {
                return this._autoUpdate$1;
              },
              set_autoUpdate: function($) {
                return this._autoUpdate$1 = $, $;
              },
              get_dataSourceUrl: function() {
                return this._dataSourceUrl$1;
              },
              set_dataSourceUrl: function($) {
                return this._dataSourceUrl$1 = $, $;
              },
              get_timeSeries: function() {
                return this.timeSeries;
              },
              set_timeSeries: function($) {
                return this.timeSeries !== $ && (this.version++, this.timeSeries = $), $;
              },
              get_beginRange: function() {
                return this._beginRange$1;
              },
              set_beginRange: function($) {
                return s.ss.compareDates(this._beginRange$1, $) || (this.version++, this._beginRange$1 = $), $;
              },
              get_endRange: function() {
                return this._endRange$1;
              },
              set_endRange: function($) {
                return s.ss.compareDates(this._endRange$1, $) || (this.version++, this._endRange$1 = $), $;
              },
              initializeFromXml: function($) {
                this.set_timeSeries(s.ss.boolean($.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date($.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date($.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat($.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(a.Enums.parse("CoordinatesTypes", $.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt($.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt($.attributes.getNamedItem("LngColumn").nodeValue)), $.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt($.attributes.getNamedItem("GeometryColumn").nodeValue)), this.set_altType(a.Enums.parse("AltTypes", $.attributes.getNamedItem("AltType").nodeValue)), this.set_markerMix(0), this.set_colorMap(a.Enums.parse("ColorMaps", $.attributes.getNamedItem("ColorMap").nodeValue)), this.set_markerColumn(parseInt($.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt($.attributes.getNamedItem("ColorMapColumn").nodeValue)), this.set_plotType(a.Enums.parse("PlotTypes", $.attributes.getNamedItem("PlotType").nodeValue)), this.set_markerIndex(parseInt($.attributes.getNamedItem("MarkerIndex").nodeValue)), this.set_markerScale(a.Enums.parse("MarkerScales", $.attributes.getNamedItem("MarkerScale").nodeValue)), this.set_altUnit(a.Enums.parse("AltUnits", $.attributes.getNamedItem("AltUnit").nodeValue)), this.set_altColumn(parseInt($.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt($.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt($.attributes.getNamedItem("EndDateColumn").nodeValue)), $.attributes.getNamedItem("NormalizeSizeColumn") != null ? this.set_sizeColumn(parseInt($.attributes.getNamedItem("NormalizeSizeColumn").nodeValue)) : this.set_sizeColumn(parseInt($.attributes.getNamedItem("SizeColumn").nodeValue)), $.attributes.getNamedItem("NormalizeSize") != null && (this.set_normalizeSize(s.ss.boolean($.attributes.getNamedItem("NormalizeSize").nodeValue)), this.set_normalizeSizeClip(s.ss.boolean($.attributes.getNamedItem("NormalizeSizeClip").nodeValue)), this.set_normalizeSizeMin(parseFloat($.attributes.getNamedItem("NormalizeSizeMin").nodeValue)), this.set_normalizeSizeMax(parseFloat($.attributes.getNamedItem("NormalizeSizeMax").nodeValue))), $.attributes.getNamedItem("DynamicColorColumn") != null ? this.set_colorMapColumn(parseInt($.attributes.getNamedItem("DynamicColorColumn").nodeValue)) : this.set_colorMapColumn(parseInt($.attributes.getNamedItem("ColorMapColumn").nodeValue)), $.attributes.getNamedItem("DynamicColor") != null && (this.set_dynamicColor(s.ss.boolean($.attributes.getNamedItem("DynamicColor").nodeValue)), this.set_colorMapperName($.attributes.getNamedItem("ColorMapperName").nodeValue), this.set_normalizeColorMap(s.ss.boolean($.attributes.getNamedItem("NormalizeColorMap").nodeValue)), this.set_normalizeColorMapMin(parseFloat($.attributes.getNamedItem("NormalizeColorMapMin").nodeValue)), this.set_normalizeColorMapMax(parseFloat($.attributes.getNamedItem("NormalizeColorMapMax").nodeValue))), this.set_hyperlinkFormat($.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt($.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat($.attributes.getNamedItem("ScaleFactor").nodeValue)), this.set_pointScaleType(a.Enums.parse("PointScaleTypes", $.attributes.getNamedItem("PointScaleType").nodeValue)), $.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(s.ss.boolean($.attributes.getNamedItem("ShowFarSide").nodeValue)), $.attributes.getNamedItem("RaUnits") != null && this.set_raUnits(a.Enums.parse("RAUnits", $.attributes.getNamedItem("RaUnits").nodeValue)), $.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt($.attributes.getNamedItem("HoverTextColumn").nodeValue)), $.attributes.getNamedItem("XAxisColumn") != null && (this.set_xAxisColumn(parseInt($.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(s.ss.boolean($.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt($.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(s.ss.boolean($.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt($.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(s.ss.boolean($.attributes.getNamedItem("ZAxisReverse").nodeValue)), this.set_cartesianScale(a.Enums.parse("AltUnits", $.attributes.getNamedItem("CartesianScale").nodeValue)), this.set_cartesianCustomScale(parseFloat($.attributes.getNamedItem("CartesianCustomScale").nodeValue))), $.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(s.ss.boolean($.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(s.ss.boolean($.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl($.attributes.getNamedItem("DataSourceUrl").nodeValue));
              },
              get_decay: function() {
                return this.decay;
              },
              set_decay: function($) {
                return this.decay !== $ && (this.version++, this.decay = $), $;
              },
              get_coordinatesType: function() {
                return this._coordinatesType$1;
              },
              set_coordinatesType: function($) {
                return this._coordinatesType$1 !== $ && (this.version++, this._coordinatesType$1 = $), $;
              },
              get_latColumn: function() {
                return this.latColumn;
              },
              set_latColumn: function($) {
                return this.latColumn !== $ && (this.version++, this.latColumn = $), $;
              },
              get_lngColumn: function() {
                return this.lngColumn;
              },
              set_lngColumn: function($) {
                return this.lngColumn !== $ && (this.version++, this.lngColumn = $), $;
              },
              get_geometryColumn: function() {
                return this.geometryColumn;
              },
              set_geometryColumn: function($) {
                return this.geometryColumn !== $ && (this.version++, this.geometryColumn = $), $;
              },
              get_xAxisColumn: function() {
                return this._xAxisColumn$1;
              },
              set_xAxisColumn: function($) {
                return this._xAxisColumn$1 !== $ && (this.version++, this._xAxisColumn$1 = $), $;
              },
              get_yAxisColumn: function() {
                return this._yAxisColumn$1;
              },
              set_yAxisColumn: function($) {
                return this._yAxisColumn$1 !== $ && (this.version++, this._yAxisColumn$1 = $), $;
              },
              get_zAxisColumn: function() {
                return this._zAxisColumn$1;
              },
              set_zAxisColumn: function($) {
                return this._zAxisColumn$1 !== $ && (this.version++, this._zAxisColumn$1 = $), $;
              },
              get_xAxisReverse: function() {
                return this._xAxisReverse$1;
              },
              set_xAxisReverse: function($) {
                return this._xAxisReverse$1 !== $ && (this.version++, this._xAxisReverse$1 = $), $;
              },
              get_yAxisReverse: function() {
                return this._yAxisReverse$1;
              },
              set_yAxisReverse: function($) {
                return this._yAxisReverse$1 !== $ && (this.version++, this._yAxisReverse$1 = $), $;
              },
              get_zAxisReverse: function() {
                return this._zAxisReverse$1;
              },
              set_zAxisReverse: function($) {
                return this._zAxisReverse$1 !== $ && (this.version++, this._zAxisReverse$1 = $), $;
              },
              get_altType: function() {
                return this._altType$1;
              },
              set_altType: function($) {
                return this._altType$1 !== $ && (this.version++, this._altType$1 = $), $;
              },
              get_markerMix: function() {
                return this._markerMix$1;
              },
              set_markerMix: function($) {
                return this._markerMix$1 !== $ && (this.version++, this._markerMix$1 = $), $;
              },
              get_raUnits: function() {
                return this._raUnits$1;
              },
              set_raUnits: function($) {
                return this._raUnits$1 !== $ && (this.version++, this._raUnits$1 = $), $;
              },
              get_colorMap: function() {
                return this.colorMap;
              },
              set_colorMap: function($) {
                return this.colorMap !== $ && (this.version++, this.colorMap = $), $;
              },
              get_colorMapperName: function() {
                return this.colorMapperName;
              },
              set_colorMapperName: function($) {
                if (k.ColorMapContainer.fromNamedColormap($) == null)
                  throw new Error("Invalid colormap name");
                return this.version++, this.colorMapperName = $, $;
              },
              get_colorMapper: function() {
                return k.ColorMapContainer.fromNamedColormap(this.colorMapperName);
              },
              get_dynamicColor: function() {
                return this.dynamicColor;
              },
              set_dynamicColor: function($) {
                return this.version++, this.dynamicColor = $, $;
              },
              get_normalizeColorMap: function() {
                return this.normalizeColorMap;
              },
              set_normalizeColorMap: function($) {
                return this.version++, this.normalizeColorMap = $, $;
              },
              get_normalizeColorMapMin: function() {
                return this.normalizeColorMapMin;
              },
              set_normalizeColorMapMin: function($) {
                return this.version++, this.normalizeColorMapMin = $, $;
              },
              get_normalizeColorMapMax: function() {
                return this.normalizeColorMapMax;
              },
              set_normalizeColorMapMax: function($) {
                return this.version++, this.normalizeColorMapMax = $, $;
              },
              normalizeColorMapValue: function($) {
                if (!this.get_normalizeColorMap())
                  return $;
                var De = ($ - this.get_normalizeColorMapMin()) / (this.get_normalizeColorMapMax() - this.get_normalizeColorMapMin());
                return De < 0 ? De = 0 : De > 1 && (De = 1), De;
              },
              get_markerColumn: function() {
                return this._markerColumn$1;
              },
              set_markerColumn: function($) {
                return this._markerColumn$1 !== $ && (this.version++, this._markerColumn$1 = $), $;
              },
              get_colorMapColumn: function() {
                return this.colorMapColumn;
              },
              set_colorMapColumn: function($) {
                return this.colorMapColumn !== $ && (this.version++, this.colorMapColumn = $), $;
              },
              get_plotType: function() {
                return this._plotType$1;
              },
              set_plotType: function($) {
                return this._plotType$1 !== $ && (this.version++, this._plotType$1 = $), $;
              },
              get_markerIndex: function() {
                return this._markerIndex$1;
              },
              set_markerIndex: function($) {
                return this._markerIndex$1 !== $ && (this.version++, this._markerIndex$1 = $), $;
              },
              get_showFarSide: function() {
                return this._showFarSide$1;
              },
              set_showFarSide: function($) {
                return this._showFarSide$1 !== $ && (this.version++, this._showFarSide$1 = $), $;
              },
              get_markerScale: function() {
                return this._markerScale$1;
              },
              set_markerScale: function($) {
                return this._markerScale$1 !== $ && (this.version++, this._markerScale$1 = $), $;
              },
              get_altUnit: function() {
                return this._altUnit$1;
              },
              set_altUnit: function($) {
                return this._altUnit$1 !== $ && (this.version++, this._altUnit$1 = $), $;
              },
              get_cartesianScale: function() {
                return this._cartesianScale$1;
              },
              set_cartesianScale: function($) {
                return this._cartesianScale$1 !== $ && (this.version++, this._cartesianScale$1 = $), $;
              },
              get_cartesianCustomScale: function() {
                return this._cartesianCustomScale$1;
              },
              set_cartesianCustomScale: function($) {
                return this._cartesianCustomScale$1 !== $ && (this.version++, this._cartesianCustomScale$1 = $), $;
              },
              get_altColumn: function() {
                return this.altColumn;
              },
              set_altColumn: function($) {
                return this.altColumn !== $ && (this.version++, this.altColumn = $), $;
              },
              get_startDateColumn: function() {
                return this.startDateColumn;
              },
              set_startDateColumn: function($) {
                return this.startDateColumn !== $ && (this.version++, this.startDateColumn = $), $;
              },
              get_endDateColumn: function() {
                return this.endDateColumn;
              },
              set_endDateColumn: function($) {
                return this.endDateColumn !== $ && (this.version++, this.endDateColumn = $), $;
              },
              get_sizeColumn: function() {
                return this.sizeColumn;
              },
              set_sizeColumn: function($) {
                return this.sizeColumn !== $ && (this.version++, this.sizeColumn = $), $;
              },
              get_normalizeSize: function() {
                return this.normalizeSize;
              },
              set_normalizeSize: function($) {
                return this.normalizeSize !== $ && (this.version++, this.normalizeSize = $), $;
              },
              get_normalizeSizeClip: function() {
                return this.normalizeSizeClip;
              },
              set_normalizeSizeClip: function($) {
                return this.normalizeSizeClip !== $ && (this.version++, this.normalizeSizeClip = $), $;
              },
              get_normalizeSizeMin: function() {
                return this.normalizeSizeMin;
              },
              set_normalizeSizeMin: function($) {
                return this.normalizeSizeMin !== $ && (this.version++, this.normalizeSizeMin = $), $;
              },
              get_normalizeSizeMax: function() {
                return this.normalizeSizeMax;
              },
              set_normalizeSizeMax: function($) {
                return this.normalizeSizeMax !== $ && (this.version++, this.normalizeSizeMax = $), $;
              },
              normalizePointSize: function($) {
                if (!this.get_normalizeSize())
                  return $;
                var De = ($ - this.get_normalizeSizeMin()) / (this.get_normalizeSizeMax() - this.get_normalizeSizeMin());
                return this.get_normalizeSizeClip() && (De < 0 ? De = 0 : De > 1 && (De = 1)), De;
              },
              get_nameColumn: function() {
                return this.nameColumn;
              },
              set_nameColumn: function($) {
                return this.nameColumn !== $ && (this.version++, this.nameColumn = $), $;
              },
              get_hyperlinkFormat: function() {
                return this._hyperlinkFormat$1;
              },
              set_hyperlinkFormat: function($) {
                return this._hyperlinkFormat$1 !== $ && (this.version++, this._hyperlinkFormat$1 = $), $;
              },
              get_hyperlinkColumn: function() {
                return this._hyperlinkColumn$1;
              },
              set_hyperlinkColumn: function($) {
                return this._hyperlinkColumn$1 !== $ && (this.version++, this._hyperlinkColumn$1 = $), $;
              },
              get_scaleFactor: function() {
                return this.scaleFactor;
              },
              set_scaleFactor: function($) {
                return this.scaleFactor !== $ && (this.version++, this.scaleFactor = $), $;
              },
              get_pointScaleType: function() {
                return this.pointScaleType;
              },
              set_pointScaleType: function($) {
                return this.pointScaleType !== $ && (this.version++, this.pointScaleType = $), $;
              },
              draw: function($, De, Re) {
                var Ie = $;
                this.version !== this.lastVersion && this.cleanUp(), this.lastVersion = this.version, this.bufferIsFlat !== Re && (this.cleanUp(), this.bufferIsFlat = Re), this.dirty && this.prepVertexBuffer(Ie, De);
                var O = Me.SpaceTimeController.get_jNow() - Me.SpaceTimeController.utcToJulian(this.baseDate), Ue = this.scaleFactor * 3;
                if (Re && this.astronomical && this._markerScale$1 === 1 && (Ue = this.scaleFactor / ($.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = O, this.triangleList2d.draw($, De * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = O, this.triangleList.draw($, De * this.get_opacity(), 1)), this.pointList != null)
                  switch (this.pointList.depthBuffered = !1, this.pointList.showFarSide = this.get_showFarSide(), this.pointList.decay = this.timeSeries ? this.decay : 0, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = O, this.pointList.scale = this._markerScale$1 === 1 ? Ue : -Ue, this._plotType$1) {
                    case 0:
                      this.pointList.draw($, De * this.get_opacity(), !1);
                      break;
                    case 2:
                      this.pointList.drawTextured($, Fe.get__circleTexture$1().texture2d, De * this.get_opacity());
                      break;
                    case 1:
                      this.pointList.drawTextured($, D.getPushPinTexture(19), De * this.get_opacity());
                      break;
                    case 3:
                      this.pointList.drawTextured($, D.getPushPinTexture(35), De * this.get_opacity());
                      break;
                    case 5:
                    case 4:
                      this.pointList.drawTextured($, D.getPushPinTexture(this._markerIndex$1), De * this.get_opacity());
                      break;
                  }
                return this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = O, this.lineList.drawLines($, De * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = O, this.lineList2d.drawLines($, De * this.get_opacity())), !0;
              },
              cleanUpBase: function() {
                this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
              }
            };
            (0, a.registerType)("SpreadSheetLayer", [Fe, He, b.Layer]);
            function We() {
              this._addedTiles$2 = {}, Fe.call(this);
            }
            var Ke = {
              addTileRows: function($, De) {
                if (!s.ss.keyExists(this._addedTiles$2, $)) {
                  for (var Re = s.ss.enumerate(De); Re.moveNext(); ) {
                    var Ie = Re.current;
                    this.get__table().rows.push(Ie);
                  }
                  this.dirty = !0, this._addedTiles$2[$] = !0;
                }
              },
              removeTileRows: function($, De) {
                if (s.ss.keyExists(this._addedTiles$2, $)) {
                  for (var Re = s.ss.enumerate(De); Re.moveNext(); ) {
                    var Ie = Re.current;
                    s.ss.remove(this.get__table().rows, Ie);
                  }
                  this.dirty = !0, delete this._addedTiles$2[$];
                }
              },
              cleanUp: function() {
                Fe.prototype.cleanUp.call(this), s.ss.clearKeys(this._addedTiles$2), this.get__table().rows.length = 0;
              }
            };
            (0, a.registerType)("CatalogSpreadSheetLayer", [We, Ke, Fe]);
          }
        ),
        /***/
        "./esm/layers/table.js": (
          /*!*****************************!*\
            !*** ./esm/layers/table.js ***!
            \*****************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Table: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../util.js */
              "./esm/util.js"
            ), l = n(
              /*! ../ui_tools.js */
              "./esm/ui_tools.js"
            );
            function o() {
              this.guid = new t.Guid(), this.header = [], this.rows = [], this.delimiter = "	", this.locked = !1;
            }
            var c = {
              lock: function() {
                this.locked = !0;
              },
              unlock: function() {
                this.locked = !1;
              },
              save: function() {
                for (var _ = "", u = !0, y = s.ss.enumerate(this.header); y.moveNext(); ) {
                  var g = y.current;
                  u ? u = !1 : _ += "	", _ += g;
                }
                _ += `\r
`;
                for (var Ee = s.ss.enumerate(this.rows); Ee.moveNext(); ) {
                  var Ve = Ee.current;
                  u = !0;
                  for (var Me = s.ss.enumerate(Ve); Me.moveNext(); ) {
                    var g = Me.current;
                    u ? u = !1 : _ += "	", _ += g;
                  }
                  _ += `\r
`;
                }
                return _;
              },
              loadFromString: function(_, u, y, g) {
                var Ee = 0, Ve = _.split(`\r
`);
                if (!u || g)
                  if (Ve.length > 0) {
                    var Me = Ve[0];
                    Ee++, Me.indexOf("	") === -1 && Me.indexOf(",") > -1 && (this.delimiter = ","), u || (this.rows.length = 0), this.header = l.UiTools.splitString(Me, this.delimiter);
                  } else
                    this.header = [];
                var B = [];
                for (y || (B = this.rows); Ee < Ve.length; ) {
                  var Pe = Ve[Ee], k = l.UiTools.splitString(Pe, this.delimiter);
                  if (k.length < 1)
                    break;
                  B.push(k), Ee++;
                }
                y && (this.rows = B);
              },
              clone: function() {
                for (var _ = new o(), u = 0; u < this.header.length; u++)
                  _.header.push(this.header[u]);
                for (var y = 0; y < this.rows.length; y++) {
                  _.rows.push([]);
                  for (var u = 0; u < this.rows[y].length; u++)
                    _.rows[y].push(this.rows[y][u]);
                }
                return _;
              },
              addColumn: function(_, u) {
                this.header.push(_);
                for (var y = 0; y < u.length; y++)
                  this.rows[y].push(u[y]);
              },
              removeColumn: function(_) {
                var u = this.header.indexOf(_);
                if (u > -1) {
                  this.header.splice(u, 1);
                  for (var y = 0; y < this.rows.length; y++)
                    this.rows[y].splice(u, 1);
                }
              }
            };
            (0, a.registerType)("Table", [o, c, null]);
          }
        ),
        /***/
        "./esm/layers/time_series_layer.js": (
          /*!*****************************************!*\
            !*** ./esm/layers/time_series_layer.js ***!
            \*****************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              AltTypes: () => (
                /* binding */
                c
              ),
              /* harmony export */
              ColorMaps: () => (
                /* binding */
                u
              ),
              /* harmony export */
              CoordinatesTypes: () => (
                /* binding */
                o
              ),
              /* harmony export */
              MarkerMixes: () => (
                /* binding */
                _
              ),
              /* harmony export */
              MarkerScales: () => (
                /* binding */
                g
              ),
              /* harmony export */
              PlotTypes: () => (
                /* binding */
                y
              ),
              /* harmony export */
              RAUnits: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              TimeSeriesLayer: () => (
                /* binding */
                Ve
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../space_time_controller.js */
              "./esm/space_time_controller.js"
            ), l = n(
              /*! ./layer.js */
              "./esm/layers/layer.js"
            ), o = {
              spherical: 0,
              rectangular: 1,
              orbital: 2
            };
            (0, a.registerType)("CoordinatesTypes", o), (0, a.registerEnum)("CoordinatesTypes", o);
            var c = {
              depth: 0,
              altitude: 1,
              distance: 2,
              seaLevel: 3,
              terrain: 4
            };
            (0, a.registerType)("AltTypes", c), (0, a.registerEnum)("AltTypes", c);
            var _ = {
              same_For_All: 0
            };
            (0, a.registerType)("MarkerMixes", _), (0, a.registerEnum)("MarkerMixes", _);
            var u = {
              same_For_All: 0,
              group_by_Values: 2,
              per_Column_Literal: 3
            };
            (0, a.registerType)("ColorMaps", u), (0, a.registerEnum)("ColorMaps", u);
            var y = {
              gaussian: 0,
              point: 1,
              circle: 2,
              square: 3,
              pushPin: 4,
              custom: 5
            };
            (0, a.registerType)("PlotTypes", y), (0, a.registerEnum)("PlotTypes", y);
            var g = {
              screen: 0,
              world: 1
            };
            (0, a.registerType)("MarkerScales", g), (0, a.registerEnum)("MarkerScales", g);
            var Ee = {
              hours: 0,
              degrees: 1
            };
            (0, a.registerType)("RAUnits", Ee), (0, a.registerEnum)("RAUnits", Ee);
            function Ve() {
              this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 16, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = /* @__PURE__ */ new Date("1/1/2100"), this._endRange$1 = /* @__PURE__ */ new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this._colorMap$1 = 3, this._markerColumn$1 = -1, this._colorMapColumn$1 = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this.lastVersion = 0, l.Layer.call(this);
            }
            Ve._circleTexture$1 = null, Ve.get__circleTexture$1 = function() {
              return Ve._circleTexture$1;
            };
            var Me = {
              get_dynamicData: function() {
                return this._dynamicData$1;
              },
              set_dynamicData: function(B) {
                return this._dynamicData$1 = B, B;
              },
              get_autoUpdate: function() {
                return this._autoUpdate$1;
              },
              set_autoUpdate: function(B) {
                return this._autoUpdate$1 = B, B;
              },
              get_dataSourceUrl: function() {
                return this._dataSourceUrl$1;
              },
              set_dataSourceUrl: function(B) {
                return this._dataSourceUrl$1 = B, B;
              },
              get_timeSeries: function() {
                return this.timeSeries;
              },
              set_timeSeries: function(B) {
                return this.timeSeries !== B && (this.version++, this.timeSeries = B), B;
              },
              get_header: function() {
                return null;
              },
              get_beginRange: function() {
                return this._beginRange$1;
              },
              set_beginRange: function(B) {
                return s.ss.compareDates(this._beginRange$1, B) || (this.version++, this._beginRange$1 = B), B;
              },
              get_endRange: function() {
                return this._endRange$1;
              },
              set_endRange: function(B) {
                return s.ss.compareDates(this._endRange$1, B) || (this.version++, this._endRange$1 = B), B;
              },
              initializeFromXml: function(B) {
                switch (this.set_timeSeries(s.ss.boolean(B.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date(B.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date(B.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat(B.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(a.Enums.parse("CoordinatesTypes", B.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt(B.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt(B.attributes.getNamedItem("LngColumn").nodeValue)), B.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt(B.attributes.getNamedItem("GeometryColumn").nodeValue)), B.attributes.getNamedItem("AltType").nodeValue) {
                  case "Depth":
                    this.set_altType(0);
                    break;
                  case "Altitude":
                    this.set_altType(1);
                    break;
                  case "Distance":
                    this.set_altType(2);
                    break;
                  case "SeaLevel":
                    this.set_altType(3);
                    break;
                  case "Terrain":
                    this.set_altType(4);
                    break;
                }
                switch (this.set_markerMix(0), B.attributes.getNamedItem("ColorMap").nodeValue) {
                  case "Same_For_All":
                    this.set__colorMap(0);
                    break;
                  case "Group_by_Values":
                    this.set__colorMap(2);
                    break;
                  case "Per_Column_Literal":
                    this.set__colorMap(3);
                    break;
                }
                switch (this.set_markerColumn(parseInt(B.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt(B.attributes.getNamedItem("ColorMapColumn").nodeValue)), B.attributes.getNamedItem("PlotType").nodeValue) {
                  case "Gaussian":
                    this.set_plotType(0);
                    break;
                  case "Point":
                    this.set_plotType(1);
                    break;
                  case "Circle":
                    this.set_plotType(2);
                    break;
                  case "PushPin":
                    this.set_plotType(4);
                    break;
                }
                switch (this.set_markerIndex(parseInt(B.attributes.getNamedItem("MarkerIndex").nodeValue)), B.attributes.getNamedItem("MarkerScale").nodeValue) {
                  case "Screen":
                    this.set_markerScale(0);
                    break;
                  case "World":
                    this.set_markerScale(1);
                    break;
                }
                switch (B.attributes.getNamedItem("AltUnit").nodeValue) {
                  case "Meters":
                    this.set_altUnit(1);
                    break;
                  case "Feet":
                    this.set_altUnit(2);
                    break;
                  case "Inches":
                    this.set_altUnit(3);
                    break;
                  case "Miles":
                    this.set_altUnit(4);
                    break;
                  case "Kilometers":
                    this.set_altUnit(5);
                    break;
                  case "AstronomicalUnits":
                    this.set_altUnit(6);
                    break;
                  case "LightYears":
                    this.set_altUnit(7);
                    break;
                  case "Parsecs":
                    this.set_altUnit(8);
                    break;
                  case "MegaParsecs":
                    this.set_altUnit(9);
                    break;
                  case "Custom":
                    this.set_altUnit(10);
                    break;
                }
                switch (this.set_altColumn(parseInt(B.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt(B.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt(B.attributes.getNamedItem("EndDateColumn").nodeValue)), this.set_sizeColumn(parseInt(B.attributes.getNamedItem("SizeColumn").nodeValue)), this.set_hyperlinkFormat(B.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt(B.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat(B.attributes.getNamedItem("ScaleFactor").nodeValue)), B.attributes.getNamedItem("PointScaleType").nodeValue) {
                  case "Linear":
                    this.set_pointScaleType(0);
                    break;
                  case "Power":
                    this.set_pointScaleType(1);
                    break;
                  case "Log":
                    this.set_pointScaleType(2);
                    break;
                  case "Constant":
                    this.set_pointScaleType(3);
                    break;
                  case "StellarMagnitude":
                    this.set_pointScaleType(4);
                    break;
                }
                if (B.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(s.ss.boolean(B.attributes.getNamedItem("ShowFarSide").nodeValue)), B.attributes.getNamedItem("RaUnits") != null)
                  switch (B.attributes.getNamedItem("RaUnits").nodeValue) {
                    case "Hours":
                      this.set_raUnits(0);
                      break;
                    case "Degrees":
                      this.set_raUnits(1);
                      break;
                  }
                if (B.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt(B.attributes.getNamedItem("HoverTextColumn").nodeValue)), B.attributes.getNamedItem("XAxisColumn") != null) {
                  switch (this.set_xAxisColumn(parseInt(B.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(s.ss.boolean(B.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt(B.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(s.ss.boolean(B.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt(B.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(s.ss.boolean(B.attributes.getNamedItem("ZAxisReverse").nodeValue)), B.attributes.getNamedItem("CartesianScale").nodeValue) {
                    case "Meters":
                      this.set_cartesianScale(1);
                      break;
                    case "Feet":
                      this.set_cartesianScale(2);
                      break;
                    case "Inches":
                      this.set_cartesianScale(3);
                      break;
                    case "Miles":
                      this.set_cartesianScale(4);
                      break;
                    case "Kilometers":
                      this.set_cartesianScale(5);
                      break;
                    case "AstronomicalUnits":
                      this.set_cartesianScale(6);
                      break;
                    case "LightYears":
                      this.set_cartesianScale(7);
                      break;
                    case "Parsecs":
                      this.set_cartesianScale(8);
                      break;
                    case "MegaParsecs":
                      this.set_cartesianScale(9);
                      break;
                    case "Custom":
                      this.set_cartesianScale(10);
                      break;
                  }
                  this.set_cartesianCustomScale(parseFloat(B.attributes.getNamedItem("CartesianCustomScale").nodeValue));
                }
                B.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(s.ss.boolean(B.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(s.ss.boolean(B.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl(B.attributes.getNamedItem("DataSourceUrl").nodeValue));
              },
              computeDateDomainRange: function(B, Pe) {
              },
              getDomainValues: function(B) {
                return [];
              },
              get_decay: function() {
                return this.decay;
              },
              set_decay: function(B) {
                return this.decay !== B && (this.version++, this.decay = B), B;
              },
              get_coordinatesType: function() {
                return this._coordinatesType$1;
              },
              set_coordinatesType: function(B) {
                return this._coordinatesType$1 !== B && (this.version++, this._coordinatesType$1 = B), B;
              },
              get_latColumn: function() {
                return this.latColumn;
              },
              set_latColumn: function(B) {
                return this.latColumn !== B && (this.version++, this.latColumn = B), B;
              },
              get_lngColumn: function() {
                return this.lngColumn;
              },
              set_lngColumn: function(B) {
                return this.lngColumn !== B && (this.version++, this.lngColumn = B), B;
              },
              get_geometryColumn: function() {
                return this.geometryColumn;
              },
              set_geometryColumn: function(B) {
                return this.geometryColumn !== B && (this.version++, this.geometryColumn = B), B;
              },
              get_xAxisColumn: function() {
                return this._xAxisColumn$1;
              },
              set_xAxisColumn: function(B) {
                return this._xAxisColumn$1 !== B && (this.version++, this._xAxisColumn$1 = B), B;
              },
              get_yAxisColumn: function() {
                return this._yAxisColumn$1;
              },
              set_yAxisColumn: function(B) {
                return this._yAxisColumn$1 !== B && (this.version++, this._yAxisColumn$1 = B), B;
              },
              get_zAxisColumn: function() {
                return this._zAxisColumn$1;
              },
              set_zAxisColumn: function(B) {
                return this._zAxisColumn$1 !== B && (this.version++, this._zAxisColumn$1 = B), B;
              },
              get_xAxisReverse: function() {
                return this._xAxisReverse$1;
              },
              set_xAxisReverse: function(B) {
                return this._xAxisReverse$1 !== B && (this.version++, this._xAxisReverse$1 = B), B;
              },
              get_yAxisReverse: function() {
                return this._yAxisReverse$1;
              },
              set_yAxisReverse: function(B) {
                return this._yAxisReverse$1 !== B && (this.version++, this._yAxisReverse$1 = B), B;
              },
              get_zAxisReverse: function() {
                return this._zAxisReverse$1;
              },
              set_zAxisReverse: function(B) {
                return this._zAxisReverse$1 !== B && (this.version++, this._zAxisReverse$1 = B), B;
              },
              get_altType: function() {
                return this._altType$1;
              },
              set_altType: function(B) {
                return this._altType$1 !== B && (this.version++, this._altType$1 = B), B;
              },
              get_markerMix: function() {
                return this._markerMix$1;
              },
              set_markerMix: function(B) {
                return this._markerMix$1 !== B && (this.version++, this._markerMix$1 = B), B;
              },
              get_raUnits: function() {
                return this._raUnits$1;
              },
              set_raUnits: function(B) {
                return this._raUnits$1 !== B && (this.version++, this._raUnits$1 = B), B;
              },
              get__colorMap: function() {
                return this._colorMap$1;
              },
              set__colorMap: function(B) {
                return this._colorMap$1 !== B && (this.version++, this._colorMap$1 = B), B;
              },
              get_markerColumn: function() {
                return this._markerColumn$1;
              },
              set_markerColumn: function(B) {
                return this._markerColumn$1 !== B && (this.version++, this._markerColumn$1 = B), B;
              },
              get_colorMapColumn: function() {
                return this._colorMapColumn$1;
              },
              set_colorMapColumn: function(B) {
                return this._colorMapColumn$1 !== B && (this.version++, this._colorMapColumn$1 = B), B;
              },
              get_plotType: function() {
                return this._plotType$1;
              },
              set_plotType: function(B) {
                return this._plotType$1 !== B && (this.version++, this._plotType$1 = B), B;
              },
              get_markerIndex: function() {
                return this._markerIndex$1;
              },
              set_markerIndex: function(B) {
                return this._markerIndex$1 !== B && (this.version++, this._markerIndex$1 = B), B;
              },
              get_showFarSide: function() {
                return this._showFarSide$1;
              },
              set_showFarSide: function(B) {
                return this._showFarSide$1 !== B && (this.version++, this._showFarSide$1 = B), B;
              },
              get_markerScale: function() {
                return this._markerScale$1;
              },
              set_markerScale: function(B) {
                return this._markerScale$1 !== B && (this.version++, this._markerScale$1 = B), B;
              },
              get_altUnit: function() {
                return this._altUnit$1;
              },
              set_altUnit: function(B) {
                return this._altUnit$1 !== B && (this.version++, this._altUnit$1 = B), B;
              },
              get_cartesianScale: function() {
                return this._cartesianScale$1;
              },
              set_cartesianScale: function(B) {
                return this._cartesianScale$1 !== B && (this.version++, this._cartesianScale$1 = B), B;
              },
              get_cartesianCustomScale: function() {
                return this._cartesianCustomScale$1;
              },
              set_cartesianCustomScale: function(B) {
                return this._cartesianCustomScale$1 !== B && (this.version++, this._cartesianCustomScale$1 = B), B;
              },
              get_altColumn: function() {
                return this.altColumn;
              },
              set_altColumn: function(B) {
                return this.altColumn !== B && (this.version++, this.altColumn = B), B;
              },
              get_startDateColumn: function() {
                return this.startDateColumn;
              },
              set_startDateColumn: function(B) {
                return this.startDateColumn !== B && (this.version++, this.startDateColumn = B), B;
              },
              get_endDateColumn: function() {
                return this.endDateColumn;
              },
              set_endDateColumn: function(B) {
                return this.endDateColumn !== B && (this.version++, this.endDateColumn = B), B;
              },
              get_sizeColumn: function() {
                return this.sizeColumn;
              },
              set_sizeColumn: function(B) {
                return this.sizeColumn !== B && (this.version++, this.sizeColumn = B), B;
              },
              get_nameColumn: function() {
                return this.nameColumn;
              },
              set_nameColumn: function(B) {
                return this.nameColumn !== B && (this.version++, this.nameColumn = B), B;
              },
              get_hyperlinkFormat: function() {
                return this._hyperlinkFormat$1;
              },
              set_hyperlinkFormat: function(B) {
                return this._hyperlinkFormat$1 !== B && (this.version++, this._hyperlinkFormat$1 = B), B;
              },
              get_hyperlinkColumn: function() {
                return this._hyperlinkColumn$1;
              },
              set_hyperlinkColumn: function(B) {
                return this._hyperlinkColumn$1 !== B && (this.version++, this._hyperlinkColumn$1 = B), B;
              },
              get_scaleFactor: function() {
                return this.scaleFactor;
              },
              set_scaleFactor: function(B) {
                return this.scaleFactor !== B && (this.version++, this.scaleFactor = B), B;
              },
              get_pointScaleType: function() {
                return this.pointScaleType;
              },
              set_pointScaleType: function(B) {
                return this.pointScaleType !== B && (this.version++, this.pointScaleType = B), B;
              },
              prepVertexBuffer: function(B, Pe) {
                return !0;
              },
              draw: function(B, Pe, k) {
                var b = B;
                this.version !== this.lastVersion && this.cleanUp(), this.bufferIsFlat !== k && (this.cleanUp(), this.bufferIsFlat = k), this.dirty && this.prepVertexBuffer(b, Pe);
                var Le = t.SpaceTimeController.get_jNow() - t.SpaceTimeController.utcToJulian(this.baseDate), xe = this.scaleFactor;
                return k && this.astronomical && this._markerScale$1 === 1 && (xe = this.scaleFactor / (B.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = Le, this.triangleList2d.draw(B, Pe * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = Le, this.triangleList.draw(B, Pe * this.get_opacity(), 1)), this.pointList != null && (this.pointList.depthBuffered = !1, this.pointList.decay = this.decay, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = Le, this.pointList.scale = this._markerScale$1 === 1 ? xe : -xe, this.pointList.draw(B, Pe * this.get_opacity(), !1)), this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = Le, this.lineList.drawLines(B, Pe * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = Le, this.lineList2d.drawLines(B, Pe * this.get_opacity())), !0;
              },
              initFromXml: function(B) {
                l.Layer.prototype.initFromXml.call(this, B);
              },
              cleanUp: function() {
                this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
              },
              dynamicUpdate: function() {
                return !1;
              }
            };
            (0, a.registerType)("TimeSeriesLayer", [Ve, Me, l.Layer]);
          }
        ),
        /***/
        "./esm/layers/vo_table.js": (
          /*!********************************!*\
            !*** ./esm/layers/vo_table.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Primitives: () => (
                /* binding */
                c
              ),
              /* harmony export */
              VoColumn: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              VoRow: () => (
                /* binding */
                y
              ),
              /* harmony export */
              VoTable: () => (
                /* binding */
                _
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), l = n(
              /*! ../url_helpers.js */
              "./esm/url_helpers.js"
            ), o = n(
              /*! ../web_file.js */
              "./esm/web_file.js"
            ), c = {
              voBoolean: 1,
              voBit: 2,
              voUnsignedByte: 3,
              voShort: 4,
              voInt: 5,
              voLong: 6,
              voChar: 7,
              voUnicodeChar: 8,
              voFloat: 9,
              voDouble: 10,
              voFloatComplex: 11,
              voDoubleComplex: 12,
              voUndefined: 13
            };
            (0, a.registerType)("Primitives", c), (0, a.registerEnum)("Primitives", c);
            function _() {
              this.columns = {}, this.column = [], this.rows = [], this.loadFilename = "", this.sampId = "", this.selectedRow = null, this.error = !1, this.errorText = "";
            }
            _.loadFromUrl = function(Me, B) {
              var Pe = new _();
              return Pe._onComplete = B, Pe._webFile = new o.WebFile(l.URLHelpers.singleton.rewrite(Me, 1)), Pe._webFile.onStateChange = s.ss.bind("_loadData", Pe), Pe._webFile.send(), Pe;
            }, _.loadFromString = function(Me) {
              var B = new DOMParser(), Pe = B.parseFromString(Me, "text/xml"), k = new _();
              return k.loadFromXML(Pe), k;
            };
            var u = {
              _loadData: function() {
                this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && (this.loadFromXML(this._webFile.getXml()), this._onComplete != null && this._onComplete());
              },
              loadFromXML: function(Me) {
                var B = t.Util.selectSingleNode(Me, "VOTABLE");
                if (B != null) {
                  var Pe = 0;
                  try {
                    var k = t.Util.selectSingleNode(t.Util.selectSingleNode(B, "RESOURCE"), "TABLE");
                    if (k != null)
                      for (var b = s.ss.enumerate(k.childNodes); b.moveNext(); ) {
                        var Le = b.current;
                        if (Le.nodeName === "FIELD") {
                          var xe = new Ee(Le, Pe++);
                          this.columns[xe.name] = xe, this.column.push(xe);
                        }
                      }
                  } catch {
                    this.error = !0, this.errorText = t.Util.selectSingleNode(B, "DESCRIPTION").text;
                  }
                  try {
                    var ze = t.Util.selectSingleNode(t.Util.selectSingleNode(t.Util.selectSingleNode(t.Util.selectSingleNode(B, "RESOURCE"), "TABLE"), "DATA"), "TABLEDATA");
                    if (ze != null)
                      for (var Se = s.ss.enumerate(ze.childNodes); Se.moveNext(); ) {
                        var Le = Se.current;
                        if (Le.nodeName === "TR") {
                          var Te = new y(this);
                          Te.columnData = new Array(s.ss.keyCount(this.columns)), Pe = 0;
                          for (var D = s.ss.enumerate(Le.childNodes); D.moveNext(); ) {
                            var ke = D.current;
                            ke.nodeName === "TD" && (Te.columnData[Pe++] = s.ss.trim(t.Util.getInnerText(ke)));
                          }
                          this.rows.push(Te);
                        }
                      }
                  } catch {
                  }
                }
              },
              save: function(Me) {
                return !0;
              },
              getColumnByUcd: function(Me) {
                for (var B = s.ss.enumerate(s.ss.keys(this.columns)); B.moveNext(); ) {
                  var Pe = B.current, k = this.columns[Pe];
                  if (s.ss.replaceString(k.ucd, "_", ".").toLocaleLowerCase().indexOf(Me.toLocaleLowerCase()) > -1)
                    return k;
                }
                return null;
              },
              getRAColumn: function() {
                for (var Me = s.ss.enumerate(s.ss.keys(this.columns)); Me.moveNext(); ) {
                  var B = Me.current, Pe = this.columns[B];
                  if (Pe.ucd.toLocaleLowerCase().indexOf("pos.eq.ra") > -1 || Pe.ucd.toLocaleLowerCase().indexOf("pos_eq_ra") > -1)
                    return Pe;
                }
                for (var k = s.ss.enumerate(s.ss.keys(this.columns)); k.moveNext(); ) {
                  var B = k.current, Pe = this.columns[B];
                  if (Pe.name.toLocaleLowerCase().indexOf("ra") > -1)
                    return Pe;
                }
                return null;
              },
              getDecColumn: function() {
                for (var Me = s.ss.enumerate(s.ss.keys(this.columns)); Me.moveNext(); ) {
                  var B = Me.current, Pe = this.columns[B];
                  if (Pe.ucd.toLowerCase().indexOf("pos.eq.dec") > -1 || Pe.ucd.toLowerCase().indexOf("pos_eq_dec") > -1)
                    return Pe;
                }
                for (var k = s.ss.enumerate(s.ss.keys(this.columns)); k.moveNext(); ) {
                  var B = k.current, Pe = this.columns[B];
                  if (Pe.name.toLowerCase().indexOf("dec") > -1)
                    return Pe;
                }
                return null;
              },
              getMagColumn: function() {
                for (var Me = s.ss.enumerate(s.ss.keys(this.columns)); Me.moveNext(); ) {
                  var B = Me.current, Pe = this.columns[B];
                  if (Pe.ucd.toLowerCase().indexOf("phot.mag") > -1 || Pe.ucd.toLowerCase().indexOf("phot_mag") > -1)
                    return Pe;
                }
                return null;
              },
              getDistanceColumn: function() {
                for (var Me = s.ss.enumerate(s.ss.keys(this.columns)); Me.moveNext(); ) {
                  var B = Me.current, Pe = this.columns[B];
                  if (Pe.ucd.toLowerCase().indexOf("pos.distance") > -1 || Pe.ucd.toLowerCase().indexOf("pos_distance") > -1)
                    return Pe;
                }
                return null;
              },
              toString: function() {
                for (var Me = new s.ss.StringBuilder(), B = !0, Pe = s.ss.enumerate(s.ss.keys(this.columns)); Pe.moveNext(); ) {
                  var k = Pe.current, b = this.columns[k];
                  B ? B = !1 : Me.append("	"), Me.append(b.name);
                }
                Me.appendLine("");
                for (var Le = s.ss.enumerate(this.rows); Le.moveNext(); ) {
                  var xe = Le.current;
                  B = !0;
                  for (var ze = s.ss.enumerate(xe.columnData); ze.moveNext(); ) {
                    var b = ze.current;
                    B ? B = !1 : Me.append("	"), Me.append(b.toString());
                  }
                  Me.appendLine("");
                }
                return Me.toString();
              }
            };
            (0, a.registerType)("VoTable", [_, u, null]);
            function y(Me) {
              this.selected = !1, this.owner = Me;
            }
            var g = {
              getColumnData: function(Me) {
                return this.owner.columns[Me] != null ? this.columnData[this.owner.columns[Me].index] : null;
              },
              get_item: function(Me) {
                return Me < 0 || Me >= this.columnData.length ? null : this.columnData[Me];
              }
            };
            (0, a.registerType)("VoRow", [y, g, null]);
            function Ee(Me, B) {
              if (this.id = "", this.type = 0, this.precision = 0, this.dimentions = 0, this.sizes = null, this.ucd = "", this.unit = "", this.name = "", this.index = 0, this.index = B, Me.attributes.getNamedItem("datatype") != null && (this.type = Ee.getType(Me.attributes.getNamedItem("datatype").nodeValue)), Me.attributes.getNamedItem("ucd") != null && (this.ucd = Me.attributes.getNamedItem("ucd").nodeValue), Me.attributes.getNamedItem("precision") != null)
                try {
                  this.precision = parseInt(Me.attributes.getNamedItem("precision").nodeValue);
                } catch {
                }
              if (Me.attributes.getNamedItem("ID") != null && (this.id = Me.attributes.getNamedItem("ID").nodeValue), Me.attributes.getNamedItem("name") != null ? this.name = Me.attributes.getNamedItem("name").nodeValue : this.name = this.id, Me.attributes.getNamedItem("unit") != null && (this.unit = Me.attributes.getNamedItem("unit").nodeValue), Me.attributes.getNamedItem("arraysize") != null) {
                var Pe = Me.attributes.getNamedItem("arraysize").nodeValue.split("x");
                this.dimentions = Pe.length, this.sizes = new Array(Pe.length);
                for (var k = 0, b = s.ss.enumerate(Pe); b.moveNext(); ) {
                  var Le = b.current;
                  if (!(Le.indexOf("*") > -1))
                    this.sizes[k++] = parseInt(Le);
                  else {
                    var xe = 9999, ze = s.ss.replaceString(Le, "*", "");
                    ze.length > 0 && (xe = parseInt(ze)), this.sizes[k++] = xe;
                  }
                }
              }
            }
            Ee.getType = function(Me) {
              var B = 13;
              switch (Me) {
                case "boolean":
                  B = 1;
                  break;
                case "bit":
                  B = 2;
                  break;
                case "unsignedByte":
                  B = 3;
                  break;
                case "short":
                  B = 4;
                  break;
                case "int":
                  B = 5;
                  break;
                case "long":
                  B = 6;
                  break;
                case "char":
                  B = 7;
                  break;
                case "unicodeChar":
                  B = 8;
                  break;
                case "float":
                  B = 9;
                  break;
                case "double":
                  B = 10;
                  break;
                case "floatComplex":
                  B = 11;
                  break;
                case "doubleComplex":
                  B = 12;
                  break;
                default:
                  B = 13;
                  break;
              }
              return B;
            };
            var Ve = {
              toString: function() {
                return this.name;
              }
            };
            (0, a.registerType)("VoColumn", [Ee, Ve, null]);
          }
        ),
        /***/
        "./esm/layers/vo_table_layer.js": (
          /*!**************************************!*\
            !*** ./esm/layers/vo_table_layer.js ***!
            \**************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              VoTableLayer: () => (
                /* binding */
                B
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ../graphics/primitives3d.js */
              "./esm/graphics/primitives3d.js"
            ), o = n(
              /*! ../graphics/texture.js */
              "./esm/graphics/texture.js"
            ), c = n(
              /*! ../color.js */
              "./esm/color.js"
            ), _ = n(
              /*! ../coordinates.js */
              "./esm/coordinates.js"
            ), u = n(
              /*! ../place.js */
              "./esm/place.js"
            ), y = n(
              /*! ../space_time_controller.js */
              "./esm/space_time_controller.js"
            ), g = n(
              /*! ../url_helpers.js */
              "./esm/url_helpers.js"
            ), Ee = n(
              /*! ./layer.js */
              "./esm/layers/layer.js"
            ), Ve = n(
              /*! ./vo_table.js */
              "./esm/layers/vo_table.js"
            ), Me = n(
              /*! ./spreadsheet_layer.js */
              "./esm/layers/spreadsheet_layer.js"
            );
            function B() {
              this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 0, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = /* @__PURE__ */ new Date("1/1/2100"), this._endRange$1 = /* @__PURE__ */ new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this._colorMap$1 = 3, this._markerColumn$1 = -1, this._colorMapColumn$1 = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this._filename$1 = "", Ee.Layer.call(this), this._table$1 = null, this._filename$1 = "", this.set_plotType(2);
            }
            B._circleTexture$1 = null, B.get__circleTexture$1 = function() {
              if (B._circleTexture$1 == null) {
                var k = g.URLHelpers.singleton.engineAssetUrl("circle.png");
                B._circleTexture$1 = o.Texture.fromUrl(k);
              }
              return B._circleTexture$1;
            }, B.create = function(k, b) {
              var Le = new B();
              return Le._table$1 = k, Le._filename$1 = k.loadFilename, Le.set_lngColumn(k.getRAColumn().index), Le.set_latColumn(k.getDecColumn().index), Le.sizeColumn = k.getColumnByUcd("phot.mag").index, Le.set_plotType(b), Le;
            };
            var Pe = {
              get_dynamicData: function() {
                return this._dynamicData$1;
              },
              set_dynamicData: function(k) {
                return this._dynamicData$1 = k, k;
              },
              get_autoUpdate: function() {
                return this._autoUpdate$1;
              },
              set_autoUpdate: function(k) {
                return this._autoUpdate$1 = k, k;
              },
              get_dataSourceUrl: function() {
                return this._dataSourceUrl$1;
              },
              set_dataSourceUrl: function(k) {
                return this._dataSourceUrl$1 = k, k;
              },
              get_timeSeries: function() {
                return this.timeSeries;
              },
              set_timeSeries: function(k) {
                return this.timeSeries !== k && (this.version++, this.timeSeries = k), k;
              },
              get_beginRange: function() {
                return this._beginRange$1;
              },
              set_beginRange: function(k) {
                return s.ss.compareDates(this._beginRange$1, k) || (this.version++, this._beginRange$1 = k), k;
              },
              get_endRange: function() {
                return this._endRange$1;
              },
              set_endRange: function(k) {
                return s.ss.compareDates(this._endRange$1, k) || (this.version++, this._endRange$1 = k), k;
              },
              initializeFromXml: function(k) {
                switch (this.set_timeSeries(s.ss.boolean(k.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date(k.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date(k.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat(k.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(a.Enums.parse("CoordinatesTypes", k.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt(k.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt(k.attributes.getNamedItem("LngColumn").nodeValue)), k.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt(k.attributes.getNamedItem("GeometryColumn").nodeValue)), k.attributes.getNamedItem("AltType").nodeValue) {
                  case "Depth":
                    this.set_altType(0);
                    break;
                  case "Altitude":
                    this.set_altType(1);
                    break;
                  case "Distance":
                    this.set_altType(2);
                    break;
                  case "SeaLevel":
                    this.set_altType(3);
                    break;
                  case "Terrain":
                    this.set_altType(4);
                    break;
                }
                switch (this.set_markerMix(0), k.attributes.getNamedItem("ColorMap").nodeValue) {
                  case "Same_For_All":
                    this.set__colorMap(0);
                    break;
                  case "Group_by_Values":
                    this.set__colorMap(2);
                    break;
                  case "Per_Column_Literal":
                    this.set__colorMap(3);
                    break;
                }
                switch (this.set_markerColumn(parseInt(k.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt(k.attributes.getNamedItem("ColorMapColumn").nodeValue)), k.attributes.getNamedItem("PlotType").nodeValue) {
                  case "Gaussian":
                    this.set_plotType(0);
                    break;
                  case "Point":
                    this.set_plotType(1);
                    break;
                  case "Circle":
                    this.set_plotType(2);
                    break;
                  case "PushPin":
                    this.set_plotType(4);
                    break;
                }
                switch (this.set_markerIndex(parseInt(k.attributes.getNamedItem("MarkerIndex").nodeValue)), k.attributes.getNamedItem("MarkerScale").nodeValue) {
                  case "Screen":
                    this.set_markerScale(0);
                    break;
                  case "World":
                    this.set_markerScale(1);
                    break;
                }
                switch (k.attributes.getNamedItem("AltUnit").nodeValue) {
                  case "Meters":
                    this.set_altUnit(1);
                    break;
                  case "Feet":
                    this.set_altUnit(2);
                    break;
                  case "Inches":
                    this.set_altUnit(3);
                    break;
                  case "Miles":
                    this.set_altUnit(4);
                    break;
                  case "Kilometers":
                    this.set_altUnit(5);
                    break;
                  case "AstronomicalUnits":
                    this.set_altUnit(6);
                    break;
                  case "LightYears":
                    this.set_altUnit(7);
                    break;
                  case "Parsecs":
                    this.set_altUnit(8);
                    break;
                  case "MegaParsecs":
                    this.set_altUnit(9);
                    break;
                  case "Custom":
                    this.set_altUnit(10);
                    break;
                }
                switch (this.set_altColumn(parseInt(k.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt(k.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt(k.attributes.getNamedItem("EndDateColumn").nodeValue)), this.set_sizeColumn(parseInt(k.attributes.getNamedItem("SizeColumn").nodeValue)), this.set_hyperlinkFormat(k.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt(k.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat(k.attributes.getNamedItem("ScaleFactor").nodeValue)), k.attributes.getNamedItem("PointScaleType").nodeValue) {
                  case "Linear":
                    this.set_pointScaleType(0);
                    break;
                  case "Power":
                    this.set_pointScaleType(1);
                    break;
                  case "Log":
                    this.set_pointScaleType(2);
                    break;
                  case "Constant":
                    this.set_pointScaleType(3);
                    break;
                  case "StellarMagnitude":
                    this.set_pointScaleType(4);
                    break;
                }
                if (k.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(s.ss.boolean(k.attributes.getNamedItem("ShowFarSide").nodeValue)), k.attributes.getNamedItem("RaUnits") != null)
                  switch (k.attributes.getNamedItem("RaUnits").nodeValue) {
                    case "Hours":
                      this.set_raUnits(0);
                      break;
                    case "Degrees":
                      this.set_raUnits(1);
                      break;
                  }
                if (k.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt(k.attributes.getNamedItem("HoverTextColumn").nodeValue)), k.attributes.getNamedItem("XAxisColumn") != null) {
                  switch (this.set_xAxisColumn(parseInt(k.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(s.ss.boolean(k.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt(k.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(s.ss.boolean(k.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt(k.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(s.ss.boolean(k.attributes.getNamedItem("ZAxisReverse").nodeValue)), k.attributes.getNamedItem("CartesianScale").nodeValue) {
                    case "Meters":
                      this.set_cartesianScale(1);
                      break;
                    case "Feet":
                      this.set_cartesianScale(2);
                      break;
                    case "Inches":
                      this.set_cartesianScale(3);
                      break;
                    case "Miles":
                      this.set_cartesianScale(4);
                      break;
                    case "Kilometers":
                      this.set_cartesianScale(5);
                      break;
                    case "AstronomicalUnits":
                      this.set_cartesianScale(6);
                      break;
                    case "LightYears":
                      this.set_cartesianScale(7);
                      break;
                    case "Parsecs":
                      this.set_cartesianScale(8);
                      break;
                    case "MegaParsecs":
                      this.set_cartesianScale(9);
                      break;
                    case "Custom":
                      this.set_cartesianScale(10);
                      break;
                  }
                  this.set_cartesianCustomScale(parseFloat(k.attributes.getNamedItem("CartesianCustomScale").nodeValue));
                }
                k.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(s.ss.boolean(k.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(s.ss.boolean(k.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl(k.attributes.getNamedItem("DataSourceUrl").nodeValue));
              },
              get_decay: function() {
                return this.decay;
              },
              set_decay: function(k) {
                return this.decay !== k && (this.version++, this.decay = k), k;
              },
              get_coordinatesType: function() {
                return this._coordinatesType$1;
              },
              set_coordinatesType: function(k) {
                return this._coordinatesType$1 !== k && (this.version++, this._coordinatesType$1 = k), k;
              },
              get_latColumn: function() {
                return this.latColumn;
              },
              set_latColumn: function(k) {
                return this.latColumn !== k && (this.version++, this.latColumn = k), k;
              },
              get_lngColumn: function() {
                return this.lngColumn;
              },
              set_lngColumn: function(k) {
                return this.lngColumn !== k && (this.version++, this.lngColumn = k), k;
              },
              get_geometryColumn: function() {
                return this.geometryColumn;
              },
              set_geometryColumn: function(k) {
                return this.geometryColumn !== k && (this.version++, this.geometryColumn = k), k;
              },
              get_xAxisColumn: function() {
                return this._xAxisColumn$1;
              },
              set_xAxisColumn: function(k) {
                return this._xAxisColumn$1 !== k && (this.version++, this._xAxisColumn$1 = k), k;
              },
              get_yAxisColumn: function() {
                return this._yAxisColumn$1;
              },
              set_yAxisColumn: function(k) {
                return this._yAxisColumn$1 !== k && (this.version++, this._yAxisColumn$1 = k), k;
              },
              get_zAxisColumn: function() {
                return this._zAxisColumn$1;
              },
              set_zAxisColumn: function(k) {
                return this._zAxisColumn$1 !== k && (this.version++, this._zAxisColumn$1 = k), k;
              },
              get_xAxisReverse: function() {
                return this._xAxisReverse$1;
              },
              set_xAxisReverse: function(k) {
                return this._xAxisReverse$1 !== k && (this.version++, this._xAxisReverse$1 = k), k;
              },
              get_yAxisReverse: function() {
                return this._yAxisReverse$1;
              },
              set_yAxisReverse: function(k) {
                return this._yAxisReverse$1 !== k && (this.version++, this._yAxisReverse$1 = k), k;
              },
              get_zAxisReverse: function() {
                return this._zAxisReverse$1;
              },
              set_zAxisReverse: function(k) {
                return this._zAxisReverse$1 !== k && (this.version++, this._zAxisReverse$1 = k), k;
              },
              get_altType: function() {
                return this._altType$1;
              },
              set_altType: function(k) {
                return this._altType$1 !== k && (this.version++, this._altType$1 = k), k;
              },
              get_markerMix: function() {
                return this._markerMix$1;
              },
              set_markerMix: function(k) {
                return this._markerMix$1 !== k && (this.version++, this._markerMix$1 = k), k;
              },
              get_raUnits: function() {
                return this._raUnits$1;
              },
              set_raUnits: function(k) {
                return this._raUnits$1 !== k && (this.version++, this._raUnits$1 = k), k;
              },
              get__colorMap: function() {
                return this._colorMap$1;
              },
              set__colorMap: function(k) {
                return this._colorMap$1 !== k && (this.version++, this._colorMap$1 = k), k;
              },
              get_markerColumn: function() {
                return this._markerColumn$1;
              },
              set_markerColumn: function(k) {
                return this._markerColumn$1 !== k && (this.version++, this._markerColumn$1 = k), k;
              },
              get_colorMapColumn: function() {
                return this._colorMapColumn$1;
              },
              set_colorMapColumn: function(k) {
                return this._colorMapColumn$1 !== k && (this.version++, this._colorMapColumn$1 = k), k;
              },
              get_plotType: function() {
                return this._plotType$1;
              },
              set_plotType: function(k) {
                return this._plotType$1 !== k && (this.version++, this._plotType$1 = k), k;
              },
              get_markerIndex: function() {
                return this._markerIndex$1;
              },
              set_markerIndex: function(k) {
                return this._markerIndex$1 !== k && (this.version++, this._markerIndex$1 = k), k;
              },
              get_showFarSide: function() {
                return this._showFarSide$1;
              },
              set_showFarSide: function(k) {
                return this._showFarSide$1 !== k && (this.version++, this._showFarSide$1 = k), k;
              },
              get_markerScale: function() {
                return this._markerScale$1;
              },
              set_markerScale: function(k) {
                return this._markerScale$1 !== k && (this.version++, this._markerScale$1 = k), k;
              },
              get_altUnit: function() {
                return this._altUnit$1;
              },
              set_altUnit: function(k) {
                return this._altUnit$1 !== k && (this.version++, this._altUnit$1 = k), k;
              },
              get_cartesianScale: function() {
                return this._cartesianScale$1;
              },
              set_cartesianScale: function(k) {
                return this._cartesianScale$1 !== k && (this.version++, this._cartesianScale$1 = k), k;
              },
              get_cartesianCustomScale: function() {
                return this._cartesianCustomScale$1;
              },
              set_cartesianCustomScale: function(k) {
                return this._cartesianCustomScale$1 !== k && (this.version++, this._cartesianCustomScale$1 = k), k;
              },
              get_altColumn: function() {
                return this.altColumn;
              },
              set_altColumn: function(k) {
                return this.altColumn !== k && (this.version++, this.altColumn = k), k;
              },
              get_startDateColumn: function() {
                return this.startDateColumn;
              },
              set_startDateColumn: function(k) {
                return this.startDateColumn !== k && (this.version++, this.startDateColumn = k), k;
              },
              get_endDateColumn: function() {
                return this.endDateColumn;
              },
              set_endDateColumn: function(k) {
                return this.endDateColumn !== k && (this.version++, this.endDateColumn = k), k;
              },
              get_sizeColumn: function() {
                return this.sizeColumn;
              },
              set_sizeColumn: function(k) {
                return this.sizeColumn !== k && (this.version++, this.sizeColumn = k), k;
              },
              get_nameColumn: function() {
                return this.nameColumn;
              },
              set_nameColumn: function(k) {
                return this.nameColumn !== k && (this.version++, this.nameColumn = k), k;
              },
              get_hyperlinkFormat: function() {
                return this._hyperlinkFormat$1;
              },
              set_hyperlinkFormat: function(k) {
                return this._hyperlinkFormat$1 !== k && (this.version++, this._hyperlinkFormat$1 = k), k;
              },
              get_hyperlinkColumn: function() {
                return this._hyperlinkColumn$1;
              },
              set_hyperlinkColumn: function(k) {
                return this._hyperlinkColumn$1 !== k && (this.version++, this._hyperlinkColumn$1 = k), k;
              },
              get_scaleFactor: function() {
                return this.scaleFactor;
              },
              set_scaleFactor: function(k) {
                return this.scaleFactor !== k && (this.version++, this.scaleFactor = k), k;
              },
              get_pointScaleType: function() {
                return this.pointScaleType;
              },
              set_pointScaleType: function(k) {
                return this.pointScaleType !== k && (this.version++, this.pointScaleType = k), k;
              },
              draw: function(k, b, Le) {
                this.bufferIsFlat !== Le && (this.cleanUp(), this.bufferIsFlat = Le), this.dirty && (this.prepVertexBuffer(k, b), this.dirty = !1);
                var xe = y.SpaceTimeController.get_jNow() - y.SpaceTimeController.utcToJulian(this.baseDate), ze = this.scaleFactor;
                if (Le && this.astronomical && this._markerScale$1 === 1 && (ze = this.scaleFactor / (k.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = xe, this.triangleList2d.draw(k, b * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = xe, this.triangleList.draw(k, b * this.get_opacity(), 1)), this.pointList != null)
                  switch (this.pointList.depthBuffered = !1, this.pointList.showFarSide = this.get_showFarSide(), this.pointList.decay = this.timeSeries ? this.decay : 0, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = xe, this.pointList.scale = this._markerScale$1 === 1 ? ze : -ze, this._plotType$1) {
                    case 0:
                      this.pointList.draw(k, b * this.get_opacity(), !1);
                      break;
                    case 2:
                      this.pointList.drawTextured(k, B.get__circleTexture$1().texture2d, b * this.get_opacity());
                      break;
                    case 1:
                      this.pointList.drawTextured(k, Me.PushPin.getPushPinTexture(19), b * this.get_opacity());
                      break;
                    case 3:
                      this.pointList.drawTextured(k, Me.PushPin.getPushPinTexture(35), b * this.get_opacity());
                      break;
                    case 5:
                    case 4:
                      this.pointList.drawTextured(k, Me.PushPin.getPushPinTexture(this._markerIndex$1), b * this.get_opacity());
                      break;
                  }
                return this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = xe, this.lineList.drawLines(k, b * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = xe, this.lineList2d.drawLines(k, b * this.get_opacity())), !0;
              },
              initFromXml: function(k) {
                Ee.Layer.prototype.initFromXml.call(this, k);
              },
              cleanUp: function() {
                this.dirty = !0, this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
              },
              dynamicUpdate: function() {
                return !1;
              },
              addFilesToCabinet: function(k) {
                var b = this._filename$1, Le = k.tempDirectory + s.ss.format("{0}\\{1}.txt", k.get_packageID(), this.id.toString());
                b.substring(0, b.lastIndexOf("\\") + 1), Le.substring(0, Le.lastIndexOf("\\") + 1);
              },
              loadData: function(k, b) {
                var Le = this, xe = k.getFileBlob(b), ze = new FileReader();
                ze.onloadend = function(Se) {
                  var Te = s.ss.safeCast(ze.result, String);
                  Le._table$1 = Ve.VoTable.loadFromString(Te), Le.set_lngColumn(Le._table$1.getRAColumn().index), Le.set_latColumn(Le._table$1.getDecColumn().index);
                }, ze.readAsText(xe);
              },
              canCopyToClipboard: function() {
                return !0;
              },
              copyToClipboard: function() {
              },
              findClosest: function(k, b, Le, xe) {
                var ze = _.Coordinates.geoTo3dDouble(k.get_lat(), k.get_lng()), Se;
                if (Le != null) {
                  var Te = _.Coordinates.raDecTo3dAu(Le.get_RA(), -Le.get_dec(), -1);
                  Se = t.Vector3d.subtractVectors(ze, Te), b = Se.length();
                }
                for (var D = -1, ke = 0, Fe = s.ss.enumerate(this.positions); Fe.moveNext(); ) {
                  var He = Fe.current;
                  Se = t.Vector3d.subtractVectors(ze, He), Se.length() < b && (b = Se.length(), D = ke), ke++;
                }
                if (D === -1)
                  return Le;
                var We = _.Coordinates.cartesianToSpherical2(this.positions[D]), Ke = this._table$1.rows[D].columnData[this.nameColumn].toString();
                (this.nameColumn === this.startDateColumn || this.nameColumn === this.endDateColumn) && (Ke = Me.SpreadSheetLayer.parseDate(Ke).toString()), s.ss.emptyString(Ke) && (Ke = s.ss.format("RA={0}, Dec={1}", _.Coordinates.formatHMS(We.get_RA()), _.Coordinates.formatDMS(We.get_dec())));
                for (var $ = u.Place.create(Ke, We.get_lat(), We.get_RA(), 268435456, "", 2, -1), De = {}, Re = 0; Re < s.ss.keyCount(this._table$1.columns); Re++) {
                  var Ie = this._table$1.rows[D].get_item(Re).toString();
                  (Re === this.startDateColumn || Re === this.endDateColumn) && (Ie = Me.SpreadSheetLayer.parseDate(Ie).toString()), !s.ss.keyExists(De, this._table$1.column[Re].name) && !s.ss.emptyString(this._table$1.column[Re].name) ? De[this._table$1.column[Re].name] = Ie : De["Column" + Re.toString()] = Ie;
                }
                return $.set_tag(De), $;
              },
              prepVertexBuffer: function(k, b) {
                var Le = this._table$1.getColumnByUcd("meta.id");
                Le == null && (Le = this._table$1.column[0]);
                var xe = this.isSiapResultSet();
                this.pointList == null && (this.pointList = new l.PointList(k)), this.lineList2d == null && (this.lineList2d = new l.LineList()), this.lineList2d.clear();
                var ze = this._table$1.getColumnByUcd("phys.area;obs.field");
                ze == null && s.ss.keyExists(this._table$1.columns, "regionSTCS") && (ze = this._table$1.columns.regionSTCS), this.get_plotType() ? this.set_markerScale(0) : this.set_markerScale(1);
                var Se = [], Te = new l.TimeSeriesPointVertex();
                this.positions.length = 0;
                var D = 0, ke = c.Color.fromArgb(s.ss.truncate(b * this.get_color().a), this.get_color().r, this.get_color().g, this.get_color().b);
                this.pointScaleType = 4;
                for (var Fe = s.ss.enumerate(this._table$1.rows); Fe.moveNext(); ) {
                  var He = Fe.current;
                  try {
                    if (this.lngColumn > -1 && this.latColumn > -1) {
                      var We = parseFloat(He.get_item(this.get_lngColumn()).toString()), Ke = parseFloat(He.get_item(this.get_latColumn()).toString()), $ = _.Coordinates.geoTo3dDouble(Ke, We);
                      if (Te.position = $, this.positions.push(Te.position), Te.set_color(ke), this.sizeColumn > -1)
                        try {
                          if (!this.get_markerScale())
                            Te.pointSize = 20;
                          else
                            switch (this.pointScaleType) {
                              case 0:
                                Te.pointSize = parseFloat(He.get_item(this.sizeColumn).toString());
                                break;
                              case 2:
                                Te.pointSize = Math.log(parseFloat(He.get_item(this.sizeColumn).toString()));
                                break;
                              case 1:
                                Te.pointSize = Math.pow(2, parseFloat(He.get_item(this.sizeColumn).toString()));
                                break;
                              case 4:
                                var De = parseFloat(He.get_item(this.sizeColumn).toString());
                                Te.pointSize = 40 / Math.pow(1.6, De) * 10;
                                break;
                              case 3:
                                Te.pointSize = 1;
                                break;
                              default:
                                break;
                            }
                        } catch {
                          Te.pointSize = 0.01;
                        }
                      else
                        this.get_markerScale() ? Te.pointSize = Math.pow(2, 1) * 100 : Te.pointSize = 20;
                      if (this.startDateColumn > -1) {
                        var Re = s.ss.date(He.get_item(this.startDateColumn).toString());
                        Te.tu = y.SpaceTimeController.utcToJulian(Re), Te.tv = 0;
                      }
                      Se.push(Te), this.pointList.addPoint(Te.position, Te.color, new l.Dates(Te.tu, Te.tv), Te.pointSize), D++;
                    }
                    xe && ze != null && this._addSiapStcRow$1(ze.name, He, He === this._table$1.selectedRow);
                  } catch {
                  }
                  this.lines = !1;
                }
                return xe && ze != null && this._addSiapStcRow$1(ze.name, this._table$1.selectedRow, !0), !0;
              },
              _addSiapStcRow$1: function(k, b, Le) {
                var xe = s.ss.replaceString(b.getColumnData(k).toString(), "  ", " "), ze = c.Color.fromArgb(120, 255, 255, 255);
                if (Le && (ze = c.Colors.get_yellow()), s.ss.startsWith(xe, "Polygon J2000")) {
                  for (var Se = xe.split(" "), Te = Se.length, D = 0; D < Te; )
                    if (Se[D] === "Polygon") {
                      D += 2;
                      for (var ke = new t.Vector3d(), Fe = new t.Vector3d(), He = !0, We = D; We < Te; We += 2) {
                        if (Se[We] === "Polygon") {
                          He = !0;
                          break;
                        } else {
                          var Ke = _.Coordinates.parseRA(Se[We], !0) * 15 + 180, $ = _.Coordinates.parseDec(Se[We + 1]), De = _.Coordinates.geoTo3dDouble($, Ke);
                          He ? (Fe = De, He = !1) : this.lineList2d.addLine(ke, De, ze, new l.Dates(0, 0)), ke = De;
                        }
                        D += 2;
                      }
                      Te > 4 && this.lineList2d.addLine(Fe, ke, ze, new l.Dates(0, 0));
                    }
                }
              },
              isSiapResultSet: function() {
                return this._table$1.getColumnByUcd("vox:image.title") != null && this._table$1.getColumnByUcd("VOX:Image.AccessReference") != null;
              },
              get_header: function() {
                for (var k = new Array(s.ss.keyCount(this._table$1.columns)), b = 0, Le = s.ss.enumerate(this._table$1.column); Le.moveNext(); ) {
                  var xe = Le.current;
                  k[b++] = xe.name;
                }
                return k;
              },
              get_table: function() {
                return this._table$1;
              },
              set_table: function(k) {
                return this._table$1 = k, k;
              }
            };
            (0, a.registerType)("VoTableLayer", [B, Pe, Ee.Layer]);
          }
        ),
        /***/
        "./esm/layers/wcs_image.js": (
          /*!*********************************!*\
            !*** ./esm/layers/wcs_image.js ***!
            \*********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              WcsImage: () => (
                /* binding */
                a
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            );
            function a() {
              this.copyright = "", this.creditsUrl = "", this._validWcs = !1, this.keywords = [], this.description = "", this.scaleX = 0, this.scaleY = 0, this.centerX = 0, this.centerY = 0, this.rotation = 0, this.referenceX = 0, this.referenceY = 0, this.sizeX = 0, this.sizeY = 0, this.cd1_1 = 0, this.cd1_2 = 0, this.cd2_1 = 0, this.cd2_2 = 0, this.hasRotation = !1, this.hasSize = !1, this.hasScale = !1, this.hasLocation = !1, this.hasPixel = !1, this.filename = "", this._colorCombine = !1;
            }
            var t = {
              get_copyright: function() {
                return this.copyright;
              },
              set_copyright: function(l) {
                return this.copyright = l, l;
              },
              get_creditsUrl: function() {
                return this.creditsUrl;
              },
              set_creditsUrl: function(l) {
                return this.creditsUrl = l, l;
              },
              get_validWcs: function() {
                return this._validWcs;
              },
              set_validWcs: function(l) {
                return this._validWcs = l, l;
              },
              get_keywords: function() {
                return this.keywords.length || this.keywords.push("Image File"), this.keywords;
              },
              set_keywords: function(l) {
                return this.keywords = l, l;
              },
              get_description: function() {
                return this.description;
              },
              set_description: function(l) {
                return this.description = l, l;
              },
              get_scaleX: function() {
                return this.scaleX;
              },
              set_scaleX: function(l) {
                return this.scaleX = l, l;
              },
              get_scaleY: function() {
                return this.scaleY;
              },
              set_scaleY: function(l) {
                return this.scaleY = l, l;
              },
              get_centerX: function() {
                return this.centerX;
              },
              set_centerX: function(l) {
                return this.centerX = l, l;
              },
              get_viewCenterX: function() {
                return this.centerX + (this.get_sizeX() / 2 - this.get_referenceX()) * this.get_scaleX();
              },
              get_centerY: function() {
                return this.centerY;
              },
              set_centerY: function(l) {
                return this.centerY = l, l;
              },
              get_viewCenterY: function() {
                return this.centerY + (this.get_sizeY() / 2 - this.get_referenceY()) * this.get_scaleY();
              },
              get_rotation: function() {
                return this.rotation;
              },
              set_rotation: function(l) {
                return this.rotation = l, l;
              },
              get_referenceX: function() {
                return this.referenceX;
              },
              set_referenceX: function(l) {
                return this.referenceX = l, l;
              },
              get_referenceY: function() {
                return this.referenceY;
              },
              set_referenceY: function(l) {
                return this.referenceY = l, l;
              },
              get_sizeX: function() {
                return this.sizeX;
              },
              set_sizeX: function(l) {
                return this.sizeX = l, l;
              },
              get_sizeY: function() {
                return this.sizeY;
              },
              set_sizeY: function(l) {
                return this.sizeY = l, l;
              },
              get_cd1_1: function() {
                return this.cd1_1;
              },
              set_cd1_1: function(l) {
                return this.cd1_1 = l, l;
              },
              get_cd1_2: function() {
                return this.cd1_2;
              },
              set_cd1_2: function(l) {
                return this.cd1_2 = l, l;
              },
              get_cd2_1: function() {
                return this.cd2_1;
              },
              set_cd2_1: function(l) {
                return this.cd2_1 = l, l;
              },
              get_cd2_2: function() {
                return this.cd2_2;
              },
              set_cd2_2: function(l) {
                return this.cd2_2 = l, l;
              },
              adjustScale: function(l, o) {
                l !== this.sizeX && (this.scaleX *= this.sizeX / l, this.referenceX /= this.sizeX / l, this.sizeX = l), o !== this.sizeY && (this.scaleY *= this.sizeY / o, this.referenceY /= this.sizeY / o, this.sizeY = o);
              },
              calculateScaleFromCD: function() {
                this.scaleX = Math.sqrt(this.cd1_1 * this.cd1_1 + this.cd2_1 * this.cd2_1) * (this.cd1_1 * this.cd2_2 - this.cd1_2 * this.cd2_1) < 0 ? -1 : 1, this.scaleY = Math.sqrt(this.cd1_2 * this.cd1_2 + this.cd2_2 * this.cd2_2);
              },
              calculateRotationFromCD: function() {
                var l = this.cd1_1 * this.cd2_2 - this.cd1_2 * this.cd2_1 < 0 ? -1 : 1, o = Math.atan2(-l * this.cd1_2, this.cd2_2);
                this.rotation = o / Math.PI * 180;
              },
              get_filename: function() {
                return this.filename;
              },
              set_filename: function(l) {
                return this.filename = l, l;
              },
              get_colorCombine: function() {
                return this._colorCombine;
              },
              set_colorCombine: function(l) {
                return this._colorCombine = l, l;
              },
              getBitmap: function() {
                return null;
              }
            };
            (0, s.registerType)("WcsImage", [a, t, null]);
          }
        ),
        /***/
        "./esm/mercator_tile.js": (
          /*!******************************!*\
            !*** ./esm/mercator_tile.js ***!
            \******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              MercatorTile: () => (
                /* binding */
                u
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ./graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), c = n(
              /*! ./render_triangle.js */
              "./esm/render_triangle.js"
            ), _ = n(
              /*! ./tile.js */
              "./esm/tile.js"
            );
            function u() {
              this._tileDegrees$1 = 0, this._latMin$1 = 0, this._latMax$1 = 0, this._lngMin$1 = 0, this._lngMax$1 = 0, this._subDivisionLevel$1 = 32, _.Tile.call(this);
            }
            u.create = function(g, Ee, Ve, Me, B) {
              var Pe = new u();
              return Pe.parent = B, Pe.level = g, Pe.tileX = Ee, Pe.tileY = Ve, Pe.dataset = Me, Pe.computeBoundingSphere(), Pe;
            }, u.getCentrePointOffsetAsTileRatio = function(g, Ee, Ve) {
              var Me = u.absoluteLonToMetersAtZoom(Ee, Ve), B = Me / 256 - Math.floor(Me / 256), Pe = u.absoluteLatToMetersAtZoom(g, Ve), k = Pe / 256 - Math.floor(Pe / 256);
              return l.Vector2d.create(B, k);
            }, u.relativeMetersToLatAtZoom = function(g, Ee) {
              var Ve = u.metersPerPixel2(Ee), Me = g * Ve;
              return u._radToDeg$1(Math.PI / 2 - 2 * Math.atan(Math.exp(0 - Me / 6378137)));
            }, u.relativeMetersToLonAtZoom = function(g, Ee) {
              var Ve = u.metersPerPixel2(Ee), Me = g * Ve;
              return u._radToDeg$1(Me / 6378137);
            }, u.absoluteLatToMetersAtZoom = function(g, Ee) {
              var Ve = Math.sin(u._degToRad$1(g)), Me = 6378137 / 2 * Math.log((1 + Ve) / (1 - Ve)), B = u.metersPerPixel2(Ee);
              return s.ss.truncate(Math.round(20037508 - Me) / B);
            }, u.absoluteMetersToLatAtZoom = function(g, Ee) {
              var Ve = u.metersPerPixel2(Ee), Me = 20037508 - g * Ve;
              return u._radToDeg$1(Math.PI / 2 - 2 * Math.atan(Math.exp(0 - Me / 6378137)));
            }, u.absoluteLonToMetersAtZoom = function(g, Ee) {
              var Ve = 6378137 * u._degToRad$1(g), Me = u.metersPerPixel2(Ee);
              return s.ss.truncate((Ve + 20037508) / Me);
            }, u.absoluteMetersToLonAtZoom = function(g, Ee) {
              var Ve = u.metersPerPixel2(Ee), Me = g * Ve - 20037508;
              return u._radToDeg$1(Me / 6378137);
            }, u.absoluteLonToMetersAtZoomTile = function(g, Ee, Ve) {
              var Me = 6378137 * u._degToRad$1(g), B = u.metersPerPixel2(Ee);
              return s.ss.truncate((Me + 20037508) / B);
            }, u.absoluteLatToMetersAtZoomTile = function(g, Ee, Ve) {
              var Me = Math.sin(u._degToRad$1(g)), B = 6378137 / 2 * Math.log((1 + Me) / (1 - Me)), Pe = u.metersPerPixel2(Ee);
              return s.ss.truncate(Math.round(20037508 - B) / Pe);
            }, u.absoluteMetersToLonAtZoomByTileY = function(g, Ee, Ve) {
              var Me = u.metersPerPixel2(Ee), B = g * Me - 20037508;
              return u._radToDeg$1(B / 6378137);
            }, u._degToRad$1 = function(g) {
              return g * Math.PI / 180;
            }, u.metersPerPixel2 = function(g) {
              return 156543 / (1 << g);
            }, u._radToDeg$1 = function(g) {
              return g * 180 / Math.PI;
            };
            var y = {
              computeBoundingSphere: function() {
                this._tileDegrees$1 = 360 / Math.pow(2, this.level), this._latMin$1 = u.absoluteMetersToLatAtZoom(this.tileY * 256, this.level), this._latMax$1 = u.absoluteMetersToLatAtZoom((this.tileY + 1) * 256, this.level), this._lngMin$1 = this.tileX * this._tileDegrees$1 - 180, this._lngMax$1 = (this.tileX + 1) * this._tileDegrees$1 - 180;
                var g = (this._latMin$1 + this._latMax$1) / 2, Ee = (this._lngMin$1 + this._lngMax$1) / 2;
                this.sphereCenter = this.geoTo3d(g, Ee, !1), this.topLeft = this.geoTo3d(this._latMin$1, this._lngMin$1, !1), this.bottomRight = this.geoTo3d(this._latMax$1, this._lngMax$1, !1), this.topRight = this.geoTo3d(this._latMin$1, this._lngMax$1, !1), this.bottomLeft = this.geoTo3d(this._latMax$1, this._lngMin$1, !1), this.tileY || (this.topLeft = l.Vector3d.create(0, 1, 0), this.topRight = l.Vector3d.create(0, 1, 0)), this.tileY === Math.pow(2, this.level) - 1 && (this.bottomRight = l.Vector3d.create(0, -1, 0), this.bottomLeft = l.Vector3d.create(0, -1, 0));
                var Ve = this.topLeft;
                Ve.subtract(this.sphereCenter), this.sphereRadius = Ve.length(), Ve = this.bottomRight, Ve.subtract(this.sphereCenter);
                var Me = Ve.length();
                this.sphereRadius < Me && (this.sphereRadius = Me), this._tileDegrees$1 = Math.abs(this._latMax$1 - this._latMin$1);
              },
              isPointInTile: function(g, Ee) {
                return !(!this.demReady || this.demData == null || g < Math.min(this._latMin$1, this._latMax$1) || g > Math.max(this._latMax$1, this._latMin$1) || Ee < Math.min(this._lngMin$1, this._lngMax$1) || Ee > Math.max(this._lngMin$1, this._lngMax$1));
              },
              getSurfacePointAltitude: function(g, Ee, Ve) {
                if (this.level < _.Tile.lastDeepestLevel)
                  for (var Me = s.ss.enumerate(this.children); Me.moveNext(); ) {
                    var B = Me.current;
                    if (B != null && B.isPointInTile(g, Ee)) {
                      var Pe = B.getSurfacePointAltitude(g, Ee, Ve);
                      if (Pe)
                        return Pe;
                      break;
                    }
                  }
                var k = this._getAltitudeAtLatLng$1(g, Ee, Ve ? 1 : this.get__demScaleFactor());
                return k;
              },
              _getAltitudeAtLatLng$1: function(g, Ee, Ve) {
                var Me = Math.abs(this._latMax$1 - this._latMin$1), B = Math.abs(this._lngMax$1 - this._lngMin$1), Pe = (g - Math.min(this._latMax$1, this._latMin$1)) / Me * 32, k = (Ee - Math.min(this._lngMax$1, this._lngMin$1)) / B * 32, b = Math.min(31, s.ss.truncate(Pe)), Le = Math.min(31, s.ss.truncate(k)), xe = k - Le, ze = Pe - b, Se = this.demData[b * 33 + Le], Te = this.demData[b * 33 + (Le + 1)], D = this.demData[(b + 1) * 33 + Le], ke = this.demData[(b + 1) * 33 + (Le + 1)], Fe = Se * (1 - xe) + xe * Te, He = D * (1 - xe) + xe * ke, We = Fe * (1 - ze) + ze * He;
                return We / Ve;
              },
              createGeometry: function(g) {
                if (_.Tile.prototype.createGeometry.call(this, g), this.geometryCreated)
                  return !0;
                this.geometryCreated = !0, t.tileUvMultiple == 256 && (!this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1) && (this._subDivisionLevel$1 = Math.max(2, (6 - this.level) * 2));
                for (var Ee = 0; Ee < 4; Ee++)
                  this._renderTriangleLists[Ee] = [];
                var Ve, Me, B = 0, Pe = 360 / Math.pow(2, this.level);
                this._latMin$1 = u.absoluteMetersToLatAtZoom(this.tileY * 256, this.level), this._latMax$1 = u.absoluteMetersToLatAtZoom((this.tileY + 1) * 256, this.level), this._lngMin$1 = this.tileX * Pe - 180, this._lngMax$1 = (this.tileX + 1) * Pe - 180;
                var k = u.absoluteMetersToLatAtZoom((this.tileY * 2 + 1) * 256, this.level + 1);
                this.topLeft = this.geoTo3d(this._latMin$1, this._lngMin$1, !1), this.bottomRight = this.geoTo3d(this._latMax$1, this._lngMax$1, !1), this.topRight = this.geoTo3d(this._latMin$1, this._lngMax$1, !1), this.bottomLeft = this.geoTo3d(this._latMax$1, this._lngMin$1, !1);
                var b = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1));
                Pe = this._lngMax$1 - this._lngMin$1, Pe / this._subDivisionLevel$1;
                var Le, xe, ze = 1 / this._subDivisionLevel$1, Se = this._latMax$1 - k;
                for (xe = 0; xe < this._subDivisionLevel$1 / 2; xe++)
                  for (xe !== this._subDivisionLevel$1 / 2 ? Ve = this._latMax$1 - 2 * ze * Se * xe : Ve = k, Le = 0; Le <= this._subDivisionLevel$1; Le++)
                    Le !== this._subDivisionLevel$1 ? Me = this._lngMin$1 + ze * Pe * Le : Me = this._lngMax$1, B = xe * (this._subDivisionLevel$1 + 1) + Le, b[B] = new l.PositionTexture(), b[B].position = this.geoTo3dWithAlt(Ve, Me, !1, !0), b[B].tu = Le * ze * t.tileUvMultiple, b[B].tv = (u.absoluteLatToMetersAtZoom(Ve, this.level) - this.tileY * 256) / 256 * t.tileUvMultiple, this.demIndex++;
                for (Se = this._latMin$1 - k, xe = this._subDivisionLevel$1 / 2; xe <= this._subDivisionLevel$1; xe++)
                  for (xe !== this._subDivisionLevel$1 ? Ve = k + 2 * ze * Se * (xe - this._subDivisionLevel$1 / 2) : Ve = this._latMin$1, Le = 0; Le <= this._subDivisionLevel$1; Le++)
                    Le !== this._subDivisionLevel$1 ? Me = this._lngMin$1 + ze * Pe * Le : Me = this._lngMax$1, B = xe * (this._subDivisionLevel$1 + 1) + Le, b[B] = new l.PositionTexture(), b[B].position = this.geoTo3dWithAlt(Ve, Me, !1, !0), b[B].tu = Le * ze * t.tileUvMultiple, b[B].tv = (u.absoluteLatToMetersAtZoom(Ve, this.level) - this.tileY * 256) / 256 * t.tileUvMultiple, this.demIndex++;
                if (!this.tileY)
                  for (xe = this._subDivisionLevel$1, Le = 0; Le <= this._subDivisionLevel$1; Le++)
                    B = xe * (this._subDivisionLevel$1 + 1) + Le, b[B].position = l.Vector3d.create(0, 1, 0);
                if (this.tileY === Math.pow(2, this.level) - 1)
                  for (xe = 0, Le = 0; Le <= this._subDivisionLevel$1; Le++)
                    B = xe * (this._subDivisionLevel$1 + 1) + Le, b[B].position = l.Vector3d.create(0, -1, 0);
                this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
                var Te = this._subDivisionLevel$1 / 2, D = 0;
                if (g.gl == null)
                  for (var ke = 0; ke < 2; ke++)
                    for (var Fe = 0; Fe < 2; Fe++) {
                      for (B = 0, xe = Te * ke; xe < Te * (ke + 1); xe++)
                        for (Le = Te * Fe; Le < Te * (Fe + 1); Le++) {
                          var He, We, Ke;
                          He = b[xe * (this._subDivisionLevel$1 + 1) + Le], We = b[(xe + 1) * (this._subDivisionLevel$1 + 1) + Le], Ke = b[xe * (this._subDivisionLevel$1 + 1) + (Le + 1)];
                          var $ = c.RenderTriangle.create(He, We, Ke, this.texture, this.level);
                          this._renderTriangleLists[D].push($), He = b[xe * (this._subDivisionLevel$1 + 1) + (Le + 1)], We = b[(xe + 1) * (this._subDivisionLevel$1 + 1) + Le], Ke = b[(xe + 1) * (this._subDivisionLevel$1 + 1) + (Le + 1)], $ = c.RenderTriangle.create(He, We, Ke, this.texture, this.level), this._renderTriangleLists[D].push($);
                        }
                      D++;
                    }
                else {
                  this._vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                  var De = new Float32Array(b.length * 5), Re = De;
                  B = 0;
                  for (var Ie = s.ss.enumerate(b); Ie.moveNext(); ) {
                    var O = Ie.current;
                    B = this.addVertex(Re, B, O);
                  }
                  t.tilePrepDevice.bufferData(o.WEBGL.ARRAY_BUFFER, De, o.WEBGL.STATIC_DRAW);
                  for (var ke = 0; ke < 2; ke++)
                    for (var Fe = 0; Fe < 2; Fe++) {
                      var Ue = new Uint16Array(this.triangleCount * 3), $e = Ue;
                      for (B = 0, xe = Te * ke; xe < Te * (ke + 1); xe++)
                        for (Le = Te * Fe; Le < Te * (Fe + 1); Le++)
                          $e[B++] = xe * (this._subDivisionLevel$1 + 1) + Le, $e[B++] = (xe + 1) * (this._subDivisionLevel$1 + 1) + Le, $e[B++] = xe * (this._subDivisionLevel$1 + 1) + (Le + 1), $e[B++] = xe * (this._subDivisionLevel$1 + 1) + (Le + 1), $e[B++] = (xe + 1) * (this._subDivisionLevel$1 + 1) + Le, $e[B++] = (xe + 1) * (this._subDivisionLevel$1 + 1) + (Le + 1);
                      this._indexBuffers[D] = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[D]), t.tilePrepDevice.bufferData(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ue, o.WEBGL.STATIC_DRAW), D++;
                    }
                }
                return !0;
              },
              _getDemSample$1: function(g, Ee) {
                return this.demData[(32 - Ee) * 33 + g];
              },
              createDemFromParent: function() {
                var g = s.ss.safeCast(this.parent, u);
                if (g == null || g.demData == null)
                  return !1;
                var Ee = this.tileX % 2 === 1 ? 16 : 0, Ve = this.tileY % 2 === 1 ? 16 : 0;
                this.demData = new Array(this.demSize);
                for (var Me = 0; Me < 33; Me += 2)
                  for (var B = !0, Pe = 0; Pe < 33; Pe++)
                    B ? this.demData[(32 - Me) * 33 + Pe] = g._getDemSample$1(Pe / 2 + Ee, Me / 2 + Ve) : this.demData[(32 - Me) * 33 + Pe] = (g._getDemSample$1(Pe / 2 + Ee, Me / 2 + Ve) + g._getDemSample$1(Pe / 2 + Ee + 1, Me / 2 + Ve)) / 2, B = !B;
                for (var Me = 1; Me < 33; Me += 2)
                  for (var Pe = 0; Pe < 33; Pe++)
                    this.demData[(32 - Me) * 33 + Pe] = (this._getDemSample$1(Pe, Me - 1) + this._getDemSample$1(Pe, Me + 1)) / 2;
                for (var k = s.ss.enumerate(this.demData); k.moveNext(); ) {
                  var b = k.current;
                  this.demAverage += b;
                }
                return this.demAverage /= this.demData.length, this.demReady = !0, !0;
              }
            };
            (0, a.registerType)("MercatorTile", [u, y, _.Tile]);
          }
        ),
        /***/
        "./esm/minor_planets.js": (
          /*!******************************!*\
            !*** ./esm/minor_planets.js ***!
            \******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              MinorPlanets: () => (
                /* binding */
                b
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./astrocalc/elliptical.js */
              "./esm/astrocalc/elliptical.js"
            ), o = n(
              /*! ./graphics/texture.js */
              "./esm/graphics/texture.js"
            ), c = n(
              /*! ./graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), _ = n(
              /*! ./graphics/gl_buffers.js */
              "./esm/graphics/gl_buffers.js"
            ), u = n(
              /*! ./graphics/shaders.js */
              "./esm/graphics/shaders.js"
            ), y = n(
              /*! ./blend_state.js */
              "./esm/blend_state.js"
            ), g = n(
              /*! ./color.js */
              "./esm/color.js"
            ), Ee = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), Ve = n(
              /*! ./kepler_vertex.js */
              "./esm/kepler_vertex.js"
            ), Me = n(
              /*! ./space_time_controller.js */
              "./esm/space_time_controller.js"
            ), B = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), Pe = n(
              /*! ./utilities/binary_reader.js */
              "./esm/utilities/binary_reader.js"
            ), k = n(
              /*! ./web_file.js */
              "./esm/web_file.js"
            );
            function b() {
            }
            b.mpcList = [], b._initBegun = !1, b._mpcBlendStates = new Array(7), b.starTexture = null, b._mpcVertexBuffer = null, b._mpcCount = 0, b.getMpcFile = function(xe) {
              b._webMpcFile = new k.WebFile(xe), b._webMpcFile.responseType = "blob", b._webMpcFile.onStateChange = b.starFileStateChange, b._webMpcFile.send();
            }, b.starFileStateChange = function() {
              if (b._webMpcFile.get_state() === 2)
                alert(b._webMpcFile.get_message());
              else if (b._webMpcFile.get_state() === 1) {
                var xe = b._webMpcFile.getBlob(), ze = new FileReader();
                ze.onloadend = function(Se) {
                  b._readFromBin(new Pe.BinaryReader(new Uint8Array(ze.result))), b.initMPCVertexBuffer();
                }, ze.readAsArrayBuffer(xe);
              }
            }, b._readFromBin = function(xe) {
              b.mpcList = [];
              var ze = xe.get_length(), Se;
              try {
                for (; xe.get_position() < ze; )
                  Se = l.EOE._create(xe), b.mpcList.push(Se);
              } catch {
              }
              xe.close();
            }, b.drawMPC3D = function(xe, ze, Se) {
              var Te = xe.viewCamera.zoom, D = (Math.log(Math.max(1, Te)) / Math.log(4) - 15.5) * 90, ke = Math.min(255, Math.max(0, s.ss.truncate(D)));
              if (!(ke > 254)) {
                if (b._mpcVertexBuffer == null) {
                  b.starTexture == null && (b.starTexture = o.Texture.fromUrl(B.URLHelpers.singleton.engineAssetUrl("StarProfileAlpha.png")));
                  for (var Fe = 0; Fe < 7; Fe++)
                    b._mpcBlendStates[Fe] = y.BlendState.create(!1, 1e3);
                  b._initBegun || (b._startInit(), b._initBegun = !0);
                  return;
                }
                var He = t.Matrix3d.translation(t.Vector3d.negate(Se)), We = t.Matrix3d.multiplyMatrix(xe.get_world(), He), Ke = t.Matrix3d.multiplyMatrix(We, xe.get_view());
                if (t.Vector3d._transformCoordinate(xe.cameraPosition, t.Matrix3d.invertMatrix(xe.get_world())), b._mpcVertexBuffer != null)
                  for (var Fe = 0; Fe < 7; Fe++)
                    b._mpcBlendStates[Fe].set_targetState(!0), b._mpcBlendStates[Fe].get_state() && (u.KeplerPointSpriteShader.use(xe, Ke, b._mpcVertexBuffer[Fe].vertexBuffer, b.starTexture.texture2d, g.Colors.get_white(), ze * b._mpcBlendStates[Fe].get_opacity(), !1, Me.SpaceTimeController.get_jNow() - Ve.KeplerVertex.baseDate, 0, xe.cameraPosition, 200, 0.1), xe.gl.drawArrays(c.WEBGL.POINTS, 0, b._mpcVertexBuffer[Fe].count));
              }
            }, b._startInit = function() {
              Ee.freestandingMode || b.getMpcFile(B.URLHelpers.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=mpcbin"));
            }, b.initMPCVertexBuffer = function() {
              try {
                if (b._mpcVertexBuffer == null) {
                  var xe = new Array(7);
                  b._mpcCount = b.mpcList.length;
                  for (var ze = new Array(7), Se = 0; Se < 7; Se++)
                    ze[Se] = [];
                  for (var Te = s.ss.enumerate(b.mpcList); Te.moveNext(); ) {
                    var D = Te.current, ke = 0;
                    D.a < 2.5 ? ke = 0 : D.a < 2.83 ? ke = 1 : D.a < 2.96 ? ke = 2 : D.a < 3.3 ? ke = 3 : D.a < 5 ? ke = 4 : D.a < 10 ? ke = 5 : ke = 6;
                    var Fe = new Ve.KeplerVertex();
                    Fe.fill(D), ze[ke].push(Fe);
                  }
                  for (var Se = 0; Se < 7; Se++)
                    xe[Se] = _.KeplerVertexBuffer.create(ze[Se]), xe[Se].unlock();
                  b._mpcVertexBuffer = xe;
                }
              } finally {
              }
            };
            var Le = {};
            (0, a.registerType)("MinorPlanets", [b, Le, null]);
          }
        ),
        /***/
        "./esm/place.js": (
          /*!**********************!*\
            !*** ./esm/place.js ***!
            \**********************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Classification: () => (
                /* binding */
                Me
              ),
              /* harmony export */
              Place: () => (
                /* binding */
                B
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), o = n(
              /*! ./baseutil.js */
              "./esm/baseutil.js"
            ), c = n(
              /*! ./camera_parameters.js */
              "./esm/camera_parameters.js"
            ), _ = n(
              /*! ./interfaces.js */
              "./esm/interfaces.js"
            ), u = n(
              /*! ./ui_tools.js */
              "./esm/ui_tools.js"
            ), y = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), g = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), Ee = n(
              /*! ./imageset.js */
              "./esm/imageset.js"
            ), Ve = n(
              /*! ./planets.js */
              "./esm/planets.js"
            ), Me = {
              star: 1,
              supernova: 2,
              blackHole: 4,
              neutronStar: 8,
              doubleStar: 16,
              multipleStars: 32,
              asterism: 64,
              constellation: 128,
              openCluster: 256,
              globularCluster: 512,
              nebulousCluster: 1024,
              nebula: 2048,
              emissionNebula: 4096,
              planetaryNebula: 8192,
              reflectionNebula: 16384,
              darkNebula: 32768,
              giantMolecularCloud: 65536,
              supernovaRemnant: 131072,
              interstellarDust: 262144,
              quasar: 524288,
              galaxy: 1048576,
              spiralGalaxy: 2097152,
              irregularGalaxy: 4194304,
              ellipticalGalaxy: 8388608,
              knot: 16777216,
              plateDefect: 33554432,
              clusterOfGalaxies: 67108864,
              otherNGC: 134217728,
              unidentified: 268435456,
              solarSystem: 536870912,
              unfiltered: 1073741823,
              stellar: 63,
              stellarGroupings: 2032,
              nebulae: 523264,
              galactic: 133693440,
              other: 436207616
            };
            (0, a.registerType)("Classification", Me), (0, a.registerEnum)("Classification", Me);
            function B() {
              this._camParams = c.CameraParameters.create(0, 0, -1, 0, 0, 100), this._location3d = t.Vector3d.create(0, 0, 0), this.htmlDescription = "", this._constellation = "", this._classification = 1048576, this._type = 2, this._magnitude = 0, this._distnace = 0, this.angularSize = 60, this.annotation = "", this._thumbNail = null, this._studyImageset = null, this._backgroundImageSet = null, this._searchDistance = 0, this._elevation = 50;
            }
            B.create = function(k, b, Le, xe, ze, Se, Te) {
              var D = new B();
              return D.set_zoomLevel(Te), D._constellation = ze, D._name = k, Se === 2 || Se === 4 ? D._camParams.set_RA(Le) : D.set_lng(Le), D.set_lat(b), D.set_classification(xe), D.set_type(Se), D;
            }, B.createCameraParams = function(k, b, Le, xe, ze, Se) {
              var Te = new B();
              return Te._constellation = xe, Te._name = k, Te.set_classification(Le), Te._camParams = b, Te.set_type(ze), Te.set_target(Se), Te;
            }, B._fromXml = function(k) {
              var b = new B();
              if (b._name = k.attributes.getNamedItem("Name").nodeValue, k.attributes.getNamedItem("MSRComponentId") != null && k.attributes.getNamedItem("Permission") != null && k.attributes.getNamedItem("Url") != null)
                return b.set_url(k.attributes.getNamedItem("Url").nodeValue), b.set_thumbnailUrl(k.attributes.getNamedItem("Thumbnail").nodeValue), b;
              k.attributes.getNamedItem("DataSetType") != null && (b._type = a.Enums.parse("ImageSetType", k.attributes.getNamedItem("DataSetType").nodeValue)), b.get_type() === 2 ? (b._camParams.set_RA(parseFloat(k.attributes.getNamedItem("RA").nodeValue)), b._camParams.set_dec(parseFloat(k.attributes.getNamedItem("Dec").nodeValue))) : (b.set_lat(parseFloat(k.attributes.getNamedItem("Lat").nodeValue)), b.set_lng(parseFloat(k.attributes.getNamedItem("Lng").nodeValue))), k.attributes.getNamedItem("Constellation") != null && (b._constellation = k.attributes.getNamedItem("Constellation").nodeValue), k.attributes.getNamedItem("Classification") != null && (b._classification = a.Enums.parse("Classification", k.attributes.getNamedItem("Classification").nodeValue)), k.attributes.getNamedItem("Magnitude") != null && (b._magnitude = parseFloat(k.attributes.getNamedItem("Magnitude").nodeValue)), k.attributes.getNamedItem("AngularSize") != null && (b.angularSize = parseFloat(k.attributes.getNamedItem("AngularSize").nodeValue)), k.attributes.getNamedItem("ZoomLevel") != null && b.set_zoomLevel(parseFloat(k.attributes.getNamedItem("ZoomLevel").nodeValue)), k.attributes.getNamedItem("Rotation") != null && (b._camParams.rotation = parseFloat(k.attributes.getNamedItem("Rotation").nodeValue)), k.attributes.getNamedItem("Annotation") != null && (b.annotation = k.attributes.getNamedItem("Annotation").nodeValue), k.attributes.getNamedItem("Angle") != null && (b._camParams.angle = parseFloat(k.attributes.getNamedItem("Angle").nodeValue)), k.attributes.getNamedItem("Opacity") != null ? b._camParams.opacity = parseFloat(k.attributes.getNamedItem("Opacity").nodeValue) : b._camParams.opacity = 100, b.set_target(65536), k.attributes.getNamedItem("Target") != null && b.set_target(a.Enums.parse("SolarSystemObjects", k.attributes.getNamedItem("Target").nodeValue)), k.attributes.getNamedItem("ViewTarget") != null && (b._camParams.viewTarget = t.Vector3d.parse(k.attributes.getNamedItem("ViewTarget").nodeValue)), k.attributes.getNamedItem("TargetReferenceFrame") != null && (b._camParams.targetReferenceFrame = k.attributes.getNamedItem("TargetReferenceFrame").nodeValue);
              var Le = o.Util.selectSingleNode(k, "Description");
              Le != null && (b.htmlDescription = o.Util.getInnerText(Le));
              var xe = o.Util.selectSingleNode(k, "BackgroundImageSet");
              if (xe != null) {
                var ze = o.Util.selectSingleNode(xe, "ImageSet");
                b._backgroundImageSet = Ee.Imageset.fromXMLNode(ze);
              }
              var Se = o.Util.selectSingleNode(k, "ForegroundImageSet");
              if (Se != null) {
                var ze = o.Util.selectSingleNode(Se, "ImageSet");
                b._studyImageset = Ee.Imageset.fromXMLNode(ze);
              }
              return Se = o.Util.selectSingleNode(k, "ImageSet"), Se != null && (b._studyImageset = Ee.Imageset.fromXMLNode(Se)), b;
            }, B._properCaps = function(k) {
              for (var b = k.split(" "), Le = "", xe = s.ss.enumerate(b); xe.moveNext(); ) {
                var ze = xe.current;
                Le = Le + ze.substr(0, 1).toUpperCase() + (ze.length > 1 ? ze.substr(1).toLowerCase() : "") + " ";
              }
              return s.ss.trim(Le);
            };
            var Pe = {
              get_tag: function() {
                return this._tag;
              },
              set_tag: function(k) {
                return this._tag = k, k;
              },
              get_url: function() {
                return this._url;
              },
              set_url: function(k) {
                return this._url = k, k;
              },
              get_thumbnail: function() {
                return this._thumbnail;
              },
              set_thumbnail: function(k) {
                return this._thumbnail = k, k;
              },
              get_name: function() {
                return this.get_names()[0];
              },
              get_names: function() {
                return s.ss.emptyString(this._name) ? "".split(";") : this._name.split(";");
              },
              set_names: function(k) {
                return this._name = u.UiTools.getNamesStringFromArray(k), k;
              },
              get_camParams: function() {
                if (this.get_classification() === 536870912 && this._camParams.target !== 20) {
                  var k = Ve.Planets.getPlanetLocation(this.get_name());
                  this._camParams.set_RA(k.RA), this._camParams.set_dec(k.dec), this._distnace = k.distance;
                }
                return this._camParams;
              },
              set_camParams: function(k) {
                return this._camParams = k, k;
              },
              updatePlanetLocation: function(k) {
                this._camParams.viewTarget = Ve.Planets.getPlanet3dLocationJD(this.get_target(), k), this.get_target() !== 65536 && this.get_target() !== 20 && (this._camParams.viewTarget = Ve.Planets.getPlanetTargetPoint(this.get_target(), this.get_lat(), this.get_lng(), k));
              },
              get_location3d: function() {
                return (this.get_classification() === 536870912 || !this._location3d.x && !this._location3d.y && !this._location3d.z) && (this._location3d = g.Coordinates.raDecTo3d(this.get_RA(), this.get_dec())), this._location3d;
              },
              get_lat: function() {
                return this.get_camParams().lat;
              },
              set_lat: function(k) {
                return this._camParams.lat = k, k;
              },
              get_lng: function() {
                return this.get_camParams().lng;
              },
              set_lng: function(k) {
                return this._camParams.lng = k, k;
              },
              get_opacity: function() {
                return this.get_camParams().opacity;
              },
              set_opacity: function(k) {
                return this._camParams.opacity = k, k;
              },
              get_constellation: function() {
                return this._constellation;
              },
              set_constellation: function(k) {
                return this._constellation = k, k;
              },
              get_classification: function() {
                return this._classification;
              },
              set_classification: function(k) {
                return this._classification = k, k;
              },
              get_type: function() {
                return this._type;
              },
              set_type: function(k) {
                return this._type = k, k;
              },
              get_magnitude: function() {
                return this._magnitude;
              },
              set_magnitude: function(k) {
                return this._magnitude = k, k;
              },
              get_distance: function() {
                return this._distnace;
              },
              set_distance: function(k) {
                return this._distnace = k, k;
              },
              get_zoomLevel: function() {
                return this.get_camParams().zoom;
              },
              set_zoomLevel: function(k) {
                return this._camParams.zoom = k, k;
              },
              get_annotation: function() {
                return this.annotation;
              },
              set_annotation: function(k) {
                return this.annotation = k, k;
              },
              get_studyImageset: function() {
                return this._studyImageset;
              },
              set_studyImageset: function(k) {
                return this._studyImageset = k, k;
              },
              get_backgroundImageset: function() {
                return this._backgroundImageSet;
              },
              set_backgroundImageset: function(k) {
                return k != null && this.set_type(k.get_dataSetType()), this._backgroundImageSet = k, k;
              },
              get_searchDistance: function() {
                return this._searchDistance;
              },
              set_searchDistance: function(k) {
                return this._searchDistance = k, k;
              },
              get_elevation: function() {
                return this._elevation;
              },
              set_elevation: function(k) {
                return this._elevation = k, k;
              },
              get_thumbnailUrl: function() {
                if (s.ss.emptyString(this._thumbnailField)) {
                  if (this._studyImageset != null && !s.ss.emptyString(this._studyImageset.get_thumbnailUrl()))
                    return this._studyImageset.get_thumbnailUrl();
                  if (this._backgroundImageSet != null && !s.ss.emptyString(this._backgroundImageSet.get_thumbnailUrl()))
                    return this._backgroundImageSet.get_thumbnailUrl();
                  var k = this.get_name();
                  return k.indexOf(";") > -1 && (k = k.substr(0, k.indexOf(";"))), this.get_classification() === 1 || l.freestandingMode ? y.URLHelpers.singleton.engineAssetUrl("thumb_star.jpg") : y.URLHelpers.singleton.coreStaticUrl("wwtweb/thumbnail.aspx?name=" + k.toLowerCase());
                }
                return this._thumbnailField;
              },
              set_thumbnailUrl: function(k) {
                return this._thumbnailField = k, k;
              },
              get_RA: function() {
                return this.get_camParams().get_RA();
              },
              set_RA: function(k) {
                return this._camParams.set_RA(k), k;
              },
              get_dec: function() {
                return this.get_camParams().get_dec();
              },
              set_dec: function(k) {
                return this._camParams.set_dec(k), k;
              },
              toString: function() {
                return this._name;
              },
              _saveToXml: function(k, b) {
                k._writeStartElement(b), k._writeAttributeString("Name", this._name), k._writeAttributeString("DataSetType", a.Enums.toXml("ImageSetType", this._type)), this.get_type() === 2 ? (k._writeAttributeString("RA", this._camParams.get_RA().toString()), k._writeAttributeString("Dec", this._camParams.get_dec().toString())) : (k._writeAttributeString("Lat", this.get_lat().toString()), k._writeAttributeString("Lng", this.get_lng().toString())), k._writeAttributeString("Constellation", this._constellation), k._writeAttributeString("Classification", a.Enums.toXml("Classification", this._classification)), k._writeAttributeString("Magnitude", this._magnitude.toString()), k._writeAttributeString("Distance", this._distnace.toString()), k._writeAttributeString("AngularSize", this.angularSize.toString()), k._writeAttributeString("ZoomLevel", this.get_zoomLevel().toString()), k._writeAttributeString("Rotation", this._camParams.rotation.toString()), k._writeAttributeString("Angle", this._camParams.angle.toString()), k._writeAttributeString("Opacity", this._camParams.opacity.toString()), k._writeAttributeString("Target", a.Enums.toXml("SolarSystemObjects", this.get_target())), k._writeAttributeString("ViewTarget", this._camParams.viewTarget.toString()), k._writeAttributeString("TargetReferenceFrame", this._camParams.targetReferenceFrame), k._writeStartElement("Description"), k._writeCData(this.htmlDescription), k._writeEndElement(), this._backgroundImageSet != null && (k._writeStartElement("BackgroundImageSet"), Ee.Imageset.saveToXml(k, this._backgroundImageSet, ""), k._writeEndElement()), this._studyImageset != null && Ee.Imageset.saveToXml(k, this._studyImageset, ""), k._writeEndElement();
              },
              get_bounds: function() {
                return this._bounds;
              },
              set_bounds: function(k) {
                return this._bounds = k, k;
              },
              get_isImage: function() {
                return this._studyImageset != null || this._backgroundImageSet != null;
              },
              get_isTour: function() {
                return !1;
              },
              get_isFolder: function() {
                return !1;
              },
              get_children: function() {
                return [];
              },
              get_readOnly: function() {
                return !0;
              },
              get_target: function() {
                return this._camParams.target;
              },
              set_target: function(k) {
                return this._camParams.target = k, k;
              },
              get_isCloudCommunityItem: function() {
                return !1;
              }
            };
            (0, a.registerType)("Place", [B, Pe, null, _.IThumbnail, _.IPlace]), (0, l.set_createPlace)(B.create);
          }
        ),
        /***/
        "./esm/planets.js": (
          /*!************************!*\
            !*** ./esm/planets.js ***!
            \************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              BodyAngles: () => (
                /* binding */
                We
              ),
              /* harmony export */
              KeplerianElements: () => (
                /* binding */
                Fe
              ),
              /* harmony export */
              Planets: () => (
                /* binding */
                $
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./astrocalc/earth.js */
              "./esm/astrocalc/earth.js"
            ), o = n(
              /*! ./astrocalc/mercury.js */
              "./esm/astrocalc/mercury.js"
            ), c = n(
              /*! ./astrocalc/venus.js */
              "./esm/astrocalc/venus.js"
            ), _ = n(
              /*! ./astrocalc/mars.js */
              "./esm/astrocalc/mars.js"
            ), u = n(
              /*! ./astrocalc/jupiter.js */
              "./esm/astrocalc/jupiter.js"
            ), y = n(
              /*! ./astrocalc/saturn.js */
              "./esm/astrocalc/saturn.js"
            ), g = n(
              /*! ./astrocalc/uranus.js */
              "./esm/astrocalc/uranus.js"
            ), Ee = n(
              /*! ./astrocalc/neptune.js */
              "./esm/astrocalc/neptune.js"
            ), Ve = n(
              /*! ./astrocalc/pluto.js */
              "./esm/astrocalc/pluto.js"
            ), Me = n(
              /*! ./astrocalc/galilean_moons.js */
              "./esm/astrocalc/galilean_moons.js"
            ), B = n(
              /*! ./astrocalc/moon.js */
              "./esm/astrocalc/moon.js"
            ), Pe = n(
              /*! ./astrocalc.js */
              "./esm/astrocalc.js"
            ), k = n(
              /*! ./graphics/texture.js */
              "./esm/graphics/texture.js"
            ), b = n(
              /*! ./graphics/sprite2d.js */
              "./esm/graphics/sprite2d.js"
            ), Le = n(
              /*! ./baseplanets.js */
              "./esm/baseplanets.js"
            ), xe = n(
              /*! ./camera_parameters.js */
              "./esm/camera_parameters.js"
            ), ze = n(
              /*! ./color.js */
              "./esm/color.js"
            ), Se = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), Te = n(
              /*! ./settings.js */
              "./esm/settings.js"
            ), D = n(
              /*! ./space_time_controller.js */
              "./esm/space_time_controller.js"
            ), ke = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            );
            function Fe() {
              this.a = 0, this.e = 0, this.ea = 0;
            }
            var He = {};
            (0, a.registerType)("KeplerianElements", [Fe, He, null]);
            function We(Re, Ie, O, Ue) {
              this.poleDec = 0, this.poleRa = 0, this.primeMeridian = 0, this.rotationRate = 0, this.poleDec = Ie, this.poleRa = Re, this.primeMeridian = O, this.rotationRate = Ue;
            }
            var Ke = {};
            (0, a.registerType)("BodyAngles", [We, Ke, null]);
            function $() {
            }
            $.RC = Math.PI / 180, $._jNow = 0, $._planetAngles = [
              new We(286.13, 63.87, 84.176, 14.1844),
              new We(281.0097, 61.4143, 329.548, 6.1385025),
              new We(272.76, 67.16, 160.2, -1.4813688),
              new We(317.68143, 52.8865, 176.63, 350.89198226),
              new We(268.056595, 64.495303, 284.95, 870.536),
              new We(40.589, 83.537, 38.9, 810.7939024),
              new We(257.311, -15.175, 203.81, 501.1600928),
              new We(299.36, 43.46, 253.18, 536.3128492),
              new We(132.993, -6.163, 302.695, 56.3625225),
              new We(269.9949, 66.5392, 38.3213, 13.17635815),
              new We(268.05, 64.5, 200.39, 203.4889538),
              new We(268.08, 64.51, 36.022, 101.3747235),
              new We(268.2, 64.57, 44.064, 50.3176081),
              new We(268.72, 64.83, 259.51, 21.5710715),
              new We(0, 0, 0, 0),
              new We(0, 0, 0, 0),
              new We(0, 0, 0, 0),
              new We(0, 0, 0, 0),
              new We(0, 0, 0, 0),
              new We(0, 90, 190.147, 360.9856235)
            ], $._lastPlanetCenterID = -2, $._orbitalSampleRate = 256, $._obliquity = 23.5 * $.RC, $._drawOrder = {}, $.earthMatrix = new t.Matrix3d(), $.earthMatrixInv = new t.Matrix3d(), $._lastUpdate = /* @__PURE__ */ new Date(), $._planetSprite = new b.Sprite2d(), $._planetPoints = null, $._planet3dLocations = null, $.loadPlanetTexture = function(Re) {
              var Ie = new k.Texture();
              return Ie.load(Re), Ie;
            }, $.getPlanet3dLocation = function(Re) {
              try {
                if (Re < 21)
                  return $._planet3dLocations[Re].copy();
              } catch {
              }
              return t.Vector3d.create(0, 0, 0);
            }, $.getPlanet3dSufaceAltitude = function(Re) {
              try {
                if (Re < 21)
                  return $.getAdjustedPlanetRadius(Re);
              } catch {
              }
              return 0;
            }, $.getPlanetTargetPoint = function(Re, Ie, O, Ue) {
              var $e;
              return Ue ? $e = $.getPlanet3dLocationJD(Re, Ue) : $e = $.getPlanet3dLocation(Re), $e.add(Se.Coordinates.raDecTo3dAu(O / 15 + 6, Ie, $.getPlanet3dSufaceAltitude(Re))), $e;
            }, $.getPlanet3dLocationJD = function(Re, Ie) {
              try {
                var O = new t.Vector3d(), Ue = Pe.AstroCalc.getPlanet(Ie, 0, 0, 0, -6378149), $e = Se.Coordinates.raDecTo3dAu(Ue.RA, Ue.dec, Ue.distance);
                if (Re === xe.SolarSystemObjects.earth)
                  O = t.Vector3d.create(-$e.x, -$e.y, -$e.z);
                else {
                  var Ze = Pe.AstroCalc.getPlanet(Ie, Re, 0, 0, -6378149);
                  O = Se.Coordinates.raDecTo3dAu(Ze.RA, Ze.dec, Ze.distance), O.subtract($e);
                }
                if (O.rotateX(Se.Coordinates.meanObliquityOfEcliptic(Ie) * $.RC), Te.Settings.get_active().get_solarSystemScale() !== 1)
                  switch (Re) {
                    case xe.SolarSystemObjects.moon:
                      var Qe = $.getPlanet3dLocationJD(xe.SolarSystemObjects.earth, Ie);
                      O.subtract(Qe), O.multiply(Te.Settings.get_active().get_solarSystemScale() / 2), O.add(Qe);
                      break;
                    case xe.SolarSystemObjects.io:
                    case xe.SolarSystemObjects.europa:
                    case xe.SolarSystemObjects.ganymede:
                    case xe.SolarSystemObjects.callisto:
                      var Qe = $.getPlanet3dLocationJD(xe.SolarSystemObjects.jupiter, Ie);
                      O.subtract(Qe), O.multiply(Te.Settings.get_active().get_solarSystemScale()), O.add(Qe);
                      break;
                    default:
                      break;
                  }
                return O;
              } catch {
                return t.Vector3d.create(0, 0, 0);
              }
            }, $.getPlanetLocation = function(Re) {
              var Ie = $.getPlanetIDFromName(Re);
              return $._planetLocations != null ? $._planetLocations[Ie] : Pe.AstroCalc.getPlanet(D.SpaceTimeController.get_jNow(), Ie, D.SpaceTimeController.get_location().get_lat(), D.SpaceTimeController.get_location().get_lng(), D.SpaceTimeController.get_altitude());
            }, $.getPlanetLocationJD = function(Re, Ie) {
              var O = $.getPlanetIDFromName(Re);
              return Pe.AstroCalc.getPlanet(Ie, O, D.SpaceTimeController.get_location().get_lat(), D.SpaceTimeController.get_location().get_lng(), D.SpaceTimeController.get_altitude());
            }, $.getPlanetIDFromName = function(Re) {
              switch (Re) {
                case "Sun":
                  return xe.SolarSystemObjects.sun;
                case "Mercury":
                  return xe.SolarSystemObjects.mercury;
                case "Venus":
                  return xe.SolarSystemObjects.venus;
                case "Mars":
                  return xe.SolarSystemObjects.mars;
                case "Jupiter":
                  return xe.SolarSystemObjects.jupiter;
                case "Saturn":
                  return xe.SolarSystemObjects.saturn;
                case "Uranus":
                  return xe.SolarSystemObjects.uranus;
                case "Neptune":
                  return xe.SolarSystemObjects.neptune;
                case "Pluto":
                  return xe.SolarSystemObjects.pluto;
                case "Moon":
                  return xe.SolarSystemObjects.moon;
                case "Io":
                  return xe.SolarSystemObjects.io;
                case "Europa":
                  return xe.SolarSystemObjects.europa;
                case "Ganymede":
                  return xe.SolarSystemObjects.ganymede;
                case "Callisto":
                  return xe.SolarSystemObjects.callisto;
                case "Earth":
                  return xe.SolarSystemObjects.earth;
                case "IoShadow":
                  return xe.SolarSystemObjects.ioShadow;
                case "EuropaShadow":
                  return xe.SolarSystemObjects.europaShadow;
                case "GanymedeShadow":
                  return xe.SolarSystemObjects.ganymedeShadow;
                case "CallistoShadow":
                  return xe.SolarSystemObjects.callistoShadow;
                case "SunEclipsed":
                  return xe.SolarSystemObjects.sunEclipsed;
                case "Custom":
                  return xe.SolarSystemObjects.custom;
                case "Undefined":
                  return xe.SolarSystemObjects.undefined;
                default:
                  return -1;
              }
            }, $.getNameFrom3dId = function(Re) {
              switch (Re) {
                case xe.SolarSystemObjects.sun:
                  return "Sun";
                case xe.SolarSystemObjects.mercury:
                  return "Mercury";
                case xe.SolarSystemObjects.venus:
                  return "Venus";
                case xe.SolarSystemObjects.mars:
                  return "Mars";
                case xe.SolarSystemObjects.jupiter:
                  return "Jupiter";
                case xe.SolarSystemObjects.saturn:
                  return "Saturn";
                case xe.SolarSystemObjects.uranus:
                  return "Uranus";
                case xe.SolarSystemObjects.neptune:
                  return "Neptune";
                case xe.SolarSystemObjects.pluto:
                  return "Pluto";
                case xe.SolarSystemObjects.moon:
                  return "Moon";
                case xe.SolarSystemObjects.io:
                  return "Io";
                case xe.SolarSystemObjects.europa:
                  return "Europa";
                case xe.SolarSystemObjects.ganymede:
                  return "Ganymede";
                case xe.SolarSystemObjects.callisto:
                  return "Callisto";
                case xe.SolarSystemObjects.earth:
                  return "Earth";
                default:
                  return "";
              }
            }, $.updatePlanetLocations = function(Re) {
              if ($._jNow = D.SpaceTimeController.get_jNow(), Re && $.updateOrbits(0), $._planetDiameters == null && ($._planetDiameters = new Array(20), $._planetDiameters[0] = 9291568e-9, $._planetDiameters[1] = 325794793734425e-19, $._planetDiameters[2] = 808669220531394e-19, $._planetDiameters[3] = 453785605596396e-19, $._planetDiameters[4] = 954501e-9, $._planetDiameters[5] = 802173e-9, $._planetDiameters[6] = 339564e-9, $._planetDiameters[7] = 324825e-9, $._planetDiameters[8] = 152007379777805e-19, $._planetDiameters[9] = 232084653538149e-19, $._planetDiameters[10] = 243519298386342e-19, $._planetDiameters[11] = 208692629580609e-19, $._planetDiameters[12] = 351742670356556e-19, $._planetDiameters[13] = 322263666626559e-19, $._planetDiameters[14] = 243519298386342e-19, $._planetDiameters[15] = 208692629580609e-19, $._planetDiameters[16] = 351742670356556e-19, $._planetDiameters[17] = 322263666626559e-19, $._planetDiameters[18] = 0.018583136, $._planetDiameters[xe.SolarSystemObjects.earth] = 855626412117809e-19), $.planetColors == null) {
                var Ie = ze.Color.fromArgb(255, 255, 255, 221), O = ze.Color.fromArgb(255, 255, 68, 0);
                $.planetColors = new Array(20), $.planetColors[0] = ze.Colors.get_yellow(), $.planetColors[1] = ze.Colors.get_white(), $.planetColors[2] = Ie, $.planetColors[3] = O, $.planetColors[4] = ze.Color.fromArgb(255, 255, 165, 0), $.planetColors[5] = ze.Color.fromArgb(255, 184, 134, 11), $.planetColors[6] = ze.Color.fromArgb(255, 173, 216, 230), $.planetColors[7] = ze.Colors.get_blue(), $.planetColors[8] = ze.Colors.get_white(), $.planetColors[9] = ze.Colors.get_white(), $.planetColors[10] = ze.Colors.get_white(), $.planetColors[11] = ze.Colors.get_white(), $.planetColors[12] = ze.Colors.get_white(), $.planetColors[13] = ze.Colors.get_white(), $.planetColors[14] = ze.Colors.get_black(), $.planetColors[15] = ze.Colors.get_black(), $.planetColors[16] = ze.Colors.get_black(), $.planetColors[17] = ze.Colors.get_black(), $.planetColors[18] = ze.Colors.get_white(), $.planetColors[xe.SolarSystemObjects.earth] = ze.Color.fromArgb(255, 173, 216, 230);
              }
              if ($._planetTilts == null && ($._planetTilts = new Array(20), $._planetTilts[0] = 0, $._planetTilts[1] = 0.01, $._planetTilts[2] = 177.4, $._planetTilts[3] = 25.19, $._planetTilts[4] = 3.13, $._planetTilts[5] = 26.73, $._planetTilts[6] = 97.77, $._planetTilts[7] = 28.32, $._planetTilts[8] = 119.61, $._planetTilts[9] = 23.439, $._planetTilts[10] = 2.21, $._planetTilts[11] = 0, $._planetTilts[12] = -0.33, $._planetTilts[13] = 0, $._planetTilts[14] = 0, $._planetTilts[15] = 0, $._planetTilts[16] = 0, $._planetTilts[17] = 0, $._planetTilts[18] = 0, $._planetTilts[xe.SolarSystemObjects.earth] = 23.5), $._planetTilts[xe.SolarSystemObjects.earth] = $._obliquity / $.RC, $.planetRotationPeriod == null && ($.planetRotationPeriod = new Array(20), $.planetRotationPeriod[0] = 25.37995, $.planetRotationPeriod[1] = 58.6462, $.planetRotationPeriod[2] = -243.0187, $.planetRotationPeriod[3] = 1.02595675, $.planetRotationPeriod[4] = 0.41007, $.planetRotationPeriod[5] = 0.426, $.planetRotationPeriod[6] = -0.71833, $.planetRotationPeriod[7] = 0.67125, $.planetRotationPeriod[8] = -6.38718, $.planetRotationPeriod[9] = 27.3, $.planetRotationPeriod[10] = 1.769137786, $.planetRotationPeriod[11] = 3.551, $.planetRotationPeriod[12] = 7.155, $.planetRotationPeriod[13] = 16.69, $.planetRotationPeriod[14] = 0, $.planetRotationPeriod[15] = 0, $.planetRotationPeriod[16] = 0, $.planetRotationPeriod[17] = 0, $.planetRotationPeriod[18] = 0, $.planetRotationPeriod[xe.SolarSystemObjects.earth] = 0.99726968), $._planetScales == null && ($._planetScales = new Array(20)), $._planet3dLocations == null && ($._planet3dLocations = new Array(20)), Te.Settings.get_active().get_actualPlanetScale())
                $._planetScales[0] = 0.5, $._planetScales[1] = 0.25, $._planetScales[2] = 0.25, $._planetScales[3] = 0.25, $._planetScales[4] = 0.25, $._planetScales[5] = 0.5, $._planetScales[6] = 0.25, $._planetScales[7] = 0.25, $._planetScales[8] = 0.25, $._planetScales[9] = 0.25, $._planetScales[10] = 0.25, $._planetScales[11] = 0.25, $._planetScales[12] = 0.25, $._planetScales[13] = 0.25, $._planetScales[14] = 0.25, $._planetScales[15] = 0.25, $._planetScales[16] = 0.25, $._planetScales[17] = 0.25, $._planetScales[18] = 0.5, $._planetScales[xe.SolarSystemObjects.earth] = 0.25;
              else {
                for (var Ue = 0; Ue < 20; Ue++)
                  Ue < 10 ? $._planetScales[Ue] = 0.25 : $._planetScales[Ue] = 0.1;
                $._planetScales[xe.SolarSystemObjects.sun] = 0.5, $._planetScales[xe.SolarSystemObjects.saturn] = 0.5, $._planetScales[xe.SolarSystemObjects.sunEclipsed] = 0.5;
              }
              $._planetDrawOrder = {}, $._planetLocations = new Array(20);
              var $e = new t.Vector3d(), Ze = 0;
              {
                var Qe = Pe.AstroCalc.getPlanet($._jNow, Ze, Re ? 0 : D.SpaceTimeController.get_location().get_lat(), Re ? 0 : D.SpaceTimeController.get_location().get_lng(), Re ? -6378149 : D.SpaceTimeController.get_altitude());
                $e = Se.Coordinates.raDecTo3dAu(Qe.RA, Qe.dec, Qe.distance);
              }
              $._planet3dLocations[xe.SolarSystemObjects.earth] = t.Vector3d.create(-$e.x, -$e.y, -$e.z), $._planet3dLocations[xe.SolarSystemObjects.earth].rotateX($._obliquity);
              for (var Ue = 0; Ue < 18; Ue++) {
                if ($._planetLocations[Ue] = Pe.AstroCalc.getPlanet($._jNow, Ue, Re ? 0 : D.SpaceTimeController.get_location().get_lat(), Re ? 0 : D.SpaceTimeController.get_location().get_lng(), Re ? -6378149 : D.SpaceTimeController.get_altitude()), $._planet3dLocations[Ue] = Se.Coordinates.raDecTo3dAu($._planetLocations[Ue].RA, $._planetLocations[Ue].dec, $._planetLocations[Ue].distance), $._planet3dLocations[Ue].subtract($e), $._planet3dLocations[Ue].rotateX($._obliquity), Te.Settings.get_active().get_actualPlanetScale() && ($._planetScales[Ue] = 2 * Math.atan(0.5 * ($._planetDiameters[Ue] / $._planetLocations[Ue].distance)) / Math.PI * 180), Te.Settings.get_active().get_solarSystemScale() !== 1) {
                  var Ae = Ue;
                  switch (Ae) {
                    case xe.SolarSystemObjects.moon:
                      var Ne = $._planet3dLocations[xe.SolarSystemObjects.earth];
                      $._planet3dLocations[Ue].subtract(Ne), $._planet3dLocations[Ue].multiply(Te.Settings.get_active().get_solarSystemScale() / 2), $._planet3dLocations[Ue].add(Ne);
                      break;
                    case xe.SolarSystemObjects.io:
                    case xe.SolarSystemObjects.europa:
                    case xe.SolarSystemObjects.ganymede:
                    case xe.SolarSystemObjects.callisto:
                      var Ne = $._planet3dLocations[xe.SolarSystemObjects.jupiter];
                      $._planet3dLocations[Ue].subtract(Ne), $._planet3dLocations[Ue].multiply(Te.Settings.get_active().get_solarSystemScale()), $._planet3dLocations[Ue].add(Ne);
                      break;
                  }
                }
                for (var Be = -$._planetLocations[Ue].distance; s.ss.keyExists($._planetDrawOrder, Be); )
                  Be += 1e-10;
                $._planetDrawOrder[Be] = Ue;
              }
              $._planetLocations[xe.SolarSystemObjects.sunEclipsed] = $._planetLocations[xe.SolarSystemObjects.sun], $._planetScales[xe.SolarSystemObjects.sun] *= 2, $._planetScales[xe.SolarSystemObjects.sunEclipsed] = $._planetScales[xe.SolarSystemObjects.sun], $._planetScales[xe.SolarSystemObjects.saturn] = $._planetScales[xe.SolarSystemObjects.saturn] * 2, $._lastUpdate = D.SpaceTimeController.get_now();
            }, $.planetsReady = function() {
            }, $.updateOrbits = function(Re) {
              try {
                if ($._obliquity = Se.Coordinates.meanObliquityOfEcliptic(D.SpaceTimeController.get_jNow()) * $.RC, Re !== $._lastPlanetCenterID && ($._orbits = null), $._lastPlanetCenterID = Re, $._orbits == null && (Re < 0 ? $._eclipticTilt = t.Matrix3d.get_identity() : ($._eclipticTilt = t.Matrix3d.get_identity(), $._eclipticTilt = t.Matrix3d._rotationX($._obliquity)), $.planetOrbitalYears == null && ($.planetOrbitalYears = new Array(20), $.planetOrbitalYears[0] = 1, $.planetOrbitalYears[1] = 0.241, $.planetOrbitalYears[2] = 0.615, $.planetOrbitalYears[3] = 1.881, $.planetOrbitalYears[4] = 11.87, $.planetOrbitalYears[5] = 29.45, $.planetOrbitalYears[6] = 84.07, $.planetOrbitalYears[7] = 164.9, $.planetOrbitalYears[8] = 248.1, $.planetOrbitalYears[9] = 0.07474332648870637, $.planetOrbitalYears[10] = 0.04569204216290212, $.planetOrbitalYears[11] = 0.009722603696098562, $.planetOrbitalYears[12] = 0.019588098453114305, $.planetOrbitalYears[13] = 0.04569204216290212, $.planetOrbitalYears[xe.SolarSystemObjects.earth] = 1), !$.readOrbits())) {
                  $._orbits = new Array(20);
                  for (var Ie = 1; Ie < 20; Ie++)
                    if ($._orbits[Ie] = new Array($._orbitalSampleRate), Ie < 9 || Ie === xe.SolarSystemObjects.earth) {
                      for (var O = 0; O < $._orbitalSampleRate; O++) {
                        var Ue = Re, $e = $._jNow + $.planetOrbitalYears[Ie] * 365.25 / $._orbitalSampleRate * (O - $._orbitalSampleRate / 2), Ze = new t.Vector3d();
                        if (Ie === xe.SolarSystemObjects.moone ? Ue = -1 : Ie > 9 && Ie < 14 && (Ue = 4), Ue > -1) {
                          var Qe = Pe.AstroCalc.getPlanet($e, Ue, 0, 0, -6378149);
                          Ze = Se.Coordinates.raDecTo3dAu(Qe.RA, Qe.dec, Qe.distance);
                        }
                        if (Ie !== xe.SolarSystemObjects.earth) {
                          var Ae = Pe.AstroCalc.getPlanet($e, Ie, 0, 0, -6378149);
                          $._orbits[Ie][O] = Se.Coordinates.raDecTo3dAu(Ae.RA, Ae.dec, Ae.distance), $._orbits[Ie][O].subtract(Ze);
                        } else
                          $._orbits[Ie][O] = t.Vector3d.create(-Ze.x, -Ze.y, -Ze.z);
                        $._orbits[Ie][O].rotateX($._obliquity);
                      }
                      $._orbits[Ie][$._orbitalSampleRate - 1] = $._orbits[Ie][0];
                    }
                  $.dumpOrbitsFile();
                }
              } finally {
              }
            }, $.readOrbits = function() {
              return !1;
            }, $.dumpOrbitsFile = function() {
            }, $.drawPlanets = function(Re, Ie) {
              $._planetTextures == null && $._loadPlanetTextures();
              var O = $._geocentricElongation($._planetLocations[9].RA, $._planetLocations[9].dec, $._planetLocations[0].RA, $._planetLocations[0].dec);
              $._planetLocations[9].RA - $._planetLocations[0].RA, $._planetLocations[9].RA < $._planetLocations[0].RA, $._phaseAngle(O, $._planetLocations[9].distance, $._planetLocations[0].distance), $._positionAngle($._planetLocations[9].RA, $._planetLocations[9].dec, $._planetLocations[0].RA, $._planetLocations[0].dec);
              var Ue = Math.abs($._planetLocations[9].RA - $._planetLocations[0].RA) * 15 * Math.cos(Se.Coordinates.degreesToRadians($._planetLocations[0].dec)), $e = Math.abs($._planetLocations[9].dec - $._planetLocations[0].dec), Ze = Math.sqrt(Ue * Ue + $e * $e), Qe = 0, Ae = $._planetScales[9] / 2 - Ze;
              Math.min(32, s.ss.truncate(Ze * 32)), Ae > $._planetScales[0] / 4 && (Qe = Math.min(1, (Ae - $._planetScales[0] / 2) / 1e-3), $._drawPlanet(Re, 18, Qe));
              for (var Ne = s.ss.enumerate(s.ss.keys($._planetDrawOrder)); Ne.moveNext(); ) {
                var Be = Ne.current, Ge = $._planetDrawOrder[Be];
                $._drawPlanet(Re, Ge, 1);
              }
              return !0;
            }, $._loadPlanetTextures = function() {
              var Re = ke.URLHelpers.singleton.engineAssetUrl("");
              $._planetTextures = new Array(20), $._planetTextures[0] = k.Texture.fromUrl(Re + "sun.png"), $._planetTextures[1] = k.Texture.fromUrl(Re + "mercury.png"), $._planetTextures[2] = k.Texture.fromUrl(Re + "venus.png"), $._planetTextures[3] = k.Texture.fromUrl(Re + "mars.png"), $._planetTextures[4] = k.Texture.fromUrl(Re + "jupiter.png"), $._planetTextures[5] = k.Texture.fromUrl(Re + "saturn.png"), $._planetTextures[6] = k.Texture.fromUrl(Re + "uranus.png"), $._planetTextures[7] = k.Texture.fromUrl(Re + "neptune.png"), $._planetTextures[8] = k.Texture.fromUrl(Re + "pluto.png"), $._planetTextures[9] = k.Texture.fromUrl(Re + "moon.png"), $._planetTextures[10] = k.Texture.fromUrl(Re + "io.png"), $._planetTextures[11] = k.Texture.fromUrl(Re + "europa.png"), $._planetTextures[12] = k.Texture.fromUrl(Re + "ganymede.png"), $._planetTextures[13] = k.Texture.fromUrl(Re + "callisto.png"), $._planetTextures[14] = k.Texture.fromUrl(Re + "moonshadow.png"), $._planetTextures[15] = k.Texture.fromUrl(Re + "moonshadow.png"), $._planetTextures[16] = k.Texture.fromUrl(Re + "moonshadow.png"), $._planetTextures[17] = k.Texture.fromUrl(Re + "moonshadow.png"), $._planetTextures[18] = k.Texture.fromUrl(Re + "sunCorona.png"), $._planetTextures[xe.SolarSystemObjects.earth] = k.Texture.fromUrl(Re + "earth.png");
            }, $.getPlanetOrientationAtEpoch = function(Re) {
              var Ie = t.Matrix3d.get_identity(), O = 23.4392794;
              return Re === xe.SolarSystemObjects.earth ? Ie._multiply(t.Matrix3d._rotationX(O * $.RC)) : (Ie._multiply(t.Matrix3d._rotationX(-90 * $.RC)), Ie._multiply(t.Matrix3d._rotationZ((180 + $._planetAngles[Re].primeMeridian) * $.RC)), Ie._multiply(t.Matrix3d._rotationX((90 - $._planetAngles[Re].poleDec) * $.RC)), Ie._multiply(t.Matrix3d._rotationZ(($._planetAngles[Re].poleRa - 90) * $.RC)), Ie._multiply(t.Matrix3d._rotationX(O * $.RC)), Ie._multiply(t.Matrix3d._rotationX(90 * $.RC))), Ie;
            }, $.setupPlanetMatrix = function(Re, Ie, O, Ue) {
              var $e = Re.get_world().clone();
              if ($._setupMatrixForPlanetGeometry(Re, Ie, O, Ue), Ie === xe.SolarSystemObjects.sun) {
                var Ze = $.getAdjustedPlanetRadius(Ie);
                $e.scale(t.Vector3d.create(Ze, Ze, Ze));
                var Qe = t.Vector3d.subtractVectors($._planet3dLocations[Ie], O);
                $e._multiply(t.Matrix3d.translation(Qe)), Re.set_worldBaseNonRotating($e);
              }
            }, $._setupMatrixForPlanetGeometry = function(Re, Ie, O, Ue) {
              var $e = $.getAdjustedPlanetRadius(Ie), Ze = 0;
              Ie === xe.SolarSystemObjects.earth ? Ze = Math.PI + Se.Coordinates.mstFromUTC2(D.SpaceTimeController.get_now(), 0) / 180 * Math.PI : Ze = Math.PI + ($._jNow - 2451545) / $.planetRotationPeriod[Ie] * Math.PI * 2 % (Math.PI * 2), Ie === 9 && (Ze -= Math.PI / 2);
              var Qe = Re.get_world().clone(), Ae = Re.get_world().clone(), Ne = t.Vector3d.subtractVectors($._planet3dLocations[Ie], O), Be = $.getPlanetOrientationAtEpoch(Ie);
              return Qe.scale(t.Vector3d.create($e, $e, $e)), Qe._multiply(t.Matrix3d._rotationY(-Ze)), Qe._multiply(Be), Ie === Re.viewCamera.target && ($.earthMatrix = t.Matrix3d.get_identity(), $.earthMatrix._multiply(t.Matrix3d._rotationY(-Ze)), $.earthMatrix._multiply(Be), $.earthMatrixInv = $.earthMatrix.clone(), $.earthMatrixInv.invert()), Qe._multiply(t.Matrix3d.translation(Ne)), Re.set_world(Qe), Re.set_worldBase(Re.get_world().clone()), Re.set_nominalRadius($.getPlanetRadiusInMeters(Ie)), Ue && Re.makeFrustum(), Ae.scale(t.Vector3d.create($e, $e, $e)), Ae._multiply(Be), Ae._multiply(t.Matrix3d.translation(Ne)), Re.set_worldBaseNonRotating(Ae), Ze;
            }, $.getPlanetPositionDirect = function(Re, Ie) {
              var O = 0, Ue = 0, $e = 0;
              switch (Re) {
                case 1:
                  O = o.CAAMercury.eclipticLongitude(Ie), Ue = o.CAAMercury.eclipticLatitude(Ie), $e = o.CAAMercury.radiusVector(Ie);
                  break;
                case 2:
                  O = c.CAAVenus.eclipticLongitude(Ie), Ue = c.CAAVenus.eclipticLatitude(Ie), $e = c.CAAVenus.radiusVector(Ie);
                  break;
                case xe.SolarSystemObjects.earth:
                  O = l.CAAEarth.eclipticLongitude(Ie), Ue = l.CAAEarth.eclipticLatitude(Ie), $e = l.CAAEarth.radiusVector(Ie);
                  break;
                case 3:
                  O = _.CAAMars.eclipticLongitude(Ie), Ue = _.CAAMars.eclipticLatitude(Ie), $e = _.CAAMars.radiusVector(Ie);
                  break;
                case 4:
                  O = u.CAAJupiter.eclipticLongitude(Ie), Ue = u.CAAJupiter.eclipticLatitude(Ie), $e = u.CAAJupiter.radiusVector(Ie);
                  break;
                case 5:
                  O = y.CAASaturn.eclipticLongitude(Ie), Ue = y.CAASaturn.eclipticLatitude(Ie), $e = y.CAASaturn.radiusVector(Ie);
                  break;
                case 6:
                  O = g.CAAUranus.eclipticLongitude(Ie), Ue = g.CAAUranus.eclipticLatitude(Ie), $e = g.CAAUranus.radiusVector(Ie);
                  break;
                case 7:
                  O = Ee.CAANeptune.eclipticLongitude(Ie), Ue = Ee.CAANeptune.eclipticLatitude(Ie), $e = Ee.CAANeptune.radiusVector(Ie);
                  break;
                case 8:
                  O = Ve.CAAPluto.eclipticLongitude(Ie), Ue = Ve.CAAPluto.eclipticLatitude(Ie), $e = Ve.CAAPluto.radiusVector(Ie);
                  break;
                case 9:
                  O = B.CAAMoon.eclipticLongitude(Ie), Ue = B.CAAMoon.eclipticLatitude(Ie), $e = B.CAAMoon.radiusVector(Ie) / 149598e3;
                  break;
                case 10:
                  var Ze = Me.GM.calculate(Ie), Qe = Ze.satellite1.eclipticRectangularCoordinates;
                  return t.Vector3d.create(Qe.x, Qe.z, Qe.y);
                case 11:
                  var Ze = Me.GM.calculate(Ie), Qe = Ze.satellite2.eclipticRectangularCoordinates;
                  return t.Vector3d.create(Qe.x, Qe.z, Qe.y);
                case 12:
                  var Ze = Me.GM.calculate(Ie), Qe = Ze.satellite3.eclipticRectangularCoordinates;
                  return t.Vector3d.create(Qe.x, Qe.z, Qe.y);
                case 13:
                  var Ze = Me.GM.calculate(Ie), Qe = Ze.satellite4.eclipticRectangularCoordinates;
                  return t.Vector3d.create(Qe.x, Qe.z, Qe.y);
              }
              O = Se.Coordinates.degreesToRadians(O), Ue = Se.Coordinates.degreesToRadians(Ue);
              var Ae = t.Vector3d.create(Math.cos(O) * Math.cos(Ue) * $e, Math.sin(O) * Math.cos(Ue) * $e, Math.sin(Ue) * $e), Ne = (Se.Coordinates.meanObliquityOfEcliptic(Ie) - Se.Coordinates.meanObliquityOfEcliptic(2451545)) * $.RC;
              return Ae.rotateX(Ne), t.Vector3d.create(Ae.x, Ae.z, Ae.y);
            }, $._stateVectorToKeplerian = function(Re, Ie, O) {
              var Ue = t.Vector3d.scale(Re, 149598e3), $e = t.Vector3d.scale(t.Vector3d.scale(Ie, 1 / 86400), 149598e3), Ze = Ue.length(), Qe = $e.length(), Ae = 1 / (2 / Ze - Qe * Qe / O), Ne = t.Vector3d.cross(Ue, $e), Be = t.Vector3d.subtractVectors(t.Vector3d.scale(t.Vector3d.cross($e, Ne), 1 / O), t.Vector3d.scale(Ue, 1 / Ze)), Ge = Be.length();
              Ne.normalize(), Be.normalize();
              var Ye = t.Vector3d.cross(Ne, Be);
              Ue.normalize();
              var je = t.Vector3d.dot(Be, Ue), ht = t.Vector3d.dot(Ye, Ue), qe = Math.atan2(Math.sqrt(1 - Ge * Ge) * ht, Ge + je), lt = new Fe();
              return lt.orientation = t.Matrix3d.create(Be.x, Be.y, Be.z, 0, Ye.x, Ye.y, Ye.z, 0, Ne.x, Ne.y, Ne.z, 0, 0, 0, 0, 1), lt.a = Ae, lt.e = Ge, lt.ea = qe, lt;
            }, $.getAdjustedPlanetRadius = function(Re) {
              Re > $._planetDiameters.length - 1 && (Re = xe.SolarSystemObjects.earth);
              var Ie = $._planetDiameters[Re], O = Ie / 2;
              return Re ? O = O * (1 + 3 * (Te.Settings.get_active().get_solarSystemScale() - 1)) : O = O * (1 + 0.3 * (Te.Settings.get_active().get_solarSystemScale() - 1)), O;
            }, $.getPlanetRadiusInMeters = function(Re) {
              Re > $._planetDiameters.length - 1 && (Re = xe.SolarSystemObjects.earth);
              var Ie = $._planetDiameters[Re];
              return Ie / 2 * 149598e3 * 1e3;
            }, $._drawPlanet = function(Re, Ie, O) {
              var Ue = $._planetLocations[Ie];
              if (Ie < 14 && $._planetScales[Ie] < Re.viewCamera.zoom / 6 / 400) {
                if (Ie < 10 || Ie < 14 && $._planetScales[Ie] > Re.viewCamera.zoom / 6 / 6400) {
                  var $e = Se.Coordinates.raDecTo3d(Ue.RA, Ue.dec);
                  Le.BasePlanets.drawPointPlanet(Re, $e, 3, $.planetColors[Ie], !1);
                }
                return;
              }
              var Ze = null;
              if (Ie < 10 || Ie === 18)
                Ze = $._planetTextures[Ie];
              else if (Ie < 14)
                $._planetLocations[Ie].eclipsed ? Ze = $._planetTextures[15] : Te.Settings.get_active().get_showMoonsAsPointSource() ? Ze = $._planetTextures[14] : Ze = $._planetTextures[Ie];
              else {
                if (!$._planetLocations[Ie].shadow)
                  return;
                Ze = $._planetTextures[15];
              }
              if (Re.gl != null) {
                if ($._planetPoints == null) {
                  $._planetPoints = new Array(4);
                  for (var Qe = 0; Qe < 4; Qe++)
                    $._planetPoints[Qe] = new t.PositionColoredTextured();
                }
                var Ae = $._planetScales[Ie] / 2, Ne = Ae / Math.cos(Ue.dec / 180 * Math.PI);
                $._planetPoints[0].position = Se.Coordinates.raDecTo3dAu(Ue.RA - Ne / 15, Ue.dec + Ae, 1), $._planetPoints[0].tu = 0, $._planetPoints[0].tv = 1, $._planetPoints[0].color = ze.Colors.get_white(), $._planetPoints[1].position = Se.Coordinates.raDecTo3dAu(Ue.RA - Ne / 15, Ue.dec - Ae, 1), $._planetPoints[1].tu = 0, $._planetPoints[1].tv = 0, $._planetPoints[1].color = ze.Colors.get_white(), $._planetPoints[2].position = Se.Coordinates.raDecTo3dAu(Ue.RA + Ne / 15, Ue.dec + Ae, 1), $._planetPoints[2].tu = 1, $._planetPoints[2].tv = 1, $._planetPoints[2].color = ze.Colors.get_white(), $._planetPoints[3].position = Se.Coordinates.raDecTo3dAu(Ue.RA + Ne / 15, Ue.dec - Ae, 1), $._planetPoints[3].tu = 1, $._planetPoints[3].tv = 0, $._planetPoints[3].color = ze.Colors.get_white(), $._planetSprite.draw(Re, $._planetPoints, 4, Ze, !0, 1);
              } else {
                var Be = Se.Coordinates.raDecTo3d(Ue.RA, Ue.dec), Ge = $._planetScales[Ie] / (Re.get_fovScale() / 3600) / 2, Ye = Re.WVP.transform(Be);
                if (Ye.z < 0 || t.Vector3d.dot(Re.get_viewPoint(), Be) < 0.55)
                  return;
                var je = Re.device;
                je.save(), je.globalAlpha = O, je.beginPath(), je.arc(Ye.x, Ye.y, Ge, 0, Math.PI * 2, !0), je.lineWidth = 0, je.closePath(), je.clip(), je.drawImage(Ze.imageElement, Ye.x - Ge, Ye.y - Ge, Ge * 2, Ge * 2), je.globalAlpha = 1, je.restore();
              }
            }, $._drawPlanetPhase = function(Re, Ie, O, Ue, $e) {
            }, $._geocentricElongation = function(Re, Ie, O, Ue) {
              return Re = Se.Coordinates.degreesToRadians(Re * 15), O = Se.Coordinates.degreesToRadians(O * 15), Ie = Se.Coordinates.degreesToRadians(Ie), Ue = Se.Coordinates.degreesToRadians(Ue), Se.Coordinates.radiansToDegrees(Math.acos(Math.sin(Ue) * Math.sin(Ie) + Math.cos(Ue) * Math.cos(Ie) * Math.cos(O - Re)));
            }, $._phaseAngle = function(Re, Ie, O) {
              return Re = Se.Coordinates.degreesToRadians(Re), Se.Coordinates.mapTo0To360Range(Se.Coordinates.radiansToDegrees(Math.atan2(O * Math.sin(Re), Ie - O * Math.cos(Re))));
            }, $._positionAngle = function(Re, Ie, O, Ue) {
              return Re = Se.Coordinates.hoursToRadians(Re), O = Se.Coordinates.hoursToRadians(O), Ie = Se.Coordinates.degreesToRadians(Ie), Ue = Se.Coordinates.degreesToRadians(Ue), Se.Coordinates.mapTo0To360Range(Se.Coordinates.radiansToDegrees(Math.atan2(Math.cos(Ie) * Math.sin(Re - O), Math.sin(Ie) * Math.cos(Ue) - Math.cos(Ie) * Math.sin(Ue) * Math.cos(Re - O))));
            };
            var De = {};
            (0, a.registerType)("Planets", [$, De, null]);
          }
        ),
        /***/
        "./esm/planets_3d.js": (
          /*!***************************!*\
            !*** ./esm/planets_3d.js ***!
            \***************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Planets3d: () => (
                /* binding */
                Se
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), o = n(
              /*! ./graphics/gl_buffers.js */
              "./esm/graphics/gl_buffers.js"
            ), c = n(
              /*! ./graphics/primitives3d.js */
              "./esm/graphics/primitives3d.js"
            ), _ = n(
              /*! ./graphics/texture.js */
              "./esm/graphics/texture.js"
            ), u = n(
              /*! ./graphics/shaders.js */
              "./esm/graphics/shaders.js"
            ), y = n(
              /*! ./baseutil.js */
              "./esm/baseutil.js"
            ), g = n(
              /*! ./baseplanets.js */
              "./esm/baseplanets.js"
            ), Ee = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), Ve = n(
              /*! ./color.js */
              "./esm/color.js"
            ), Me = n(
              /*! ./planets.js */
              "./esm/planets.js"
            ), B = n(
              /*! ./render_triangle.js */
              "./esm/render_triangle.js"
            ), Pe = n(
              /*! ./settings.js */
              "./esm/settings.js"
            ), k = n(
              /*! ./triangle.js */
              "./esm/triangle.js"
            ), b = n(
              /*! ./ui_tools.js */
              "./esm/ui_tools.js"
            ), Le = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), xe = n(
              /*! ./layers/orbit.js */
              "./esm/layers/orbit.js"
            ), ze = n(
              /*! ./layers/layer_manager.js */
              "./esm/layers/layer_manager.js"
            );
            function Se() {
            }
            Se._ringsTriangleLists = new Array(2), Se._ringImage = null, Se._triangleCountRings = 194, Se._ringsVertexBuffer = null, Se.getImageSetNameNameFrom3dId = function(Te) {
              switch (Te) {
                case 0:
                  return "Sun";
                case 1:
                  return "Mercury";
                case 2:
                  return "Venus";
                case 3:
                  return "Visible Imagery";
                case 4:
                  return "Jupiter";
                case 5:
                  return "Saturn";
                case 6:
                  return "Uranus";
                case 7:
                  return "Neptune";
                case 8:
                  return "Pluto";
                case 9:
                  return "Moon";
                case 10:
                  return "Io (Jupiter)";
                case 11:
                  return "Europa (Jupiter)";
                case 12:
                  return "Ganymede (Jupiter)";
                case 13:
                  return "Callisto (Jupiter)";
                case 19:
                  return "Bing Maps Aerial";
                default:
                  return "";
              }
            }, Se.initPlanetResources = function(Te) {
            }, Se.drawPlanets3D = function(Te, D, ke) {
              Se.initPlanetResources(Te);
              var Fe = b.UiTools.solarSystemToMeters(Te.get_solarSystemCameraDistance());
              Math.min(1, Math.max(y.Util.log10(Fe) - 7.3, 0));
              var He = Math.min(1, Math.max(y.Util.log10(Fe) - 8.6, 0));
              if (Pe.Settings.get_active().get_solarSystemOrbits() && He > 0) {
                for (var We = 1; We < 10; We++) {
                  var Ke = We;
                  We === 9 && (Ke = 19);
                  var $ = Math.atan2(Me.Planets._planet3dLocations[Ke].z, Me.Planets._planet3dLocations[Ke].x);
                  Se._drawSingleOrbit(Te, Me.Planets.planetColors[Ke], Ke, ke, $, Me.Planets._planet3dLocations[Ke], He);
                }
                var De = 9;
                Se._drawSingleOrbit(Te, Me.Planets.planetColors[De], De, ke, 0, Me.Planets._planet3dLocations[De], He);
              }
              s.ss.clearKeys(Me.Planets._drawOrder);
              for (var Re = Te.cameraPosition.copy(), Ie = 0; Ie < 14; Ie++)
                if (!(Pe.Settings.get_active().get_solarSystemLighting() && Me.Planets._planetLocations[Ie].eclipsed)) {
                  var O = t.Vector3d.subtractVectors(Re, t.Vector3d.subtractVectors(Me.Planets._planet3dLocations[Ie], ke));
                  s.ss.keyExists(Me.Planets._drawOrder, O.length()) || (Me.Planets._drawOrder[O.length()] = Ie);
                }
              var Ue = t.Vector3d.subtractVectors(Re, t.Vector3d.subtractVectors(Me.Planets._planet3dLocations[19], ke));
              s.ss.keyExists(Me.Planets._drawOrder, Ue.length()) || (Me.Planets._drawOrder[Ue.length()] = 19);
              for (var $e = s.ss.enumerate(s.ss.keys(Me.Planets._drawOrder)); $e.moveNext(); ) {
                var Ze = $e.current, Ie = Me.Planets._drawOrder[Ze];
                Se._drawPlanet3d(Te, Ie, ke);
              }
              return !0;
            }, Se._drawSingleOrbit = function(Te, D, ke, Fe, He, We, Ke) {
              const $ = 1327124400188e-1, De = 398600.44189, Re = 4902.7779, Ie = 126686534;
              if (!(Ke < 0.01))
                if (Te.gl == null) {
                  var O = Me.Planets._orbitalSampleRate, Ue = !1;
                  Te.get_viewPoint();
                  var $e = Te.device;
                  $e.save(), $e.strokeStyle = D.toString(), $e.lineWidth = 2, $e.globalAlpha = 1;
                  for (var Ze = new t.Vector3d(), Qe = new t.Vector3d(), Ae = new t.Vector3d(), Ne = !0, Be = t.Matrix3d.translation(t.Vector3d.negate(Fe)), Ge = t.Matrix3d.multiplyMatrix(Be, Te.WVP), Ye = t.Matrix3d.multiplyMatrix(Be, Te.WV), je = 0; je < O; je++) {
                    var ht = Me.Planets._orbits[ke][je], qe = (Math.atan2(Me.Planets._orbits[ke][je].z, Me.Planets._orbits[ke][je].x) + Math.PI * 2 - He) % (Math.PI * 2), lt = s.ss.truncate(qe / (Math.PI * 2) * 255), ft = lt / 255;
                    lt < 2 && !Ue && (ht = We, ft = 1), Qe = Ye.transform(ht), Ze = Ge.transform(ht), Qe.z > 0 && (Ne ? Ne = !1 : ($e.beginPath(), $e.globalAlpha = ft * Ke, $e.moveTo(Ae.x, Ae.y), $e.lineTo(Ze.x, Ze.y), $e.stroke())), Ae = Ze;
                  }
                  $e.restore();
                } else if (ke !== 9) {
                  var O = Me.Planets._orbitalSampleRate, Ue = !1;
                  Te.get_viewPoint();
                  for (var Ze = new t.Vector3d(), Qe = new t.Vector3d(), Ae = new t.Vector3d(), _t = new Ve.Color(), Ne = !0, St = new c.OrbitLineList(), je = 0; je < O; je++) {
                    var ht = Me.Planets._orbits[ke][je].copy(), qe = (Math.atan2(ht.z, ht.x) + Math.PI * 2 - He) % (Math.PI * 2), lt = s.ss.truncate(qe / (Math.PI * 2) * 255), ft = lt / 255, yt = Ve.Color.fromArgb(lt, D.r, D.g, D.b);
                    lt < 2 && !Ue && !Ne && (ht = t.Vector3d.subtractVectors(We, Fe), ft = 1, lt = 255, yt.a = 255, _t.a = 255, St.addLine(Ae, ht.copy(), _t._clone(), yt._clone()), _t.a = 0, yt.a = 0, ht = Me.Planets._orbits[ke][je].copy(), Ue = !0), ht = t.Vector3d.subtractVectors(ht, Fe), Ne ? Ne = !1 : St.addLine(Ae, ht, _t, yt), Ae = ht, _t = yt._clone();
                  }
                  St.drawLines(Te, 1, Ve.Colors.get_white()), St.clear();
                } else {
                  var Ct = 0;
                  switch (ke) {
                    case 9:
                      Ct = De + Re;
                      break;
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                      Ct = Ie;
                      break;
                    default:
                      Ct = $;
                      break;
                  }
                  var Lt = 1 / 1440 * 0.1, Vt = Me.Planets.getPlanetPositionDirect(ke, Me.Planets._jNow), Tt = Me.Planets.getPlanetPositionDirect(ke, Me.Planets._jNow - Lt), xt = t.Vector3d.scale(t.Vector3d.subtractVectors(Vt, Tt), 1 / Lt), Ot = Me.Planets._stateVectorToKeplerian(Vt, xt, Ct);
                  Se._drawSingleOrbitElements(Te, D, ke, Fe, He, We, Ot);
                }
            }, Se._drawSingleOrbitElements = function(Te, D, ke, Fe, He, We, Ke) {
              var $;
              switch (ke) {
                case 9:
                  Pe.Settings.get_active().get_solarSystemScale() > 1 ? $ = Pe.Settings.get_active().get_solarSystemScale() / 2 : $ = 1;
                  break;
                case 10:
                case 11:
                case 12:
                case 13:
                  $ = Pe.Settings.get_active().get_solarSystemScale();
                  break;
                default:
                  $ = 1;
                  break;
              }
              var De = t.Vector3d.negate(Fe);
              ke === 9 ? De.add(Me.Planets._planet3dLocations[19]) : (ke === 10 || ke === 11 || ke === 12 || ke === 13) && De.add(Me.Planets._planet3dLocations[4]);
              var Re = t.Vector3d.subtractVectors(We, Fe), Ie = t.Matrix3d.multiplyMatrix(t.Matrix3d.multiplyMatrix(Ke.orientation, t.Matrix3d.translation(De)), Te.get_world());
              xe.EllipseRenderer.drawEllipseWithPosition(Te, Ke.a / 149598e3 * $, Ke.e, Ke.ea, D, Ie, Re);
            }, Se.isPlanetInFrustum = function(Te, D) {
              var ke = Te.get_frustum();
              t.Vector3d.create(0, 0, 0);
              for (var Fe = new t.Vector4d(0, 0, 0, 1), He = 0; He < 6; He++)
                if (ke[He].dot(Fe) + D < 0)
                  return !1;
              return !0;
            }, Se._drawPlanet3d = function(Te, D, ke) {
              D === 0 ? u.TileShader.minLightingBrightness = 1 : (u.TileShader.minLightingBrightness = 0.025, D === 19 ? u.TileShader.atmosphereColor = Ve.Color.fromArgb(255, 65, 157, 217) : u.TileShader.atmosphereColor = Ve.Color.fromArgb(0, 0, 0, 0));
              var Fe = Te.get_world(), He = Te.get_worldBase(), We = Te.get_worldBaseNonRotating(), Ke = Me.Planets.getAdjustedPlanetRadius(D);
              Me.Planets.setupPlanetMatrix(Te, D, ke, !0);
              var $ = 1;
              if (D === 5 && ($ = 3), Se.isPlanetInFrustum(Te, $)) {
                Te.get_world(), Te.get_worldBase(), Te.get_worldBaseNonRotating();
                var De = Me.Planets._planet3dLocations[0].copy(), Re = Me.Planets._planet3dLocations[D].copy();
                De = Fe.transform(De), Re = Fe.transform(Re), Te.set_world(Fe), Te.set_worldBase(He), Te.set_worldBaseNonRotating(We), Me.Planets._setupMatrixForPlanetGeometry(Te, D, ke, !0);
                var Ie = t.Vector3d.subtractVectors(De, Re);
                Ie.normalize(), Te.set_sunPosition(Ie), u.TileShader.sunPosition = t.Vector3d.subtractVectors(Me.Planets._planet3dLocations[0], Re);
                var O = t.Vector3d.subtractVectors(Me.Planets._planet3dLocations[D], ke);
                O.subtract(Te.cameraPosition);
                var Ue = O.length(), $e = 2 * Math.atan(0.5 * (Ke / Ue)) / Math.PI * 180, Ze = 0;
                if ($e > 10.5 ? Ze = 0 : $e > 3.9 ? Ze = 1 : $e > 0.72 ? Ze = 2 : $e > 0.05 ? Ze = 3 : Ze = 4, D === 19 && Ze < 2 && Pe.Settings.get_active().get_solarSystemScale() * 1e-5, Ze < 4) {
                  var Qe = Te.lighting;
                  D === 5 && Te.gl == null && (Te.lighting = !1, Se.drawSaturnsRings(Te, !1, Ue), Te.lighting = Qe), D || (Te.lighting = !1), Se._drawSphere(Te, D), D === 5 && (Te.gl == null ? (Te.lighting = !1, Se.drawSaturnsRings(Te, !0, Ue)) : (Te.lighting = !1, Se._drawRings(Te), Te.lighting = Qe)), Te.lighting = Qe;
                } else if (!D)
                  g.BasePlanets.drawPointPlanet(Te, new t.Vector3d(), 10 * Me.Planets._planetDiameters[D], Me.Planets.planetColors[D], !0);
                else if (D < 9 || D === 19) {
                  var Ae = 800 * Me.Planets._planetDiameters[D];
                  g.BasePlanets.drawPointPlanet(Te, new t.Vector3d(), Math.max(0.05, Math.min(0.1, Ae)), Me.Planets.planetColors[D], !0);
                } else if ($e > 2e-3) {
                  var Ae = 800 * Me.Planets._planetDiameters[D];
                  g.BasePlanets.drawPointPlanet(Te, new t.Vector3d(), Math.max(0.05, Math.min(0.1, Ae)), Me.Planets.planetColors[D], !0);
                }
              }
              ze.LayerManager._draw(Te, 1, !1, Me.Planets.getNameFrom3dId(D), !0, !1), Te.set_world(Fe), Te.set_worldBase(He), Te.set_worldBaseNonRotating(We);
            }, Se.drawSaturnsRings = function(Te, D, ke) {
              if (Se._ringsTriangleLists[0] == null) {
                Se._ringImage = document.createElement("img");
                var Fe = Se._ringImage;
                Fe.crossOrigin = "anonymous", Se._ringImage.src = Le.URLHelpers.singleton.engineAssetUrl("saturnringsshadow.png"), Se._ringsTriangleLists[0] = [], Se._ringsTriangleLists[1] = [];
                var He = 2.25, We = t.Vector3d.create(-He, 0, -He), Ke = t.Vector3d.create(He, 0, -He), $ = t.Vector3d.create(-He, 0, He), De = t.Vector3d.create(He, 0, He);
                t.Vector3d.create(0, 0, 0), t.Vector3d.create(-He, 0, 0), t.Vector3d.create(0, 0, -He), t.Vector3d.create(0, 0, He), t.Vector3d.create(He, 0, 0);
                var Re = 6, Ie;
                Ie = [];
                var O = 1024, Ue = 1024;
                Ie.push(t.PositionTexture.createPosSize(We, 0, 0, O, Ue)), Ie.push(t.PositionTexture.createPosSize(Ke, 1, 0, O, Ue)), Ie.push(t.PositionTexture.createPosSize($, 0, 1, O, Ue)), Ie.push(t.PositionTexture.createPosSize(De, 1, 1, O, Ue));
                var $e = [];
                $e.push(k.Triangle.create(0, 2, 1)), $e.push(k.Triangle.create(2, 3, 1));
                for (var Ze = 5; Ze-- > 1; ) {
                  for (var Qe = [], Ae = s.ss.enumerate($e); Ae.moveNext(); ) {
                    var Ne = Ae.current;
                    Ne.subDivideNoNormalize(Qe, Ie);
                  }
                  $e = Qe;
                }
                for (var Be = 0.6 / (O / 256), Ge = s.ss.enumerate($e); Ge.moveNext(); ) {
                  var Ne = Ge.current, Ye = Ie[Ne.a], je = Ie[Ne.b], ht = Ie[Ne.c];
                  Se._ringsTriangleLists[0].push(B.RenderTriangle.createWithMiter(Ye, je, ht, Se._ringImage, Re, Be));
                }
              }
              if (Te.gl == null) {
                Te.cameraPosition;
                var qe = new t.Vector3d(), lt = t.Matrix3d.multiplyMatrix(t.Matrix3d._rotationY(Math.atan2(Te.get_sunPosition().x, Te.get_sunPosition().z)), Te.get_worldBaseNonRotating()), ft = t.Matrix3d.multiplyMatrix(lt, Te.get_view()), _t = t.Matrix3d.multiplyMatrix(ft, Te.get_projection()), O = Te.width, Ue = Te.height;
                _t.scale(t.Vector3d.create(O / 2, -Ue / 2, 1)), _t.translate(t.Vector3d.create(O / 2, Ue / 2, 0));
                for (var St = 0, yt = 0; yt < 2; yt++) {
                  for (var Ct = s.ss.enumerate(Se._ringsTriangleLists[0]); Ct.moveNext(); ) {
                    var Ne = Ct.current;
                    qe = ft.transform(Ne.a.position), St = qe.length();
                    var Lt = St > ke;
                    D && (Lt = !Lt), Lt && (Ne.opacity = 1, Ne.draw(Te.device, _t));
                  }
                  B.RenderTriangle.cullInside = !B.RenderTriangle.cullInside;
                }
              }
            }, Se._drawRings = function(Te) {
              Se._initRings(), u.TileShader.use(Te, Se._ringsVertexBuffer.vertexBuffer, null, Me.Planets._ringsTexture.texture2d, 1, !1, t.Vector3d.zero), Te.gl.drawArrays(l.WEBGL.TRIANGLE_STRIP, 0, Se._triangleCountRings);
            }, Se._initRings = function() {
              if (Se._ringsVertexBuffer == null) {
                Me.Planets._ringsTexture = _.Texture.fromUrl(Le.URLHelpers.singleton.engineAssetUrl("saturnringsstrip.png"));
                var Te = 1.113, D = 2.25;
                Se._ringsVertexBuffer = new o.PositionTextureVertexBuffer(386), Se._triangleCountRings = 386;
                for (var ke = Se._ringsVertexBuffer.lock(), Fe = Math.PI * 2 / 192, He = 0, We = 0; We <= 192; We += 2) {
                  var Ke = We * Fe, $ = (We + 1) * Fe;
                  ke[He] = new t.PositionTexture(), ke[He].position = t.Vector3d.create(Math.cos(Ke) * Te, 0, Math.sin(Ke) * Te), ke[He].tu = 1, ke[He].tv = 0, He++, ke[He] = new t.PositionTexture(), ke[He].position = t.Vector3d.create(Math.cos(Ke) * D, 0, Math.sin(Ke) * D), ke[He].tu = 0, ke[He].tv = 0, He++, ke[He] = new t.PositionTexture(), ke[He].position = t.Vector3d.create(Math.cos($) * Te, 0, Math.sin($) * Te), ke[He].tu = 1, ke[He].tv = 1, He++, ke[He] = new t.PositionTexture(), ke[He].position = t.Vector3d.create(Math.cos($) * D, 0, Math.sin($) * D), ke[He].tu = 0, ke[He].tv = 1, He++;
                }
                Se._ringsVertexBuffer.unlock();
              }
            }, Se._drawSphere = function(Te, D) {
              var ke = Se.getImageSetNameNameFrom3dId(D), Fe = Ee.globalWWTControl.getImagesetByName(ke);
              if (Fe == null && (Fe = Ee.globalWWTControl.getImagesetByName("Bing Maps Aerial")), Fe != null) {
                Te.drawImageSet(Fe, 100);
                return;
              }
            }, (0, a.registerType)("Planets3d", [Se, {}, null]);
          }
        ),
        /***/
        "./esm/plot_tile.js": (
          /*!**************************!*\
            !*** ./esm/plot_tile.js ***!
            \**************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              PlotTile: () => (
                /* binding */
                Ee
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ./baseplanets.js */
              "./esm/baseplanets.js"
            ), c = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), _ = n(
              /*! ./star.js */
              "./esm/star.js"
            ), u = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), y = n(
              /*! ./web_file.js */
              "./esm/web_file.js"
            ), g = n(
              /*! ./tile.js */
              "./esm/tile.js"
            );
            function Ee() {
              this._topDown$1 = !0, this.backslash = !1, this._vertexList$1 = null, this._childTriangleList$1 = null, this._stars$1 = [], this._subDivisionLevel$1 = 4, this._subDivided$1 = !1, g.Tile.call(this);
            }
            Ee.create = function(Me, B, Pe, k, b) {
              var Le = new Ee();
              return Le.parent = b, Le.level = Me, Le.tileX = B, Le.tileY = Pe, Le.dataset = k, Le._topDown$1 = !k.get_bottomsUp(), Le.tileX !== B && alert("bad"), k.get_meanRadius() ? Le.set__demScaleFactor(k.get_meanRadius()) : k.get_dataSetType() ? Le.set__demScaleFactor(3396010) : Le.set__demScaleFactor(6371e3), Le.computeBoundingSphere(), Le;
            };
            var Ve = {
              computeBoundingSphere: function() {
                this._initializeGrids$1(), this.topLeft = this.bounds[0 + 3 * 0].position.copy(), this.bottomRight = this.bounds[2 + 3 * 2].position.copy(), this.topRight = this.bounds[2 + 3 * 0].position.copy(), this.bottomLeft = this.bounds[0 + 3 * 2].position.copy(), this.calcSphere();
              },
              renderPart: function(Me, B, Pe, k) {
                if (Me.gl == null) {
                  if (!B)
                    for (var b = s.ss.enumerate(this._stars$1); b.moveNext(); ) {
                      var Le = b.current, xe = 25 / Math.pow(1.6, Le.magnitude);
                      o.BasePlanets.drawPointPlanet(Me, Le.position, xe, Le.col, !1);
                    }
                }
              },
              requestImage: function() {
                !this.downloading && !this.readyToRender && (this.downloading = !0, this._webFile$1 = new y.WebFile(u.URLHelpers.singleton.rewrite(this.get_URL(), 0)), this._webFile$1.onStateChange = s.ss.bind("fileStateChange", this), this._webFile$1.send());
              },
              fileStateChange: function() {
                this._webFile$1.get_state() === 2 ? (this.downloading = !1, this.readyToRender = !1, this.errored = !0, this.requestPending = !1, (0, t.tileCacheRemoveFromQueue)(this.get_key(), !0)) : this._webFile$1.get_state() === 1 && (this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = this.texReady && (this.demReady || !this.demTile), this.requestPending = !1, (0, t.tileCacheRemoveFromQueue)(this.get_key(), !0), this._loadData$1(this._webFile$1.getText()));
              },
              _loadData$1: function(Me) {
                for (var B = s.ss.replaceString(Me, `\r
`, `
`).split(`
`), Pe = !0, k = null, b = s.ss.enumerate(B); b.moveNext(); ) {
                  var Le = b.current;
                  if (Pe) {
                    Pe = !1;
                    continue;
                  }
                  s.ss.trim(Le).length > 5 && (k = new _.Star(Le), k.position = c.Coordinates.raDecTo3dAu(k.RA, k.dec, 1), this._stars$1.push(k));
                }
              },
              isPointInTile: function(Me, B) {
                if (!this.level)
                  return !0;
                if (this.level === 1)
                  return B >= 0 && B <= 90 && !this.tileX && this.tileY === 1 || B > 90 && B <= 180 && this.tileX === 1 && this.tileY === 1 || B < 0 && B >= -90 && !this.tileX && !this.tileY || B < -90 && B >= -180 && this.tileX === 1 && !this.tileY;
                if (!this.demReady || this.demData == null)
                  return !1;
                var Pe = c.Coordinates.geoTo3dDouble(-Me, B), k = this._isLeftOfHalfSpace$1(this.topLeft.copy(), this.topRight.copy(), Pe), b = this._isLeftOfHalfSpace$1(this.topRight.copy(), this.bottomRight.copy(), Pe), Le = this._isLeftOfHalfSpace$1(this.bottomRight.copy(), this.bottomLeft.copy(), Pe), xe = this._isLeftOfHalfSpace$1(this.bottomLeft.copy(), this.topLeft.copy(), Pe);
                return !!(k && b && Le && xe);
              },
              _isLeftOfHalfSpace$1: function(Me, B, Pe) {
                Me.normalize(), B.normalize();
                var k = l.Vector3d.cross(Me, B), b = l.Vector3d.dot(k, Pe);
                return b < 0;
              },
              _initializeGrids$1: function() {
                if (this._vertexList$1 = [], this._childTriangleList$1 = new Array(4), this._childTriangleList$1[0] = [], this._childTriangleList$1[1] = [], this._childTriangleList$1[2] = [], this._childTriangleList$1[3] = [], this.bounds = new Array(9), this.level > 0) {
                  this.parent == null && (this.parent = (0, t.tileCacheGetTile)(this.level - 1, this.tileX / 2, this.tileY / 2, this.dataset, null));
                  var Me = this.parent, B = this.tileX % 2, Pe = this.tileY % 2;
                  this.level > 1 ? this.backslash = Me.backslash : this.backslash = (B === 1 ^ Pe === 1) === 1, this.bounds[0 + 3 * 0] = Me.bounds[B + 3 * Pe].copy(), this.bounds[1 + 3 * 0] = this._midpoint$1(Me.bounds[B + 3 * Pe], Me.bounds[B + 1 + 3 * Pe]), this.bounds[2 + 3 * 0] = Me.bounds[B + 1 + 3 * Pe].copy(), this.bounds[0 + 3 * 1] = this._midpoint$1(Me.bounds[B + 3 * Pe], Me.bounds[B + 3 * (Pe + 1)]), this.backslash ? this.bounds[1 + 3 * 1] = this._midpoint$1(Me.bounds[B + 3 * Pe], Me.bounds[B + 1 + 3 * (Pe + 1)]) : this.bounds[1 + 3 * 1] = this._midpoint$1(Me.bounds[B + 1 + 3 * Pe], Me.bounds[B + 3 * (Pe + 1)]), this.bounds[2 + 3 * 1] = this._midpoint$1(Me.bounds[B + 1 + 3 * Pe], Me.bounds[B + 1 + 3 * (Pe + 1)]), this.bounds[0 + 3 * 2] = Me.bounds[B + 3 * (Pe + 1)].copy(), this.bounds[1 + 3 * 2] = this._midpoint$1(Me.bounds[B + 3 * (Pe + 1)], Me.bounds[B + 1 + 3 * (Pe + 1)]), this.bounds[2 + 3 * 2] = Me.bounds[B + 1 + 3 * (Pe + 1)].copy(), this.bounds[0 + 3 * 0].tu = 0 * t.tileUvMultiple, this.bounds[0 + 3 * 0].tv = 0 * t.tileUvMultiple, this.bounds[1 + 3 * 0].tu = 0.5 * t.tileUvMultiple, this.bounds[1 + 3 * 0].tv = 0 * t.tileUvMultiple, this.bounds[2 + 3 * 0].tu = 1 * t.tileUvMultiple, this.bounds[2 + 3 * 0].tv = 0 * t.tileUvMultiple, this.bounds[0 + 3 * 1].tu = 0 * t.tileUvMultiple, this.bounds[0 + 3 * 1].tv = 0.5 * t.tileUvMultiple, this.bounds[1 + 3 * 1].tu = 0.5 * t.tileUvMultiple, this.bounds[1 + 3 * 1].tv = 0.5 * t.tileUvMultiple, this.bounds[2 + 3 * 1].tu = 1 * t.tileUvMultiple, this.bounds[2 + 3 * 1].tv = 0.5 * t.tileUvMultiple, this.bounds[0 + 3 * 2].tu = 0 * t.tileUvMultiple, this.bounds[0 + 3 * 2].tv = 1 * t.tileUvMultiple, this.bounds[1 + 3 * 2].tu = 0.5 * t.tileUvMultiple, this.bounds[1 + 3 * 2].tv = 1 * t.tileUvMultiple, this.bounds[2 + 3 * 2].tu = 1 * t.tileUvMultiple, this.bounds[2 + 3 * 2].tv = 1 * t.tileUvMultiple;
                } else
                  this.bounds[0 + 3 * 0] = l.PositionTexture.create(0, -1, 0, 0, 0), this.bounds[1 + 3 * 0] = l.PositionTexture.create(0, 0, 1, 0.5, 0), this.bounds[2 + 3 * 0] = l.PositionTexture.create(0, -1, 0, 1, 0), this.bounds[0 + 3 * 1] = l.PositionTexture.create(-1, 0, 0, 0, 0.5), this.bounds[1 + 3 * 1] = l.PositionTexture.create(0, 1, 0, 0.5, 0.5), this.bounds[2 + 3 * 1] = l.PositionTexture.create(1, 0, 0, 1, 0.5), this.bounds[0 + 3 * 2] = l.PositionTexture.create(0, -1, 0, 0, 1), this.bounds[1 + 3 * 2] = l.PositionTexture.create(0, 0, -1, 0.5, 1), this.bounds[2 + 3 * 2] = l.PositionTexture.create(0, -1, 0, 1, 1);
              },
              _midpoint$1: function(Me, B) {
                var Pe = l.Vector3d.lerp(Me.position, B.position, 0.5), k = l.Vector2d.lerp(l.Vector2d.create(Me.tu, Me.tv), l.Vector2d.create(B.tu, B.tv), 0.5);
                return Pe.normalize(), l.PositionTexture.createPos(Pe, k.x, k.y);
              },
              createGeometry: function(Me) {
                return this.geometryCreated || (this.geometryCreated = !0, g.Tile.prototype.createGeometry.call(this, Me)), !0;
              },
              cleanUp: function(Me) {
                g.Tile.prototype.cleanUp.call(this, Me), this._vertexList$1 != null && (this._vertexList$1 = null), this._childTriangleList$1 != null && (this._childTriangleList$1 = null), this._subDivided$1 = !1, this.demArray = null;
              }
            };
            (0, a.registerType)("PlotTile", [Ee, Ve, g.Tile]);
          }
        ),
        /***/
        "./esm/pointing.js": (
          /*!*************************!*\
            !*** ./esm/pointing.js ***!
            \*************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Pointing: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./healpix_utils.js */
              "./esm/healpix_utils.js"
            );
            function l() {
              this.theta = 0, this.phi = 0;
            }
            l.create = function(c, _) {
              var u = new l();
              return u.theta = c, u.phi = _, u;
            };
            var o = {
              normalizeTheta: function() {
                this.theta = t.HealpixUtils.fmodulo(this.theta, 2 * Math.PI), this.theta > Math.PI && (this.phi += Math.PI, this.theta = 2 * Math.PI - this.theta);
              },
              normalize: function() {
                this.normalizeTheta(), this.phi = t.HealpixUtils.fmodulo(this.phi, 2 * Math.PI);
              },
              toString: function() {
                var c = new s.ss.StringBuilder();
                return c.append("ptg("), c.append(this.theta), c.append(","), c.append(this.phi), c.append(")"), c.toString();
              }
            };
            (0, a.registerType)("Pointing", [l, o, null]);
          }
        ),
        /***/
        "./esm/render_context.js": (
          /*!*******************************!*\
            !*** ./esm/render_context.js ***!
            \*******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              InViewReturnMessage: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              RenderContext: () => (
                /* binding */
                Se
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), o = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), c = n(
              /*! ./baseutil.js */
              "./esm/baseutil.js"
            ), _ = n(
              /*! ./graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), u = n(
              /*! ./graphics/shaders.js */
              "./esm/graphics/shaders.js"
            ), y = n(
              /*! ./camera_parameters.js */
              "./esm/camera_parameters.js"
            ), g = n(
              /*! ./color.js */
              "./esm/color.js"
            ), Ee = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), Ve = n(
              /*! ./imageset.js */
              "./esm/imageset.js"
            ), Me = n(
              /*! ./planets.js */
              "./esm/planets.js"
            ), B = n(
              /*! ./render_triangle.js */
              "./esm/render_triangle.js"
            ), Pe = n(
              /*! ./settings.js */
              "./esm/settings.js"
            ), k = n(
              /*! ./space_time_controller.js */
              "./esm/space_time_controller.js"
            ), b = n(
              /*! ./layers/spreadsheet_layer.js */
              "./esm/layers/spreadsheet_layer.js"
            ), Le = n(
              /*! ./layers/layer_manager.js */
              "./esm/layers/layer_manager.js"
            );
            function xe() {
              this.aborted = !1;
            }
            var ze = {};
            (0, a.registerType)("InViewReturnMessage", [xe, ze, null]);
            function Se() {
              this.height = 0, this.width = 0, this.lighting = !1, this._viewPoint = new t.Vector3d(), this.space = !1, this._fovAngle = 0, this._fovScale = 0, this._nominalRadius = 6378137, this._mainTexture = null, this.viewMover = null, this.viewCamera = new y.CameraParameters(), this.targetCamera = new y.CameraParameters(), this.alt = 0, this.az = 0, this.targetAlt = 0, this.targetAz = 0, this._backgroundImageset = null, this._foregroundImageset = null, this._activeCatalogHipsImagesets = [], this._targetHeight = 1, this.targetAltitude = 0, this._galactic = !0, this._galacticMatrix = t.Matrix3d.create(-0.4838350155, -0.0548755604, -0.8734370902, 0, 0.7469822445, 0.4941094279, -0.44482963, 0, 0.4559837762, -0.867666149, -0.1980763734, 0, 0, 0, 0, 1), this._firstTimeInit = !1, this._useSolarSystemTilt = !0, this.customTrackingParams = new y.CameraParameters(), this._cameraOffset = new t.Vector3d(), this._fovLocal = Math.PI / 4, this.perspectiveFov = Math.PI / 4, this.nearPlane = 0, this._frustumDirty = !0, this._frustum = new Array(6), this._ambientLightColor = g.Colors.get_black(), this._hemiLightColor = g.Colors.get_black(), this._hemiLightUp = new t.Vector3d(), this._sunlightColor = g.Colors.get_white(), this._sunPosition = new t.Vector3d(), this._reflectedLightColor = g.Colors.get_black(), this._reflectedLightPosition = new t.Vector3d(), this._occludingPlanetRadius = 0, this._occludingPlanetPosition = new t.Vector3d(), this._lightingStateDirty = !0, this._twoSidedLighting = !1, this.cameraPosition = new t.Vector3d(), this._skyColor = "Blue";
              for (var D = 0; D < 6; D++)
                this._frustum[D] = new t.PlaneD(0, 0, 0, 0);
            }
            Se.back = 0, Se.create = function(D) {
              var ke = new Se();
              return ke.device = D, ke.viewCamera.zoom = 700, ke.viewCamera.target = 65536, ke;
            }, Se.getTilesYForLevel = function(D, ke) {
              var Fe = 1;
              switch (D.get_projection()) {
                case Ve.ProjectionType.mercator:
                  Fe = Math.pow(2, ke);
                  break;
                case Ve.ProjectionType.equirectangular:
                  Fe = Math.pow(2, ke) * (180 / D.get_baseTileDegrees());
                  break;
                case Ve.ProjectionType.tangent:
                  Fe = Math.pow(2, ke);
                  break;
                case Ve.ProjectionType.spherical:
                  Fe = 1;
                  break;
                case Ve.ProjectionType.healpix:
                  Fe = 4 * Math.pow(2, ke);
                  break;
                default:
                  Fe = Math.pow(2, ke);
                  break;
              }
              return Fe === Number.POSITIVE_INFINITY && (Fe = 1), Fe;
            }, Se.getTilesXForLevel = function(D, ke) {
              var Fe = 1;
              switch (D.get_projection()) {
                case Ve.ProjectionType.plotted:
                case Ve.ProjectionType.toast:
                  Fe = Math.pow(2, ke);
                  break;
                case Ve.ProjectionType.mercator:
                  Fe = Math.pow(2, ke) * s.ss.truncate(D.get_baseTileDegrees() / 360);
                  break;
                case Ve.ProjectionType.equirectangular:
                  Fe = Math.pow(2, ke) * s.ss.truncate(360 / D.get_baseTileDegrees());
                  break;
                case Ve.ProjectionType.tangent:
                  D.get_widthFactor() === 1 ? Fe = Math.pow(2, ke) * 2 : Fe = Math.pow(2, ke);
                  break;
                case Ve.ProjectionType.skyImage:
                  Fe = 1;
                  break;
                case Ve.ProjectionType.spherical:
                  Fe = 1;
                  break;
                case Ve.ProjectionType.healpix:
                  Fe = Math.pow(2, ke) * 3;
                  break;
                default:
                  Fe = Math.pow(2, ke) * 2;
                  break;
              }
              return Fe;
            };
            var Te = {
              save: function() {
                this.gl != null || this.device.save();
              },
              restore: function() {
                this.gl != null || this.device.restore();
              },
              clear: function() {
                this.gl != null ? (this.gl.viewport(0, 0, s.ss.truncate(this.width), s.ss.truncate(this.height)), this.gl.clear(_.WEBGL.COLOR_BUFFER_BIT | _.WEBGL.DEPTH_BUFFER_BIT)) : (this.device.save(), this.device.fillStyle = "black", this.device.fillRect(0, 0, this.width, this.height), this.device.restore());
              },
              get_viewPoint: function() {
                return this._viewPoint;
              },
              get_RA: function() {
                return ((180 - (this.viewCamera.lng - 180)) / 15 % 24 + 48) % 24;
              },
              rAtoViewLng: function(D) {
                return 180 - D / 24 * 360 - 180;
              },
              get_dec: function() {
                return this.viewCamera.lat;
              },
              get_fovAngle: function() {
                return this._fovAngle;
              },
              get_fovScale: function() {
                return this._fovScale;
              },
              set_fovScale: function(D) {
                return this._fovScale = D, D;
              },
              get_view: function() {
                return this._view;
              },
              set_view: function(D) {
                return this._view = D, this._frustumDirty = !0, D;
              },
              get_viewBase: function() {
                return this._viewBase;
              },
              set_viewBase: function(D) {
                return this._viewBase = D, D;
              },
              get_projection: function() {
                return this._projection;
              },
              set_projection: function(D) {
                return this._projection = D, this._frustumDirty = !0, D;
              },
              get_world: function() {
                return this._world;
              },
              set_world: function(D) {
                return this._world = D, this._frustumDirty = !0, D;
              },
              _getScreenTexture: function() {
                var D = null;
                return D;
              },
              get_worldBase: function() {
                return this._worldBase;
              },
              set_worldBase: function(D) {
                return this._worldBase = D, D;
              },
              get_worldBaseNonRotating: function() {
                return this._worldBaseNonRotating;
              },
              set_worldBaseNonRotating: function(D) {
                return this._worldBaseNonRotating = D, D;
              },
              get_nominalRadius: function() {
                return this._nominalRadius;
              },
              set_nominalRadius: function(D) {
                return this._nominalRadius = D, D;
              },
              get_mainTexture: function() {
                return this._mainTexture;
              },
              set_mainTexture: function(D) {
                return D != null && (this._mainTexture = D, this.gl.bindTexture(_.WEBGL.TEXTURE_2D, this._mainTexture.texture2d)), D;
              },
              onTarget: function(D) {
                return Math.abs(this.viewCamera.lat - this.targetCamera.lat) < 1e-12 && Math.abs(this.viewCamera.lng - this.targetCamera.lng) < 1e-12 && Math.abs(this.viewCamera.zoom - this.targetCamera.zoom) < 1e-12 && this.viewMover == null;
              },
              setTexture: function(D) {
              },
              get_backgroundImageset: function() {
                return this._backgroundImageset;
              },
              set_backgroundImageset: function(D) {
                var ke = this._backgroundImageset != null && D != null && this._backgroundImageset.get_dataSetType() !== D.get_dataSetType();
                return this._backgroundImageset = D, ke && (l.globalWWTControl._freezeView(), l.globalWWTControl.clampZooms(this)), D;
              },
              get_foregroundImageset: function() {
                return this._foregroundImageset;
              },
              set_foregroundImageset: function(D) {
                return this._foregroundImageset = D, D;
              },
              get_catalogHipsImagesets: function() {
                return this._activeCatalogHipsImagesets;
              },
              getCatalogHipsDataInView: function(D, ke, Fe) {
                var He = this, We = new b.CatalogSpreadSheetLayer(), Ke = function() {
                  We.useHeadersFromVoTable(D.get_hipsProperties().get_catalogColumnInfo()), He._tryGetAllDataInView(D, ke, We, Fe, 0);
                };
                D.get_hipsProperties() == null ? (D.set_hipsProperties((0, l.makeNewHipsProperties)(D)), D.get_hipsProperties().setDownloadCompleteListener(Ke)) : D.get_hipsProperties() != null && D.get_hipsProperties().get_downloadComplete() ? Ke() : D.get_hipsProperties().setDownloadCompleteListener(Ke);
              },
              _tryGetAllDataInView: function(D, ke, Fe, He, We) {
                for (var Ke = this, $ = Se.getTilesXForLevel(D, D.get_baseLevel()), De = Se.getTilesYForLevel(D, D.get_baseLevel()), Re = !1, Ie = 0; Ie < $; Ie++)
                  for (var O = 0; O < De; O++) {
                    var Ue = (0, o.tileCacheGetTile)(D.get_baseLevel(), Ie, O, D, null);
                    if (Ue != null) {
                      var $e = Ue.getDataInView(this, ke, Fe);
                      Re = Re || !$e;
                    } else
                      Re = !0;
                  }
                if (Re) {
                  var Ze = Fe.get__table().rows.length;
                  if ((Ze > 1e4 || We > 100 * 60 * 5) && ke) {
                    console.log("Too Many results - Aborting"), console.log(Ze);
                    var Qe = new xe();
                    Qe.aborted = !0, Qe.table = Fe.getTableDataInView(), He(Qe), Fe.cleanUp();
                  } else
                    setTimeout(function() {
                      Ke._tryGetAllDataInView(D, ke, Fe, He, We);
                    }, 10), We % 200 || (console.log("Waiting for more tiles to load"), console.log(Ze)), We++;
                } else {
                  var Ze = Fe.get__table().rows.length;
                  console.log("Done!"), console.log(Ze);
                  var Qe = new xe();
                  Qe.aborted = !1, Qe.table = Fe.getTableDataInView(), He(Qe), Fe.cleanUp();
                }
              },
              addCatalogHips: function(D, ke) {
                this._activeCatalogHipsImagesets.indexOf(D) >= 0 || this._activeCatalogHipsImagesets.push(D), D.get_hipsProperties() == null ? (D.set_hipsProperties((0, l.makeNewHipsProperties)(D)), D.get_hipsProperties().setDownloadCompleteListener(ke)) : D.get_hipsProperties() != null && D.get_hipsProperties().get_downloadComplete() && (Le.LayerManager.addSpreadsheetLayer(D.get_hipsProperties().get_catalogSpreadSheetLayer(), "Sky"), ke != null && ke());
              },
              removeCatalogHips: function(D) {
                s.ss.remove(this._activeCatalogHipsImagesets, D), D.get_hipsProperties() != null && Le.LayerManager.deleteLayerByID(D.get_hipsProperties().get_catalogSpreadSheetLayer().id, !0, !0);
              },
              getCatalogHipsByName: function(D) {
                for (var ke = s.ss.enumerate(this._activeCatalogHipsImagesets); ke.moveNext(); ) {
                  var Fe = ke.current;
                  if (Fe.get_name() === D)
                    return Fe;
                }
                return null;
              },
              getAltitudeForLatLongForPlanet: function(D, ke, Fe) {
                var He = l.globalWWTControl.getImagesetByName(Me.Planets.getNameFrom3dId(D));
                if (He == null)
                  return 0;
                for (var We = Se.getTilesXForLevel(He, He.get_baseLevel()), Ke = Se.getTilesYForLevel(He, He.get_baseLevel()), $ = 0; $ < We; $++)
                  for (var De = 0; De < Ke; De++) {
                    var Re = (0, o.tileCacheGetTile)(He.get_baseLevel(), $, De, He, null);
                    if (Re != null && Re.isPointInTile(ke, Fe))
                      return Re.getSurfacePointAltitude(ke, Fe, !0);
                  }
                return 0;
              },
              getEarthAltitude: function(D, ke, Fe) {
                if (l.globalWWTControl.get_solarSystemMode()) {
                  var He = Ee.Coordinates.geoTo3dDouble(D, ke + 90), We = Me.Planets.earthMatrixInv;
                  He = t.Vector3d._transformCoordinate(He, We), He.normalize();
                  var Ke = Ee.Coordinates.cartesianToLatLng(He);
                  return this.getAltitudeForLatLongForPlanet(this.viewCamera.target, Ke.y, Ke.x);
                } else
                  return this.get_backgroundImageset().get_dataSetType() != Ve.ImageSetType.earth ? Fe ? this.getMetersAltitudeForLatLong(D, ke) : this.getScaledAltitudeForLatLong(D, ke) : 0;
              },
              drawImageSet: function(D, ke) {
                for (var Fe = Se.getTilesXForLevel(D, D.get_baseLevel()), He = Se.getTilesYForLevel(D, D.get_baseLevel()), We = 0; We < Fe; We++)
                  for (var Ke = 0; Ke < He; Ke++) {
                    var $ = (0, o.tileCacheGetTile)(D.get_baseLevel(), We, Ke, D, null);
                    $ != null && $.draw3D(this, ke);
                  }
              },
              _getTileAtLatLong: function(D, ke) {
                var Fe = this.get_backgroundImageset();
                if (Fe == null)
                  return null;
                for (var He = Se.getTilesXForLevel(Fe, Fe.get_baseLevel()), We = Se.getTilesYForLevel(Fe, Fe.get_baseLevel()), Ke = 0; Ke < He; Ke++)
                  for (var $ = 0; $ < We; $++) {
                    var De = (0, o.tileCacheGetTile)(Fe.get_baseLevel(), Ke, $, Fe, null);
                    if (De != null && De.isPointInTile(D, ke))
                      return De;
                  }
                return null;
              },
              getScaledAltitudeForLatLong: function(D, ke) {
                var Fe = this._getTileAtLatLong(D, ke);
                return Fe != null ? Fe.getSurfacePointAltitude(D, ke, !1) : 0;
              },
              getMetersAltitudeForLatLong: function(D, ke) {
                var Fe = this._getTileAtLatLong(D, ke);
                return Fe != null ? Fe.getSurfacePointAltitude(D, ke, !0) : 0;
              },
              _setupMatricesLand3d: function() {
                this.lighting = !1, this.space = !1, B.RenderTriangle.cullInside = !1;
                var D = t.Matrix3d._rotationY((this.viewCamera.lng - 90) / 180 * Math.PI);
                D._multiply(t.Matrix3d._rotationX(-this.viewCamera.lat / 180 * Math.PI)), this.set_world(D), this.set_worldBase(D.clone()), this._viewPoint = Ee.Coordinates.geoTo3d(this.viewCamera.lat, this.viewCamera.lng);
                var ke = 0;
                if (this._backgroundImageset.get_isMandelbrot() ? ke = 4 * (this.viewCamera.zoom / 180) + 1e-41 : ke = 4 * (this.viewCamera.zoom / 180) + 1e-6, this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / this.height * 3600, this.gl != null) {
                  this.targetAltitude = this.getScaledAltitudeForLatLong(this.viewCamera.lat, this.viewCamera.lng);
                  var Fe = 1 + this.targetAltitude;
                  this.targetAltitude *= this.get_nominalRadius(), this._targetHeight < Fe ? this._targetHeight = (this._targetHeight * 2 + Fe) / 3 : this._targetHeight = (this._targetHeight * 9 + Fe) / 10;
                } else
                  this.targetAltitude = 0, this._targetHeight = 1;
                var He = this.viewCamera.rotation;
                this.cameraPosition = t.Vector3d.create(Math.sin(He) * Math.sin(this.viewCamera.angle) * ke, Math.cos(He) * Math.sin(this.viewCamera.angle) * ke, -this._targetHeight - Math.cos(this.viewCamera.angle) * ke);
                var We = t.Vector3d.create(0, 0, -this._targetHeight);
                this.cameraPosition.length();
                var Ke = t.Vector3d.create(Math.sin(He) * Math.cos(this.viewCamera.angle), Math.cos(He) * Math.cos(this.viewCamera.angle), Math.sin(this.viewCamera.angle));
                this.set_view(t.Matrix3d.lookAtLH(this.cameraPosition, We, Ke)), this.set_viewBase(this.get_view());
                var $ = Math.sqrt((ke + 1) * (ke + 1) - 1);
                $ = Math.max(0.5, $);
                var De = ke * 0.05;
                De = ke * 0.05, this.set_projection(t.Matrix3d.perspectiveFovLH(Math.PI / 4, this.width / this.height, De, $)), this._setMatrixes(), this.makeFrustum();
              },
              setupMatricesSpace3d: function(D, ke) {
                this.lighting = !1, this._firstTimeInit || (this._galacticMatrix = t.Matrix3d.get_identity(), this._galacticMatrix._multiply(t.Matrix3d._rotationY(-(270 - 17.7603329867975 * 15) / 180 * Math.PI)), this._galacticMatrix._multiply(t.Matrix3d._rotationX(28.9361739586894 / 180 * Math.PI)), this._galacticMatrix._multiply(t.Matrix3d._rotationZ((31.422052860102 - 90) / 180 * Math.PI)), this._firstTimeInit = !0), this.space = !0, B.RenderTriangle.cullInside = !0;
                var Fe = t.Matrix3d.get_identity();
                if (Pe.Settings.get_active().get_galacticMode()) {
                  Fe._multiply(this._galacticMatrix), Fe._multiply(t.Matrix3d._rotationY(this.az / 180 * Math.PI)), Fe._multiply(t.Matrix3d._rotationX(-this.alt / 180 * Math.PI));
                  var He = Ee.Coordinates.galactictoJ2000(this.az, this.alt);
                  this._viewPoint = Ee.Coordinates.raDecTo3dAu(He[0] / 15, He[1], 1), this.targetCamera.lng = this.rAtoViewLng(He[0] / 15), this.targetCamera.lat = He[1], this.viewCamera.lat = this.targetCamera.lat, this.viewCamera.lng = this.targetCamera.lng;
                } else
                  Fe._multiply(t.Matrix3d._rotationY(-(this.viewCamera.lng - 90) / 180 * Math.PI)), Fe._multiply(t.Matrix3d._rotationX(-this.viewCamera.lat / 180 * Math.PI)), this._viewPoint = Ee.Coordinates.raDecTo3dAu(this.get_RA(), this.get_dec(), 1);
                var We = this.viewCamera.rotation;
                if (this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / ke * 3600, Pe.Settings.get_active().get_localHorizonMode() && this._backgroundImageset.get_dataSetType() == Ve.ImageSetType.sky) {
                  var Ke = new Ee.Coordinates(0, 0);
                  Ke.set_az(0), Ke.set_alt(0);
                  var $ = Ee.Coordinates.horizonToEquitorial(Ke, k.SpaceTimeController.get_location(), k.SpaceTimeController.get_now()), De = -(($.get_RA() - 6) / 24 * (Math.PI * 2)), Re = -($.get_dec() / 360 * (Math.PI * 2));
                  Ee.Coordinates.formatDMS($.get_RA()), Fe = t.Matrix3d._rotationY(-De - Math.PI), Fe._multiply(t.Matrix3d._rotationX(Re)), k.SpaceTimeController.get_location().get_lat() < 0 ? (Fe._multiply(t.Matrix3d._rotationY(this.az / 180 * Math.PI)), Fe._multiply(t.Matrix3d._rotationX(this.alt / 180 * Math.PI)), We += Math.PI) : (Fe._multiply(t.Matrix3d._rotationY(-this.az / 180 * Math.PI)), Fe._multiply(t.Matrix3d._rotationX(-this.alt / 180 * Math.PI)));
                  var Ie = Ee.Coordinates.horizonToEquitorial(Ee.Coordinates.fromLatLng(this.alt, this.az), k.SpaceTimeController.get_location(), k.SpaceTimeController.get_now());
                  this.viewCamera.lat = this.targetCamera.lat = Ie.get_dec(), this.viewCamera.lng = this.targetCamera.lng = this.rAtoViewLng(Ie.get_RA());
                }
                this.set_world(Fe), this.set_worldBase(Fe.clone());
                var O = this.viewCamera.zoom;
                this.cameraPosition = t.Vector3d.create(0, 0, 0), this.set_view(t.Matrix3d.lookAtLH(this.cameraPosition, t.Vector3d.create(0, 0, -1), t.Vector3d.create(Math.sin(We), Math.cos(We), 0))), this.set_viewBase(this.get_view().clone()), this.nearPlane = 0.1, this.set_projection(t.Matrix3d.perspectiveFovLH(O / 343.774, D / ke, 0.1, -2)), this._setMatrixes(), this.makeFrustum();
              },
              get_solarSystemTrack: function() {
                return this.viewCamera.target;
              },
              set_solarSystemTrack: function(D) {
                return this.viewCamera.target = D, D;
              },
              get_solarSystemCameraDistance: function() {
                return 4 * (this.viewCamera.zoom / 9) + 1e-6;
              },
              get_sandboxMode: function() {
                return this._backgroundImageset == null ? !1 : this._backgroundImageset.get_dataSetType() === Ve.ImageSetType.sandbox;
              },
              get_trackingFrame: function() {
                return this.viewCamera.targetReferenceFrame;
              },
              set_trackingFrame: function(D) {
                return this.viewCamera.targetReferenceFrame = D, D;
              },
              get_fovLocal: function() {
                return this._fovLocal;
              },
              set_fovLocal: function(D) {
                return this._fovLocal = D, D;
              },
              setupMatricesOverlays: function() {
                this.set_world(t.Matrix3d.get_identity()), t.Matrix3d.get_identity();
                var D = t.Vector3d.create(0, 0, 0), ke = t.Vector3d.create(0, 0, 1), Fe = t.Vector3d.create(0, 1, 0), He;
                He = t.Matrix3d.lookAtLH(D, ke, Fe), He._multiply(t.Matrix3d._scaling(1, -1, 1)), this.set_view(He);
                var We = 1e4;
                this.nearPlane = 0.1, this.set_projection(t.Matrix3d.perspectiveFovLH(this._fovLocal, this.width / this.height, this.nearPlane, We));
              },
              setupMatricesSolarSystem: function(D) {
                this.lighting = Pe.Settings.get_active().get_solarSystemLighting(), this.space = !1, this.get_solarSystemTrack() !== 20 && this.get_solarSystemTrack() !== 65536 && (this.viewCamera.viewTarget = Me.Planets.getPlanetTargetPoint(this.get_solarSystemTrack(), this.viewCamera.lat, this.viewCamera.lng, 0)), B.RenderTriangle.cullInside = !1;
                var ke = this.get_solarSystemCameraDistance(), Fe = t.Matrix3d.get_identity();
                if (ke -= 1e-6, this.get_solarSystemTrack() === 20 && !s.ss.emptyString(this.get_trackingFrame())) {
                  var He = Le.LayerManager._getFrameTarget(this, this.get_trackingFrame());
                  this.viewCamera.viewTarget = He.target, Fe = He.matrix;
                } else
                  s.ss.emptyString(this.get_trackingFrame()) || this.set_trackingFrame("");
                this.viewCamera.viewTarget, this.viewCamera.zoom * 20;
                var We = new t.Vector3d(), Ke = t.Matrix3d.get_identity();
                Ke._multiply(t.Matrix3d._rotationX(-this.viewCamera.lat / 180 * Math.PI)), Ke._multiply(t.Matrix3d._rotationY(-this.viewCamera.lng / 180 * Math.PI));
                var $ = t.Matrix3d.get_identity(), De;
                if (this._useSolarSystemTilt && !this.get_sandboxMode()) {
                  var Re = this.viewCamera.angle;
                  if (ke > 8e-4)
                    Re = 0;
                  else if (ke > 1e-5) {
                    var Ie = Math.min(1.903089987, c.Util.log10(ke) + 5) / 1.903089987;
                    Re = Re * Math.max(0, 1 - Ie);
                  }
                  this.cameraPosition = t.Vector3d.create(Math.sin(-this.viewCamera.rotation) * Math.sin(Re) * ke, Math.cos(-this.viewCamera.rotation) * Math.sin(Re) * ke, Math.cos(Re) * ke), De = t.Vector3d.create(Math.sin(-this.viewCamera.rotation), Math.cos(-this.viewCamera.rotation), 1e-5);
                } else
                  this.cameraPosition = t.Vector3d.create(0, 0, ke), De = t.Vector3d.create(Math.sin(-this.viewCamera.rotation), Math.cos(-this.viewCamera.rotation), 1e-4);
                this.cameraPosition = Ke.transform(this.cameraPosition), this._cameraOffset = this.cameraPosition.copy();
                var O = Fe.clone();
                O.invert(), this._cameraOffset = t.Vector3d._transformCoordinate(this._cameraOffset, O), De = Ke.transform(De), this.set_world(t.Matrix3d.get_identity()), this.set_worldBase(t.Matrix3d.get_identity()), this.set_worldBaseNonRotating(t.Matrix3d.get_identity()), this.set_view(t.Matrix3d.multiplyMatrix(t.Matrix3d.multiplyMatrix(Fe, t.Matrix3d.lookAtLH(this.cameraPosition, We, De)), $)), this.set_viewBase(this.get_view().clone());
                var Ue = t.Vector3d.subtractVectors(We, this.cameraPosition);
                Ue.normalize(), Ue = t.Vector3d._transformCoordinate(Ue, Fe), Ue.normalize(), this._viewPoint = Ue;
                var $e = Me.Planets.getAdjustedPlanetRadius(this.get_solarSystemTrack());
                ke < $e * 2 && !D ? (this.nearPlane = ke * 0.03, this.nearPlane = Math.max(this.nearPlane, 1e-11), Se.back = 1900) : D ? (Se.back = 900056, Se.back = ke > 900056 ? ke * 3 : 900056, this.nearPlane = 3e-5) : (Se.back = ke > 1900 ? ke + 200 : 1900, Pe.Settings.get_active().get_solarSystemScale() < 13 ? this.nearPlane = Math.min(ke * 0.03, 0.01) : this.nearPlane = 1e-3), this.set_projection(t.Matrix3d.perspectiveFovLH(this._fovLocal, this.width / this.height, this.nearPlane, Se.back)), this.perspectiveFov = this._fovLocal, this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / this.height * 3600, this._setMatrixes(), this.makeFrustum();
              },
              _setMatrixes: function() {
              },
              get_frustum: function() {
                return this._frustum;
              },
              get_ambientLightColor: function() {
                return this._ambientLightColor;
              },
              set_ambientLightColor: function(D) {
                return this._ambientLightColor = D, this._lightingStateDirty = !0, D;
              },
              get_hemisphereLightColor: function() {
                return this._hemiLightColor;
              },
              set_hemisphereLightColor: function(D) {
                return this._hemiLightColor = D, this._lightingStateDirty = !0, D;
              },
              get_hemisphereLightUp: function() {
                return this._hemiLightUp;
              },
              set_hemisphereLightUp: function(D) {
                return this._hemiLightUp = D, this._lightingStateDirty = !0, D;
              },
              get_sunlightColor: function() {
                return this._sunlightColor;
              },
              set_sunlightColor: function(D) {
                return this._sunlightColor = D, this._lightingStateDirty = !0, D;
              },
              get_sunPosition: function() {
                return this._sunPosition;
              },
              set_sunPosition: function(D) {
                return this._sunPosition = D, this._lightingStateDirty = !0, D;
              },
              get_reflectedLightColor: function() {
                return this._reflectedLightColor;
              },
              set_reflectedLightColor: function(D) {
                return this._reflectedLightColor !== D && (this._reflectedLightColor = D, this._lightingStateDirty = !0), D;
              },
              get_reflectedLightPosition: function() {
                return this._reflectedLightPosition;
              },
              set_reflectedLightPosition: function(D) {
                return this._reflectedLightPosition = D, this._lightingStateDirty = !0, D;
              },
              // Radius of a planet casting a shadow; zero when there's no shadow
              get_occludingPlanetRadius: function() {
                return this._occludingPlanetRadius;
              },
              set_occludingPlanetRadius: function(D) {
                return this._occludingPlanetRadius = D, D;
              },
              get_occludingPlanetPosition: function() {
                return this._occludingPlanetPosition;
              },
              set_occludingPlanetPosition: function(D) {
                return this._occludingPlanetPosition = D, D;
              },
              get_twoSidedLighting: function() {
                return this._twoSidedLighting;
              },
              set_twoSidedLighting: function(D) {
                return D !== this._twoSidedLighting && (this._twoSidedLighting = D, this._lightingStateDirty = !0), D;
              },
              makeFrustum: function() {
                this.WV = t.Matrix3d.multiplyMatrix(this.get_world(), this.get_view());
                var D = t.Matrix3d.multiplyMatrix(this.WV, this.get_projection());
                this.WVP = D.clone();
                var ke = this.get_world().clone();
                ke.invert(), this._frustum[0].a = D.get_m14() + D.get_m11(), this._frustum[0].b = D.get_m24() + D.get_m21(), this._frustum[0].c = D.get_m34() + D.get_m31(), this._frustum[0].d = D.get_m44() + D.get_m41(), this._frustum[1].a = D.get_m14() - D.get_m11(), this._frustum[1].b = D.get_m24() - D.get_m21(), this._frustum[1].c = D.get_m34() - D.get_m31(), this._frustum[1].d = D.get_m44() - D.get_m41(), this._frustum[2].a = D.get_m14() - D.get_m12(), this._frustum[2].b = D.get_m24() - D.get_m22(), this._frustum[2].c = D.get_m34() - D.get_m32(), this._frustum[2].d = D.get_m44() - D.get_m42(), this._frustum[3].a = D.get_m14() + D.get_m12(), this._frustum[3].b = D.get_m24() + D.get_m22(), this._frustum[3].c = D.get_m34() + D.get_m32(), this._frustum[3].d = D.get_m44() + D.get_m42(), this._frustum[4].a = D.get_m13(), this._frustum[4].b = D.get_m23(), this._frustum[4].c = D.get_m33(), this._frustum[4].d = D.get_m43(), this._frustum[5].a = D.get_m14() - D.get_m13(), this._frustum[5].b = D.get_m24() - D.get_m23(), this._frustum[5].c = D.get_m34() - D.get_m33(), this._frustum[5].d = D.get_m44() - D.get_m43();
                for (var Fe = 0; Fe < 6; Fe++)
                  this._frustum[Fe].normalize();
                this._frustumDirty = !1, this.WVP.scale(t.Vector3d.create(this.width / 2, -this.height / 2, 1)), this.WVP.translate(t.Vector3d.create(this.width / 2, this.height / 2, 0)), this._setMatrixes();
              },
              _initGL: function() {
                this.gl != null && (this.gl.getExtension("OES_element_index_uint"), (0, o.set_tileUvMultiple)(1), (0, o.set_tileDemEnabled)(!0), u.TileShader.init(this));
              },
              freezeView: function() {
                this.targetAlt = this.alt, this.targetAz = this.az, this.targetCamera = this.viewCamera.copy();
              },
              _setVertexBuffer: function(D) {
              },
              _setIndexBuffer: function(D) {
              },
              // Set up a shader for the specified material properties and the
              // current lighting environment.
              setMaterial: function(D, ke, Fe, He, We) {
                this.set_mainTexture(ke);
              },
              preDraw: function() {
              }
            };
            (0, a.registerType)("RenderContext", [Se, Te, null]);
          }
        ),
        /***/
        "./esm/render_globals.js": (
          /*!*******************************!*\
            !*** ./esm/render_globals.js ***!
            \*******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              globalRenderContext: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              inc_tileCacheAccessID: () => (
                /* binding */
                k
              ),
              /* harmony export */
              set_globalRenderContext: () => (
                /* binding */
                Te
              ),
              /* harmony export */
              set_tileCacheAddTileToQueue: () => (
                /* binding */
                Ve
              ),
              /* harmony export */
              set_tileCacheGetCachedTile: () => (
                /* binding */
                ze
              ),
              /* harmony export */
              set_tileCacheGetTile: () => (
                /* binding */
                Le
              ),
              /* harmony export */
              set_tileCacheRemoveFromQueue: () => (
                /* binding */
                B
              ),
              /* harmony export */
              set_tileDemEnabled: () => (
                /* binding */
                c
              ),
              /* harmony export */
              set_tilePrepDevice: () => (
                /* binding */
                a
              ),
              /* harmony export */
              set_tileUvMultiple: () => (
                /* binding */
                l
              ),
              /* harmony export */
              set_useGl: () => (
                /* binding */
                u
              ),
              /* harmony export */
              set_useGlVersion2: () => (
                /* binding */
                g
              ),
              /* harmony export */
              tileCacheAddTileToQueue: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              tileCacheGetCachedTile: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              tileCacheGetTile: () => (
                /* binding */
                b
              ),
              /* harmony export */
              tileCacheRemoveFromQueue: () => (
                /* binding */
                Me
              ),
              /* harmony export */
              tileDemEnabled: () => (
                /* binding */
                o
              ),
              /* harmony export */
              tilePrepDevice: () => (
                /* binding */
                s
              ),
              /* harmony export */
              tileUvMultiple: () => (
                /* binding */
                t
              ),
              /* harmony export */
              useGl: () => (
                /* binding */
                _
              ),
              /* harmony export */
              useGlVersion2: () => (
                /* binding */
                y
              )
              /* harmony export */
            });
            var s = null;
            function a(D) {
              s = D;
            }
            var t = 256;
            function l(D) {
              t = D;
            }
            var o = !1;
            function c(D) {
              o = !!D;
            }
            var _ = !1;
            function u(D) {
              _ = !!D;
            }
            var y = !1;
            function g(D) {
              y = !!D;
            }
            var Ee = null;
            function Ve(D) {
              Ee = D;
            }
            var Me = null;
            function B(D) {
              Me = D;
            }
            var Pe = 0;
            function k() {
              return Pe++;
            }
            var b = null;
            function Le(D) {
              b = D;
            }
            var xe = null;
            function ze(D) {
              xe = D;
            }
            var Se = null;
            function Te(D) {
              Se = D;
            }
          }
        ),
        /***/
        "./esm/render_triangle.js": (
          /*!********************************!*\
            !*** ./esm/render_triangle.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              RenderTriangle: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            );
            function t() {
              this.a = new a.PositionTexture(), this.b = new a.PositionTexture(), this.c = new a.PositionTexture(), this.normal = new a.Vector3d(), this.opacity = 1, this.expansionInPixels = 0.6, this.tileLevel = 0, this._ta = new a.Vector3d(), this._tb = new a.Vector3d(), this._tc = new a.Vector3d(), this._expandedS0 = new a.Vector2d(), this._expandedS1 = new a.Vector2d(), this._expandedS2 = new a.Vector2d(), this.lighting = 1;
            }
            t.width = 1024, t.height = 768, t._contractionInPixels = -0.5, t.trianglesRendered = 0, t.trianglesCulled = 0, t.renderingOn = !0, t._factor = 1, t.cullInside = !0, t._hw = 0, t._qw = 0, t._hh = 0, t._qh = 0, t.create = function(o, c, _, u, y) {
              var g = new t();
              return g.a = o.copy(), g.b = c.copy(), g.c = _.copy(), g._texture = u, g.tileLevel = y, g.makeNormal(), g;
            }, t.createWithMiter = function(o, c, _, u, y, g) {
              var Ee = new t();
              return Ee.expansionInPixels = g, Ee.a = o.copy(), Ee.b = c.copy(), Ee.c = _.copy(), Ee._texture = u, Ee.tileLevel = y, Ee.makeNormal(), Ee;
            }, t._getMiterPoint = function(o, c, _, u) {
              var y = a.Vector2d.subtract(c, o), g = a.Vector2d.subtract(_, o);
              y.normalize(), g.normalize();
              var Ee = a.Vector2d.create(y.x + g.x, y.y + g.y);
              Ee.normalize();
              var Ve = a.Vector2d.create(y.x - g.x, y.y - g.y), Me = Ve.get_length() / 2, B = Math.min(2, u / Me);
              return Ee.extend(B), a.Vector2d.create(o.x - Ee.x, o.y - Ee.y);
            }, t._miterPoint = function(o, c, _, u, y, g, Ee) {
              var Ve = _ - o, Me = u - c, B = y - o, Pe = g - c, k = Math.sqrt(Ve * Ve + Me * Me);
              k && (Ve /= k, Me /= k), k = Math.sqrt(B * B + Pe * Pe), k && (B /= k, Pe /= k);
              var b = Ve + B, Le = Me + Pe;
              k = Math.sqrt(b * b + Le * Le), k && (b /= k, Le /= k);
              var xe = Ve - B, ze = Me - Pe;
              k = Math.sqrt(xe * xe + ze * ze);
              var Se = k / 2, Te = Math.min(2, Ee / Se);
              return b *= Te, Le *= Te, a.Vector2d.create(o - b, c - Le);
            }, t._miterPointOut = function(o, c, _, u, y, g, Ee, Ve) {
              var Me = u - c, B = y - _, Pe = g - c, k = Ee - _, b = Math.sqrt(Me * Me + B * B);
              b && (Me /= b, B /= b), b = Math.sqrt(Pe * Pe + k * k), b && (Pe /= b, k /= b);
              var Le = Me + Pe, xe = B + k;
              b = Math.sqrt(Le * Le + xe * xe), b && (Le /= b, xe /= b);
              var ze = Me - Pe, Se = B - k;
              b = Math.sqrt(ze * ze + Se * Se);
              var Te = b / 2, D = Math.min(2, Ve / Te);
              Le *= D, xe *= D, o.x = c - Le, o.y = _ - xe;
            };
            var l = {
              makeNormal: function() {
                var o = this.a.position.copy(), c = this.b.position.copy(), _ = this.c.position.copy();
                o.normalize(), c.normalize(), _.normalize();
                var u = o.x + c.x + _.x, y = o.y + c.y + _.y, g = o.z + c.z + _.z;
                this.normal = a.Vector3d.create(u / 3, y / 3, g / 3), this.normal.normalize();
              },
              _checkBackface: function() {
                var o = a.Vector3d.subtractVectors(this._ta, this._tb), c = a.Vector3d.subtractVectors(this._ta, this._tc), _ = a.Vector3d.cross(o, c);
                return _.normalize(), _.z >= 0;
              },
              draw: function(o, c) {
                if (o != null) {
                  if (c._transformTo(this.a.position, this._ta), c._transformTo(this.b.position, this._tb), c._transformTo(this.c.position, this._tc), this._checkBackface() === t.cullInside) {
                    t.trianglesCulled++;
                    return;
                  }
                  this._drawTriangle(o, this._texture, this._ta.x, this._ta.y, this._tb.x, this._tb.y, this._tc.x, this._tc.y, this.a.tu, this.a.tv, this.b.tu, this.b.tv, this.c.tu, this.c.tv);
                }
              },
              _drawTriangle: function(o, c, _, u, y, g, Ee, Ve, Me, B, Pe, k, b, Le) {
                if (!this.intersects(0, t.width, 0, t.height, _, u, y, g, Ee, Ve))
                  return !1;
                t._miterPointOut(this._expandedS0, _, u, y, g, Ee, Ve, this.expansionInPixels), t._miterPointOut(this._expandedS1, y, g, _, u, Ee, Ve, this.expansionInPixels), t._miterPointOut(this._expandedS2, Ee, Ve, y, g, _, u, this.expansionInPixels), _ = this._expandedS0.x, u = this._expandedS0.y, y = this._expandedS1.x, g = this._expandedS1.y, Ee = this._expandedS2.x, Ve = this._expandedS2.y, o.save(), t.renderingOn && (o.beginPath(), o.moveTo(_, u), o.lineTo(y, g), o.lineTo(Ee, Ve), o.closePath(), o.clip());
                var xe = Me * (Le - k) - Pe * Le + b * k + (Pe - b) * B, ze = -(B * (Ee - y) - k * Ee + Le * y + (k - Le) * _) / xe, Se = (k * Ve + B * (g - Ve) - Le * g + (Le - k) * u) / xe, Te = (Me * (Ee - y) - Pe * Ee + b * y + (Pe - b) * _) / xe, D = -(Pe * Ve + Me * (g - Ve) - b * g + (b - Pe) * u) / xe, ke = (Me * (Le * y - k * Ee) + B * (Pe * Ee - b * y) + (b * k - Pe * Le) * _) / xe, Fe = (Me * (Le * g - k * Ve) + B * (Pe * Ve - b * g) + (b * k - Pe * Le) * u) / xe;
                return o.transform(ze, Se, Te, D, ke, Fe), t.renderingOn && (o.globalAlpha = this.opacity, this.lighting < 1 && (o.globalAlpha = 1, o.fillStyle = "Black", o.fillRect(0, 0, t.width, t.height), o.globalAlpha = this.lighting * this.opacity), o.drawImage(c, 0, 0)), o.restore(), !0;
              },
              intersects: function(o, c, _, u, y, g, Ee, Ve, Me, B) {
                if (y > o && y < c && g > _ && g < u || Ee > o && Ee < c && Ve > _ && Ve < u || Me > o && Me < c && B > _ && B < u)
                  return !0;
                var Pe = t.height * 4;
                return this.tileLevel < 4 && (Math.abs(y - Ee) > Pe || Math.abs(g - Ve) > Pe || Math.abs(Me - Ee) > Pe || Math.abs(B - Ve) > Pe || Math.abs(y - Me) > Pe || Math.abs(g - B) > Pe) ? !1 : this.lineRectangleIntersect(o, c, _, u, y, g, Ee, Ve) || this.lineRectangleIntersect(o, c, _, u, Ee, Ve, Me, B) || this.lineRectangleIntersect(o, c, _, u, Me, B, y, g);
              },
              lineRectangleIntersect: function(o, c, _, u, y, g, Ee, Ve) {
                var Me, B, Pe, k, b, Le;
                b = (Ve - g) / (Ee - y), Le = g - b * y, b > 0 ? (Me = b * o + Le, B = b * c + Le) : (Me = b * c + Le, B = b * o + Le), g < Ve ? (Pe = g, k = Ve) : (Pe = Ve, k = g);
                var xe, ze;
                return xe = Me > Pe ? Me : Pe, ze = B < k ? B : k, xe < ze && !(ze < _ || xe > u);
              }
            };
            (0, s.registerType)("RenderTriangle", [t, l, null]);
          }
        ),
        /***/
        "./esm/script_interface.js": (
          /*!*********************************!*\
            !*** ./esm/script_interface.js ***!
            \*********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              AnnotationClickEventArgs: () => (
                /* binding */
                b
              ),
              /* harmony export */
              ArrivedEventArgs: () => (
                /* binding */
                Pe
              ),
              /* harmony export */
              CollectionLoadedEventArgs: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              ScriptInterface: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              SlideChangedEventArgs: () => (
                /* binding */
                Me
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./util.js */
              "./esm/util.js"
            ), l = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), o = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), c = n(
              /*! ./annotation.js */
              "./esm/annotation.js"
            ), _ = n(
              /*! ./layers/fits_image.js */
              "./esm/layers/fits_image.js"
            ), u = n(
              /*! ./layers/fits_image_js.js */
              "./esm/layers/fits_image_js.js"
            ), y = n(
              /*! ./imageset.js */
              "./esm/imageset.js"
            ), g = n(
              /*! ./layers/imageset_layer.js */
              "./esm/layers/imageset_layer.js"
            ), Ee = n(
              /*! ./layers/layer_manager.js */
              "./esm/layers/layer_manager.js"
            ), Ve = n(
              /*! ./folder.js */
              "./esm/folder.js"
            );
            function Me(D) {
              s.ss.EventArgs.call(this), this.set_caption(D);
            }
            var B = {
              get_caption: function() {
                return this._caption$2;
              },
              set_caption: function(D) {
                return this._caption$2 = D, D;
              }
            };
            (0, a.registerType)("SlideChangedEventArgs", [Me, B, s.ss.EventArgs]);
            function Pe(D, ke, Fe) {
              this._ra$2 = 0, this._dec$2 = 0, this._zoom$2 = 0, s.ss.EventArgs.call(this), this.set_RA(D * 15), this.set_dec(ke), this.set_zoom(Fe / 6);
            }
            var k = {
              get_RA: function() {
                return this._ra$2;
              },
              set_RA: function(D) {
                return this._ra$2 = D, D;
              },
              get_dec: function() {
                return this._dec$2;
              },
              set_dec: function(D) {
                return this._dec$2 = D, D;
              },
              get_zoom: function() {
                return this._zoom$2;
              },
              set_zoom: function(D) {
                return this._zoom$2 = D, D;
              }
            };
            (0, a.registerType)("ArrivedEventArgs", [Pe, k, s.ss.EventArgs]);
            function b(D, ke, Fe) {
              this._ra$2 = 0, this._dec$2 = 0, s.ss.EventArgs.call(this), this.set_RA(D * 15), this.set_dec(ke), this.set_id(Fe);
            }
            var Le = {
              get_RA: function() {
                return this._ra$2;
              },
              set_RA: function(D) {
                return this._ra$2 = D, D;
              },
              get_dec: function() {
                return this._dec$2;
              },
              set_dec: function(D) {
                return this._dec$2 = D, D;
              },
              get_id: function() {
                return this._id$2;
              },
              set_id: function(D) {
                return this._id$2 = D, D;
              }
            };
            (0, a.registerType)("AnnotationClickEventArgs", [b, Le, s.ss.EventArgs]);
            function xe(D) {
              s.ss.EventArgs.call(this), this._url$2 = D;
            }
            var ze = {
              get_url: function() {
                return this._url$2;
              },
              set_url: function(D) {
                return this._url$2 = D, D;
              }
            };
            (0, a.registerType)("CollectionLoadedEventArgs", [xe, ze, s.ss.EventArgs]);
            function Se() {
              this._missedReady = !1, this.hideTourFeedback = !1, this._smoothAnimation = !1, this._showCaptions = !0;
            }
            Se._containsFitsLikeExtentsion = function(D) {
              var ke = D.toLowerCase();
              return s.ss.endsWith(ke, "fits") || s.ss.endsWith(ke, "ftz") || s.ss.endsWith(ke, "fit") || s.ss.endsWith(ke, "fts");
            }, Se._addImageSet = function(D, ke, Fe, He) {
              s.ss.whitespace(D) && (D = Ee.LayerManager.getNextImageSetName());
              var We = Ee.LayerManager.addImageSetLayerCallback(He, D, Fe);
              if (ke) {
                var Ke = He._guessZoomSetting(l.globalRenderContext.viewCamera.zoom);
                o.globalWWTControl.gotoRADecZoom(He.get_viewCenterX() / 15, He.get_viewCenterY(), Ke, !1, null);
              }
              return We;
            }, Se._addFitsLayer = function(D, ke, Fe, He) {
              s.ss.whitespace(ke) && (ke = Ee.LayerManager.getNextFitsName());
              var We = new g.ImageSetLayer(), Ke = new y.Imageset(), $ = function(De) {
                if (!De.errored) {
                  if (s.ss.truncate(De.get_sizeX()), s.ss.truncate(De.get_sizeY()), Ke.setInitialParameters(De.get_description(), De.get_filename(), 2, 3, 5, t.Util.getHashCode(De.get_filename()), 0, 0, De.get_scaleY(), ".fits", De.get_scaleX() > 0, "", De.get_centerX(), De.get_centerY(), De.get_rotation(), !1, "", !1, !1, 1, De.get_referenceX(), De.get_referenceY(), De.get_copyright(), De.get_creditsUrl(), "", "", 0, ""), Ke.set_wcsImage(De), We.set_imageSet(Ke), Ee.LayerManager.addFitsImageSetLayer(We, ke), Fe) {
                    var Re = Ke._guessZoomSetting(l.globalRenderContext.viewCamera.zoom);
                    o.globalWWTControl.gotoRADecZoom(De.get_viewCenterX() / 15, De.get_viewCenterY(), Re, !1, null);
                  }
                  He != null && He(We);
                }
              };
              return s.ss.whitespace(ke) && (ke = Ee.LayerManager.getNextFitsName()), l.useGlVersion2 ? new _.FitsImage(Ke, D, null, $) : new u.FitsImageJs(Ke, D, null, $), We;
            };
            var Te = {
              add_ready: function(D) {
                this.__ready = s.ss.bindAdd(this.__ready, D);
              },
              remove_ready: function(D) {
                this.__ready = s.ss.bindSub(this.__ready, D);
              },
              _fireReady: function() {
                this.__ready != null ? this.__ready(this, new s.ss.EventArgs()) : this._missedReady = !0;
              },
              add_collectionLoaded: function(D) {
                this.__collectionLoaded = s.ss.bindAdd(this.__collectionLoaded, D);
              },
              remove_collectionLoaded: function(D) {
                this.__collectionLoaded = s.ss.bindSub(this.__collectionLoaded, D);
              },
              _fireCollectionLoaded: function(D) {
                this.__collectionLoaded != null && this.__collectionLoaded(this, new xe(D));
              },
              add_colorPickerDisplay: function(D) {
                this.__colorPickerDisplay = s.ss.bindAdd(this.__colorPickerDisplay, D);
              },
              remove_colorPickerDisplay: function(D) {
                this.__colorPickerDisplay = s.ss.bindSub(this.__colorPickerDisplay, D);
              },
              add_voTableDisplay: function(D) {
                this.__voTableDisplay = s.ss.bindAdd(this.__voTableDisplay, D);
              },
              remove_voTableDisplay: function(D) {
                this.__voTableDisplay = s.ss.bindSub(this.__voTableDisplay, D);
              },
              add_refreshLayerManager: function(D) {
                this.__refreshLayerManager = s.ss.bindAdd(this.__refreshLayerManager, D);
              },
              remove_refreshLayerManager: function(D) {
                this.__refreshLayerManager = s.ss.bindSub(this.__refreshLayerManager, D);
              },
              add_arrived: function(D) {
                this.__arrived = s.ss.bindAdd(this.__arrived, D);
              },
              remove_arrived: function(D) {
                this.__arrived = s.ss.bindSub(this.__arrived, D);
              },
              add_clicked: function(D) {
                this.__clicked = s.ss.bindAdd(this.__clicked, D);
              },
              remove_clicked: function(D) {
                this.__clicked = s.ss.bindSub(this.__clicked, D);
              },
              add_annotationClicked: function(D) {
                this.__annotationClicked = s.ss.bindAdd(this.__annotationClicked, D);
              },
              remove_annotationClicked: function(D) {
                this.__annotationClicked = s.ss.bindSub(this.__annotationClicked, D);
              },
              add_imageryLoaded: function(D) {
                this.__imageryLoaded = s.ss.bindAdd(this.__imageryLoaded, D);
              },
              remove_imageryLoaded: function(D) {
                this.__imageryLoaded = s.ss.bindSub(this.__imageryLoaded, D);
              },
              add_tourReady: function(D) {
                this.__tourReady = s.ss.bindAdd(this.__tourReady, D);
              },
              remove_tourReady: function(D) {
                this.__tourReady = s.ss.bindSub(this.__tourReady, D);
              },
              add_tourError: function(D) {
                this.__tourError = s.ss.bindAdd(this.__tourError, D);
              },
              remove_tourError: function(D) {
                this.__tourError = s.ss.bindSub(this.__tourError, D);
              },
              add_tourPaused: function(D) {
                this.__tourPaused = s.ss.bindAdd(this.__tourPaused, D);
              },
              remove_tourPaused: function(D) {
                this.__tourPaused = s.ss.bindSub(this.__tourPaused, D);
              },
              add_tourResumed: function(D) {
                this.__tourResumed = s.ss.bindAdd(this.__tourResumed, D);
              },
              remove_tourResumed: function(D) {
                this.__tourResumed = s.ss.bindSub(this.__tourResumed, D);
              },
              add_tourEnded: function(D) {
                this.__tourEnded = s.ss.bindAdd(this.__tourEnded, D);
              },
              remove_tourEnded: function(D) {
                this.__tourEnded = s.ss.bindSub(this.__tourEnded, D);
              },
              add_slideChanged: function(D) {
                this.__slideChanged = s.ss.bindAdd(this.__slideChanged, D);
              },
              remove_slideChanged: function(D) {
                this.__slideChanged = s.ss.bindSub(this.__slideChanged, D);
              },
              //UI will set this to a function that takes 2 string properties (prop,val)
              //("title", "left", or "right" for the labels, "pos" for the slider pos)
              //Pass a 0-1 float to set the slider position (stringify it if you need to for strong typing)
              add_timeScrubberHook: function(D) {
                this.__timeScrubberHook = s.ss.bindAdd(this.__timeScrubberHook, D);
              },
              remove_timeScrubberHook: function(D) {
                this.__timeScrubberHook = s.ss.bindSub(this.__timeScrubberHook, D);
              },
              setTimeScrubberPosition: function(D) {
                Ee.LayerManager.setTimeSliderValue(D);
              },
              setTimeSlider: function(D, ke) {
                this.__timeScrubberHook(D, ke);
              },
              showColorPicker: function(D, ke) {
                this.__colorPickerDisplay != null && this.__colorPickerDisplay(D, ke);
              },
              displayVoTableLayer: function(D) {
                this.__voTableDisplay != null && this.__voTableDisplay(D, new s.ss.EventArgs());
              },
              refreshLayerManagerNow: function() {
                this.__refreshLayerManager != null && this.__refreshLayerManager(null, new s.ss.EventArgs());
              },
              _fireTourReady: function() {
                this.__tourReady != null && this.__tourReady(this, new s.ss.EventArgs());
              },
              _fireTourError: function(D) {
                this.__tourError != null && this.__tourError(D, new s.ss.EventArgs());
              },
              _fireTourPaused: function() {
                this.__tourPaused != null && this.__tourPaused(this, new s.ss.EventArgs());
              },
              _fireTourResume: function() {
                this.__tourResumed != null && this.__tourResumed(this, new s.ss.EventArgs());
              },
              _fireTourEnded: function() {
                this.__tourEnded != null && this.__tourEnded(this, new s.ss.EventArgs());
              },
              _fireImageryLoaded: function() {
                this.__imageryLoaded != null && this.__imageryLoaded(this, new s.ss.EventArgs());
              },
              _fireClick: function(D, ke) {
                this.__clicked != null && this.__clicked(this, new Pe(D, ke, l.globalRenderContext.viewCamera.zoom));
              },
              _fireArrived: function(D, ke, Fe) {
                this.__arrived != null && this.__arrived(this, new Pe(D, ke, Fe));
              },
              _fireAnnotationclicked: function(D, ke, Fe) {
                try {
                  this.__annotationClicked != null && this.__annotationClicked(this, new b(D, ke, Fe));
                } catch {
                }
              },
              _fireSlideChanged: function(D) {
                try {
                  this.__slideChanged != null && this.__slideChanged(this, new Me(D));
                } catch {
                }
              },
              endInit: function() {
                this._missedReady && this._fireReady();
              },
              gotoRaDecZoom: function(D, ke, Fe, He, We) {
                o.globalWWTControl != null && o.globalWWTControl.gotoRADecZoom(D / 15, ke, Fe * 6, He, We);
              },
              setBackgroundImageByName: function(D) {
                o.globalWWTControl != null && o.globalWWTControl.setBackgroundImageByName(D);
              },
              // Call this to add a VOTable to layers
              addVoTableLayer: function(D) {
                return Ee.LayerManager.addVoTableLayer(D, "Vo Table");
              },
              getLayers: function() {
                return Ee.LayerManager.get_layerList();
              },
              setForegroundImageByName: function(D) {
                o.globalWWTControl != null && (o.globalWWTControl.setForegroundImageByName(D), l.globalRenderContext.viewCamera.opacity = 100);
              },
              setForegroundOpacity: function(D) {
                o.globalWWTControl != null && (l.globalRenderContext.viewCamera.opacity = D);
              },
              addCatalogHipsByName: function(D) {
                o.globalWWTControl != null && o.globalWWTControl.addCatalogHipsByName(D);
              },
              addCatalogHipsByNameWithCallback: function(D, ke) {
                o.globalWWTControl != null && o.globalWWTControl.addCatalogHipsByNameWithCallback(D, ke);
              },
              removeCatalogHipsByName: function(D) {
                o.globalWWTControl != null && o.globalWWTControl.removeCatalogHipsByName(D);
              },
              getCatalogHipsDataInView: function(D, ke, Fe) {
                o.globalWWTControl != null && o.globalWWTControl.getCatalogHipsDataInView(D, ke, Fe);
              },
              setCutsForFits: function(D, ke, Fe) {
                o.globalWWTControl != null && o.globalWWTControl.setCutsForFits(D, ke, Fe);
              },
              setColorMapForFits: function(D, ke) {
                o.globalWWTControl != null && o.globalWWTControl.setColorMapForFits(D, ke);
              },
              setScaleTypeForFits: function(D, ke) {
                o.globalWWTControl != null && o.globalWWTControl.setScaleTypeForFits(D, ke);
              },
              hideUI: function(D) {
              },
              loadTour: function(D) {
                o.globalWWTControl != null && o.globalWWTControl.playTour(D);
              },
              loadFits: function(D) {
                return this.loadFitsLayer(D, "", !0, null);
              },
              loadFitsLayer: function(D, ke, Fe, He) {
                return this.addImageSetLayer(D, "fits", ke, Fe, He);
              },
              addImageSetLayer: function(D, ke, Fe, He, We) {
                if (ke != null && ke.toLowerCase() === "fits")
                  return Se._addFitsLayer(D, Fe, He, We);
                if (ke != null && ke.toLowerCase() === "preloaded") {
                  var Ke = o.globalWWTControl.getImageSetByUrl(D);
                  if (Ke != null)
                    return Se._addImageSet(Fe, He, We, Ke);
                } else {
                  var Ke = o.globalWWTControl.getImageSetByUrl(D);
                  if (Ke != null)
                    return Se._addImageSet(Fe, He, We, Ke);
                  if (Se._containsFitsLikeExtentsion(D))
                    return Se._addFitsLayer(D, Fe, He, We);
                }
                return null;
              },
              setImageSetLayerOrder: function(D, ke) {
                var Fe = Ee.LayerManager.get_layerList()[D];
                s.ss.canCast(Fe, g.ImageSetLayer) && ke >= 0 && (s.ss.remove((0, o.layerManagerGetAllMaps)()[Fe.get_referenceFrame()].layers, Fe), (0, o.layerManagerGetAllMaps)()[Fe.get_referenceFrame()].layers.splice(ke, 0, Fe));
              },
              isUsingWebGl2: function() {
                return l.useGlVersion2;
              },
              get_hideTourFeedback: function() {
                return this.hideTourFeedback;
              },
              set_hideTourFeedback: function(D) {
                return this.hideTourFeedback = D, D;
              },
              playTour: function() {
                o.globalWWTControl != null && o.globalWWTControl.playCurrentTour();
              },
              stopTour: function() {
                o.globalWWTControl != null && o.globalWWTControl.stopCurrentTour();
              },
              loadImageCollection: function(D, ke) {
                var Fe = this;
                this._imageUrl = D, (0, o.loadWtmlFile)(D, function() {
                  Fe._fireCollectionLoaded(D);
                }, ke);
              },
              _imageFileLoaded: function() {
                this._fireCollectionLoaded(this._imageUrl);
              },
              zoom: function(D) {
                o.globalWWTControl != null && o.globalWWTControl.zoom(D);
              },
              getRA: function() {
                return o.globalWWTControl != null ? l.globalRenderContext.get_RA() : 0;
              },
              getDec: function() {
                return o.globalWWTControl != null ? l.globalRenderContext.get_dec() : 0;
              },
              createFolder: function() {
                var D = new Ve.Folder();
                return D;
              },
              createPolygon: function(D) {
                var ke = new c.Poly();
                return ke.set_fill(D), ke;
              },
              createPolyLine: function(D) {
                return new c.PolyLine();
              },
              createCircle: function(D) {
                var ke = new c.Circle();
                return ke.set_fill(D), ke;
              },
              addAnnotation: function(D) {
                D != null && s.ss.canCast(D, c.Annotation) && o.globalWWTControl != null && o.globalWWTControl._addAnnotation(D);
              },
              removeAnnotation: function(D) {
                D != null && o.globalWWTControl != null && o.globalWWTControl._removeAnnotation(D);
              },
              clearAnnotations: function() {
                o.globalWWTControl != null && o.globalWWTControl._clearAnnotations();
              },
              get_smoothAnimation: function() {
                return this._smoothAnimation;
              },
              set_smoothAnimation: function(D) {
                return this._smoothAnimation = D, D;
              },
              get_showCaptions: function() {
                return this._showCaptions;
              },
              set_showCaptions: function(D) {
                return this._showCaptions = D, D;
              },
              loadVOTable: function(D, ke) {
              },
              get_fov: function() {
                return o.globalWWTControl != null ? l.globalRenderContext.viewCamera.zoom / 6 : 60;
              }
            };
            (0, a.registerType)("ScriptInterface", [Se, Te, null]);
          }
        ),
        /***/
        "./esm/settings.js": (
          /*!*************************!*\
            !*** ./esm/settings.js ***!
            \*************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              SettingParameter: () => (
                /* binding */
                c
              ),
              /* harmony export */
              Settings: () => (
                /* binding */
                u
              ),
              /* harmony export */
              StockSkyOverlayTypes: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./color.js */
              "./esm/color.js"
            ), t = n(
              /*! ./constellation_filter.js */
              "./esm/constellation_filter.js"
            ), l = n(
              /*! ./interfaces.js */
              "./esm/interfaces.js"
            ), o = {
              empty: 0,
              equatorialGrid: 1,
              equatorialGridText: 2,
              galacticGrid: 3,
              galacticGridText: 4,
              eclipticGrid: 5,
              eclipticGridText: 6,
              eclipticOverview: 7,
              eclipticOverviewText: 8,
              precessionChart: 9,
              altAzGrid: 10,
              altAzGridText: 11,
              constellationFigures: 12,
              constellationBoundaries: 13,
              constellationFocusedOnly: 14,
              constellationNames: 15,
              constellationPictures: 16,
              fadeToBlack: 17,
              fadeToLogo: 18,
              fadeToGradient: 19,
              screenBroadcast: 20,
              fadeRemoteOnly: 21,
              skyGrids: 22,
              constellations: 23,
              solarSystemStars: 24,
              solarSystemMilkyWay: 25,
              solarSystemCosmos: 26,
              solarSystemOrbits: 27,
              solarSystemPlanets: 28,
              solarSystemAsteroids: 29,
              solarSystemLighting: 30,
              solarSystemMinorOrbits: 31,
              showEarthCloudLayer: 32,
              showElevationModel: 33,
              showAtmosphere: 34,
              multiResSolarSystemBodies: 35,
              auroraBorialis: 36,
              earthCutAway: 37,
              showSolarSystem: 38,
              clouds8k: 39,
              filedOfView: 40,
              showISSModel: 41,
              solarSystemCMB: 42,
              mpcZone1: 43,
              mpcZone2: 44,
              mpcZone3: 45,
              mpcZone4: 46,
              mpcZone5: 47,
              mpcZone6: 48,
              mpcZone7: 49,
              orbitFilters: 50
            };
            (0, s.registerType)("StockSkyOverlayTypes", o), (0, s.registerEnum)("StockSkyOverlayTypes", o);
            function c(g, Ee, Ve, Me) {
              this.targetState = !1, this.edgeTrigger = !1, this.opacity = 0, this.edgeTrigger = g, this.opacity = Ee, this.targetState = Ve, this.filter = Me;
            }
            var _ = {};
            (0, s.registerType)("SettingParameter", [c, _, null]);
            function u() {
              this.autoRepeatTour = !1, this._localHorizonMode = !1, this._galacticMode = !1, this._constellationBoundryColor = "blue", this._constellationSelectionColor = "yellow", this._constellationFigureColor = "red", this._showConstellationFigures = !0, this._showConstellationBoundries = !0, this._showConstellationSelection = !0, this._showCrosshairs = !0, this._crosshairsColor = "white", this._showEcliptic = !1, this._locationLat = 47.717, this._locationLng = -122.0858, this._locationAltitude = 100, this._showFiledOfView = !1, this._actualPlanetScale = !0, this._fovCamera = 0, this._fovEyepiece = 0, this._fovTelescope = 0, this._showClouds = !1, this._showGrid = !1, this._showHorizon = !0, this._showHorizonPanorama = !1, this._showMoonsAsPointSource = !0, this._showSolarSystem = !0, this._solarSystemStars = !0, this._solarSystemMilkyWay = !0, this._solarSystemCosmos = !0, this._solarSystemOrbits = !0, this._solarSystemOverlays = !0, this._solarSystemLighting = !0, this._solarSystemMultiRes = !0, this._solarSystemScale = 1, this._smoothPan = !0, this._showElevationModel = !0, this._showEquatorialGridText = !1, this._showGalacticGrid = !1, this._showGalacticGridText = !1, this._showEclipticGrid = !1, this._showEclipticGridText = !1, this._showEclipticOverviewText = !1, this._showAltAzGrid = !1, this._eclipticGridColor = a.Colors.get_green(), this._galacticGridColor = a.Colors.get_cyan(), this._altAzGridColor = a.Colors.get_magenta(), this._precessionChartColor = a.Colors.get_orange(), this._eclipticColor = a.Colors.get_blue(), this._equatorialGridColor = a.Colors.get_white(), this._showAltAzGridText = !1, this._showPrecessionChart = !1, this._showConstellationPictures = !1, this._showConstellationLabels = !1, this._constellationLabelsHeight = 80, this._solarSystemCMB = !0, this._solarSystemMinorPlanets = !1, this._solarSystemPlanets = !0, this._showEarthSky = !0, this._solarSystemMinorOrbits = !1, this._constellationsEnabled = "", this._constellationFiguresFilter = new t.ConstellationFilter(), this._constellationBoundariesFilter = new t.ConstellationFilter(), this._constellationNamesFilter = new t.ConstellationFilter(), this._constellationArtFilter = new t.ConstellationFilter(), this._showSkyOverlays = !0, this._showConstellations = !0, this._showSkyNode = !0, this._showSkyGrids = !0, this._showSkyOverlaysIn3d = !0, this._earthCutawayView = !1, this._showISSModel = !1, this._milkyWayModel = !1, this._minorPlanetsFilter = 255, this._planetOrbitsFilter = 2147483647, this._constellations = !0;
            }
            u._active = null, u.tourSettings = null, u.get_current = function() {
              return u._active == null && (u._active = new u()), u._active;
            }, u.get_globalSettings = function() {
              return u._active == null && (u._active = new u()), u._active;
            }, u.get_active = function() {
              return u._active == null && (u._active = new u()), u.tourSettings != null ? u.tourSettings : u._active;
            };
            var y = {
              get_constellationFigureColor: function() {
                return this._constellationFigureColor;
              },
              set_constellationFigureColor: function(g) {
                return this._constellationFigureColor = g, g;
              },
              get_constellationBoundryColor: function() {
                return this._constellationBoundryColor;
              },
              set_constellationBoundryColor: function(g) {
                return this._constellationBoundryColor = g, g;
              },
              get_constellationSelectionColor: function() {
                return this._constellationSelectionColor;
              },
              set_constellationSelectionColor: function(g) {
                return this._constellationSelectionColor = g, g;
              },
              get_showCrosshairs: function() {
                return this._showCrosshairs;
              },
              set_showCrosshairs: function(g) {
                return this._showCrosshairs = g, g;
              },
              get_smoothPan: function() {
                return this._smoothPan;
              },
              set_smoothPan: function(g) {
                return this._smoothPan = g, g;
              },
              get_crosshairsColor: function() {
                return this._crosshairsColor;
              },
              set_crosshairsColor: function(g) {
                return this._crosshairsColor = g, g;
              },
              get_actualPlanetScale: function() {
                return this._actualPlanetScale;
              },
              set_actualPlanetScale: function(g) {
                return this._actualPlanetScale = g, g;
              },
              get_fovCamera: function() {
                return this._fovCamera;
              },
              get_fovEyepiece: function() {
                return this._fovEyepiece;
              },
              get_fovTelescope: function() {
                return this._fovTelescope;
              },
              get_locationAltitude: function() {
                return this._locationAltitude;
              },
              set_locationAltitude: function(g) {
                return this._locationAltitude = g, g;
              },
              get_locationLat: function() {
                return this._locationLat;
              },
              set_locationLat: function(g) {
                return this._locationLat = g, g;
              },
              get_locationLng: function() {
                return this._locationLng;
              },
              set_locationLng: function(g) {
                return this._locationLng = g, g;
              },
              get_showClouds: function() {
                return this._showClouds;
              },
              get_showConstellationBoundries: function() {
                return this._showConstellationBoundries;
              },
              set_showConstellationBoundries: function(g) {
                return this._showConstellationBoundries = g, g;
              },
              get_showConstellationFigures: function() {
                return this._showConstellationFigures;
              },
              set_showConstellationFigures: function(g) {
                return this._showConstellationFigures = g, g;
              },
              get_showConstellationSelection: function() {
                return this._showConstellationSelection;
              },
              set_showConstellationSelection: function(g) {
                return this._showConstellationSelection = g, g;
              },
              get_showEcliptic: function() {
                return this._showEcliptic;
              },
              set_showEcliptic: function(g) {
                return this._showEcliptic = g, g;
              },
              get_showElevationModel: function() {
                return this._showElevationModel;
              },
              set_showElevationModel: function(g) {
                return this._showElevationModel = g, g;
              },
              get_showFieldOfView: function() {
                return this._showFiledOfView;
              },
              get_showGrid: function() {
                return this._showGrid;
              },
              set_showGrid: function(g) {
                return this._showGrid = g, g;
              },
              get_showHorizon: function() {
                return this._showHorizon;
              },
              set_showHorizon: function(g) {
                return this._showHorizon = g, g;
              },
              get_showHorizonPanorama: function() {
                return this._showHorizonPanorama;
              },
              get_showMoonsAsPointSource: function() {
                return this._showMoonsAsPointSource;
              },
              get_showSolarSystem: function() {
                return this._showSolarSystem;
              },
              set_showSolarSystem: function(g) {
                return this._showSolarSystem = g, g;
              },
              get_localHorizonMode: function() {
                return this._localHorizonMode;
              },
              set_localHorizonMode: function(g) {
                return this._localHorizonMode = g, g;
              },
              get_galacticMode: function() {
                return this._galacticMode;
              },
              set_galacticMode: function(g) {
                return this._galacticMode = g, g;
              },
              get_solarSystemStars: function() {
                return this._solarSystemStars;
              },
              set_solarSystemStars: function(g) {
                return this._solarSystemStars = g, g;
              },
              get_solarSystemMilkyWay: function() {
                return this._solarSystemMilkyWay;
              },
              set_solarSystemMilkyWay: function(g) {
                return this._solarSystemMilkyWay = g, g;
              },
              get_solarSystemCosmos: function() {
                return this._solarSystemCosmos;
              },
              set_solarSystemCosmos: function(g) {
                return this._solarSystemCosmos = g, g;
              },
              get_solarSystemOrbits: function() {
                return this._solarSystemOrbits;
              },
              set_solarSystemOrbits: function(g) {
                return this._solarSystemOrbits = g, g;
              },
              get_solarSystemOverlays: function() {
                return this._solarSystemOverlays;
              },
              set_solarSystemOverlays: function(g) {
                return this._solarSystemOverlays = g, g;
              },
              get_solarSystemLighting: function() {
                return this._solarSystemLighting;
              },
              set_solarSystemLighting: function(g) {
                return this._solarSystemLighting = g, g;
              },
              get_solarSystemMultiRes: function() {
                return !0;
              },
              set_solarSystemMultiRes: function(g) {
                return this._solarSystemMultiRes = g, g;
              },
              get_solarSystemScale: function() {
                return this._solarSystemScale;
              },
              set_solarSystemScale: function(g) {
                return this._solarSystemScale = g, g;
              },
              get_showEquatorialGridText: function() {
                return this._showEquatorialGridText;
              },
              set_showEquatorialGridText: function(g) {
                return this._showEquatorialGridText = g, g;
              },
              get_showGalacticGrid: function() {
                return this._showGalacticGrid;
              },
              set_showGalacticGrid: function(g) {
                return this._showGalacticGrid = g, g;
              },
              get_showGalacticGridText: function() {
                return this._showGalacticGridText;
              },
              set_showGalacticGridText: function(g) {
                return this._showGalacticGridText = g, g;
              },
              get_showEclipticGrid: function() {
                return this._showEclipticGrid;
              },
              set_showEclipticGrid: function(g) {
                return this._showEclipticGrid = g, g;
              },
              get_showEclipticGridText: function() {
                return this._showEclipticGridText;
              },
              set_showEclipticGridText: function(g) {
                return this._showEclipticGridText = g, g;
              },
              get_showEclipticOverviewText: function() {
                return this._showEclipticOverviewText;
              },
              set_showEclipticOverviewText: function(g) {
                return this._showEclipticOverviewText = g, g;
              },
              get_showAltAzGrid: function() {
                return this._showAltAzGrid;
              },
              set_showAltAzGrid: function(g) {
                return this._showAltAzGrid = g, g;
              },
              get_eclipticGridColor: function() {
                return this._eclipticGridColor;
              },
              set_eclipticGridColor: function(g) {
                return this._eclipticGridColor = g, g;
              },
              get_galacticGridColor: function() {
                return this._galacticGridColor;
              },
              set_galacticGridColor: function(g) {
                return this._galacticGridColor = g, g;
              },
              get_altAzGridColor: function() {
                return this._altAzGridColor;
              },
              set_altAzGridColor: function(g) {
                return this._altAzGridColor = g, g;
              },
              get_precessionChartColor: function() {
                return this._precessionChartColor;
              },
              set_precessionChartColor: function(g) {
                return this._precessionChartColor = g, g;
              },
              get_eclipticColor: function() {
                return this._eclipticColor;
              },
              set_eclipticColor: function(g) {
                return this._eclipticColor = g, g;
              },
              get_equatorialGridColor: function() {
                return this._equatorialGridColor;
              },
              set_equatorialGridColor: function(g) {
                return this._equatorialGridColor = g, g;
              },
              get_showAltAzGridText: function() {
                return this._showAltAzGridText;
              },
              set_showAltAzGridText: function(g) {
                return this._showAltAzGridText = g, g;
              },
              get_showPrecessionChart: function() {
                return this._showPrecessionChart;
              },
              set_showPrecessionChart: function(g) {
                return this._showPrecessionChart = g, g;
              },
              get_showConstellationPictures: function() {
                return this._showConstellationPictures;
              },
              set_showConstellationPictures: function(g) {
                return this._showConstellationPictures = g, g;
              },
              get_showConstellationLabels: function() {
                return this._showConstellationLabels;
              },
              set_showConstellationLabels: function(g) {
                return this._showConstellationLabels = g, g;
              },
              get_constellationLabelsHeight: function() {
                return this._constellationLabelsHeight;
              },
              set_constellationLabelsHeight: function(g) {
                return this._constellationLabelsHeight = g, g;
              },
              get_solarSystemCMB: function() {
                return this._solarSystemCMB;
              },
              set_solarSystemCMB: function(g) {
                return this._solarSystemCMB = g, g;
              },
              get_solarSystemMinorPlanets: function() {
                return this._solarSystemMinorPlanets;
              },
              set_solarSystemMinorPlanets: function(g) {
                return this._solarSystemMinorPlanets = g, g;
              },
              get_solarSystemPlanets: function() {
                return this._solarSystemPlanets;
              },
              set_solarSystemPlanets: function(g) {
                return this._solarSystemPlanets = g, g;
              },
              get_showEarthSky: function() {
                return this._showEarthSky;
              },
              set_showEarthSky: function(g) {
                return this._showEarthSky = g, g;
              },
              get_solarSystemMinorOrbits: function() {
                return this._solarSystemMinorOrbits;
              },
              set_solarSystemMinorOrbits: function(g) {
                return this._solarSystemMinorOrbits = g, g;
              },
              get_constellationsEnabled: function() {
                return this._constellationsEnabled;
              },
              set_constellationsEnabled: function(g) {
                return this._constellationsEnabled = g, g;
              },
              get_constellationFiguresFilter: function() {
                return this._constellationFiguresFilter;
              },
              set_constellationFiguresFilter: function(g) {
                return this._constellationFiguresFilter = g, g;
              },
              get_constellationBoundariesFilter: function() {
                return this._constellationBoundariesFilter;
              },
              set_constellationBoundariesFilter: function(g) {
                return this._constellationBoundariesFilter = g, g;
              },
              get_constellationNamesFilter: function() {
                return this._constellationNamesFilter;
              },
              set_constellationNamesFilter: function(g) {
                return this._constellationNamesFilter = g, g;
              },
              get_constellationArtFilter: function() {
                return this._constellationArtFilter;
              },
              set_constellationArtFilter: function(g) {
                return this._constellationArtFilter = g, g;
              },
              get_showSkyOverlays: function() {
                return this._showSkyOverlays;
              },
              set_showSkyOverlays: function(g) {
                return this._showSkyOverlays = g, g;
              },
              get_showConstellations: function() {
                return this._showConstellations;
              },
              set_showConstellations: function(g) {
                return this._showConstellations = g, g;
              },
              get_showSkyNode: function() {
                return this._showSkyNode;
              },
              set_showSkyNode: function(g) {
                return this._showSkyNode = g, g;
              },
              get_showSkyGrids: function() {
                return this._showSkyGrids;
              },
              set_showSkyGrids: function(g) {
                return this._showSkyGrids = g, g;
              },
              get_showSkyOverlaysIn3d: function() {
                return this._showSkyOverlaysIn3d;
              },
              set_showSkyOverlaysIn3d: function(g) {
                return this._showSkyOverlaysIn3d = g, g;
              },
              get_earthCutawayView: function() {
                return this._earthCutawayView;
              },
              set_earthCutawayView: function(g) {
                return this._earthCutawayView = g, g;
              },
              get_showISSModel: function() {
                return this._showISSModel;
              },
              set_showISSModel: function(g) {
                return this._showISSModel = g, g;
              },
              get_milkyWayModel: function() {
                return this._milkyWayModel;
              },
              set_milkyWayModel: function(g) {
                return this._milkyWayModel = g, g;
              },
              get_minorPlanetsFilter: function() {
                return this._minorPlanetsFilter;
              },
              set_minorPlanetsFilter: function(g) {
                return this._minorPlanetsFilter = g, g;
              },
              get_planetOrbitsFilter: function() {
                return this._planetOrbitsFilter;
              },
              set_planetOrbitsFilter: function(g) {
                return this._planetOrbitsFilter = g, g;
              },
              get_constellations: function() {
                return this._constellations;
              },
              set_constellations: function(g) {
                return this._constellations = g, g;
              },
              getSetting: function(g) {
                return g === 17 ? new c(!0, 0, !1, null) : new c(!1, 1, !1, null);
              }
            };
            (0, s.registerType)("Settings", [u, y, null, l.ISettings]);
          }
        ),
        /***/
        "./esm/sky_image_tile.js": (
          /*!*******************************!*\
            !*** ./esm/sky_image_tile.js ***!
            \*******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              SkyImageTile: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ./layers/wcs_image.js */
              "./esm/layers/wcs_image.js"
            ), o = n(
              /*! ./tangent_tile.js */
              "./esm/tangent_tile.js"
            );
            function c(u, y, g, Ee, Ve) {
              this.pixelCenterX = 0, this.pixelCenterY = 0, this.scaleX = 0.01, this.scaleY = 0.01, this.height = 0, this.width = 0, o.TangentTile.call(this, u, y, g, Ee, Ve), this.pixelCenterX = Ee.get_offsetX(), this.pixelCenterY = Ee.get_offsetY(), this.scaleX = -(this.scaleY = Ee.get_baseTileDegrees()), Ee.get_bottomsUp() && (this.scaleX = -this.scaleX), this.sphereCenter = this.geoTo3dTan(0, 0), this.radius = 1.25, this.computeBoundingSphere();
            }
            var _ = {
              getLatLngEdges: function() {
                var u = new o.LatLngEdges(), y = s.ss.safeCast(this.dataset.get_wcsImage(), l.WcsImage);
                return y != null && t.useGl ? t.useGlVersion2 ? (this.width = y.get_sizeX(), this.height = y.get_sizeY()) : (this.height = this.bmp.height, this.width = this.bmp.width, this.bmp.height !== y.get_sizeY() && (this.pixelCenterY += this.bmp.height - y.get_sizeY())) : this.texture != null ? (this.height = this.texture.naturalHeight, this.width = this.texture.naturalWidth) : (this.height = 256, this.width = 256), u.latMin = 0 + this.scaleY * (this.height - this.pixelCenterY), u.latMax = 0 - this.scaleY * this.pixelCenterY, u.lngMin = 0 + this.scaleX * this.pixelCenterX, u.lngMax = 0 - this.scaleX * (this.width - this.pixelCenterX), u;
              }
            };
            (0, a.registerType)("SkyImageTile", [c, _, o.TangentTile]);
          }
        ),
        /***/
        "./esm/sky_text.js": (
          /*!*************************!*\
            !*** ./esm/sky_text.js ***!
            \*************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Alignment: () => (
                /* binding */
                B
              ),
              /* harmony export */
              GlyphCache: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              GlyphItem: () => (
                /* binding */
                b
              ),
              /* harmony export */
              Text3d: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              Text3dBatch: () => (
                /* binding */
                Pe
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./baseutil.js */
              "./esm/baseutil.js"
            ), o = n(
              /*! ./color.js */
              "./esm/color.js"
            ), c = n(
              /*! ./graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), _ = n(
              /*! ./graphics/gl_buffers.js */
              "./esm/graphics/gl_buffers.js"
            ), u = n(
              /*! ./graphics/texture.js */
              "./esm/graphics/texture.js"
            ), y = n(
              /*! ./graphics/shaders.js */
              "./esm/graphics/shaders.js"
            ), g = n(
              /*! ./tours/text_object.js */
              "./esm/tours/text_object.js"
            ), Ee = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), Ve = n(
              /*! ./util.js */
              "./esm/util.js"
            ), Me = n(
              /*! ./web_file.js */
              "./esm/web_file.js"
            ), B = {
              center: 0,
              left: 1
            };
            (0, a.registerType)("Alignment", B), (0, a.registerEnum)("Alignment", B);
            function Pe(D) {
              this.height = 128, this.items = [], this._glyphVersion = -1, this.viewTransform = t.Matrix3d.get_identity(), this._textObject = new g.TextObject(), this._vertCount = 0, this.height = D * 3;
            }
            var k = {
              add: function(D) {
                this.items.push(D);
              },
              draw: function(D, ke, Fe) {
                if (D.gl == null)
                  for (var He = t.Vector3d._transformCoordinate(D.get_viewPoint(), this.viewTransform), We = this.height / D.get_fovAngle() * D.height / 180, Ke = s.ss.enumerate(this.items); Ke.moveNext(); ) {
                    var $ = Ke.current, De = D.WVP.transform($.center);
                    if (!(De.z < 0) && !(t.Vector3d.dot(He, $.center) < 0.55)) {
                      var Re = D.WVP.transform($.top), Ie = Math.atan2(De.x - Re.x, De.y - Re.y), O = D.device;
                      O.save(), O.translate(De.x, De.y), O.rotate(-Ie), O.globalAlpha = ke, O.fillStyle = Fe.toString(), O.font = "normal normal " + Math.round(We * 1.2).toString() + "px Arial", O.textBaseline = "top";
                      var Ue = O.measureText($.text);
                      O.fillText($.text, -Ue.width / 2, -We / 2), O.restore();
                    }
                  }
                else {
                  if ((this._glyphCache == null || this._glyphCache.get_version() > this._glyphVersion) && this.prepareBatch(), !this._glyphCache.ready)
                    return;
                  y.TextShader.use(D, this._vertexBuffer.vertexBuffer, this._glyphCache.get_texture().texture2d), D.gl.drawArrays(c.WEBGL.TRIANGLES, 0, this._vertexBuffer.count);
                }
              },
              prepareBatch: function() {
                if (this._glyphCache == null && (this._glyphCache = xe.getCache(this.height)), !!this._glyphCache.ready) {
                  this._textObject.text = "", this._textObject.fontSize = this.height * 0.5;
                  for (var D = [], ke = s.ss.enumerate(this.items); ke.moveNext(); ) {
                    for (var Fe = ke.current, He = Fe.text, We = 0, Ke = this._textObject.fontSize / 128, $ = 0.6666, De = 0, Re = 0, Ie = 0; Ie < He.length; Ie++) {
                      var O = this._glyphCache.getGlyphItem(He.substr(Ie, 1));
                      O != null && (De += O.extents.x, Re = Math.max(O.extents.y, Re));
                    }
                    var Ue = t.Vector2d.create(De, Re);
                    Fe.width = Ue.x * Fe.scale * $ * Ke, Fe.height = Ue.y * Fe.scale * $ * Ke;
                    for (var $e = He.length, Ie = 0; Ie < $e; Ie++) {
                      var O = this._glyphCache.getGlyphItem(He.substr(Ie, 1));
                      if (O != null) {
                        var Ze = Ve.Rectangle.create(We * Fe.scale * $, 0 * Fe.scale * $, O.extents.x * Ke * Fe.scale * $, O.extents.y * Ke * Fe.scale * $);
                        We += O.extents.x * Ke, Fe.addGlyphPoints(D, O.size, Ze, O.uvRect);
                      }
                    }
                  }
                  this._vertCount = D.length, this._vertexBuffer = new _.PositionTextureVertexBuffer(this._vertCount);
                  for (var Qe = this._vertexBuffer.lock(), Ie = 0; Ie < this._vertCount; Ie++)
                    Qe[Ie] = D[Ie];
                  this._vertexBuffer.unlock(), this._glyphVersion = this._glyphCache.get_version();
                }
              },
              cleanUp: function() {
                this._vertexBuffer != null && (this._vertexBuffer = null), this.items.length = 0;
              }
            };
            (0, a.registerType)("Text3dBatch", [Pe, k, null]);
            function b(D) {
              this.referenceCount = 0, this.glyph = D, this.uvRect = new Ve.Rectangle(), this.size = new t.Vector2d(), this.referenceCount = 1;
            }
            b.create = function(D, ke, Fe, He) {
              var We = new b(D);
              return We.glyph = D, We.uvRect = ke, We.size = Fe, We.extents = He, We.referenceCount = 1, We;
            }, b._fromXML = function(D) {
              var ke = D.attributes.getNamedItem("Glyph").nodeValue, Fe = new b(ke);
              return Fe.uvRect = Ve.Rectangle.create(parseFloat(D.attributes.getNamedItem("UVLeft").nodeValue), parseFloat(D.attributes.getNamedItem("UVTop").nodeValue), parseFloat(D.attributes.getNamedItem("UVWidth").nodeValue), parseFloat(D.attributes.getNamedItem("UVHeight").nodeValue)), Fe.size = t.Vector2d.create(parseFloat(D.attributes.getNamedItem("SizeWidth").nodeValue), parseFloat(D.attributes.getNamedItem("SizeHeight").nodeValue)), Fe.extents = t.Vector2d.create(parseFloat(D.attributes.getNamedItem("ExtentsWidth").nodeValue), parseFloat(D.attributes.getNamedItem("ExtentsHeight").nodeValue)), Fe;
            };
            var Le = {
              addRef: function() {
                this.referenceCount++;
              },
              release: function() {
                this.referenceCount--;
              }
            };
            (0, a.registerType)("GlyphItem", [b, Le, null]);
            function xe(D) {
              this._cellHeight = 128, this._gridSize = 8, this.ready = !1, this._glyphItems = {}, this.textObject = new g.TextObject(), this._dirty = !0, this._textureDirty = !0, this._version = 0, this._cellHeight = D, this._texture = u.Texture.fromUrl(Ee.URLHelpers.singleton.engineAssetUrl("glyphs1.png")), this._webFile = new Me.WebFile(Ee.URLHelpers.singleton.engineAssetUrl("glyphs1.xml")), this._webFile.onStateChange = s.ss.bind("_glyphXmlReady", this), this._webFile.send();
            }
            xe._caches = {}, xe._allGlyphs = "", xe.getCache = function(D) {
              return s.ss.keyExists(xe._caches, D) || (xe._caches[D] = new xe(D)), xe._caches[D];
            }, xe.cleanUpAll = function() {
              s.ss.clearKeys(xe._caches);
            };
            var ze = {
              get_height: function() {
                return this._cellHeight;
              },
              _glyphXmlReady: function() {
                this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && this._loadXmlGlyph(this._webFile.getXml());
              },
              _loadXmlGlyph: function(D) {
                for (var ke = l.Util.selectSingleNode(D, "GlyphItems"), Fe = s.ss.enumerate(ke.childNodes); Fe.moveNext(); ) {
                  var He = Fe.current;
                  if (He.nodeName === "GlyphItem") {
                    var We = b._fromXML(He);
                    this._glyphItems[We.glyph] = We, xe._allGlyphs = xe._allGlyphs + We.glyph;
                  }
                }
                this.ready = !0;
              },
              get_texture: function() {
                return this._texture;
              },
              _makeTexture: function() {
                this._calcOrMake(!0);
              },
              getGlyphItem: function(D) {
                return this._dirty && this._calculateGlyphDetails(), this._glyphItems[D];
              },
              _calculateGlyphDetails: function() {
                this._calcOrMake(!1);
              },
              _calcOrMake: function(D) {
              },
              get_version: function() {
                return this._version;
              },
              set_version: function(D) {
                return this._version = D, D;
              },
              addGlyph: function(D) {
                if (s.ss.keyExists(this._glyphItems, D))
                  this._glyphItems[D].addRef();
                else {
                  var ke = new b(D);
                  this._glyphItems[D] = ke, this._dirty = !0, this._textureDirty = !0, this._version++, xe._allGlyphs = xe._allGlyphs + D;
                }
              },
              cleanUp: function() {
                this._dirty = !0, this._texture = null;
              },
              dispose: function() {
                this.cleanUp();
              },
              get_dirty: function() {
                return this._dirty;
              },
              set_dirty: function(D) {
                return this._dirty = D, D;
              }
            };
            (0, a.registerType)("GlyphCache", [xe, ze, null, s.ss.IDisposable]);
            function Se(D, ke, Fe, He, We) {
              this.rotation = 0, this.tilt = 0, this.bank = 0, this._matInit = !1, this.color = o.Colors.get_white(), this.sky = !0, this.scale = 0, this.opacity = 1, this.text = "", this.width = 1, this.height = 1, this.alignment = 0, this.text = Fe, this.up = ke, this.center = D, this.scale = We, this.top = t.Vector3d.addVectors(D, t.Vector3d.scale(ke, We)), He < 0 && (this.sky = !1);
            }
            var Te = {
              addGlyphPoints: function(D, ke, Fe, He) {
                for (var We = new Array(6), Ke = 0; Ke < 6; Ke++)
                  We[Ke] = new t.PositionTexture();
                var $ = t.Vector3d.cross(this.center, this.up), De = t.Vector3d.cross(this.up, this.center);
                $.normalize(), De.normalize(), this.up.normalize();
                var Re = t.Vector3d.cross(this.center, De);
                Re.normalize(), this.alignment ? this.alignment === 1 && ($.multiply(-Fe.get_left() * 2), De.multiply(Fe.get_right() * 2)) : ($.multiply(this.width - Fe.get_left() * 2), De.multiply(this.width - (this.width * 2 - Fe.get_right() * 2)));
                var Ie = Re.copy(), O = t.Vector3d.subtractVectors(t.Vector3d.get_empty(), Re);
                Ie.multiply(this.height - Fe.get_top() * 2), O.multiply(this.height - (this.height * 2 - Fe.get_bottom() * 2));
                var Ue = this.center.copy();
                Ue.add(Ie), this.sky ? Ue.add($) : Ue.subtract($);
                var $e = this.center.copy();
                $e.add(Ie), this.sky ? $e.add(De) : $e.subtract(De);
                var Ze = this.center.copy();
                this.sky ? Ze.add($) : Ze.subtract($), Ze.add(O);
                var Qe = this.center.copy();
                if (this.sky ? Qe.add(De) : Qe.subtract(De), Qe.add(O), We[0].position = Ue.copy(), We[0].tu = He.get_left(), We[0].tv = He.get_top(), We[2].tu = He.get_left(), We[2].tv = He.get_bottom(), We[2].position = Ze.copy(), We[1].tu = He.get_right(), We[1].tv = He.get_top(), We[1].position = $e.copy(), We[3].tu = He.get_right(), We[3].tv = He.get_bottom(), We[3].position = Qe.copy(), We[5].tu = He.get_right(), We[5].tv = He.get_top(), We[5].position = $e.copy(), We[4].tu = He.get_left(), We[4].tv = He.get_bottom(), We[4].position = Ze.copy(), this.rotation || this.tilt || this.bank) {
                  if (!this._matInit) {
                    var Ae = t.Matrix3d.lookAtLH(this.center, new t.Vector3d(), this.up), Ne = Ae.clone();
                    Ne.invert(), this._rtbMat = t.Matrix3d.multiplyMatrix(t.Matrix3d.multiplyMatrix(t.Matrix3d.multiplyMatrix(t.Matrix3d.multiplyMatrix(Ae, t.Matrix3d._rotationZ(-this.rotation / 180 * Math.PI)), t.Matrix3d._rotationX(-this.tilt / 180 * Math.PI)), t.Matrix3d._rotationY(-this.bank / 180 * Math.PI)), Ne), this._matInit = !0;
                  }
                  for (var Ke = 0; Ke < 6; Ke++)
                    We[Ke].position = t.Vector3d._transformCoordinate(We[Ke].position, this._rtbMat);
                }
                for (var Be = s.ss.enumerate(We); Be.moveNext(); ) {
                  var Ge = Be.current;
                  D.push(Ge);
                }
              }
            };
            (0, a.registerType)("Text3d", [Se, Te, null]);
          }
        ),
        /***/
        "./esm/space_time_controller.js": (
          /*!**************************************!*\
            !*** ./esm/space_time_controller.js ***!
            \**************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              SpaceTimeController: () => (
                /* binding */
                _
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./astrocalc/date.js */
              "./esm/astrocalc/date.js"
            ), l = n(
              /*! ./astrocalc.js */
              "./esm/astrocalc.js"
            ), o = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), c = n(
              /*! ./settings.js */
              "./esm/settings.js"
            );
            function _() {
            }
            _.framesPerSecond = 30, _.frameDumping = !1, _.cancelFrameDump = !1, _.currentFrameNumber = 0, _.totalFrames = 0, _._offset = 0, _._syncToClock = !0, _._timeRate = 1, _._altitude = 0, _.updateClock = function() {
              if (_._syncToClock) {
                var y = _.get_metaNow();
                if (_._timeRate !== 1) {
                  var g = y.getTime() - _.last.getTime(), Ee = g * _._timeRate;
                  _._offset += Ee;
                }
                _.last = y;
                try {
                  _._now = new Date(y.getTime() + _._offset);
                } catch {
                  _._now = new Date(1, 12, 25, 23, 59, 59), _._offset = _._now - _.get_metaNow();
                }
                _._now.getFullYear() > 4e3 && (_._now = new Date(4e3, 12, 31, 23, 59, 59), _._offset = _._now - _.get_metaNow()), _._now.getFullYear() < 1 && (_._now = new Date(0, 12, 25, 23, 59, 59), _._offset = _._now - _.get_metaNow());
              }
            }, _.getTimeForFutureTime = function(y) {
              try {
                if (_._syncToClock) {
                  var g = new Date(_.get_now().getTime() + y * 1e3 * _._timeRate);
                  return g;
                } else
                  return _.get_now();
              } catch {
                return _.get_now();
              }
            }, _.getJNowForFutureTime = function(y) {
              try {
                if (_._syncToClock) {
                  var g = new Date(_.get_now().getTime() + a.ss.truncate(y * 1e3 * _._timeRate));
                  return _.utcToJulian(g);
                } else
                  return _.utcToJulian(_.get_now());
              } catch {
                return _.utcToJulian(_.get_now());
              }
            }, _.get_now = function() {
              return _._now;
            }, _.set_now = function(y) {
              return _._now = y, _._offset = _._now - _.get_metaNow(), _.last = _.get_metaNow(), y;
            }, _.get_metaNow = function() {
              return _._metaNow;
            }, _.set_metaNow = function(y) {
              return _.frameDumping || (_._metaNow = y), y;
            }, _.nextFrame = function() {
              _._metaNow.setMilliseconds(_._metaNow.getMilliseconds() + Math.round(1e3 / _.framesPerSecond)), _.currentFrameNumber += 1;
            }, _.get_doneDumping = function() {
              return !_.frameDumping || _.cancelFrameDump || _.currentFrameNumber >= _.totalFrames;
            }, _.syncTime = function() {
              _._offset = 0, _._now = a.ss.now(), _._syncToClock = !0;
            }, _.get_jNow = function() {
              return _.utcToJulian(_.get_now());
            }, _.get_syncToClock = function() {
              return _._syncToClock;
            }, _.set_syncToClock = function(y) {
              return _._syncToClock !== y && (_._syncToClock = y, y ? (_.last = a.ss.now(), _._offset = _._now - a.ss.now()) : _._now = new Date(a.ss.now().getTime() + _._offset)), y;
            }, _.get_timeRate = function() {
              return _._timeRate;
            }, _.set_timeRate = function(y) {
              return _._timeRate = y, y;
            }, _.get_altitude = function() {
              return _._altitude;
            }, _.set_altitude = function(y) {
              return _._altitude = y, y;
            }, _.get_location = function() {
              return _._location = o.Coordinates.fromLatLng(c.Settings.get_active().get_locationLat(), c.Settings.get_active().get_locationLng()), _._altitude = c.Settings.get_active().get_locationAltitude(), _._location;
            }, _.set_location = function(y) {
              return c.Settings.get_globalSettings().get_locationLat() !== y.get_lat() && c.Settings.get_globalSettings().set_locationLat(y.get_lat()), c.Settings.get_globalSettings().get_locationLng() !== y.get_lng() && c.Settings.get_globalSettings().set_locationLng(y.get_lng()), _._location = y, y;
            }, _.julianToUtc = function(y) {
              var g = new t.DT();
              g.setJD(y, !0);
              var Ee = (g.second() - a.ss.truncate(g.second())) * 1e3;
              return new Date(g.year(), g.month() - 1, g.day(), g.hour(), g.minute(), a.ss.truncate(g.second()), a.ss.truncate(Ee));
            }, _._twoLineDateToJulian = function(y) {
              var g = parseInt(y.substring(0, 1)) < 6, Ee = parseInt((g ? " 20" : "19") + y.substring(0, 2)), Ve = parseFloat(y.substring(2, 3)), Me = parseFloat(y.substr(5)), B = new Date(Ee, 0, 1, 0, 0);
              return _.utcToJulian(B) + (Ve - 1 + Me);
            }, _.julianToTwoLineDate = function(y) {
              return _.dateToTwoLineDate(_.julianToUtc(y));
            }, _.dateToTwoLineDate = function(y) {
              var g = new a.ss.StringBuilder();
              g.append(y.getFullYear() % 100);
              var Ee = new Date(y.getFullYear(), 0, 1, 0, 0), Ve = Math.floor((y - Ee) / (60 * 60 * 24 * 1e3)) + 2, Me = Ve + y.getHours() / 24 + y.getMinutes() / 60 / 24 + y.getSeconds() / 60 / 60 / 24 + y.getMilliseconds() / 1e3 / 60 / 60 / 24, B = _.tleDayString(Me);
              return g.append(B), g.toString();
            }, _.tleDayString = function(y) {
              var g = y.toString(), Ee = g.indexOf(".");
              Ee === -1 && (Ee = g.length, g += ".0");
              var Ve = g.length - Ee - 1, Me = "00000000";
              return g = Me.substr(0, 3 - Ee) + g + Me.substr(0, 8 - Ve), g;
            }, _.utcToJulian = function(y) {
              var g = y.getUTCFullYear(), Ee = y.getUTCMonth() + 1, Ve = y.getUTCDate(), Me = y.getUTCHours(), B = y.getUTCMinutes(), Pe = y.getUTCSeconds() + y.getUTCMilliseconds() / 1e3, k = Ve + Me / 24 + B / 1440 + Pe / 86400;
              return l.AstroCalc.getJulianDay(g, Ee, k);
            }, _.dateToJD = function(y, g, Ee, Ve) {
              var Me = y, B = g;
              B < 3 && (Me = Me - 1, B = B + 12);
              var Pe = 0, k = 0;
              return Ve && (Pe = a.ss.truncate(Me / 100), k = 2 - Pe + a.ss.truncate(Pe / 4)), a.ss.truncate(365.25 * (Me + 4716)) + a.ss.truncate(30.6001 * (B + 1)) + Ee + k - 1524.5;
            };
            var u = {};
            (0, s.registerType)("SpaceTimeController", [_, u, null]);
          }
        ),
        /***/
        "./esm/ss.js": (
          /*!*******************!*\
            !*** ./esm/ss.js ***!
            \*******************/
          /***/
          (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
              /* harmony export */
              ss: () => (
                /* binding */
                ss
              )
              /* harmony export */
            });
            /*! Script# Runtime
             * Designed and licensed for use and distribution with Script#-generated scripts.
             * Copyright (c) 2012, Nikhil Kothari, and the Script# Project.
             * More information at http://scriptsharp.com
             */
            function _ss() {
              function _nop() {
              }
              function isValue(e) {
                return e != null;
              }
              function _value(e) {
                for (var r = 2, n = e.length; r < n; r++)
                  if (isValue(e[r]))
                    return e[r];
                return null;
              }
              function value(e, r) {
                return isValue(e) ? e : isValue(r) ? r : _value(arguments);
              }
              function extend(e, r) {
                for (var n in r)
                  e[n] = r[n];
                return e;
              }
              function parseBoolean(e) {
                return e.toLowerCase() == "true";
              }
              function parseRegExp(e) {
                if (e[0] == "/") {
                  var r = e.lastIndexOf("/");
                  if (r > 1) {
                    var n = e.substring(1, r), s = e.substr(r + 1);
                    return new RegExp(n, s);
                  }
                }
                return null;
              }
              function parseNumber(e) {
                return !e || !e.length ? 0 : e.indexOf(".") >= 0 || e.indexOf("e") >= 0 || endsWith(e, "f") || endsWith(e, "F") ? parseFloat(e) : parseInt(e, 10);
              }
              function parseDate(e) {
                var r = Date.parse(e);
                return isNaN(r) ? void 0 : new Date(r);
              }
              function truncate(e) {
                return e >= 0 ? Math.floor(e) : Math.ceil(e);
              }
              function now() {
                return /* @__PURE__ */ new Date();
              }
              function today() {
                var e = /* @__PURE__ */ new Date();
                return new Date(e.getFullYear(), e.getMonth(), e.getDate());
              }
              function compareDates(e, r) {
                return e === r ? !0 : isValue(e) && isValue(r) ? e.getTime() == r.getTime() : !1;
              }
              function _popStackFrame(e) {
                if (!(!isValue(e.stack) || !isValue(e.fileName) || !isValue(e.lineNumber))) {
                  for (var r = e.stack.split(`
`), n = r[0], s = e.fileName + ":" + e.lineNumber; isValue(n) && n.indexOf(s) === -1; )
                    r.shift(), n = r[0];
                  var a = r[1];
                  if (isValue(a)) {
                    var t = a.match(/@(.*):(\d+)$/);
                    isValue(t) && (r.shift(), e.stack = r.join(`
`), e.fileName = t[1], e.lineNumber = parseInt(t[2], 10));
                  }
                }
              }
              function error(e, r, n) {
                var s = new Error(e);
                if (r)
                  for (var a in r)
                    s[a] = r[a];
                return n && (s.innerException = n), _popStackFrame(s), s;
              }
              function fail(message) {
                console.assert(!1, message), globalThis.navigator && eval("debugger;");
              }
              function toArray(e) {
                return e ? typeof e == "string" ? JSON.parse("(" + e + ")") : Array.prototype.slice.call(e) : null;
              }
              function removeItem(e, r) {
                var n = e.indexOf(r);
                return n >= 0 ? (e.splice(n, 1), !0) : !1;
              }
              function clearKeys(e) {
                for (var r in e)
                  delete e[r];
              }
              function keyExists(e, r) {
                return e[r] !== void 0;
              }
              function keys(e) {
                if (Object.keys)
                  return Object.keys(e);
                var r = [];
                for (var n in e)
                  r.push(n);
                return r;
              }
              function keyCount(e) {
                return keys(e).length;
              }
              function Enumerator(e, r) {
                var n = -1, s = r ? r.length : e.length, a = r ? function() {
                  return { key: r[n], value: e[r[n]] };
                } : function() {
                  return e[n];
                };
                this.current = null, this.moveNext = function() {
                  return n++, this.current = a(), n < s;
                }, this.reset = function() {
                  n = -1, this.current = null;
                };
              }
              var _nopEnumerator = {
                current: null,
                moveNext: function() {
                  return !1;
                },
                reset: _nop
              };
              function enumerate(e) {
                return isValue(e) ? e.getEnumerator ? e.getEnumerator() : e.length !== void 0 ? new Enumerator(e) : new Enumerator(e, keys(e)) : _nopEnumerator;
              }
              function Stack() {
                this.count = 0, this._items = [];
              }
              var Stack$ = {
                clear: function() {
                  this._items.length = 0, this.count = 0;
                },
                contains: function(e) {
                  for (var r = this.count - 1; r >= 0; r--)
                    if (this._items[r] === e)
                      return !0;
                  return !1;
                },
                getEnumerator: function() {
                  return new Enumerator(this._items.reverse());
                },
                peek: function() {
                  return this._items[this.count - 1];
                },
                push: function(e) {
                  this._items.push(e), this.count++;
                },
                pop: function() {
                  if (this.count)
                    return this.count--, this._items.pop();
                }
              };
              function Queue() {
                this.count = 0, this._items = [], this._offset = 0;
              }
              function _cleanQueue(e) {
                e._items = e._items.slice(e._offset), e._offset = 0;
              }
              var Queue$ = {
                clear: function() {
                  this._items.length = 0, this._offset = 0, this.count = 0;
                },
                contains: function(e) {
                  for (var r = this._offset, n = this._items.length; r <= n; r++)
                    if (this._items[r] === e)
                      return !0;
                  return !1;
                },
                dequeue: function() {
                  if (this.count) {
                    var e = this._items[this._offset];
                    return ++this._offset * 2 >= this._items.length && _cleanQueue(this), this.count--, e;
                  }
                },
                enqueue: function(e) {
                  this._items.push(e), this.count++;
                },
                getEnumerator: function() {
                  return this._offset != 0 && _cleanQueue(this), new Enumerator(this._items);
                },
                peek: function() {
                  return this._items.length ? this._items[this._offset] : void 0;
                }
              };
              function string(e, r) {
                return typeof r == "number" ? r > 1 ? new Array(r + 1).join(e) : e : Array.prototype.join.call(arguments, "");
              }
              function emptyString(e) {
                return !e || !e.length;
              }
              function whitespace(e) {
                return emptyString(e) || !e.replace(/^\s*/, "").length;
              }
              function compareStrings(e, r, n) {
                return e = e || "", r = r || "", n && (e = e.toUpperCase(), r = r.toUpperCase()), e === r ? 0 : e < r ? -1 : 1;
              }
              var _formatPlaceHolderRE = /(\{[^}^{]+\})/g, _formatters = {};
              function format(e) {
                var r = neutralCulture, n = e, s = Array.prototype.slice.call(arguments, 1);
                return e.constructor != String && (r = e, n = s[0], s = s.slice(1)), n.replace(
                  _formatPlaceHolderRE,
                  function(a, t) {
                    var l = parseInt(t.substr(1), 10), o = s[l];
                    if (!isValue(o))
                      return "";
                    var c = _formatters[typeName(o)];
                    if (c) {
                      var _ = "", u = t.indexOf(":");
                      if (u > 0 && (_ = t.substring(u + 1, t.length - 1)), _ && _ != "i")
                        return c(o, _, r);
                    }
                    return r == neutralCulture ? o.toString() : o.toLocaleString();
                  }
                );
              }
              function trim(e, r) {
                if (r || !String.prototype.trim) {
                  r = r ? r.join("") : null;
                  var n = r ? new RegExp("^[" + r + "]+|[" + r + "]+$", "g") : /^\s+|\s+$/g;
                  return e.replace(n, "");
                }
                return e.trim();
              }
              function trimStart(e, r) {
                var n = r ? new RegExp("^[" + r.join("") + "]+") : /^\s+/;
                return e.replace(n, "");
              }
              function trimEnd(e, r) {
                var n = r ? new RegExp("[" + r.join("") + "]+$") : /\s+$/;
                return e.replace(n, "");
              }
              function startsWith(e, r) {
                return emptyString(r) ? !0 : emptyString(e) || r.length > e.length ? !1 : e.substr(0, r.length) == r;
              }
              function endsWith(e, r) {
                return emptyString(r) ? !0 : emptyString(e) || r.length > e.length ? !1 : e.substr(-r.length) == r;
              }
              function padLeft(e, r, n) {
                return e.length < r ? string(n || " ", r - e.length) + e : e;
              }
              function padRight(e, r, n) {
                return e.length < r ? e + string(n || " ", r - e.length) : e;
              }
              function removeString(e, r, n) {
                return !n || r + n > e.length ? e.substr(0, r) : e.substr(0, r) + e.substr(r + n);
              }
              function insertString(e, r, n) {
                return n ? r ? e.substr(0, r) + n + e.substr(r) : n + e : e;
              }
              function replaceString(e, r, n) {
                return e.split(r).join(n || "");
              }
              function _bindList(e) {
                var r = function() {
                  for (var n = arguments, s = null, a = 0, t = e.length; a < t; a++)
                    s = n.length ? e[a].apply(null, n) : e[a].call(null);
                  return s;
                };
                return r._fnList = e, r;
              }
              function bind(e, r) {
                if (!r)
                  return e;
                var n = null;
                e = typeof e == "string" ? r[n = e] : e;
                var s = n ? r.$$b || (r.$$b = {}) : null, a = s ? s[n] : null;
                return a || (a = function() {
                  return e.apply(r, arguments);
                }, s && (s[n] = a)), a;
              }
              function bindAdd(e, r) {
                if (!e)
                  return r;
                if (!r)
                  return e;
                var n = [].concat(e._fnList || e, r);
                return _bindList(n);
              }
              function bindSub(e, r) {
                if (!e)
                  return null;
                if (!r)
                  return e;
                var n = e._fnList || [e], s = n.indexOf(r);
                return s >= 0 ? n.length == 1 ? null : (n = s ? n.slice(0, s).concat(n.slice(s + 1)) : n.slice(1), _bindList(n)) : e;
              }
              function bindExport(e, r, n, s) {
                n = n || "__" + (/* @__PURE__ */ new Date()).valueOf(), s = s || globalThis;
                var a = {
                  name: n,
                  detach: function() {
                    s[n] = _nop;
                  },
                  dispose: function() {
                    try {
                      delete s[n];
                    } catch {
                      s[n] = void 0;
                    }
                  }
                };
                return s[n] = r ? e : function() {
                  return a.dispose(), e.apply(null, arguments);
                }, a;
              }
              function EventArgs() {
              }
              EventArgs.Empty = new EventArgs();
              function CancelEventArgs() {
                this.cancel = !1;
              }
              function IDisposable() {
              }
              function IEnumerable() {
              }
              function IEnumerator() {
              }
              function IObserver() {
              }
              function IApplication() {
              }
              function IContainer() {
              }
              function IObjectFactory() {
              }
              function IEventManager() {
              }
              function IInitializable() {
              }
              function StringBuilder(e) {
                this._parts = isValue(e) && e !== "" ? [e] : [], this.isEmpty = this._parts.length == 0;
              }
              var StringBuilder$ = {
                append: function(e) {
                  return isValue(e) && e !== "" && (this._parts.push(e), this.isEmpty = !1), this;
                },
                appendLine: function(e) {
                  return this.append(e), this.append(`\r
`), this.isEmpty = !1, this;
                },
                clear: function() {
                  this._parts = [], this.isEmpty = !0;
                },
                toString: function(e) {
                  return this._parts.join(e || "");
                }
              }, _observerStack = [], _observerRegistration = {
                dispose: function() {
                  _observerStack.pop();
                }
              };
              function _captureObservers(e) {
                var r = _observerStack, n = r.length;
                if (n) {
                  e = e || [];
                  for (var s = 0; s < n; s++) {
                    var a = r[s];
                    e.indexOf(a) < 0 && e.push(a);
                  }
                  return e;
                }
                return null;
              }
              function _invalidateObservers(e) {
                for (var r = 0, n = e.length; r < n; r++)
                  e[r].invalidateObserver();
              }
              function Observable(e) {
                this._v = e, this._observers = null;
              }
              var Observable$ = {
                getValue: function() {
                  return this._observers = _captureObservers(this._observers), this._v;
                },
                setValue: function(e) {
                  if (this._v !== e) {
                    this._v = e;
                    var r = this._observers;
                    r && (this._observers = null, _invalidateObservers(r));
                  }
                }
              };
              Observable.registerObserver = function(e) {
                return _observerStack.push(e), _observerRegistration;
              };
              function ObservableCollection(e) {
                this._items = e || [], this._observers = null;
              }
              var ObservableCollection$ = {
                get_item: function(e) {
                  return this._observers = _captureObservers(this._observers), this._items[e];
                },
                set_item: function(e, r) {
                  this._items[e] = r, this._updated();
                },
                get_length: function() {
                  return this._observers = _captureObservers(this._observers), this._items.length;
                },
                add: function(e) {
                  this._items.push(e), this._updated();
                },
                clear: function() {
                  this._items.clear(), this._updated();
                },
                contains: function(e) {
                  return this._items.indexOf(e) >= 0;
                },
                getEnumerator: function() {
                  return this._observers = _captureObservers(this._observers), this._items.getEnumerator();
                },
                indexOf: function(e) {
                  return this._items.indexOf(e);
                },
                insert: function(e, r) {
                  this._items.insert(e, r), this._updated();
                },
                remove: function(e) {
                  return this._items.remove(e) ? (this._updated(), !0) : !1;
                },
                removeAt: function(e) {
                  this._items.splice(e, 1), this._updated();
                },
                toArray: function() {
                  return this._items;
                },
                _updated: function() {
                  var e = this._observers;
                  e && (this._observers = null, _invalidateObservers(e));
                }
              };
              function Task(e) {
                this._continuations = e !== void 0 ? (this.status = "done", null) : (this.status = "pending", []), this.result = e, this.error = null;
              }
              var Task$ = {
                get_completed: function() {
                  return this.status != "pending";
                },
                changeWith: function(e) {
                  var r = new Task();
                  return this.continueWith(function(n) {
                    var s = n.error, a;
                    if (!s)
                      try {
                        a = e(n);
                      } catch (t) {
                        s = t;
                      }
                    _updateTask(r, a, s);
                  }), r;
                },
                continueWith: function(e) {
                  if (this._continuations)
                    this._continuations.push(e);
                  else {
                    var r = this;
                    setTimeout(function() {
                      e(r);
                    }, 0);
                  }
                  return this;
                },
                done: function(e) {
                  return this.continueWith(function(r) {
                    r.status == "done" && e(r.result);
                  });
                },
                fail: function(e) {
                  return this.continueWith(function(r) {
                    r.status == "failed" && e(r.error);
                  });
                },
                then: function(e, r) {
                  return this.continueWith(function(n) {
                    n.status == "done" ? e(n.result) : r(n.error);
                  });
                }
              };
              function _updateTask(e, r, n) {
                if (e.status == "pending") {
                  n ? (e.error = n, e.status = "failed") : (e.result = r, e.status = "done");
                  var s = e._continuations;
                  e._continuations = null;
                  for (var a = 0, t = s.length; a < t; a++)
                    s[a](e);
                }
              }
              function _joinTasks(e, r) {
                e = toArray(e);
                var n = e.length, s = 0;
                n > 1 && typeof e[0] == "number" && (s = e[0], e = e.slice(1), n--), Array.isArray(e[0]) && (e = e[0], n = e.length);
                var a = new Task(), t = 0;
                function l(_) {
                  a.status == "pending" && (t++, r ? _updateTask(a, _) : t == n && _updateTask(a, !0));
                }
                function o() {
                  a.status == "pending" && (r ? _updateTask(a, null) : _updateTask(a, !1));
                }
                s != 0 && setTimeout(o, s);
                for (var c = 0; c < n; c++)
                  e[c].continueWith(l);
                return a;
              }
              Task.all = function() {
                return _joinTasks(arguments, !1);
              }, Task.any = function() {
                return _joinTasks(arguments, !0);
              }, Task.delay = function(e) {
                var r = new Task();
                return setTimeout(function() {
                  _updateTask(r, !0);
                }, e), r;
              };
              function deferred(e) {
                var r = new Task(e);
                return {
                  task: r,
                  resolve: function(n) {
                    _updateTask(r, n);
                  },
                  reject: function(n) {
                    _updateTask(r, null, n || new Error());
                  }
                };
              }
              var neutralCulture = {
                name: "",
                // numberFormat
                nf: {
                  nan: "NaN",
                  // naNSymbol
                  neg: "-",
                  // negativeSign
                  pos: "+",
                  // positiveSign
                  negInf: "-Infinity",
                  // negativeInfinityText
                  posInf: "Infinity",
                  // positiveInfinityText
                  gw: [3],
                  // numberGroupSizes
                  dd: 2,
                  // numberDecimalDigits
                  ds: ".",
                  // numberDecimalSeparator
                  gs: ",",
                  // numberGroupSeparator
                  per: "%",
                  // percentSymbol
                  perGW: [3],
                  // percentGroupSizes
                  perDD: 2,
                  // percentDecimalDigits
                  perDS: ".",
                  // percentDecimalSeparator
                  perGS: ",",
                  // percentGroupSeparator
                  perPP: "{0} %",
                  // percentPositivePattern
                  perNP: "-{0} %",
                  // percentNegativePattern
                  cur: "$",
                  // currencySymbol
                  curGW: [3],
                  // currencyGroupSizes
                  curDD: 2,
                  // currencyDecimalDigits
                  curDS: ".",
                  // currencyDecimalSeparator
                  curGS: ",",
                  // currencyGroupSeparator
                  curNP: "(${0})",
                  // currencyNegativePattern
                  curPP: "${0}"
                  // currencyPositivePattern
                },
                // dateFormat
                dtf: {
                  am: "AM",
                  // amDesignator
                  pm: "PM",
                  // pmDesignator
                  ds: "/",
                  // dateSeparator
                  ts: ":",
                  // timeSeparator
                  gmt: "ddd, dd MMM yyyy HH:mm:ss 'GMT'",
                  // gmtDateTimePattern
                  uni: "yyyy-MM-dd HH:mm:ssZ",
                  // universalDateTimePattern
                  sort: "yyyy-MM-ddTHH:mm:ss",
                  // sortableDateTimePattern
                  dt: "dddd, MMMM dd, yyyy h:mm:ss tt",
                  // dateTimePattern
                  ld: "dddd, MMMM dd, yyyy",
                  // longDatePattern
                  sd: "M/d/yyyy",
                  // shortDatePattern
                  lt: "h:mm:ss tt",
                  // longTimePattern
                  st: "h:mm tt",
                  // shortTimePattern
                  day0: 0,
                  // firstDayOfWeek
                  day: [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday"
                  ],
                  // dayNames
                  sday: [
                    "Sun",
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thu",
                    "Fri",
                    "Sat"
                  ],
                  // shortDayNames
                  mday: [
                    "Su",
                    "Mo",
                    "Tu",
                    "We",
                    "Th",
                    "Fr",
                    "Sa"
                  ],
                  // minimizedDayNames
                  mon: [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December",
                    ""
                  ],
                  // monthNames
                  smon: [
                    "Jan",
                    "Feb",
                    "Mar",
                    "Apr",
                    "May",
                    "Jun",
                    "Jul",
                    "Aug",
                    "Sep",
                    "Oct",
                    "Nov",
                    "Dec",
                    ""
                  ]
                  // shortMonthNames
                }
              }, currentCulture = { name: "en-us", dtf: neutralCulture.dtf, nf: neutralCulture.nf };
              function _commaFormatNumber(e, r, n, s) {
                var a = null, t = e.indexOf(n);
                t > 0 && (a = e.substr(t), e = e.substr(0, t));
                var l = e.startsWith("-");
                l && (e = e.substr(1));
                var o = 0, c = r[o];
                if (e.length < c)
                  return a ? e + a : e;
                for (var _ = e.length, u = "", y = !1; !y; ) {
                  var g = c, Ee = _ - g;
                  if (Ee < 0 && (c += Ee, g += Ee, Ee = 0, y = !0), !g)
                    break;
                  var Ve = e.substr(Ee, g);
                  u.length ? u = Ve + s + u : u = Ve, _ -= g, o < r.length - 1 && (o++, c = r[o]);
                }
                return l && (u = "-" + u), a ? u + a : u;
              }
              _formatters.Number = function(e, r, n) {
                var s = n.nf, a = "", t = -1;
                r.length > 1 && (t = parseInt(r.substr(1)));
                var l = r.charAt(0);
                switch (l) {
                  case "d":
                  case "D":
                    a = parseInt(Math.abs(e)).toString(), t != -1 && (a = padLeft(a, t, "0")), e < 0 && (a = "-" + a);
                    break;
                  case "x":
                  case "X":
                    a = parseInt(Math.abs(e)).toString(16), l == "X" && (a = a.toUpperCase()), t != -1 && (a = padLeft(a, t, "0"));
                    break;
                  case "e":
                  case "E":
                    t == -1 ? a = e.toExponential() : a = e.toExponential(t), l == "E" && (a = a.toUpperCase());
                    break;
                  case "f":
                  case "F":
                  case "n":
                  case "N":
                    if (t == -1 && (t = s.dd), a = e.toFixed(t).toString(), t && s.ds != ".") {
                      var o = a.indexOf(".");
                      a = a.substr(0, o) + s.ds + a.substr(o + 1);
                    }
                    (l == "n" || l == "N") && (a = _commaFormatNumber(a, s.gw, s.ds, s.gs));
                    break;
                  case "c":
                  case "C":
                    if (t == -1 && (t = s.curDD), a = Math.abs(e).toFixed(t).toString(), t && s.curDS != ".") {
                      var o = a.indexOf(".");
                      a = a.substr(0, o) + s.curDS + a.substr(o + 1);
                    }
                    a = _commaFormatNumber(a, s.curGW, s.curDS, s.curGS), e < 0 ? a = String.format(n, s.curNP, a) : a = String.format(n, s.curPP, a);
                    break;
                  case "p":
                  case "P":
                    if (t == -1 && (t = s.perDD), a = (Math.abs(e) * 100).toFixed(t).toString(), t && s.perDS != ".") {
                      var o = a.indexOf(".");
                      a = a.substr(0, o) + s.perDS + a.substr(o + 1);
                    }
                    a = _commaFormatNumber(a, s.perGW, s.perDS, s.perGS), e < 0 ? a = String.format(n, s.perNP, a) : a = String.format(n, s.perPP, a);
                    break;
                }
                return a;
              };
              var _dateFormatRE = /'.*?[^\\]'|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z/g;
              _formatters.Date = function(e, r, n) {
                if (r == "iso")
                  return e.toISOString();
                if (r.charAt(0) == "i") {
                  var s = "String";
                  switch (r) {
                    case "id":
                      s = "DateString";
                      break;
                    case "it":
                      s = "TimeString";
                      break;
                  }
                  return n == neutralCulture ? e["to" + s]() : e["toLocale" + s]();
                }
                var a = n.dtf;
                if (r.length == 1)
                  switch (r) {
                    case "f":
                      r = a.ld + " " + a.st;
                      break;
                    case "F":
                      r = a.dt;
                      break;
                    case "d":
                      r = a.sd;
                      break;
                    case "D":
                      r = a.ld;
                      break;
                    case "t":
                      r = a.st;
                      break;
                    case "T":
                      r = a.lt;
                      break;
                    case "g":
                      r = a.sd + " " + a.st;
                      break;
                    case "G":
                      r = a.sd + " " + a.lt;
                      break;
                    case "R":
                    case "r":
                      a = neutralCulture.dtf, r = a.gmt;
                      break;
                    case "u":
                      r = a.uni;
                      break;
                    case "U":
                      r = a.dt, e = new Date(
                        e.getUTCFullYear(),
                        e.getUTCMonth(),
                        e.getUTCDate(),
                        e.getUTCHours(),
                        e.getUTCMinutes(),
                        e.getUTCSeconds(),
                        e.getUTCMilliseconds()
                      );
                      break;
                    case "s":
                      r = a.sort;
                      break;
                  }
                r.charAt(0) == "%" && (r = r.substr(1));
                var t = new StringBuilder();
                for (_dateFormatRE.lastIndex = 0; ; ) {
                  var l = _dateFormatRE.lastIndex, o = _dateFormatRE.exec(r);
                  if (t.append(r.slice(l, o ? o.index : r.length)), !o)
                    break;
                  var c = o[0], _ = c;
                  switch (c) {
                    case "dddd":
                      _ = a.day[e.getDay()];
                      break;
                    case "ddd":
                      _ = a.sday[e.getDay()];
                      break;
                    case "dd":
                      _ = padLeft(e.getDate().toString(), 2, "0");
                      break;
                    case "d":
                      _ = e.getDate();
                      break;
                    case "MMMM":
                      _ = a.mon[e.getMonth()];
                      break;
                    case "MMM":
                      _ = a.smon[e.getMonth()];
                      break;
                    case "MM":
                      _ = padLeft((e.getMonth() + 1).toString(), 2, "0");
                      break;
                    case "M":
                      _ = e.getMonth() + 1;
                      break;
                    case "yyyy":
                      _ = e.getFullYear();
                      break;
                    case "yy":
                      _ = padLeft((e.getFullYear() % 100).toString(), 2, "0");
                      break;
                    case "y":
                      _ = e.getFullYear() % 100;
                      break;
                    case "h":
                    case "hh":
                      _ = e.getHours() % 12, _ ? c == "hh" && (_ = padLeft(_.toString(), 2, "0")) : _ = "12";
                      break;
                    case "HH":
                      _ = padLeft(e.getHours().toString(), 2, "0");
                      break;
                    case "H":
                      _ = e.getHours();
                      break;
                    case "mm":
                      _ = padLeft(e.getMinutes().toString(), 2, "0");
                      break;
                    case "m":
                      _ = e.getMinutes();
                      break;
                    case "ss":
                      _ = padLeft(e.getSeconds().toString(), 2, "0");
                      break;
                    case "s":
                      _ = e.getSeconds();
                      break;
                    case "t":
                    case "tt":
                      _ = e.getHours() < 12 ? a.am : a.pm, c == "t" && (_ = _.charAt(0));
                      break;
                    case "fff":
                      _ = padLeft(e.getMilliseconds().toString(), 3, "0");
                      break;
                    case "ff":
                      _ = padLeft(e.getMilliseconds().toString(), 3).substr(0, 2);
                      break;
                    case "f":
                      _ = padLeft(e.getMilliseconds().toString(), 3).charAt(0);
                      break;
                    case "z":
                      _ = e.getTimezoneOffset() / 60, _ = (_ >= 0 ? "-" : "+") + Math.floor(Math.abs(_));
                      break;
                    case "zz":
                    case "zzz":
                      _ = e.getTimezoneOffset() / 60, _ = (_ >= 0 ? "-" : "+") + padLeft(Math.floor(Math.abs(_)).toString(), 2, "0"), c == "zzz" && (_ += a.ts + padLeft(Math.abs(e.getTimezoneOffset() % 60).toString(), 2, "0"));
                      break;
                    default:
                      _.charAt(0) == "'" && (_ = _.substr(1, _.length - 2).replace(/\\'/g, "'"));
                      break;
                  }
                  t.append(_);
                }
                return t.toString();
              };
              var _modules = {}, _classMarker = "class", _interfaceMarker = "interface";
              function createType(e, r, n) {
                if (Array.isArray(r)) {
                  var s = r[0];
                  if (r.length >= 2) {
                    var a = r[2];
                    if (a) {
                      var t = function() {
                      };
                      t.prototype = a.prototype, s.prototype = new t(), s.prototype.constructor = s;
                    }
                    r[1] && extend(s.prototype, r[1]), s.$base = a || Object, s.$interfaces = r.slice(3), s.$type = _classMarker;
                  } else
                    s.$type = _interfaceMarker;
                  return s.$name = e, n[e] = s;
                }
                return r;
              }
              function isClass(e) {
                return e.$type == _classMarker;
              }
              function isInterface(e) {
                return e.$type == _interfaceMarker;
              }
              function typeOf(e) {
                var r;
                try {
                  r = e.constructor;
                } catch {
                }
                return r || Object;
              }
              function type(e) {
                var r = e.indexOf("."), n = r > 0 ? _modules[e.substr(0, r)] : globalThis, s = r > 0 ? e.substr(r + 1) : e;
                return n ? n[s] : null;
              }
              var _typeNames = [
                Number,
                "Number",
                String,
                "String",
                Boolean,
                "Boolean",
                Array,
                "Array",
                Date,
                "Date",
                RegExp,
                "RegExp",
                Function,
                "Function"
              ];
              function typeName(e) {
                if (e instanceof Function || (e = e.constructor), e.$name)
                  return e.$name;
                if (e.name)
                  return e.name;
                for (var r = 0, n = _typeNames.length; r < n; r += 2)
                  if (e == _typeNames[r])
                    return _typeNames[r + 1];
                return "Object";
              }
              function canAssign(e, r) {
                if (e == Object || e == r)
                  return !0;
                if (e.$type == _classMarker)
                  for (var n = r.$base; n; ) {
                    if (e == n)
                      return !0;
                    n = n.$base;
                  }
                else if (e.$type == _interfaceMarker)
                  for (var n = r; n; ) {
                    var s = n.$interfaces;
                    if (s && s.indexOf(e) >= 0)
                      return !0;
                    n = n.$base;
                  }
                return !1;
              }
              function instanceOf(e, r) {
                if (!isValue(r))
                  return !1;
                if (e == Object || r instanceof e)
                  return !0;
                var n = typeOf(r);
                return canAssign(e, n);
              }
              function canCast(e, r) {
                return instanceOf(r, e);
              }
              function safeCast(e, r) {
                return instanceOf(r, e) ? e : null;
              }
              function ss_module(e, r, n) {
                var s = _modules[e] = { $name: e };
                if (r)
                  for (var a in r)
                    createType(a, r[a], s);
                var t = {};
                if (n)
                  for (var a in n)
                    t[a] = createType(a, n[a], s);
                return t;
              }
              function createRegistry(e) {
                var r = _modules[e] = { $name: e };
                return r;
              }
              return extend(ss_module("ss", null, {
                IDisposable: [IDisposable],
                IEnumerable: [IEnumerable],
                IEnumerator: [IEnumerator],
                IObserver: [IObserver],
                IApplication: [IApplication],
                IContainer: [IContainer],
                IObjectFactory: [IObjectFactory],
                IEventManager: [IEventManager],
                IInitializable: [IInitializable],
                EventArgs: [EventArgs, {}],
                CancelEventArgs: [CancelEventArgs, {}, EventArgs],
                StringBuilder: [StringBuilder, StringBuilder$],
                Stack: [Stack, Stack$],
                Queue: [Queue, Queue$],
                Observable: [Observable, Observable$],
                ObservableCollection: [ObservableCollection, ObservableCollection$, null, IEnumerable],
                Task: [Task, Task$]
              }), {
                version: "0.8",
                isValue,
                value,
                extend,
                keys,
                keyCount,
                keyExists,
                clearKeys,
                enumerate,
                array: toArray,
                remove: removeItem,
                boolean: parseBoolean,
                regexp: parseRegExp,
                number: parseNumber,
                date: parseDate,
                truncate,
                now,
                today,
                compareDates,
                error,
                string,
                emptyString,
                whitespace,
                format,
                compareStrings,
                startsWith,
                endsWith,
                padLeft,
                padRight,
                trim,
                trimStart,
                trimEnd,
                insertString,
                removeString,
                replaceString,
                bind,
                bindAdd,
                bindSub,
                bindExport,
                deferred,
                module: ss_module,
                modules: _modules,
                createRegistry,
                createType,
                isClass,
                isInterface,
                typeOf,
                type,
                typeName,
                canCast,
                safeCast,
                canAssign,
                instanceOf,
                culture: {
                  neutral: neutralCulture,
                  current: currentCulture
                },
                fail
              });
            }
            var ss = _ss();
          }
        ),
        /***/
        "./esm/star.js": (
          /*!*********************!*\
            !*** ./esm/star.js ***!
            \*********************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Galaxy: () => (
                /* binding */
                u
              ),
              /* harmony export */
              Star: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./baseutil.js */
              "./esm/baseutil.js"
            ), l = n(
              /*! ./color.js */
              "./esm/color.js"
            ), o = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            );
            function c(g) {
              this.magnitude = 0, this.RA = 0, this.dec = 0, this.BMV = 0, this.id = 0, this.absoluteMagnitude = 0, this.par = 0, this.distance = 0;
              var Ee = g.split("	");
              if (this.id = parseInt(s.ss.replaceString(Ee[0], "HIP", "")), this.dec = parseFloat(Ee[3]), this.RA = parseFloat(Ee[2]) / 15, Ee.length > 4)
                try {
                  Ee[4].toUpperCase() !== "NULL" && Ee[4] && (this.magnitude = parseFloat(Ee[4]));
                } catch {
                }
              if (Ee.length > 5)
                try {
                  this.BMV = parseFloat(Ee[5]), this._makeColor(this.BMV);
                } catch {
                }
              Ee.length > 6 && (this.par = parseFloat(Ee[6]), this._makeDistanceAndMagnitude());
            }
            var _ = {
              get_name: function() {
                return "HIP" + this.id.toString();
              },
              get_coordinates: function() {
                return o.Coordinates.fromRaDec(this.RA, this.dec);
              },
              stars: function(g, Ee) {
                var Ve = g.split("	");
                if (this.id = parseInt(Ve[0]), this.RA = parseFloat(Ve[1]) / 15, this.dec = parseFloat(Ve[2]), Ve.length > 3)
                  try {
                    this.magnitude = parseFloat(Ve[3]);
                  } catch {
                  }
                if (Ve.length > 4)
                  try {
                    this.col = l.Color.load(Ve[4]);
                  } catch {
                  }
              },
              _makeDistanceAndMagnitude: function() {
                this.distance = 1 / (this.par / 1e3), this.absoluteMagnitude = this.magnitude - 5 * (t.Util.logN(this.distance, 10) - 1), this.distance *= 206264.806;
              },
              _makeColor: function(g) {
                var Ee = 4294967295;
                g <= -0.32 ? Ee = 4288854271 : g <= -0.31 ? Ee = 4288919807 : g <= -0.3 ? Ee = 4288985855 : g <= -0.28 ? Ee = 4289182975 : g <= -0.26 ? Ee = 4289314303 : g <= -0.24 ? Ee = 4289445887 : g <= -0.2 ? Ee = 4289708799 : g <= -0.16 ? Ee = 4290037503 : g <= -0.14 ? Ee = 4290169087 : g <= -0.12 ? Ee = 4290366207 : g <= -0.09 ? Ee = 4290563583 : g <= -0.06 ? Ee = 4290892031 : g <= 0 ? Ee = 4291483391 : g <= 0.06 ? Ee = 4292009215 : g <= 0.14 ? Ee = 4292732159 : g <= 0.19 ? Ee = 4293126399 : g <= 0.31 ? Ee = 4294111999 : g <= 0.36 ? Ee = 4294571775 : g <= 0.43 ? Ee = 4294965756 : g <= 0.54 ? Ee = 4294964979 : g <= 0.59 ? Ee = 4294964203 : g <= 0.63 ? Ee = 4294963687 : g <= 0.66 ? Ee = 4294963169 : g <= 0.74 ? Ee = 4294962909 : g <= 0.82 ? Ee = 4294961877 : g <= 0.92 ? Ee = 4294960324 : g <= 1.15 ? Ee = 68719468472 : g <= 1.3 ? Ee = 4294958516 : g <= 1.41 ? Ee = 4294955933 : g <= 1.48 ? Ee = 4294954385 : g <= 1.52 ? Ee = 4294953351 : g <= 1.55 ? Ee = 4294952319 : g <= 1.56 ? Ee = 4294951287 : g <= 1.61 ? Ee = 4294950257 : g <= 1.72 ? Ee = 4294948966 : g <= 1.84 ? Ee = 4294947419 : g <= 2 && (Ee = 4294946129), this.col = l.Color.fromInt(Ee);
              }
            };
            (0, a.registerType)("Star", [c, _, null]);
            function u(g) {
              this.RA = 0, this.dec = 0, this.distance = 0, this.type = 0, this.eTypeBucket = 0, this.size = 5, this.sdssID = 0, this.sdssID = g.readInt64(), this.RA = g.readSingle(), this.dec = g.readSingle(), this.distance = g.readSingle(), this.eTypeBucket = g.readByte(), this.size = g.readSingle();
            }
            u._eTypeBuckets = [-3, -0.186, -0.168, -0.158, -0.15, -0.143, -0.137, -0.13, -0.123, -0.115, -0.104, -0.089, -0.068, -0.042, -0.011, 0.024, 0.064, 0.111, 0.169, 0.252, 3], u.getEType = function(g) {
              for (var Ee = 0, Ve = u._eTypeBuckets.length - 1; Ve - Ee > 1; ) {
                var Me = (Ee + Ve) / 2;
                g > u._eTypeBuckets[Me] ? Ee = Me : Ve = Me;
              }
              return Ee;
            };
            var y = {};
            (0, a.registerType)("Galaxy", [u, y, null]);
          }
        ),
        /***/
        "./esm/tangent_tile.js": (
          /*!*****************************!*\
            !*** ./esm/tangent_tile.js ***!
            \*****************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              LatLngEdges: () => (
                /* binding */
                y
              ),
              /* harmony export */
              TangentTile: () => (
                /* binding */
                Ee
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ./graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), c = n(
              /*! ./render_triangle.js */
              "./esm/render_triangle.js"
            ), _ = n(
              /*! ./layers/fits_image.js */
              "./esm/layers/fits_image.js"
            ), u = n(
              /*! ./tile.js */
              "./esm/tile.js"
            );
            function y() {
              this.latMin = 0, this.latMax = 0, this.lngMin = 0, this.lngMax = 0;
            }
            var g = {};
            (0, a.registerType)("LatLngEdges", [y, g, null]);
            function Ee(Me, B, Pe, k, b) {
              this._topDown$1 = !0, u.Tile.call(this), this.parent = b, this.level = Me, this.tileX = B, this.tileY = Pe, this.dataset = k, this._topDown$1 = !k.get_bottomsUp(), this.computeBoundingSphere();
            }
            var Ve = {
              computeBoundingSphere: function() {
                if (!this._topDown$1) {
                  this.computeBoundingSphereBottomsUp();
                  return;
                }
                var Me = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), B = this.dataset.get_baseTileDegrees() / 2 - this.tileY * Me + this.dataset.get_offsetY(), Pe = this.dataset.get_baseTileDegrees() / 2 - (this.tileY + 1) * Me + this.dataset.get_offsetY(), k = this.tileX * Me - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), b = (this.tileX + 1) * Me - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), Le = (B + Pe) / 2, xe = (k + b) / 2;
                this.sphereCenter = this.geoTo3dTan(Le, xe), this.topLeft = this.geoTo3dTan(B, k), this.bottomRight = this.geoTo3dTan(Pe, b), this.topRight = this.geoTo3dTan(B, b), this.bottomLeft = this.geoTo3dTan(Pe, k);
                var ze = this.geoTo3dTan(B, k);
                ze.subtract(this.sphereCenter), this.sphereRadius = ze.length();
              },
              computeBoundingSphereBottomsUp: function() {
                var Me = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), B = this.dataset.get_baseTileDegrees() / 2 + (this.tileY + 1) * Me + this.dataset.get_offsetY(), Pe = this.dataset.get_baseTileDegrees() / 2 + this.tileY * Me + this.dataset.get_offsetY(), k = this.tileX * Me - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), b = (this.tileX + 1) * Me - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX();
                this.topLeft = this.geoTo3dTan(B, k), this.bottomRight = this.geoTo3dTan(Pe, b), this.topRight = this.geoTo3dTan(B, b), this.bottomLeft = this.geoTo3dTan(Pe, k);
              },
              getLatLngEdges: function() {
                var Me = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), B = new y();
                return B.latMin = this.dataset.get_baseTileDegrees() / 2 - this.tileY * Me + this.dataset.get_offsetY(), B.latMax = this.dataset.get_baseTileDegrees() / 2 - (this.tileY + 1) * Me + this.dataset.get_offsetY(), B.lngMin = this.tileX * Me - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), B.lngMax = (this.tileX + 1) * Me - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), B;
              },
              geoTo3dTan: function(Me, B) {
                B = -B;
                var Pe = this.dataset.get_baseTileDegrees() / 2, k = Math.tan(Pe * u.Tile.RC);
                return this.dataset.get_matrix().transform(l.Vector3d.create(1, Me / Pe * k, B / Pe * k));
              },
              requestImage: function() {
                this.fitsImage = s.ss.safeCast(this.dataset.get_wcsImage(), _.FitsImage), this.fitsImage != null ? (this.texReady = !0, this.downloading = !1, this.errored = this.fitsImage.errored, this.requestPending = !1, (0, t.tileCacheRemoveFromQueue)(this.get_key(), !0), t.useGlVersion2 ? (this.makeTexture(), this.readyToRender = !0) : (this.bmp = this.fitsImage.getBitmap(), this.texture2d = this.bmp.getTexture(), this.readyToRender = !0)) : u.Tile.prototype.requestImage.call(this);
              },
              createGeometry: function(Me) {
                if (this.geometryCreated)
                  return !0;
                this.geometryCreated = !0;
                for (var B = 0; B < 4; B++)
                  this._renderTriangleLists[B] = [];
                this.globalCenter = this.geoTo3dTan(0, 0);
                var Pe = this.getLatLngEdges();
                this.topLeft = this.geoTo3dTan(Pe.latMin, Pe.lngMin).subtract(this.globalCenter), this.bottomRight = this.geoTo3dTan(Pe.latMax, Pe.lngMax).subtract(this.globalCenter), this.topRight = this.geoTo3dTan(Pe.latMin, Pe.lngMax).subtract(this.globalCenter), this.bottomLeft = this.geoTo3dTan(Pe.latMax, Pe.lngMin).subtract(this.globalCenter);
                var k = l.Vector3d.midPoint(this.topLeft, this.bottomRight), b = l.Vector3d.midPoint(this.topLeft, this.bottomLeft), Le = l.Vector3d.midPoint(this.topRight, this.bottomRight), xe = l.Vector3d.midPoint(this.topLeft, this.topRight), ze = l.Vector3d.midPoint(this.bottomLeft, this.bottomRight);
                if (Me.gl == null)
                  this._renderTriangleLists[0].push(c.RenderTriangle.create(l.PositionTexture.createPos(this.topLeft, 0, 0), l.PositionTexture.createPos(b, 0, 0.5), l.PositionTexture.createPos(xe, 0.5, 0), this.texture, this.level)), this._renderTriangleLists[0].push(c.RenderTriangle.create(l.PositionTexture.createPos(b, 0, 0.5), l.PositionTexture.createPos(k, 0.5, 0.5), l.PositionTexture.createPos(xe, 0.5, 0), this.texture, this.level)), this._renderTriangleLists[1].push(c.RenderTriangle.create(l.PositionTexture.createPos(xe, 0.5, 0), l.PositionTexture.createPos(Le, 1, 0.5), l.PositionTexture.createPos(this.topRight, 1, 0), this.texture, this.level)), this._renderTriangleLists[1].push(c.RenderTriangle.create(l.PositionTexture.createPos(xe, 0.5, 0), l.PositionTexture.createPos(k, 0.5, 0.5), l.PositionTexture.createPos(Le, 1, 0.5), this.texture, this.level)), this._renderTriangleLists[2].push(c.RenderTriangle.create(l.PositionTexture.createPos(b, 0, 0.5), l.PositionTexture.createPos(ze, 0.5, 1), l.PositionTexture.createPos(k, 0.5, 0.5), this.texture, this.level)), this._renderTriangleLists[2].push(c.RenderTriangle.create(l.PositionTexture.createPos(b, 0, 0.5), l.PositionTexture.createPos(this.bottomLeft, 0, 1), l.PositionTexture.createPos(ze, 0.5, 1), this.texture, this.level)), this._renderTriangleLists[3].push(c.RenderTriangle.create(l.PositionTexture.createPos(k, 0.5, 0.5), l.PositionTexture.createPos(this.bottomRight, 1, 1), l.PositionTexture.createPos(Le, 1, 0.5), this.texture, this.level)), this._renderTriangleLists[3].push(c.RenderTriangle.create(l.PositionTexture.createPos(k, 0.5, 0.5), l.PositionTexture.createPos(ze, 0.5, 1), l.PositionTexture.createPos(this.bottomRight, 1, 1), this.texture, this.level)), this.readyToRender = !0;
                else {
                  this._vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                  var Se = new Float32Array(9 * 5), Te = Se, D = 0;
                  D = this.addVertex(Te, D, l.PositionTexture.createPos(ze, 0.5, 1)), D = this.addVertex(Te, D, l.PositionTexture.createPos(this.bottomLeft, 0, 1)), D = this.addVertex(Te, D, l.PositionTexture.createPos(this.bottomRight, 1, 1)), D = this.addVertex(Te, D, l.PositionTexture.createPos(k, 0.5, 0.5)), D = this.addVertex(Te, D, l.PositionTexture.createPos(b, 0, 0.5)), D = this.addVertex(Te, D, l.PositionTexture.createPos(Le, 1, 0.5)), D = this.addVertex(Te, D, l.PositionTexture.createPos(xe, 0.5, 0)), D = this.addVertex(Te, D, l.PositionTexture.createPos(this.topLeft, 0, 0)), D = this.addVertex(Te, D, l.PositionTexture.createPos(this.topRight, 1, 0)), t.tilePrepDevice.bufferData(o.WEBGL.ARRAY_BUFFER, Se, o.WEBGL.STATIC_DRAW);
                  for (var B = 0; B < 4; B++) {
                    D = 0, this.triangleCount = 2;
                    var ke = new Uint16Array(this.triangleCount * 3), Fe = ke;
                    switch (B) {
                      case 0:
                        Fe[D++] = 7, Fe[D++] = 4, Fe[D++] = 6, Fe[D++] = 4, Fe[D++] = 3, Fe[D++] = 6;
                        break;
                      case 1:
                        Fe[D++] = 6, Fe[D++] = 5, Fe[D++] = 8, Fe[D++] = 6, Fe[D++] = 3, Fe[D++] = 5;
                        break;
                      case 2:
                        Fe[D++] = 4, Fe[D++] = 0, Fe[D++] = 3, Fe[D++] = 4, Fe[D++] = 1, Fe[D++] = 0;
                        break;
                      case 3:
                        Fe[D++] = 3, Fe[D++] = 2, Fe[D++] = 5, Fe[D++] = 3, Fe[D++] = 0, Fe[D++] = 2;
                        break;
                    }
                    this._indexBuffers[B] = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, this._indexBuffers[B]), t.tilePrepDevice.bufferData(o.WEBGL.ELEMENT_ARRAY_BUFFER, ke, o.WEBGL.STATIC_DRAW);
                  }
                }
                return !0;
              }
            };
            (0, a.registerType)("TangentTile", [Ee, Ve, u.Tile]);
          }
        ),
        /***/
        "./esm/tile.js": (
          /*!*********************!*\
            !*** ./esm/tile.js ***!
            \*********************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Tile: () => (
                /* binding */
                Pe
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), o = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), c = n(
              /*! ./graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), _ = n(
              /*! ./graphics/texture.js */
              "./esm/graphics/texture.js"
            ), u = n(
              /*! ./graphics/shaders.js */
              "./esm/graphics/shaders.js"
            ), y = n(
              /*! ./util.js */
              "./esm/util.js"
            ), g = n(
              /*! ./blend_state.js */
              "./esm/blend_state.js"
            ), Ee = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), Ve = n(
              /*! ./layers/color_map_container.js */
              "./esm/layers/color_map_container.js"
            ), Me = n(
              /*! ./layers/fits_image_js.js */
              "./esm/layers/fits_image_js.js"
            ), B = n(
              /*! ./layers/fits_image_tile.js */
              "./esm/layers/fits_image_tile.js"
            );
            function Pe() {
              this._renderTriangleLists = new Array(4), this._indexBuffers = new Array(4), this.level = 0, this.tileX = 0, this.tileY = 0, this.texture = null, this.texture2d = null, this.isCatalogTile = !1, this.readyToRender = !1, this.inViewFrustum = !0, this.globalCenter = t.Vector3d.zero, this.children = [null, null, null, null], this.parent = null, this.localCenter = new t.Vector3d(), this.renderedAtOrBelowGeneration = 0, this._demScaleFactor = 6371e3, this.demIndex = 0, this.demAverage = 0, this.demReady = !1, this.texReady = !1, this.demTile = !1, this.demDownloading = !1, this.renderedGeneration = 0, this.accomidation = 0, this.accessCount = 0, this.downloading = !1, this.geometryCreated = !1, this._isHdTile = !1, this.demSize = 1089, this._topLeftScreen = new t.Vector3d(), this._bottomRightScreen = new t.Vector3d(), this._topRightScreen = new t.Vector3d(), this._bottomLeftScreen = new t.Vector3d(), this.sphereRadius = 0, this.sphereCenter = new t.Vector3d(), this.radius = 1, this.triangleCount = 0, this.requestHits = 0, this.requestPending = !1, this.errored = !1, this._key = null, this._tileId = null, this._vertexCount = 0, this.renderChildPart = null, this.renderChildPart = new Array(4);
              for (var b = 0; b < 4; b++)
                this.renderChildPart[b] = g.BlendState.create(!1, 500);
            }
            Pe.currentRenderGeneration = 0, Pe.tileTargetX = -1, Pe.tileTargetY = -1, Pe.tileTargetLevel = -1, Pe.tilesInView = 0, Pe.trianglesRendered = 0, Pe.tilesTouched = 0, Pe.frustumList = null, (0, l.set_tileUvMultiple)(1), Pe.callCount = 0, Pe.useAccomidation = !0, (0, l.set_tileDemEnabled)(!0), Pe.maxLevel = 20, Pe.meshComplexity = 50, Pe.imageQuality = 50, Pe.lastDeepestLevel = 0, Pe.deepestLevel = 0, Pe.RC = 0.01745329277777778, Pe.getFrustumList = function() {
              try {
                return Pe.frustumList;
              } catch {
                return null;
              }
            }, Pe.get_subDivisions = function() {
              return 32;
            };
            var k = {
              getIndexBuffer: function(b, Le) {
                return this._indexBuffers[b];
              },
              isPointInTile: function(b, Le) {
                return !1;
              },
              getSurfacePointAltitude: function(b, Le, xe) {
                return 0;
              },
              makeTexture: function() {
                if (l.tilePrepDevice != null)
                  try {
                    if (this.texture2d = l.tilePrepDevice.createTexture(), l.tilePrepDevice.bindTexture(c.WEBGL.TEXTURE_2D, this.texture2d), l.tilePrepDevice.texParameteri(c.WEBGL.TEXTURE_2D, c.WEBGL.TEXTURE_WRAP_S, c.WEBGL.CLAMP_TO_EDGE), l.tilePrepDevice.texParameteri(c.WEBGL.TEXTURE_2D, c.WEBGL.TEXTURE_WRAP_T, c.WEBGL.CLAMP_TO_EDGE), this.dataset.get_extension().toLowerCase().indexOf("fits") > -1 && l.useGlVersion2)
                      l.tilePrepDevice.texImage2D(c.WEBGL.TEXTURE_2D, 0, c.WEBGL.R32F, s.ss.truncate(this.fitsImage.get_sizeX()), s.ss.truncate(this.fitsImage.get_sizeY()), 0, c.WEBGL.RED, c.WEBGL.FLOAT, this.fitsImage.dataUnit), l.tilePrepDevice.texParameteri(c.WEBGL.TEXTURE_2D, c.WEBGL.TEXTURE_MIN_FILTER, c.WEBGL.NEAREST), l.tilePrepDevice.texParameteri(c.WEBGL.TEXTURE_2D, c.WEBGL.TEXTURE_MAG_FILTER, c.WEBGL.NEAREST);
                    else {
                      var b = this.texture;
                      if ((!_.Texture.isPowerOfTwo(this.texture.height) | !_.Texture.isPowerOfTwo(this.texture.width)) === 1) {
                        var Le = document.createElement("canvas");
                        Le.height = _.Texture.fitPowerOfTwo(b.height), Le.width = _.Texture.fitPowerOfTwo(b.width);
                        var xe = Le.getContext("2d");
                        xe.drawImage(b, 0, 0, Le.width, Le.height), b = Le;
                      }
                      l.tilePrepDevice.texImage2D(c.WEBGL.TEXTURE_2D, 0, c.WEBGL.RGBA, c.WEBGL.RGBA, c.WEBGL.UNSIGNED_BYTE, b), l.tilePrepDevice.texParameteri(c.WEBGL.TEXTURE_2D, c.WEBGL.TEXTURE_MIN_FILTER, c.WEBGL.LINEAR_MIPMAP_NEAREST), l.tilePrepDevice.generateMipmap(c.WEBGL.TEXTURE_2D);
                    }
                    l.tilePrepDevice.bindTexture(c.WEBGL.TEXTURE_2D, null);
                  } catch {
                    this.errored = !0;
                  }
              },
              addVertex: function(b, Le, xe) {
                return b[Le++] = xe.position.x, b[Le++] = xe.position.y, b[Le++] = xe.position.z, b[Le++] = xe.tu, b[Le++] = xe.tv, Le;
              },
              geoTo3dWithAlt: function(b, Le, xe, ze) {
                if (b = Math.max(Math.min(90, b), -90), Le = Math.max(Math.min(180, Le), -180), !l.tileDemEnabled || this.demData == null)
                  return this.geoTo3d(b, Le, xe);
                ze && (Le -= 180);
                var Se = this.demData[this.demIndex], Te = this.geoTo3dWithAltitude(b, Le, Se, xe);
                return Te;
              },
              geoTo3dWithAltitude: function(b, Le, xe, ze) {
                var Se = 1 + xe / this.get__demScaleFactor(), Te = t.Vector3d.create(Math.cos(Le * Pe.RC) * Math.cos(b * Pe.RC) * Se, Math.sin(b * Pe.RC) * Se, Math.sin(Le * Pe.RC) * Math.cos(b * Pe.RC) * Se);
                return ze && Te.subtract(this.localCenter), Te;
              },
              get__demScaleFactor: function() {
                return this._demScaleFactor;
              },
              set__demScaleFactor: function(b) {
                return this._demScaleFactor = b, b;
              },
              requestImage: function() {
                var b = this;
                if (this.dataset.get_extension().toLowerCase().indexOf("fits") > -1)
                  !this.downloading && !this.readyToRender && (this.downloading = !0, l.useGlVersion2 ? this.fitsImage = new B.FitsImageTile(this.dataset, this.get_URL(), function(xe) {
                    b.downloading = !1, b.errored = b.fitsImage.errored, (0, l.tileCacheRemoveFromQueue)(b.get_key(), !0), b.fitsImage.errored || (b.level || (b.dataset.get_fitsProperties()._fireMainImageLoaded(b.fitsImage), b.fitsImage.applyDisplaySettings()), b.texReady = !0, b.readyToRender = b.texReady && (b.demReady || !b.demTile), b.requestPending = !1, b.makeTexture());
                  }) : this.fitsImage = Me.FitsImageJs.createTiledFits(this.dataset, this.get_URL(), function(xe) {
                    b.level || b.dataset.get_fitsProperties()._fireMainImageLoaded(b.fitsImage), b.texReady = !0, b.downloading = !1, b.errored = b.fitsImage.errored, b.readyToRender = b.texReady && (b.demReady || !b.demTile), b.requestPending = !1, (0, l.tileCacheRemoveFromQueue)(b.get_key(), !0), b.texture2d = xe.getBitmap().getTexture();
                  }));
                else {
                  if (this.get_dataset().get_wcsImage() != null) {
                    this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = !0, this.requestPending = !1, (0, l.tileCacheRemoveFromQueue)(this.get_key(), !0);
                    return;
                  }
                  if (!this.downloading && !this.readyToRender) {
                    this.downloading = !0, this.texture = document.createElement("img");
                    var Le = this.texture;
                    this.texture.addEventListener("load", function(xe) {
                      b.texReady = !0, b.downloading = !1, b.errored = !1, b.readyToRender = b.texReady && (b.demReady || !b.demTile), b.requestPending = !1, (0, l.tileCacheRemoveFromQueue)(b.get_key(), !0), b.makeTexture();
                    }, !1), this.texture.addEventListener("error", function(xe) {
                      if (!b.texture.hasAttribute("proxyattempt")) {
                        b.texture.setAttribute("proxyattempt", !0);
                        var ze = Ee.URLHelpers.singleton.activateProxy(b.texture.src);
                        if (ze != null) {
                          b.texture.src = ze;
                          return;
                        }
                      }
                      b.downloading = !1, b.readyToRender = !1, b.errored = !0, b.requestPending = !1, (0, l.tileCacheRemoveFromQueue)(b.get_key(), !0);
                    }, !1), Le.crossOrigin = "anonymous", this.texture.src = this.get_URL();
                  }
                }
              },
              createDemFromParent: function() {
                return !1;
              },
              _loadDemData: function() {
                if (this.demFile == null)
                  return this.createDemFromParent();
                if (this.demData = this.demFile, this.demFile.length !== 1089 && this.demFile.length !== 513)
                  return this.createDemFromParent();
                for (var b = s.ss.enumerate(this.demData); b.moveNext(); )
                  b.current;
                return this.demAverage /= this.demData.length, !0;
              },
              requestDem: function() {
                var b = this;
                if (!this.readyToRender && !this.demDownloading) {
                  this.demTile = !0, this.demDownloading = !0, Pe.callCount++;
                  var Le = new XMLHttpRequest();
                  Le.addEventListener("load", function(xe) {
                    b.demReady = !0, b.demDownloading = !1, b.readyToRender = b.texReady && (b.demReady || !b.demTile), b.requestPending = !1;
                    try {
                      b.demFile = new Float32Array(Le.response);
                    } catch {
                    }
                    (0, l.tileCacheRemoveFromQueue)(b.get_key(), !0);
                  }, !1), Le.addEventListener("error", function(xe) {
                    b.demDownloading = !1, b.demReady = !1, b.readyToRender = !1, b.errored = !0, b.requestPending = !1, (0, l.tileCacheRemoveFromQueue)(b.get_key(), !0);
                  }, !1), Le.open("GET", this.get_demURL(), !0), Le.responseType = "arraybuffer", Le.send();
                }
              },
              draw3D: function(b, Le) {
                if (this.renderedGeneration = Pe.currentRenderGeneration, Pe.tilesTouched++, this.accessCount = (0, l.inc_tileCacheAccessID)(), this.errored)
                  return !1;
                var xe = 2;
                if (this.inViewFrustum = !0, !this.readyToRender)
                  return (0, l.tileCacheAddTileToQueue)(this), !1;
                var ze = 0, Se = 0;
                (this.dataset.get_mercator() || this.dataset.get_bottomsUp()) && (Se = 1);
                for (var Te = 0, D = !1, ke = !1, Fe = 0; Fe < 2; Fe++)
                  for (var He = 0; He < xe; He++)
                    this.level < this.dataset.get_levels() ? (this.children[ze] == null && (this.children[ze] = (0, l.tileCacheGetTile)(this.level + 1, this.tileX * 2 + (He + Te) % 2, this.tileY * 2 + (Fe + Se) % 2, this.dataset, this)), this.children[ze].isTileInFrustum(b.get_frustum()) ? (this.inViewFrustum = !0, this.children[ze].isTileBigEnough(b) ? (this.renderChildPart[ze].set_targetState(!this.children[ze].draw3D(b, Le)), this.renderChildPart[ze].get_targetState() && (ke = !0)) : this.renderChildPart[ze].set_targetState(!0)) : this.renderChildPart[ze].set_targetState(this.renderChildPart[ze].set_state(!1)), this.renderChildPart[ze].get_targetState(), this.renderChildPart[ze].get_state()) : this.renderChildPart[ze].set_state(!0), this.renderChildPart[ze].get_state() && (D = !0), ze++;
                if ((ke || D) && (this.renderedAtOrBelowGeneration = Pe.currentRenderGeneration, this.parent != null && (this.parent.renderedAtOrBelowGeneration = this.renderedAtOrBelowGeneration)), !D)
                  return !0;
                if (!this.createGeometry(b))
                  return !1;
                Pe.tilesInView++, this.accomidation = this._computeAccomidation();
                for (var We = 0; We < 4; We++)
                  this.renderChildPart[We].get_targetState() && this.renderPart(b, We, Le / 100, !1);
                return !0;
              },
              _computeAccomidation: function() {
                var b = 0;
                if (!Pe.useAccomidation)
                  return 0;
                var Le = (0, l.tileCacheGetCachedTile)(this.level, this.tileX, this.tileY + 1, this.dataset, this);
                (Le == null || Le.renderedAtOrBelowGeneration < Pe.currentRenderGeneration - 2) && (b += 1);
                var xe = (0, l.tileCacheGetCachedTile)(this.level, this.tileX + 1, this.tileY, this.dataset, this);
                (xe == null || xe.renderedAtOrBelowGeneration < Pe.currentRenderGeneration - 2) && (b += 2);
                var ze = (0, l.tileCacheGetCachedTile)(this.level, this.tileX, this.tileY - 1, this.dataset, this);
                (ze == null || ze.renderedAtOrBelowGeneration < Pe.currentRenderGeneration - 2) && (b += 4);
                var Se = (0, l.tileCacheGetCachedTile)(this.level, this.tileX - 1, this.tileY, this.dataset, this);
                return (Se == null || Se.renderedAtOrBelowGeneration < Pe.currentRenderGeneration - 2) && (b += 8), b;
              },
              renderPart: function(b, Le, xe, ze) {
                if (l.tilePrepDevice == null)
                  for (var Se = b.lighting && b.get_sunPosition() != null, Te = s.ss.enumerate(this._renderTriangleLists[Le]); Te.moveNext(); ) {
                    var D = Te.current;
                    if (D.opacity = xe, Se) {
                      var ke = D.normal.copy();
                      b.get_world().multiplyVector(ke), ke.normalize();
                      var Fe = t.Vector3d.dot(ke, b.get_sunPosition());
                      Fe < 0 ? Fe = 0 : Fe = Math.min(1, Fe * 1), D.lighting = Fe;
                    } else
                      D.lighting = 1;
                    D.draw(b.device, b.WVP);
                  }
                else
                  l.useGlVersion2 && this.fitsImage != null ? (Ve.ColorMapContainer.bindColorMapTexture(l.tilePrepDevice, this.dataset.get_fitsProperties().colorMapName), u.FitsShader.min = this.dataset.get_fitsProperties().lowerCut, u.FitsShader.max = this.dataset.get_fitsProperties().upperCut, u.FitsShader.containsBlanks = this.dataset.get_fitsProperties().containsBlanks, u.FitsShader.blankValue = this.dataset.get_fitsProperties().blankValue, u.FitsShader.bZero = this.dataset.get_fitsProperties().bZero, u.FitsShader.bScale = this.dataset.get_fitsProperties().bScale, u.FitsShader.scaleType = this.dataset.get_fitsProperties().scaleType, u.FitsShader.transparentBlack = this.dataset.get_fitsProperties().transparentBlack, u.FitsShader.use(b, this._vertexBuffer, this.getIndexBuffer(Le, this.accomidation), this.texture2d, xe, !1, this.globalCenter)) : u.TileShader.use(b, this._vertexBuffer, this.getIndexBuffer(Le, this.accomidation), this.texture2d, xe, !1, this.globalCenter), b.gl.drawElements(c.WEBGL.TRIANGLES, this.triangleCount * 3, c.WEBGL.UNSIGNED_SHORT, 0);
              },
              cleanUp: function(b) {
                if (this.readyToRender = !1, this.demData = null, this.demFile = null, this.demDownloading = !1, this.texReady = !1, this.demReady = !1, this.errored = !1, this.texture != null && (this.texture = null), this._renderTriangleLists = new Array(4), this.geometryCreated = !1, b && this.parent != null && (this.parent.removeChild(this), this.parent = null), l.tilePrepDevice != null) {
                  for (var Le = s.ss.enumerate(this._indexBuffers); Le.moveNext(); ) {
                    var xe = Le.current;
                    l.tilePrepDevice.deleteBuffer(xe);
                  }
                  this._indexBuffers = new Array(4), this._vertexBuffer != null && (l.tilePrepDevice.deleteBuffer(this._vertexBuffer), this._vertexBuffer = null), this.texture2d != null && (l.tilePrepDevice.deleteTexture(this.texture2d), this.texture2d = null);
                }
              },
              removeChild: function(b) {
                for (var Le = 0; Le < 4; Le++)
                  if (this.children[Le] === b) {
                    this.children[Le] = null;
                    return;
                  }
              },
              createGeometry: function(b) {
                return l.tileDemEnabled && this.demReady && this.demData == null && !this._loadDemData() || l.tileDemEnabled && this.demData == null ? !1 : (this.readyToRender = !0, !0);
              },
              calcSphere: function() {
                var b = new Array(4);
                b[0] = this.topLeft, b[1] = this.bottomRight, b[2] = this.topRight, b[3] = this.bottomLeft;
                var Le = t.ConvexHull.findEnclosingSphere(b);
                this.sphereCenter = Le.center, this.sphereRadius = Le.radius;
              },
              isTileBigEnough: function(b) {
                if (this.level > 1) {
                  var Le = b.WVP;
                  Le._transformTo(this.topLeft, this._topLeftScreen), Le._transformTo(this.bottomRight, this._bottomRightScreen), Le._transformTo(this.topRight, this._topRightScreen), Le._transformTo(this.bottomLeft, this._bottomLeftScreen);
                  var xe = this._topLeftScreen;
                  xe.subtract(this._topRightScreen);
                  var ze = xe.length(), Se = this._bottomLeftScreen;
                  Se.subtract(this._bottomRightScreen);
                  var Te = Se.length(), D = this._bottomLeftScreen;
                  D.subtract(this._topLeftScreen);
                  var ke = D.length(), Fe = this._bottomRightScreen;
                  Fe.subtract(this._topRightScreen);
                  var He = Fe.length(), We = Math.max(Math.max(He, ke), Math.max(Te, ze));
                  if (We < 300)
                    return !1;
                  Pe.deepestLevel = this.level > Pe.deepestLevel ? this.level : Pe.deepestLevel;
                }
                return !0;
              },
              isTileInFrustum: function(b) {
                this.level < 2 && (!this.dataset.get_projection() || this.dataset.get_projection()), this.inViewFrustum = !1;
                for (var Le = new t.Vector4d(this.sphereCenter.x, this.sphereCenter.y, this.sphereCenter.z, 1), xe = 0; xe < 6; xe++)
                  if (b[xe].dot(Le) < -this.sphereRadius)
                    return !1;
                return this.inViewFrustum = !0, !0;
              },
              get_sphereRadius: function() {
                return this.sphereRadius;
              },
              get_sphereCenter: function() {
                return this.sphereCenter;
              },
              geoTo3d: function(b, Le, xe) {
                if (this.dataset.get_dataSetType() === 3) {
                  var ze = t.Vector3d.create(-(Math.cos(Le * Pe.RC) * Math.cos(b * Pe.RC) * this.radius), Math.sin(b * Pe.RC) * this.radius, Math.sin(Le * Pe.RC) * Math.cos(b * Pe.RC) * this.radius);
                  return ze;
                } else {
                  Le -= 180;
                  var ze = t.Vector3d.create(Math.cos(Le * Pe.RC) * Math.cos(b * Pe.RC) * this.radius, Math.sin(b * Pe.RC) * this.radius, Math.sin(Le * Pe.RC) * Math.cos(b * Pe.RC) * this.radius);
                  return ze;
                }
              },
              onCreateVertexBuffer: function(b, Le) {
              },
              get_dataset: function() {
                return this.dataset;
              },
              set_dataset: function(b) {
                return this.dataset = b, b;
              },
              get_key: function() {
                return this._key == null && (this._key = (0, y.getTileKey)(this.dataset, this.level, this.tileX, this.tileY, this.parent)), this._key;
              },
              // URL parameters
              //
              //{0} ImageSetID
              //{1} level
              //{2} x tile id
              //{3} y tile id
              //{4} quadtree address (VE style)
              //{5} quadtree address (Google maps style)
              //{6} top left corner RA
              //{7} top left corner Dec
              //{8} bottom right corner RA
              //{9} bottom right corner dec
              //{10} bottom left corner RA
              //{11} bottom left corner dec
              //{12} top right corner RA
              //{13} top right corner dec
              //{X} - Tile X value
              //{Y} - Tile Y value
              //{L} - Tile Level
              //{Q} - Quad Key ID
              //{S} - Last Digit of Quadkey
              get_URL: function() {
                var b = Ee.URLHelpers.singleton.rewrite(this.dataset.get_url(), 0), Le = b;
                if (b.indexOf("{1}") > -1)
                  return !this.dataset.get_projection() && !s.ss.emptyString(this.dataset.get_quadTreeTileMap()) ? (Le = s.ss.format(b, this.getServerID(), this.getTileID()), Le.indexOf("virtualearth.net") > -1 && (Le += "&n=z"), Le) : s.ss.format(b, this.dataset.get_imageSetID(), this.level, this.tileX, this.tileY);
                Le = s.ss.replaceString(Le, "{X}", this.tileX.toString()), Le = s.ss.replaceString(Le, "{Y}", this.tileY.toString()), Le = s.ss.replaceString(Le, "{L}", this.level.toString());
                var xe = 0;
                Le.indexOf("{S:0}") > -1 && (xe = 0, Le = s.ss.replaceString(Le, "{S:0}", "{S}")), Le.indexOf("{S:1}") > -1 && (xe = 1, Le = s.ss.replaceString(Le, "{S:1}", "{S}")), Le.indexOf("{S:2}") > -1 && (xe = 2, Le = s.ss.replaceString(Le, "{S:2}", "{S}")), Le.indexOf("{S:3}") > -1 && (xe = 3, Le = s.ss.replaceString(Le, "{S:3}", "{S}")), Le.indexOf("a{S}") > -1 && (Le = s.ss.replaceString(Le, "a{S}", "r{S}")), Le.indexOf("h{S}") > -1 && (Le = s.ss.replaceString(Le, "h{S}", "r{S}")), Le.indexOf("//r{S}.ortho.tiles.virtualearth.net") > -1 && (Le = s.ss.replaceString(Le, "//r{S}.ortho.tiles.virtualearth.net", "//ecn.t{S}.tiles.virtualearth.net"));
                var ze = this.getTileID(), Se = "";
                return ze.length ? Se = ze.substr(ze.length - 1, 1) : Se = xe.toString(), Le = s.ss.replaceString(Le, "{Q}", ze), Le = s.ss.replaceString(Le, "{S}", Se), Le.indexOf("virtualearth.net") > -1 && (Le += "&n=z"), Le;
              },
              get_demURL: function() {
                var b = Ee.URLHelpers.singleton.rewrite(this.dataset.get_demUrl(), 0);
                if (!this.dataset.get_projection() && !o.freestandingMode && (Ee.URLHelpers.singleton.coreStaticUrl("wwtweb/demtile.aspx?q={0},{1},{2},M"), s.ss.emptyString(b)), b.indexOf("{1}") > -1)
                  return s.ss.format(b + "&new", this.level, this.tileX, this.tileY);
                var Le = b;
                Le = s.ss.replaceString(Le, "{X}", this.tileX.toString()), Le = s.ss.replaceString(Le, "{Y}", this.tileY.toString()), Le = s.ss.replaceString(Le, "{L}", this.level.toString());
                var xe = 0;
                Le.indexOf("{S:0}") > -1 && (xe = 0, Le = s.ss.replaceString(Le, "{S:0}", "{S}")), Le.indexOf("{S:1}") > -1 && (xe = 1, Le = s.ss.replaceString(Le, "{S:1}", "{S}")), Le.indexOf("{S:2}") > -1 && (xe = 2, Le = s.ss.replaceString(Le, "{S:2}", "{S}")), Le.indexOf("{S:3}") > -1 && (xe = 3, Le = s.ss.replaceString(Le, "{S:3}", "{S}"));
                var ze = this.getTileID(), Se = "";
                return ze.length ? Se = ze.substr(ze.length - 1, 1) : Se = xe.toString(), Le = s.ss.replaceString(Le, "{Q}", ze), Le = s.ss.replaceString(Le, "{S}", Se), Le;
              },
              getServerID: function() {
                var b = (this.tileX & 1) + ((this.tileY & 1) << 1);
                return b;
              },
              getTileID: function() {
                if (this._tileId != null)
                  return this._tileId;
                var b = this.level, Le = this.tileX, xe = this.tileY;
                this.dataset.get_projection() === 1 && b++;
                var ze = this.dataset.get_quadTreeTileMap();
                if (s.ss.emptyString(ze))
                  return this._tileId = "0", this._tileId;
                for (var Se = new s.ss.StringBuilder(), Te = b; Te > 0; --Te) {
                  var D = 1 << Te - 1, ke = 0;
                  Le & D && (ke = 1), xe & D && (ke += 2), Se.append(ze.substr(ke, 1));
                }
                return this._tileId = Se.toString(), this._tileId;
              },
              get_vertexCount: function() {
                return this._vertexCount;
              },
              set_vertexCount: function(b) {
                return this._vertexCount = b, b;
              }
            };
            (0, a.registerType)("Tile", [Pe, k, null]);
          }
        ),
        /***/
        "./esm/tile_cache.js": (
          /*!***************************!*\
            !*** ./esm/tile_cache.js ***!
            \***************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              TileCache: () => (
                /* binding */
                u
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), o = n(
              /*! ./util.js */
              "./esm/util.js"
            ), c = n(
              /*! ./tile.js */
              "./esm/tile.js"
            ), _ = n(
              /*! ./imageset.js */
              "./esm/imageset.js"
            );
            function u() {
            }
            u._queue = {}, u._tiles = {}, u.openThreads = 8, u.readyToRenderCount = 0, u.maxTileCacheSize = 800, u.maxReadyToRenderSize = 200, u._maxTotalToPurge = 0, u.get_queueCount = function() {
              return s.ss.keyCount(u._queue);
            }, u.getTile = function(g, Ee, Ve, Me, B) {
              var Pe = null, k = (0, o.getTileKey)(Me, g, Ee, Ve, B);
              return s.ss.keyExists(u._tiles, k) ? Pe = u._tiles[k] : (Pe = _.Imageset.getNewTile(Me, g, Ee, Ve, B), Pe != null && (u._tiles[k] = Pe)), Pe;
            }, (0, l.set_tileCacheGetTile)(u.getTile), u.getCachedTile = function(g, Ee, Ve, Me, B) {
              if (g < Me.get_baseLevel())
                return null;
              var Pe = null, k = (0, o.getTileKey)(Me, g, Ee, Ve, B);
              try {
                if (s.ss.keyExists(u._tiles, k))
                  Pe = u._tiles[k];
                else
                  return null;
              } catch {
              }
              return Pe;
            }, (0, l.set_tileCacheGetCachedTile)(u.getCachedTile), u.getReadyToRenderTileCount = function() {
              var g = [], Ee = [];
              try {
                try {
                  for (var Ve = s.ss.enumerate(s.ss.keys(u._tiles)); Ve.moveNext(); ) {
                    var Me = Ve.current, B = u._tiles[Me];
                    B.renderedGeneration < c.Tile.currentRenderGeneration - 10 && !(B.requestPending || B.downloading) && (B.readyToRender ? Ee.push(B) : g.push(B));
                  }
                } catch {
                }
                return Ee.length;
              } catch {
                return -1;
              }
            }, u.processQueue = function(g) {
              for (; s.ss.keyCount(u._queue) > 0 && u.openThreads > 0; ) {
                for (var Ee = 1e5, Ve = !1, Me = null, B = s.ss.enumerate(s.ss.keys(u._queue)); B.moveNext(); ) {
                  var Pe = B.current, k = u._queue[Pe];
                  if (!k.requestPending && k.inViewFrustum) {
                    var b = t.Vector3d.makeCopy(k.get_sphereCenter());
                    b._transformByMatrics(g.get_world()), g.space ? b.subtract(t.Vector3d.create(0, 0, -1)) : b.subtract(g.cameraPosition);
                    var Le = Math.max(0, b.length() - k.get_sphereRadius()), xe = k.get_dataset().get_projection() === _.ProjectionType.tangent || k.get_dataset().get_projection() === _.ProjectionType.skyImage;
                    Le < Ee && (!Ve || xe) && (Ee = Le, Me = k.get_key(), k.level, Ve = xe);
                  }
                }
                if (Me != null) {
                  var ze = u._queue[Me];
                  ze.requestPending = !0, u.openThreads--, u.openThreads < 0 && (u.openThreads = 0), ze.requestImage(), ze.get_dataset().get_elevationModel() && ze.requestDem();
                } else
                  return;
              }
            }, u.addTileToQueue = function(g) {
              var Ee;
              return Ee = 256, !g.downloading && !g.readyToRender && (s.ss.keyExists(u._queue, g.get_key()) ? u._queue[g.get_key()].requestHits += Ee : (g.requestHits = Ee, u._queue[g.get_key()] = g)), !0;
            }, (0, l.set_tileCacheAddTileToQueue)(u.addTileToQueue), u.removeFromQueue = function(g, Ee) {
              if (Ee) {
                var Ve = u._queue[g];
                Ve != null && (Ve.requestPending = !1, delete u._queue[Ve.get_key()]), u.openThreads++;
              }
              delete u._queue[g];
            }, (0, l.set_tileCacheRemoveFromQueue)(u.removeFromQueue), u.clearCache = function() {
              s.ss.clearKeys(u._tiles);
            }, u.purgeQueue = function() {
              s.ss.clearKeys(u._queue);
            }, u.purgeLRU = function() {
              if (!(s.ss.keyCount(u._tiles) < u.maxReadyToRenderSize)) {
                var g = [], Ee = [];
                try {
                  try {
                    for (var Ve = s.ss.enumerate(s.ss.keys(u._tiles)); Ve.moveNext(); ) {
                      var Me = Ve.current, B = u._tiles[Me];
                      B.renderedGeneration < c.Tile.currentRenderGeneration - 10 && !(B.requestPending || B.downloading) && (B.readyToRender ? Ee.push(B) : g.push(B));
                    }
                  } catch {
                  }
                  if (u.readyToRenderCount = Ee.length, Ee.length > u.maxReadyToRenderSize) {
                    Ee.sort(function(Le, xe) {
                      return xe.accessCount < Le.accessCount ? 1 : xe.accessCount === Le.accessCount ? 0 : -1;
                    });
                    for (var Pe = Ee.length - u.maxReadyToRenderSize, k = s.ss.enumerate(Ee); k.moveNext(); ) {
                      var B = k.current;
                      if (Pe < 1)
                        break;
                      B.cleanUp(!1), Pe--;
                    }
                  }
                  if (s.ss.keyCount(u._tiles) < u.maxTileCacheSize)
                    return;
                  if (g.length > u.maxTileCacheSize) {
                    g.sort(function(xe, ze) {
                      return ze.accessCount < xe.accessCount ? 1 : ze.accessCount === xe.accessCount ? 0 : -1;
                    });
                    var Pe = g.length - u.maxTileCacheSize;
                    Pe > 20 && (Pe = 20);
                    for (var b = s.ss.enumerate(g); b.moveNext(); ) {
                      var B = b.current;
                      if (Pe < 1)
                        break;
                      B.cleanUp(!0), delete u._tiles[B.get_key()], Pe--;
                    }
                  }
                } catch {
                } finally {
                }
              }
            }, u.decimateQueue = function() {
              for (var g = [], Ee = s.ss.enumerate(s.ss.keys(u._queue)); Ee.moveNext(); ) {
                var Ve = Ee.current, Me = u._queue[Ve];
                if (!Me.requestPending) {
                  Me.requestHits = Me.requestHits / 2;
                  try {
                    Me.requestHits < 2 ? g.push(Me) : Me.inViewFrustum || g.push(Me);
                  } catch {
                  }
                }
              }
              for (var B = s.ss.enumerate(g); B.moveNext(); ) {
                var Me = B.current;
                delete u._queue[Me.get_key()];
              }
            };
            var y = {};
            (0, a.registerType)("TileCache", [u, y, null]);
          }
        ),
        /***/
        "./esm/toast_tile.js": (
          /*!***************************!*\
            !*** ./esm/toast_tile.js ***!
            \***************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ToastTile: () => (
                /* binding */
                Ee
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), o = n(
              /*! ./graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), c = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), _ = n(
              /*! ./render_triangle.js */
              "./esm/render_triangle.js"
            ), u = n(
              /*! ./tile.js */
              "./esm/tile.js"
            ), y = n(
              /*! ./triangle.js */
              "./esm/triangle.js"
            ), g = n(
              /*! ./util.js */
              "./esm/util.js"
            );
            function Ee() {
              this._topDown$1 = !0, this.backslash = !1, this._vertexList$1 = null, this._childTriangleList$1 = null, this._subDivisionLevel$1 = 4, this._subDivided$1 = !1, u.Tile.call(this);
            }
            Ee.slashIndexBuffer = new Array(64), Ee.backSlashIndexBuffer = new Array(64), Ee.rootIndexBuffer = new Array(4), Ee._cloneArray$1 = function(Me) {
              for (var B = Me.length, Pe = new Uint16Array(B), k = Pe, b = 0; b < B; b++)
                k[b] = Me[b];
              return k;
            }, Ee.create = function(Me, B, Pe, k, b) {
              var Le = new Ee();
              return Le.parent = b, Le.level = Me, Le.tileX = B, Le.tileY = Pe, Le.dataset = k, Le._topDown$1 = !k.get_bottomsUp(), Le.tileX !== B && alert("bad"), k.get_meanRadius() ? Le.set__demScaleFactor(k.get_meanRadius()) : k.get_dataSetType() ? Le.set__demScaleFactor(3396010) : Le.set__demScaleFactor(6371e3), Le.computeBoundingSphere(), Le;
            };
            var Ve = {
              computeBoundingSphere: function() {
                this._initializeGrids$1(), this.topLeft = this.bounds[0 + 3 * 0].position.copy(), this.bottomRight = this.bounds[2 + 3 * 2].position.copy(), this.topRight = this.bounds[2 + 3 * 0].position.copy(), this.bottomLeft = this.bounds[0 + 3 * 2].position.copy(), this.calcSphere();
              },
              getIndexBuffer: function(Me, B) {
                return this.level ? this.backslash ? Ee.backSlashIndexBuffer[Me * 16 + B] : Ee.slashIndexBuffer[Me * 16 + B] : Ee.rootIndexBuffer[Me];
              },
              _processIndexBuffer$1: function(Me, B) {
                if (!this.level) {
                  Ee.rootIndexBuffer[B] = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ee.rootIndexBuffer[B]), t.tilePrepDevice.bufferData(o.WEBGL.ELEMENT_ARRAY_BUFFER, Me, o.WEBGL.STATIC_DRAW);
                  return;
                }
                for (var Pe = 0; Pe < 16; Pe++) {
                  var k = Ee._cloneArray$1(Me);
                  this._processAccomindations$1(k, Pe), this.backslash ? (Ee.backSlashIndexBuffer[B * 16 + Pe] = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ee.backSlashIndexBuffer[B * 16 + Pe]), t.tilePrepDevice.bufferData(o.WEBGL.ELEMENT_ARRAY_BUFFER, k, o.WEBGL.STATIC_DRAW)) : (Ee.slashIndexBuffer[B * 16 + Pe] = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ELEMENT_ARRAY_BUFFER, Ee.slashIndexBuffer[B * 16 + Pe]), t.tilePrepDevice.bufferData(o.WEBGL.ELEMENT_ARRAY_BUFFER, k, o.WEBGL.STATIC_DRAW));
                }
              },
              _processAccomindations$1: function(Me, B) {
                for (var Pe = {}, k = {}, b = s.ss.enumerate(Me); b.moveNext(); ) {
                  var Le = b.current, xe = this._vertexList$1[Le], ze = s.ss.truncate(xe.tu * 16 + 0.5), Se = s.ss.truncate(xe.tv * 16 + 0.5), Te = (Se << 8) + ze;
                  s.ss.keyExists(k, Te) || (k[Te] = Le);
                }
                var D = 16;
                if ((B & 1) === 1)
                  for (var ke = 1; ke < D; ke += 2) {
                    var Fe = D, He = (Fe << 8) + ke, We = (Fe << 8) + ke + 1;
                    s.ss.keyExists(k, He) && (Pe[k[He]] = k[We]);
                  }
                if ((B & 2) === 2)
                  for (var Fe = 1; Fe < D; Fe += 2) {
                    var ke = D, He = (Fe << 8) + ke, We = (Fe + 1 << 8) + ke;
                    s.ss.keyExists(k, He) && (Pe[k[He]] = k[We]);
                  }
                if ((B & 4) === 4)
                  for (var ke = 1; ke < D; ke += 2) {
                    var Fe = 0, He = (Fe << 8) + ke, We = (Fe << 8) + ke + 1;
                    s.ss.keyExists(k, He) && (Pe[k[He]] = k[We]);
                  }
                if ((B & 8) === 8)
                  for (var Fe = 1; Fe < D; Fe += 2) {
                    var ke = 0, He = (Fe << 8) + ke, We = (Fe + 1 << 8) + ke;
                    s.ss.keyExists(k, He) && (Pe[k[He]] = k[We]);
                  }
                if (s.ss.keyCount(Pe))
                  for (var Ke = 0; Ke < Me.length; Ke++)
                    s.ss.keyExists(Pe, Me[Ke]) && (Me[Ke] = Pe[Me[Ke]]);
              },
              calculateFullSphere: function(Me) {
                var B = l.ConvexHull.findEnclosingSphere(Me);
                this.sphereCenter = B.center, this.sphereRadius = B.radius;
              },
              isPointInTile: function(Me, B) {
                if (!this.level)
                  return !0;
                if (this.level === 1)
                  return B >= 0 && B <= 90 && !this.tileX && this.tileY === 1 || B > 90 && B <= 180 && this.tileX === 1 && this.tileY === 1 || B < 0 && B >= -90 && !this.tileX && !this.tileY || B < -90 && B >= -180 && this.tileX === 1 && !this.tileY;
                if (!this.demReady || this.demData == null)
                  return !1;
                var Pe = c.Coordinates.geoTo3dDouble(-Me, B), k = this._isLeftOfHalfSpace$1(this.topLeft.copy(), this.topRight.copy(), Pe), b = this._isLeftOfHalfSpace$1(this.topRight.copy(), this.bottomRight.copy(), Pe), Le = this._isLeftOfHalfSpace$1(this.bottomRight.copy(), this.bottomLeft.copy(), Pe), xe = this._isLeftOfHalfSpace$1(this.bottomLeft.copy(), this.topLeft.copy(), Pe);
                return !!(k && b && Le && xe);
              },
              _isLeftOfHalfSpace$1: function(Me, B, Pe) {
                Me.normalize(), B.normalize();
                var k = l.Vector3d.cross(Me, B), b = l.Vector3d.dot(k, Pe);
                return b < 0;
              },
              getSurfacePointAltitude: function(Me, B, Pe) {
                if (this.level < u.Tile.lastDeepestLevel)
                  for (var k = 0; k < 4; k++) {
                    var b = this.children[k];
                    if (b != null && b.isPointInTile(Me, B)) {
                      var Le = b.getSurfacePointAltitude(Me, B, Pe);
                      if (Le)
                        return Le;
                      break;
                    }
                  }
                u.Tile.tileTargetLevel = this.level, u.Tile.tileTargetX = this.tileX, u.Tile.tileTargetY = this.tileY;
                var xe = c.Coordinates.geoTo3dDouble(-Me, B);
                xe = l.Vector3d.subtractVectors(new l.Vector3d(), xe);
                var ze = g.DistanceCalc.getUVFromInnerPoint(this.topLeft.copy(), this.topRight.copy(), this.bottomLeft.copy(), this.bottomRight.copy(), xe.copy()), Se = Math.max(0, Math.min(16, ze.x * 16)), Te = Math.max(0, Math.min(16, ze.y * 16)), D = Math.max(0, Math.min(15, s.ss.truncate(ze.x * 16))), ke = Math.max(0, Math.min(15, s.ss.truncate(ze.y * 16))), Fe = Se - D, He = Te - ke;
                if (this.demArray != null) {
                  var We = this.demArray[D + 17 * ke], Ke = this.demArray[D + 1 + 17 * ke], $ = this.demArray[D + 17 * (ke + 1)], De = this.demArray[D + 1 + 17 * (ke + 1)], Re = We * (1 - Fe) + Fe * Ke, Ie = $ * (1 - Fe) + Fe * De, O = Re * (1 - He) + He * Ie;
                  return O / this.get__demScaleFactor();
                }
                return this.demAverage / this.get__demScaleFactor();
              },
              _initializeGrids$1: function() {
                if (this._vertexList$1 = [], this._childTriangleList$1 = new Array(4), this._childTriangleList$1[0] = [], this._childTriangleList$1[1] = [], this._childTriangleList$1[2] = [], this._childTriangleList$1[3] = [], this.bounds = new Array(9), this.level > 0) {
                  this.parent == null && (this.parent = (0, t.tileCacheGetTile)(this.level - 1, this.tileX / 2, this.tileY / 2, this.dataset, null));
                  var Me = this.parent, B = this.tileX % 2, Pe = this.tileY % 2;
                  this.level > 1 ? this.backslash = Me.backslash : this.backslash = (B === 1 ^ Pe === 1) === 1, this.bounds[0 + 3 * 0] = Me.bounds[B + 3 * Pe].copy(), this.bounds[1 + 3 * 0] = this._midpoint$1(Me.bounds[B + 3 * Pe], Me.bounds[B + 1 + 3 * Pe]), this.bounds[2 + 3 * 0] = Me.bounds[B + 1 + 3 * Pe].copy(), this.bounds[0 + 3 * 1] = this._midpoint$1(Me.bounds[B + 3 * Pe], Me.bounds[B + 3 * (Pe + 1)]), this.backslash ? this.bounds[1 + 3 * 1] = this._midpoint$1(Me.bounds[B + 3 * Pe], Me.bounds[B + 1 + 3 * (Pe + 1)]) : this.bounds[1 + 3 * 1] = this._midpoint$1(Me.bounds[B + 1 + 3 * Pe], Me.bounds[B + 3 * (Pe + 1)]), this.bounds[2 + 3 * 1] = this._midpoint$1(Me.bounds[B + 1 + 3 * Pe], Me.bounds[B + 1 + 3 * (Pe + 1)]), this.bounds[0 + 3 * 2] = Me.bounds[B + 3 * (Pe + 1)].copy(), this.bounds[1 + 3 * 2] = this._midpoint$1(Me.bounds[B + 3 * (Pe + 1)], Me.bounds[B + 1 + 3 * (Pe + 1)]), this.bounds[2 + 3 * 2] = Me.bounds[B + 1 + 3 * (Pe + 1)].copy(), this.bounds[0 + 3 * 0].tu = 0 * t.tileUvMultiple, this.bounds[0 + 3 * 0].tv = 0 * t.tileUvMultiple, this.bounds[1 + 3 * 0].tu = 0.5 * t.tileUvMultiple, this.bounds[1 + 3 * 0].tv = 0 * t.tileUvMultiple, this.bounds[2 + 3 * 0].tu = 1 * t.tileUvMultiple, this.bounds[2 + 3 * 0].tv = 0 * t.tileUvMultiple, this.bounds[0 + 3 * 1].tu = 0 * t.tileUvMultiple, this.bounds[0 + 3 * 1].tv = 0.5 * t.tileUvMultiple, this.bounds[1 + 3 * 1].tu = 0.5 * t.tileUvMultiple, this.bounds[1 + 3 * 1].tv = 0.5 * t.tileUvMultiple, this.bounds[2 + 3 * 1].tu = 1 * t.tileUvMultiple, this.bounds[2 + 3 * 1].tv = 0.5 * t.tileUvMultiple, this.bounds[0 + 3 * 2].tu = 0 * t.tileUvMultiple, this.bounds[0 + 3 * 2].tv = 1 * t.tileUvMultiple, this.bounds[1 + 3 * 2].tu = 0.5 * t.tileUvMultiple, this.bounds[1 + 3 * 2].tv = 1 * t.tileUvMultiple, this.bounds[2 + 3 * 2].tu = 1 * t.tileUvMultiple, this.bounds[2 + 3 * 2].tv = 1 * t.tileUvMultiple, this._vertexList$1.push(this.bounds[0 + 3 * 0]), this._vertexList$1.push(this.bounds[1 + 3 * 0]), this._vertexList$1.push(this.bounds[2 + 3 * 0]), this._vertexList$1.push(this.bounds[0 + 3 * 1]), this._vertexList$1.push(this.bounds[1 + 3 * 1]), this._vertexList$1.push(this.bounds[2 + 3 * 1]), this._vertexList$1.push(this.bounds[0 + 3 * 2]), this._vertexList$1.push(this.bounds[1 + 3 * 2]), this._vertexList$1.push(this.bounds[2 + 3 * 2]), this.backslash ? (this._childTriangleList$1[0].push(y.Triangle.create(4, 1, 0)), this._childTriangleList$1[0].push(y.Triangle.create(3, 4, 0)), this._childTriangleList$1[1].push(y.Triangle.create(5, 2, 1)), this._childTriangleList$1[1].push(y.Triangle.create(4, 5, 1)), this._childTriangleList$1[2].push(y.Triangle.create(7, 4, 3)), this._childTriangleList$1[2].push(y.Triangle.create(6, 7, 3)), this._childTriangleList$1[3].push(y.Triangle.create(8, 5, 4)), this._childTriangleList$1[3].push(y.Triangle.create(7, 8, 4))) : (this._childTriangleList$1[0].push(y.Triangle.create(3, 1, 0)), this._childTriangleList$1[0].push(y.Triangle.create(4, 1, 3)), this._childTriangleList$1[1].push(y.Triangle.create(4, 2, 1)), this._childTriangleList$1[1].push(y.Triangle.create(5, 2, 4)), this._childTriangleList$1[2].push(y.Triangle.create(6, 4, 3)), this._childTriangleList$1[2].push(y.Triangle.create(7, 4, 6)), this._childTriangleList$1[3].push(y.Triangle.create(7, 5, 4)), this._childTriangleList$1[3].push(y.Triangle.create(8, 5, 7)));
                } else
                  this.bounds[0 + 3 * 0] = l.PositionTexture.create(0, -1, 0, 0, 0), this.bounds[1 + 3 * 0] = l.PositionTexture.create(0, 0, 1, 0.5, 0), this.bounds[2 + 3 * 0] = l.PositionTexture.create(0, -1, 0, 1, 0), this.bounds[0 + 3 * 1] = l.PositionTexture.create(-1, 0, 0, 0, 0.5), this.bounds[1 + 3 * 1] = l.PositionTexture.create(0, 1, 0, 0.5, 0.5), this.bounds[2 + 3 * 1] = l.PositionTexture.create(1, 0, 0, 1, 0.5), this.bounds[0 + 3 * 2] = l.PositionTexture.create(0, -1, 0, 0, 1), this.bounds[1 + 3 * 2] = l.PositionTexture.create(0, 0, -1, 0.5, 1), this.bounds[2 + 3 * 2] = l.PositionTexture.create(0, -1, 0, 1, 1), this._vertexList$1.push(this.bounds[0 + 3 * 0]), this._vertexList$1.push(this.bounds[1 + 3 * 0]), this._vertexList$1.push(this.bounds[2 + 3 * 0]), this._vertexList$1.push(this.bounds[0 + 3 * 1]), this._vertexList$1.push(this.bounds[1 + 3 * 1]), this._vertexList$1.push(this.bounds[2 + 3 * 1]), this._vertexList$1.push(this.bounds[0 + 3 * 2]), this._vertexList$1.push(this.bounds[1 + 3 * 2]), this._vertexList$1.push(this.bounds[2 + 3 * 2]), this._childTriangleList$1[0].push(y.Triangle.create(3, 1, 0)), this._childTriangleList$1[0].push(y.Triangle.create(4, 1, 3)), this._childTriangleList$1[1].push(y.Triangle.create(5, 2, 1)), this._childTriangleList$1[1].push(y.Triangle.create(4, 5, 1)), this._childTriangleList$1[2].push(y.Triangle.create(7, 4, 3)), this._childTriangleList$1[2].push(y.Triangle.create(6, 7, 3)), this._childTriangleList$1[3].push(y.Triangle.create(7, 5, 4)), this._childTriangleList$1[3].push(y.Triangle.create(8, 5, 7));
              },
              _midpoint$1: function(Me, B) {
                var Pe = l.Vector3d.lerp(Me.position, B.position, 0.5), k = l.Vector2d.lerp(l.Vector2d.create(Me.tu, Me.tv), l.Vector2d.create(B.tu, B.tv), 0.5);
                return Pe.normalize(), l.PositionTexture.createPos(Pe, k.x, k.y);
              },
              createGeometry: function(Me) {
                if (this.geometryCreated)
                  return !0;
                if (this.geometryCreated = !0, u.Tile.prototype.createGeometry.call(this, Me), !this._subDivided$1) {
                  this._vertexList$1 == null && this._initializeGrids$1(), t.tileUvMultiple == 256 ? !this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1 ? this._subDivisionLevel$1 = Math.min(5, Math.max(0, 5 - this.level)) : this._subDivisionLevel$1 = Math.min(5, Math.max(0, 5 - this.level)) : this.demTile && this.level > 1 && (this.demArray = new Array(17 * 17), this.demSize = 17 * 17, this.backslash ? Ee._backslashYIndex$1 == null && (this._tempBackslashYIndex$1 = new Array(this.demSize), this._tempBackslashXIndex$1 = new Array(this.demSize)) : Ee._slashYIndex$1 == null && (this._tempSlashYIndex$1 = new Array(this.demSize), this._tempSlashXIndex$1 = new Array(this.demSize)));
                  for (var B = 0; B < 4; B++)
                    for (var Pe = this._subDivisionLevel$1; Pe-- > 1; ) {
                      for (var k = [], b = s.ss.enumerate(this._childTriangleList$1[B]); b.moveNext(); ) {
                        var Le = b.current;
                        Le.subDivide(k, this._vertexList$1);
                      }
                      this._childTriangleList$1[B] = k;
                    }
                  if (Me.gl == null)
                    for (var B = 0; B < 4; B++) {
                      this._renderTriangleLists[B] = [];
                      for (var xe = s.ss.enumerate(this._childTriangleList$1[B]); xe.moveNext(); ) {
                        var Le = xe.current, ze = this._vertexList$1[Le.c], Se = this._vertexList$1[Le.b], Te = this._vertexList$1[Le.a];
                        this._renderTriangleLists[B].push(_.RenderTriangle.create(ze, Se, Te, this.texture, this.level));
                      }
                    }
                  else {
                    this._vertexBuffer = t.tilePrepDevice.createBuffer(), t.tilePrepDevice.bindBuffer(o.WEBGL.ARRAY_BUFFER, this._vertexBuffer);
                    for (var D = new Float32Array(this._vertexList$1.length * 5), ke = D, Fe = 0, He = s.ss.enumerate(this._vertexList$1); He.moveNext(); ) {
                      var We = He.current;
                      this.demTile ? (Fe = this.addVertex(ke, Fe, this._getMappedVertex(We)), this.demIndex++) : Fe = this.addVertex(ke, Fe, We);
                    }
                    this.demTile && (this.backslash ? this._tempBackslashXIndex$1 != null && (Ee._backslashXIndex$1 = this._tempBackslashXIndex$1, Ee._backslashYIndex$1 = this._tempBackslashYIndex$1, this._tempBackslashXIndex$1 = null, this._tempBackslashYIndex$1 = null) : this._tempSlashYIndex$1 != null && (Ee._slashXIndex$1 = this._tempSlashXIndex$1, Ee._slashYIndex$1 = this._tempSlashYIndex$1, this._tempSlashYIndex$1 = null, this._tempSlashXIndex$1 = null)), t.tilePrepDevice.bufferData(o.WEBGL.ARRAY_BUFFER, D, o.WEBGL.STATIC_DRAW);
                    for (var B = 0; B < 4; B++)
                      if (this.triangleCount = this._childTriangleList$1[B].length, this.getIndexBuffer(B, 0) == null) {
                        var Ke = new Uint16Array(this.triangleCount * 3), $ = Ke;
                        Fe = 0;
                        for (var De = s.ss.enumerate(this._childTriangleList$1[B]); De.moveNext(); ) {
                          var Le = De.current;
                          $[Fe++] = Le.c, $[Fe++] = Le.b, $[Fe++] = Le.a;
                        }
                        this._processIndexBuffer$1($, B);
                      }
                  }
                  this._subDivided$1 = !0;
                }
                return !0;
              },
              _getMappedVertex: function(Me) {
                var B = new l.PositionTexture(), Pe = c.Coordinates.cartesianToSpherical2(Me.position);
                if (Pe.get_lng() < -180 && Pe.set_lng(Pe.get_lng() + 360), Pe.get_lng() > 180 && Pe.set_lng(Pe.get_lng() - 360), this.level > 1) {
                  var k = s.ss.truncate(Me.tu * 16 + 0.5), b = s.ss.truncate(Me.tv * 16 + 0.5);
                  this.demArray[k + b * 17] = this.demData[this.demIndex], this.backslash ? this._tempBackslashYIndex$1 != null && (this._tempBackslashXIndex$1[this.demIndex] = k, this._tempBackslashYIndex$1[this.demIndex] = b) : this._tempSlashYIndex$1 != null && (this._tempSlashXIndex$1[this.demIndex] = k, this._tempSlashYIndex$1[this.demIndex] = b);
                }
                var Le = this.geoTo3dWithAlt(Pe.get_lat(), Pe.get_lng(), !1, !1);
                return B.tu = Me.tu, B.tv = Me.tv, Le.subtract(this.localCenter), B.position = Le, B;
              },
              cleanUp: function(Me) {
                u.Tile.prototype.cleanUp.call(this, Me), this._vertexList$1 != null && (this._vertexList$1 = null), this._childTriangleList$1 != null && (this._childTriangleList$1 = null), this._subDivided$1 = !1, this.demArray = null;
              },
              _getDemSample$1: function(Me, B) {
                return this.demArray[(16 - B) * 17 + Me];
              },
              createDemFromParent: function() {
                var Me = s.ss.safeCast(this.parent, Ee);
                if (Me == null)
                  return !1;
                var B = this.tileX % 2 === 1 ? 8 : 0, Pe = this.tileY % 2 ? 0 : 8;
                this.demArray = new Array(17 * 17);
                for (var k = 0; k < 17; k += 2)
                  for (var b = !0, Le = 0; Le < 17; Le++)
                    b ? this.demArray[(16 - k) * 17 + Le] = Me._getDemSample$1(Le / 2 + B, k / 2 + Pe) : this.demArray[(16 - k) * 17 + Le] = (Me._getDemSample$1(Le / 2 + B, k / 2 + Pe) + Me._getDemSample$1(Le / 2 + B + 1, k / 2 + Pe)) / 2, b = !b;
                for (var xe = 1; xe < 17; xe += 2)
                  for (var ze = 0; ze < 17; ze++)
                    this.demArray[(16 - xe) * 17 + ze] = (this._getDemSample$1(ze, xe - 1) + this._getDemSample$1(ze, xe + 1)) / 2;
                this.demData = new Array(this.demSize);
                for (var Se = 0; Se < this.demSize; Se++)
                  this.backslash ? this.demData[Se] = this.demArray[Ee._backslashXIndex$1[Se] + Ee._backslashYIndex$1[Se] * 17] : this.demData[Se] = this.demArray[Ee._slashXIndex$1[Se] + Ee._slashYIndex$1[Se] * 17], this.demAverage += this.demData[Se];
                return this.demAverage /= this.demData.length, this.demReady = !0, !0;
              }
            };
            (0, a.registerType)("ToastTile", [Ee, Ve, u.Tile]);
          }
        ),
        /***/
        "./esm/tour.js": (
          /*!*********************!*\
            !*** ./esm/tour.js ***!
            \*********************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Tour: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), l = n(
              /*! ./interfaces.js */
              "./esm/interfaces.js"
            ), o = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            );
            function c() {
              this.userLevel = 0, this.classification = 0, this.averageRating = 0, this.lengthInSecs = 0, this._thumbnailUrlField = "";
            }
            c._fromXml = function(u) {
              var y = new c();
              return u.attributes.getNamedItem("ID") != null && (y.id = u.attributes.getNamedItem("ID").nodeValue), u.attributes.getNamedItem("TourUrl") != null && (y._tourUrl = u.attributes.getNamedItem("TourUrl").nodeValue), u.attributes.getNamedItem("Title") != null && (y.title = u.attributes.getNamedItem("Title").nodeValue), u.attributes.getNamedItem("Description") != null && (y.description = u.attributes.getNamedItem("Description").nodeValue), u.attributes.getNamedItem("Classification") != null && (y.classification = a.Enums.parse("Classification", u.attributes.getNamedItem("Classification").nodeValue)), u.attributes.getNamedItem("AuthorEmail") != null && (y.authorEmail = u.attributes.getNamedItem("AuthorEmail").nodeValue), u.attributes.getNamedItem("Author") != null && (y.author = u.attributes.getNamedItem("Author").nodeValue), u.attributes.getNamedItem("AuthorURL") != null && (y.authorURL = u.attributes.getNamedItem("AuthorURL").nodeValue), u.attributes.getNamedItem("AuthorImageUrl") != null && (y.authorImageUrl = u.attributes.getNamedItem("AuthorImageUrl").nodeValue), u.attributes.getNamedItem("AverageRating") != null && (y.averageRating = parseFloat(u.attributes.getNamedItem("AverageRating").nodeValue)), u.attributes.getNamedItem("LengthInSecs") != null && (y.lengthInSecs = parseFloat(u.attributes.getNamedItem("LengthInSecs").nodeValue)), u.attributes.getNamedItem("OrganizationUrl") != null && (y.organizationUrl = u.attributes.getNamedItem("OrganizationUrl").nodeValue), u.attributes.getNamedItem("OrganizationName") != null && (y.organizationName = u.attributes.getNamedItem("OrganizationName").nodeValue), u.attributes.getNamedItem("RelatedTours") != null && (y.relatedTours = u.attributes.getNamedItem("RelatedTours").nodeValue), u.attributes.getNamedItem("Keywords") != null && (y.keywords = u.attributes.getNamedItem("Keywords").nodeValue), u.attributes.getNamedItem("ThumbnailUrl") != null && y.set_thumbnailUrl(u.attributes.getNamedItem("ThumbnailUrl").nodeValue), y;
            };
            var _ = {
              get_name: function() {
                return this.title;
              },
              get_thumbnail: function() {
                return this._thumbnail;
              },
              set_thumbnail: function(u) {
                return this._thumbnail = u, u;
              },
              get_thumbnailUrl: function() {
                if (s.ss.emptyString(this._thumbnailUrlField)) {
                  if (t.freestandingMode)
                    return o.URLHelpers.singleton.engineAssetUrl("thumb_star.jpg");
                } else
                  return this._thumbnailUrlField;
                return s.ss.format(o.URLHelpers.singleton.coreStaticUrl("wwtweb/GetTourThumbnail.aspx?GUID={0}"), this.id);
              },
              set_thumbnailUrl: function(u) {
                return this._thumbnailUrlField = u, u;
              },
              get_tourUrl: function() {
                return s.ss.emptyString(this._tourUrl) && !t.freestandingMode ? s.ss.format(o.URLHelpers.singleton.coreStaticUrl("wwtweb/GetTour.aspx?GUID={0}"), this.id) : this._tourUrl;
              },
              set_tourUrl: function(u) {
                return this._tourUrl = u, u;
              },
              get_bounds: function() {
                return this._bounds;
              },
              set_bounds: function(u) {
                return this._bounds = u, u;
              },
              get_isImage: function() {
                return !1;
              },
              get_isTour: function() {
                return !0;
              },
              get_isFolder: function() {
                return !1;
              },
              get_isCloudCommunityItem: function() {
                return !1;
              },
              get_readOnly: function() {
                return !1;
              },
              get_children: function() {
                return [];
              }
            };
            (0, a.registerType)("Tour", [c, _, null, l.IThumbnail]);
          }
        ),
        /***/
        "./esm/tours/file_cabinet.js": (
          /*!***********************************!*\
            !*** ./esm/tours/file_cabinet.js ***!
            \***********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              FileCabinet: () => (
                /* binding */
                u
              ),
              /* harmony export */
              FileEntry: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), l = n(
              /*! ../utilities/xml_text_writer.js */
              "./esm/utilities/xml_text_writer.js"
            ), o = n(
              /*! ../web_file.js */
              "./esm/web_file.js"
            );
            function c(g, Ee) {
              this.size = 0, this.offset = 0, this.filename = g, this.size = Ee;
            }
            var _ = {
              toString: function() {
                return this.filename;
              }
            };
            (0, a.registerType)("FileEntry", [c, _, null]);
            function u() {
              this.tempDirectory = "", this._currentOffset = 0, this._packageID = "", this.url = "", this.clearFileList();
            }
            u.fromUrl = function(g, Ee) {
              var Ve = new u();
              return Ve.url = g, Ve._callMe = Ee, Ve._webFile = new o.WebFile(g), Ve._webFile.responseType = "blob", Ve._webFile.onStateChange = s.ss.bind("_loadCabinet", Ve), Ve._webFile.send(), Ve;
            };
            var y = {
              get_packageID: function() {
                return this._packageID;
              },
              set_packageID: function(g) {
                return this._packageID = g, g;
              },
              addFile: function(g, Ee) {
                if (Ee != null && !s.ss.keyExists(this._fileDirectory, g)) {
                  var Ve = new c(g, Ee.size);
                  Ve.offset = this._currentOffset, Ve.blob = Ee, this.fileList.push(Ve), this._fileDirectory[g] = Ve, this._currentOffset += Ve.size;
                }
              },
              clearFileList: function() {
                this.fileList == null && (this.fileList = []), this._fileDirectory == null && (this._fileDirectory = {}), this.fileList.length = 0, s.ss.clearKeys(this._fileDirectory), this._currentOffset = 0;
              },
              packageFiles: function() {
                var g = new l.XmlTextWriter();
                g.formatting = 1, g._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), g._writeStartElement("FileCabinet"), g._writeAttributeString("HeaderSize", "0x0BADFOOD"), g._writeStartElement("Files");
                for (var Ee = s.ss.enumerate(this.fileList); Ee.moveNext(); ) {
                  var Ve = Ee.current;
                  g._writeStartElement("File"), g._writeAttributeString("Name", Ve.filename), g._writeAttributeString("Size", Ve.size.toString()), g._writeAttributeString("Offset", Ve.offset.toString()), g._writeEndElement();
                }
                g._writeEndElement(), g._writeFullEndElement(), g._close();
                var Me = g.body, B = new Blob([Me]), Pe = s.ss.format("0x{0:x8}", B.size);
                Me = s.ss.replaceString(Me, "0x0BADFOOD", Pe), B = new Blob([Me]);
                var k = [];
                k.push(B);
                for (var b = s.ss.enumerate(this.fileList); b.moveNext(); ) {
                  var Ve = b.current;
                  k.push(Ve.blob);
                }
                var Le = new Blob(k, { type: "application/x-wtt" });
                return Le;
              },
              _loadCabinet: function() {
                var g = this;
                if (this._webFile.get_state() === 2)
                  alert(this._webFile.get_message());
                else if (this._webFile.get_state() === 1) {
                  this._mainBlob = this._webFile.getBlob();
                  var Ee = new FileReader();
                  Ee.onloadend = function(Ve) {
                    var Me = g._getSize(Ee.result), B = new FileReader();
                    B.onloadend = function(Pe) {
                      var k = s.ss.safeCast(B.result, String), b = new DOMParser();
                      g.extract(b.parseFromString(k, "text/xml"), Me), g._callMe();
                    }, B.readAsText(g._mainBlob.slice(0, Me));
                  }, Ee.readAsText(this._mainBlob.slice(0, 255));
                }
              },
              _getSize: function(g) {
                var Ee = g.indexOf("0x");
                return Ee === -1 ? 0 : parseInt(g.substring(Ee, Ee + 10), 16);
              },
              extract: function(g, Ee) {
                try {
                  var Ve = t.Util.selectSingleNode(g, "FileCabinet"), Me = t.Util.selectSingleNode(Ve, "Files");
                  this.fileList.length = 0;
                  for (var B = s.ss.enumerate(Me.childNodes); B.moveNext(); ) {
                    var Pe = B.current;
                    if (Pe.nodeName === "File") {
                      var k = new c(Pe.attributes.getNamedItem("Name").nodeValue, parseInt(Pe.attributes.getNamedItem("Size").nodeValue));
                      k.offset = Ee, Ee += k.size, this.fileList.push(k);
                    }
                  }
                } catch {
                }
              },
              getFileBlob: function(g) {
                var Ee = this.getFileEntry(g);
                if (Ee != null) {
                  var Ve = g.substr(g.lastIndexOf(".")).toLowerCase(), Me = null;
                  switch (Ve) {
                    case ".png":
                      Me = "image/png";
                      break;
                    case ".jpg":
                    case ".jpeg":
                      Me = "image/jpeg";
                      break;
                    case ".mp3":
                      Me = "audio/mpeg3";
                      break;
                    case ".txt":
                      Me = "text/plain";
                      break;
                    case ".fit":
                    case ".fits":
                      Me = "application/octet-stream";
                      break;
                  }
                  return this._mainBlob.slice(Ee.offset, Ee.offset + Ee.size, Me);
                }
                return null;
              },
              getFileEntry: function(g) {
                for (var Ee = s.ss.enumerate(this.fileList); Ee.moveNext(); ) {
                  var Ve = Ee.current;
                  if (Ve.filename === g)
                    return Ve;
                }
                return null;
              },
              get_masterFile: function() {
                return this.fileList.length > 0 ? this.fileList[0].filename : null;
              },
              clearTempFiles: function() {
                for (var g = s.ss.enumerate(this.fileList); g.moveNext(); )
                  g.current;
              }
            };
            (0, a.registerType)("FileCabinet", [u, y, null]);
          }
        ),
        /***/
        "./esm/tours/overlay.js": (
          /*!******************************!*\
            !*** ./esm/tours/overlay.js ***!
            \******************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              AudioOverlay: () => (
                /* binding */
                He
              ),
              /* harmony export */
              AudioType: () => (
                /* binding */
                Pe
              ),
              /* harmony export */
              BitmapOverlay: () => (
                /* binding */
                ze
              ),
              /* harmony export */
              FlipbookOverlay: () => (
                /* binding */
                Ke
              ),
              /* harmony export */
              LoopTypes: () => (
                /* binding */
                b
              ),
              /* harmony export */
              Overlay: () => (
                /* binding */
                Le
              ),
              /* harmony export */
              OverlayAnchor: () => (
                /* binding */
                B
              ),
              /* harmony export */
              ShapeOverlay: () => (
                /* binding */
                ke
              ),
              /* harmony export */
              ShapeType: () => (
                /* binding */
                k
              ),
              /* harmony export */
              TextOverlay: () => (
                /* binding */
                Te
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), o = n(
              /*! ../graphics/texture.js */
              "./esm/graphics/texture.js"
            ), c = n(
              /*! ../graphics/sprite2d.js */
              "./esm/graphics/sprite2d.js"
            ), _ = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), u = n(
              /*! ../color.js */
              "./esm/color.js"
            ), y = n(
              /*! ../coordinates.js */
              "./esm/coordinates.js"
            ), g = n(
              /*! ../space_time_controller.js */
              "./esm/space_time_controller.js"
            ), Ee = n(
              /*! ../ui_tools.js */
              "./esm/ui_tools.js"
            ), Ve = n(
              /*! ../util.js */
              "./esm/util.js"
            ), Me = n(
              /*! ./text_object.js */
              "./esm/tours/text_object.js"
            ), B = {
              sky: 0,
              screen: 1
            };
            (0, a.registerType)("OverlayAnchor", B), (0, a.registerEnum)("OverlayAnchor", B);
            var Pe = {
              music: 0,
              voice: 1
            };
            (0, a.registerType)("AudioType", Pe), (0, a.registerEnum)("AudioType", Pe);
            var k = {
              circle: 0,
              rectagle: 1,
              star: 2,
              donut: 3,
              arrow: 4,
              line: 5,
              openRectagle: 6
            };
            (0, a.registerType)("ShapeType", k), (0, a.registerEnum)("ShapeType", k);
            var b = {
              loop: 0,
              upDown: 1,
              down: 2,
              upDownOnce: 3,
              once: 4,
              begin: 5,
              end: 6
            };
            (0, a.registerType)("LoopTypes", b), (0, a.registerEnum)("LoopTypes", b);
            function Le() {
              this.isDynamic = !1, this.isDesignTimeOnly = !1, this._name = "", this.id = (Le.nextId++).toString(), this._owner = null, this._url = "", this._linkID = "", this._domeMatrix = t.Matrix3d.get_identity(), this._domeMatX = 0, this._domeMatY = 0, this._domeAngle = 0, this.points = null, this._animate = !1, this._tweenFactor = 0, this._endX = 0, this._endY = 0, this._endOpacity = 0, this._endColor = new u.Color(), this._endWidth = 0, this._endHeight = 0, this._endRotationAngle = 0, this._anchor = 1, this._x = 0, this._y = 0, this._width = 0, this._height = 0, this._color = u.Colors.get_white(), this._opacity = 0.5, this._rotationAngle = 0, this.currentRotation = 0, this.texture = null, this.texture2d = null, this._interpolationType = 5;
            }
            Le.defaultAnchor = 1, Le.clipboardFormat = "WorldWideTelescope.Overlay", Le.nextId = 11231, Le.RC = 0.01745329277777778, Le._fromXml = function(De, Re) {
              if (Re.attributes == null || Re.attributes.getNamedItem("Type") == null)
                return null;
              var Ie = Re.attributes.getNamedItem("Type").nodeValue, O = s.ss.replaceString(Ie, "TerraViewer.", ""), Ue = null;
              switch (O) {
                case "AudioOverlay":
                  Ue = new He();
                  break;
                case "BitmapOverlay":
                  Ue = new ze();
                  break;
                case "FlipBookOverlay":
                  Ue = new Ke();
                  break;
                case "ShapeOverlay":
                  Ue = new ke();
                  break;
                case "TextOverlay":
                  Ue = new Te();
                  break;
                default:
                  return null;
              }
              return Ue._owner = De, Ue._initOverlayFromXml(Re), Ue;
            };
            var xe = {
              get_name: function() {
                return this._name;
              },
              set_name: function(De) {
                return this._name = De, De;
              },
              get_owner: function() {
                return this._owner;
              },
              set_owner: function(De) {
                return this._owner = De, De;
              },
              get_zOrder: function() {
                for (var De = 0, Re = s.ss.enumerate(this._owner.get_overlays()); Re.moveNext(); ) {
                  var Ie = Re.current;
                  if (Ie === this)
                    break;
                  De++;
                }
                return De;
              },
              get_url: function() {
                return this._url;
              },
              set_url: function(De) {
                return this._url = De, De;
              },
              get_linkID: function() {
                return this._linkID;
              },
              set_linkID: function(De) {
                return this._linkID = De, De;
              },
              play: function() {
              },
              pause: function() {
              },
              stop: function() {
              },
              seek: function(De) {
              },
              makePosition: function(De, Re, Ie, O, Ue) {
                De -= 960, Re -= 558;
                var $e = t.Vector3d.create(De + Ie, Re + O, 1347);
                return (this._domeMatX || this._domeMatY || this._domeAngle !== Ue) && (this._domeMatX = De, this._domeMatY = Re, this._domeMatrix = t.Matrix3d.translation(t.Vector3d.create(-De, -Re, 0)), this._domeMatrix._multiply(t.Matrix3d._rotationZ(Ue / 180 * Math.PI)), this._domeMatrix._multiply(t.Matrix3d.translation(t.Vector3d.create(De, Re, 0)))), $e = t.Vector3d._transformCoordinate($e, this._domeMatrix), $e;
              },
              draw3D: function(De, Re) {
                l.useGl && ((this.texture == null || this.isDynamic) && this.initializeTexture(), (!this.isDesignTimeOnly || Re) && (this.initializeGeometry(), this.updateRotation()));
              },
              cleanUp: function() {
                this.texture != null && (this.texture = null), this.texture2d = null;
              },
              initializeTexture: function() {
              },
              // This hook exists to deal with web browser autoplay restrictions. In the
              // strictest case, we can't just start playing media files at will -- we
              // need to start playing them in response to a user-initiated event. But
              // there is a generally a scheme in which files are "unlocked" once they've
              // started to be played, and after that point we can control their playback
              // more precisely. So, this function should do any multimedia playback
              // initialization needed. It will be called when the user initiates tour
              // playback.
              //
              // Repeated calls should be idempotent.
              prepMultimedia: function() {
              },
              cleanUpGeometry: function() {
                this.currentRotation = 0, this.points = null;
              },
              initializeGeometry: function() {
                this.points == null && (this.currentRotation = 0, this.points = new Array(4), this.points[0] = new t.PositionColoredTextured(), this.points[0].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, -this.get_height() / 2, this.get_rotationAngle()), this.points[0].tu = 0, this.points[0].tv = 0, this.points[0].color = this.get_color(), this.points[1] = new t.PositionColoredTextured(), this.points[1].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, -this.get_height() / 2, this.get_rotationAngle()), this.points[1].tu = 1, this.points[1].tv = 0, this.points[1].color = this.get_color(), this.points[2] = new t.PositionColoredTextured(), this.points[2].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[2].tu = 0, this.points[2].tv = 1, this.points[2].color = this.get_color(), this.points[3] = new t.PositionColoredTextured(), this.points[3].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[3].tu = 1, this.points[3].tv = 1, this.points[3].color = this.get_color());
              },
              updateRotation: function() {
              },
              // Animation Support
              get_animate: function() {
                return this._animate;
              },
              set_animate: function(De) {
                return this._animate !== De && (this._animate = De, this._animate ? (this._endX = this._x, this._endY = this._y, this._endRotationAngle = this._rotationAngle, this._endColor = this._color, this._endWidth = this._width, this._endHeight = this._height, this.cleanUpGeometry()) : (this._endX = this._x = this.get_x(), this._endY = this._y = this.get_y(), this._endRotationAngle = this._rotationAngle = this.get_rotationAngle(), this._endColor = this._color = this.get_color(), this._endWidth = this._width = this.get_width(), this._endHeight = this._height = this.get_height(), this.cleanUpGeometry(), this._tweenFactor = 0)), De;
              },
              get_tweenFactor: function() {
                return this._tweenFactor;
              },
              set_tweenFactor: function(De) {
                return this._animate ? this._tweenFactor !== De && (this._tweenFactor = De, this.cleanUpGeometry()) : this._tweenFactor = 0, De;
              },
              get_anchor: function() {
                return this._anchor;
              },
              set_anchor: function(De) {
                return this._anchor = De, De;
              },
              get_position: function() {
                return t.Vector2d.create(this.get_x(), this.get_y());
              },
              set_position: function(De) {
                return this.set_x(De.x), this.set_y(De.y), De;
              },
              get_x: function() {
                return this._x * (1 - this._tweenFactor) + this._endX * this._tweenFactor;
              },
              set_x: function(De) {
                return this._tweenFactor < 0.5 ? this._x !== De && (this._x = De, this.cleanUpGeometry()) : this._endX !== De && (this._endX = De, this.cleanUpGeometry()), De;
              },
              get_y: function() {
                return this._y * (1 - this._tweenFactor) + this._endY * this._tweenFactor;
              },
              set_y: function(De) {
                return this._tweenFactor < 0.5 ? this._y !== De && (this._y = De, this.cleanUpGeometry()) : this._endY !== De && (this._endY = De, this.cleanUpGeometry()), De;
              },
              get_width: function() {
                return this._width * (1 - this._tweenFactor) + this._endWidth * this._tweenFactor;
              },
              set_width: function(De) {
                return De < 5 && De && (De = 5), this._tweenFactor < 0.5 ? this._width !== De && (this._width = De, this.cleanUpGeometry()) : this._endWidth !== De && (this._endWidth = De, this.cleanUpGeometry()), De;
              },
              get_height: function() {
                return this._height * (1 - this._tweenFactor) + this._endHeight * this._tweenFactor;
              },
              set_height: function(De) {
                return De < 5 && De && (De = 5), this._tweenFactor < 0.5 ? this._height !== De && (this._height = De, this.cleanUpGeometry()) : this._endHeight !== De && (this._endHeight = De, this.cleanUpGeometry()), De;
              },
              get_color: function() {
                var De = s.ss.truncate(this._color.r * (1 - this._tweenFactor) + this._endColor.r * this._tweenFactor), Re = s.ss.truncate(this._color.g * (1 - this._tweenFactor) + this._endColor.g * this._tweenFactor), Ie = s.ss.truncate(this._color.b * (1 - this._tweenFactor) + this._endColor.b * this._tweenFactor), O = s.ss.truncate(this._color.a * (1 - this._tweenFactor) + this._endColor.a * this._tweenFactor);
                return u.Color.fromArgb(Math.max(0, Math.min(255, O)), Math.max(0, Math.min(255, De)), Math.max(0, Math.min(255, Re)), Math.max(0, Math.min(255, Ie)));
              },
              set_color: function(De) {
                return this._tweenFactor < 0.5 ? this._color !== De && (this._color = De, this.cleanUpGeometry()) : this._endColor !== De && (this._endColor = De, this.cleanUpGeometry()), De;
              },
              get_opacity: function() {
                return this.get_color().a / 255;
              },
              set_opacity: function(De) {
                var Re = this.get_color();
                return this.set_color(u.Color.fromArgb(Math.min(255, s.ss.truncate(De * 255)), Re.r, Re.g, Re.b)), this._opacity = De, De;
              },
              get_rotationAngle: function() {
                return this._rotationAngle * (1 - this._tweenFactor) + this._endRotationAngle * this._tweenFactor;
              },
              set_rotationAngle: function(De) {
                return this._tweenFactor < 0.5 ? this._rotationAngle !== De && (this._rotationAngle = De, this.cleanUpGeometry()) : this._endRotationAngle !== De && (this._endRotationAngle = De, this.cleanUpGeometry()), De;
              },
              hitTest: function(De) {
                var Re = new Array(1);
                Re[0] = t.Vector2d.create(De.x, De.y);
                var Ie = t.Matrix2d.rotateAt(-this.get_rotationAngle() / 180 * Math.PI, t.Vector2d.create(this.get_x(), this.get_y()));
                Ie._transformPoints(Re);
                var O = Ve.Rectangle.create(this.get_x() - this.get_width() / 2, this.get_y() - this.get_height() / 2, this.get_width(), this.get_height());
                return O.contains(Re[0]);
              },
              get_bounds: function() {
                return this._bounds;
              },
              set_bounds: function(De) {
                return this._bounds = De, De;
              },
              get_interpolationType: function() {
                return this._interpolationType;
              },
              set_interpolationType: function(De) {
                return this._interpolationType = De, De;
              },
              saveToXml: function(De, Re) {
                De._writeStartElement("Overlay"), De._writeAttributeString("Id", this.id), De._writeAttributeString("Type", this.getTypeName()), De._writeAttributeString("Name", this.get_name()), De._writeAttributeString("X", this._x.toString()), De._writeAttributeString("Y", this._y.toString()), De._writeAttributeString("Width", this._width.toString()), De._writeAttributeString("Height", this._height.toString()), De._writeAttributeString("Rotation", this._rotationAngle.toString()), De._writeAttributeString("Color", this._color.save()), De._writeAttributeString("Url", this._url), De._writeAttributeString("LinkID", this._linkID), De._writeAttributeString("Animate", this._animate.toString()), this._animate && (De._writeAttributeString("EndX", this._endX.toString()), De._writeAttributeString("EndY", this._endY.toString()), De._writeAttributeString("EndWidth", this._endWidth.toString()), De._writeAttributeString("EndHeight", this._endHeight.toString()), De._writeAttributeString("EndRotation", this._endRotationAngle.toString()), De._writeAttributeString("EndColor", this._endColor.save()), De._writeAttributeString("InterpolationType", a.Enums.toXml("InterpolationType", this._interpolationType))), De._writeAttributeString("Anchor", a.Enums.toXml("OverlayAnchor", this._anchor)), this.writeOverlayProperties(De), De._writeEndElement();
              },
              getTypeName: function() {
                return "TerraViewer.Overlay";
              },
              addFilesToCabinet: function(De) {
              },
              writeOverlayProperties: function(De) {
              },
              _initOverlayFromXml: function(De) {
                this.id = De.attributes.getNamedItem("Id").nodeValue, this.set_name(De.attributes.getNamedItem("Name").nodeValue), this._x = parseFloat(De.attributes.getNamedItem("X").nodeValue), this._y = parseFloat(De.attributes.getNamedItem("Y").nodeValue), this._width = parseFloat(De.attributes.getNamedItem("Width").nodeValue), this._height = parseFloat(De.attributes.getNamedItem("Height").nodeValue), this._rotationAngle = parseFloat(De.attributes.getNamedItem("Rotation").nodeValue), this._color = u.Color.load(De.attributes.getNamedItem("Color").nodeValue), De.attributes.getNamedItem("Url") != null && this.set_url(De.attributes.getNamedItem("Url").nodeValue), De.attributes.getNamedItem("LinkID") != null && this.set_linkID(De.attributes.getNamedItem("LinkID").nodeValue), De.attributes.getNamedItem("Animate") != null && (this._animate = s.ss.boolean(De.attributes.getNamedItem("Animate").nodeValue), this._animate && (this._endX = parseFloat(De.attributes.getNamedItem("EndX").nodeValue), this._endY = parseFloat(De.attributes.getNamedItem("EndY").nodeValue), this._endColor = u.Color.load(De.attributes.getNamedItem("EndColor").nodeValue), this._endWidth = parseFloat(De.attributes.getNamedItem("EndWidth").nodeValue), this._endHeight = parseFloat(De.attributes.getNamedItem("EndHeight").nodeValue), this._endRotationAngle = parseFloat(De.attributes.getNamedItem("EndRotation").nodeValue), De.attributes.getNamedItem("InterpolationType") != null && this.set_interpolationType(a.Enums.parse("InterpolationType", De.attributes.getNamedItem("InterpolationType").nodeValue)))), this.initializeFromXml(De);
              },
              initializeFromXml: function(De) {
              },
              toString: function() {
                return this.get_name();
              }
            };
            (0, a.registerType)("Overlay", [Le, xe, null]);
            function ze() {
              this._textureReady$1 = !1, this._sprite$1 = new c.Sprite2d(), Le.call(this);
            }
            ze.create = function(De, Re) {
              var Ie = new ze();
              return Ie.set_owner(De), Ie._filename$1 = Re.name, Ie.set_name(De.getNextDefaultName("Image")), Ie.set_x(0), Ie.set_y(0), De.get_owner().addCachedFile(Re.name, Re), Ie;
            };
            var Se = {
              getTypeName: function() {
                return "TerraViewer.BitmapOverlay";
              },
              copy: function(De) {
                var Re = new ze();
                return Re.set_owner(De), Re._filename$1 = this._filename$1, Re.set_x(this.get_x()), Re.set_y(this.get_y()), Re.set_width(this.get_width()), Re.set_height(this.get_height()), Re.set_color(this.get_color()), Re.set_opacity(this.get_opacity()), Re.set_rotationAngle(this.get_rotationAngle()), Re.set_name(this.get_name() + " - Copy"), Re;
              },
              cleanUp: function() {
                this.texture = null, this.texture2d != null && (this.texture2d.cleanUp(), this.texture2d = null);
              },
              initializeTexture: function() {
                var De = this;
                try {
                  l.useGl ? (this.texture2d = this.get_owner().get_owner().getCachedTexture2d(this._filename$1), this._textureReady$1 = !0) : this.texture = this.get_owner().get_owner().getCachedTexture(this._filename$1, function() {
                    De._textureReady$1 = !0;
                  });
                } catch {
                }
              },
              draw3D: function(De, Re) {
                if (l.useGl)
                  this.texture2d == null && this.initializeTexture(), !this.get_width() && !this.get_height() && (this.set_width(this.texture2d.imageElement.width), this.set_height(this.texture2d.imageElement.height)), this.initializeGeometry(), this.updateRotation(), this._sprite$1.draw(De, this.points, this.points.length, this.texture2d, !0, 1);
                else {
                  if (this.texture == null && this.initializeTexture(), !this._textureReady$1)
                    return;
                  !this.get_width() && !this.get_height() && (this.set_width(this.texture.width), this.set_height(this.texture.height));
                  var Ie = De.device;
                  Ie.save(), Ie.translate(this.get_x(), this.get_y()), Ie.rotate(this.get_rotationAngle() * Le.RC), Ie.globalAlpha = this.get_opacity(), Ie.drawImage(this.texture, -this.get_width() / 2, -this.get_height() / 2, this.get_width(), this.get_height()), Ie.restore();
                }
              },
              addFilesToCabinet: function(De) {
                De.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
              },
              writeOverlayProperties: function(De) {
                De._writeStartElement("Bitmap"), De._writeAttributeString("Filename", this._filename$1), De._writeEndElement();
              },
              initializeFromXml: function(De) {
                var Re = _.Util.selectSingleNode(De, "Bitmap");
                this._filename$1 = Re.attributes.getNamedItem("Filename").nodeValue;
              }
            };
            (0, a.registerType)("BitmapOverlay", [ze, Se, Le]);
            function Te() {
              this._sprite$1 = new c.Sprite2d(), this._ctx$1 = null, this._ce$1 = null, Le.call(this);
            }
            Te.create = function(De) {
              var Re = new Te();
              return Re.textObject = De, Re._calculateTextSize$1(), Re;
            };
            var D = {
              getTypeName: function() {
                return "TerraViewer.TextOverlay";
              },
              get_color: function() {
                return Le.prototype.get_color.call(this);
              },
              set_color: function(De) {
                return this.textObject.foregroundColor !== De && (this.textObject.foregroundColor = De, Le.prototype.set_color.call(this, De), this.cleanUp()), De;
              },
              draw3D: function(De, Re) {
                if (l.useGl)
                  this.initializeTexture(), this.initializeGeometry(), this.updateRotation(), this._sprite$1.draw(De, this.points, this.points.length, this.texture2d, !0, 1);
                else {
                  var Ie = De.device;
                  Ie.save(), Ie.translate(this.get_x(), this.get_y()), Ie.rotate(this.get_rotationAngle() * Le.RC), Ie.globalAlpha = this.get_opacity(), this._drawCanvasText$1(Ie), Ie.restore();
                }
              },
              _drawCanvasText$1: function(De) {
                De.fillStyle = this.textObject.foregroundColor.toString(), De.font = (this.textObject.italic ? "italic" : "normal") + " " + (this.textObject.bold ? "bold" : "normal") + " " + Math.round(this.textObject.fontSize * 1.2).toString() + "px " + this.textObject.fontName, De.textBaseline = "top";
                var Re = this.textObject.text;
                if (Re.indexOf("{$") > -1) {
                  if (Re.indexOf("{$DATE}") > -1) {
                    var Ie = s.ss.format("{0:yyyy/MM/dd}", g.SpaceTimeController.get_now());
                    Re = s.ss.replaceString(Re, "{$DATE}", Ie);
                  }
                  if (Re.indexOf("{$TIME}") > -1) {
                    var O = s.ss.format("{0:HH:mm:ss}", g.SpaceTimeController.get_now());
                    Re = s.ss.replaceString(Re, "{$TIME}", O);
                  }
                  Re = s.ss.replaceString(Re, "{$DIST}", Ee.UiTools.formatDistance(l.globalRenderContext.get_solarSystemCameraDistance())), Re = s.ss.replaceString(Re, "{$LAT}", y.Coordinates.formatDMS(l.globalRenderContext.viewCamera.lat)), Re = s.ss.replaceString(Re, "{$LNG}", y.Coordinates.formatDMS(l.globalRenderContext.viewCamera.lat)), Re = s.ss.replaceString(Re, "{$RA}", y.Coordinates.formatDMS(l.globalRenderContext.viewCamera.get_RA())), Re = s.ss.replaceString(Re, "{$DEC}", y.Coordinates.formatDMS(l.globalRenderContext.viewCamera.get_dec())), Re = s.ss.replaceString(Re, "{$FOV}", y.Coordinates.formatDMS(l.globalRenderContext.get_fovAngle()));
                }
                for (var Ue = Re.split(`
`), $e = -(this.get_height() / 2), Ze = this.textObject.fontSize * 1.7, Qe = s.ss.enumerate(Ue); Qe.moveNext(); )
                  for (var Ae = Qe.current, Ne = _.Util.getWrappedText(De, Ae, this.get_width()), Be = s.ss.enumerate(Ne); Be.moveNext(); ) {
                    var Ge = Be.current;
                    De.fillText(Ge, -this.get_width() / 2, $e), $e += Ze;
                  }
              },
              _calculateTextSize$1: function() {
                (this._ctx$1 == null || this._ce$1 == null) && (this._ce$1 = document.createElement("canvas"), this._ce$1.height = 100, this._ce$1.width = 100, this._ctx$1 = this._ce$1.getContext("2d")), this._ctx$1.fillStyle = this.textObject.foregroundColor.toString(), this._ctx$1.font = (this.textObject.italic ? "italic" : "normal") + " " + (this.textObject.bold ? "bold" : "normal") + " " + Math.round(this.textObject.fontSize * 1.2).toString() + "px " + this.textObject.fontName, this._ctx$1.textBaseline = "top";
                var De = this.textObject.text;
                if (De.indexOf("{$") > -1) {
                  if (De.indexOf("{$DATE}") > -1) {
                    var Re = s.ss.format("{0:yyyy/MM/dd}", g.SpaceTimeController.get_now());
                    De = s.ss.replaceString(De, "{$DATE}", Re);
                  }
                  if (De.indexOf("{$TIME}") > -1) {
                    var Ie = s.ss.format("{0:HH:mm:ss}", g.SpaceTimeController.get_now());
                    De = s.ss.replaceString(De, "{$TIME}", Ie);
                  }
                  De = s.ss.replaceString(De, "{$DIST}", Ee.UiTools.formatDistance(l.globalRenderContext.get_solarSystemCameraDistance())), De = s.ss.replaceString(De, "{$LAT}", y.Coordinates.formatDMS(l.globalRenderContext.viewCamera.lat)), De = s.ss.replaceString(De, "{$LNG}", y.Coordinates.formatDMS(l.globalRenderContext.viewCamera.lat)), De = s.ss.replaceString(De, "{$RA}", y.Coordinates.formatDMS(l.globalRenderContext.viewCamera.get_RA())), De = s.ss.replaceString(De, "{$DEC}", y.Coordinates.formatDMS(l.globalRenderContext.viewCamera.get_dec())), De = s.ss.replaceString(De, "{$FOV}", y.Coordinates.formatDMS(l.globalRenderContext.get_fovAngle()));
                }
                for (var O = De.split(`
`), Ue = 0, $e = this.textObject.fontSize * 1.7, Ze = 0, Qe = s.ss.enumerate(O); Qe.moveNext(); ) {
                  var Ae = Qe.current, Ne = this._ctx$1.measureText(Ae).width;
                  Ze = Math.max(Ne, Ze), Ue += $e;
                }
                this.set_width(Ze * 1.01), this.set_height(Ue), this._ce$1 = null, this._ctx$1 = null;
              },
              initializeTexture: function() {
                (this.texture2d == null || this.textObject.text.indexOf("{$") > -1) && ((!this.get_height() || !this.get_width()) && this._calculateTextSize$1(), (this._ctx$1 == null || this._ce$1 == null) && (this._ce$1 = document.createElement("canvas"), this._ce$1.height = s.ss.truncate(this.get_height()), this._ce$1.width = s.ss.truncate(this.get_width()), this._ctx$1 = this._ce$1.getContext("2d")), this._ctx$1.translate(this.get_width() / 2, this.get_height() / 2), this._ctx$1.clearRect(0, 0, this.get_width(), this.get_height()), this._drawCanvasText$1(this._ctx$1), this.texture2d = new o.Texture(), this.texture2d.imageElement = this._ce$1, this.texture2d.makeTexture(), this._ce$1 = null, this._ctx$1 = null);
              },
              writeOverlayProperties: function(De) {
                De._writeStartElement("Text"), this.textObject._saveToXml(De), De._writeEndElement();
              },
              initializeFromXml: function(De) {
                var Re = _.Util.selectSingleNode(De, "Text");
                this.textObject = Me.TextObject._fromXml(_.Util.selectSingleNode(Re, "TextObject"));
              },
              initializeGeometry: function() {
                l.useGl && Le.prototype.initializeGeometry.call(this);
              }
            };
            (0, a.registerType)("TextOverlay", [Te, D, Le]);
            function ke() {
              this._shapeType$1 = 1, this._sprite$1 = new c.Sprite2d(), this._triangleStrip$1 = !0, Le.call(this);
            }
            ke._create = function(De, Re) {
              var Ie = new ke();
              return Ie._shapeType$1 = Re, Ie.set_owner(De), Ie;
            };
            var Fe = {
              getTypeName: function() {
                return "TerraViewer.ShapeOverlay";
              },
              get_shapeType: function() {
                return this._shapeType$1;
              },
              set_shapeType: function(De) {
                return this._shapeType$1 = De, this.cleanUpGeometry(), De;
              },
              draw3D: function(De, Re) {
                if (l.useGl)
                  this.initializeGeometry(), this._sprite$1.draw(De, this.points, this.points.length, null, this._triangleStrip$1, this.get_opacity());
                else
                  switch (this._shapeType$1) {
                    case 0:
                      this._drawCircleGeometry$1(De);
                      break;
                    case 1:
                      this._drawRectGeometry$1(De);
                      break;
                    case 6:
                      this._drawOpenRectGeometry$1(De);
                      break;
                    case 2:
                      this._drawStarGeometry$1(De);
                      break;
                    case 3:
                      this._drawDonutGeometry$1(De);
                      break;
                    case 4:
                      this._drawArrowGeometry$1(De);
                      break;
                    case 5:
                      this._drawLineGeometry$1(De);
                      break;
                  }
              },
              initializeGeometry: function() {
                if (this.points == null)
                  switch (this._shapeType$1) {
                    case 0:
                      this._createCircleGeometry$1();
                      break;
                    case 1:
                      Le.prototype.initializeGeometry.call(this);
                      break;
                    case 6:
                      this._createOpenRectGeometry$1();
                      break;
                    case 2:
                      this._createStarGeometry$1();
                      break;
                    case 3:
                      this._createDonutGeometry$1();
                      break;
                    case 4:
                      this._createArrowGeometry$1();
                      break;
                    case 5:
                      this._createLineGeometry$1();
                      break;
                  }
              },
              _createLineGeometry$1: function() {
                this.get_x(), this.get_y(), this.get_width() / 2;
                var De = this.get_width(), Re = s.ss.truncate(De / 12) + 1;
                this.points == null && (this.points = new Array(Re * 2 + 2));
                for (var Ie = 0; Ie <= Re; Ie++) {
                  var O = Ie * 2;
                  this.points[O] = new t.PositionColoredTextured(), this.points[O].position = this.makePosition(this.get_x(), this.get_y(), Ie / Re * this.get_width() - this.get_width() / 2, 6, this.get_rotationAngle()), this.points[O].tu = Ie % 2, this.points[O].tv = 0, this.points[O].color = this.get_color(), this.points[O + 1] = new t.PositionColoredTextured(), this.points[O + 1].position = this.makePosition(this.get_x(), this.get_y(), Ie / Re * this.get_width() - this.get_width() / 2, -6, this.get_rotationAngle()), this.points[O + 1].tu = Ie % 2, this.points[O + 1].tv = 1, this.points[O + 1].color = this.get_color();
                }
              },
              _createOpenRectGeometry$1: function() {
                var De = this.get_x(), Re = this.get_y();
                this.get_width() / 2;
                var Ie = this.get_width(), O = s.ss.truncate(Ie / 12) + 1, Ue = s.ss.truncate(this.get_height() / 12) + 1, $e = ((O + 1) * 2 + (Ue + 1) * 2) * 2;
                this.points == null && (this.points = new Array($e));
                for (var Ze = 0; Ze <= O; Ze++) {
                  var Qe = Ze * 2;
                  this.points[Qe] = new t.PositionColoredTextured(), this.points[Qe].position = this.makePosition(De, Re, Ze / O * this.get_width() - this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[Qe].tu = Ze % 2, this.points[Qe].tv = 0, this.points[Qe].color = this.get_color(), this.points[Qe + 1] = new t.PositionColoredTextured(), this.points[Qe + 1].position = this.makePosition(De, Re, Ze / O * this.get_width() - this.get_width() / 2, this.get_height() / 2 - 12, this.get_rotationAngle()), this.points[Qe + 1].tu = Ze % 2, this.points[Qe + 1].tv = 1, this.points[Qe + 1].color = this.get_color();
                  var Ae = (O + 1) * 4 + (Ue + 1) * 2 - 2 - Qe;
                  this.points[Ae] = new t.PositionColoredTextured(), this.points[Ae].position = this.makePosition(De, Re, Ze / O * this.get_width() - this.get_width() / 2, -(this.get_height() / 2) + 12, this.get_rotationAngle()), this.points[Ae].tu = Ze % 2, this.points[Ae].tv = 0, this.points[Ae].color = this.get_color(), this.points[Ae + 1] = new t.PositionColoredTextured(), this.points[Ae + 1].position = this.makePosition(De, Re, Ze / O * this.get_width() - this.get_width() / 2, -(this.get_height() / 2), this.get_rotationAngle()), this.points[Ae + 1].tu = Ze % 2, this.points[Ae + 1].tv = 1, this.points[Ae + 1].color = this.get_color();
                }
                for (var Ne = (O + 1) * 2, Ze = 0; Ze <= Ue; Ze++) {
                  var Be = (Ue + 1) * 2 + Ne - 2, Qe = Ze * 2;
                  this.points[Be - Qe] = new t.PositionColoredTextured(), this.points[Be - Qe].position = this.makePosition(De, Re, this.get_width() / 2, Ze / Ue * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[Be - Qe].tu = Ze % 2, this.points[Be - Qe].tv = 0, this.points[Be - Qe].color = this.get_color(), this.points[Be - Qe + 1] = new t.PositionColoredTextured(), this.points[Be - Qe + 1].position = this.makePosition(De, Re, this.get_width() / 2 - 12, Ze / Ue * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[Be - Qe + 1].tu = Ze % 2, this.points[Be - Qe + 1].tv = 1, this.points[Be - Qe + 1].color = this.get_color();
                  var Ae = Qe + (O + 1) * 4 + (Ue + 1) * 2;
                  this.points[Ae] = new t.PositionColoredTextured(), this.points[Ae].position = this.makePosition(De, Re, -(this.get_width() / 2) + 12, Ze / Ue * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[Ae].tu = Ze % 2, this.points[Ae].tv = 0, this.points[Ae].color = this.get_color(), this.points[Ae + 1] = new t.PositionColoredTextured(), this.points[Ae + 1].position = this.makePosition(De, Re, -(this.get_width() / 2), Ze / Ue * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[Ae + 1].tu = Ze % 2, this.points[Ae + 1].tv = 1, this.points[Ae + 1].color = this.get_color();
                }
              },
              _createStarGeometry$1: function() {
                var De = this.get_x(), Re = this.get_y();
                this.get_width() / 2;
                var Ie = Math.PI * 2 / 5;
                this.points == null && (this.points = new Array(12)), this._pnts$1 == null && (this._pnts$1 = new Array(10));
                for (var O = 0; O < 5; O++) {
                  var Ue = O * Ie - Math.PI / 2;
                  this._pnts$1[O] = new t.PositionColoredTextured(), this._pnts$1[O].position = this.makePosition(De, Re, Math.cos(Ue) * (this.get_width() / 2), Math.sin(Ue) * (this.get_height() / 2), this.get_rotationAngle()), this._pnts$1[O].tu = 0, this._pnts$1[O].tv = 0, this._pnts$1[O].color = this.get_color();
                }
                for (var O = 5; O < 10; O++) {
                  var Ue = O * Ie + Ie / 2 - Math.PI / 2;
                  this._pnts$1[O] = new t.PositionColoredTextured(), this._pnts$1[O].position = this.makePosition(De, Re, Math.cos(Ue) * (this.get_width() / 5.3), Math.sin(Ue) * (this.get_height() / 5.3), this.get_rotationAngle()), this._pnts$1[O].tu = 0, this._pnts$1[O].tv = 0, this._pnts$1[O].color = this.get_color();
                }
                this.points[0] = this._pnts$1[0], this.points[1] = this._pnts$1[5], this.points[2] = this._pnts$1[9], this.points[3] = this._pnts$1[1], this.points[4] = this._pnts$1[7], this.points[5] = this._pnts$1[4], this.points[6] = this._pnts$1[6], this.points[7] = this._pnts$1[2], this.points[8] = this._pnts$1[7], this.points[9] = this._pnts$1[7], this.points[10] = this._pnts$1[3], this.points[11] = this._pnts$1[8], this._triangleStrip$1 = !1;
              },
              _createArrowGeometry$1: function() {
                this.points == null && (this.points = new Array(9)), this.points[0] = new t.PositionColoredTextured(), this.points[0].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, -this.get_height() / 4, this.get_rotationAngle()), this.points[0].tu = 0, this.points[0].tv = 0, this.points[0].color = this.get_color(), this.points[1] = new t.PositionColoredTextured(), this.points[1].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 4, this.get_rotationAngle()), this.points[1].tu = 1, this.points[1].tv = 0, this.points[1].color = this.get_color(), this.points[2] = new t.PositionColoredTextured(), this.points[2].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 4, this.get_rotationAngle()), this.points[2].tu = 0, this.points[2].tv = 1, this.points[2].color = this.get_color(), this.points[3] = new t.PositionColoredTextured(), this.points[3].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 4, this.get_rotationAngle()), this.points[3].tu = 1, this.points[3].tv = 0, this.points[3].color = this.get_color(), this.points[4] = new t.PositionColoredTextured(), this.points[4].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 4, this.get_rotationAngle()), this.points[4].tu = 0, this.points[4].tv = 1, this.points[4].color = this.get_color(), this.points[5] = new t.PositionColoredTextured(), this.points[5].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, this.get_height() / 4, this.get_rotationAngle()), this.points[5].tu = 1, this.points[5].tv = 1, this.points[5].color = this.get_color(), this.points[6] = new t.PositionColoredTextured(), this.points[6].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 2, this.get_rotationAngle()), this.points[6].tu = 1, this.points[6].tv = 1, this.points[6].color = this.get_color(), this.points[7] = new t.PositionColoredTextured(), this.points[7].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, 0, this.get_rotationAngle()), this.points[7].tu = 1, this.points[7].tv = 0.5, this.points[7].color = this.get_color(), this.points[8] = new t.PositionColoredTextured(), this.points[8].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, this.get_height() / 2, this.get_rotationAngle()), this.points[8].tu = 1, this.points[8].tv = 1, this.points[8].color = this.get_color(), this._triangleStrip$1 = !1;
              },
              _createDonutGeometry$1: function() {
                var De = this.get_x(), Re = this.get_y(), Ie = this.get_width() / 2, O = Math.PI * 2 * Ie, Ue = s.ss.truncate(O / 12) + 1, $e = Math.PI * 2 / Ue;
                this.points == null && (this.points = new Array(Ue * 2 + 2));
                for (var Ze = 0; Ze <= Ue; Ze++) {
                  var Qe = Ze * 2;
                  this.points[Qe] = new t.PositionColoredTextured(), this.points[Qe].position = this.makePosition(De, Re, Math.cos(Ze * $e) * (this.get_width() / 2), Math.sin(Ze * $e) * (this.get_height() / 2), this.get_rotationAngle()), this.points[Qe].tu = Ze % 2, this.points[Qe].tv = 0, this.points[Qe].color = this.get_color(), this.points[Qe + 1] = new t.PositionColoredTextured(), this.points[Qe + 1].position = this.makePosition(De, Re, Math.cos(Ze * $e) * (this.get_width() / 2 - 10), Math.sin(Ze * $e) * (this.get_height() / 2 - 10), this.get_rotationAngle()), this.points[Qe + 1].tu = Ze % 2, this.points[Qe + 1].tv = 1, this.points[Qe + 1].color = this.get_color();
                }
              },
              _createCircleGeometry$1: function() {
                var De = this.get_x(), Re = this.get_y(), Ie = this.get_width() / 2, O = Math.PI * 2 * Ie, Ue = s.ss.truncate(O / 12) + 1, $e = Math.PI * 2 / Ue;
                this.points == null && (this.points = new Array(Ue * 2 + 2));
                for (var Ze = 0; Ze <= Ue; Ze++) {
                  var Qe = Ze * 2;
                  this.points[Qe] = new t.PositionColoredTextured(), this.points[Qe].position = this.makePosition(De, Re, Math.cos(Ze * $e) * (this.get_width() / 2), Math.sin(Ze * $e) * (this.get_height() / 2), this.get_rotationAngle()), this.points[Qe].tu = Ze % 2, this.points[Qe].tv = 0, this.points[Qe].color = this.get_color(), this.points[Qe + 1] = new t.PositionColoredTextured(), this.points[Qe + 1].position = this.makePosition(De, Re, 0, 0, this.get_rotationAngle()), this.points[Qe + 1].tu = Ze % 2, this.points[Qe + 1].tv = 1, this.points[Qe + 1].color = this.get_color();
                }
              },
              initializeTexture: function() {
                switch (this.get_shapeType()) {
                  case 5:
                  case 3:
                  case 6:
                    break;
                  case 0:
                  case 1:
                  case 2:
                  case 4:
                  default:
                    this.texture = null;
                    break;
                }
              },
              //todo this needs to be Dashed rounded lines..
              _drawLineGeometry$1: function(De) {
                var Re = De.device;
                Re.save();
                var Ie = this.get_width() / 2;
                Re.translate(this.get_x(), this.get_y()), Re.rotate(this.get_rotationAngle() * Le.RC), Re.moveTo(-Ie, 0), Re.lineTo(Ie, 0), Re.lineWidth = 9, Re.strokeStyle = this.get_color().toString(), Re.globalAlpha = this.get_opacity(), Re.stroke(), Re.restore();
              },
              _drawOpenRectGeometry$1: function(De) {
                var Re = De.device;
                Re.save(), Re.translate(this.get_x(), this.get_y()), Re.rotate(this.get_rotationAngle() * Le.RC), Re.beginPath(), Re.moveTo(-this.get_width() / 2, -this.get_height() / 2), Re.lineTo(this.get_width() / 2, -this.get_height() / 2), Re.lineTo(this.get_width() / 2, this.get_height() / 2), Re.lineTo(-this.get_width() / 2, this.get_height() / 2), Re.closePath(), Re.lineWidth = 9, Re.strokeStyle = this.get_color().toString(), Re.globalAlpha = this.get_opacity(), Re.stroke(), Re.restore();
              },
              _drawRectGeometry$1: function(De) {
                var Re = De.device;
                Re.save(), Re.translate(this.get_x(), this.get_y()), Re.rotate(this.get_rotationAngle() * Le.RC), Re.beginPath(), Re.moveTo(-this.get_width() / 2, -this.get_height() / 2), Re.lineTo(this.get_width() / 2, -this.get_height() / 2), Re.lineTo(this.get_width() / 2, this.get_height() / 2), Re.lineTo(-this.get_width() / 2, this.get_height() / 2), Re.closePath(), Re.lineWidth = 0, Re.fillStyle = this.get_color().toString(), Re.globalAlpha = this.get_opacity(), Re.fill(), Re.restore();
              },
              _drawStarGeometry$1: function(De) {
                var Re = De.device;
                Re.save(), Re.translate(this.get_x(), this.get_y()), Re.rotate(this.get_rotationAngle() * Le.RC), Re.beginPath();
                var Ie = 0, O = 0;
                this.get_width() / 2;
                for (var Ue = Math.PI * 2 / 5, $e = !0, Ze = 0; Ze < 5; Ze++) {
                  var Qe = Ze * Ue - Math.PI / 2;
                  $e ? ($e = !1, Re.moveTo(Ie + Math.cos(Qe) * (this.get_width() / 2), O + Math.sin(Qe) * (this.get_height() / 2))) : Re.lineTo(Ie + Math.cos(Qe) * (this.get_width() / 2), O + Math.sin(Qe) * (this.get_height() / 2));
                  var Ae = Ze * Ue + Ue / 2 - Math.PI / 2;
                  Re.lineTo(Ie + Math.cos(Ae) * (this.get_width() / 5.3), O + Math.sin(Ae) * (this.get_height() / 5.3));
                }
                Re.closePath(), Re.lineWidth = 0, Re.fillStyle = this.get_color().toString(), Re.globalAlpha = this.get_opacity(), Re.fill(), Re.restore();
              },
              _drawArrowGeometry$1: function(De) {
                var Re = De.device;
                Re.save(), Re.translate(this.get_x(), this.get_y()), Re.rotate(this.get_rotationAngle() * Le.RC), Re.beginPath(), Re.moveTo(-(this.get_width() / 2), -(this.get_height() / 4)), Re.lineTo(this.get_width() / 4, -(this.get_height() / 4)), Re.lineTo(this.get_width() / 4, -(this.get_height() / 2)), Re.lineTo(this.get_width() / 2, 0), Re.lineTo(this.get_width() / 4, this.get_height() / 2), Re.lineTo(this.get_width() / 4, this.get_height() / 4), Re.lineTo(-(this.get_width() / 2), this.get_height() / 4), Re.closePath(), Re.lineWidth = 0, Re.fillStyle = this.get_color().toString(), Re.globalAlpha = this.get_opacity(), Re.fill(), Re.restore();
              },
              //todo move to dashed lines in future
              _drawDonutGeometry$1: function(De) {
                var Re = De.device;
                Re.save(), Re.translate(this.get_x(), this.get_y()), Re.scale(1, this.get_height() / this.get_width()), Re.rotate(this.get_rotationAngle() * Le.RC), Re.beginPath(), Re.arc(0, 0, this.get_width() / 2, 0, Math.PI * 2, !1), Re.closePath(), Re.lineWidth = 9, Re.strokeStyle = this.get_color().toString(), Re.globalAlpha = this.get_opacity(), Re.stroke(), Re.restore();
              },
              _drawCircleGeometry$1: function(De) {
                var Re = De.device;
                Re.save(), Re.scale(1, this.get_width() / this.get_height()), Re.translate(this.get_x(), this.get_y()), Re.rotate(this.get_rotationAngle() * Le.RC), Re.beginPath(), Re.arc(0, 0, this.get_width(), 0, Math.PI * 2, !1), Re.closePath(), Re.lineWidth = 0, Re.fillStyle = this.get_color().toString(), Re.globalAlpha = this.get_opacity(), Re.fill(), Re.restore();
              },
              cleanUpGeometry: function() {
                Le.prototype.cleanUpGeometry.call(this), this.cleanUp();
              },
              writeOverlayProperties: function(De) {
                De._writeStartElement("Shape"), De._writeAttributeString("ShapeType", a.Enums.toXml("ShapeType", this._shapeType$1)), De._writeEndElement();
              },
              initializeFromXml: function(De) {
                var Re = _.Util.selectSingleNode(De, "Shape");
                this._shapeType$1 = a.Enums.parse("ShapeType", Re.attributes.getNamedItem("ShapeType").nodeValue);
              }
            };
            (0, a.registerType)("ShapeOverlay", [ke, Fe, Le]);
            function He() {
              this._audio$1 = null, this._audioReady$1 = !1, this._wantPlaying$1 = !1, this._volume$1 = 100, this._mute$1 = !1, this._position$1 = 0, this._trackType$1 = 0, Le.call(this), this.isDesignTimeOnly = !0;
            }
            He.create = function(De, Re) {
              var Ie = new He();
              return Ie.set_owner(De), Ie._filename$1 = Re.name, Ie.get_owner().get_owner().addCachedFile(Re.name, Re), Ie;
            };
            var We = {
              getTypeName: function() {
                return "TerraViewer.AudioOverlay";
              },
              get_mute: function() {
                return this._mute$1;
              },
              set_mute: function(De) {
                return this._mute$1 = De, this.set_volume(this.get_volume()), De;
              },
              get_volume: function() {
                return this._volume$1;
              },
              set_volume: function(De) {
                return this._volume$1 = De, this._audio$1 != null && (this._audio$1.volume = this._mute$1 ? 0 : this._volume$1 / 100), De;
              },
              addFilesToCabinet: function(De) {
                De.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
              },
              play: function() {
                this._audio$1 == null && this.prepMultimedia(), this._wantPlaying$1 = !0, this._audio$1 != null && this._audioReady$1 && (this._audio$1.play(), this.set_volume(this.get_volume()), this._audio$1.currentTime = this._position$1);
              },
              pause: function() {
                this._audio$1 == null && this.prepMultimedia(), this._wantPlaying$1 = !1, this._audio$1 != null && this._audioReady$1 && this._audio$1.pause();
              },
              stop: function() {
                this.pause();
              },
              seek: function(De) {
                this._position$1 = De, this._audio$1 == null && this.prepMultimedia(), this._audioReady$1 && (this._audio$1.duration < De ? this._audio$1.pause() : this._audio$1.currentTime = this._position$1);
              },
              prepMultimedia: function() {
                var De = this;
                if (this._audio$1 == null) {
                  this._audio$1 = document.createElement("audio"), this._audio$1.addEventListener("canplaythrough", function() {
                    De._audioReady$1 || (De._audioReady$1 = !0, De._wantPlaying$1 && De.play());
                  }, !1);
                  var Re = document.createElement("source");
                  this._audio$1.appendChild(Re), Re.src = this.get_owner().get_owner().getFileStream(this._filename$1), Re.type = "audio/mp3", this._audio$1.load();
                }
              },
              // TODO: understand better when/how this function is called. It ought to
              // be called for every frame by the generic Draw3D implementation since
              // we never set `texture`, I think. But note that the main music and
              // voice tracks aren't "rendered" in this way, so this function doesn't
              // get called for them, it looks.
              initializeTexture: function() {
                this.prepMultimedia();
              },
              cleanUp: function() {
                Le.prototype.cleanUp.call(this), this._wantPlaying$1 = !1, this._audio$1 != null && (this._audio$1.pause(), this._audio$1.src = null, this._audio$1 = null);
              },
              get_trackType: function() {
                return this._trackType$1;
              },
              set_trackType: function(De) {
                return this._trackType$1 = De, De;
              },
              writeOverlayProperties: function(De) {
                De._writeStartElement("Audio"), De._writeAttributeString("Filename", this._filename$1), De._writeAttributeString("Volume", this._volume$1.toString()), De._writeAttributeString("Mute", this._mute$1.toString()), De._writeAttributeString("TrackType", a.Enums.toXml("AudioType", this._trackType$1)), De._writeEndElement();
              },
              initializeFromXml: function(De) {
                var Re = _.Util.selectSingleNode(De, "Audio");
                this._filename$1 = Re.attributes.getNamedItem("Filename").nodeValue, Re.attributes.getNamedItem("Volume") != null && (this._volume$1 = parseInt(Re.attributes.getNamedItem("Volume").nodeValue)), Re.attributes.getNamedItem("Mute") != null && (this._mute$1 = s.ss.boolean(Re.attributes.getNamedItem("Mute").nodeValue)), Re.attributes.getNamedItem("TrackType") != null && (this._trackType$1 = a.Enums.parse("AudioType", Re.attributes.getNamedItem("TrackType").nodeValue));
              }
            };
            (0, a.registerType)("AudioOverlay", [He, We, Le]);
            function Ke() {
              this._loopType$1 = 1, this._startFrame$1 = 0, this._framesList$1 = [], this._frames$1 = 1, this._framesX$1 = 8, this._framesY$1 = 8, this._textureReady$1 = !1, this._currentFrame$1 = 0, this._cellHeight$1 = 256, this._cellWidth$1 = 256, this._timeStart$1 = s.ss.now(), this._playing$1 = !0, Le.call(this);
            }
            var $ = {
              getTypeName: function() {
                return "TerraViewer.FlipbookOverlay";
              },
              get_loopType: function() {
                return this._loopType$1;
              },
              set_loopType: function(De) {
                return this._loopType$1 = De, De;
              },
              get_startFrame: function() {
                return this._startFrame$1;
              },
              set_startFrame: function(De) {
                return this._startFrame$1 = De, De;
              },
              get_frameSequence: function() {
                return this._frameSequence$1;
              },
              set_frameSequence: function(De) {
                if (this._frameSequence$1 !== De && (this._frameSequence$1 = De, this._framesList$1 = [], !s.ss.emptyString(this._frameSequence$1)))
                  try {
                    for (var Re = this._frameSequence$1.split(","), Ie = s.ss.enumerate(Re); Ie.moveNext(); ) {
                      var O = Ie.current, Ue = parseInt(s.ss.trim(O));
                      this._framesList$1.push(Ue);
                    }
                  } catch {
                  }
                return De;
              },
              get_frames: function() {
                return this._frames$1;
              },
              set_frames: function(De) {
                return this._frames$1 = De, De;
              },
              get_framesX: function() {
                return this._framesX$1;
              },
              set_framesX: function(De) {
                return this._framesX$1 = De, De;
              },
              get_framesY: function() {
                return this._framesY$1;
              },
              set_framesY: function(De) {
                return this._framesY$1 = De, De;
              },
              copy: function(De) {
                var Re = new Ke();
                return Re.set_owner(De), Re._filename$1 = this._filename$1, Re.set_x(this.get_x()), Re.set_y(this.get_y()), Re.set_width(this.get_width()), Re.set_height(this.get_height()), Re.set_color(this.get_color()), Re.set_opacity(this.get_opacity()), Re.set_rotationAngle(this.get_rotationAngle()), Re.set_name(this.get_name() + " - Copy"), Re.set_startFrame(this.get_startFrame()), Re.set_frames(this.get_frames()), Re.set_loopType(this.get_loopType()), Re.set_frameSequence(this.get_frameSequence()), Re.set_framesX(this.get_framesX()), Re.set_framesY(this.get_framesY()), Re;
              },
              cleanUp: function() {
                this.texture = null;
              },
              initializeTexture: function() {
                var De = this;
                try {
                  var Re = s.ss.endsWith(this._filename$1.toLowerCase(), ".jpg");
                  this.texture = this.get_owner().get_owner().getCachedTexture(this._filename$1, function() {
                    De._textureReady$1 = !0;
                  });
                } catch {
                }
              },
              addFilesToCabinet: function(De) {
                De.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
              },
              writeOverlayProperties: function(De) {
                De._writeStartElement("Flipbook"), De._writeAttributeString("Filename", this._filename$1), De._writeAttributeString("Frames", this._frames$1.toString()), De._writeAttributeString("Loop", a.Enums.toXml("LoopTypes", this._loopType$1)), De._writeAttributeString("FramesX", this._framesX$1.toString()), De._writeAttributeString("FramesY", this._framesY$1.toString()), De._writeAttributeString("StartFrame", this._startFrame$1.toString()), s.ss.emptyString(this._frameSequence$1) || De._writeAttributeString("FrameSequence", this._frameSequence$1), De._writeEndElement();
              },
              initializeFromXml: function(De) {
                var Re = _.Util.selectSingleNode(De, "Flipbook");
                this._filename$1 = Re.attributes.getNamedItem("Filename").nodeValue, this._frames$1 = parseInt(Re.attributes.getNamedItem("Frames").nodeValue), this._loopType$1 = a.Enums.parse("LoopTypes", Re.attributes.getNamedItem("Loop").nodeValue), Re.attributes.getNamedItem("FramesX") != null && this.set_framesX(parseInt(Re.attributes.getNamedItem("FramesX").nodeValue)), Re.attributes.getNamedItem("FramesY") != null && this.set_framesY(parseInt(Re.attributes.getNamedItem("FramesY").nodeValue)), Re.attributes.getNamedItem("StartFrame") != null && this.set_startFrame(parseInt(Re.attributes.getNamedItem("StartFrame").nodeValue)), Re.attributes.getNamedItem("FrameSequence") != null && this.set_frameSequence(Re.attributes.getNamedItem("FrameSequence").nodeValue);
              },
              play: function() {
                this._playing$1 = !0, this._timeStart$1 = s.ss.now();
              },
              pause: function() {
                this._playing$1 = !1;
              },
              stop: function() {
                this._playing$1 = !1, this._currentFrame$1 = 0;
              },
              initializeGeometry: function() {
                var De = this._frames$1;
                if (s.ss.emptyString(this._frameSequence$1) || (De = this._framesList$1.length), this._playing$1) {
                  var Re = s.ss.now() - this._timeStart$1;
                  switch (this._loopType$1) {
                    case 0:
                      this._currentFrame$1 = s.ss.truncate(Re / 1e3 * 24 % De) + this._startFrame$1;
                      break;
                    case 1:
                      this._currentFrame$1 = Math.abs(s.ss.truncate((Re / 1e3 * 24 + De) % (De * 2 - 1)) - (De - 1)) + this._startFrame$1, this._currentFrame$1 < 0 || this._currentFrame$1 > De - 1;
                      break;
                    case 2:
                      this._currentFrame$1 = Math.max(0, De - s.ss.truncate(Re / 1e3 * 24 % De)) + this._startFrame$1;
                      break;
                    case 3:
                      var Ie = Math.min(Re / 1e3 * 24, De * 2 + 1) + De;
                      this._currentFrame$1 = Math.abs(Ie % (De * 2 - 1) - (De - 1)) + this._startFrame$1;
                      break;
                    case 4:
                      this._currentFrame$1 = Math.min(De - 1, s.ss.truncate(Re / 1e3 * 24));
                      break;
                    case 5:
                      this._currentFrame$1 = this._startFrame$1;
                      break;
                    case 6:
                      this._currentFrame$1 = De - 1 + this._startFrame$1;
                      break;
                    default:
                      this._currentFrame$1 = this._startFrame$1;
                      break;
                  }
                }
                s.ss.emptyString(this._frameSequence$1) || (this._currentFrame$1 < this._framesList$1.length && this._currentFrame$1 > -1 ? this._currentFrame$1 = this._framesList$1[this._currentFrame$1] : this._currentFrame$1 = 0), this.currentRotation = 0;
              }
            };
            (0, a.registerType)("FlipbookOverlay", [Ke, $, Le]);
          }
        ),
        /***/
        "./esm/tours/selection.js": (
          /*!********************************!*\
            !*** ./esm/tours/selection.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Selection: () => (
                /* binding */
                y
              ),
              /* harmony export */
              SelectionAnchor: () => (
                /* binding */
                u
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ../graphics/sprite2d.js */
              "./esm/graphics/sprite2d.js"
            ), o = n(
              /*! ../graphics/texture.js */
              "./esm/graphics/texture.js"
            ), c = n(
              /*! ../color.js */
              "./esm/color.js"
            ), _ = n(
              /*! ../util.js */
              "./esm/util.js"
            ), u = {
              topLeft: 0,
              top: 1,
              topRight: 2,
              right: 3,
              bottomRight: 4,
              bottom: 5,
              bottomLeft: 6,
              left: 7,
              rotate: 8,
              move: 9,
              center: 10,
              none: 11
            };
            (0, a.registerType)("SelectionAnchor", u), (0, a.registerEnum)("SelectionAnchor", u);
            function y() {
              this._singleSelectHandles = null, this._multiSelectHandles = null, this._focusHandles = null, this.selectionSet = [], this._focus = null, this._ratio = 1, this._sprite = new l.Sprite2d(), this._centerX = 0, this._centerY = 0;
            }
            y._points = new Array(54);
            var g = {
              clearSelection: function() {
                this.selectionSet.length = 0;
              },
              addSelection: function(Ee) {
                Ee != null && (this.selectionSet.indexOf(Ee) >= 0 || this.selectionSet.push(Ee));
              },
              addSelectionRange: function(Ee) {
                for (var Ve = s.ss.enumerate(Ee); Ve.moveNext(); ) {
                  var Me = Ve.current;
                  this.selectionSet.push(Me);
                }
              },
              isOverlaySelected: function(Ee) {
                return this.selectionSet.indexOf(Ee) >= 0;
              },
              setSelection: function(Ee) {
                this.selectionSet.length = 0, Ee != null && this.selectionSet.push(Ee);
              },
              get_multiSelect: function() {
                return this.selectionSet.length > 1;
              },
              setSelectionRange: function(Ee) {
                this.selectionSet.length = 0;
                for (var Ve = s.ss.enumerate(Ee); Ve.moveNext(); ) {
                  var Me = Ve.current;
                  this.selectionSet.push(Me);
                }
              },
              get_focus: function() {
                return this._focus;
              },
              set_focus: function(Ee) {
                return this._focus = Ee, Ee;
              },
              draw3D: function(Ee, Ve) {
                if (this._ratio = 1116 / Ee.height, this._singleSelectHandles == null && (this._singleSelectHandles = o.Texture.fromUrl("images/Selhand.bmp")), this._multiSelectHandles == null && (this._multiSelectHandles = o.Texture.fromUrl("images/multiSelhand.bmp")), this._focusHandles == null && (this._focusHandles = o.Texture.fromUrl("images/FocusHandles.png")), this.selectionSet.length > 1)
                  for (var Me = s.ss.enumerate(this.selectionSet); Me.moveNext(); ) {
                    var B = Me.current;
                    B === this._focus ? this._drawSelectionHandles(Ee, B, this._focusHandles) : this._drawSelectionHandles(Ee, B, this._multiSelectHandles);
                  }
                else
                  for (var Pe = s.ss.enumerate(this.selectionSet); Pe.moveNext(); ) {
                    var B = Pe.current;
                    this._drawSelectionHandles(Ee, B, this._singleSelectHandles);
                  }
              },
              _drawSelectionHandles: function(Ee, Ve, Me) {
                for (var B = this.makeHandles(Ve), Pe = Ve.get_rotationAngle(), k = 0, b = 0, Le = s.ss.enumerate(B); Le.moveNext(); ) {
                  var xe = Le.current;
                  y._points[k + 0] = new t.PositionColoredTextured(), y._points[k + 0].position = Ve.makePosition(this._centerX, this._centerY, xe.get_left() - this._centerX, xe.get_top() - this._centerY, Pe), y._points[k + 0].tu = b * (1 / 9), y._points[k + 0].tv = 0, y._points[k + 0].color = c.Colors.get_white(), y._points[k + 1] = new t.PositionColoredTextured(), y._points[k + 1].position = Ve.makePosition(this._centerX, this._centerY, xe.get_right() - this._centerX, xe.get_top() - this._centerY, Pe), y._points[k + 1].tu = (b + 1) * (1 / 9), y._points[k + 1].tv = 0, y._points[k + 1].color = c.Colors.get_white(), y._points[k + 2] = new t.PositionColoredTextured(), y._points[k + 2].position = Ve.makePosition(this._centerX, this._centerY, xe.get_left() - this._centerX, xe.get_bottom() - this._centerY, Pe), y._points[k + 2].tu = b * (1 / 9), y._points[k + 2].tv = 1, y._points[k + 2].color = c.Colors.get_white(), y._points[k + 3] = new t.PositionColoredTextured(), y._points[k + 3].position = Ve.makePosition(this._centerX, this._centerY, xe.get_right() - this._centerX, xe.get_top() - this._centerY, Pe), y._points[k + 3].tu = (b + 1) * (1 / 9), y._points[k + 3].tv = 0, y._points[k + 3].color = c.Colors.get_white(), y._points[k + 4] = new t.PositionColoredTextured(), y._points[k + 4].position = Ve.makePosition(this._centerX, this._centerY, xe.get_right() - this._centerX, xe.get_bottom() - this._centerY, Pe), y._points[k + 4].tu = (b + 1) * (1 / 9), y._points[k + 4].tv = 1, y._points[k + 4].color = c.Colors.get_white(), y._points[k + 5] = new t.PositionColoredTextured(), y._points[k + 5].position = Ve.makePosition(this._centerX, this._centerY, xe.get_left() - this._centerX, xe.get_bottom() - this._centerY, Pe), y._points[k + 5].tu = b * (1 / 9), y._points[k + 5].tv = 1, y._points[k + 5].color = c.Colors.get_white(), k += 6, b++;
                }
                this.get_multiSelect() ? this._sprite.draw(Ee, y._points, y._points.length - 6, Me, !1, 1) : this._sprite.draw(Ee, y._points, y._points.length, Me, !1, 1);
              },
              pointToSelectionSpace: function(Ee) {
                var Ve = new Array(1);
                Ve[0] = t.Vector2d.create(Ee.x, Ee.y);
                var Me = t.Matrix2d.rotateAt(-this.selectionSet[0].get_rotationAngle() / 180 * Math.PI, t.Vector2d.create(this.selectionSet[0].get_x(), this.selectionSet[0].get_y()));
                return Me._transformPoints(Ve), Ve[0];
              },
              pointToScreenSpace: function(Ee) {
                var Ve = new Array(1);
                Ve[0] = t.Vector2d.create(Ee.x, Ee.y);
                var Me = t.Matrix2d.rotateAt(this.selectionSet[0].get_rotationAngle() / 180 * Math.PI, t.Vector2d.create(this.selectionSet[0].get_x(), this.selectionSet[0].get_y()));
                return Me._transformPoints(Ve), Ve[0];
              },
              hitTest: function(Ee) {
                if (this.selectionSet.length === 1)
                  for (var Ve = s.ss.enumerate(this.selectionSet); Ve.moveNext(); )
                    for (var Me = Ve.current, B = this.makeHandles(Me), Pe = 0, k = this.pointToSelectionSpace(Ee), b = s.ss.enumerate(B); b.moveNext(); ) {
                      var Le = b.current;
                      if (Le.contains(k))
                        return Pe;
                      Pe++;
                    }
                return 11;
              },
              makeHandles: function(Ee) {
                var Ve = s.ss.truncate(Ee.get_x() - Ee.get_width() / 2) + 0.5, Me = s.ss.truncate(Ee.get_y()) - Ee.get_height() / 2 + 0.5;
                this._centerX = Ee.get_x(), this._centerY = Ee.get_y();
                var B = Ee.get_width(), Pe = Ee.get_height(), k = 12 * this._ratio, b = new Array(9);
                return b[0] = _.Rectangle.create(Ve - k, Me - k, k, k), b[1] = _.Rectangle.create(Ve + B / 2 - k / 2, Me - k, k, k), b[2] = _.Rectangle.create(Ve + B, Me - k, k, k), b[3] = _.Rectangle.create(Ve + B, Me + Pe / 2 - k / 2, k, k), b[4] = _.Rectangle.create(Ve + B, Me + Pe, k, k), b[5] = _.Rectangle.create(Ve + B / 2 - k / 2, Me + Pe, k, k), b[6] = _.Rectangle.create(Ve - k, Me + Pe, k, k), b[7] = _.Rectangle.create(Ve - k, Me + Pe / 2 - k / 2, k, k), b[8] = _.Rectangle.create(Ve + B / 2 - k / 2, Me - 30 * this._ratio, k, k), b;
              }
            };
            (0, a.registerType)("Selection", [y, g, null]);
          }
        ),
        /***/
        "./esm/tours/text_object.js": (
          /*!**********************************!*\
            !*** ./esm/tours/text_object.js ***!
            \**********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              TextBorderStyle: () => (
                /* binding */
                o
              ),
              /* harmony export */
              TextObject: () => (
                /* binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), l = n(
              /*! ../color.js */
              "./esm/color.js"
            ), o = {
              none: 0,
              tight: 1,
              small: 2,
              medium: 3,
              large: 4
            };
            (0, s.registerType)("TextBorderStyle", o), (0, s.registerEnum)("TextBorderStyle", o);
            function c() {
              this.bold = !1, this.italic = !1, this.underline = !1, this.fontSize = 0, this.borderStyle = 0;
            }
            c.create = function(u, y, g, Ee, Ve, Me, B, Pe, k) {
              var b = new c();
              return b.text = u, b.bold = y, b.italic = g, b.underline = Ee, b.fontSize = Ve, b.fontName = Me, b.foregroundColor = B, b.backgroundColor = Pe, b.borderStyle = k, b;
            }, c._fromXml = function(u) {
              var y = new c();
              return y.text = t.Util.getInnerText(u), y.borderStyle = 0, y.bold = a.ss.boolean(u.attributes.getNamedItem("Bold").nodeValue), y.italic = a.ss.boolean(u.attributes.getNamedItem("Italic").nodeValue), y.underline = a.ss.boolean(u.attributes.getNamedItem("Underline").nodeValue), y.fontSize = parseFloat(u.attributes.getNamedItem("FontSize").nodeValue), y.fontName = u.attributes.getNamedItem("FontName").nodeValue, y.foregroundColor = l.Color.load(u.attributes.getNamedItem("ForgroundColor").nodeValue), y.backgroundColor = l.Color.load(u.attributes.getNamedItem("BackgroundColor").nodeValue), u.attributes.getNamedItem("BorderStyle") != null && (y.borderStyle = s.Enums.parse("TextBorderStyle", u.attributes.getNamedItem("BorderStyle").nodeValue)), y;
            };
            var _ = {
              toString: function() {
                return this.text;
              },
              _saveToXml: function(u) {
                u._writeStartElement("TextObject"), u._writeAttributeString("Bold", this.bold.toString()), u._writeAttributeString("Italic", this.italic.toString()), u._writeAttributeString("Underline", this.underline.toString()), u._writeAttributeString("FontSize", this.fontSize.toString()), u._writeAttributeString("FontName", this.fontName), u._writeAttributeString("ForgroundColor", this.foregroundColor.save()), u._writeAttributeString("BackgroundColor", this.backgroundColor.save()), u._writeAttributeString("BorderStyle", s.Enums.toXml("TextBorderStyle", this.borderStyle)), u._writeString(this.text), u._writeEndElement();
              }
            };
            (0, s.registerType)("TextObject", [c, _, null]);
          }
        ),
        /***/
        "./esm/tours/tour_document.js": (
          /*!************************************!*\
            !*** ./esm/tours/tour_document.js ***!
            \************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              TourDocument: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              UserLevel: () => (
                /* binding */
                Le
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../data_globals.js */
              "./esm/data_globals.js"
            ), l = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), o = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), c = n(
              /*! ../graphics/texture.js */
              "./esm/graphics/texture.js"
            ), _ = n(
              /*! ../util.js */
              "./esm/util.js"
            ), u = n(
              /*! ../utilities/xml_text_writer.js */
              "./esm/utilities/xml_text_writer.js"
            ), y = n(
              /*! ../imageset.js */
              "./esm/imageset.js"
            ), g = n(
              /*! ../view_mover.js */
              "./esm/view_mover.js"
            ), Ee = n(
              /*! ../layers/reference_frame.js */
              "./esm/layers/reference_frame.js"
            ), Ve = n(
              /*! ./file_cabinet.js */
              "./esm/tours/file_cabinet.js"
            ), Me = n(
              /*! ./tour_stop.js */
              "./esm/tours/tour_stop.js"
            ), B = n(
              /*! ./tour_player.js */
              "./esm/tours/tour_player.js"
            ), Pe = n(
              /*! ../layers/layer.js */
              "./esm/layers/layer.js"
            ), k = n(
              /*! ../layers/imageset_layer.js */
              "./esm/layers/imageset_layer.js"
            ), b = n(
              /*! ../layers/layer_manager.js */
              "./esm/layers/layer_manager.js"
            ), Le = {
              beginner: 0,
              intermediate: 1,
              advanced: 2,
              educator: 3,
              professional: 4
            };
            (0, a.registerType)("UserLevel", Le), (0, a.registerEnum)("UserLevel", Le);
            function xe() {
              this._tourDirty = 0, this._workingDirectory = "", this.url = "", this._tagId = "", this._representativeThumbnailTourstop = 0, this._id = "", this._title = "", this._runTime = 0, this._lastDirtyCheck = 0, this._description = "", this._attributesAndCredits = "", this._authorEmailOther = "", this._authorEmail = "", this._authorUrl = "", this._authorPhone = "", this._authorContactText = "", this._orgName = "None", this._orgUrl = "", this._author = "", this._authorImageUrl = "", this._authorImage = null, this._organizationUrl = "", this._filename = "", this._level = 0, this._type = 268435456, this._taxonomy = "", this._keywords = "", this._objects = "", this._editMode = !1, this.explicitTourLinks = [], this.implicitTourLinks = [], this._tourStops = [], this._currentTourstopIndex = -1, this._textureList = {}, this._textureList2d = {}, this._fileCache = {}, this.dontCleanUpTempFiles = !1, this._id = _.Guid.newGuid().toString();
            }
            xe.get_baseWorkingDirectory = function() {
              return "";
            }, xe.fromUrl = function(Se, Te) {
              var D = new xe();
              return D.url = Se, D._callMe = Te, D._cabinet = Ve.FileCabinet.fromUrl(Se, s.ss.bind("_loadXmlDocument", D)), D;
            }, xe.fromUrlRaw = function(Se, Te) {
              var D = new xe();
              return D.url = Se, D._callMe = Te, D._cabinet = Ve.FileCabinet.fromUrl(Se, Te), D;
            }, (0, t.set_tourDocumentFromUrlRaw)(xe.fromUrlRaw);
            var ze = {
              get_tourDirty: function() {
                return this._tourDirty > 0;
              },
              set_tourDirty: function(Se) {
                return Se ? this._tourDirty++ : this._tourDirty = 0, Se;
              },
              get_workingDirectory: function() {
                return s.ss.emptyString(this._workingDirectory) && (this._workingDirectory = xe.get_baseWorkingDirectory() + this._id + "\\"), this._workingDirectory;
              },
              set_workingDirectory: function(Se) {
                return this._workingDirectory = Se, Se;
              },
              _loadXmlDocument: function() {
                var Se = this;
                try {
                  var Te = this._cabinet.get_masterFile(), D = new FileReader();
                  D.onloadend = function(ke) {
                    var Fe = s.ss.safeCast(D.result, String), He = new DOMParser();
                    Se.fromXml(He.parseFromString(Fe, "text/xml")), Se._callMe();
                  }, D.readAsText(this._cabinet.getFileBlob(Te));
                } catch (ke) {
                  t.globalScriptInterface._fireTourError(ke);
                }
              },
              fromXml: function(Se) {
                var Te = o.Util.selectSingleNode(Se, "Tour");
                this._id = Te.attributes.getNamedItem("ID").nodeValue, this.set_title(Te.attributes.getNamedItem("Title").nodeValue), this.set_author(Te.attributes.getNamedItem("Author").nodeValue), Te.attributes.getNamedItem("Descirption") != null && this.set_description(Te.attributes.getNamedItem("Descirption").nodeValue), Te.attributes.getNamedItem("AuthorEmail") != null && (this._authorEmail = Te.attributes.getNamedItem("AuthorEmail").nodeValue), Te.attributes.getNamedItem("Keywords") != null && this.set_keywords(Te.attributes.getNamedItem("Keywords").nodeValue), Te.attributes.getNamedItem("OrganizationName") != null && this.set_orgName(Te.attributes.getNamedItem("OrganizationName").nodeValue), this._organizationUrl = Te.attributes.getNamedItem("OrganizationUrl").nodeValue, this._level = a.Enums.parse("UserLevel", Te.attributes.getNamedItem("UserLevel").nodeValue), this._type = a.Enums.parse("Classification", Te.attributes.getNamedItem("Classification").nodeValue), this._taxonomy = Te.attributes.getNamedItem("Taxonomy").nodeValue;
                for (var D = o.Util.selectSingleNode(Te, "TourStops"), ke = s.ss.enumerate(D.childNodes); ke.moveNext(); ) {
                  var Fe = ke.current;
                  Fe.nodeName === "TourStop" && this.addTourStop(Me.TourStop._fromXml(this, Fe));
                }
                var He = o.Util.selectSingleNode(Te, "ReferenceFrames");
                if (He != null) {
                  for (var We = s.ss.enumerate(He.childNodes); We.moveNext(); ) {
                    var Ke = We.current;
                    if (Ke.nodeName === "ReferenceFrame") {
                      var $ = new Ee.ReferenceFrame();
                      if ($.initializeFromXml(Ke), !s.ss.keyExists((0, t.layerManagerGetAllMaps)(), $.name)) {
                        var De = new b.LayerMap($.name, 18);
                        De.frame = $, De.loadedFromTour = !0, (0, t.layerManagerGetAllMaps)()[$.name] = De;
                      }
                    }
                  }
                  b.LayerManager.connectAllChildren(), b.LayerManager.loadTree();
                }
                var Re = o.Util.selectSingleNode(Te, "Layers");
                if (Re != null) {
                  for (var Ie = s.ss.enumerate(Re.childNodes); Ie.moveNext(); ) {
                    var O = Ie.current;
                    if (O.nodeName === "Layer") {
                      var Ue = Pe.Layer.fromXml(O, !0);
                      if (Ue != null) {
                        if (s.ss.canCast(Ue, k.ImageSetLayer)) {
                          var $e = Ue, Ze = $e.get_imageSet();
                          if (Ze.get_projection() === y.ProjectionType.healpix && Ze.get_extension() === ".tsv") {
                            t.globalWWTControl.addCatalogHips(Ze);
                            continue;
                          }
                        }
                        var Qe = s.ss.format("{0}.txt", Ue.id.toString());
                        s.ss.keyExists(b.LayerManager.get_layerList(), Ue.id) && b.LayerManager.deleteLayerByID(Ue.id, !0, !1);
                        try {
                          Ue.loadedFromTour = !0, Ue.loadData(this, Qe), b.LayerManager.add(Ue, !1);
                        } catch {
                        }
                      }
                    }
                  }
                  b.LayerManager.loadTree();
                }
                this._tourDirty = 0;
              },
              saveToDataUrl: function() {
                return URL.createObjectURL(this.saveToBlob());
              },
              saveToBlob: function() {
                var Se = !1;
                this.cleanUp();
                var Te = this.getTourXML(), D = new Ve.FileCabinet();
                D.set_packageID(this.get_id()), D.addFile("Tour.wwtxml", new Blob([Te])), this._authorImage != null;
                for (var ke = s.ss.enumerate(this.get_tourStops()); ke.moveNext(); ) {
                  var Fe = ke.current;
                  Fe._addFilesToCabinet(D, Se);
                }
                for (var He = this._createLayerMasterList(), We = s.ss.enumerate(He); We.moveNext(); ) {
                  var Ke = We.current;
                  s.ss.keyExists(b.LayerManager.get_layerList(), Ke) && b.LayerManager.get_layerList()[Ke].addFilesToCabinet(D);
                }
                return this.set_tourDirty(!1), D.packageFiles();
              },
              getTourXML: function() {
                var Se = new u.XmlTextWriter();
                Se.formatting = 1, Se._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), Se._writeStartElement("Tour"), Se._writeAttributeString("ID", this._id), Se._writeAttributeString("Title", this._title), Se._writeAttributeString("Descirption", this.get_description()), Se._writeAttributeString("Description", this.get_description()), Se._writeAttributeString("RunTime", (this.get_runTime() / 1e3).toString()), Se._writeAttributeString("Author", this._author), Se._writeAttributeString("AuthorEmail", this._authorEmail), Se._writeAttributeString("OrganizationUrl", this._organizationUrl), Se._writeAttributeString("OrganizationName", this.get_orgName()), Se._writeAttributeString("Keywords", this.get_keywords()), Se._writeAttributeString("UserLevel", a.Enums.toXml("UserLevel", this._level)), Se._writeAttributeString("Classification", a.Enums.toXml("Classification", this._type)), Se._writeAttributeString("Taxonomy", this._taxonomy);
                var Te = this._isTimelineTour();
                Se._writeAttributeString("TimeLineTour", Te.toString()), Se._writeStartElement("TourStops");
                for (var D = s.ss.enumerate(this.get_tourStops()); D.moveNext(); ) {
                  var ke = D.current;
                  ke._saveToXml(Se, !0);
                }
                Se._writeEndElement();
                var Fe = this._createLayerMasterList(), He = this._getReferenceFrameList();
                Se._writeStartElement("ReferenceFrames");
                for (var We = s.ss.enumerate(He); We.moveNext(); ) {
                  var Ke = We.current;
                  Ke.saveToXml(Se);
                }
                Se._writeEndElement(), Se._writeStartElement("Layers");
                for (var $ = s.ss.enumerate(Fe); $.moveNext(); ) {
                  var De = $.current;
                  if (s.ss.keyExists(b.LayerManager.get_layerList(), De)) {
                    var Re = b.LayerManager.get_layerList()[De], Ie = Re.get_name(), O = l.globalRenderContext.getCatalogHipsByName(Ie);
                    if (O != null) {
                      var Ue = k.ImageSetLayer.create(O);
                      Ue.id = De, Ue.set_name(Ie), Ue.set_referenceFrame("Sky"), Ue.saveToXml(Se);
                    } else
                      b.LayerManager.get_layerList()[De].saveToXml(Se);
                  }
                }
                return Se._writeEndElement(), Se._writeFullEndElement(), Se._close(), Se.body;
              },
              _getReferenceFrameList: function() {
                for (var Se = [], Te = s.ss.enumerate(s.ss.keys((0, t.layerManagerGetAllMaps)())); Te.moveNext(); ) {
                  var D = Te.current, ke = (0, t.layerManagerGetAllMaps)()[D];
                  (ke.frame.reference === 18 || ke.frame.reference === 19) && !(Se.indexOf(ke.frame) >= 0) && !ke.frame._systemGenerated && Se.push(ke.frame);
                }
                return Se;
              },
              _createLayerMasterList: function() {
                for (var Se = [], Te = s.ss.enumerate(this.get_tourStops()); Te.moveNext(); )
                  for (var D = Te.current, ke = s.ss.enumerate(s.ss.keys(D.layers)); ke.moveNext(); ) {
                    var Fe = ke.current;
                    Se.indexOf(Fe) >= 0 || s.ss.keyExists(b.LayerManager.get_layerList(), Fe) && Se.push(Fe);
                  }
                return Se;
              },
              _isTimelineTour: function() {
                return !1;
              },
              get_tagId: function() {
                return this._tagId;
              },
              set_tagId: function(Se) {
                return this._tagId = Se, Se;
              },
              get_authorThumbnailFilename: function() {
                return "Author.Png";
              },
              get_tourThumbnailFilename: function() {
                return this._representativeThumbnailTourstop < this._tourStops.length ? this._tourStops[this._representativeThumbnailTourstop].get_tourStopThumbnailFilename() : null;
              },
              get_id: function() {
                return this._id;
              },
              set_id: function(Se) {
                return this._id = Se, Se;
              },
              get_title: function() {
                return this._title;
              },
              set_title: function(Se) {
                return this._title = Se, this.set_tourDirty(!0), Se;
              },
              get_runTime: function() {
                return (!this._runTime || this._lastDirtyCheck !== this._tourDirty) && (this._runTime = this._calculateRunTime(), this._lastDirtyCheck = this._tourDirty), this._runTime;
              },
              get_description: function() {
                return this._description;
              },
              set_description: function(Se) {
                return this._description = Se, this.set_tourDirty(!0), Se;
              },
              get_attributesAndCredits: function() {
                return this._attributesAndCredits;
              },
              set_attributesAndCredits: function(Se) {
                return this._attributesAndCredits = Se, this.set_tourDirty(!0), Se;
              },
              get_authorEmailOther: function() {
                return this._authorEmailOther;
              },
              set_authorEmailOther: function(Se) {
                return this._authorEmailOther = Se, this.set_tourDirty(!0), Se;
              },
              get_authorEmail: function() {
                return this._authorEmail;
              },
              set_authorEmail: function(Se) {
                return this._authorEmail = Se, this.set_tourDirty(!0), Se;
              },
              get_authorUrl: function() {
                return this._authorUrl;
              },
              set_authorUrl: function(Se) {
                return this._authorUrl = Se, this.set_tourDirty(!0), Se;
              },
              get_authorPhone: function() {
                return this._authorPhone;
              },
              set_authorPhone: function(Se) {
                return this._authorPhone = Se, this.set_tourDirty(!0), Se;
              },
              get_authorContactText: function() {
                return this._authorContactText;
              },
              set_authorContactText: function(Se) {
                return this._authorContactText = Se, this.set_tourDirty(!0), Se;
              },
              get_orgName: function() {
                return this._orgName;
              },
              set_orgName: function(Se) {
                return this._orgName = Se, this.set_tourDirty(!0), Se;
              },
              get_orgUrl: function() {
                return this._orgUrl;
              },
              set_orgUrl: function(Se) {
                return this._orgUrl = Se, this.set_tourDirty(!0), Se;
              },
              get_author: function() {
                return this._author;
              },
              set_author: function(Se) {
                return this._author = Se, this.set_tourDirty(!0), Se;
              },
              get_authorImageUrl: function() {
                return this._authorImageUrl;
              },
              set_authorImageUrl: function(Se) {
                return this._authorImageUrl = Se, this.set_tourDirty(!0), Se;
              },
              get_authorImage: function() {
                return this._authorImage;
              },
              set_authorImage: function(Se) {
                return this._authorImage = Se, this.set_tourDirty(!0), Se;
              },
              get_organizationUrl: function() {
                return this._organizationUrl;
              },
              set_organizationUrl: function(Se) {
                return this._organizationUrl = Se, this.set_tourDirty(!0), Se;
              },
              get_fileName: function() {
                return this._filename;
              },
              set_fileName: function(Se) {
                return this._filename = Se, Se;
              },
              get_level: function() {
                return this._level;
              },
              set_level: function(Se) {
                return this._level = Se, this.set_tourDirty(!0), Se;
              },
              get_type: function() {
                return this._type;
              },
              set_type: function(Se) {
                return this._type = Se, this.set_tourDirty(!0), Se;
              },
              get_taxonomy: function() {
                return this._taxonomy;
              },
              set_taxonomy: function(Se) {
                return this._taxonomy = Se, this.set_tourDirty(!0), Se;
              },
              get_keywords: function() {
                return this._keywords;
              },
              set_keywords: function(Se) {
                return this._keywords = Se, this.set_tourDirty(!0), Se;
              },
              get_objects: function() {
                return this._objects;
              },
              set_objects: function(Se) {
                return this._objects = Se, this.set_tourDirty(!0), Se;
              },
              get_editMode: function() {
                return this._editMode;
              },
              set_editMode: function(Se) {
                return this._editMode = Se, Se;
              },
              get_tourStops: function() {
                return this._tourStops;
              },
              set_tourStops: function(Se) {
                return this._tourStops = Se, Se;
              },
              get_currentTourstopIndex: function() {
                return this._currentTourstopIndex;
              },
              set_currentTourstopIndex: function(Se) {
                return this._currentTourstopIndex = Se, Se;
              },
              addTourStop: function(Se) {
                Se.set_owner(this), this.get_tourStops().push(Se), this._currentTourstopIndex = this._tourStops.length - 1, this.set_tourDirty(!0);
              },
              insertTourStop: function(Se) {
                Se.set_owner(this), this._currentTourstopIndex > -1 ? this.get_tourStops().splice(this._currentTourstopIndex, 0, Se) : (this.get_tourStops().push(Se), this._currentTourstopIndex = this._tourStops.length - 1), this.set_tourDirty(!0);
              },
              insertAfterTourStop: function(Se) {
                Se.set_owner(this), this._currentTourstopIndex > -1 || this._currentTourstopIndex < this.get_tourStops().length ? this.get_tourStops().splice(this._currentTourstopIndex + 1, 0, Se) : (this.get_tourStops().push(Se), this._currentTourstopIndex = this._tourStops.length - 1), this.set_tourDirty(!0);
              },
              removeTourStop: function(Se) {
                s.ss.remove(this._tourStops, Se), this._currentTourstopIndex > this._tourStops.length - 1 && this._currentTourstopIndex--, this.set_tourDirty(!0);
              },
              _calculateRunTime: function() {
                for (var Se = 0, Te = 0; Te < this._tourStops.length; Te++)
                  if (Se += this._tourStops[Te].get_duration(), Te > 0)
                    switch (this._tourStops[Te].get__transition()) {
                      case 0:
                        if (this._tourStops[Te].get_target().get_backgroundImageset() == null || this._tourStops[Te - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[Te].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[Te - 1].get_target().get_backgroundImageset().get_dataSetType() != y.ImageSetType.solarSystem || this._tourStops[Te - 1].get_target().get_target() === this._tourStops[Te].get_target().get_target())) {
                          var D = this._tourStops[Te - 1].get_endTarget() == null ? this._tourStops[Te - 1].get_target().get_camParams() : this._tourStops[Te - 1].get_endTarget().get_camParams(), ke = g.ViewMoverSlew.create(D, this._tourStops[Te].get_target().get_camParams());
                          Se += ke.get_moveTime() * 1e3;
                        }
                        break;
                    }
                return s.ss.truncate(Se);
              },
              elapsedTimeTillTourstop: function(Se) {
                if (!Se && Se >= this._tourStops.length)
                  return 0;
                for (var Te = 0, D = 0; D < Se; D++)
                  if (Te += this._tourStops[D].get_duration(), D > 0)
                    switch (this._tourStops[D].get__transition()) {
                      case 0:
                        var ke = this._tourStops[D - 1].get_endTarget() == null ? this._tourStops[D - 1].get_target().get_camParams() : this._tourStops[D - 1].get_endTarget().get_camParams();
                        if (this._tourStops[D - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[D].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[D - 1].get_target().get_backgroundImageset().get_dataSetType() != y.ImageSetType.solarSystem || this._tourStops[D - 1].get_target().get_target() === this._tourStops[D].get_target().get_target())) {
                          var Fe = g.ViewMoverSlew.create(ke, this._tourStops[D].get_target().get_camParams());
                          Te += Fe.get_moveTime() * 1e3;
                        }
                        break;
                    }
                return Te / 1e3;
              },
              elapsedTimeSinceLastMaster: function(Se) {
                var Te = null;
                if (!Se && Se >= this._tourStops.length)
                  return null;
                for (var D = 0, ke = 0; ke < Se; ke++)
                  if (this._tourStops[ke].get_masterSlide() && (D = 0, Te = this._tourStops[ke]), D += this._tourStops[ke].get_duration(), ke > 0)
                    switch (this._tourStops[ke].get__transition()) {
                      case 0:
                        var Fe = this._tourStops[ke - 1].get_endTarget() == null ? this._tourStops[ke - 1].get_target().get_camParams() : this._tourStops[ke - 1].get_endTarget().get_camParams();
                        if (this._tourStops[ke - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[ke].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[ke - 1].get_target().get_backgroundImageset().get_dataSetType() != y.ImageSetType.solarSystem || this._tourStops[ke - 1].get_target().get_target() === this._tourStops[ke].get_target().get_target())) {
                          var He = g.ViewMoverSlew.create(Fe, this._tourStops[ke].get_target().get_camParams());
                          D += He.get_moveTime() * 1e3;
                        }
                        break;
                    }
                return new B.MasterTime(Te, D / 1e3);
              },
              getMasterSlideForIndex: function(Se) {
                for (var Te = -1, D = 0; D < Se; D++)
                  this._tourStops[D].get_masterSlide() && (Te = D);
                return Te === -1 ? null : this._tourStops[Te];
              },
              getTourStopIndexByID: function(Se) {
                if (!Se || Se === "Next")
                  return this._currentTourstopIndex++;
                for (var Te = 0, D = s.ss.enumerate(this._tourStops); D.moveNext(); ) {
                  var ke = D.current;
                  if (ke.get_id() === Se)
                    return Te;
                  Te++;
                }
                return -1;
              },
              cleanUp: function() {
              },
              getCachedTexture: function(Se, Te) {
                if (this._textureList == null && (this._textureList = {}), s.ss.keyExists(this._textureList, Se))
                  return Te(), this._textureList[Se];
                var D = this.getFileStream(Se);
                if (s.ss.whitespace(D))
                  return null;
                var ke = document.createElement("img");
                return ke.src = this.getFileStream(Se), ke.addEventListener("load", function() {
                  Te();
                }, !1), this._textureList[Se] = ke, ke;
              },
              getCachedTexture2d: function(Se) {
                if (this._textureList2d == null && (this._textureList2d = {}), s.ss.keyExists(this._textureList2d, Se))
                  return this._textureList2d[Se];
                var Te = new c.Texture();
                return Te.load(this.getFileStream(Se)), this._textureList2d[Se] = Te, Te;
              },
              addCachedFile: function(Se, Te) {
                this._fileCache[Se] = Te, s.ss.keyExists(this._textureList2d, Se) && delete this._textureList2d[Se], s.ss.keyExists(this._textureList, Se) && delete this._textureList[Se];
              },
              getFileStream: function(Se) {
                var Te = this.getFileBlob(Se);
                return Te == null ? null : URL.createObjectURL(Te);
              },
              getFileBlob: function(Se) {
                return s.ss.keyExists(this._fileCache, Se) ? this._fileCache[Se] : this._cabinet != null ? this._cabinet.getFileBlob(this.get_workingDirectory() + Se) : null;
              },
              get_currentTourStop: function() {
                return this._currentTourstopIndex > -1 ? this.get_tourStops()[this._currentTourstopIndex] : null;
              },
              set_currentTourStop: function(Se) {
                for (var Te = 0, D = s.ss.enumerate(this.get_tourStops()); D.moveNext(); ) {
                  var ke = D.current;
                  if (ke === Se) {
                    this._currentTourstopIndex > -1, this._currentTourstopIndex = Te;
                    break;
                  }
                  Te++;
                }
                return Se;
              },
              clearTempFiles: function() {
              }
            };
            (0, a.registerType)("TourDocument", [xe, ze, null]);
          }
        ),
        /***/
        "./esm/tours/tour_edit.js": (
          /*!********************************!*\
            !*** ./esm/tours/tour_edit.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              TourEditTab: () => (
                /* binding */
                ze
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../data_globals.js */
              "./esm/data_globals.js"
            ), l = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), o = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), c = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), _ = n(
              /*! ../color.js */
              "./esm/color.js"
            ), u = n(
              /*! ../utilities/xml_text_writer.js */
              "./esm/utilities/xml_text_writer.js"
            ), y = n(
              /*! ../utilities/context_menu_strip.js */
              "./esm/utilities/context_menu_strip.js"
            ), g = n(
              /*! ../util.js */
              "./esm/util.js"
            ), Ee = n(
              /*! ../place.js */
              "./esm/place.js"
            ), Ve = n(
              /*! ../space_time_controller.js */
              "./esm/space_time_controller.js"
            ), Me = n(
              /*! ../ui_tools.js */
              "./esm/ui_tools.js"
            ), B = n(
              /*! ../layers/layer_manager.js */
              "./esm/layers/layer_manager.js"
            ), Pe = n(
              /*! ./overlay.js */
              "./esm/tours/overlay.js"
            ), k = n(
              /*! ./undo.js */
              "./esm/tours/undo.js"
            ), b = n(
              /*! ./tour_stop.js */
              "./esm/tours/tour_stop.js"
            ), Le = n(
              /*! ./tour_player.js */
              "./esm/tours/tour_player.js"
            ), xe = n(
              /*! ./tour_editor.js */
              "./esm/tours/tour_editor.js"
            );
            function ze() {
              this.musicTrack = new xe.SoundEditor(), this.voiceTrack = new xe.SoundEditor(), this._tour = null, this.tourStopList = new xe.TourStopList(), this.tourEditorUI = new xe.TourEditor(), this._contextMenu = new y.ContextMenuStrip(), this.nextSlideCallback = null, this.playing = !1, this._player = null, this._defultColor = _.Colors.get_white();
            }
            var Se = {
              setUiStrings: function() {
              },
              get_tour: function() {
                return this._tour;
              },
              set_tour: function(Te) {
                return this._tour = Te, this.tourEditorUI.set_tour(this._tour), this.tourStopList.tour = this._tour, Pe.Overlay.defaultAnchor = 1, this._tour.get_tourStops().length > 0 && (t.globalWWTControl.gotoTarget(this._tour.get_tourStops()[0].get_target(), !1, !0, !1), this._tour.set_currentTourstopIndex(0), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop(), (0, t.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers)), this.setEditMode(this._tour.get_editMode()), Te;
              },
              tour_CurrentTourstopChanged: function() {
                xe.OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection), this.tourEditorUI != null && this.tourEditorUI.clearSelection(), this.tourStopList.refresh();
              },
              setFocusedChild: function() {
              },
              selectCurrent: function() {
                this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.tourStopList.refresh();
              },
              tourEdit_Load: function(Te, D) {
              },
              playNow: function(Te) {
                this.playing = !0, (this.get_tour().get_editMode() || Te) && this.get_tour().set_currentTourstopIndex(-1), this.setPlayPauseMode();
              },
              _tourPlayer_TourEnded: function(Te, D) {
              },
              _endTour_CloseTour: function(Te, D) {
              },
              _endTour_LaunchTour: function(Te, D) {
                this.playNow(!0);
              },
              setEditMode: function(Te) {
              },
              tourStopList_ItemClicked: function(Te, D) {
                this._tour.get_currentTourStop() !== D && (this._tour.set_currentTourStop(D), D != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this.tourEditorUI.clearSelection()), this.playing && this._playFromHere_Click(Te, new s.ss.EventArgs());
              },
              tourStopList_ItemDoubleClicked: function(Te, D) {
                this.showSlideStartPosition(D);
              },
              showSlideStartPosition: function(Te) {
                this._tour.set_currentTourStop(Te), Te != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this.tourEditorUI.clearSelection(), this._tour.get_currentTourStop() != null && (this._tour.get_currentTourStop().syncSettings(), Ve.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), Ve.SpaceTimeController.set_syncToClock(!1), t.globalWWTControl.gotoTarget(Te.get_target(), !1, !0, !1), this._tour.get_currentTourStop().set_tweenPosition(0), this._tour.get_currentTourStop()._updateLayerOpacity(), (0, t.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers));
              },
              tourStopList_MouseClick: function(Te, D) {
                if (this._tour.get_editMode(), this.tourStopList.multipleSelection) {
                  this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new y.ContextMenuStrip();
                  var ke = y.ToolStripMenuItem.create(g.Language.getLocalizedText(1345, "Select All")), Fe = y.ToolStripMenuItem.create(g.Language.getLocalizedText(427, "Cut")), He = y.ToolStripMenuItem.create(g.Language.getLocalizedText(428, "Copy")), We = y.ToolStripMenuItem.create(g.Language.getLocalizedText(429, "Paste")), Ke = y.ToolStripMenuItem.create(g.Language.getLocalizedText(167, "Delete"));
                  Fe.click = s.ss.bind("_cutMenu_Click", this), He.click = s.ss.bind("_copyMenu_Click", this), We.click = s.ss.bind("_pasteMenu_Click", this), Ke.click = s.ss.bind("_deleteMenu_Click", this), ke.click = s.ss.bind("_selectAllMenu_Click", this);
                  var $ = new y.ToolStripSeparator();
                  this._contextMenu.items.push(ke), this._contextMenu.items.push($), this._contextMenu.items.push(Fe), this._contextMenu.items.push(He), We.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(We), this._contextMenu.items.push(Ke), this._contextMenu._show(g.Cursor.get_position());
                } else if (this._tour.get_currentTourStop() == null) {
                  this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new y.ContextMenuStrip();
                  var ke = y.ToolStripMenuItem.create(g.Language.getLocalizedText(1345, "Select All")), We = y.ToolStripMenuItem.create(g.Language.getLocalizedText(425, "Paste")), $ = new y.ToolStripSeparator(), De = new y.ToolStripSeparator(), Re = y.ToolStripMenuItem.create(g.Language.getLocalizedText(426, "Add New Slide"));
                  We.click = s.ss.bind("_pasteMenu_Click", this), ke.click = s.ss.bind("_selectAllMenu_Click", this), Re.click = s.ss.bind("_addNewSlide_Click", this), We.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(ke), this._contextMenu.items.push($), this._contextMenu.items.push(We), this._contextMenu.items.push(De), this._contextMenu.items.push(Re), this._contextMenu._show(g.Cursor.get_position());
                } else {
                  this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new y.ContextMenuStrip();
                  var ke = y.ToolStripMenuItem.create(g.Language.getLocalizedText(1345, "Select All")), Fe = y.ToolStripMenuItem.create(g.Language.getLocalizedText(427, "Cut")), He = y.ToolStripMenuItem.create(g.Language.getLocalizedText(428, "Copy")), We = y.ToolStripMenuItem.create(g.Language.getLocalizedText(429, "Paste")), Ke = y.ToolStripMenuItem.create(g.Language.getLocalizedText(167, "Delete")), $ = new y.ToolStripSeparator(), Ie = new y.ToolStripSeparator(), O = new y.ToolStripSeparator(), Ue = new y.ToolStripSeparator(), $e = new y.ToolStripSeparator(), Ze = new y.ToolStripSeparator(), Re = y.ToolStripMenuItem.create(g.Language.getLocalizedText(431, "Insert New Slide")), Qe = y.ToolStripMenuItem.create(g.Language.getLocalizedText(627, "Duplicate Slide at End Position")), Ae = y.ToolStripMenuItem.create(g.Language.getLocalizedText(628, "Merge Tour after slide...")), Ne = y.ToolStripMenuItem.create(g.Language.getLocalizedText(432, "Preview Tour From Here")), De = new y.ToolStripSeparator(), Be = y.ToolStripMenuItem.create(g.Language.getLocalizedText(433, "Capture New Thumbnail")), Ge = y.ToolStripMenuItem.create(g.Language.getLocalizedText(434, "Set Start Camera Position")), Ye = y.ToolStripMenuItem.create(g.Language.getLocalizedText(435, "Set End Camera Position")), je = y.ToolStripMenuItem.create(g.Language.getLocalizedText(436, "Show Start Camera Position")), ht = y.ToolStripMenuItem.create(g.Language.getLocalizedText(437, "Show End Camera Position")), qe = y.ToolStripMenuItem.create(g.Language.getLocalizedText(438, "Master Slide"));
                  y.ToolStripMenuItem.create(g.Language.getLocalizedText(1346, "Create Timeline")), y.ToolStripMenuItem.create(g.Language.getLocalizedText(1347, "Show Timeline"));
                  var lt = this._tour.get_currentTourStop().get_nextSlide();
                  switch (lt) {
                    case "":
                    case null:
                    case "Next":
                      lt = " (" + g.Language.getLocalizedText(610, "Next Slide") + ")";
                      break;
                    case "Return":
                      lt = " (" + g.Language.getLocalizedText(602, "Return to Caller") + ")";
                      break;
                    default:
                      var ft = this.get_tour().getTourStopIndexByID(lt);
                      ft > -1 && (s.ss.emptyString(this._tour.get_tourStops()[ft].get_description()) ? lt = s.ss.format(" (Slide {0})", ft) : lt = " (" + this._tour.get_tourStops()[ft].get_description() + ")");
                      break;
                  }
                  var _t = y.ToolStripMenuItem.create(g.Language.getLocalizedText(590, "Set Next Slide") + lt), St = y.ToolStripMenuItem.create(g.Language.getLocalizedText(439, "Track Date/Time/Location")), yt = y.ToolStripMenuItem.create(g.Language.getLocalizedText(629, "Fade In Slide Elements")), Ct = y.ToolStripMenuItem.create(g.Language.getLocalizedText(20, "Properties")), Lt = y.ToolStripMenuItem.create(g.Language.getLocalizedText(1029, "Animation Tween Type")), Vt = y.ToolStripMenuItem.create(g.Language.getLocalizedText(1030, "Linear")), Tt = y.ToolStripMenuItem.create(g.Language.getLocalizedText(1031, "Ease In/Out")), xt = y.ToolStripMenuItem.create(g.Language.getLocalizedText(1032, "Ease In")), Ot = y.ToolStripMenuItem.create(g.Language.getLocalizedText(1033, "Ease Out")), Pt = y.ToolStripMenuItem.create(g.Language.getLocalizedText(1034, "Exponential"));
                  switch (Vt.tag = 0, Tt.tag = 3, xt.tag = 1, Ot.tag = 2, Pt.tag = 4, Vt.click = s.ss.bind("_interpolation_Click", this), Tt.click = s.ss.bind("_interpolation_Click", this), xt.click = s.ss.bind("_interpolation_Click", this), Ot.click = s.ss.bind("_interpolation_Click", this), Pt.click = s.ss.bind("_interpolation_Click", this), this._tour.get_currentTourStop().get_interpolationType()) {
                    case 0:
                      Vt.checked = !0;
                      break;
                    case 1:
                      xt.checked = !0;
                      break;
                    case 2:
                      Ot.checked = !0;
                      break;
                    case 3:
                      Tt.checked = !0;
                      break;
                    case 4:
                      Pt.checked = !0;
                      break;
                  }
                  Lt.dropDownItems.push(Vt), Lt.dropDownItems.push(Tt), Lt.dropDownItems.push(xt), Lt.dropDownItems.push(Ot), Lt.dropDownItems.push(Pt), ke.click = s.ss.bind("_selectAllMenu_Click", this), Qe.click = s.ss.bind("_insertDuplicate_Click", this), Fe.click = s.ss.bind("_cutMenu_Click", this), He.click = s.ss.bind("_copyMenu_Click", this), We.click = s.ss.bind("_pasteMenu_Click", this), Ke.click = s.ss.bind("_deleteMenu_Click", this), Re.click = s.ss.bind("_insertNewSlide_Click", this), Ct.click = s.ss.bind("_properties_Click", this), Be.click = s.ss.bind("_captureThumbnail_Click", this), Ge.click = s.ss.bind("_setSkyPosition_Click", this), Ye.click = s.ss.bind("_setEndSkyPosition_Click", this), ht.click = s.ss.bind("_showEndSkyPosition_Click", this), je.click = s.ss.bind("_showSkyPosition_Click", this), Ne.click = s.ss.bind("_playFromHere_Click", this), qe.click = s.ss.bind("_masterSlide_Click", this), _t.click = s.ss.bind("_setNextSlide_Click", this), St.click = s.ss.bind("_trackSpaceTime_Click", this), Ae.click = s.ss.bind("_insertSlideshow_Click", this), yt.click = s.ss.bind("_fadeInOverlays_Click", this), this._tour.get_currentTourStop().get_masterSlide() && (qe.checked = !0), this._tour.get_currentTourStop().get_hasTime() && (St.checked = !0), yt.checked = this._tour.get_currentTourStop().get_fadeInOverlays(), this._contextMenu.items.push(ke), this._contextMenu.items.push(Ze), this._contextMenu.items.push(Fe), this._contextMenu.items.push(He), We.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(We), this._contextMenu.items.push(Ke), this._contextMenu.items.push($), this._contextMenu.items.push(Re), this._contextMenu.items.push(Qe), this._contextMenu.items.push(Ae), this._contextMenu.items.push(De), this._contextMenu.items.push(Ne), this._contextMenu.items.push(Ie), this._contextMenu.items.push(Ge), this._contextMenu.items.push(Ye), this._contextMenu.items.push(O), this._contextMenu.items.push(je), this._contextMenu.items.push(ht), this._contextMenu.items.push(Ue), this._contextMenu.items.push(Be), this._contextMenu.items.push($e), this._contextMenu.items.push(qe), this._contextMenu.items.push(_t), this._contextMenu.items.push(yt), this._contextMenu.items.push(St), this._contextMenu.items.push(Lt), this._contextMenu._show(o.Vector2d.create(D.clientX, D.clientY));
                }
              },
              _selectAllMenu_Click: function(Te, D) {
                this.tourStopList.selectAll();
              },
              _interpolation_Click: function(Te, D) {
                var ke = Te;
                this._tour.get_currentTourStop().set_interpolationType(ke.tag);
              },
              _nextSlideChosen: function() {
                this._selectDialog.get_OK() && this._tour.get_currentTourStop().set_nextSlide(this._selectDialog.get_id());
              },
              _setNextSlide_Click: function(Te, D) {
                this._selectDialog = new g.SelectLink(null), this.nextSlideCallback(this._selectDialog, s.ss.bind("_nextSlideChosen", this));
              },
              _insertDuplicate_Click: function(Te, D) {
                k.Undo.push(new k.UndoTourSlidelistChange(g.Language.getLocalizedText(530, "Duplicate Slide at End Position"), this._tour));
                var ke = this._tour.get_currentTourStop().copy();
                if (ke != null) {
                  ke.get_endTarget() != null && (ke.get_endTarget().set_backgroundImageset(ke.get_target().get_backgroundImageset()), ke.get_endTarget().set_studyImageset(ke.get_target().get_studyImageset()), ke.set_target(ke.get_endTarget()), ke.set_startTime(ke.get_endTime()), ke.set_endTarget(null));
                  for (var Fe = s.ss.enumerate(ke.get_overlays()); Fe.moveNext(); ) {
                    var He = Fe.current;
                    He.set_tweenFactor(1), He.set_animate(!He.get_animate()), He.set_animate(!He.get_animate());
                  }
                  ke.set_tweenPosition(0), ke.set_fadeInOverlays(!1), this._tour.insertAfterTourStop(ke), this.tourStopList.refresh();
                }
              },
              _fadeInOverlays_Click: function(Te, D) {
                this._tour.get_currentTourStop().set_fadeInOverlays(!this._tour.get_currentTourStop().get_fadeInOverlays());
              },
              _insertSlideshow_Click: function(Te, D) {
              },
              _trackSpaceTime_Click: function(Te, D) {
                k.Undo.push(new b.UndoTourStopChange(g.Language.getLocalizedText(532, "Track Time Edit"), this._tour)), this._tour.get_currentTourStop().set_hasTime(!this._tour.get_currentTourStop().get_hasTime());
              },
              _masterSlide_Click: function(Te, D) {
                k.Undo.push(new b.UndoTourStopChange(g.Language.getLocalizedText(533, "Master Slide State Edit"), this._tour)), this._tour.get_currentTourStop().set_masterSlide(!this._tour.get_currentTourStop().get_masterSlide()), this.tourStopList.refresh();
              },
              _playFromHere_Click: function(Te, D) {
                this.playFromCurrentTourstop();
              },
              playFromCurrentTourstop: function() {
                this.playing = !0, t.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), Ve.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), Ve.SpaceTimeController.set_syncToClock(!1), this.setPlayPauseMode();
              },
              playFromTourstop: function(Te) {
                this._tour.set_currentTourStop(Te), this.playFromCurrentTourstop();
              },
              _showSkyPosition_Click: function(Te, D) {
                this._tour.get_currentTourStop() != null && (t.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), this._tour.get_currentTourStop().syncSettings(), Ve.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), Ve.SpaceTimeController.set_syncToClock(!1), this._tour.get_currentTourStop().set_tweenPosition(0), (0, t.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers), this.tourStopList.refresh());
              },
              _showEndSkyPosition_Click: function(Te, D) {
                this._tour.get_currentTourStop().set_tweenPosition(1), this._tour.get_currentTourStop()._updateLayerOpacity(), this._tour.get_currentTourStop() != null && this._tour.get_currentTourStop().get_endTarget() != null && (t.globalWWTControl.gotoTargetFull(!1, !0, this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_target().get_studyImageset(), this._tour.get_currentTourStop().get_target().get_backgroundImageset()), l.globalRenderContext.set_solarSystemTrack(this._tour.get_currentTourStop().get_endTarget().get_target()), Ve.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_endTime()), this._tour.get_currentTourStop().syncSettings(), (0, t.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers), Ve.SpaceTimeController.set_syncToClock(!1), this.tourStopList.refresh(), this.tourEditorUI.clearSelection());
              },
              _setEndSkyPosition_Click: function(Te, D) {
                if (this._tour.get_currentTourStop() != null) {
                  k.Undo.push(new b.UndoTourStopChange(g.Language.getLocalizedText(435, "Set End Camera Position"), this._tour));
                  var ke = Ee.Place.createCameraParams("End Place", l.globalRenderContext.viewCamera.copy(), 268435456, t.globalWWTControl.constellation, l.globalRenderContext.get_backgroundImageset().get_dataSetType(), l.globalRenderContext.get_solarSystemTrack());
                  this._tour.get_currentTourStop().set_endTarget(ke), this._tour.get_currentTourStop().get_endTarget().set_constellation(t.globalWWTControl.constellation), this._tour.get_currentTourStop().set_endTime(Ve.SpaceTimeController.get_now()), this._tour.get_currentTourStop().set_tweenPosition(1);
                  for (var Fe = s.ss.enumerate(s.ss.keys(this._tour.get_currentTourStop().layers)); Fe.moveNext(); ) {
                    var He = Fe.current, We = this._tour.get_currentTourStop().layers[He];
                    s.ss.keyExists(B.LayerManager.get_layerList(), We.id) && (We.endOpacity = B.LayerManager.get_layerList()[We.id].get_opacity(), We.endParams = B.LayerManager.get_layerList()[We.id].getParams());
                  }
                  this._tour.get_currentTourStop()._updateLayerOpacity(), this.tourStopList.refresh(), xe.TimeLine.refreshUi(), this.tourEditorUI.clearSelection();
                }
              },
              _setSkyPosition_Click: function(Te, D) {
                this._tour.get_currentTourStop() != null && (k.Undo.push(new b.UndoTourStopChange(g.Language.getLocalizedText(434, "Set Start Camera Position"), this._tour)), this._tour.get_currentTourStop().get_target().set_target(l.globalRenderContext.get_solarSystemTrack()), this._tour.get_currentTourStop().get_target().set_type(l.globalRenderContext.get_backgroundImageset().get_dataSetType()), this._tour.get_currentTourStop().get_target().set_camParams(l.globalRenderContext.viewCamera.copy()), this._tour.get_currentTourStop().get_target().set_constellation(t.globalWWTControl.constellation), this._tour.get_currentTourStop().get_target().set_studyImageset(l.globalRenderContext.get_foregroundImageset()), this._tour.get_currentTourStop().get_target().set_type(l.globalRenderContext.get_backgroundImageset().get_dataSetType()), this._tour.get_currentTourStop().get_target().set_backgroundImageset(l.globalRenderContext.get_backgroundImageset().get_stockImageSet()), this._tour.get_currentTourStop().captureSettings(), this._tour.get_currentTourStop().layers = B.LayerManager._getVisibleLayerList(this._tour.get_currentTourStop().layers), this._tour.get_currentTourStop().set_tweenPosition(0), this.tourStopList.refresh(), xe.TimeLine.refreshUi(), this.tourEditorUI.clearSelection());
              },
              _captureThumbnail_Click: function(Te, D) {
                this._tour.get_currentTourStop() != null && this._captureThumbnail(this._tour.get_currentTourStop());
              },
              _captureThumbnail: function(Te) {
                var D = this;
                t.globalWWTControl.captureThumbnail(function(ke) {
                  var Fe = s.ss.format("{0}.thumb.png", Te.get_id());
                  D._tour.addCachedFile(Fe, ke), Te.set_thumbnail(D._tour.getCachedTexture(Fe, function() {
                    D.tourStopList.refresh();
                  }));
                });
              },
              _properties_Click: function(Te, D) {
                throw new Error("The method or operation is not implemented.");
              },
              tourStopList_AddNewSlide: function(Te, D) {
                this.addSlide(!1), this.tourStopList.ensureAddVisible();
              },
              _addNewSlide_Click: function(Te, D) {
                this.addSlide(!1), this.tourStopList.ensureAddVisible();
              },
              _insertNewSlide_Click: function(Te, D) {
                this.addSlide(!0);
              },
              addSlide: function(Te) {
                k.Undo.push(new k.UndoTourSlidelistChange(g.Language.getLocalizedText(426, "Add New Slide"), this._tour)), g.Cursor.set_current(g.Cursors.get_waitCursor());
                var D = "Current Screen", ke = Ee.Place.createCameraParams(D, l.globalRenderContext.viewCamera.copy(), 268435456, t.globalWWTControl.constellation, l.globalRenderContext.get_backgroundImageset().get_dataSetType(), l.globalRenderContext.get_solarSystemTrack());
                ke.set_studyImageset(l.globalRenderContext.get_foregroundImageset()), ke.set_backgroundImageset(l.globalRenderContext.get_backgroundImageset().get_stockImageSet());
                var Fe = b.TourStop.create(ke);
                Te ? this._tour.insertTourStop(Fe) : this._tour.addTourStop(Fe), this._tour.get_currentTourStop() != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this._tour.get_currentTourStop().layers = B.LayerManager._getVisibleLayerList(this._tour.get_currentTourStop().layers), this._captureThumbnail(Fe), this.tourStopList.selectedItem = this.tourStopList.findItem(Fe), this.tourStopList.refresh(), this.tourEditorUI.clearSelection(), g.Cursor.set_current(g.Cursors.get_defaultV()), xe.TimeLine.refreshUi();
              },
              _deleteMenu_Click: function(Te, D) {
                k.Undo.push(new k.UndoTourSlidelistChange(g.Language.getLocalizedText(534, "Delete Slide"), this._tour));
                for (var ke = s.ss.enumerate(s.ss.keys(this.tourStopList.selectedItems)); ke.moveNext(); ) {
                  var Fe = ke.current, He = this.tourStopList.selectedItems[Fe];
                  this._tour.removeTourStop(He);
                }
                s.ss.clearKeys(this.tourStopList.selectedItems), this.tourStopList.selectedItem = -1, this._tour.set_currentTourStop(null), this.musicTrack.target = null, this.voiceTrack.target = null, this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
              },
              _pasteMenu_Click: function(Te, D) {
                if (this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide") {
                  k.Undo.push(new k.UndoTourSlidelistChange(g.Language.getLocalizedText(535, "Paste Slide"), this._tour));
                  for (var ke = new DOMParser(), Fe = ke.parseFromString(this.tourEditorUI.clipboardData, "text/xml"), He = c.Util.selectSingleNode(Fe, "TourStops"), We = new s.ss.Stack(), Ke = s.ss.enumerate(He.childNodes); Ke.moveNext(); ) {
                    var $ = Ke.current;
                    if ($.nodeName === "TourStop") {
                      var De = b.TourStop._fromXml(this._tour, $);
                      De.set_id(g.Guid.newGuid().toString()), We.push(De);
                    }
                  }
                  s.ss.clearKeys(this.tourStopList.selectedItems);
                  for (var Re = this.tourStopList.selectedItem + We.count - 1; We.count > 0; ) {
                    var De = We.pop();
                    this._tour.insertTourStop(De), this.tourStopList.selectedItems[Re--] = De;
                  }
                  this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
                }
              },
              _copyMenu_Click: function(Te, D) {
                var ke = new u.XmlTextWriter();
                ke._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), ke._writeStartElement("TourStops");
                for (var Fe = s.ss.enumerate(s.ss.keys(this.tourStopList.selectedItems)); Fe.moveNext(); ) {
                  var He = Fe.current, We = this.tourStopList.selectedItems[He];
                  We._saveToXml(ke, !0);
                }
                ke._writeEndElement(), this.tourEditorUI.clipboardType = "WorldWideTelescope.Slide", this.tourEditorUI.clipboardData = ke.body;
              },
              _cutMenu_Click: function(Te, D) {
                k.Undo.push(new k.UndoTourSlidelistChange(g.Language.getLocalizedText(536, "Cut Slide"), this._tour)), this._copyMenu_Click(Te, D);
                for (var ke = s.ss.enumerate(s.ss.keys(this.tourStopList.selectedItems)); ke.moveNext(); ) {
                  var Fe = ke.current, He = this.tourStopList.selectedItems[Fe];
                  this._tour.removeTourStop(He);
                }
                s.ss.clearKeys(this.tourStopList.selectedItems), this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
              },
              pauseTour: function() {
                this.playing && (this.playing = !1), this.setPlayPauseMode();
              },
              preview_Click: function(Te, D) {
                this.playing = !this.playing, this.playing && this._tour.get_editMode() && this.get_tour().set_currentTourstopIndex(-1), this.setPlayPauseMode();
              },
              setPlayPauseMode: function() {
                this._tour.get_editMode() ? this.playing ? (this._player == null && (this._player = new Le.TourPlayer()), this._player.set_tour(this._tour), t.globalWWTControl.uiController = this._player, this._player.play(), this.tourStopList.showAddButton = !1) : (t.globalWWTControl.uiController = this.tourEditorUI, this._player != null && this._player.stop(!1), this._player = null, t.globalWWTControl.set__mover(null), this.tourStopList.showAddButton = this._tour.get_editMode()) : this.playing ? (this._player == null && (this._player = new Le.TourPlayer()), this._player.set_tour(this._tour), t.globalWWTControl.uiController = this._player, this._player.play(), this.tourStopList.showAddButton = !1) : (t.globalWWTControl.uiController = null, l.globalRenderContext.freezeView(), this._player != null && this._player.stop(!1), this._player = null, t.globalWWTControl.uiController = null, t.globalWWTControl.set__mover(null), this.tourStopList.showAddButton = this._tour.get_editMode()), this.tourStopList.refresh();
              },
              playerTimer_Tick: function(Te, D) {
                this.playing && this._player != null && (Le.TourPlayer.get_playing() ? this.tourStopList.selectedItem !== this._tour.get_currentTourstopIndex() && (this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex()) : (this.playing = !1, this.setPlayPauseMode()));
              },
              insertShapeCircle_Click: function(Te, D) {
                this.tourEditorUI.addShape("", 0);
              },
              insertShapeRectangle_Click: function(Te, D) {
                this.tourEditorUI.addShape("", 1);
              },
              insertShapeLine_Click: function(Te, D) {
                this.tourEditorUI.addShape("", 5);
              },
              insertDonut_Click: function(Te, D) {
                this.tourEditorUI.addShape("", 3);
              },
              _addArrow_Click: function(Te, D) {
                this.tourEditorUI.addShape("", 4);
              },
              insertVideo_Click: function(Te, D) {
              },
              insertAudio_Click: function(Te, D) {
              },
              insertHyperlink_Click: function(Te, D) {
              },
              colorPicker_Click: function(Te, D) {
              },
              tourEditTab_Leave: function(Te, D) {
              },
              editTourProperties_Click: function(Te, D) {
              },
              saveTour_Click: function(Te, D) {
                this.save(!1);
              },
              save: function(Te) {
                return !0;
              },
              addVideo_Click: function(Te, D) {
              },
              addPicture_Click: function(Te, D) {
              },
              addShape_Click: function(Te, D) {
              },
              _addOpenRectangle_Click: function(Te, D) {
                this.tourEditorUI.addShape("", 6);
              },
              _addStar_Click: function(Te, D) {
                this.tourEditorUI.addShape("", 2);
              },
              addText_Click: function(Te, D) {
              },
              preview_EnabledChanged: function(Te, D) {
                this.playing;
              },
              preview_MouseEnter: function(Te, D) {
              },
              preview_MouseLeave: function(Te, D) {
              },
              preview_MouseUp: function(Te, D) {
              },
              preview_MouseDown: function(Te, D) {
              },
              tourStopList_ItemHover: function(Te, D) {
              },
              refresh: function() {
              },
              undoStep: function() {
                k.Undo.peekAction() && (k.Undo.stepBack(), this.tourStopList.refresh(), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.showSlideStartPosition(this._tour.get_currentTourStop()), this.refresh(), xe.OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection));
              },
              redoStep: function() {
                k.Undo.peekRedoAction() && (k.Undo.stepForward(), this.tourStopList.refresh(), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.showSlideStartPosition(this._tour.get_currentTourStop()), this.refresh(), xe.OverlayList._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection));
              },
              tourStopList_ShowEndPosition: function(Te, D) {
                this._showEndSkyPosition_Click(this, new s.ss.EventArgs());
              },
              tourStopList_ShowStartPosition: function(Te, D) {
                this.showSlideStartPosition(this.get_tour().get_currentTourStop()), this.tourEditorUI.clearSelection();
              },
              tourStopList_KeyDown: function(Te, D) {
                if (D.ctrlKey)
                  switch (D.keyCode) {
                    case 67:
                      this._copyMenu_Click(null, new s.ss.EventArgs());
                      break;
                    case 86:
                      this._pasteMenu_Click(null, new s.ss.EventArgs());
                      break;
                    case 88:
                      this._cutMenu_Click(null, new s.ss.EventArgs());
                      break;
                    case 90:
                      k.Undo.peekAction() ? xe.TourEdit._undoStep() : Me.UiTools._beep();
                      break;
                    case 89:
                      k.Undo.peekRedoAction() ? xe.TourEdit._redoStep() : Me.UiTools._beep();
                      break;
                  }
                D.keyCode === 46 && this._deleteMenu_Click(null, new s.ss.EventArgs());
              },
              _ensureSelectedVisible: function() {
                this.tourStopList.ensureSelectedVisible();
              }
            };
            (0, a.registerType)("TourEditTab", [ze, Se, null]);
          }
        ),
        /***/
        "./esm/tours/tour_editor.js": (
          /*!**********************************!*\
            !*** ./esm/tours/tour_editor.js ***!
            \**********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              OverlayList: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              SoundEditor: () => (
                /* binding */
                Fe
              ),
              /* harmony export */
              TimeLine: () => (
                /* binding */
                $
              ),
              /* harmony export */
              TourEdit: () => (
                /* binding */
                D
              ),
              /* harmony export */
              TourEditor: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              TourStopList: () => (
                /* binding */
                We
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), o = n(
              /*! ../color.js */
              "./esm/color.js"
            ), c = n(
              /*! ../utilities/color_picker.js */
              "./esm/utilities/color_picker.js"
            ), _ = n(
              /*! ../utilities/context_menu_strip.js */
              "./esm/utilities/context_menu_strip.js"
            ), u = n(
              /*! ../utilities/simple_input.js */
              "./esm/utilities/simple_input.js"
            ), y = n(
              /*! ../utilities/xml_text_writer.js */
              "./esm/utilities/xml_text_writer.js"
            ), g = n(
              /*! ../interfaces.js */
              "./esm/interfaces.js"
            ), Ee = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), Ve = n(
              /*! ../settings.js */
              "./esm/settings.js"
            ), Me = n(
              /*! ../ui_tools.js */
              "./esm/ui_tools.js"
            ), B = n(
              /*! ../util.js */
              "./esm/util.js"
            ), Pe = n(
              /*! ./overlay.js */
              "./esm/tours/overlay.js"
            ), k = n(
              /*! ./selection.js */
              "./esm/tours/selection.js"
            ), b = n(
              /*! ./undo.js */
              "./esm/tours/undo.js"
            ), Le = n(
              /*! ./tour_stop.js */
              "./esm/tours/tour_stop.js"
            );
            function xe() {
              this.selection = new k.Selection(), this._contextMenu = new _.ContextMenuStrip(), this._tour = null, this._mouseDown = !1, this._selectionAction = 11, this._needUndoFrame = !1, this._contextPoint = new t.Vector2d(), this._dragCopying = !1, this._brokeThreshold = !1, this.nextSlideCallback = null, this.clipboardData = "", this.clipboardType = "", this.editTextCallback = null, this._defaultColor = o.Colors.get_white();
            }
            xe.capturing = !1, xe.currentEditor = null;
            var ze = {
              render: function(Re) {
                if (Re.setupMatricesOverlays(), !(this._tour == null || this._tour.get_currentTourStop() == null)) {
                  for (var Ie = s.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); Ie.moveNext(); ) {
                    var O = Ie.current;
                    O.get_animate() && this.get_tour().get_currentTourStop().get_keyFramed() ? O.set_tweenFactor(this._tour.get_currentTourStop().get_tweenPosition()) : this.get_tour().get_currentTourStop().get_keyFramed() || O.set_tweenFactor(this._tour.get_currentTourStop().get_tweenPosition() < 0.5 ? 0 : 1), O.draw3D(Re, !0);
                  }
                  this.selection.draw3D(Re, 1), xe.currentEditor != null && xe.currentEditor.render(Re), Ve.Settings.tourSettings = null;
                }
              },
              get_tour: function() {
                return this._tour;
              },
              set_tour: function(Re) {
                return this._tour = Re, Re;
              },
              close: function() {
                this._tour != null && (this._tour = null, this.set_focus(null));
              },
              clearSelection: function() {
                this.selection.clearSelection(), Se._updateOverlayListSelection(this.selection), this.set_focus(null);
              },
              get_focus: function() {
                return this.selection.get_focus();
              },
              set_focus: function(Re) {
                return this.selection.set_focus(Re), Re;
              },
              pointToView: function(Re) {
                var Ie = Ee.globalRenderContext.height, O = Ee.globalRenderContext.width, Ue = Ee.globalRenderContext.width / Ee.globalRenderContext.height * 1116, $e = Re.x / O * Ue - (Ue - 1920) / 2, Ze = Re.y / Ie * 1116;
                return t.Vector2d.create($e, Ze);
              },
              mouseDown: function(Re, Ie) {
                this._brokeThreshold = !1, this._needUndoFrame = !0;
                var O = this.pointToView(t.Vector2d.create(Ie.offsetX, Ie.offsetY));
                if (this._tour == null || this._tour.get_currentTourStop() == null)
                  return this._needUndoFrame = !1, !1;
                if (xe.currentEditor != null && xe.currentEditor.mouseDown(Re, Ie))
                  return !0;
                if (this.get_focus() != null) {
                  if (this.selection.get_multiSelect())
                    for (var Ue = s.ss.enumerate(this.selection.selectionSet); Ue.moveNext(); ) {
                      var $e = Ue.current;
                      if ($e.hitTest(O))
                        return this._selectionAction = 9, this._mouseDown = !0, this._pointDown = O, this.set_focus($e), Ie.ctrlKey && (this._dragCopying = !0), !0;
                    }
                  else if (this.get_focus().hitTest(O))
                    return this._selectionAction = 9, this._mouseDown = !0, this._pointDown = O, Ie.ctrlKey && (this._dragCopying = !0), !0;
                  var Ze = this.selection.hitTest(O);
                  if (Ze !== 11)
                    return this._selectionAction = Ze, this._mouseDown = !0, Ze === 8 ? this._pointDown = O : this._pointDown = this.selection.pointToSelectionSpace(O), !0;
                }
                for (var Qe = this._tour.get_currentTourStop().get_overlays().length - 1; Qe >= 0; Qe--)
                  if (this._tour.get_currentTourStop().get_overlays()[Qe].hitTest(O))
                    return this._selectionAction = 9, this.set_focus(this._tour.get_currentTourStop().get_overlays()[Qe]), Ie.ctrlKey || Ie.shiftKey ? this.selection.addSelection(this.get_focus()) : this.selection.setSelection(this.get_focus()), Se._updateOverlayListSelection(this.selection), this._mouseDown = !0, this._pointDown = O, !0;
                return this.set_focus(null), this.clearSelection(), this._needUndoFrame = !1, !1;
              },
              mouseUp: function(Re, Ie) {
                return this._brokeThreshold = !1, xe.currentEditor != null && xe.currentEditor.mouseUp(Re, Ie) ? !0 : (this._contextPoint = t.Vector2d.create(Ie.offsetX, Ie.offsetY), this._mouseDown ? (this._mouseDown = !1, Ie.button === 2 && this.get_focus() != null && this.showSelectionContextMenu(t.Vector2d.create(Ie.offsetX, Ie.offsetY)), !0) : Ie.button === 2 ? (this.get_focus() == null && this._showNoSelectionContextMenu(t.Vector2d.create(Ie.offsetX, Ie.offsetY)), !0) : !1);
              },
              mouseMove: function(Re, Ie) {
                if (xe.currentEditor != null && xe.currentEditor.mouseMove(Re, Ie))
                  return !0;
                var O = this.pointToView(t.Vector2d.create(Ie.offsetX, Ie.offsetY));
                if (this._mouseDown && this.get_focus() != null) {
                  var Ue = null, $e = B.Language.getLocalizedText(502, "Edit");
                  this._needUndoFrame && (Ue = new Le.UndoTourStopChange(B.Language.getLocalizedText(502, "Edit"), this._tour));
                  var Ze, Qe;
                  if (this._selectionAction !== 9 && this._selectionAction !== 8) {
                    var Ae = this.selection.pointToSelectionSpace(O);
                    Ze = Ae.x - this._pointDown.x, Qe = Ae.y - this._pointDown.y, this._pointDown = Ae;
                  } else {
                    if (Ze = O.x - this._pointDown.x, Qe = O.y - this._pointDown.y, this._selectionAction === 9 && !this._brokeThreshold)
                      if (Math.abs(Ze) > 3 || Math.abs(Qe) > 3)
                        this._brokeThreshold = !0;
                      else
                        return !0;
                    this._pointDown = O;
                  }
                  if (this._dragCopying)
                    if (this.selection.get_multiSelect()) {
                      var Ne = this.selection.selectionSet;
                      this.clearSelection();
                      for (var Be = s.ss.enumerate(Ne); Be.moveNext(); ) {
                        var Ge = Be.current, Ye = this.addOverlay(Ge);
                        Ye.set_x(Ge.get_x()), Ye.set_y(Ge.get_y()), this.set_focus(Ye), this.selection.addSelection(this.get_focus());
                      }
                      Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection), this._dragCopying = !1;
                    } else {
                      var Ye = this.addOverlay(this.get_focus());
                      Ye.set_x(this.get_focus().get_x()), Ye.set_y(this.get_focus().get_y()), this.set_focus(Ye), this.selection.setSelection(this.get_focus()), Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection), this._dragCopying = !1;
                    }
                  var je = this.get_focus().get_width() / this.get_focus().get_height(), ht = t.Vector2d.create(this.get_focus().get_x(), this.get_focus().get_y());
                  if (Ie.ctrlKey)
                    switch ($e = B.Language.getLocalizedText(537, "Resize"), this._selectionAction) {
                      case 0:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - Ze * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - Ze / je * 2));
                        break;
                      case 1:
                        this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - Qe * 2));
                        break;
                      case 2:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + Ze * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + Ze / je * 2));
                        break;
                      case 3:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + Ze * 2));
                        break;
                      case 4:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + Ze * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + Ze / je * 2));
                        break;
                      case 5:
                        this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + Qe * 2));
                        break;
                      case 6:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - Ze * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - Ze / je * 2));
                        break;
                      case 7:
                        this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - Ze * 2));
                        break;
                      case 8:
                        $e = B.Language.getLocalizedText(538, "Rotate"), this.get_focus().set_rotationAngle(this.get_focus().get_rotationAngle() + Ze / 10);
                        break;
                      case 9:
                        $e = B.Language.getLocalizedText(539, "Drag Copy"), ht.x += Ze, ht.y += Qe;
                        break;
                    }
                  else
                    switch (this._selectionAction !== 8 && this._selectionAction !== 9 && (Ze > this.get_focus().get_width() - 2 && (Ze = 0), Qe > this.get_focus().get_height() - 2 && (Qe = 0)), $e = B.Language.getLocalizedText(537, "Resize"), this._selectionAction) {
                      case 0:
                        this.get_focus().set_width(this.get_focus().get_width() - Ze), this.get_focus().set_height(this.get_focus().get_height() - Ze / je), ht.x += Ze / 2, ht.y += Ze / je / 2;
                        break;
                      case 1:
                        this.get_focus().set_height(this.get_focus().get_height() - Qe), ht.y += Qe / 2;
                        break;
                      case 2:
                        this.get_focus().set_width(this.get_focus().get_width() + Ze), this.get_focus().set_height(this.get_focus().get_height() + Ze / je), ht.x += Ze / 2, ht.y -= Ze / je / 2;
                        break;
                      case 3:
                        this.get_focus().set_width(this.get_focus().get_width() + Ze), ht.x += Ze / 2;
                        break;
                      case 4:
                        this.get_focus().set_width(this.get_focus().get_width() + Ze), this.get_focus().set_height(this.get_focus().get_height() + Ze / je), ht.x += Ze / 2, ht.y += Ze / je / 2;
                        break;
                      case 5:
                        this.get_focus().set_height(this.get_focus().get_height() + Qe), ht.y += Qe / 2;
                        break;
                      case 6:
                        this.get_focus().set_width(this.get_focus().get_width() - Ze), this.get_focus().set_height(this.get_focus().get_height() - Ze / je), ht.x += Ze / 2, ht.y -= Ze / je / 2;
                        break;
                      case 7:
                        this.get_focus().set_width(this.get_focus().get_width() - Ze), ht.x += Ze / 2;
                        break;
                      case 8:
                        $e = B.Language.getLocalizedText(538, "Rotate"), this.get_focus().set_rotationAngle(this.get_focus().get_rotationAngle() + Ze);
                        break;
                      case 9:
                        $e = B.Language.getLocalizedText(540, "Move"), ht.x += Ze, ht.y += Qe;
                        break;
                    }
                  if (this._selectionAction !== 9 && this._selectionAction !== 8 && (ht = this.selection.pointToScreenSpace(ht)), this.selection.get_multiSelect())
                    for (var qe = s.ss.enumerate(this.selection.selectionSet); qe.moveNext(); ) {
                      var Ge = qe.current;
                      Ge.set_x(Ge.get_x() + Ze), Ge.set_y(Ge.get_y() + Qe);
                    }
                  else
                    this.get_focus().set_x(ht.x), this.get_focus().set_y(ht.y);
                  this._needUndoFrame && (this._needUndoFrame = !1, Ue.set_actionText($e), b.Undo.push(Ue));
                } else if (this.get_focus() != null) {
                  if (this.get_focus().hitTest(O))
                    return B.Cursor.set_current(B.Cursors.get_sizeAll()), !1;
                  var lt = this.selection.hitTest(O);
                  if (lt === 11)
                    return !1;
                  switch (lt) {
                    case 0:
                      B.Cursor.set_current(B.Cursors.get_sizeNWSE());
                      break;
                    case 1:
                      B.Cursor.set_current(B.Cursors.get_sizeNS());
                      break;
                    case 2:
                      B.Cursor.set_current(B.Cursors.get_sizeNESW());
                      break;
                    case 3:
                      B.Cursor.set_current(B.Cursors.get_sizeWE());
                      break;
                    case 4:
                      B.Cursor.set_current(B.Cursors.get_sizeNWSE());
                      break;
                    case 5:
                      B.Cursor.set_current(B.Cursors.get_sizeNS());
                      break;
                    case 6:
                      B.Cursor.set_current(B.Cursors.get_sizeNESW());
                      break;
                    case 7:
                      B.Cursor.set_current(B.Cursors.get_sizeWE());
                      break;
                    case 8:
                      B.Cursor.set_current(B.Cursors.get_sizeWE());
                      break;
                  }
                }
                return !1;
              },
              _showNoSelectionContextMenu: function(Re) {
                if (this._contextMenu != null && this._contextMenu._dispose(), this._tour.get_currentTourStop() != null) {
                  this._contextMenu = new _.ContextMenuStrip();
                  var Ie = _.ToolStripMenuItem.create(B.Language.getLocalizedText(425, "Paste"));
                  Ie.enabled = this.clipboardType === "WorldWideTelescope.Overlay", Ie.click = s.ss.bind("_pasteMenu_Click", this), this._contextMenu.items.push(Ie), this._contextMenu._show(Re);
                }
              },
              _addOpenRectangle_Click: function(Re, Ie) {
                this.addShape("", 6);
              },
              _addStar_Click: function(Re, Ie) {
                this.addShape("", 2);
              },
              _insertShapeCircle_Click: function(Re, Ie) {
                this.addShape("", 0);
              },
              _insertShapeRectangle_Click: function(Re, Ie) {
                this.addShape("", 1);
              },
              _insertShapeLine_Click: function(Re, Ie) {
                this.addShape("", 5);
              },
              _insertDonut_Click: function(Re, Ie) {
                this.addShape("", 3);
              },
              _addArrow_Click: function(Re, Ie) {
                this.addShape("", 4);
              },
              showSelectionContextMenu: function(Re) {
                if (this.get_focus() != null) {
                  var Ie = this.selection.get_multiSelect();
                  this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new _.ContextMenuStrip();
                  var O = _.ToolStripMenuItem.create(B.Language.getLocalizedText(427, "Cut")), Ue = _.ToolStripMenuItem.create(B.Language.getLocalizedText(428, "Copy")), $e = _.ToolStripMenuItem.create(B.Language.getLocalizedText(425, "Paste")), Ze = _.ToolStripMenuItem.create(B.Language.getLocalizedText(167, "Delete")), Qe = new _.ToolStripSeparator(), Ae = new _.ToolStripSeparator(), Ne = new _.ToolStripSeparator(), Be = _.ToolStripMenuItem.create(B.Language.getLocalizedText(452, "Bring to Front")), Ge = _.ToolStripMenuItem.create(B.Language.getLocalizedText(453, "Send to Back")), Ye = _.ToolStripMenuItem.create(B.Language.getLocalizedText(454, "Bring Forward")), je = _.ToolStripMenuItem.create(B.Language.getLocalizedText(455, "Send Backward")), ht = _.ToolStripMenuItem.create(B.Language.getLocalizedText(20, "Properties")), qe = _.ToolStripMenuItem.create(B.Language.getLocalizedText(502, "Edit")), lt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(587, "Hyperlink")), ft = this.get_focus().get_linkID();
                  switch (this.get_focus().get_linkID()) {
                    case "":
                    case null:
                      ft = " (" + B.Language.getLocalizedText(609, "No Link") + ")";
                      break;
                    case "Next":
                      ft = " (" + B.Language.getLocalizedText(610, "Next Slide") + ")";
                      break;
                    case "Return":
                      ft = " (" + B.Language.getLocalizedText(602, "Return to Caller") + ")";
                      break;
                    default:
                      var _t = this.get_tour().getTourStopIndexByID(this.get_focus().get_linkID());
                      _t > -1 && (s.ss.emptyString(this._tour.get_tourStops()[_t].get_description()) ? ft = s.ss.format(" (" + B.Language.getLocalizedText(1340, "Slide") + " {0})", _t) : ft = " (" + this._tour.get_tourStops()[_t].get_description() + ")");
                      break;
                  }
                  var St = _.ToolStripMenuItem.create(B.Language.getLocalizedText(588, "Animate")), yt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(589, "Link to Slide") + ft), Ct = _.ToolStripMenuItem.create(B.Language.getLocalizedText(458, "Color/Opacity")), Lt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(630, "Flipbook Properties")), Vt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1029, "Animation Tween Type")), Tt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1030, "Linear")), xt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1031, "Ease In/Out")), Ot = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1032, "Ease In")), Pt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1033, "Ease Out")), kt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1034, "Exponential")), zt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1035, "Slide Default")), Bt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(790, "Align")), gt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1333, "Top")), rt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1334, "Bottom")), nt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1335, "Left")), bt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1336, "Right")), Et = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1337, "Horizontal")), Rt = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1338, "Vertical")), $t = _.ToolStripMenuItem.create(B.Language.getLocalizedText(1339, "Centered"));
                  switch (Bt.dropDownItems.push(gt), Bt.dropDownItems.push(rt), Bt.dropDownItems.push(nt), Bt.dropDownItems.push(bt), Bt.dropDownItems.push(Et), Bt.dropDownItems.push(Rt), Bt.dropDownItems.push($t), Tt.tag = 0, xt.tag = 3, Ot.tag = 1, Pt.tag = 2, kt.tag = 4, zt.tag = 5, Tt.click = s.ss.bind("_interpolation_Click", this), xt.click = s.ss.bind("_interpolation_Click", this), Ot.click = s.ss.bind("_interpolation_Click", this), Pt.click = s.ss.bind("_interpolation_Click", this), kt.click = s.ss.bind("_interpolation_Click", this), zt.click = s.ss.bind("_interpolation_Click", this), this.get_focus().get_interpolationType()) {
                    case 0:
                      Tt.checked = !0;
                      break;
                    case 1:
                      Ot.checked = !0;
                      break;
                    case 2:
                      Pt.checked = !0;
                      break;
                    case 3:
                      xt.checked = !0;
                      break;
                    case 4:
                      kt.checked = !0;
                      break;
                    case 5:
                      zt.checked = !0;
                      break;
                  }
                  Vt.dropDownItems.push(zt), Vt.dropDownItems.push(Tt), Vt.dropDownItems.push(xt), Vt.dropDownItems.push(Ot), Vt.dropDownItems.push(Pt), Vt.dropDownItems.push(kt), O.click = s.ss.bind("_cutMenu_Click", this), Ue.click = s.ss.bind("_copyMenu_Click", this), Ze.click = s.ss.bind("_deleteMenu_Click", this), Be.click = s.ss.bind("_bringToFront_Click", this), Ge.click = s.ss.bind("_sendToBack_Click", this), je.click = s.ss.bind("_sendBackward_Click", this), Ye.click = s.ss.bind("_bringForward_Click", this), ht.click = s.ss.bind("_properties_Click", this), qe.click = s.ss.bind("_editText_Click", this), lt.click = s.ss.bind("_url_Click", this), Ct.click = s.ss.bind("_pickColor_Click", this), $e.click = s.ss.bind("_pasteMenu_Click", this), St.click = s.ss.bind("_animateMenu_Click", this), Lt.click = s.ss.bind("_flipbookProperties_Click", this), yt.click = s.ss.bind("_linkID_Click", this), gt.click = s.ss.bind("_alignTop_Click", this), rt.click = s.ss.bind("_alignBottom_Click", this), nt.click = s.ss.bind("_alignLeft_Click", this), bt.click = s.ss.bind("_alignRight_Click", this), Et.click = s.ss.bind("_alignHorizon_Click", this), Rt.click = s.ss.bind("_alignVertical_Click", this), $t.click = s.ss.bind("_alignCenter_Click", this), this._contextMenu.items.push(O), this._contextMenu.items.push(Ue), this._contextMenu.items.push($e), this._contextMenu.items.push(Ze), this._contextMenu.items.push(Qe), this._contextMenu.items.push(Be), this._contextMenu.items.push(Ge), this._contextMenu.items.push(Ye), this._contextMenu.items.push(je), this._contextMenu.items.push(Bt), this._contextMenu.items.push(Ae), $e.enabled = !1, this._contextMenu.items.push(Ct), this._contextMenu.items.push(lt), this._contextMenu.items.push(yt), this._contextMenu.items.push(St), this._contextMenu.items.push(Ne), this._contextMenu.items.push(Lt), St.checked = this.get_focus().get_animate(), this._contextMenu.items.push(Vt), Vt.enabled = this.get_focus().get_animate(), Lt.visible = s.ss.canCast(this.get_focus(), Pe.FlipbookOverlay), Ne.visible = s.ss.canCast(this.get_focus(), Pe.FlipbookOverlay), Ie ? (lt.visible = !1, yt.visible = !1, ht.visible = !1, Lt.visible = !1, Ye.visible = !1, je.visible = !1) : Bt.visible = !1, this._contextMenu.items.push(ht), this.get_focus() != null && s.ss.typeOf(this.get_focus()) === Pe.TextOverlay && this._contextMenu.items.push(qe), this._contextMenu._show(Re);
                }
              },
              _editText_Click: function(Re, Ie) {
                this.get_focus() != null && s.ss.typeOf(this.get_focus()) === Pe.TextOverlay && this._editText();
              },
              _alignVertical_Click: function(Re, Ie) {
                if (this.get_focus() != null) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(1036, "Vertical Align"), this._tour));
                  for (var O = this.get_focus().get_x(), Ue = s.ss.enumerate(this.selection.selectionSet); Ue.moveNext(); ) {
                    var $e = Ue.current;
                    $e.set_x(O);
                  }
                }
              },
              _alignHorizon_Click: function(Re, Ie) {
                if (this.get_focus() != null) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(1037, "Horizontal Align"), this._tour));
                  for (var O = this.get_focus().get_y(), Ue = s.ss.enumerate(this.selection.selectionSet); Ue.moveNext(); ) {
                    var $e = Ue.current;
                    $e.set_y(O);
                  }
                }
              },
              _alignCenter_Click: function(Re, Ie) {
                if (this.get_focus() != null) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(1038, "Align Centers"), this._tour));
                  for (var O = this.get_focus().get_y(), Ue = this.get_focus().get_x(), $e = s.ss.enumerate(this.selection.selectionSet); $e.moveNext(); ) {
                    var Ze = $e.current;
                    Ze.set_y(O), Ze.set_x(Ue);
                  }
                }
              },
              _alignRight_Click: function(Re, Ie) {
                if (this.get_focus() != null) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(1040, "Align Right"), this._tour));
                  for (var O = this.get_focus().get_x() + this.get_focus().get_width() / 2, Ue = s.ss.enumerate(this.selection.selectionSet); Ue.moveNext(); ) {
                    var $e = Ue.current;
                    $e.set_x(O - $e.get_width() / 2);
                  }
                }
              },
              _alignLeft_Click: function(Re, Ie) {
                if (this.get_focus() != null) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(1041, "Align Left"), this._tour));
                  for (var O = this.get_focus().get_x() - this.get_focus().get_width() / 2, Ue = s.ss.enumerate(this.selection.selectionSet); Ue.moveNext(); ) {
                    var $e = Ue.current;
                    $e.set_x(O + $e.get_width() / 2);
                  }
                }
              },
              _alignBottom_Click: function(Re, Ie) {
                if (this.get_focus() != null) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(1042, "Align Bottoms"), this._tour));
                  for (var O = this.get_focus().get_y() + this.get_focus().get_height() / 2, Ue = s.ss.enumerate(this.selection.selectionSet); Ue.moveNext(); ) {
                    var $e = Ue.current;
                    $e.set_y(O - $e.get_height() / 2);
                  }
                }
              },
              _alignTop_Click: function(Re, Ie) {
                if (this.get_focus() != null) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(1039, "Align Tops"), this._tour));
                  for (var O = this.get_focus().get_y() - this.get_focus().get_height() / 2, Ue = s.ss.enumerate(this.selection.selectionSet); Ue.moveNext(); ) {
                    var $e = Ue.current;
                    $e.set_y(O + $e.get_height() / 2);
                  }
                }
              },
              _interpolation_Click: function(Re, Ie) {
                var O = Re;
                if (this.get_focus() != null)
                  for (var Ue = s.ss.enumerate(this.selection.selectionSet); Ue.moveNext(); ) {
                    var $e = Ue.current;
                    $e.set_interpolationType(O.tag);
                  }
              },
              _linkSlideChosen: function() {
                this.selectDialog.get_OK() && this.get_focus().set_linkID(this.selectDialog.get_id());
              },
              _linkID_Click: function(Re, Ie) {
                this.selectDialog = new B.SelectLink(this.get_focus().get_linkID()), this.nextSlideCallback(this.selectDialog, s.ss.bind("_linkSlideChosen", this));
              },
              _flipbookProperties_Click: function(Re, Ie) {
              },
              _animateMenu_Click: function(Re, Ie) {
                if (this.get_focus() != null) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(588, "Animate"), this._tour));
                  for (var O = !this.get_focus().get_animate(), Ue = s.ss.enumerate(this.selection.selectionSet); Ue.moveNext(); ) {
                    var $e = Ue.current;
                    $e.set_animate(O);
                  }
                }
              },
              _url_Click: function(Re, Ie) {
                var O = this;
                if (this.get_focus() != null) {
                  var Ue = new u.SimpleInput(B.Language.getLocalizedText(541, "Edit Hyperlink"), B.Language.getLocalizedText(542, "Url"), this.get_focus().get_url(), 2048);
                  Ue.show(B.Cursor.get_position(), function() {
                    b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(541, "Edit Hyperlink"), O._tour)), O.get_focus().set_url(Ue.text);
                  });
                }
              },
              _pickColor_Click: function(Re, Ie) {
                var O = this, Ue = new c.ColorPicker();
                Ue.color = this.get_focus().get_color(), Ue.callBack = function() {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(543, "Edit Color"), O._tour));
                  for (var $e = s.ss.enumerate(O.selection.selectionSet); $e.moveNext(); ) {
                    var Ze = $e.current;
                    Ze.set_color(Ue.color);
                  }
                }, Ue.show(Ie);
              },
              _volume_Click: function(Re, Ie) {
                var O = new B.PopupVolume();
                O.volume = this.get_focus().get_volume(), O.showDialog(), this.get_focus().set_volume(O.volume);
              },
              _deleteMenu_Click: function(Re, Ie) {
                if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(167, "Delete"), this._tour));
                  for (var O = s.ss.enumerate(this.selection.selectionSet); O.moveNext(); ) {
                    var Ue = O.current;
                    this._tour.get_currentTourStop().removeOverlay(Ue);
                  }
                  this.set_focus(null), this.clearSelection(), Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                }
              },
              _properties_Click: function(Re, Ie) {
                this._tour == null || this._tour.get_currentTourStop() == null, b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(549, "Properties Edit"), this._tour));
                var O = new B.OverlayProperties();
                O.overlay = this.get_focus(), O.showDialog(), Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
              },
              _bringForward_Click: function(Re, Ie) {
                if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(454, "Bring Forward"), this._tour));
                  for (var O = s.ss.enumerate(this._getSortedSelection(!1)); O.moveNext(); ) {
                    var Ue = O.current;
                    this._tour.get_currentTourStop().bringForward(Ue);
                  }
                  Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                }
              },
              _sendBackward_Click: function(Re, Ie) {
                if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(455, "Send Backward"), this._tour));
                  for (var O = s.ss.enumerate(this._getSortedSelection(!0)); O.moveNext(); ) {
                    var Ue = O.current;
                    this._tour.get_currentTourStop().sendBackward(Ue);
                  }
                  Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                }
              },
              _sendToBack_Click: function(Re, Ie) {
                if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(453, "Send to Back"), this._tour));
                  for (var O = s.ss.enumerate(this._getSortedSelection(!0)); O.moveNext(); ) {
                    var Ue = O.current;
                    this._tour.get_currentTourStop().sendToBack(Ue);
                  }
                  Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                }
              },
              _bringToFront_Click: function(Re, Ie) {
                if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(452, "Bring to Front"), this._tour));
                  for (var O = s.ss.enumerate(this._getSortedSelection(!1)); O.moveNext(); ) {
                    var Ue = O.current;
                    this._tour.get_currentTourStop().bringToFront(Ue);
                  }
                  Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                }
              },
              _getSortedSelection: function(Re) {
                for (var Ie = [], O = s.ss.enumerate(this.selection.selectionSet); O.moveNext(); ) {
                  var Ue = O.current;
                  Ie.push(Ue);
                }
                return Re ? Ie.sort(function($e, Ze) {
                  return -l.Util.compare($e.get_zOrder(), Ze.get_zOrder());
                }) : Ie.sort(function($e, Ze) {
                  return l.Util.compare($e.get_zOrder(), Ze.get_zOrder());
                }), Ie;
              },
              _copyMenu_Click: function(Re, Ie) {
                if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                  var O = new y.XmlTextWriter();
                  O._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), O._writeStartElement("Overlays");
                  for (var Ue = s.ss.enumerate(this.selection.selectionSet); Ue.moveNext(); ) {
                    var $e = Ue.current;
                    $e.saveToXml(O, !0);
                  }
                  O._writeEndElement(), this.clipboardData = O.body, this.clipboardType = "WorldWideTelescope.Overlay";
                }
              },
              _cutMenu_Click: function(Re, Ie) {
                if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
                  b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(427, "Cut"), this._tour)), this._copyMenu_Click(Re, Ie);
                  for (var O = s.ss.enumerate(this.selection.selectionSet); O.moveNext(); ) {
                    var Ue = O.current;
                    this._tour.get_currentTourStop().removeOverlay(Ue);
                  }
                  this.set_focus(null), this.clearSelection(), Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                }
              },
              _pasteMenu_Click: function(Re, Ie) {
                if (b.Undo.push(new b.UndoTourSlidelistChange(B.Language.getLocalizedText(544, "Paste Object"), this._tour)), this.clipboardType === "WorldWideTelescope.Overlay") {
                  var O = new DOMParser(), Ue = O.parseFromString(this.clipboardData, "text/xml");
                  this.clearSelection();
                  for (var $e = l.Util.selectSingleNode(Ue, "Overlays"), Ze = s.ss.enumerate($e.childNodes); Ze.moveNext(); ) {
                    var Qe = Ze.current;
                    if (Qe.nodeName === "Overlay") {
                      for (var Ae = Pe.Overlay._fromXml(this._tour.get_currentTourStop(), Qe), Ne = !1, Be = 0, Ge = 0, Ye = s.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); Ye.moveNext(); ) {
                        var je = Ye.current;
                        je.id === Ae.id && s.ss.typeOf(je) === s.ss.typeOf(Ae) && (Ne = !0, (Ge < je.get_y() || Be < je.get_x()) && (Be = je.get_x(), Ge = je.get_y()));
                      }
                      Ne && (Ae.set_x(Be + 20), Ae.set_y(Ge + 20)), this._tour.get_currentTourStop().addOverlay(Ae), this.set_focus(Ae), this.selection.addSelection(this.get_focus()), Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
                    }
                  }
                }
              },
              mouseClick: function(Re, Ie) {
                return !!(xe.currentEditor != null && xe.currentEditor.mouseClick(Re, Ie));
              },
              click: function(Re, Ie) {
                return !!(xe.currentEditor != null && xe.currentEditor.click(Re, Ie));
              },
              mouseDoubleClick: function(Re, Ie) {
                return xe.currentEditor != null && xe.currentEditor.mouseDoubleClick(Re, Ie) || this.get_focus() != null && s.ss.typeOf(this.get_focus()) === Pe.TextOverlay && this._editText(), !0;
              },
              _doneEditing: function() {
                b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(545, "Text Edit"), this._tour)), this.get_focus().set_width(0), this.get_focus().set_height(0), this.get_focus().set_color(this.get_focus().textObject.foregroundColor), this.get_focus().cleanUp();
              },
              _editText: function() {
                var Re = this.get_focus().textObject;
                this.editTextCallback(Re, s.ss.bind("_doneEditing", this));
              },
              keyDown: function(Re, Ie) {
                if (xe.currentEditor != null && xe.currentEditor.keyDown(Re, Ie))
                  return !0;
                var O = 1;
                switch (Ie.ctrlKey && (O = 10), Ie.keyCode) {
                  case 65:
                    Ie.ctrlKey && (this.clearSelection(), this.selection.addSelectionRange(this._tour.get_currentTourStop().get_overlays()), Se._updateOverlayListSelection(this.selection), this._tour.get_currentTourStop().get_overlays().length > 0 && this.set_focus(this._tour.get_currentTourStop().get_overlays()[0]));
                    break;
                  case 90:
                    Ie.ctrlKey && (b.Undo.peekAction() ? D._undoStep() : Me.UiTools._beep());
                    break;
                  case 89:
                    Ie.ctrlKey && (b.Undo.peekRedoAction() ? D._redoStep() : Me.UiTools._beep());
                    break;
                  case 67:
                    Ie.ctrlKey && this._copyMenu_Click(this, new s.ss.EventArgs());
                    break;
                  case 86:
                    Ie.ctrlKey && this._pasteMenu_Click(this, new s.ss.EventArgs());
                    break;
                  case 88:
                    Ie.ctrlKey && this._cutMenu_Click(this, new s.ss.EventArgs());
                    break;
                  case 46:
                    return this._deleteMenu_Click(null, null), !0;
                  case 9:
                    return Ie.shiftKey ? this._selectLast() : this._selectNext(), !0;
                  case 37:
                    if (this.get_focus() != null) {
                      for (var Ue = s.ss.enumerate(this.selection.selectionSet); Ue.moveNext(); ) {
                        var $e = Ue.current;
                        if (Ie.shiftKey)
                          if (Ie.altKey)
                            $e.get_width() > O && (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(537, "Resize"), this._tour)), $e.set_width($e.get_width() - O));
                          else {
                            var Ze = $e.get_width() / $e.get_height();
                            $e.get_width() > O && $e.get_height() > O * Ze && (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(537, "Resize"), this._tour)), $e.set_width($e.get_width() - O), $e.set_height($e.get_height() - O * Ze));
                          }
                        else
                          Ie.altKey ? (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(538, "Rotate"), this._tour)), $e.set_rotationAngle($e.get_rotationAngle() - O)) : (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(540, "Move"), this._tour)), $e.set_x($e.get_x() - O));
                      }
                      return !0;
                    }
                    break;
                  case 39:
                    if (this.get_focus() != null) {
                      for (var Qe = s.ss.enumerate(this.selection.selectionSet); Qe.moveNext(); ) {
                        var $e = Qe.current;
                        if (Ie.shiftKey)
                          if (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(537, "Resize"), this._tour)), Ie.altKey)
                            $e.set_width($e.get_width() + O);
                          else {
                            var Ze = $e.get_width() / $e.get_height();
                            $e.set_width($e.get_width() + O), $e.set_height($e.get_height() + O * Ze);
                          }
                        else
                          Ie.altKey ? (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(538, "Rotate"), this._tour)), $e.set_rotationAngle($e.get_rotationAngle() + O)) : (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(540, "Move"), this._tour)), $e.set_x($e.get_x() + O));
                      }
                      return !0;
                    }
                    break;
                  case 38:
                    if (this.get_focus() != null) {
                      for (var Ae = s.ss.enumerate(this.selection.selectionSet); Ae.moveNext(); ) {
                        var $e = Ae.current;
                        if (Ie.shiftKey)
                          if (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(537, "Resize"), this._tour)), Ie.altKey)
                            $e.set_height($e.get_height() + O);
                          else {
                            var Ze = $e.get_width() / $e.get_height();
                            $e.set_width($e.get_width() + O), $e.set_height($e.get_height() + O * Ze);
                          }
                        else
                          Ie.altKey || (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(540, "Move"), this._tour)), $e.set_y($e.get_y() - O));
                      }
                      return !0;
                    }
                    break;
                  case 40:
                    if (this.get_focus() != null) {
                      for (var Ne = s.ss.enumerate(this.selection.selectionSet); Ne.moveNext(); ) {
                        var $e = Ne.current;
                        if (Ie.shiftKey)
                          if (Ie.altKey)
                            $e.get_height() > O && (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(537, "Resize"), this._tour)), $e.set_height($e.get_height() - O));
                          else {
                            var Ze = $e.get_width() / $e.get_height();
                            $e.get_width() > O && $e.get_height() > O * Ze && (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(537, "Resize"), this._tour)), $e.set_width($e.get_width() - O), $e.set_height($e.get_height() - O * Ze));
                          }
                        else
                          Ie.altKey || (b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(540, "Move"), this._tour)), $e.set_y($e.get_y() + O));
                      }
                      return !0;
                    }
                    break;
                  case 34:
                    if (Ie.altKey)
                      return this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && (this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1, D._selectCurrent(), D._ensureSelectedVisible()), !0;
                    break;
                  case 33:
                    if (Ie.altKey)
                      return this._tour.get_currentTourstopIndex() > 0 && (this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() - 1) + 1, D._selectCurrent(), D._ensureSelectedVisible()), !0;
                    break;
                }
                return !1;
              },
              _selectNext: function() {
                this._tour == null || this._tour.get_currentTourStop() == null || (this.set_focus(this._tour.get_currentTourStop().getNextOverlay(this.get_focus())), this.selection.setSelection(this.get_focus()), Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection));
              },
              _selectLast: function() {
                this._tour == null || this._tour.get_currentTourStop() == null || (this.set_focus(this._tour.get_currentTourStop().getPerviousOverlay(this.get_focus())), this.selection.setSelection(this.get_focus()), Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection));
              },
              keyUp: function(Re, Ie) {
                return !!(xe.currentEditor != null && xe.currentEditor.keyUp(Re, Ie));
              },
              addPicture: function(Re) {
                if (this._tour == null || this._tour.get_currentTourStop() == null)
                  return !1;
                b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(546, "Insert Picture"), this._tour));
                var Ie = Pe.BitmapOverlay.create(this._tour.get_currentTourStop(), Re);
                return Ie.set_x(960), Ie.set_y(600), this._tour.get_currentTourStop().addOverlay(Ie), Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
              },
              addFlipbook: function(Re) {
                return !1;
              },
              addAudio: function(Re, Ie) {
                if (this._tour == null || this._tour.get_currentTourStop() == null)
                  return !1;
                var O = Pe.AudioOverlay.create(this._tour.get_currentTourStop(), Re);
                return O.set_x(900), O.set_y(600), Ie ? this._tour.get_currentTourStop().set_musicTrack(O) : this._tour.get_currentTourStop().set_voiceTrack(O), !0;
              },
              addVideo: function(Re) {
                return !0;
              },
              addText: function(Re, Ie) {
                if (this._tour == null || this._tour.get_currentTourStop() == null)
                  return !1;
                var O = Pe.TextOverlay.create(Ie);
                return O.set_color(Ie.foregroundColor), O.set_x(960), O.set_y(600), b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(547, "Insert Text"), this._tour)), this._tour.get_currentTourStop().addOverlay(O), Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
              },
              addOverlay: function(Re) {
                if (this._tour == null || this._tour.get_currentTourStop() == null)
                  return null;
                if (s.ss.typeOf(Re) === Pe.ShapeOverlay) {
                  var Ie = Re;
                  if (Ie != null) {
                    var O = Pe.ShapeOverlay._create(this._tour.get_currentTourStop(), Ie.get_shapeType());
                    return O.set_width(Ie.get_width()), O.set_height(Ie.get_height()), O.set_x(this._contextPoint.x), O.set_y(this._contextPoint.y), O.set_color(Ie.get_color()), O.set_rotationAngle(Ie.get_rotationAngle()), this._tour.get_currentTourStop().addOverlay(O), O;
                  }
                } else if (s.ss.typeOf(Re) === Pe.TextOverlay) {
                  var Ue = Re;
                  if (Ue != null) {
                    var $e = Pe.TextOverlay.create(Ue.textObject);
                    return $e.set_x(this._contextPoint.x), $e.set_y(this._contextPoint.y), $e.set_color(Ue.get_color()), this._tour.get_currentTourStop().addOverlay($e), $e;
                  }
                } else if (s.ss.typeOf(Re) === Pe.BitmapOverlay) {
                  var Ze = Re;
                  if (Ze != null) {
                    var Qe = Ze.copy(this._tour.get_currentTourStop());
                    return Qe.set_x(this._contextPoint.x), Qe.set_y(this._contextPoint.y), this._tour.get_currentTourStop().addOverlay(Qe), Qe;
                  }
                } else if (s.ss.typeOf(Re) === Pe.FlipbookOverlay) {
                  var Ae = Re;
                  if (Ae != null) {
                    var Qe = Ae.copy(this._tour.get_currentTourStop());
                    return Qe.set_x(this._contextPoint.x), Qe.set_y(this._contextPoint.y), this._tour.get_currentTourStop().addOverlay(Qe), Qe;
                  }
                }
                return null;
              },
              addShape: function(Re, Ie) {
                if (this._tour == null || this._tour.get_currentTourStop() == null)
                  return !1;
                b.Undo.push(new Le.UndoTourStopChange(B.Language.getLocalizedText(548, "Insert Shape"), this._tour));
                var O = Pe.ShapeOverlay._create(this._tour.get_currentTourStop(), Ie);
                return O.set_width(200), O.set_height(200), Ie === 4 && O.set_height(O.get_height() / 2), Ie === 5 && O.set_height(12), O.set_x(960), O.set_y(600), this._tour.get_currentTourStop().addOverlay(O), this.set_focus(O), this.selection.setSelection(this.get_focus()), Se._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
              },
              getCurrentColor: function() {
                return this._tour == null || this._tour.get_currentTourStop() == null ? this._defaultColor : this.get_focus() != null ? this.get_focus().get_color() : this._defaultColor;
              },
              setCurrentColor: function(Re) {
                this._defaultColor = Re, !(this._tour == null || this._tour.get_currentTourStop() == null) && this.get_focus() != null && this.get_focus().set_color(Re);
              },
              dispose: function() {
                this._contextMenu != null && (this._contextMenu._dispose(), this._contextMenu = null);
              },
              hover: function(Re) {
                return xe.currentEditor != null && xe.currentEditor.hover(Re), !0;
              }
            };
            (0, a.registerType)("TourEditor", [xe, ze, null, g.IUiController]);
            function Se() {
            }
            Se._updateOverlayList = function(Re, Ie) {
            }, Se._updateOverlayListSelection = function(Re) {
            };
            var Te = {};
            (0, a.registerType)("OverlayList", [Se, Te, null]);
            function D() {
            }
            D._ensureSelectedVisible = function() {
            }, D._selectCurrent = function() {
            }, D._undoStep = function() {
              b.Undo.peekAction() && b.Undo.stepBack();
            }, D._redoStep = function() {
              b.Undo.peekRedoAction() && b.Undo.stepForward();
            };
            var ke = {};
            (0, a.registerType)("TourEdit", [D, ke, null]);
            function Fe() {
              this.target = null;
            }
            var He = {};
            (0, a.registerType)("SoundEditor", [Fe, He, null]);
            function We() {
              this.tour = null, this.showAddButton = !1, this.selectedItems = null, this.selectedItem = -1, this.refreshCallback = null, this.multipleSelection = !1, this.hitType = !1;
            }
            var Ke = {
              selectAll: function() {
                this.selectedItems = {};
                for (var Re = 0; Re < this.tour.get_tourStops().length; Re++)
                  this.selectedItems[Re] = this.tour.get_tourStops()[Re];
              },
              refresh: function() {
                this.refreshCallback != null && this.refreshCallback();
              },
              findItem: function(Re) {
                return -1;
              },
              ensureSelectedVisible: function() {
              },
              ensureAddVisible: function() {
              }
            };
            (0, a.registerType)("TourStopList", [We, Ke, null]);
            function $() {
            }
            $.refreshUi = function() {
            };
            var De = {};
            (0, a.registerType)("TimeLine", [$, De, null]);
          }
        ),
        /***/
        "./esm/tours/tour_player.js": (
          /*!**********************************!*\
            !*** ./esm/tours/tour_player.js ***!
            \**********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              MasterTime: () => (
                /* binding */
                Pe
              ),
              /* harmony export */
              TourPlayer: () => (
                /* binding */
                Me
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), o = n(
              /*! ../blend_state.js */
              "./esm/blend_state.js"
            ), c = n(
              /*! ../camera_parameters.js */
              "./esm/camera_parameters.js"
            ), _ = n(
              /*! ../interfaces.js */
              "./esm/interfaces.js"
            ), u = n(
              /*! ../data_globals.js */
              "./esm/data_globals.js"
            ), y = n(
              /*! ../settings.js */
              "./esm/settings.js"
            ), g = n(
              /*! ../space_time_controller.js */
              "./esm/space_time_controller.js"
            ), Ee = n(
              /*! ../view_mover.js */
              "./esm/view_mover.js"
            ), Ve = n(
              /*! ./overlay.js */
              "./esm/tours/overlay.js"
            );
            function Me() {
              this._overlayBlend = o.BlendState.create(!1, 1e3), this._tour = null, this._onTarget = !1, this._currentMasterSlide = null, this._callStack = new s.ss.Stack(), this._leaveSettingsWhenStopped = !1;
            }
            Me._playing = !1, Me._switchedToFullScreen = !1, Me.noRestoreUIOnStop = !1, Me.get_playing = function() {
              return Me._playing;
            }, Me.set_playing = function(b) {
              return Me._playing = b, b;
            }, Me.add_tourEnded = function(b) {
              Me.__tourEnded = s.ss.bindAdd(Me.__tourEnded, b);
            }, Me.remove_tourEnded = function(b) {
              Me.__tourEnded = s.ss.bindSub(Me.__tourEnded, b);
            };
            var B = {
              render: function(b) {
                if (!(this._tour == null || this._tour.get_currentTourStop() == null || !Me._playing)) {
                  if (b.save(), this.updateSlideStates(), !this._onTarget && (this._slideStartTime = s.ss.now(), b.onTarget(this.get_tour().get_currentTourStop().get_target()))) {
                    this._onTarget = !0, this._overlayBlend.set_state(!this.get_tour().get_currentTourStop().get_fadeInOverlays()), this._overlayBlend.set_targetState(!0), this._tour.get_currentTourStop().get_musicTrack() != null && (this._tour.get_currentTourStop().get_musicTrack().seek(0), this._tour.get_currentTourStop().get_musicTrack().play()), this._tour.get_currentTourStop().get_voiceTrack() != null && (this._tour.get_currentTourStop().get_voiceTrack().seek(0), this._tour.get_currentTourStop().get_voiceTrack().play());
                    for (var Le = "", xe = s.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); xe.moveNext(); ) {
                      var ze = xe.current;
                      if (ze.get_name().toLowerCase() === "caption") {
                        var Se = s.ss.safeCast(ze, Ve.TextOverlay);
                        Se != null && (Le = Se.textObject.text);
                      }
                      ze.play();
                    }
                    (0, u.setManagerVisibleLayerList)(this._tour.get_currentTourStop().layers), this._tour.get_currentTourStop().get_endTarget() != null && this._tour.get_currentTourStop().get_endTarget().get_zoomLevel() !== -1 && (this._tour.get_currentTourStop().get_target().get_type(), b.viewMover = new Ee.ViewMoverKenBurnsStyle(this._tour.get_currentTourStop().get_target().get_camParams(), this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_duration() / 1e3, this._tour.get_currentTourStop().get_startTime(), this._tour.get_currentTourStop().get_endTime(), this._tour.get_currentTourStop().get_interpolationType())), y.Settings.tourSettings = this._tour.get_currentTourStop(), g.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), g.SpaceTimeController.set_syncToClock(!1), u.globalScriptInterface._fireSlideChanged(Le);
                  }
                  if (b.gl != null) {
                    if (b.setupMatricesOverlays(), this._currentMasterSlide != null)
                      for (var Te = s.ss.enumerate(this._currentMasterSlide.get_overlays()); Te.moveNext(); ) {
                        var ze = Te.current;
                        ze.set_tweenFactor(1), ze.draw3D(b, !1);
                      }
                    if (this._onTarget)
                      for (var D = s.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); D.moveNext(); ) {
                        var ze = D.current;
                        (ze.get_name().toLowerCase() !== "caption" || u.globalScriptInterface.get_showCaptions()) && (ze.set_tweenFactor(c.CameraParameters.easeCurve(this._tour.get_currentTourStop().get_tweenPosition(), ze.get_interpolationType() === 5 ? this._tour.get_currentTourStop().get_interpolationType() : ze.get_interpolationType())), ze.draw3D(b, !1));
                      }
                    b.restore();
                  } else {
                    b.device.scale(b.height / 1116, b.height / 1116);
                    var ke = b.width / b.height;
                    if (b.device.translate(-((1920 - ke * 1116) / 2), 0), this._currentMasterSlide != null)
                      for (var Fe = s.ss.enumerate(this._currentMasterSlide.get_overlays()); Fe.moveNext(); ) {
                        var ze = Fe.current;
                        ze.set_tweenFactor(1), ze.draw3D(b, !1);
                      }
                    if (this._onTarget)
                      for (var He = s.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); He.moveNext(); ) {
                        var ze = He.current;
                        (ze.get_name().toLowerCase() !== "caption" || u.globalScriptInterface.get_showCaptions()) && (ze.set_tweenFactor(c.CameraParameters.easeCurve(this._tour.get_currentTourStop().get_tweenPosition(), ze.get_interpolationType() === 5 ? this._tour.get_currentTourStop().get_interpolationType() : ze.get_interpolationType())), ze.draw3D(b, !1));
                      }
                    b.restore();
                  }
                }
              },
              get_tour: function() {
                return this._tour;
              },
              set_tour: function(b) {
                return this._tour = b, b;
              },
              nextSlide: function() {
                if (this._tour.get_currentTourStop() != null)
                  if (this._tour.get_currentTourStop().get_masterSlide())
                    this._currentMasterSlide = this._tour.get_currentTourStop();
                  else {
                    this._tour.get_currentTourStop().get_musicTrack() != null && this._tour.get_currentTourStop().get_musicTrack().stop(), this._tour.get_currentTourStop().get_voiceTrack() != null && this._tour.get_currentTourStop().get_voiceTrack().stop();
                    for (var b = s.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); b.moveNext(); ) {
                      var Le = b.current;
                      Le.stop();
                    }
                  }
                if (this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 || this._tour.get_currentTourStop().get_isLinked()) {
                  if (this._tour.get_currentTourStop().get_endTarget() != null && (u.globalWWTControl.gotoTargetFull(!1, !0, this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_target().get_studyImageset(), this._tour.get_currentTourStop().get_target().get_backgroundImageset()), u.globalWWTControl.set__mover(null)), this._onTarget = !1, this._tour.get_currentTourStop().get_isLinked())
                    try {
                      switch (this._tour.get_currentTourStop().get_nextSlide()) {
                        case "Return":
                          this._callStack.count > 0 ? this.playFromTourstop(this._tour.get_tourStops()[this._callStack.pop()]) : this._tour.set_currentTourstopIndex(this._tour.get_tourStops().length - 1);
                          break;
                        default:
                          this.playFromTourstop(this._tour.get_tourStops()[this._tour.getTourStopIndexByID(this._tour.get_currentTourStop().get_nextSlide())]);
                          break;
                      }
                    } catch {
                      this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1;
                    }
                  else
                    this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1;
                  this._currentMasterSlide != null && this._tour.get_currentTourStop().get_masterSlide() && this._stopCurrentMaster();
                  var xe = !1;
                  switch (this._tour.get_currentTourStop().get__transition()) {
                    case 0:
                      break;
                    case 1:
                      xe = !0;
                      break;
                    case 2:
                      xe = !0;
                      break;
                    case 3:
                      xe = !0;
                      break;
                    case 5:
                      xe = !0;
                      break;
                    case 4:
                      xe = !0;
                      break;
                  }
                  u.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, xe, !1), this._slideStartTime = s.ss.now(), y.Settings.tourSettings = this._tour.get_currentTourStop(), g.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), g.SpaceTimeController.set_syncToClock(!1);
                } else
                  this._stopCurrentMaster(), Me._playing = !1, y.Settings.get_current().autoRepeatTour ? (this._tour.set_currentTourstopIndex(-1), this.play()) : (u.globalWWTControl._freezeView(), Me.__tourEnded != null && Me.__tourEnded(this, new s.ss.EventArgs()), u.globalWWTControl._hideUI(!1), u.globalScriptInterface._fireTourEnded());
              },
              _stopCurrentMaster: function() {
                if (this._currentMasterSlide != null) {
                  this._currentMasterSlide.get_musicTrack() != null && this._currentMasterSlide.get_musicTrack().stop(), this._currentMasterSlide.get_voiceTrack() != null && this._currentMasterSlide.get_voiceTrack().stop();
                  for (var b = s.ss.enumerate(this._currentMasterSlide.get_overlays()); b.moveNext(); ) {
                    var Le = b.current;
                    Le.stop();
                  }
                  this._currentMasterSlide = null;
                }
              },
              get_leaveSettingsWhenStopped: function() {
                return this._leaveSettingsWhenStopped;
              },
              set_leaveSettingsWhenStopped: function(b) {
                return this._leaveSettingsWhenStopped = b, b;
              },
              play: function() {
                if (this._tour != null) {
                  if (Me._playing ? this.stop(!0) : Me._playing = !0, u.globalWWTControl._hideUI(!0), Me._playing = !0, this._tour.get_tourStops().length > 0) {
                    this._onTarget = !1, this._tour.get_currentTourstopIndex() === -1 && this._tour.set_currentTourStop(this._tour.get_tourStops()[0]);
                    for (var b = s.ss.enumerate(this._tour.get_tourStops()); b.moveNext(); ) {
                      var Le = b.current;
                      Le.get_musicTrack() != null && Le.get_musicTrack().prepMultimedia(), Le.get_voiceTrack() != null && Le.get_voiceTrack().prepMultimedia();
                      for (var xe = s.ss.enumerate(Le.get_overlays()); xe.moveNext(); ) {
                        var ze = xe.current;
                        ze.prepMultimedia();
                      }
                    }
                    this._tour.get_currentTourstopIndex() > 0 && this._playMasterForCurrent(), u.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1);
                  }
                  this._slideStartTime = s.ss.now(), Me._playing = !0;
                }
              },
              _playMasterForCurrent: function() {
                if (!this._tour.get_currentTourStop().get_masterSlide()) {
                  var b = this._tour.elapsedTimeSinceLastMaster(this._tour.get_currentTourstopIndex());
                  if (b != null) {
                    var Le = b.duration;
                    this._currentMasterSlide = b.master, this._currentMasterSlide.get_musicTrack() != null && (this._currentMasterSlide.get_musicTrack().seek(Le), this._currentMasterSlide.get_musicTrack().play()), this._currentMasterSlide.get_voiceTrack() != null && (this._currentMasterSlide.get_voiceTrack().seek(Le), this._currentMasterSlide.get_voiceTrack().play());
                    for (var xe = s.ss.enumerate(this._currentMasterSlide.get_overlays()); xe.moveNext(); ) {
                      var ze = xe.current;
                      ze.seek(Le), ze.play();
                    }
                  }
                }
              },
              stop: function(b) {
                if (Me._switchedToFullScreen, this._leaveSettingsWhenStopped || (y.Settings.tourSettings = null), Me._playing = !1, this._tour.get_currentTourStop() != null) {
                  this._tour.get_currentTourStop().get_musicTrack() != null && this._tour.get_currentTourStop().get_musicTrack().stop(), this._tour.get_currentTourStop().get_voiceTrack() != null && this._tour.get_currentTourStop().get_voiceTrack().stop();
                  for (var Le = s.ss.enumerate(this._tour.get_currentTourStop().get_overlays()); Le.moveNext(); ) {
                    var xe = Le.current;
                    xe.stop();
                  }
                }
                if (this._currentMasterSlide != null) {
                  this._currentMasterSlide.get_musicTrack() != null && this._currentMasterSlide.get_musicTrack().stop(), this._currentMasterSlide.get_voiceTrack() != null && this._currentMasterSlide.get_voiceTrack().stop();
                  for (var ze = s.ss.enumerate(this._currentMasterSlide.get_overlays()); ze.moveNext(); ) {
                    var xe = ze.current;
                    xe.stop();
                  }
                }
                u.globalWWTControl._hideUI(Me.noRestoreUIOnStop), u.globalScriptInterface._fireTourEnded();
              },
              updateSlideStates: function() {
                var b = !1, Le = s.ss.now() - this._slideStartTime;
                if (Le > this._tour.get_currentTourStop().get_duration() && Me._playing && (this.nextSlide(), b = !0), Le = s.ss.now() - this._slideStartTime, this._tour.get_currentTourStop() != null) {
                  this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, Le / this._tour.get_currentTourStop().get_duration())), this._tour.get_currentTourStop().faderOpacity = 0;
                  var xe = this._tour.get_currentTourStop().get_tweenPosition() * this._tour.get_currentTourStop().get_duration() / 1e3;
                  switch (b && u.globalWWTControl.set_crossFadeFrame(!1), this._tour.get_currentTourStop().get__transition()) {
                    case 0:
                      this._tour.get_currentTourStop().faderOpacity = 0, u.globalWWTControl.set_crossFadeFrame(!1);
                      break;
                    case 2:
                      xe < xe - this._tour.get_currentTourStop().get__transitionHoldTime() ? (u.globalWWTControl.set_crossFadeFrame(!0), this._tour.get_currentTourStop().faderOpacity = 1) : (this._tour.get_currentTourStop().faderOpacity = 0, u.globalWWTControl.set_crossFadeFrame(!1));
                      break;
                    case 1:
                      u.globalWWTControl.set_crossFadeFrame(!0);
                      var ze = Math.max(0, 1 - Math.min(1, (xe - this._tour.get_currentTourStop().get__transitionHoldTime()) / this._tour.get_currentTourStop().get__transitionTime()));
                      this._tour.get_currentTourStop().faderOpacity = ze;
                      break;
                    case 3:
                    case 4:
                      u.globalWWTControl.set_crossFadeFrame(!1);
                      var ze = Math.max(0, 1 - Math.max(0, xe - this._tour.get_currentTourStop().get__transitionHoldTime()) / this._tour.get_currentTourStop().get__transitionTime());
                      this._tour.get_currentTourStop().faderOpacity = ze;
                      break;
                    case 5:
                      u.globalWWTControl.set_crossFadeFrame(!1);
                      break;
                  }
                  if (!this._tour.get_currentTourStop().get_isLinked() && this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1) {
                    var Se = this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1].get__transition(), Te = this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1].get__transitionOutTime();
                    switch (Se) {
                      case 5:
                      case 3:
                        if (!this._tour.get_currentTourStop().faderOpacity) {
                          u.globalWWTControl.set_crossFadeFrame(!1);
                          var ze = Math.max(0, 1 - Math.min(1, (this._tour.get_currentTourStop().get_duration() / 1e3 - xe) / Te));
                          this._tour.get_currentTourStop().faderOpacity = ze;
                        }
                        break;
                    }
                  }
                }
              },
              updateTweenPosition: function(b) {
                var Le = s.ss.now() - this._slideStartTime;
                return b > -1 ? this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, b)) : this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, Le / this._tour.get_currentTourStop().get_duration()));
              },
              close: function() {
                this._tour != null && (Me.get_playing() && this.stop(Me._switchedToFullScreen), this._tour = null);
              },
              mouseDown: function(b, Le) {
                var xe;
                if (xe = this.pointToView(t.Vector2d.create(Le.offsetX, Le.offsetY)), this._tour == null || this._tour.get_currentTourStop() == null)
                  return !1;
                for (var ze = this._tour.get_currentTourStop().get_overlays().length - 1; ze >= 0; ze--)
                  if (this._tour.get_currentTourStop().get_overlays()[ze].hitTest(xe)) {
                    if (!s.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[ze].get_url())) {
                      var Se = this._tour.get_currentTourStop().get_overlays()[ze];
                      return l.Util._openUrl(Se.get_url()), !0;
                    }
                    if (!s.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[ze].get_linkID()))
                      return this._callStack.push(this._tour.get_currentTourstopIndex()), this.playFromTourstop(this._tour.get_tourStops()[this._tour.getTourStopIndexByID(this._tour.get_currentTourStop().get_overlays()[ze].get_linkID())]), !0;
                  }
                return !1;
              },
              mouseUp: function(b, Le) {
                return !1;
              },
              mouseMove: function(b, Le) {
                var xe;
                try {
                  xe = this.pointToView(t.Vector2d.create(Le.offsetX, Le.offsetY));
                } catch {
                  return !1;
                }
                if (this._tour == null || this._tour.get_currentTourStop() == null)
                  return !1;
                for (var ze = this._tour.get_currentTourStop().get_overlays().length - 1; ze >= 0; ze--)
                  if (this._tour.get_currentTourStop().get_overlays()[ze].hitTest(xe) && (!s.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[ze].get_url()) || !s.ss.emptyString(this._tour.get_currentTourStop().get_overlays()[ze].get_linkID())))
                    return !0;
                return !1;
              },
              mouseClick: function(b, Le) {
                return !1;
              },
              click: function(b, Le) {
                return !1;
              },
              mouseDoubleClick: function(b, Le) {
                return !1;
              },
              keyDown: function(b, Le) {
                switch (Le.keyCode) {
                  case 27:
                    return this.stop(Me._switchedToFullScreen), u.globalWWTControl._closeTour(), !0;
                  case 32:
                    return this.pauseTour(), !0;
                  case 39:
                    return this._playNextSlide(), !0;
                  case 37:
                    return this._playPreviousSlide(), !0;
                  case 35:
                    return this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_tourStops().length - 1]), !0;
                  case 36:
                    return this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[0]), !0;
                }
                return !1;
              },
              _playNextSlide: function() {
                this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1]);
              },
              _playPreviousSlide: function() {
                this._tour.get_currentTourstopIndex() > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() - 1]);
              },
              playFromTourstop: function(b) {
                this.stop(!0), this._tour.set_currentTourStop(b), u.globalWWTControl.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), g.SpaceTimeController.set_now(this._tour.get_currentTourStop().get_startTime()), g.SpaceTimeController.set_syncToClock(!1), this.play();
              },
              pauseTour: function() {
                Me._playing ? (this.stop(Me._switchedToFullScreen), u.globalWWTControl._freezeView(), u.globalScriptInterface._fireTourPaused()) : (this.play(), u.globalScriptInterface._fireTourResume());
              },
              keyUp: function(b, Le) {
                return !1;
              },
              hover: function(b) {
                return !!Me._playing;
              },
              pointToView: function(b) {
                var Le = u.globalWWTControl.canvas.height, xe = u.globalWWTControl.canvas.width, ze = xe / Le * 1116, Se = b.x / xe * ze - (ze - 1920) / 2, Te = b.y / Le * 1116;
                return t.Vector2d.create(Se, Te);
              }
            };
            (0, a.registerType)("TourPlayer", [Me, B, null, _.IUiController]);
            function Pe(b, Le) {
              this.duration = 0, this.master = b, this.duration = Le;
            }
            var k = {};
            (0, a.registerType)("MasterTime", [Pe, k, null]);
          }
        ),
        /***/
        "./esm/tours/tour_stop.js": (
          /*!********************************!*\
            !*** ./esm/tours/tour_stop.js ***!
            \********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              LayerInfo: () => (
                /* binding */
                b
              ),
              /* harmony export */
              TourStop: () => (
                /* binding */
                Pe
              ),
              /* harmony export */
              TransitionType: () => (
                /* binding */
                B
              ),
              /* harmony export */
              UndoTourStopChange: () => (
                /* binding */
                xe
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../data_globals.js */
              "./esm/data_globals.js"
            ), l = n(
              /*! ../utilities/xml_text_writer.js */
              "./esm/utilities/xml_text_writer.js"
            ), o = n(
              /*! ../baseutil.js */
              "./esm/baseutil.js"
            ), c = n(
              /*! ../color.js */
              "./esm/color.js"
            ), _ = n(
              /*! ../constellation_filter.js */
              "./esm/constellation_filter.js"
            ), u = n(
              /*! ../interfaces.js */
              "./esm/interfaces.js"
            ), y = n(
              /*! ../place.js */
              "./esm/place.js"
            ), g = n(
              /*! ../settings.js */
              "./esm/settings.js"
            ), Ee = n(
              /*! ../space_time_controller.js */
              "./esm/space_time_controller.js"
            ), Ve = n(
              /*! ../util.js */
              "./esm/util.js"
            ), Me = n(
              /*! ./overlay.js */
              "./esm/tours/overlay.js"
            ), B = {
              slew: 0,
              crossFade: 1,
              crossCut: 2,
              fadeOutIn: 3,
              fadeIn: 4,
              fadeOut: 5
            };
            (0, a.registerType)("TransitionType", B), (0, a.registerEnum)("TransitionType", B);
            function Pe() {
              this._tourStopType = 0, this._keyFramed = !1, this._tweenPosition = 0, this.faderOpacity = 0, this._owner = null, this._transition = 0, this._transitionTime = 2, this._transitionHoldTime = 4, this._transitionOutTime = 2, this._nextSlide = "Next", this._fadeInOverlays = !1, this._masterSlide = !1, this._id = "", this._description = "", this._name = "", this._duration = 1e4, this._interpolationType = 0, this._hasLocation = !0, this._hasTime = !0, this._startTime = Ee.SpaceTimeController.get_now(), this._endTime = Ee.SpaceTimeController.get_now(), this._actualPlanetScale = g.Settings.get_current().get_actualPlanetScale(), this._locationAltitude = g.Settings.get_current().get_locationAltitude(), this._locationLat = g.Settings.get_current().get_locationLat(), this._locationLng = g.Settings.get_current().get_locationLng(), this._showClouds = g.Settings.get_current().get_showClouds(), this._showConstellationBoundries = g.Settings.get_current().get_showConstellationBoundries(), this._showConstellationFigures = g.Settings.get_current().get_showConstellationFigures(), this._showConstellationSelection = g.Settings.get_current().get_showConstellationSelection(), this._showEcliptic = g.Settings.get_current().get_showEcliptic(), this._showElevationModel = g.Settings.get_current().get_showElevationModel(), this._showFieldOfView = g.Settings.get_current().get_showFieldOfView(), this._showGrid = g.Settings.get_current().get_showGrid(), this._showHorizon = g.Settings.get_current().get_showHorizon(), this._showHorizonPanorama = g.Settings.get_current().get_showHorizonPanorama(), this._showMoonsAsPointSource = g.Settings.get_current().get_showMoonsAsPointSource(), this._showSolarSystem = g.Settings.get_current().get_showSolarSystem(), this._fovTelescope = g.Settings.get_current().get_fovTelescope(), this._fovEyepiece = g.Settings.get_current().get_fovEyepiece(), this._fovCamera = g.Settings.get_current().get_fovCamera(), this._localHorizonMode = g.Settings.get_current().get_localHorizonMode(), this._galacticMode = g.Settings.get_current().get_galacticMode(), this._solarSystemStars = g.Settings.get_current().get_solarSystemStars(), this._solarSystemMilkyWay = g.Settings.get_current().get_solarSystemMilkyWay(), this._solarSystemCosmos = g.Settings.get_current().get_solarSystemCosmos(), this._solarSystemOrbits = g.Settings.get_current().get_solarSystemOrbits(), this._solarSystemOverlays = g.Settings.get_current().get_solarSystemOverlays(), this._solarSystemLighting = g.Settings.get_current().get_solarSystemLighting(), this._solarSystemScale = g.Settings.get_current().get_solarSystemScale(), this._solarSystemMultiRes = g.Settings.get_current().get_solarSystemMultiRes(), this._showEquatorialGridText = g.Settings.get_current().get_showEquatorialGridText(), this._showGalacticGrid = g.Settings.get_current().get_showGalacticGrid(), this._showGalacticGridText = g.Settings.get_current().get_showGalacticGridText(), this._showEclipticGrid = g.Settings.get_current().get_showEclipticGrid(), this._showEclipticGridText = g.Settings.get_current().get_showEclipticGridText(), this._showEclipticOverviewText = g.Settings.get_current().get_showEclipticOverviewText(), this._showAltAzGrid = g.Settings.get_current().get_showAltAzGrid(), this._showAltAzGridText = g.Settings.get_current().get_showAltAzGridText(), this._showPrecessionChart = g.Settings.get_current().get_showPrecessionChart(), this._showConstellationPictures = g.Settings.get_current().get_showConstellationPictures(), this._showConstellationLabels = g.Settings.get_current().get_showConstellationLabels(), this._solarSystemCMB = g.Settings.get_current().get_solarSystemCMB(), this._solarSystemMinorPlanets = g.Settings.get_current().get_solarSystemMinorPlanets(), this._solarSystemPlanets = g.Settings.get_current().get_solarSystemPlanets(), this._showEarthSky = g.Settings.get_current().get_showEarthSky(), this._solarSystemMinorOrbits = g.Settings.get_current().get_solarSystemMinorOrbits(), this._constellationsEnabled = "", this._constellationFiguresFilter = g.Settings.get_current().get_constellationFiguresFilter().clone(), this._constellationBoundariesFilter = g.Settings.get_current().get_constellationBoundariesFilter().clone(), this._constellationNamesFilter = g.Settings.get_current().get_constellationNamesFilter().clone(), this._constellationArtFilter = g.Settings.get_current().get_constellationArtFilter().clone(), this._showSkyOverlays = g.Settings.get_current().get_showSkyOverlays(), this._showConstellations = g.Settings.get_current().get_showConstellations(), this._showSkyNode = g.Settings.get_current().get_showSkyNode(), this._showSkyGrids = g.Settings.get_current().get_showSkyGrids(), this._showSkyOverlaysIn3d = g.Settings.get_current().get_showSkyOverlaysIn3d(), this._earthCutawayView = g.Settings.get_current().get_earthCutawayView(), this._showISSModel = g.Settings.get_current().get_showISSModel(), this._milkyWayModel = g.Settings.get_current().get_milkyWayModel(), this._minorPlanetsFilter = g.Settings.get_current().get_minorPlanetsFilter(), this._planetOrbitsFilter = g.Settings.get_current().get_planetOrbitsFilter(), this._thumbnailString = "", this._thumbnail = null, this.layers = {}, this._overlays = [], this._musicTrack = null, this._voiceTrack = null, this._eclipticGridColor = c.Colors.get_green(), this._galacticGridColor = c.Colors.get_cyan(), this._altAzGridColor = c.Colors.get_magenta(), this._precessionChartColor = c.Colors.get_orange(), this._eclipticColor = c.Colors.get_blue(), this._equatorialGridColor = c.Colors.get_white(), this._constellationLabelsHeight = 80, this._id = Ve.Guid.newGuid().toString();
            }
            Pe.clipboardFormat = "WorldWideTelescope.Slide", Pe.create = function(Se) {
              var Te = new Pe();
              return Te._target = Se, Te;
            }, Pe.getXmlText = function(Se) {
              var Te = new l.XmlTextWriter();
              return Te._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), Se._saveToXml(Te, !0), Te._close(), Te.body;
            }, Pe._fromXml = function(Se, Te) {
              try {
                var D = new Pe();
                D._owner = Se, D.set_id(Te.attributes.getNamedItem("Id").nodeValue), D.set_name(Te.attributes.getNamedItem("Name").nodeValue), D.set_description(Te.attributes.getNamedItem("Description").nodeValue), D._thumbnailString = Te.attributes.getNamedItem("Thumbnail").nodeValue, D._duration = o.Util.parseTimeSpan(Te.attributes.getNamedItem("Duration").nodeValue), Te.attributes.getNamedItem("Master") != null && (D._masterSlide = s.ss.boolean(Te.attributes.getNamedItem("Master").nodeValue)), Te.attributes.getNamedItem("NextSlide") != null && (D._nextSlide = Te.attributes.getNamedItem("NextSlide").nodeValue), Te.attributes.getNamedItem("InterpolationType") != null && D.set_interpolationType(a.Enums.parse("InterpolationType", Te.attributes.getNamedItem("InterpolationType").nodeValue)), D._fadeInOverlays = !0, Te.attributes.getNamedItem("FadeInOverlays") != null && (D._fadeInOverlays = s.ss.boolean(Te.attributes.getNamedItem("FadeInOverlays").nodeValue)), Te.attributes.getNamedItem("Transition") != null && (D._transition = a.Enums.parse("TransitionType", Te.attributes.getNamedItem("Transition").nodeValue)), Te.attributes.getNamedItem("HasLocation") != null && (D._hasLocation = s.ss.boolean(Te.attributes.getNamedItem("HasLocation").nodeValue)), D._hasLocation && (Te.attributes.getNamedItem("LocationAltitude") != null && (D._locationAltitude = parseFloat(Te.attributes.getNamedItem("LocationAltitude").nodeValue)), Te.attributes.getNamedItem("LocationLat") != null && (D._locationLat = parseFloat(Te.attributes.getNamedItem("LocationLat").nodeValue)), Te.attributes.getNamedItem("LocationLng") != null && (D._locationLng = parseFloat(Te.attributes.getNamedItem("LocationLng").nodeValue))), Te.attributes.getNamedItem("HasTime") != null && (D._hasTime = s.ss.boolean(Te.attributes.getNamedItem("HasTime").nodeValue), D._hasTime && (Te.attributes.getNamedItem("StartTime") != null && (D._startTime = s.ss.date(Te.attributes.getNamedItem("StartTime").nodeValue + " UTC")), Te.attributes.getNamedItem("EndTime") != null && (D._endTime = s.ss.date(Te.attributes.getNamedItem("EndTime").nodeValue + " UTC")))), Te.attributes.getNamedItem("ActualPlanetScale") != null && (D._actualPlanetScale = s.ss.boolean(Te.attributes.getNamedItem("ActualPlanetScale").nodeValue)), Te.attributes.getNamedItem("ShowClouds") != null && (D._showClouds = s.ss.boolean(Te.attributes.getNamedItem("ShowClouds").nodeValue)), Te.attributes.getNamedItem("ShowConstellationBoundries") != null && (D._showConstellationBoundries = s.ss.boolean(Te.attributes.getNamedItem("ShowConstellationBoundries").nodeValue)), Te.attributes.getNamedItem("ShowConstellationFigures") != null && (D._showConstellationFigures = s.ss.boolean(Te.attributes.getNamedItem("ShowConstellationFigures").nodeValue)), Te.attributes.getNamedItem("ShowConstellationSelection") != null && (D._showConstellationSelection = s.ss.boolean(Te.attributes.getNamedItem("ShowConstellationSelection").nodeValue)), Te.attributes.getNamedItem("ShowEcliptic") != null && (D._showEcliptic = s.ss.boolean(Te.attributes.getNamedItem("ShowEcliptic").nodeValue)), Te.attributes.getNamedItem("EclipticColor") != null && (D._eclipticColor = c.Color.load(Te.attributes.getNamedItem("EclipticColor").nodeValue)), Te.attributes.getNamedItem("ShowElevationModel") != null && (D._showElevationModel = s.ss.boolean(Te.attributes.getNamedItem("ShowElevationModel").nodeValue)), Te.attributes.getNamedItem("ShowFieldOfView") != null && (D._showFieldOfView = s.ss.boolean(Te.attributes.getNamedItem("ShowFieldOfView").nodeValue)), Te.attributes.getNamedItem("ShowGrid") != null && (D._showGrid = s.ss.boolean(Te.attributes.getNamedItem("ShowGrid").nodeValue)), Te.attributes.getNamedItem("ShowHorizon") != null && (D._showHorizon = s.ss.boolean(Te.attributes.getNamedItem("ShowHorizon").nodeValue)), Te.attributes.getNamedItem("ShowHorizonPanorama") != null && (D._showHorizonPanorama = s.ss.boolean(Te.attributes.getNamedItem("ShowHorizonPanorama").nodeValue)), Te.attributes.getNamedItem("ShowMoonsAsPointSource") != null && (D._showMoonsAsPointSource = s.ss.boolean(Te.attributes.getNamedItem("ShowMoonsAsPointSource").nodeValue)), Te.attributes.getNamedItem("ShowSolarSystem") != null && (D._showSolarSystem = s.ss.boolean(Te.attributes.getNamedItem("ShowSolarSystem").nodeValue)), Te.attributes.getNamedItem("FovTelescope") != null && (D._fovTelescope = parseInt(Te.attributes.getNamedItem("FovTelescope").nodeValue)), Te.attributes.getNamedItem("FovEyepiece") != null && (D._fovEyepiece = parseInt(Te.attributes.getNamedItem("FovEyepiece").nodeValue)), Te.attributes.getNamedItem("FovCamera") != null && (D._fovCamera = parseInt(Te.attributes.getNamedItem("FovCamera").nodeValue)), Te.attributes.getNamedItem("LocalHorizonMode") != null && (D._localHorizonMode = s.ss.boolean(Te.attributes.getNamedItem("LocalHorizonMode").nodeValue)), Te.attributes.getNamedItem("GalacticMode") != null && (D._galacticMode = s.ss.boolean(Te.attributes.getNamedItem("GalacticMode").nodeValue)), Te.attributes.getNamedItem("SolarSystemStars") != null && (D._solarSystemStars = s.ss.boolean(Te.attributes.getNamedItem("SolarSystemStars").nodeValue)), Te.attributes.getNamedItem("SolarSystemMilkyWay") != null && (D._solarSystemMilkyWay = s.ss.boolean(Te.attributes.getNamedItem("SolarSystemMilkyWay").nodeValue)), Te.attributes.getNamedItem("SolarSystemCosmos") != null && (D._solarSystemCosmos = s.ss.boolean(Te.attributes.getNamedItem("SolarSystemCosmos").nodeValue)), Te.attributes.getNamedItem("SolarSystemOrbits") != null && (D._solarSystemOrbits = s.ss.boolean(Te.attributes.getNamedItem("SolarSystemOrbits").nodeValue)), Te.attributes.getNamedItem("SolarSystemOverlays") != null && (D._solarSystemOverlays = s.ss.boolean(Te.attributes.getNamedItem("SolarSystemOverlays").nodeValue)), Te.attributes.getNamedItem("SolarSystemLighting") != null && (D._solarSystemLighting = s.ss.boolean(Te.attributes.getNamedItem("SolarSystemLighting").nodeValue)), Te.attributes.getNamedItem("SolarSystemScale") != null && (D._solarSystemScale = parseInt(Te.attributes.getNamedItem("SolarSystemScale").nodeValue)), Te.attributes.getNamedItem("SolarSystemMultiRes") != null && (D._solarSystemMultiRes = s.ss.boolean(Te.attributes.getNamedItem("SolarSystemMultiRes").nodeValue)), Te.attributes.getNamedItem("ShowEquatorialGridText") != null && (D._showEquatorialGridText = s.ss.boolean(Te.attributes.getNamedItem("ShowEquatorialGridText").nodeValue)), Te.attributes.getNamedItem("EquatorialGridColor") != null && (D._equatorialGridColor = c.Color.load(Te.attributes.getNamedItem("EquatorialGridColor").nodeValue)), Te.attributes.getNamedItem("ShowGalacticGrid") != null && (D._showGalacticGrid = s.ss.boolean(Te.attributes.getNamedItem("ShowGalacticGrid").nodeValue)), Te.attributes.getNamedItem("ShowGalacticGridText") != null && (D._showGalacticGridText = s.ss.boolean(Te.attributes.getNamedItem("ShowGalacticGridText").nodeValue)), Te.attributes.getNamedItem("GalacticGridColor") != null && (D._galacticGridColor = c.Color.load(Te.attributes.getNamedItem("GalacticGridColor").nodeValue)), Te.attributes.getNamedItem("ShowEclipticGrid") != null && (D._showEclipticGrid = s.ss.boolean(Te.attributes.getNamedItem("ShowEclipticGrid").nodeValue)), Te.attributes.getNamedItem("ShowEclipticGridText") != null && (D._showEclipticGridText = s.ss.boolean(Te.attributes.getNamedItem("ShowEclipticGridText").nodeValue)), Te.attributes.getNamedItem("EclipticGridColor") != null && (D._eclipticGridColor = c.Color.load(Te.attributes.getNamedItem("EclipticGridColor").nodeValue)), Te.attributes.getNamedItem("ShowEclipticOverviewText") != null && (D._showEclipticOverviewText = s.ss.boolean(Te.attributes.getNamedItem("ShowEclipticOverviewText").nodeValue)), Te.attributes.getNamedItem("ShowAltAzGrid") != null && (D._showAltAzGrid = s.ss.boolean(Te.attributes.getNamedItem("ShowAltAzGrid").nodeValue)), Te.attributes.getNamedItem("ShowAltAzGridText") != null && (D._showAltAzGridText = s.ss.boolean(Te.attributes.getNamedItem("ShowAltAzGridText").nodeValue)), Te.attributes.getNamedItem("AltAzGridColor") != null && (D._altAzGridColor = c.Color.load(Te.attributes.getNamedItem("AltAzGridColor").nodeValue)), Te.attributes.getNamedItem("ShowPrecessionChart") != null && (D._showPrecessionChart = s.ss.boolean(Te.attributes.getNamedItem("ShowPrecessionChart").nodeValue)), Te.attributes.getNamedItem("PrecessionChartColor") != null && (D._precessionChartColor = c.Color.load(Te.attributes.getNamedItem("PrecessionChartColor").nodeValue)), Te.attributes.getNamedItem("ShowConstellationPictures") != null && (D._showConstellationPictures = s.ss.boolean(Te.attributes.getNamedItem("ShowConstellationPictures").nodeValue)), Te.attributes.getNamedItem("ShowConstellationLabels") != null && (D._showConstellationLabels = s.ss.boolean(Te.attributes.getNamedItem("ShowConstellationLabels").nodeValue)), Te.attributes.getNamedItem("SolarSystemCMB") != null && (D._solarSystemCMB = s.ss.boolean(Te.attributes.getNamedItem("SolarSystemCMB").nodeValue)), Te.attributes.getNamedItem("SolarSystemMinorPlanets") != null && (D._solarSystemMinorPlanets = s.ss.boolean(Te.attributes.getNamedItem("SolarSystemMinorPlanets").nodeValue)), Te.attributes.getNamedItem("SolarSystemPlanets") != null && (D._solarSystemPlanets = s.ss.boolean(Te.attributes.getNamedItem("SolarSystemPlanets").nodeValue)), Te.attributes.getNamedItem("ShowEarthSky") != null && (D._showEarthSky = s.ss.boolean(Te.attributes.getNamedItem("ShowEarthSky").nodeValue)), Te.attributes.getNamedItem("SolarSystemMinorOrbits") != null && (D._solarSystemMinorOrbits = s.ss.boolean(Te.attributes.getNamedItem("SolarSystemMinorOrbits").nodeValue)), Te.attributes.getNamedItem("ShowSkyOverlays") != null ? D._showSkyOverlays = s.ss.boolean(Te.attributes.getNamedItem("ShowSkyOverlays").nodeValue) : D._showSkyOverlays = !0, Te.attributes.getNamedItem("ShowConstellations") != null ? D._showConstellations = s.ss.boolean(Te.attributes.getNamedItem("ShowConstellations").nodeValue) : D._showConstellations = !0, Te.attributes.getNamedItem("ShowSkyNode") != null ? D._showSkyNode = s.ss.boolean(Te.attributes.getNamedItem("ShowSkyNode").nodeValue) : D._showSkyNode = !0, Te.attributes.getNamedItem("ShowSkyGrids") != null ? D._showSkyGrids = s.ss.boolean(Te.attributes.getNamedItem("ShowSkyGrids").nodeValue) : D._showSkyGrids = !0, Te.attributes.getNamedItem("ShowSkyOverlaysIn3d") != null && (D._showSkyOverlaysIn3d = s.ss.boolean(Te.attributes.getNamedItem("ShowSkyOverlaysIn3d").nodeValue)), Te.attributes.getNamedItem("EarthCutawayView") != null && (D._earthCutawayView = s.ss.boolean(Te.attributes.getNamedItem("EarthCutawayView").nodeValue)), Te.attributes.getNamedItem("ShowISSModel") != null && (D._showISSModel = s.ss.boolean(Te.attributes.getNamedItem("ShowISSModel").nodeValue)), Te.attributes.getNamedItem("MilkyWayModel") != null && (D._milkyWayModel = s.ss.boolean(Te.attributes.getNamedItem("MilkyWayModel").nodeValue)), Te.attributes.getNamedItem("ConstellationBoundariesFilter") != null ? D._constellationBoundariesFilter = _.ConstellationFilter.parse(Te.attributes.getNamedItem("ConstellationBoundariesFilter").nodeValue) : D._constellationBoundariesFilter = _.ConstellationFilter.get_allConstellation(), Te.attributes.getNamedItem("ConstellationBoundariesFilter") != null ? D._constellationFiguresFilter = _.ConstellationFilter.parse(Te.attributes.getNamedItem("ConstellationBoundariesFilter").nodeValue) : D._constellationFiguresFilter = new _.ConstellationFilter(), Te.attributes.getNamedItem("ConstellationNamesFilter") != null ? D._constellationNamesFilter = _.ConstellationFilter.parse(Te.attributes.getNamedItem("ConstellationNamesFilter").nodeValue) : D._constellationNamesFilter = new _.ConstellationFilter(), Te.attributes.getNamedItem("ConstellationArtFilter") != null ? D._constellationArtFilter = _.ConstellationFilter.parse(Te.attributes.getNamedItem("ConstellationArtFilter").nodeValue) : D._constellationArtFilter = new _.ConstellationFilter(), Te.attributes.getNamedItem("MinorPlanetsFilter") != null && (D._minorPlanetsFilter = parseInt(Te.attributes.getNamedItem("MinorPlanetsFilter").nodeValue)), Te.attributes.getNamedItem("PlanetOrbitsFilter") != null && (D._planetOrbitsFilter = parseInt(Te.attributes.getNamedItem("PlanetOrbitsFilter").nodeValue));
                var ke = o.Util.selectSingleNode(Te, "Place");
                D._target = y.Place._fromXml(ke);
                var Fe = o.Util.selectSingleNode(Te, "EndTarget");
                Fe != null && (D._endTarget = y.Place._fromXml(Fe));
                for (var He = o.Util.selectSingleNode(Te, "Overlays"), We = s.ss.enumerate(He.childNodes); We.moveNext(); ) {
                  var Ke = We.current;
                  Ke.nodeName === "Overlay" && D.addOverlay(Me.Overlay._fromXml(D, Ke));
                }
                var $ = o.Util.selectSingleNode(Te, "MusicTrack");
                $ != null && (D._musicTrack = Me.Overlay._fromXml(D, o.Util.selectSingleNode($, "Overlay")));
                var De = o.Util.selectSingleNode(Te, "VoiceTrack");
                De != null && (D._voiceTrack = Me.Overlay._fromXml(D, o.Util.selectSingleNode(De, "Overlay")));
                var Re = o.Util.selectSingleNode(Te, "VisibleLayers");
                return Re != null && D._loadLayerList(Re), D._thumbnail = Se.getCachedTexture(s.ss.format("{0}.thumb.png", D._id), function() {
                  var Ie = 0;
                }), D;
              } catch (Ie) {
                return t.globalScriptInterface._fireTourError(Ie), null;
              }
            };
            var k = {
              get_keyFramed: function() {
                return this._keyFramed;
              },
              get_tourStopType: function() {
                return this._target.get_backgroundImageset() != null ? this._target.get_backgroundImageset().get_dataSetType() : this._tourStopType;
              },
              set_tourStopType: function(Se) {
                return this._target.get_backgroundImageset() != null && this._target.get_backgroundImageset().get_dataSetType() !== Se && this._target.set_backgroundImageset(null), this._tourStopType = Se, Se;
              },
              get_tweenPosition: function() {
                return this._tweenPosition;
              },
              set_tweenPosition: function(Se) {
                return this._tweenPosition !== Se && (this._tweenPosition = Math.max(0, Math.min(1, Se)), this.updateTweenPosition()), Se;
              },
              updateTweenPosition: function() {
                this.get_keyFramed();
              },
              copy: function() {
                var Se = new l.XmlTextWriter();
                Se._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), this._saveToXml(Se, !0);
                try {
                  var Te = new DOMParser(), D = Te.parseFromString(Se.body, "text/xml"), ke = o.Util.selectSingleNode(D, "TourStop"), Fe = Pe._fromXml(this.get_owner(), ke);
                  return Fe.set_id(Ve.Guid.newGuid().toString()), Fe;
                } catch {
                }
                return null;
              },
              get_owner: function() {
                return this._owner;
              },
              set_owner: function(Se) {
                return this._owner = Se, Se;
              },
              get__transition: function() {
                return this._transition;
              },
              set__transition: function(Se) {
                return this._transition !== Se && (this._transition = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get__transitionTime: function() {
                return this._transitionTime;
              },
              set__transitionTime: function(Se) {
                return this._transitionTime !== Se && (this._transitionTime = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get__transitionHoldTime: function() {
                return this._transitionHoldTime;
              },
              set__transitionHoldTime: function(Se) {
                return this._transitionHoldTime !== Se && (this._transitionHoldTime = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get__transitionOutTime: function() {
                return this._transitionOutTime;
              },
              set__transitionOutTime: function(Se) {
                return this._transitionOutTime !== Se && (this._transitionOutTime = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get_nextSlide: function() {
                return this._nextSlide;
              },
              set_nextSlide: function(Se) {
                return this._nextSlide = Se, Se;
              },
              get_isLinked: function() {
                return !(this._nextSlide == null || this._nextSlide === "Next" || !this._nextSlide);
              },
              get_fadeInOverlays: function() {
                return this._fadeInOverlays;
              },
              set_fadeInOverlays: function(Se) {
                return this._fadeInOverlays = Se, Se;
              },
              get_masterSlide: function() {
                return this._masterSlide;
              },
              set_masterSlide: function(Se) {
                return this._masterSlide !== Se && (this._masterSlide = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get_id: function() {
                return this._id;
              },
              set_id: function(Se) {
                return this._id = Se, this._owner != null && this._owner.set_tourDirty(!0), Se;
              },
              toString: function() {
                return this._target != null ? this.get_target().get_name() : this._description;
              },
              get_description: function() {
                return this._description;
              },
              set_description: function(Se) {
                return this._description !== Se && (this._description = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get_name: function() {
                return this._target != null ? this._target.get_name() : this._name;
              },
              set_name: function(Se) {
                return this._name !== Se && (this._name = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get_duration: function() {
                return this._duration;
              },
              set_duration: function(Se) {
                return this._duration !== Se && (this._duration = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get_target: function() {
                return this._target;
              },
              set_target: function(Se) {
                return this._target !== Se && (this._target = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get_endTarget: function() {
                return this._endTarget;
              },
              set_endTarget: function(Se) {
                return this._endTarget !== Se && (this._endTarget = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get_interpolationType: function() {
                return this._interpolationType;
              },
              set_interpolationType: function(Se) {
                return this._interpolationType = Se, Se;
              },
              get_hasLocation: function() {
                return this._hasTime;
              },
              set_hasLocation: function(Se) {
                return this._hasLocation !== Se && (this._hasLocation = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get_hasTime: function() {
                return this._hasTime;
              },
              set_hasTime: function(Se) {
                return this._hasTime !== Se && (this._hasTime = this._hasLocation = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get_startTime: function() {
                return this._startTime;
              },
              set_startTime: function(Se) {
                return this._startTime = Se, s.ss.compareDates(this._startTime, Se) || (this._startTime = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get_endTime: function() {
                return this._endTime;
              },
              set_endTime: function(Se) {
                return s.ss.compareDates(this._endTime, Se) || (this._endTime = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              captureSettings: function() {
                this._startTime = Ee.SpaceTimeController.get_now(), this._actualPlanetScale = g.Settings.get_current().get_actualPlanetScale(), this._locationAltitude = g.Settings.get_current().get_locationAltitude(), this._locationLat = g.Settings.get_current().get_locationLat(), this._locationLng = g.Settings.get_current().get_locationLng(), this._showClouds = g.Settings.get_current().get_showClouds(), this._showConstellationBoundries = g.Settings.get_current().get_showConstellationBoundries(), this._showConstellationFigures = g.Settings.get_current().get_showConstellationFigures(), this._showConstellationSelection = g.Settings.get_current().get_showConstellationSelection(), this._showEcliptic = g.Settings.get_current().get_showEcliptic(), this._showElevationModel = g.Settings.get_current().get_showElevationModel(), this._showFieldOfView = g.Settings.get_current().get_showFieldOfView(), this._showGrid = g.Settings.get_current().get_showGrid(), this._showHorizon = g.Settings.get_current().get_showHorizon(), this._showHorizonPanorama = g.Settings.get_current().get_showHorizonPanorama(), this._showMoonsAsPointSource = g.Settings.get_current().get_showMoonsAsPointSource(), this._showSolarSystem = g.Settings.get_current().get_showSolarSystem(), this._fovTelescope = g.Settings.get_current().get_fovTelescope(), this._fovEyepiece = g.Settings.get_current().get_fovEyepiece(), this._fovCamera = g.Settings.get_current().get_fovCamera(), this._localHorizonMode = g.Settings.get_current().get_localHorizonMode(), this._galacticMode = g.Settings.get_current().get_galacticMode(), this._solarSystemStars = g.Settings.get_current().get_solarSystemStars(), this._solarSystemMilkyWay = g.Settings.get_current().get_solarSystemMilkyWay(), this._solarSystemCosmos = g.Settings.get_current().get_solarSystemCosmos(), this._solarSystemOrbits = g.Settings.get_current().get_solarSystemOrbits(), this._solarSystemOverlays = g.Settings.get_current().get_solarSystemOverlays(), this._solarSystemLighting = g.Settings.get_current().get_solarSystemLighting(), this._solarSystemScale = g.Settings.get_current().get_solarSystemScale(), this._solarSystemMultiRes = g.Settings.get_current().get_solarSystemMultiRes(), this._showEquatorialGridText = g.Settings.get_current().get_showEquatorialGridText(), this._showGalacticGrid = g.Settings.get_current().get_showGalacticGrid(), this._showGalacticGridText = g.Settings.get_current().get_showGalacticGridText(), this._showEclipticGrid = g.Settings.get_current().get_showEclipticGrid(), this._showEclipticGridText = g.Settings.get_current().get_showEclipticGridText(), this._showEclipticOverviewText = g.Settings.get_current().get_showEclipticOverviewText(), this._showAltAzGrid = g.Settings.get_current().get_showAltAzGrid(), this._showAltAzGridText = g.Settings.get_current().get_showAltAzGridText(), this._showPrecessionChart = g.Settings.get_current().get_showPrecessionChart(), this._showConstellationPictures = g.Settings.get_current().get_showConstellationPictures(), this._showConstellationLabels = g.Settings.get_current().get_showConstellationLabels(), this._solarSystemCMB = g.Settings.get_current().get_solarSystemCMB(), this._solarSystemMinorPlanets = g.Settings.get_current().get_solarSystemMinorPlanets(), this._solarSystemPlanets = g.Settings.get_current().get_solarSystemPlanets(), this._showEarthSky = g.Settings.get_current().get_showEarthSky(), this._solarSystemMinorOrbits = g.Settings.get_current().get_solarSystemMinorOrbits(), this._constellationFiguresFilter = g.Settings.get_current().get_constellationFiguresFilter().clone(), this._constellationBoundariesFilter = g.Settings.get_current().get_constellationBoundariesFilter().clone(), this._constellationNamesFilter = g.Settings.get_current().get_constellationNamesFilter().clone(), this._constellationArtFilter = g.Settings.get_current().get_constellationArtFilter().clone(), this._showSkyOverlays = g.Settings.get_current().get_showSkyOverlays(), this._showConstellations = g.Settings.get_current().get_showConstellations(), this._showSkyNode = g.Settings.get_current().get_showSkyNode(), this._showSkyGrids = g.Settings.get_current().get_showSkyGrids(), this._showSkyOverlaysIn3d = g.Settings.get_current().get_showSkyOverlaysIn3d(), this._earthCutawayView = g.Settings.get_current().get_earthCutawayView(), this._showISSModel = g.Settings.get_current().get_showISSModel(), this._milkyWayModel = g.Settings.get_current().get_milkyWayModel(), this._minorPlanetsFilter = g.Settings.get_current().get_minorPlanetsFilter(), this._planetOrbitsFilter = g.Settings.get_current().get_planetOrbitsFilter();
              },
              syncSettings: function() {
                g.Settings.get_globalSettings().set_actualPlanetScale(this._actualPlanetScale), g.Settings.get_globalSettings().set_locationAltitude(this._locationAltitude), g.Settings.get_globalSettings().set_locationLat(this._locationLat), g.Settings.get_globalSettings().set_locationLng(this._locationLng), g.Settings.get_globalSettings().set_earthCutawayView(this._earthCutawayView), g.Settings.get_globalSettings().set_showConstellationBoundries(this._showConstellationBoundries), g.Settings.get_globalSettings().set_showConstellationFigures(this._showConstellationFigures), g.Settings.get_globalSettings().set_showConstellationSelection(this._showConstellationSelection), g.Settings.get_globalSettings().set_showEcliptic(this._showEcliptic), g.Settings.get_globalSettings().set_showElevationModel(this._showElevationModel), g.Settings.get_globalSettings().set_showGrid(this._showGrid), g.Settings.get_globalSettings().set_showHorizon(this._showHorizon), g.Settings.get_globalSettings().set_showSolarSystem(this._showSolarSystem), g.Settings.get_globalSettings().set_localHorizonMode(this._localHorizonMode), g.Settings.get_globalSettings().set_galacticMode(this._galacticMode), g.Settings.get_globalSettings().set_solarSystemStars(this._solarSystemStars), g.Settings.get_globalSettings().set_solarSystemMilkyWay(this._solarSystemMilkyWay), g.Settings.get_globalSettings().set_solarSystemCosmos(this._solarSystemCosmos), g.Settings.get_globalSettings().set_solarSystemCMB(this._solarSystemCMB), g.Settings.get_globalSettings().set_solarSystemOrbits(this._solarSystemOrbits), g.Settings.get_globalSettings().set_solarSystemMinorOrbits(this._solarSystemMinorOrbits), g.Settings.get_globalSettings().set_solarSystemMinorPlanets(this._solarSystemMinorPlanets), g.Settings.get_globalSettings().set_solarSystemOverlays(this._solarSystemOverlays), g.Settings.get_globalSettings().set_solarSystemLighting(this._solarSystemLighting), g.Settings.get_globalSettings().set_showISSModel(this._showISSModel), g.Settings.get_globalSettings().set_solarSystemScale(this._solarSystemScale), g.Settings.get_globalSettings().set_solarSystemMultiRes(this._solarSystemMultiRes), g.Settings.get_globalSettings().set_showEarthSky(this._showEarthSky), g.Settings.get_globalSettings().set_minorPlanetsFilter(this._minorPlanetsFilter), g.Settings.get_globalSettings().set_planetOrbitsFilter(this._planetOrbitsFilter), g.Settings.get_globalSettings().set_showEquatorialGridText(this._showEquatorialGridText), g.Settings.get_globalSettings().set_showGalacticGrid(this._showGalacticGrid), g.Settings.get_globalSettings().set_showGalacticGridText(this._showGalacticGridText), g.Settings.get_globalSettings().set_showEclipticGrid(this._showEclipticGrid), g.Settings.get_globalSettings().set_showEclipticGridText(this._showEclipticGridText), g.Settings.get_globalSettings().set_showEclipticOverviewText(this._showEclipticOverviewText), g.Settings.get_globalSettings().set_showAltAzGrid(this._showAltAzGrid), g.Settings.get_globalSettings().set_showAltAzGridText(this._showAltAzGridText), g.Settings.get_globalSettings().set_showPrecessionChart(this._showPrecessionChart), g.Settings.get_globalSettings().set_showConstellationPictures(this._showConstellationPictures), g.Settings.get_globalSettings().set_constellationsEnabled(this._constellationsEnabled), g.Settings.get_globalSettings().set_showSkyOverlays(this._showSkyOverlays), g.Settings.get_globalSettings().set_constellations(this._showConstellations), g.Settings.get_globalSettings().set_showSkyNode(this._showSkyNode), g.Settings.get_globalSettings().set_showSkyGrids(this._showSkyGrids), g.Settings.get_globalSettings().set_constellationFiguresFilter(this._constellationFiguresFilter.clone()), g.Settings.get_globalSettings().set_constellationBoundariesFilter(this._constellationBoundariesFilter.clone()), g.Settings.get_globalSettings().set_constellationNamesFilter(this._constellationNamesFilter.clone()), g.Settings.get_globalSettings().set_constellationArtFilter(this._constellationArtFilter.clone());
              },
              get_solarSystemStars: function() {
                return this._solarSystemStars;
              },
              get_solarSystemMultiRes: function() {
                return this._solarSystemMultiRes;
              },
              get_solarSystemMilkyWay: function() {
                return this._solarSystemMilkyWay;
              },
              get_solarSystemCosmos: function() {
                return this._solarSystemCosmos;
              },
              get_solarSystemOrbits: function() {
                return this._solarSystemOrbits;
              },
              get_solarSystemOverlays: function() {
                return this._solarSystemOverlays;
              },
              get_solarSystemLighting: function() {
                return this._solarSystemLighting;
              },
              get_solarSystemScale: function() {
                return this._solarSystemScale;
              },
              get_actualPlanetScale: function() {
                return this._actualPlanetScale;
              },
              get_fovCamera: function() {
                return this._fovCamera;
              },
              get_fovEyepiece: function() {
                return this._fovEyepiece;
              },
              get_fovTelescope: function() {
                return this._fovTelescope;
              },
              get_locationAltitude: function() {
                return this._hasLocation ? this._locationAltitude : g.Settings.get_current().get_locationAltitude();
              },
              get_locationLat: function() {
                return this._hasLocation ? this._locationLat : g.Settings.get_current().get_locationLat();
              },
              get_locationLng: function() {
                return this._hasLocation ? this._locationLng : g.Settings.get_current().get_locationLng();
              },
              get_showClouds: function() {
                return this._showClouds;
              },
              get_showConstellationBoundries: function() {
                return this._showConstellationBoundries;
              },
              get_showConstellationFigures: function() {
                return this._showConstellationFigures;
              },
              get_showConstellationSelection: function() {
                return this._showConstellationSelection;
              },
              get_showEcliptic: function() {
                return this._showEcliptic;
              },
              get_showElevationModel: function() {
                return this._showElevationModel;
              },
              get_showFieldOfView: function() {
                return this._showFieldOfView;
              },
              get_showGrid: function() {
                return this._showGrid;
              },
              get_showHorizon: function() {
                return this._showHorizon;
              },
              get_showHorizonPanorama: function() {
                return this._showHorizonPanorama;
              },
              get_showMoonsAsPointSource: function() {
                return this._showMoonsAsPointSource;
              },
              get_showSolarSystem: function() {
                return this._showSolarSystem;
              },
              get_localHorizonMode: function() {
                return this._localHorizonMode;
              },
              get_galacticMode: function() {
                return this._galacticMode;
              },
              get_thumbnail: function() {
                return this._target != null && this._thumbnail == null ? null : this._thumbnail;
              },
              set_thumbnail: function(Se) {
                return this._thumbnail = Se, this._owner != null && this._owner.set_tourDirty(!0), Se;
              },
              get_overlays: function() {
                return this._overlays;
              },
              get_musicTrack: function() {
                return this._musicTrack;
              },
              set_musicTrack: function(Se) {
                return this._musicTrack !== Se && (this._musicTrack = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              get_voiceTrack: function() {
                return this._voiceTrack;
              },
              set_voiceTrack: function(Se) {
                return this._voiceTrack !== Se && (this._voiceTrack = Se, this._owner != null && this._owner.set_tourDirty(!0)), Se;
              },
              addOverlay: function(Se) {
                Se != null && (Se.set_owner(this), this._overlays.push(Se), this._owner != null && this._owner.set_tourDirty(!0));
              },
              removeOverlay: function(Se) {
                s.ss.remove(this._overlays, Se), this._owner != null && this._owner.set_tourDirty(!0);
              },
              cleanUp: function() {
                for (var Se = s.ss.enumerate(this.get_overlays()); Se.moveNext(); ) {
                  var Te = Se.current;
                  Te.cleanUp();
                }
                this._voiceTrack != null && this._voiceTrack.cleanUp(), this._musicTrack != null && this._musicTrack.cleanUp();
              },
              sendToBack: function(Se) {
                s.ss.remove(this._overlays, Se), this._overlays.splice(0, 0, Se), this._owner != null && this._owner.set_tourDirty(!0);
              },
              bringToFront: function(Se) {
                s.ss.remove(this._overlays, Se), this._overlays.push(Se), this._owner != null && this._owner.set_tourDirty(!0);
              },
              bringForward: function(Se) {
                var Te = this._overlays.indexOf(Se);
                Te < this._overlays.length - 1 && (s.ss.remove(this._overlays, Se), this._overlays.splice(Te + 1, 0, Se)), this._owner != null && this._owner.set_tourDirty(!0);
              },
              sendBackward: function(Se) {
                var Te = this._overlays.indexOf(Se);
                Te > 0 && (s.ss.remove(this._overlays, Se), this._overlays.splice(Te - 1, 0, Se)), this._owner != null && this._owner.set_tourDirty(!0);
              },
              getNextOverlay: function(Se) {
                if (Se == null)
                  return this._overlays.length > 0 ? this._overlays[0] : null;
                var Te = this._overlays.indexOf(Se);
                return Te < this._overlays.length - 1 ? this._overlays[Te + 1] : this._overlays[0];
              },
              getPerviousOverlay: function(Se) {
                if (Se == null)
                  return this._overlays.length > 0 ? this._overlays[0] : null;
                var Te = this._overlays.indexOf(Se);
                return Te > 0 ? this._overlays[Te - 1] : this._overlays[this._overlays.length - 1];
              },
              getOverlayById: function(Se) {
                for (var Te = s.ss.enumerate(this._overlays); Te.moveNext(); ) {
                  var D = Te.current;
                  if (D.id === Se)
                    return D;
                }
                return null;
              },
              get_tourStopThumbnailFilename: function() {
                return s.ss.format("{0}.thumb.png", this._id);
              },
              _saveToXml: function(Se, Te) {
                Te && this._thumbnail != null, Se._writeStartElement("TourStop"), Se._writeAttributeString("Id", this._id), Se._writeAttributeString("Name", this._name), Se._writeAttributeString("Description", this._description), Se._writeAttributeString("Thumbnail", this._thumbnailString), Se._writeAttributeString("Duration", o.Util.xmlDuration(this._duration)), Se._writeAttributeString("Master", this._masterSlide.toString()), Se._writeAttributeString("TransitionType", a.Enums.toXml("TransitionType", this._transition)), Se._writeAttributeString("TransitionTime", this._transitionTime.toString()), Se._writeAttributeString("TransitionOutTime", this._transitionOutTime.toString()), Se._writeAttributeString("TransitionHoldTime", this._transitionHoldTime.toString()), Se._writeAttributeString("NextSlide", this._nextSlide), Se._writeAttributeString("InterpolationType", a.Enums.toXml("InterpolationType", this._interpolationType)), Se._writeAttributeString("HasLocation", this._hasLocation.toString()), this._hasLocation && (Se._writeAttributeString("LocationAltitude", this._locationAltitude.toString()), Se._writeAttributeString("LocationLat", this._locationLat.toString()), Se._writeAttributeString("LocationLng", this._locationLng.toString())), Se._writeAttributeString("HasTime", this._hasTime.toString()), this._hasTime && (Se._writeAttributeString("StartTime", o.Util.xmlDate(this._startTime)), Se._writeAttributeString("EndTime", o.Util.xmlDate(this._endTime))), Se._writeAttributeString("ActualPlanetScale", this._actualPlanetScale.toString()), Se._writeAttributeString("ShowClouds", this._showClouds.toString()), Se._writeAttributeString("EarthCutawayView", this._earthCutawayView.toString()), Se._writeAttributeString("ShowConstellationBoundries", this._showConstellationBoundries.toString()), Se._writeAttributeString("ShowConstellationFigures", this._showConstellationFigures.toString()), Se._writeAttributeString("ShowConstellationSelection", this._showConstellationSelection.toString()), Se._writeAttributeString("ShowEcliptic", this._showEcliptic.toString()), Se._writeAttributeString("EclipticColor", this._eclipticColor.save()), Se._writeAttributeString("ShowElevationModel", this._showElevationModel.toString()), this._showFieldOfView = !1, Se._writeAttributeString("ShowFieldOfView", this._showFieldOfView.toString()), Se._writeAttributeString("ShowGrid", this._showGrid.toString()), Se._writeAttributeString("ShowHorizon", this._showHorizon.toString()), Se._writeAttributeString("ShowHorizonPanorama", this._showHorizonPanorama.toString()), Se._writeAttributeString("ShowMoonsAsPointSource", this._showMoonsAsPointSource.toString()), Se._writeAttributeString("ShowSolarSystem", this._showSolarSystem.toString()), Se._writeAttributeString("FovTelescope", this._fovTelescope.toString()), Se._writeAttributeString("FovEyepiece", this._fovEyepiece.toString()), Se._writeAttributeString("FovCamera", this._fovCamera.toString()), Se._writeAttributeString("LocalHorizonMode", this._localHorizonMode.toString()), Se._writeAttributeString("GalacticMode", this._galacticMode.toString()), Se._writeAttributeString("FadeInOverlays", this._fadeInOverlays.toString()), Se._writeAttributeString("SolarSystemStars", this._solarSystemStars.toString()), Se._writeAttributeString("SolarSystemMilkyWay", this._solarSystemMilkyWay.toString()), Se._writeAttributeString("SolarSystemCosmos", this._solarSystemCosmos.toString()), Se._writeAttributeString("SolarSystemCMB", this._solarSystemCMB.toString()), Se._writeAttributeString("SolarSystemOrbits", this._solarSystemOrbits.toString()), Se._writeAttributeString("SolarSystemMinorOrbits", this._solarSystemMinorOrbits.toString()), Se._writeAttributeString("SolarSystemOverlays", this._solarSystemOverlays.toString()), Se._writeAttributeString("SolarSystemLighting", this._solarSystemLighting.toString()), Se._writeAttributeString("ShowISSModel", this._showISSModel.toString()), Se._writeAttributeString("SolarSystemScale", this._solarSystemScale.toString()), Se._writeAttributeString("MinorPlanetsFilter", this._minorPlanetsFilter.toString()), Se._writeAttributeString("PlanetOrbitsFilter", this._planetOrbitsFilter.toString()), Se._writeAttributeString("SolarSystemMultiRes", this._solarSystemMultiRes.toString()), Se._writeAttributeString("SolarSystemMinorPlanets", this._solarSystemMinorPlanets.toString()), Se._writeAttributeString("SolarSystemPlanets", this._solarSystemPlanets.toString()), Se._writeAttributeString("ShowEarthSky", this._showEarthSky.toString()), Se._writeAttributeString("ShowEquatorialGridText", this.get_showEquatorialGridText().toString()), Se._writeAttributeString("EquatorialGridColor", this.get_equatorialGridColor().save()), Se._writeAttributeString("ShowGalacticGrid", this.get_showGalacticGrid().toString()), Se._writeAttributeString("ShowGalacticGridText", this.get_showGalacticGridText().toString()), Se._writeAttributeString("GalacticGridColor", this.get_galacticGridColor().save()), Se._writeAttributeString("ShowEclipticGrid", this.get_showEclipticGrid().toString()), Se._writeAttributeString("ShowEclipticGridText", this.get_showEclipticGridText().toString()), Se._writeAttributeString("EclipticGridColor", this.get_eclipticGridColor().save()), Se._writeAttributeString("ShowEclipticOverviewText", this.get_showEclipticOverviewText().toString()), Se._writeAttributeString("ShowAltAzGrid", this.get_showAltAzGrid().toString()), Se._writeAttributeString("ShowAltAzGridText", this.get_showAltAzGridText().toString()), Se._writeAttributeString("AltAzGridColor", this.get_altAzGridColor().save()), Se._writeAttributeString("ShowPrecessionChart", this.get_showPrecessionChart().toString()), Se._writeAttributeString("PrecessionChartColor", this.get_precessionChartColor().save()), Se._writeAttributeString("ConstellationPictures", this.get_showConstellationPictures().toString()), Se._writeAttributeString("ConstellationsEnabled", this.get_constellationsEnabled()), Se._writeAttributeString("ShowConstellationLabels", this.get_showConstellationLabels().toString()), Se._writeAttributeString("ShowSkyOverlays", this.get_showSkyOverlays().toString()), Se._writeAttributeString("ShowConstellations", this.get_showConstellations().toString()), Se._writeAttributeString("ShowSkyNode", this.get_showSkyNode().toString()), Se._writeAttributeString("ShowSkyGrids", this.get_showSkyGrids().toString()), Se._writeAttributeString("SkyOverlaysIn3d", this.get_showSkyOverlaysIn3d().toString()), Se._writeAttributeString("ConstellationFiguresFilter", this._constellationFiguresFilter.toString()), Se._writeAttributeString("ConstellationBoundariesFilter", this._constellationBoundariesFilter.toString()), Se._writeAttributeString("ConstellationNamesFilter", this._constellationNamesFilter.toString()), Se._writeAttributeString("ConstellationArtFilter", this._constellationArtFilter.toString()), this._target._saveToXml(Se, "Place"), this._endTarget != null && this._endTarget._saveToXml(Se, "EndTarget"), Se._writeStartElement("Overlays");
                for (var D = s.ss.enumerate(this._overlays); D.moveNext(); ) {
                  var ke = D.current;
                  ke.saveToXml(Se, !1);
                }
                Se._writeEndElement(), this._musicTrack != null && (Se._writeStartElement("MusicTrack"), this._musicTrack.saveToXml(Se, !1), Se._writeEndElement()), this._voiceTrack != null && (Se._writeStartElement("VoiceTrack"), this._voiceTrack.saveToXml(Se, !1), Se._writeEndElement()), this._writeLayerList(Se), Se._writeEndElement();
              },
              _writeLayerList: function(Se) {
                if (s.ss.keyCount(this.layers) > 0) {
                  Se._writeStartElement("VisibleLayers");
                  for (var Te = s.ss.enumerate(s.ss.keys(this.layers)); Te.moveNext(); ) {
                    var D = Te.current, ke = this.layers[D];
                    Se._writeStartElement("Layer"), Se._writeAttributeString("StartOpacity", ke.startOpacity.toString()), Se._writeAttributeString("EndOpacity", ke.endOpacity.toString());
                    var Fe = ke.startParams.length;
                    Se._writeAttributeString("ParamCount", Fe.toString());
                    for (var He = 0; He < Fe; He++)
                      Se._writeAttributeString(s.ss.format("StartParam{0}", He), ke.startParams[He].toString()), Se._writeAttributeString(s.ss.format("EndParam{0}", He), ke.endParams[He].toString());
                    Se._writeValue(ke.id.toString()), Se._writeEndElement();
                  }
                  Se._writeEndElement();
                }
              },
              _addFilesToCabinet: function(Se, Te) {
                if (this._thumbnail != null) {
                  var D = s.ss.format("{0}.thumb.png", this._id), ke = this._owner.getFileBlob(D);
                  Se.addFile(this._owner.get_workingDirectory() + D, ke);
                }
                Te || (this._musicTrack != null && this._musicTrack.addFilesToCabinet(Se), this._voiceTrack != null && this._voiceTrack.addFilesToCabinet(Se));
                for (var Fe = s.ss.enumerate(this._overlays); Fe.moveNext(); ) {
                  var He = Fe.current;
                  He.addFilesToCabinet(Se);
                }
              },
              getNextDefaultName: function(Se) {
                for (var Te = 1, D = s.ss.enumerate(this._overlays); D.moveNext(); ) {
                  var ke = D.current;
                  if (s.ss.startsWith(ke.get_name(), Se)) {
                    var Fe = 0;
                    try {
                      Fe = parseInt(ke.get_name().substr(Se.length));
                    } catch {
                    }
                    Fe >= Te && (Te = Fe + 1);
                  }
                }
                return s.ss.format("{0} {1}", Se, Te);
              },
              _loadLayerList: function(Se) {
                for (var Te = s.ss.enumerate(Se.childNodes); Te.moveNext(); ) {
                  var D = Te.current;
                  if (D.nodeName === "Layer") {
                    var ke = new b(), Fe = D.innerHTML;
                    ke.id = Ve.Guid.fromString(Fe), ke.startOpacity = parseFloat(D.attributes.getNamedItem("StartOpacity").nodeValue), ke.endOpacity = parseFloat(D.attributes.getNamedItem("EndOpacity").nodeValue);
                    var He = 0;
                    D.attributes.getNamedItem("ParamCount") != null && (He = parseInt(D.attributes.getNamedItem("ParamCount").nodeValue)), ke.startParams = new Array(He), ke.endParams = new Array(He), ke.frameParams = new Array(He);
                    for (var We = 0; We < He; We++)
                      ke.startParams[We] = parseFloat(D.attributes.getNamedItem(s.ss.format("StartParam{0}", We)).nodeValue), ke.endParams[We] = parseFloat(D.attributes.getNamedItem(s.ss.format("EndParam{0}", We)).nodeValue), ke.frameParams[We] = ke.startParams[We];
                    this.layers[ke.id] = ke;
                  }
                }
              },
              _updateLayerOpacity: function() {
                this.get_keyFramed() && this.updateTweenPosition();
              },
              get_showEquatorialGridText: function() {
                return this._showEquatorialGridText;
              },
              set_showEquatorialGridText: function(Se) {
                return this._showEquatorialGridText = Se, Se;
              },
              get_showGalacticGrid: function() {
                return this._showGalacticGrid;
              },
              set_showGalacticGrid: function(Se) {
                return this._showGalacticGrid = Se, Se;
              },
              get_showGalacticGridText: function() {
                return this._showGalacticGridText;
              },
              set_showGalacticGridText: function(Se) {
                return this._showGalacticGridText = Se, Se;
              },
              get_showEclipticGrid: function() {
                return this._showEclipticGrid;
              },
              set_showEclipticGrid: function(Se) {
                return this._showEclipticGrid = Se, Se;
              },
              get_showEclipticGridText: function() {
                return this._showEclipticGridText;
              },
              set_showEclipticGridText: function(Se) {
                return this._showEclipticGridText = Se, Se;
              },
              get_showEclipticOverviewText: function() {
                return this._showEclipticOverviewText;
              },
              set_showEclipticOverviewText: function(Se) {
                return this._showEclipticOverviewText = Se, Se;
              },
              get_showAltAzGrid: function() {
                return this._showAltAzGrid;
              },
              set_showAltAzGrid: function(Se) {
                return this._showAltAzGrid = Se, Se;
              },
              get_showAltAzGridText: function() {
                return this._showAltAzGridText;
              },
              set_showAltAzGridText: function(Se) {
                return this._showAltAzGridText = Se, Se;
              },
              get_showPrecessionChart: function() {
                return this._showPrecessionChart;
              },
              set_showPrecessionChart: function(Se) {
                return this._showPrecessionChart = Se, Se;
              },
              get_showConstellationPictures: function() {
                return this._showConstellationPictures;
              },
              set_showConstellationPictures: function(Se) {
                return this._showConstellationPictures = Se, Se;
              },
              get_showConstellationLabels: function() {
                return this._showConstellationLabels;
              },
              set_showConstellationLabels: function(Se) {
                return this._showConstellationLabels = Se, Se;
              },
              get_solarSystemCMB: function() {
                return this._solarSystemCMB;
              },
              set_solarSystemCMB: function(Se) {
                return this._solarSystemCMB = Se, Se;
              },
              get_solarSystemMinorPlanets: function() {
                return this._solarSystemMinorPlanets;
              },
              set_solarSystemMinorPlanets: function(Se) {
                return this._solarSystemMinorPlanets = Se, Se;
              },
              get_solarSystemPlanets: function() {
                return this._solarSystemPlanets;
              },
              set_solarSystemPlanets: function(Se) {
                return this._solarSystemPlanets = Se, Se;
              },
              get_showEarthSky: function() {
                return this._showEarthSky;
              },
              set_showEarthSky: function(Se) {
                return this._showEarthSky = Se, Se;
              },
              get_solarSystemMinorOrbits: function() {
                return this._solarSystemMinorOrbits;
              },
              set_solarSystemMinorOrbits: function(Se) {
                return this._solarSystemMinorOrbits = Se, Se;
              },
              get_constellationsEnabled: function() {
                return this._constellationsEnabled;
              },
              set_constellationsEnabled: function(Se) {
                return this._constellationsEnabled = Se, Se;
              },
              get_constellationFiguresFilter: function() {
                return this._constellationFiguresFilter;
              },
              set_constellationFiguresFilter: function(Se) {
                return this._constellationFiguresFilter = Se, Se;
              },
              get_constellationBoundariesFilter: function() {
                return this._constellationBoundariesFilter;
              },
              set_constellationBoundariesFilter: function(Se) {
                return this._constellationBoundariesFilter = Se, Se;
              },
              get_constellationNamesFilter: function() {
                return this._constellationNamesFilter;
              },
              set_constellationNamesFilter: function(Se) {
                return this._constellationNamesFilter = Se, Se;
              },
              get_constellationArtFilter: function() {
                return this._constellationArtFilter;
              },
              set_constellationArtFilter: function(Se) {
                return this._constellationArtFilter = Se, Se;
              },
              get_showSkyOverlays: function() {
                return this._showSkyOverlays;
              },
              set_showSkyOverlays: function(Se) {
                return this._showSkyOverlays = Se, Se;
              },
              get_showConstellations: function() {
                return this._showConstellations;
              },
              set_showConstellations: function(Se) {
                return this._showConstellations = Se, Se;
              },
              get_showSkyNode: function() {
                return this._showSkyNode;
              },
              set_showSkyNode: function(Se) {
                return this._showSkyNode = Se, Se;
              },
              get_showSkyGrids: function() {
                return this._showSkyGrids;
              },
              set_showSkyGrids: function(Se) {
                return this._showSkyGrids = Se, Se;
              },
              get_showSkyOverlaysIn3d: function() {
                return this._showSkyOverlaysIn3d;
              },
              set_showSkyOverlaysIn3d: function(Se) {
                return this._showSkyOverlaysIn3d = Se, Se;
              },
              get_earthCutawayView: function() {
                return this._earthCutawayView;
              },
              set_earthCutawayView: function(Se) {
                return this._earthCutawayView = Se, Se;
              },
              get_showISSModel: function() {
                return this._showISSModel;
              },
              set_showISSModel: function(Se) {
                return this._showISSModel = Se, Se;
              },
              get_milkyWayModel: function() {
                return this._milkyWayModel;
              },
              set_milkyWayModel: function(Se) {
                return this._milkyWayModel = Se, Se;
              },
              get_minorPlanetsFilter: function() {
                return this._minorPlanetsFilter;
              },
              set_minorPlanetsFilter: function(Se) {
                return this._minorPlanetsFilter = Se, Se;
              },
              get_planetOrbitsFilter: function() {
                return this._planetOrbitsFilter;
              },
              set_planetOrbitsFilter: function(Se) {
                return this._planetOrbitsFilter = Se, Se;
              },
              getSetting: function(Se) {
                return Se === 17 ? new g.SettingParameter(!0, this.faderOpacity, !!this.faderOpacity, null) : new g.SettingParameter(!1, 1, !1, null);
              },
              get_eclipticGridColor: function() {
                return this._eclipticGridColor;
              },
              set_eclipticGridColor: function(Se) {
                return this._eclipticGridColor = Se, Se;
              },
              get_galacticGridColor: function() {
                return this._galacticGridColor;
              },
              set_galacticGridColor: function(Se) {
                return this._galacticGridColor = Se, Se;
              },
              get_altAzGridColor: function() {
                return this._altAzGridColor;
              },
              set_altAzGridColor: function(Se) {
                return this._altAzGridColor = Se, Se;
              },
              get_precessionChartColor: function() {
                return this._precessionChartColor;
              },
              set_precessionChartColor: function(Se) {
                return this._precessionChartColor = Se, Se;
              },
              get_eclipticColor: function() {
                return this._eclipticColor;
              },
              set_eclipticColor: function(Se) {
                return this._eclipticColor = Se, Se;
              },
              get_equatorialGridColor: function() {
                return this._equatorialGridColor;
              },
              set_equatorialGridColor: function(Se) {
                return this._equatorialGridColor = Se, Se;
              },
              get_constellationLabelsHeight: function() {
                return this._constellationLabelsHeight;
              },
              set_constellationLabelsHeight: function(Se) {
                return this._constellationLabelsHeight = Se, Se;
              }
            };
            (0, a.registerType)("TourStop", [Pe, k, null, u.ISettings]);
            function b() {
              this.id = Ve.Guid.newGuid(), this.startOpacity = 1, this.endOpacity = 1, this.frameOpacity = 1, this.startParams = new Array(0), this.endParams = new Array(0), this.frameParams = new Array(0);
            }
            var Le = {};
            (0, a.registerType)("LayerInfo", [b, Le, null]);
            function xe(Se, Te) {
              this._undoXml = "", this._redoXml = "", this._currentIndex = 0, this._actionText = "", this._targetTour = null, this._currentIndex = Te.get_currentTourstopIndex(), this._actionText = Se, this._targetTour = Te, this._undoXml = Pe.getXmlText(Te.get_currentTourStop()), this._targetTour.set_tourDirty(!0);
            }
            var ze = {
              get_actionText: function() {
                return this._actionText;
              },
              set_actionText: function(Se) {
                return this._actionText = Se, Se;
              },
              undo: function() {
                var Se = this._targetTour.get_tourStops()[this._currentIndex], Te = new DOMParser(), D = Te.parseFromString(this._undoXml, "text/xml"), ke = o.Util.selectSingleNode(D, "TourStop");
                this._targetTour.get_tourStops()[this._currentIndex] = Pe._fromXml(this._targetTour, ke), this._targetTour.set_currentTourstopIndex(this._currentIndex), s.ss.emptyString(this._redoXml) && (this._redoXml = Pe.getXmlText(Se)), this._targetTour.set_tourDirty(!0);
              },
              redo: function() {
                var Se = new DOMParser(), Te = Se.parseFromString(this._redoXml, "text/xml"), D = o.Util.selectSingleNode(Te, "TourStop");
                this._targetTour.get_tourStops()[this._currentIndex] = Pe._fromXml(this._targetTour, D), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
              },
              toString: function() {
                return this._actionText;
              }
            };
            (0, a.registerType)("UndoTourStopChange", [xe, ze, null, u.IUndoStep]);
          }
        ),
        /***/
        "./esm/tours/undo.js": (
          /*!***************************!*\
            !*** ./esm/tours/undo.js ***!
            \***************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Undo: () => (
                /* binding */
                o
              ),
              /* harmony export */
              UndoStep: () => (
                /* binding */
                _
              ),
              /* harmony export */
              UndoTourPropertiesChange: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              UndoTourSlidelistChange: () => (
                /* binding */
                y
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../interfaces.js */
              "./esm/interfaces.js"
            ), l = n(
              /*! ../util.js */
              "./esm/util.js"
            );
            function o() {
            }
            o._undoStack = new s.ss.Stack(), o._redoStack = new s.ss.Stack(), o.clear = function() {
              o._undoStack = new s.ss.Stack(), o._redoStack = new s.ss.Stack();
            }, o.push = function(Me) {
              o._undoStack.push(Me), o._redoStack = new s.ss.Stack();
            }, o.peekActionString = function() {
              return o._undoStack.count > 0 ? o._undoStack.peek().toString() : l.Language.getLocalizedText(551, "Nothing to Undo");
            }, o.peekRedoActionString = function() {
              return o._redoStack.count > 0 ? o._redoStack.peek().toString() : "";
            }, o.peekAction = function() {
              return o._undoStack.count > 0;
            }, o.peekRedoAction = function() {
              return o._redoStack.count > 0;
            }, o.stepBack = function() {
              var Me = o._undoStack.pop();
              Me.undo(), o._redoStack.push(Me);
            }, o.stepForward = function() {
              var Me = o._redoStack.pop();
              Me.redo(), o._undoStack.push(Me);
            };
            var c = {};
            (0, a.registerType)("Undo", [o, c, null]);
            function _() {
            }
            var u = {
              undo: function() {
              },
              redo: function() {
              },
              toString: function() {
                return l.Language.getLocalizedText(551, "Nothing to Undo");
              }
            };
            (0, a.registerType)("UndoStep", [_, u, null, t.IUndoStep]);
            function y(Me, B) {
              this._currentIndex = 0, this._actionText = "", this._targetTour = null, this._undoList = [];
              for (var Pe = 0; Pe < B.get_tourStops().length; Pe++)
                this._undoList.push(B.get_tourStops()[Pe]);
              this._currentIndex = B.get_currentTourstopIndex(), this._actionText = Me, this._targetTour = B, this._targetTour.set_tourDirty(!0);
            }
            var g = {
              get_actionText: function() {
                return this._actionText;
              },
              set_actionText: function(Me) {
                return this._actionText = Me, Me;
              },
              undo: function() {
                this._redoList = this._targetTour.get_tourStops(), this._targetTour.set_tourStops(this._undoList), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
              },
              redo: function() {
                this._undoList = this._targetTour.get_tourStops(), this._targetTour.set_tourStops(this._redoList), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
              },
              toString: function() {
                return this._actionText;
              }
            };
            (0, a.registerType)("UndoTourSlidelistChange", [y, g, null, t.IUndoStep]);
            function Ee(Me, B) {
              this._actionText = "", this._targetTour = null, this._undoDomeMode = !1, this._undoLevel = 0, this._redoDomeMode = !1, this._redoLevel = 0, this._undoTitle = B.get_title(), this._undoAuthor = B.get_author(), this._undoAuthorEmail = B.get_authorEmail(), this._undoDescription = B.get_description(), this._undoAuthorImage = B.get_authorImage(), this._undoOrganizationUrl = B.get_organizationUrl(), this._undoOrgName = B.get_orgName(), this._undoKeywords = B.get_keywords(), this._undoTaxonomy = B.get_taxonomy(), this._undoLevel = B.get_level(), this._actionText = Me, this._targetTour = B, this._targetTour.set_tourDirty(!0);
            }
            var Ve = {
              get_actionText: function() {
                return this._actionText;
              },
              set_actionText: function(Me) {
                return this._actionText = Me, Me;
              },
              undo: function() {
                this._redoTitle = this._targetTour.get_title(), this._redoAuthor = this._targetTour.get_author(), this._redoAuthorEmail = this._targetTour.get_authorEmail(), this._redoDescription = this._targetTour.get_description(), this._redoAuthorImage = this._targetTour.get_authorImage(), this._redoOrganizationUrl = this._targetTour.get_organizationUrl(), this._redoOrgName = this._targetTour.get_orgName(), this._redoKeywords = this._targetTour.get_keywords(), this._redoTaxonomy = this._targetTour.get_taxonomy(), this._redoLevel = this._targetTour.get_level(), this._targetTour.set_title(this._undoTitle), this._targetTour.set_author(this._undoAuthor), this._targetTour.set_authorEmail(this._undoAuthorEmail), this._targetTour.set_description(this._undoDescription), this._targetTour.set_authorImage(this._undoAuthorImage), this._targetTour.set_organizationUrl(this._undoOrganizationUrl), this._targetTour.set_orgName(this._undoOrgName), this._targetTour.set_keywords(this._undoKeywords), this._targetTour.set_taxonomy(this._undoTaxonomy), this._targetTour.set_level(this._undoLevel), this._targetTour.set_tourDirty(!0);
              },
              redo: function() {
                this._targetTour.set_title(this._redoTitle), this._targetTour.set_author(this._redoAuthor), this._targetTour.set_authorEmail(this._redoAuthorEmail), this._targetTour.set_description(this._redoDescription), this._targetTour.set_authorImage(this._redoAuthorImage), this._targetTour.set_organizationUrl(this._redoOrganizationUrl), this._targetTour.set_orgName(this._redoOrgName), this._targetTour.set_keywords(this._redoKeywords), this._targetTour.set_taxonomy(this._redoTaxonomy), this._targetTour.set_level(this._redoLevel), this._targetTour.set_tourDirty(!0);
              },
              toString: function() {
                return this._actionText;
              }
            };
            (0, a.registerType)("UndoTourPropertiesChange", [Ee, Ve, null, t.IUndoStep]);
          }
        ),
        /***/
        "./esm/triangle.js": (
          /*!*************************!*\
            !*** ./esm/triangle.js ***!
            \*************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Triangle: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            );
            function t() {
              this.a = -1, this.b = -1, this.c = -1;
            }
            t.create = function(o, c, _) {
              var u = new t();
              return u.a = o, u.b = c, u.c = _, u;
            };
            var l = {
              subDivide: function(o, c) {
                var _ = a.Vector3d.lerp(c[this.b].position, c[this.c].position, 0.5), u = a.Vector3d.lerp(c[this.c].position, c[this.a].position, 0.5), y = a.Vector3d.lerp(c[this.a].position, c[this.b].position, 0.5), g = a.Vector2d.lerp(a.Vector2d.create(c[this.b].tu, c[this.b].tv), a.Vector2d.create(c[this.c].tu, c[this.c].tv), 0.5), Ee = a.Vector2d.lerp(a.Vector2d.create(c[this.c].tu, c[this.c].tv), a.Vector2d.create(c[this.a].tu, c[this.a].tv), 0.5), Ve = a.Vector2d.lerp(a.Vector2d.create(c[this.a].tu, c[this.a].tv), a.Vector2d.create(c[this.b].tu, c[this.b].tv), 0.5);
                _.normalize(), u.normalize(), y.normalize();
                var Me = c.length, B = c.length + 1, Pe = c.length + 2;
                c.push(a.PositionTexture.createPosRaw(_, g.x, g.y)), c.push(a.PositionTexture.createPosRaw(u, Ee.x, Ee.y)), c.push(a.PositionTexture.createPosRaw(y, Ve.x, Ve.y)), o.push(t.create(this.a, Pe, B)), o.push(t.create(this.b, Me, Pe)), o.push(t.create(this.c, B, Me)), o.push(t.create(Me, B, Pe));
              },
              subDivideNoNormalize: function(o, c) {
                var _ = a.Vector3d.lerp(c[this.b].position, c[this.c].position, 0.5), u = a.Vector3d.lerp(c[this.c].position, c[this.a].position, 0.5), y = a.Vector3d.lerp(c[this.a].position, c[this.b].position, 0.5), g = a.Vector2d.lerp(a.Vector2d.create(c[this.b].tu, c[this.b].tv), a.Vector2d.create(c[this.c].tu, c[this.c].tv), 0.5), Ee = a.Vector2d.lerp(a.Vector2d.create(c[this.c].tu, c[this.c].tv), a.Vector2d.create(c[this.a].tu, c[this.a].tv), 0.5), Ve = a.Vector2d.lerp(a.Vector2d.create(c[this.a].tu, c[this.a].tv), a.Vector2d.create(c[this.b].tu, c[this.b].tv), 0.5), Me = c.length, B = c.length + 1, Pe = c.length + 2;
                c.push(a.PositionTexture.createPosRaw(_, g.x, g.y)), c.push(a.PositionTexture.createPosRaw(u, Ee.x, Ee.y)), c.push(a.PositionTexture.createPosRaw(y, Ve.x, Ve.y)), o.push(t.create(this.a, Pe, B)), o.push(t.create(this.b, Me, Pe)), o.push(t.create(this.c, B, Me)), o.push(t.create(Me, B, Pe));
              }
            };
            (0, s.registerType)("Triangle", [t, l, null]);
          }
        ),
        /***/
        "./esm/typesystem.js": (
          /*!***************************!*\
            !*** ./esm/typesystem.js ***!
            \***************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Enums: () => (
                /* binding */
                c
              ),
              /* harmony export */
              registerEnum: () => (
                /* binding */
                o
              ),
              /* harmony export */
              registerType: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            );
            const a = s.ss.createRegistry("wwtlib"), t = {};
            function l(u, y) {
              s.ss.createType(u, y, a);
            }
            function o(u, y) {
              t[u] = y;
            }
            function c() {
            }
            c.parse = function(u, y) {
              if (y === "Default" && (y = "DefaultV"), y === "0")
                return 0;
              var g = y.substr(0, 1).toLowerCase() + y.substr(1);
              return t[u][g];
            }, c.toXml = function(u, y) {
              var g = "0", Ee = Object.keys(t[u]);
              for (var Ve in Ee)
                if (t[u][Ee[Ve]] == y) {
                  g = Ee[Ve];
                  break;
                }
              var Me = g, B = Me.substr(0, 1).toUpperCase() + Me.substr(1);
              return B === "DefaultV" && (B = "Default"), B;
            }, l("Enums", [c, {}, null]);
          }
        ),
        /***/
        "./esm/ui_tools.js": (
          /*!*************************!*\
            !*** ./esm/ui_tools.js ***!
            \*************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              UiTools: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            );
            function t() {
            }
            t.kilometersPerAu = 149598e3, t.auPerParsec = 206264.806, t.auPerLightYear = 63239.6717, t.ssmUnitConversion = 370, t.gamma = function(o, c) {
              return Math.min(255, s.ss.truncate(255 * Math.pow(o / 255, 1 / c) + 0.5));
            }, t.getNamesStringFromArray = function(o) {
              for (var c = "", _ = "", u = s.ss.enumerate(o); u.moveNext(); ) {
                var y = u.current;
                c += _, c += y, _ = ";";
              }
              return c;
            }, t.solarSystemToMeters = function(o) {
              return o * 149598e3 * 370;
            }, t.metersToSolarSystemDistance = function(o) {
              return o / 370 * 149598e3;
            }, t.metersToZoom = function(o) {
              return (o / 1e3 / 370 - 1e-6) / 4 * 9;
            }, t.formatDistance = function(o) {
              if (o < 0.1) {
                var c = o * 149598e3;
                if (c < 10) {
                  var _ = s.ss.truncate(c * 1e3);
                  return s.ss.format("{0} m", _);
                } else
                  return c = s.ss.truncate(c), s.ss.format("{0} km", c);
              } else if (o < 10) {
                var u = s.ss.truncate(o * 10) / 10;
                return s.ss.format("{0} au", u);
              } else if (o < 6323.96717) {
                var u = s.ss.truncate(o);
                return s.ss.format("{0} au", u);
              } else if (o < 632396.717) {
                var y = s.ss.truncate(o * 10 / 63239.6717) / 10;
                return s.ss.format("{0} ly", y);
              } else if (o < 63239671700) {
                var y = s.ss.truncate(o / 63239.6717);
                return s.ss.format("{0} ly", y);
              } else if (o < 206264806e4) {
                var g = s.ss.truncate(o * 10 / 206264806e3) / 10;
                return s.ss.format("{0} Mpc", g);
              } else if (o < 206264806e6) {
                var g = s.ss.truncate(o / 206264806e3);
                return s.ss.format("{0} Mpc", g);
              } else {
                var g = s.ss.truncate(o * 10 / 206264806e6) / 10;
                return s.ss.format("{0} Gpc", g);
              }
            }, t.formatDecimalHours = function(o) {
              var c = s.ss.now(), _ = c.getTimezoneOffset() / 60;
              _ = 0;
              for (var u = o - _ + 0.0083333334; u > 24; )
                u -= 24;
              for (; u < 0; )
                u += 24;
              var y = s.ss.truncate(u), g = s.ss.truncate(u * 60 - y * 60), Ee = s.ss.truncate(u * 3600 - (y * 3600 + g * 60));
              return s.ss.format("{0}:{1}", y, g, Ee);
            }, t.splitString = function(o, c) {
              for (var _ = [], u = 0, y = 0, g = 0, Ee = 0; y < o.length; ) {
                if (o.substr(y, 1) === "(" && u++, o.substr(y, 1) === ")" && u--, y === o.length - 1) {
                  if (o.substr(y, 1) === c)
                    return _.push(o.substr(Ee, g)), _.push(""), _;
                  g++;
                }
                y === o.length - 1 || o.substr(y, 1) === c && c === "	" || !u && o.substr(y, 1) === c ? (_.push(o.substr(Ee, g)), Ee = y + 1, g = 0) : g++, y++;
              }
              return _;
            }, t.split = function(o, c) {
              for (var _ = [], u = 0, y = 0, g = 0; u < o.length; )
                u === o.length - 1 && y++, u === o.length - 1 || c.indexOf(o.substr(u, 1)) > -1 ? (_.push(o.substr(g, y)), g = u + 1, y = 0) : y++, u++;
              return _;
            }, t._beep = function() {
            };
            var l = {};
            (0, a.registerType)("UiTools", [t, l, null]);
          }
        ),
        /***/
        "./esm/url_helpers.js": (
          /*!****************************!*\
            !*** ./esm/url_helpers.js ***!
            \****************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              URLHelpers: () => (
                /* binding */
                c
              ),
              /* harmony export */
              URLRewriteMode: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), l = {
              wwtFlagship: 0,
              // this host is worldwidetelescope.org or an equivalent
              localhost: 1,
              // this host is localhost or an equivalent
              neverProxy: 2,
              // this host is known to never need proxying
              tryNoProxy: 3,
              // none of the above, and we hope that we can get data from it without needing to use our proxy
              proxy: 4
              // none of the above, and we need to proxy it for HTTPS/CORS reasons
            }, o = {
              asIfAbsolute: 0,
              // act as if this URL is absolute even if it is missing a domain
              originRelative: 1
              // if this URL is relative, treat it as relative to the browser origin
            };
            (0, s.registerType)("URLRewriteMode", o), (0, s.registerEnum)("URLRewriteMode", o);
            function c() {
              switch (this._origin_protocol = typeof window > "u" ? "https:" : window.location.protocol, this._force_https = this._origin_protocol === "https:", this._origin_domain = typeof window > "u" ? "" : window.location.hostname, this._domain_handling = {}, this._domain_handling["worldwidetelescope.org"] = l.wwtFlagship, this._domain_handling["www.worldwidetelescope.org"] = l.wwtFlagship, this._domain_handling["cdn.worldwidetelescope.org"] = l.wwtFlagship, this._domain_handling["content.worldwidetelescope.org"] = l.wwtFlagship, this._domain_handling["beta.worldwidetelescope.org"] = l.wwtFlagship, this._domain_handling["beta-cdn.worldwidetelescope.org"] = l.wwtFlagship, this._domain_handling["wwtstaging.azurewebsites.net"] = l.wwtFlagship, this._domain_handling["wwtfiles.blob.core.windows.net"] = l.neverProxy, this._domain_handling["wwttiles.blob.core.windows.net"] = l.neverProxy, this._domain_handling["web.wwtassets.org"] = l.neverProxy, this._domain_handling["data1.wwtassets.org"] = l.neverProxy, this._domain_handling.localhost = l.localhost, this._domain_handling["127.0.0.1"] = l.localhost, this._origin_domain) {
                case "worldwidetelescope.org":
                case "www.worldwidetelescope.org":
                case "cdn.worldwidetelescope.org":
                  this._core_static_baseurl = this._origin_protocol + "//cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//worldwidetelescope.org";
                  break;
                case "beta.worldwidetelescope.org":
                case "beta-cdn.worldwidetelescope.org":
                  this._core_static_baseurl = this._origin_protocol + "//beta-cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//beta.worldwidetelescope.org";
                  break;
                default:
                  this._core_static_baseurl = this._origin_protocol + "//cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//worldwidetelescope.org";
                  break;
              }
              this._engine_asset_baseurl = this._origin_protocol + "//web.wwtassets.org/engine/assets", this._flagship_static_lcpaths = {}, this._flagship_static_lcpaths["/wwtweb/2massoct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/bingdemtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/bingdemtile2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/catalog.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/catalog2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dembath.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/demmars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/demtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dss.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dusttoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/earthblend.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/earthmerbath.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/fixedaltitudedemtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/g360.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galex4far.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galex4near.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galextoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettour.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettourfile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettours.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/glimpse.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/halphatoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirise.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirisedem2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirisedem3.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/jupiter.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mandel.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mandel1.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marsdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marshirise.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marsmoc.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/martiantile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/martiantile2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mipsgal.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moondem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moonoct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moontoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moontoastdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmarsdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmarsdem2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/rasstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/thumbnail.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tiles.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tiles2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tilesthumb.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/twomasstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tychooct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/veblend.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/vlsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmap.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmsmoon.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmstoast.aspx"] = !0;
            }
            var _ = {
              overrideAssetBaseurl: function(u) {
                this._engine_asset_baseurl = u;
              },
              rewrite: function(u, y) {
                var g = u.toLowerCase(), Ee, Ve;
                if (a.ss.startsWith(g, "http://"))
                  Ee = "http:", Ve = u.substring(7);
                else if (a.ss.startsWith(g, "https://"))
                  Ee = "https:", Ve = u.substring(8);
                else if (a.ss.startsWith(g, "//"))
                  Ee = "", Ve = u.substring(2);
                else {
                  if (a.ss.startsWith(g, "blob:"))
                    return u;
                  switch (y) {
                    case o.asIfAbsolute:
                    default:
                      Ee = "", Ve = u;
                      break;
                    case o.originRelative:
                      return u = new URL(u, window.location.href).toString(), this.rewrite(u, 0);
                  }
                }
                if (t.freestandingMode)
                  return u;
                var Me, B, Pe = Ve.indexOf("/");
                Pe < 0 ? (Me = Ve, B = "/") : (Me = Ve.substring(0, Pe), B = Ve.substring(Pe));
                var k = Me.toLowerCase(), b = B.toLowerCase().split("?")[0];
                a.ss.keyExists(this._domain_handling, k) || (a.ss.startsWith(k, "localhost:") || a.ss.startsWith(k, "127.0.0.1:") ? this._domain_handling[k] = l.localhost : this._domain_handling[k] = l.tryNoProxy);
                var Le = this._domain_handling[k];
                switch (Le) {
                  case l.localhost:
                    return u;
                  case l.neverProxy:
                  case l.tryNoProxy:
                  default:
                    if (this._force_https && Ee !== "https:") {
                      var xe = Me;
                      if (a.ss.endsWith(Me, ":80"))
                        xe = Me.substring(0, Me.length - 3);
                      else if (Me.indexOf(":") >= 0)
                        return u;
                      return "https://" + xe + B;
                    }
                    return u;
                  case l.proxy:
                    return Ee || (u = "http://" + u), u = a.ss.replaceString(a.ss.replaceString(encodeURIComponent(u), "%7B", "{"), "%7D", "}"), this._core_dynamic_baseurl + "/webserviceproxy.aspx?targeturl=" + u;
                  case l.wwtFlagship:
                    var ze = !1;
                    return (a.ss.startsWith(b, "/data/") || a.ss.keyExists(this._flagship_static_lcpaths, b) || a.ss.startsWith(b, "/content/") || a.ss.startsWith(b, "/engine/assets/")) && (ze = !0), ze ? this._core_static_baseurl + B : this._core_dynamic_baseurl + B;
                }
              },
              // Call this when you have tried to load a url via XMLHttpRequest or
              // something along those lines, and the attempt has failed. We will mark the
              // domain as needing proxying, and will return a new proxy-enabled URL to try.
              // The exception is for flagship website URLs, which we know that the proxy
              // won't help with. For those, null is returned.
              activateProxy: function(u) {
                if (t.freestandingMode)
                  return null;
                var y = u.toLowerCase(), g;
                a.ss.startsWith(y, "http://") ? g = u.substring(7) : a.ss.startsWith(y, "https://") ? g = u.substring(8) : a.ss.startsWith(y, "//") ? g = u.substring(2) : g = u;
                var Ee, Ve = g.indexOf("/");
                Ve < 0 ? Ee = g : Ee = g.substring(0, Ve).toLowerCase(), a.ss.keyExists(this._domain_handling, Ee) || (a.ss.startsWith(Ee, "localhost:") || a.ss.startsWith(Ee, "127.0.0.1:") ? this._domain_handling[Ee] = l.localhost : this._domain_handling[Ee] = l.tryNoProxy);
                var Me = this._domain_handling[Ee];
                return Me === l.wwtFlagship || Me === l.neverProxy || Me === l.localhost ? null : (this._domain_handling[Ee] = l.proxy, this.rewrite(u, 0));
              },
              engineAssetUrl: function(u) {
                return a.ss.format("{0}/{1}", this._engine_asset_baseurl, u);
              },
              coreDynamicUrl: function(u) {
                return a.ss.format("{0}/{1}", this._core_dynamic_baseurl, u);
              },
              coreStaticUrl: function(u) {
                return a.ss.format("{0}/{1}", this._core_static_baseurl, u);
              }
            };
            (0, s.registerType)("URLHelpers", [c, _, null]), c.singleton = new c();
          }
        ),
        /***/
        "./esm/util.js": (
          /*!*********************!*\
            !*** ./esm/util.js ***!
            \*********************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Cursor: () => (
                /* binding */
                B
              ),
              /* harmony export */
              Cursors: () => (
                /* binding */
                k
              ),
              /* harmony export */
              DialogResult: () => (
                /* binding */
                De
              ),
              /* harmony export */
              DistanceCalc: () => (
                /* binding */
                Ke
              ),
              /* harmony export */
              Guid: () => (
                /* binding */
                y
              ),
              /* harmony export */
              Keys: () => (
                /* binding */
                Le
              ),
              /* harmony export */
              Language: () => (
                /* binding */
                Ve
              ),
              /* harmony export */
              Mouse: () => (
                /* binding */
                Ee
              ),
              /* harmony export */
              OverlayProperties: () => (
                /* binding */
                Fe
              ),
              /* harmony export */
              PopupColorPicker: () => (
                /* binding */
                D
              ),
              /* harmony export */
              PopupVolume: () => (
                /* binding */
                Se
              ),
              /* harmony export */
              Rectangle: () => (
                /* binding */
                _
              ),
              /* harmony export */
              SelectLink: () => (
                /* binding */
                xe
              ),
              /* harmony export */
              Util: () => (
                /* reexport safe */
                l.Util
              ),
              /* harmony export */
              getTileKey: () => (
                /* binding */
                We
              )
              /* harmony export */
            });
            var s = n(
              /*! uuid */
              "../node_modules/uuid/dist/esm-browser/v5.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), l = n(
              /*! ./baseutil.js */
              "./esm/baseutil.js"
            ), o = n(
              /*! ./color.js */
              "./esm/color.js"
            ), c = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            );
            function _() {
              this.x = 0, this.y = 0, this.width = 0, this.height = 0;
            }
            _.create = function(Re, Ie, O, Ue) {
              var $e = new _();
              return $e.x = Re, $e.y = Ie, $e.width = O, $e.height = Ue, $e;
            };
            var u = {
              get_left: function() {
                return this.x;
              },
              get_right: function() {
                return this.x + this.width;
              },
              get_top: function() {
                return this.y;
              },
              get_bottom: function() {
                return this.y + this.height;
              },
              contains: function(Re) {
                return this._between(Re.x, this.x, this.x + this.width) && this._between(Re.y, this.y, this.y + this.height);
              },
              _between: function(Re, Ie, O) {
                return Ie > O ? !(Re > Ie) && !(Re < O) : !(Re < Ie) && !(Re > O);
              },
              copy: function() {
                var Re = new _();
                return Re.x = this.x, Re.y = this.y, Re.width = this.width, Re.height = this.height, Re;
              }
            };
            (0, a.registerType)("Rectangle", [_, u, null]);
            function y() {
              this._guid = y.create();
            }
            y.newGuid = function() {
              return new y();
            }, y.fromString = function(Re) {
              var Ie = new y();
              return Ie._guid = t.ss.trim(Re), Ie;
            }, y.create = function() {
              return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(Re) {
                var Ie = Math.random() * 16 | 0, O = Re == "x" ? Ie : Ie & 3 | 8;
                return O.toString(16);
              });
            }, y.createFrom = function(Re) {
              var Ie = s.default(Re, "1420736a-a637-40a7-813a-ba692e72204e");
              return y.fromString(Ie);
            };
            var g = {
              toString: function() {
                return this._guid;
              }
            };
            (0, a.registerType)("Guid", [y, g, null]);
            function Ee() {
            }
            Ee.offsetX = function(Re, Ie) {
              var O = 0, Ue = Re, $e = Ie;
              if (Ue.offsetParent != null)
                do
                  O += Ue.offsetLeft;
                while ((Ue = Ue.offsetParent) != null);
              return $e.pageX - O;
            }, Ee.offsetY = function(Re, Ie) {
              var O = 0, Ue = Re, $e = Ie;
              if (Ue.offsetParent != null)
                do
                  O += Ue.offsetTop;
                while ((Ue = Ue.offsetParent) != null);
              return $e.pageY - O;
            }, (0, a.registerType)("Mouse", [Ee, null, null]);
            function Ve() {
            }
            Ve.getLocalizedText = function(Re, Ie) {
              return Ie;
            };
            var Me = {};
            (0, a.registerType)("Language", [Ve, Me, null]);
            function B() {
            }
            B.get_position = function() {
              return new c.Vector2d();
            }, B.get_current = function() {
              return document.body.style.cursor;
            }, B.set_current = function(Re) {
              return document.body.style.cursor = Re, Re;
            };
            var Pe = {};
            (0, a.registerType)("Cursor", [B, Pe, null]);
            function k() {
            }
            k.get_arrow = function() {
              return "default";
            }, k.get_cross = function() {
              return "crosshair";
            }, k.get_defaultV = function() {
              return "default";
            }, k.get_hand = function() {
              return "grab";
            }, k.get_help = function() {
              return "help";
            }, k.get_hSplit = function() {
              return "row-resize";
            }, k.get_iBeam = function() {
              return "text";
            }, k.get_no = function() {
              return "not-allowed";
            }, k.get_sizeAll = function() {
              return "help";
            }, k.get_sizeNESW = function() {
              return "nwse-resize";
            }, k.get_sizeNS = function() {
              return "ns-resize";
            }, k.get_sizeNWSE = function() {
              return "nwse-resize";
            }, k.get_sizeWE = function() {
              return "ew-resize";
            }, k.get_upArrow = function() {
              return "help";
            }, k.get_vSplit = function() {
              return "col-resize";
            }, k.get_waitCursor = function() {
              return "wait";
            };
            var b = {};
            (0, a.registerType)("Cursors", [k, b, null]);
            var Le = {
              modifiers: -65536,
              none: 0,
              lButton: 1,
              rButton: 2,
              cancel: 3,
              mButton: 4,
              xButton1: 5,
              xButton2: 6,
              back: 8,
              tab: 9,
              lineFeed: 10,
              clearKey: 12,
              returnKey: 13,
              enter: 13,
              shiftKey: 16,
              controlKey: 17,
              menu: 18,
              pause: 19,
              capital: 20,
              capsLock: 20,
              kanaMode: 21,
              hanguelMode: 21,
              hangulMode: 21,
              junjaMode: 23,
              finalMode: 24,
              hanjaMode: 25,
              kanjiMode: 25,
              escape: 27,
              imeConvert: 28,
              imeNonconvert: 29,
              imeAccept: 30,
              imeAceept: 30,
              imeModeChange: 31,
              space: 32,
              prior: 33,
              pageUp: 33,
              next: 34,
              pageDown: 34,
              end: 35,
              home: 36,
              left: 37,
              up: 38,
              right: 39,
              down: 40,
              select: 41,
              print: 42,
              execute: 43,
              snapshot: 44,
              printScreen: 44,
              insertKey: 45,
              deleteKey: 46,
              help: 47,
              d0: 48,
              d1: 49,
              d2: 50,
              d3: 51,
              d4: 52,
              d5: 53,
              d6: 54,
              d7: 55,
              d8: 56,
              d9: 57,
              a: 65,
              b: 66,
              c: 67,
              d: 68,
              e: 69,
              f: 70,
              g: 71,
              h: 72,
              i: 73,
              j: 74,
              k: 75,
              l: 76,
              m: 77,
              n: 78,
              o: 79,
              p: 80,
              q: 81,
              r: 82,
              s: 83,
              t: 84,
              u: 85,
              v: 86,
              w: 87,
              x: 88,
              y: 89,
              z: 90,
              lWin: 91,
              rWin: 92,
              apps: 93,
              sleep: 95,
              numPad0: 96,
              numPad1: 97,
              numPad2: 98,
              numPad3: 99,
              numPad4: 100,
              numPad5: 101,
              numPad6: 102,
              numPad7: 103,
              numPad8: 104,
              numPad9: 105,
              multiply: 106,
              add: 107,
              separator: 108,
              subtract: 109,
              decimal: 110,
              divide: 111,
              f1: 112,
              f2: 113,
              f3: 114,
              f4: 115,
              f5: 116,
              f6: 117,
              f7: 118,
              f8: 119,
              f9: 120,
              f10: 121,
              f11: 122,
              f12: 123,
              f13: 124,
              f14: 125,
              f15: 126,
              f16: 127,
              f17: 128,
              f18: 129,
              f19: 130,
              f20: 131,
              f21: 132,
              f22: 133,
              f23: 134,
              f24: 135,
              numLock: 144,
              scroll: 145,
              lShiftKey: 160,
              rShiftKey: 161,
              lControlKey: 162,
              rControlKey: 163,
              lMenu: 164,
              rMenu: 165,
              browserBack: 166,
              browserForward: 167,
              browserRefresh: 168,
              browserStop: 169,
              browserSearch: 170,
              browserFavorites: 171,
              browserHome: 172,
              volumeMute: 173,
              volumeDown: 174,
              volumeUp: 175,
              mediaNextTrack: 176,
              mediaPreviousTrack: 177,
              mediaStop: 178,
              mediaPlayPause: 179,
              launchMail: 180,
              selectMedia: 181,
              launchApplication1: 182,
              launchApplication2: 183,
              oemSemicolon: 186,
              oem1: 186,
              oemplus: 187,
              oemcomma: 188,
              oemMinus: 189,
              oemPeriod: 190,
              oemQuestion: 191,
              oem2: 191,
              oemtilde: 192,
              oem3: 192,
              oemOpenBrackets: 219,
              oem4: 219,
              oemPipe: 220,
              oem5: 220,
              oemCloseBrackets: 221,
              oem6: 221,
              oemQuotes: 222,
              oem7: 222,
              oem8: 223,
              oemBackslash: 226,
              oem102: 226,
              processKey: 229,
              packet: 231,
              attn: 246,
              crsel: 247,
              exsel: 248,
              eraseEof: 249,
              play: 250,
              zoom: 251,
              noName: 252,
              pa1: 253,
              oemClear: 254,
              keyCode: 65535,
              shift: 65536,
              control: 131072,
              alt: 262144
            };
            (0, a.registerType)("Keys", Le);
            function xe(Re) {
              this._return = !1, this._next = !0, this._linkSlide = !1, this._slide = null, this._ok = !1, Re != null ? this.set_id(Re) : this.set_next(!0);
            }
            var ze = {
              get_returnCaller: function() {
                return this._return;
              },
              set_returnCaller: function(Re) {
                return Re && (this._slide = "Return"), this._return = Re, Re;
              },
              get_next: function() {
                return this._next;
              },
              set_next: function(Re) {
                return Re && (this._slide = "Next"), this._next = Re, Re;
              },
              get_linkToSlide: function() {
                return this._linkSlide;
              },
              set_linkToSlide: function(Re) {
                return Re && (this._slide = "Next"), this._linkSlide = Re, Re;
              },
              get_id: function() {
                return this._slide;
              },
              set_id: function(Re) {
                return this._return = !1, this._next = !1, this._linkSlide = !0, this._slide = Re, Re;
              },
              get_OK: function() {
                return this._ok;
              },
              set_OK: function(Re) {
                return this._ok = Re, Re;
              }
            };
            (0, a.registerType)("SelectLink", [xe, ze, null]);
            function Se() {
              this.volume = 0;
            }
            var Te = {
              showDialog: function() {
                return 1;
              }
            };
            (0, a.registerType)("PopupVolume", [Se, Te, null]);
            function D() {
              this.volume = 0, this.location = new c.Vector2d(), this.color = new o.Color();
            }
            var ke = {
              showDialog: function() {
                return 1;
              }
            };
            (0, a.registerType)("PopupColorPicker", [D, ke, null]);
            function Fe() {
              this.volume = 0, this.location = new c.Vector2d(), this.overlay = null;
            }
            var He = {
              showDialog: function() {
                return 1;
              }
            };
            (0, a.registerType)("OverlayProperties", [Fe, He, null]);
            function We(Re, Ie, O, Ue, $e) {
              if (Re.get_projection() === 7 && $e != null) {
                var Ze = $e.ipix * 4 + Ue * 2 + O;
                return Re.get_imageSetID().toString() + "\\" + Ie.toString() + "\\" + Ze.toString();
              }
              return Re.get_imageSetID().toString() + "\\" + Ie.toString() + "\\" + Ue.toString() + "_" + O.toString();
            }
            function Ke() {
            }
            Ke.lineToPoint = function(Re, Ie, O) {
              var Ue = c.Vector3d.subtractVectors(Ie, Re), $e = c.Vector3d.subtractVectors(O, Re), Ze = c.Vector3d.cross($e, Ue).length() / Ue.length();
              return Ze;
            }, Ke.getUVFromInnerPoint = function(Re, Ie, O, Ue, $e) {
              Re.normalize(), Ie.normalize(), O.normalize(), Ue.normalize(), $e.normalize();
              var Ze = Ke.lineToPoint(Re, Ie, $e), Qe = Ke.lineToPoint(O, Ue, $e), Ae = Ze + Qe, Ne = Ke.lineToPoint(Ie, Ue, $e), Be = Ke.lineToPoint(Re, O, $e), Ge = Ne + Be;
              return c.Vector2d.create(Be / Ge, Ze / Ae);
            };
            var $ = {};
            (0, a.registerType)("DistanceCalc", [Ke, $, null]);
            var De = {
              OK: 1
            };
            (0, a.registerType)("DialogResult", De), (0, a.registerEnum)("DialogResult", De);
          }
        ),
        /***/
        "./esm/utilities/binary_reader.js": (
          /*!****************************************!*\
            !*** ./esm/utilities/binary_reader.js ***!
            \****************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              BinaryReader: () => (
                /* binding */
                a
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            );
            function a(l) {
              this.position = 0, this._data = null, this._data = l;
            }
            a.id = 1;
            var t = {
              get_position: function() {
                return this.position;
              },
              seek: function(l) {
                this.position = l;
              },
              seekRelative: function(l) {
                this.position += l;
              },
              get_length: function() {
                return this._data.length;
              },
              get_endOfStream: function() {
                return this.position >= this.get_length();
              },
              readByte: function() {
                var l;
                return l = this._data[this.position], this.position += 1, l;
              },
              readSByte: function() {
                var l;
                return l = this._data[this.position], this.position += 1, l;
              },
              readBytes: function(l) {
                for (var o = new Array(l), c = 0; c < l; c++)
                  o[c] = this._data[this.position + c];
                return this.position += l, o;
              },
              readRemainingI16: function(l) {
                for (var o = new Float32Array(l), c = 0; c < l; c++)
                  o[c] = this.readInt16(!0);
                return o;
              },
              readByteString: function(l) {
                for (var o = "", c = 0; c < l; c++)
                  o += String.fromCharCode(this._data[this.position + c]);
                return this.position += l, o;
              },
              readSingle: function() {
                var l = new Uint8Array(4);
                l[0] = this._data[this.position], l[1] = this._data[this.position + 1], l[2] = this._data[this.position + 2], l[3] = this._data[this.position + 3];
                var o = new Float32Array(l.buffer, 0, 1)[0];
                return this.position += 4, o;
              },
              readUInt32: function() {
                var l = this._data[this.position] + (this._data[this.position + 1] << 8) + (this._data[this.position + 2] << 16) + (this._data[this.position + 3] << 24);
                return this.position += 4, l;
              },
              readUInt16: function() {
                var l = this._data[this.position] + (this._data[this.position + 1] << 8);
                return this.position += 2, l;
              },
              readUInt16LittleEndian: function() {
                var l = (this._data[this.position] << 8) + this._data[this.position + 1];
                return this.position += 2, l;
              },
              readInt16: function(l) {
                var o = l ? this.readUInt16LittleEndian() : this.readUInt16();
                return o & 32768 ? -(o - 1 ^ 65535) : o;
              },
              readInt32: function() {
                var l = this.readUInt32();
                return l & 2147483648 ? -(l - 1 ^ 4294967295) : l;
              },
              readInt64: function() {
                return this.position += 8, a.id++;
              },
              close: function() {
              }
            };
            (0, s.registerType)("BinaryReader", [a, t, null]);
          }
        ),
        /***/
        "./esm/utilities/bitmap.js": (
          /*!*********************************!*\
            !*** ./esm/utilities/bitmap.js ***!
            \*********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Bitmap: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), t = n(
              /*! ../graphics/webgl_constants.js */
              "./esm/graphics/webgl_constants.js"
            ), l = n(
              /*! ../graphics/texture.js */
              "./esm/graphics/texture.js"
            );
            function o() {
              this.width = 0, this.height = 0;
            }
            o.create = function(_, u) {
              u = l.Texture.fitPowerOfTwo(u), _ = l.Texture.fitPowerOfTwo(_);
              var y = new o();
              return y.height = u, y.width = _, y._buffer = new Uint8Array(_ * u * 4), y;
            };
            var c = {
              setPixel: function(_, u, y, g, Ee, Ve) {
                var Me = (_ + u * this.width) * 4;
                this._buffer[Me++] = y, this._buffer[Me++] = g, this._buffer[Me++] = Ee, this._buffer[Me++] = Ve;
              },
              getTexture: function() {
                var _ = a.tilePrepDevice.createTexture();
                return a.tilePrepDevice.bindTexture(t.WEBGL.TEXTURE_2D, _), a.tilePrepDevice.texParameteri(t.WEBGL.TEXTURE_2D, t.WEBGL.TEXTURE_WRAP_S, t.WEBGL.CLAMP_TO_EDGE), a.tilePrepDevice.texParameteri(t.WEBGL.TEXTURE_2D, t.WEBGL.TEXTURE_WRAP_T, t.WEBGL.CLAMP_TO_EDGE), a.tilePrepDevice.texImage2D(t.WEBGL.TEXTURE_2D, 0, t.WEBGL.RGBA, this.width, this.height, 0, t.WEBGL.RGBA, t.WEBGL.UNSIGNED_BYTE, this._buffer), a.tilePrepDevice.texParameteri(t.WEBGL.TEXTURE_2D, t.WEBGL.TEXTURE_MIN_FILTER, t.WEBGL.LINEAR_MIPMAP_NEAREST), a.tilePrepDevice.generateMipmap(t.WEBGL.TEXTURE_2D), a.tilePrepDevice.bindTexture(t.WEBGL.TEXTURE_2D, null), _;
              }
            };
            (0, s.registerType)("Bitmap", [o, c, null]);
          }
        ),
        /***/
        "./esm/utilities/color_picker.js": (
          /*!***************************************!*\
            !*** ./esm/utilities/color_picker.js ***!
            \***************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ColorPicker: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../color.js */
              "./esm/color.js"
            ), t = n(
              /*! ../data_globals.js */
              "./esm/data_globals.js"
            );
            function l() {
              this.callBack = null, this.color = a.Colors.get_white();
            }
            var o = {
              nonMenuClick: function(c) {
              },
              show: function(c) {
                t.globalScriptInterface.showColorPicker(this, c);
              },
              getColorFromClick: function(c) {
                var _ = document.getElementById("colorhex"), u = document.createElement("canvas");
                u.width = _.width, u.height = _.height;
                var y = u.getContext("2d");
                y.drawImage(_, 0, 0);
                var g = y.getImageData(c.offsetX, c.offsetY, 1, 1).data;
                return this.color = a.Color.fromArgb(g[3], g[0], g[1], g[2]), this.color;
              },
              pickColor: function(c) {
                this.callBack(this.color);
              }
            };
            (0, s.registerType)("ColorPicker", [l, o, null]);
          }
        ),
        /***/
        "./esm/utilities/context_menu_strip.js": (
          /*!*********************************************!*\
            !*** ./esm/utilities/context_menu_strip.js ***!
            \*********************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ContextMenuStrip: () => (
                /* binding */
                l
              ),
              /* harmony export */
              TagMe: () => (
                /* binding */
                g
              ),
              /* harmony export */
              ToolStripMenuItem: () => (
                /* binding */
                c
              ),
              /* harmony export */
              ToolStripSeparator: () => (
                /* binding */
                u
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), t = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            );
            function l() {
              this.items = [];
            }
            var o = {
              _dispose: function() {
              },
              _nonMenuClick: function(Ve) {
                var Me = document.getElementById("contextmenu");
                Me.style.display = "none", window.removeEventListener("click", a.ss.bind("_nonMenuClick", this), !1);
                for (var B = document.getElementById("popoutmenu"); B.firstChild != null; )
                  B.removeChild(B.firstChild);
                B.style.display = "none";
              },
              _menuItemClicked: function(Ve) {
                var Me = Ve.currentTarget;
                Me.itemTag.click(Me.itemTag, new a.ss.EventArgs());
              },
              _show: function(Ve) {
                for (var Me = document.getElementById("contextmenu"); Me.firstChild != null; )
                  Me.removeChild(Me.firstChild);
                Me.className = "contextmenu", Me.style.display = "block", Me.style.left = Ve.x.toString() + "px", Me.style.top = Ve.y.toString() + "px", window.addEventListener("click", a.ss.bind("_nonMenuClick", this), !0);
                for (var B = a.ss.enumerate(this.items); B.moveNext(); ) {
                  var Pe = B.current;
                  if (Pe.visible) {
                    var k = document.createElement("div");
                    Pe.dropDownItems.length > 0 ? k.className = "contextmenuitem submenu" : Pe.checked ? k.className = "contextmenuitem checkedmenu" : k.className = "contextmenuitem", k.innerText = Pe.name;
                    var b = k;
                    b.itemTag = Pe, k.addEventListener("mouseover", a.ss.bind("_openSubMenu", this), !1), Pe.click != null && k.addEventListener("click", a.ss.bind("_menuItemClicked", this), !1), Me.appendChild(k);
                  }
                }
              },
              _openSubMenu: function(Ve) {
                for (var Me = Ve.currentTarget, B = Me.itemTag, Pe = document.getElementById("popoutmenu"); Pe.firstChild != null; )
                  Pe.removeChild(Pe.firstChild);
                if (Pe.style.display = "none", !!B.dropDownItems.length) {
                  var k = new t.Vector2d();
                  k.x = Ve.currentTarget.parentNode.offsetLeft + Ve.currentTarget.parentNode.clientWidth, k.y = Ve.currentTarget.parentNode.offsetTop + Ve.currentTarget.offsetTop, Pe.className = "contextmenu", Pe.style.display = "block", Pe.style.left = k.x.toString() + "px", Pe.style.top = k.y.toString() + "px", window.addEventListener("click", a.ss.bind("_nonMenuClick", this), !0);
                  for (var b = a.ss.enumerate(B.dropDownItems); b.moveNext(); ) {
                    var Le = b.current;
                    if (Le.visible) {
                      var xe = document.createElement("div");
                      xe.className = Le.checked ? "contextmenuitem checkedmenu" : "contextmenuitem", xe.innerText = Le.name;
                      var ze = xe;
                      ze.itemTag = Le, xe.addEventListener("click", a.ss.bind("_menuItemClicked", this), !1), Pe.appendChild(xe);
                    }
                  }
                }
              }
            };
            (0, s.registerType)("ContextMenuStrip", [l, o, null]);
            function c() {
              this.tag = null, this.dropDownItems = [], this.checked = !1, this.enabled = !0, this.visible = !0;
            }
            c.create = function(Ve) {
              var Me = new c();
              return Me.name = Ve, Me;
            };
            var _ = {};
            (0, s.registerType)("ToolStripMenuItem", [c, _, null]);
            function u() {
              c.call(this), this.name = "--------------------------------------";
            }
            var y = {};
            (0, s.registerType)("ToolStripSeparator", [u, y, c]);
            function g() {
            }
            var Ee = {};
            (0, s.registerType)("TagMe", [g, Ee, null]);
          }
        ),
        /***/
        "./esm/utilities/dialog.js": (
          /*!*********************************!*\
            !*** ./esm/utilities/dialog.js ***!
            \*********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Dialog: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            );
            function t() {
            }
            var l = {
              add_showDialogHook: function(o) {
                this.__showDialogHook = s.ss.bindAdd(this.__showDialogHook, o);
              },
              remove_showDialogHook: function(o) {
                this.__showDialogHook = s.ss.bindSub(this.__showDialogHook, o);
              },
              show: function(o, c) {
                this.__showDialogHook != null && this.__showDialogHook(o, c);
              }
            };
            (0, a.registerType)("Dialog", [t, l, null]);
          }
        ),
        /***/
        "./esm/utilities/histogram.js": (
          /*!************************************!*\
            !*** ./esm/utilities/histogram.js ***!
            \************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Histogram: () => (
                /* binding */
                _
              )
              /* harmony export */
            });
            var s = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ../double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ../render_globals.js */
              "./esm/render_globals.js"
            ), o = n(
              /*! ../util.js */
              "./esm/util.js"
            ), c = n(
              /*! ../layers/fits_image_js.js */
              "./esm/layers/fits_image_js.js"
            );
            function _() {
              this.image = null, this.layer = null, this.tile = null, this._dropDown = null, this._downPosition = 0, this._lowPosition = 0, this._highPosition = 255, this._center = 127, this._ignoreNextClick = !1, this._dragType = 4, this._updated = !1, this.selectedCurveStyle = 0;
            }
            _.updateImage = function(y, g) {
              if (!l.useGlVersion2) {
                var Ee = s.ss.safeCast(y.get_imageSet().get_wcsImage(), c.FitsImageJs), Ve = (0, l.tileCacheGetTile)(0, 0, 0, y.get_imageSet(), null);
                Ve.texture2d = Ee.getBitmap().getTexture();
              }
            }, _.updateScale = function(y, g, Ee, Ve) {
              if (y.get_imageSet().get_fitsProperties().scaleType = g, y.get_imageSet().get_fitsProperties().lowerCut = Ee, y.get_imageSet().get_fitsProperties().upperCut = Ve, !l.useGlVersion2) {
                var Me = s.ss.safeCast(y.get_imageSet().get_wcsImage(), c.FitsImageJs), B = (0, l.tileCacheGetTile)(0, 0, 0, y.get_imageSet(), null);
                B.texture2d = Me.getBitmap().getTexture();
              }
            }, _.updateColorMapper = function(y, g) {
              if (y.get_imageSet().get_fitsProperties().colorMapName = g, !l.useGlVersion2) {
                var Ee = s.ss.safeCast(y.get_imageSet().get_wcsImage(), c.FitsImageJs), Ve = (0, l.tileCacheGetTile)(0, 0, 0, y.get_imageSet(), null);
                Ve.texture2d = Ee.getBitmap().getTexture();
              }
            };
            var u = {
              close: function(y) {
                var g = document.getElementById("histogram");
                document.getElementById("histogramClose"), g.style.display = "none", window.removeEventListener("click", s.ss.bind("close", this), !0);
                var Ee = document.getElementById("graph");
                Ee.removeEventListener("mousedown", s.ss.bind("onPointerDown", this), !1), Ee.removeEventListener("mousemove", s.ss.bind("onPointerMove", this), !1), Ee.removeEventListener("mouseup", s.ss.bind("onPointerUp", this), !1), this._dropDown.removeEventListener("change", s.ss.bind("curveStyleSelected", this), !1), this._dropDown.removeEventListener("click", s.ss.bind("ignoreMe", this), !0);
              },
              show: function(y) {
                this.tile = (0, l.tileCacheGetTile)(0, 0, 0, this.layer.get_imageSet(), null);
                var g = document.getElementById("histogram"), Ee = document.getElementById("histogramClose");
                g.style.display = "block", g.style.left = y.x.toString() + "px", g.style.top = y.y.toString() + "px", this.selectedCurveStyle = this.layer.get_imageSet().get_fitsProperties().scaleType, this._dropDown = document.getElementById("ScaleTypePicker"), this._dropDown.addEventListener("change", s.ss.bind("curveStyleSelected", this), !1), this._dropDown.addEventListener("click", s.ss.bind("ignoreMe", this), !0);
                var Ve = document.getElementById("graph");
                Ve.addEventListener("pointerdown", s.ss.bind("onPointerDown", this), !1), Ve.addEventListener("pointermove", s.ss.bind("onPointerMove", this), !1), Ve.addEventListener("pointerup", s.ss.bind("onPointerUp", this), !1), Ee.addEventListener("click", s.ss.bind("close", this), !0), this.draw();
              },
              ignoreMe: function(y) {
                this._ignoreNextClick = !0;
              },
              curveStyleSelected: function(y) {
                this.selectedCurveStyle = this._dropDown.selectedIndex, this.setUpdateTimer(), this.layer.get_imageSet().get_fitsProperties().scaleType = this.selectedCurveStyle, this.draw(), this._ignoreNextClick = !0;
              },
              onPointerDown: function(y) {
                var g = document.getElementById("graph"), Ee = o.Mouse.offsetX(g, y), Ve = o.Mouse.offsetY(g, y);
                g.setPointerCapture(y.pointerId), Math.abs(Ee - this._center) < 10 && Math.abs(Ve - 75) < 10 ? this._dragType = 3 : Math.abs(Ee - this._lowPosition) < 10 ? this._dragType = 0 : Math.abs(Ee - this._highPosition) < 10 ? this._dragType = 1 : (this._dragType = 2, this._downPosition = Math.min(255, Math.max(0, Ee)), this.draw()), y.cancelBubble = !0;
              },
              onPointerMove: function(y) {
                var g = document.getElementById("graph"), Ee = o.Mouse.offsetX(g, y);
                switch (o.Mouse.offsetY(g, y), this._dragType) {
                  case 0:
                    this._lowPosition = Math.min(255, Math.max(0, Ee));
                    break;
                  case 1:
                    this._highPosition = Math.min(255, Math.max(0, Ee));
                    break;
                  case 2:
                    this._lowPosition = this._downPosition, this._highPosition = Math.min(255, Math.max(0, Ee));
                    break;
                  case 3:
                    var Ve = Math.abs(this._highPosition - this._lowPosition) / 2, Me = Math.min(255 - Ve, Math.max(Ve, Ee)), B = this._center - Me;
                    this._lowPosition -= B, this._highPosition -= B;
                    break;
                  case 4:
                    return;
                }
                this._center = (this._lowPosition + this._highPosition) / 2, this.draw();
                var Pe = (this.layer.get_imageSet().get_fitsProperties().maxVal - this.layer.get_imageSet().get_fitsProperties().minVal) / 256, k = this.layer.get_imageSet().get_fitsProperties().minVal + this._lowPosition * Pe, b = this.layer.get_imageSet().get_fitsProperties().minVal + this._highPosition * Pe;
                this.setUpdateTimer(), this.layer.get_imageSet().get_fitsProperties().upperCut = b, this.layer.get_imageSet().get_fitsProperties().lowerCut = k, this.layer.get_imageSet().get_fitsProperties().scaleType = this.selectedCurveStyle, y.cancelBubble = !0;
              },
              onPointerUp: function(y) {
                y.srcElement.releasePointerCapture(y.pointerId), this._dragType !== 4 && (this._dragType = 4, this.setUpdateTimer(), this._ignoreNextClick = !0), y.cancelBubble = !0;
              },
              setUpdateTimer: function() {
                var y = this;
                l.useGlVersion2 || (setTimeout(function() {
                  y.update();
                }, 500), this._updated = !1);
              },
              update: function() {
                if (!this._updated) {
                  if (s.ss.canCast(this.image, c.FitsImageJs)) {
                    var y = (this.layer.get_imageSet().get_fitsProperties().maxVal - this.layer.get_imageSet().get_fitsProperties().minVal) / 256, g = this.layer.get_imageSet().get_fitsProperties().minVal + this._lowPosition * y, Ee = this.layer.get_imageSet().get_fitsProperties().minVal + this._highPosition * y;
                    this.tile.texture2d = this.image.getScaledBitmap(g, Ee, this.selectedCurveStyle, 0, null).getTexture();
                  }
                  this._updated = !0;
                }
              },
              draw: function() {
                var y = document.getElementById("graph"), g = y.getContext("2d");
                this.image != null && this.image.drawHistogram(g);
                var Ee = "rgba(255,0,0,255)", Ve = "rgba(0,255,0,255)", Me = "rgba(0,0,255,255)";
                g.strokeStyle = Ee, g.beginPath(), g.moveTo(this._lowPosition, 0), g.lineTo(this._lowPosition, 150), g.stroke(), g.strokeStyle = Ve, g.beginPath(), g.moveTo(this._highPosition, 0), g.lineTo(this._highPosition, 150), g.stroke(), g.strokeStyle = Me, g.beginPath(), g.arc(this._center, 75, 10, 0, Math.PI * 2, !1), g.closePath(), g.stroke();
                var B = [];
                switch (this.selectedCurveStyle) {
                  case 0:
                    B.length = 0, B.push(t.Vector2d.create(this._lowPosition, 150)), B.push(t.Vector2d.create(this._highPosition, 0));
                    break;
                  case 1:
                    B.length = 0;
                    for (var k = 150 / Math.log(255), b = this._highPosition - this._lowPosition, Le = b < 0 ? -1 : 1, xe = Math.abs(256 / (b || 1e-6)), ze = 1e-6, Pe = this._lowPosition; Pe !== this._highPosition; Pe += Le)
                      B.push(t.Vector2d.create(Pe, 150 - Math.log(ze) * k)), ze += xe;
                    break;
                  case 2:
                    B.length = 0;
                    for (var k = 150 / Math.pow(255, 2), b = this._highPosition - this._lowPosition, Le = b < 0 ? -1 : 1, xe = Math.abs(256 / (b || 1e-6)), ze = 1e-6, Pe = this._lowPosition; Pe !== this._highPosition; Pe += Le)
                      B.push(t.Vector2d.create(Pe, 150 - Math.pow(ze, 2) * k)), ze += xe;
                    break;
                  case 3:
                    B.length = 0;
                    for (var k = 150 / Math.sqrt(255), b = this._highPosition - this._lowPosition, Le = b < 0 ? -1 : 1, xe = Math.abs(256 / (b || 1e-6)), ze = 1e-6, Pe = this._lowPosition; Pe !== this._highPosition; Pe += Le)
                      B.push(t.Vector2d.create(Pe, 150 - Math.sqrt(ze) * k)), ze += xe;
                    break;
                }
                if (B.length > 1) {
                  g.beginPath(), g.strokeStyle = Me, g.moveTo(B[0].x, B[0].y);
                  for (var Pe = 1; Pe < B.length; Pe++)
                    g.lineTo(B[Pe].x, B[Pe].y);
                  g.stroke();
                }
              }
            };
            (0, a.registerType)("Histogram", [_, u, null]);
          }
        ),
        /***/
        "./esm/utilities/simple_input.js": (
          /*!***************************************!*\
            !*** ./esm/utilities/simple_input.js ***!
            \***************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              SimpleInput: () => (
                /* binding */
                t
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../ss.js */
              "./esm/ss.js"
            );
            function t(o, c, _, u) {
              this.title = "Tile", this.label = "Enter Text Below", this.text = "", this._textElement = null, this._ignoreNextClick = !1, this.title = o, this.label = c, this.text = _;
            }
            var l = {
              showDialog: function() {
                return 1;
              },
              nonMenuClick: function(o) {
                this._ignoreNextClick || this._close(), this._ignoreNextClick = !1;
              },
              show: function(o, c) {
                var _ = document.getElementById("simpleinput"), u = document.getElementById("simplemodal");
                u.style.display = "block", _.style.display = "block", _.style.marginLeft = o.x.toString() + "px", _.style.marginTop = o.y.toString() + "px", this._textElement = document.getElementById("inputtext"), this._textElement.value = this.text;
                var y = document.getElementById("simpletitle"), g = document.getElementById("inputlabel");
                y.innerText = this.title, g.innerText = this.label, this._textElement.addEventListener("change", a.ss.bind("textChanged", this), !1), this._textElement.addEventListener("click", a.ss.bind("ignoreMe", this), !0);
                var Ee = document.getElementById("simpleinputok"), Ve = document.getElementById("simpleinputcancel");
                Ee.addEventListener("click", a.ss.bind("okClicked", this), !1), Ve.addEventListener("click", a.ss.bind("cancelClicked", this), !1), this._okCallback = c;
              },
              okClicked: function(o) {
                this._close(), this._okCallback != null && this._okCallback();
              },
              cancelClicked: function(o) {
                this._close();
              },
              _close: function() {
                var o = document.getElementById("simplemodal");
                o.style.display = "none", this._textElement.removeEventListener("change", a.ss.bind("textChanged", this), !1);
                var c = document.getElementById("simpleinputok"), _ = document.getElementById("simpleinputcancel");
                c.removeEventListener("click", a.ss.bind("okClicked", this), !1), _.removeEventListener("click", a.ss.bind("cancelClicked", this), !1);
              },
              ignoreMe: function(o) {
                this._ignoreNextClick = !0;
              },
              textChanged: function(o) {
                this.text = this._textElement.value, this._ignoreNextClick = !0;
              }
            };
            (0, s.registerType)("SimpleInput", [t, l, null]);
          }
        ),
        /***/
        "./esm/utilities/xml_text_writer.js": (
          /*!******************************************!*\
            !*** ./esm/utilities/xml_text_writer.js ***!
            \******************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              Formatting: () => (
                /* binding */
                t
              ),
              /* harmony export */
              XmlTextWriter: () => (
                /* binding */
                l
              )
              /* harmony export */
            });
            var s = n(
              /*! ../typesystem.js */
              "./esm/typesystem.js"
            ), a = n(
              /*! ../ss.js */
              "./esm/ss.js"
            ), t = {
              indented: 1
            };
            (0, s.registerType)("Formatting", t), (0, s.registerEnum)("Formatting", t);
            function l() {
              this.body = `<?xml version='1.0' encoding='UTF-8'?>\r
`, this.formatting = 1, this._elementStack = new a.ss.Stack(), this._pending = !1, this._currentName = "", this._attributes = {}, this._value = "";
            }
            var o = {
              _pushNewElement: function(c) {
                this._writePending(!1), this._elementStack.push(c), this._pending = !0, this._currentName = c;
              },
              _writePending: function(c) {
                var _ = !0;
                if (this._pending) {
                  for (var u = 1; u < this._elementStack.count; u++)
                    this.body += "  ";
                  if (this.body += "<" + this._currentName, a.ss.keyCount(this._attributes) > 0)
                    for (var y = a.ss.enumerate(a.ss.keys(this._attributes)); y.moveNext(); ) {
                      var g = y.current;
                      this.body += a.ss.format(' {0}="{1}"', g, this._attributes[g]);
                    }
                  return a.ss.emptyString(this._value) ? c ? (this.body += ` />\r
`, _ = !0) : this.body += `>\r
` : (this.body += ">", _ = !1, a.ss.emptyString(this._value) || (this.body += this._value)), this._pending = !1, this._currentName = "", this._value = "", this._attributes = {}, _;
                }
                return !1;
              },
              _writeProcessingInstruction: function(c, _) {
              },
              _writeStartElement: function(c) {
                this._pushNewElement(c);
              },
              _writeAttributeString: function(c, _) {
                _ != null ? this._attributes[c] = a.ss.replaceString(_.toString(), "&", "&amp;") : this._attributes[c] = "";
              },
              _writeEndElement: function() {
                if (this._writePending(!0))
                  this._elementStack.pop();
                else {
                  for (var c = 1; c < this._elementStack.count; c++)
                    this.body += "  ";
                  this.body += a.ss.format(`</{0}>\r
`, this._elementStack.pop());
                }
              },
              _writeString: function(c) {
                this._value = a.ss.replaceString(c, "&", "&amp;");
              },
              _writeFullEndElement: function() {
                this._writePending(!1);
                for (var c = 1; c < this._elementStack.count; c++)
                  this.body += "  ";
                this.body += a.ss.format(`</{0}>\r
`, this._elementStack.pop());
              },
              _close: function() {
              },
              _writeElementString: function(c, _) {
                this._writeStartElement(c), this._writeValue(a.ss.replaceString(_, "&", "&amp;")), this._writeEndElement();
              },
              _writeValue: function(c) {
                this._value = a.ss.replaceString(c, "&", "&amp;");
              },
              _writeCData: function(c) {
                this._value = a.ss.format("<![CDATA[{0}]]>", c);
              }
            };
            (0, s.registerType)("XmlTextWriter", [l, o, null]);
          }
        ),
        /***/
        "./esm/video_output_type.js": (
          /*!**********************************!*\
            !*** ./esm/video_output_type.js ***!
            \**********************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              VideoOutputType: () => (
                /* binding */
                a
              )
              /* harmony export */
            });
            var s = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            );
            function a(l, o, c, _, u) {
              this.fps = 0, this.width = 0, this.height = 0, this.totalFrames = 0, this.waitDownload = !1, this.format = "image/jpeg", this.width = l, this.height = o, this.fps = c, this.format = _, this.waitDownload = u;
            }
            var t = {};
            (0, s.registerType)("VideoOutputType", [a, t, null]);
          }
        ),
        /***/
        "./esm/view_mover.js": (
          /*!***************************!*\
            !*** ./esm/view_mover.js ***!
            \***************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              ViewMoverKenBurnsStyle: () => (
                /* binding */
                y
              ),
              /* harmony export */
              ViewMoverSlew: () => (
                /* binding */
                Ee
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./baseutil.js */
              "./esm/baseutil.js"
            ), l = n(
              /*! ./camera_parameters.js */
              "./esm/camera_parameters.js"
            ), o = n(
              /*! ./interfaces.js */
              "./esm/interfaces.js"
            ), c = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), _ = n(
              /*! ./settings.js */
              "./esm/settings.js"
            ), u = n(
              /*! ./space_time_controller.js */
              "./esm/space_time_controller.js"
            );
            function y(Me, B, Pe, k, b, Le) {
              this.interpolationType = 0, this.fastDirectionMove = !1, this._toTargetTime = 0, this._dateTimeSpan = 0, this._complete = !1, this._midpointFired = !1, this.interpolationType = Le, Math.abs(Me.lng - B.lng) > 180 && (Me.lng > B.lng ? Me.lng -= 360 : Me.lng += 360), this._fromDateTime = k, this._toDateTime = b, this._dateTimeSpan = b - k, this._from = Me.copy(), this._to = B.copy(), this._fromTime = u.SpaceTimeController.get_metaNow(), this._toTargetTime = Pe;
            }
            var g = {
              get_complete: function() {
                return this._complete;
              },
              get_currentPosition: function() {
                var Me = u.SpaceTimeController.get_metaNow() - this._fromTime, B = Me / 1e3, Pe = B / this._toTargetTime;
                return !this._midpointFired && Pe >= 0.5 && (this._midpointFired = !0, this._midpoint != null && this._midpoint()), Pe >= 1 ? (Pe = 1, this._complete = !0, this._to.copy()) : _.Settings.get_active().get_galacticMode() && c.globalRenderContext.space ? l.CameraParameters.interpolateGreatCircle(this._from, this._to, Pe, this.interpolationType, this.fastDirectionMove) : l.CameraParameters.interpolate(this._from, this._to, Pe, this.interpolationType, this.fastDirectionMove);
              },
              get_currentDateTime: function() {
                var Me = u.SpaceTimeController.get_metaNow() - this._fromTime, B = Me / 1e3, Pe = B / this._toTargetTime, k = this._dateTimeSpan * Pe, b = new Date(this._fromDateTime.getTime() + s.ss.truncate(k));
                return b;
              },
              get_midpoint: function() {
                return this._midpoint;
              },
              set_midpoint: function(Me) {
                return this._midpoint = Me, Me;
              },
              get_moveTime: function() {
                return this._toTargetTime;
              }
            };
            (0, a.registerType)("ViewMoverKenBurnsStyle", [y, g, null, o.IViewMover]);
            function Ee() {
              this._upTargetTime = 0, this._downTargetTime = 0, this._toTargetTime = 0, this._upTimeFactor = 0.6, this._downTimeFactor = 0.6, this._travelTimeFactor = 7, this._midpointFired = !1, this._complete = !1;
            }
            Ee.create = function(Me, B) {
              var Pe = new Ee();
              return Pe.init(Me, B), Pe;
            }, Ee.createUpDown = function(Me, B, Pe) {
              var k = new Ee();
              return k._upTimeFactor = k._downTimeFactor = Pe, k.init(Me.copy(), B.copy()), k;
            };
            var Ve = {
              init: function(Me, B) {
                Math.abs(Me.lng - B.lng) > 180 && (Me.lng > B.lng ? Me.lng -= 360 : Me.lng += 360), B.zoom <= 0 && (B.zoom = 360), Me.zoom <= 0 && (Me.zoom = 360), this._from = Me, this._to = B, this._fromTime = u.SpaceTimeController.get_metaNow();
                var Pe = 360, k, b = Math.abs(Me.lng - B.lng), Le = Math.abs(Me.lat - B.lat), xe = Math.sqrt(Le * Le + b * b);
                Pe = xe / 3 * 20, Pe > 360 && (Pe = 360), Pe < Me.zoom && (Pe = Me.zoom), k = xe / 180 * (360 / Pe) * this._travelTimeFactor;
                var ze = Math.max(Math.abs(Me.angle - B.angle), Math.abs(Me.rotation - B.rotation)), Se = Math.max(Math.abs(t.Util.logN(Pe, 2) - t.Util.logN(Me.zoom, 2)), ze);
                this._upTargetTime = this._upTimeFactor * Se, this._downTargetTime = this._upTargetTime + k;
                var Te = Math.abs(t.Util.logN(Pe, 2) - t.Util.logN(B.zoom, 2));
                this._toTargetTime = this._downTargetTime + Math.max(this._downTimeFactor * Te, ze), this._fromTop = Me.copy(), this._fromTop.zoom = Pe, this._fromTop.angle = (Me.angle + B.angle) / 2, this._fromTop.rotation = (Me.rotation + B.rotation) / 2, this._toTop = B.copy(), this._toTop.zoom = this._fromTop.zoom, this._toTop.angle = this._fromTop.angle, this._toTop.rotation = this._fromTop.rotation;
              },
              get_complete: function() {
                return this._complete;
              },
              get_currentPosition: function() {
                var Me = u.SpaceTimeController.get_metaNow() - this._fromTime, B = Me / 1e3;
                if (B < this._upTargetTime)
                  return l.CameraParameters.interpolate(this._from, this._fromTop, B / this._upTargetTime, 3, !1);
                if (B < this._downTargetTime)
                  return B -= this._upTargetTime, _.Settings.get_active().get_galacticMode() && c.globalRenderContext.space ? l.CameraParameters.interpolateGreatCircle(this._fromTop, this._toTop, B / (this._downTargetTime - this._upTargetTime), 3, !1) : l.CameraParameters.interpolate(this._fromTop, this._toTop, B / (this._downTargetTime - this._upTargetTime), 3, !1);
                this._midpointFired || (this._midpointFired = !0, this._midpoint != null && this._midpoint()), B -= this._downTargetTime;
                var Pe = B / (this._toTargetTime - this._downTargetTime);
                return Pe > 1 ? (Pe = 1, this._complete = !0, this._to.copy()) : l.CameraParameters.interpolate(this._toTop, this._to, Pe, 3, !1);
              },
              get_currentDateTime: function() {
                return u.SpaceTimeController.updateClock(), u.SpaceTimeController.get_now();
              },
              get_midpoint: function() {
                return this._midpoint;
              },
              set_midpoint: function(Me) {
                return this._midpoint = Me, Me;
              },
              get_moveTime: function() {
                return this._toTargetTime;
              }
            };
            (0, a.registerType)("ViewMoverSlew", [Ee, Ve, null, o.IViewMover]);
          }
        ),
        /***/
        "./esm/viz_layer.js": (
          /*!**************************!*\
            !*** ./esm/viz_layer.js ***!
            \**************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              VizLayer: () => (
                /* binding */
                _
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), l = n(
              /*! ./graphics/primitives3d.js */
              "./esm/graphics/primitives3d.js"
            ), o = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), c = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            );
            function _() {
              this.table = [], this.items = [], this._imageReady = !1, this._dateColumn = 0, this._latColumn = 1, this._lngColumn = 2, this._depthColumn = 3, this._magColumn = 4;
            }
            _.earthRadius = 6371e3;
            var u = {
              load: function(y) {
                var g = this, Ee = y.split(`\r
`);
                this._starProfile = document.createElement("img"), this._starProfile.addEventListener("load", function(Pe) {
                  g._imageReady = !0;
                }, !1), this._starProfile.src = o.URLHelpers.singleton.engineAssetUrl("StarProfileAlpha.png");
                for (var Ve = !1, Me = s.ss.enumerate(Ee); Me.moveNext(); ) {
                  var B = Me.current;
                  Ve ? this.table.push(B.split("	")) : (this.header = B.split("	"), Ve = !0);
                }
              },
              prepare: function() {
                this._worldList = new Array(this.table.length), this._transformedList = new Array(this.table.length);
                for (var y = 0, g = s.ss.enumerate(this.table); g.moveNext(); ) {
                  var Ee = g.current, Ve = new l.DataItem();
                  Ve.eventTime = s.ss.date(Ee[this._dateColumn]);
                  var Me = (6371e3 - parseFloat(Ee[this._depthColumn]) * 1e3) / 6371e3;
                  Ve.location = c.Coordinates.geoTo3dRad(parseFloat(Ee[this._latColumn]), parseFloat(Ee[this._lngColumn]) + 180, Me), Ve.tranformed = new t.Vector3d(), Ve.size = Math.pow(2, parseFloat(Ee[this._magColumn])) / 50, this._worldList[y] = Ve.location, this._transformedList[y] = Ve.tranformed, this.items.push(Ve), y++;
                }
              },
              draw: function(y) {
                if (this._imageReady) {
                  y.device.save(), y.WVP.projectArrayToScreen(this._worldList, this._transformedList);
                  var g = y.device;
                  g.globalAlpha = 0.4;
                  var Ee = y.width, Ve = y.height;
                  t.Vector3d.makeCopy(y.get_viewPoint());
                  for (var Me = y.get_fovScale() / 100, B = s.ss.enumerate(this.items); B.moveNext(); ) {
                    var Pe = B.current;
                    if (Pe.tranformed.z < 1) {
                      var k = Pe.tranformed.x, b = Pe.tranformed.y, Le = 4 * Pe.size / Me, xe = Le / 2;
                      k > -xe && k < Ee + xe && b > -xe && b < Ve + xe && g.drawImage(this._starProfile, k - Le / 2, b - Le / 2, Le, Le);
                    }
                  }
                  y.device.restore();
                }
              }
            };
            (0, a.registerType)("VizLayer", [_, u, null]);
          }
        ),
        /***/
        "./esm/web_file.js": (
          /*!*************************!*\
            !*** ./esm/web_file.js ***!
            \*************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              StateType: () => (
                /* binding */
                l
              ),
              /* harmony export */
              WebFile: () => (
                /* binding */
                o
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), l = {
              pending: 0,
              received: 1,
              error: 2
            };
            (0, a.registerType)("StateType", l), (0, a.registerEnum)("StateType", l);
            function o(_) {
              this._state = 0, this.responseType = "", this._triedOnce = !1, this._url = _;
            }
            var c = {
              send: function() {
                typeof navigator > "u" || (this._CORS(), this.set_state(l.pending));
              },
              get_message: function() {
                return this._message;
              },
              get_state: function() {
                return this._state;
              },
              set_state: function(_) {
                return this._state = _, this.onStateChange != null && this.onStateChange(), _;
              },
              _loadData: function(_) {
                this._data = _, this.set_state(l.received);
              },
              _loadBlob: function(_) {
                this._blobdata = _, this.set_state(l.received);
              },
              _error: function() {
                this._message = s.ss.format("Error encountered loading {0}", this._url), this.set_state(l.error);
              },
              _timeOut: function() {
                this._message = s.ss.format("Timeout encountered loading {0}", this._url), this.set_state(l.error);
              },
              _CORS: function() {
                var _ = this;
                this._xhr = new XMLHttpRequest();
                try {
                  this._xhr.open("GET", this._url), this.responseType != null && (this._xhr.responseType = this.responseType), this._xhr.onreadystatechange = function() {
                    if (_._xhr.readyState === 4) {
                      if (_._xhr.status)
                        _._xhr.status >= 400 ? (_._message = _._xhr.statusText, _.set_state(l.error)) : _.responseType ? _._loadBlob(_._xhr.response) : _._loadData(_._xhr.responseText);
                      else if (!_._triedOnce) {
                        _._triedOnce = !0, _._xhr.onreadystatechange = null;
                        var u = t.URLHelpers.singleton.activateProxy(_._url);
                        u !== null ? (_._url = u, _._CORS()) : (_._message = _._xhr.statusText, _.set_state(l.error));
                      }
                    }
                  }, this._xhr.send();
                } catch (u) {
                  throw this._message = u.message, this.set_state(l.error), u;
                }
              },
              getText: function() {
                return this._data;
              },
              getBlob: function() {
                return this._blobdata;
              },
              getXml: function() {
                var _ = new DOMParser();
                return _.parseFromString(this._data, "text/xml");
              }
            };
            (0, a.registerType)("WebFile", [o, c, null]);
          }
        ),
        /***/
        "./esm/wtml.js": (
          /*!*********************!*\
            !*** ./esm/wtml.js ***!
            \*********************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              FolderDownloadAction: () => (
                /* binding */
                y
              ),
              /* harmony export */
              Wtml: () => (
                /* binding */
                Ee
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), o = n(
              /*! ./imageset.js */
              "./esm/imageset.js"
            ), c = n(
              /*! ./place.js */
              "./esm/place.js"
            ), _ = n(
              /*! ./folder.js */
              "./esm/folder.js"
            ), u = n(
              /*! ./wwt_control.js */
              "./esm/wwt_control.js"
            );
            function y(Me, B) {
              this.loadChildFolders = !1, this._numLoadingFolders = 0, this._onComplete = Me, this.loadChildFolders = B;
            }
            var g = {
              _folderLoaded: function() {
                this._numLoadingFolders--, this._numLoadingFolders || this._onComplete();
              },
              startingNewFolderLoad: function(Me) {
                var B = this;
                this._numLoadingFolders++, Me.childLoadCallback(function() {
                  Ee.loadImagesets(Me, B), B._folderLoaded();
                });
              }
            };
            (0, a.registerType)("FolderDownloadAction", [y, g, null]);
            function Ee() {
            }
            Ee.getWtmlFile = function(Me, B, Pe) {
              Pe == null && (Pe = !1);
              var k = new _.Folder();
              k.set_url(Me);
              var b = new y(B, Pe);
              return b.startingNewFolderLoad(k), k;
            }, (0, l.set_loadWtmlFile)(Ee.getWtmlFile), Ee.loadImagesets = function(Me, B) {
              for (var Pe = Me.get_children(), k = s.ss.enumerate(Pe); k.moveNext(); ) {
                var b = k.current;
                if (s.ss.canCast(b, o.Imageset)) {
                  var Le = b;
                  u.WWTControl.addImageSetToRepository(Le);
                }
                if (s.ss.canCast(b, c.Place)) {
                  var xe = b;
                  xe.get_studyImageset() != null && u.WWTControl.addImageSetToRepository(xe.get_studyImageset()), xe.get_backgroundImageset() != null && u.WWTControl.addImageSetToRepository(xe.get_backgroundImageset());
                }
                s.ss.canCast(b, _.Folder) && B.loadChildFolders && B.startingNewFolderLoad(b);
              }
              if (!s.ss.emptyString(u.WWTControl.imageSetName))
                for (var ze = u.WWTControl.imageSetName.toLowerCase(), Se = s.ss.enumerate(u.WWTControl.getImageSets()); Se.moveNext(); ) {
                  var Te = Se.current;
                  Te.get_name().toLowerCase() === ze && t.globalRenderContext.set_backgroundImageset(Te);
                }
            };
            var Ve = {};
            (0, a.registerType)("Wtml", [Ee, Ve, null]);
          }
        ),
        /***/
        "./esm/wwt_control.js": (
          /*!****************************!*\
            !*** ./esm/wwt_control.js ***!
            \****************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              WWTControl: () => (
                /* binding */
                $e
              ),
              /* harmony export */
              WWTControlBuilder: () => (
                /* binding */
                Qe
              ),
              /* harmony export */
              WWTElementEvent: () => (
                /* binding */
                Ne
              )
              /* harmony export */
            });
            var s = n(
              /*! ./ss.js */
              "./esm/ss.js"
            ), a = n(
              /*! ./typesystem.js */
              "./esm/typesystem.js"
            ), t = n(
              /*! ./render_globals.js */
              "./esm/render_globals.js"
            ), l = n(
              /*! ./data_globals.js */
              "./esm/data_globals.js"
            ), o = n(
              /*! ./blend_state.js */
              "./esm/blend_state.js"
            ), c = n(
              /*! ./color.js */
              "./esm/color.js"
            ), _ = n(
              /*! ./url_helpers.js */
              "./esm/url_helpers.js"
            ), u = n(
              /*! ./util.js */
              "./esm/util.js"
            ), y = n(
              /*! ./double3d.js */
              "./esm/double3d.js"
            ), g = n(
              /*! ./graphics/primitives3d.js */
              "./esm/graphics/primitives3d.js"
            ), Ee = n(
              /*! ./graphics/sprite2d.js */
              "./esm/graphics/sprite2d.js"
            ), Ve = n(
              /*! ./annotation.js */
              "./esm/annotation.js"
            ), Me = n(
              /*! ./camera_parameters.js */
              "./esm/camera_parameters.js"
            ), B = n(
              /*! ./constellations.js */
              "./esm/constellations.js"
            ), Pe = n(
              /*! ./coordinates.js */
              "./esm/coordinates.js"
            ), k = n(
              /*! ./grids.js */
              "./esm/grids.js"
            ), b = n(
              /*! ./imageset.js */
              "./esm/imageset.js"
            ), Le = n(
              /*! ./minor_planets.js */
              "./esm/minor_planets.js"
            ), xe = n(
              /*! ./place.js */
              "./esm/place.js"
            ), ze = n(
              /*! ./planets.js */
              "./esm/planets.js"
            ), Se = n(
              /*! ./settings.js */
              "./esm/settings.js"
            ), Te = n(
              /*! ./space_time_controller.js */
              "./esm/space_time_controller.js"
            ), D = n(
              /*! ./render_triangle.js */
              "./esm/render_triangle.js"
            ), ke = n(
              /*! ./tile.js */
              "./esm/tile.js"
            ), Fe = n(
              /*! ./tile_cache.js */
              "./esm/tile_cache.js"
            ), He = n(
              /*! ./video_output_type.js */
              "./esm/video_output_type.js"
            ), We = n(
              /*! ./ui_tools.js */
              "./esm/ui_tools.js"
            ), Ke = n(
              /*! ./view_mover.js */
              "./esm/view_mover.js"
            ), $ = n(
              /*! ./tours/tour_player.js */
              "./esm/tours/tour_player.js"
            ), De = n(
              /*! ./layers/layer_manager.js */
              "./esm/layers/layer_manager.js"
            ), Re = n(
              /*! ./tours/tour_document.js */
              "./esm/tours/tour_document.js"
            ), Ie = n(
              /*! ./tours/tour_edit.js */
              "./esm/tours/tour_edit.js"
            ), O = n(
              /*! ./planets_3d.js */
              "./esm/planets_3d.js"
            ), Ue = n(
              /*! ./script_interface.js */
              "./esm/script_interface.js"
            );
            function $e() {
              this.freestandingMode = !1, this.uiController = null, this._annotations = [], this._hoverText = "", this._hoverTextPoint = new y.Vector2d(), this._lastMouseMove = new Date(1900, 1, 0, 0, 0, 0, 0), this.layers = [], this._frameCount = 0, this._zoomMax = 360, this._zoomMaxSolarSystem = 1e16, this._zoomMin = 0.001373291015625, this._zoomMinSolarSystem = 1e-8, this.constellation = "UMA", this._fadePoints = null, this.fader = o.BlendState.create(!0, 2e3), this._crossFadeFrame = !1, this._crossFadeTexture = null, this._sprite = new Ee.Sprite2d(), this.renderType = 2, this._milkyWayBackground = null, this.capturingVideo = !1, this._videoBlobReady = null, this.dumpFrameParams = null, this._videoBlobQueue = {}, this._videoQueueIndex = 0, this._emptyFrames = [], this._beginZoom = 1, this._dragging = !1, this._mouseDown = !1, this._hasTwoTouches = !1, this._lastX = 0, this._lastY = 0, this._pointerIds = new Array(2), this._pinchingZoomRect = new Array(2), this._moved = !1, this._zooming = !1, this._rotating = !1, this._dragThreshold = 4, this._foregroundCanvas = null, this._fgDevice = null, this._tracking = !1, this._trackingObject = null, this.sandboxMode = !1, this._solarSystemTrack = 65536, this._moving = !1, this._targetStudyImageset = null, this._targetBackgroundImageset = null, this.tour = null, this.tourEdit = null, this._crossHairs = null;
            }
            $e.imageSets = [], $e.imageSetName = "", $e.showDataLayers = !1, $e._renderNeeded = !1, $e.constellationsFigures = null, $e.constellationsBoundries = null, $e.solarSystemObjectsNames = ["Sun", "Mercury", "Venus", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune", "Pluto", "Moon", "Io", "Europa", "Ganymede", "Callisto", "IoShadow", "EuropaShadow", "GanymedeShadow", "CallistoShadow", "SunEclipsed", "Earth", "Custom", "Undefined"], $e.addImageSetToRepository = function(Ge) {
              for (var Ye = s.ss.enumerate($e.imageSets); Ye.moveNext(); ) {
                var je = Ye.current;
                if (je.get_imageSetID() === Ge.get_imageSetID())
                  return je;
              }
              return $e.imageSets.push(Ge), Ge;
            }, $e.getImageSets = function() {
              return $e.imageSets;
            }, $e.get_renderNeeded = function() {
              return $e._renderNeeded;
            }, $e.set_renderNeeded = function(Ge) {
              return $e._renderNeeded = !0, Ge;
            }, $e.initControl = function(Ge) {
              return $e.initControl2(Ge, !0);
            }, $e.initControlParam = function(Ge, Ye) {
              return $e.initControl2(Ge, !0);
            }, $e.initControl2 = function(Ge, Ye) {
              return $e.initControl6(Ge, Ye, 0, 0, 360, "Sky");
            }, $e.initControl6 = function(Ge, Ye, je, ht, qe, lt) {
              if (t.globalRenderContext.device == null) {
                $e.scriptInterface = new Ue.ScriptInterface(), $e.scriptInterface.settings = Se.Settings.get_current(), (0, l.set_globalScriptInterface)($e.scriptInterface);
                var ft = $e._createCanvasElement(Ge), _t = ft.getContext("webgl2");
                if (_t != null ? (0, t.set_useGlVersion2)(!0) : (console.warn("This browser does not support WebGL 2.0. Some features will work suboptimally. To get the full WWT experience, consider using the latest version of Chrome, Firefox or Edge. In case you would like to use Safari, we recommend that you enable WebGL 2.0"), _t = ft.getContext("webgl")), _t == null && (_t = ft.getContext("experimental-webgl")), _t == null) {
                  var St = ft.getContext("2d");
                  t.globalRenderContext.device = St;
                } else
                  (0, t.set_tilePrepDevice)(_t), t.globalRenderContext.gl = _t, (0, t.set_useGl)(!0);
                l.globalWWTControl.canvas = ft, t.globalRenderContext.width = ft.width, t.globalRenderContext.height = ft.height, l.globalWWTControl.setup(ft, je, ht, qe), B.Constellations.initializeConstellations(), De.LayerManager.oneTimeInitialization(), lt === "earth" ? t.globalRenderContext.set_backgroundImageset(
                  b.Imageset.create(
                    "Blue Marble",
                    // name
                    _.URLHelpers.singleton.coreStaticUrl("wwtweb/tiles.aspx?q={1},{2},{3},bm200407"),
                    b.ImageSetType.earth,
                    // dataSetType
                    b.BandPass.visible,
                    // bandPass
                    b.ProjectionType.toast,
                    // projectionType
                    101,
                    // imageSetID
                    0,
                    // baseLevel
                    7,
                    // levels
                    256,
                    // tileSize (unused)
                    180,
                    // basetileDegrees
                    ".png",
                    // extension
                    !1,
                    // bottomsUp
                    "",
                    // quadTreeMap
                    0,
                    // centerX
                    0,
                    // centerY
                    0,
                    // rotation
                    !1,
                    // sparse
                    _.URLHelpers.singleton.coreStaticUrl("wwtweb/thumbnail.aspx?name=bm200407"),
                    !0,
                    // defaultSet
                    !1,
                    // elevationModel
                    0,
                    // widthFactor
                    0,
                    // offsetX
                    0,
                    // offsetY
                    "",
                    // creditsText
                    "",
                    // creditsUrl
                    "",
                    // demUrl
                    "",
                    // altUrl
                    6371e3,
                    // meanRadius
                    "Earth"
                    // referenceFrame
                  )
                ) : lt === "black" ? t.globalRenderContext.set_backgroundImageset(
                  b.Imageset.create(
                    "Black Sky Background",
                    // name
                    "",
                    // url
                    b.ImageSetType.sky,
                    // dataSetType
                    b.BandPass.visible,
                    // bandPass
                    b.ProjectionType.toast,
                    // projectionType
                    102,
                    // imageSetID
                    0,
                    // baseLevel
                    0,
                    // levels
                    256,
                    // tileSize (unused)
                    180,
                    // baseTileDegrees
                    ".png",
                    // extension
                    !1,
                    // bottomsUp
                    "0123",
                    // quadTreeMap
                    0,
                    // centerX
                    0,
                    // centerY
                    0,
                    // rotation
                    !1,
                    // sparse
                    "",
                    // thumbnailUrl
                    !1,
                    // defaultSet
                    !1,
                    // elevationModel
                    2,
                    // widthFactor
                    0,
                    // offsetX
                    0,
                    // offsetY
                    "",
                    // creditsText
                    "",
                    // creditsUrl
                    "",
                    // demUrl
                    "",
                    // altUrl
                    1,
                    // meanRadius
                    "Sky"
                    // referenceFrame
                  )
                ) : t.globalRenderContext.set_backgroundImageset(
                  b.Imageset.create(
                    "DSS",
                    // name
                    _.URLHelpers.singleton.coreStaticUrl("wwtweb/dss.aspx?q={1},{2},{3}"),
                    b.ImageSetType.sky,
                    // dataSetTYpe
                    b.BandPass.visible,
                    // bandPass
                    b.ProjectionType.toast,
                    // projectionType
                    100,
                    // imageSetId
                    0,
                    // baseLevel
                    12,
                    // levels
                    256,
                    // tileSize (unused)
                    180,
                    // baseTileDegrees
                    ".png",
                    // extension
                    !1,
                    // bottomsUp
                    "",
                    // quadTreeMap
                    0,
                    // centerX
                    0,
                    // centerY
                    0,
                    // rotation
                    !1,
                    // sparse
                    _.URLHelpers.singleton.coreStaticUrl("thumbnails/DSS.png"),
                    !0,
                    // defaultSet
                    !1,
                    // elevationModel
                    0,
                    // widthFactor
                    0,
                    // offsetX
                    0,
                    // offsetY
                    "",
                    // creditsText
                    "",
                    // creditsUrl
                    "",
                    // demUrl
                    "",
                    // altUrl
                    1,
                    // meanRadius
                    "Sky"
                    // referenceFrame
                  )
                );
              }
              return t.globalRenderContext.viewCamera.lng += 0, t.globalRenderContext._initGL(), Ye && l.globalWWTControl.render(), l.globalScriptInterface;
            }, $e._createCanvasElement = function(Ge) {
              var Ye = document.getElementById(Ge), je = document.createElement("canvas");
              return je.height = Ye.clientHeight, je.width = Ye.clientWidth, Ye.appendChild(je), je;
            }, $e.useUserLocation = function() {
              navigator.geolocation.getCurrentPosition($e._getLocation, $e._getLocationError);
            }, $e._getLocation = function(Ge) {
              Ge.coords.latitude && Se.Settings.get_globalSettings().set_locationLat(Ge.coords.latitude), Ge.coords.longitude && Se.Settings.get_globalSettings().set_locationLng(Ge.coords.longitude), Ge.coords.altitude && Se.Settings.get_globalSettings().set_locationAltitude(Ge.coords.altitude);
            }, $e._getLocationError = function(Ge) {
              Ge != null && Ge.coords != null && (Ge.coords.latitude, Ge.coords.longitude);
            }, $e.setBackgroundImageName = function(Ge) {
              $e.imageSetName = Ge;
            }, $e.setForegroundImageName = function(Ge) {
              $e.imageSetName = Ge;
            }, $e.showLayers = function(Ge) {
              $e.showDataLayers = Ge;
            };
            var Ze = {
              _addAnnotation: function(Ge) {
                this._annotations.push(Ge), Ve.Annotation.batchDirty = !0;
              },
              _removeAnnotation: function(Ge) {
                s.ss.remove(this._annotations, Ge), Ve.Annotation.batchDirty = !0;
              },
              _clearAnnotations: function() {
                this._annotations.length = 0, Ve.Annotation.batchDirty = !0;
              },
              _annotationclicked: function(Ge, Ye, je, ht) {
                if (this._annotations != null && this._annotations.length > 0)
                  for (var qe = s.ss.enumerate(this._annotations); qe.moveNext(); ) {
                    var lt = qe.current;
                    if (lt.hitTest(this.renderContext, Ge, Ye, je, ht))
                      return l.globalScriptInterface._fireAnnotationclicked(Ge, Ye, lt.get_id()), !0;
                  }
                return !1;
              },
              _annotationHover: function(Ge, Ye, je, ht) {
                if (this._annotations != null && this._annotations.length > 0)
                  for (var qe = s.ss.enumerate(this._annotations); qe.moveNext(); ) {
                    var lt = qe.current;
                    if (lt.hitTest(this.renderContext, Ge, Ye, je, ht))
                      return this._hoverText = lt.get_label(), this._hoverTextPoint = y.Vector2d.create(je, ht), !0;
                  }
                return !1;
              },
              get_zoomMax: function() {
                return this.renderContext.get_backgroundImageset() != null && this.renderContext.get_backgroundImageset().get_dataSetType() == b.ImageSetType.solarSystem ? this._zoomMaxSolarSystem : this._zoomMax;
              },
              set_zoomMax: function(Ge) {
                return this._zoomMax = Ge, Ge;
              },
              setSolarSystemMaxZoom: function(Ge) {
                this._zoomMaxSolarSystem = Ge;
              },
              get_zoomMin: function() {
                return this.renderContext.get_backgroundImageset() != null && this.renderContext.get_backgroundImageset().get_dataSetType() == b.ImageSetType.solarSystem ? this._zoomMinSolarSystem : this._zoomMin;
              },
              set_zoomMin: function(Ge) {
                return this._zoomMin = Ge, Ge;
              },
              setSolarSystemMinZoom: function(Ge) {
                this._zoomMinSolarSystem = Ge;
              },
              _notifyMoveComplete: function() {
              },
              get_crossFadeFrame: function() {
                return this._crossFadeFrame;
              },
              set_crossFadeFrame: function(Ge) {
                return Ge && this._crossFadeFrame !== Ge && (this._crossFadeTexture != null, this._crossFadeTexture = this.renderContext._getScreenTexture()), this._crossFadeFrame = Ge, Ge || this._crossFadeTexture != null && (this._crossFadeTexture = null), Ge;
              },
              _fadeFrame: function() {
                if (this.renderContext.gl != null) {
                  var Ge = Se.Settings.get_active().getSetting(17);
                  if (Ge.opacity > 0) {
                    var Ye = c.Color._fromArgbColor(255 - We.UiTools.gamma(255 - s.ss.truncate(Ge.opacity * 255), 0.45454545454545453), c.Colors.get_black());
                    if (Ge.opacity > 0 || (Ye = c.Color._fromArgbColor(255 - We.UiTools.gamma(255 - s.ss.truncate(Ge.opacity * 255), 1 / 2.2), c.Colors.get_black())), this._crossFadeFrame ? Ye = c.Color._fromArgbColor(We.UiTools.gamma(s.ss.truncate(Ge.opacity * 255), 1 / 2.2), c.Colors.get_white()) : this._crossFadeTexture != null && (this._crossFadeTexture = null), this._fadePoints == null) {
                      this._fadePoints = new Array(4);
                      for (var je = 0; je < 4; je++)
                        this._fadePoints[je] = new y.PositionColoredTextured();
                    }
                    this._fadePoints[0].position.x = -this.renderContext.width / 2, this._fadePoints[0].position.y = this.renderContext.height / 2, this._fadePoints[0].position.z = 1347, this._fadePoints[0].tu = 0, this._fadePoints[0].tv = 1, this._fadePoints[0].color = Ye, this._fadePoints[1].position.x = -this.renderContext.width / 2, this._fadePoints[1].position.y = -this.renderContext.height / 2, this._fadePoints[1].position.z = 1347, this._fadePoints[1].tu = 0, this._fadePoints[1].tv = 0, this._fadePoints[1].color = Ye, this._fadePoints[2].position.x = this.renderContext.width / 2, this._fadePoints[2].position.y = this.renderContext.height / 2, this._fadePoints[2].position.z = 1347, this._fadePoints[2].tu = 1, this._fadePoints[2].tv = 1, this._fadePoints[2].color = Ye, this._fadePoints[3].position.x = this.renderContext.width / 2, this._fadePoints[3].position.y = -this.renderContext.height / 2, this._fadePoints[3].position.z = 1347, this._fadePoints[3].tu = 1, this._fadePoints[3].tv = 0, this._fadePoints[3].color = Ye, this._sprite.draw(this.renderContext, this._fadePoints, 4, this._crossFadeTexture, !0, 1);
                  }
                }
              },
              captureVideo: function(Ge, Ye, je, ht, qe, lt) {
                this.capturingVideo = !0, this._videoBlobReady = Ge, s.ss.clearKeys(this._videoBlobQueue), this._videoQueueIndex = 0, this._emptyFrames.length = 0, this.dumpFrameParams = new He.VideoOutputType(Ye, je, ht, lt, !0), Te.SpaceTimeController.frameDumping = !0, Te.SpaceTimeController.framesPerSecond = ht, Te.SpaceTimeController.totalFrames = qe, Te.SpaceTimeController.currentFrameNumber = 0;
              },
              // To preserve semantic backwards compatibility, this function must requeue itself
              // to be called again in a timeout.
              render: function() {
                var Ge = this;
                this.renderOneFrame(), setTimeout(function() {
                  Ge.render();
                }, 10);
              },
              renderOneFrame: function() {
                this.renderContext.get_backgroundImageset() != null ? this.renderType = this.renderContext.get_backgroundImageset().get_dataSetType() : this.renderType = 2;
                var Ge = !1;
                if (this.canvas.width !== this.canvas.parentNode.clientWidth && (this.canvas.width = this.canvas.parentNode.clientWidth, Ge = !0), this.canvas.height !== this.canvas.parentNode.clientHeight && (this.canvas.height = this.canvas.parentNode.clientHeight, Ge = !0), Ge && this.explorer != null && this.explorer.refresh(), !(this.canvas.width < 1 || this.canvas.height < 1)) {
                  if (Ge && (this._crossHairs = null), ke.Tile.lastDeepestLevel = ke.Tile.deepestLevel, D.RenderTriangle.width = this.renderContext.width = this.canvas.width, D.RenderTriangle.height = this.renderContext.height = this.canvas.height, ke.Tile.tilesInView = 0, ke.Tile.tilesTouched = 0, ke.Tile.deepestLevel = 0, Te.SpaceTimeController.set_metaNow(s.ss.now()), this.get__mover() != null) {
                    if (Te.SpaceTimeController.set_now(this.get__mover().get_currentDateTime()), ze.Planets.updatePlanetLocations(this.get_solarSystemMode()), this.get__mover() != null) {
                      var Ye = this.get__mover().get_currentPosition();
                      if (this.renderContext.targetCamera = Ye.copy(), this.renderContext.viewCamera = Ye.copy(), this.renderContext.space && Se.Settings.get_active().get_galacticMode()) {
                        var je = Pe.Coordinates.j2000toGalactic(Ye.get_RA() * 15, Ye.get_dec());
                        this.renderContext.targetAlt = this.renderContext.alt = je[1], this.renderContext.targetAz = this.renderContext.az = je[0];
                      } else if (this.renderContext.space && Se.Settings.get_active().get_localHorizonMode()) {
                        var ht = Pe.Coordinates.equitorialToHorizon(Pe.Coordinates.fromRaDec(Ye.get_RA(), Ye.get_dec()), Te.SpaceTimeController.get_location(), Te.SpaceTimeController.get_now());
                        this.renderContext.targetAlt = this.renderContext.alt = ht.get_alt(), this.renderContext.targetAz = this.renderContext.az = ht.get_az();
                      }
                      this.get__mover().get_complete() && (l.globalScriptInterface._fireArrived(this.get__mover().get_currentPosition().get_RA(), this.get__mover().get_currentPosition().get_dec(), t.globalRenderContext.viewCamera.zoom), this.set__mover(null), this._notifyMoveComplete());
                    }
                  } else
                    Te.SpaceTimeController.updateClock(), ze.Planets.updatePlanetLocations(this.get_solarSystemMode()), this._updateViewParameters();
                  if (this.renderContext.clear(), this.renderType === 4) {
                    this._solarSystemTrack < 20 && (ze.Planets.getAdjustedPlanetRadius(this._solarSystemTrack), this.renderContext.get_solarSystemCameraDistance(), this.renderContext.get_fovLocal()), this._trackingObject == null, this.renderContext.setupMatricesSolarSystem(!0);
                    var qe = this.renderContext.viewCamera.zoom, lt = Math.min(1, Math.max(0, Math.log(qe) - 8.4) / 4.2), ft = Math.min(1, Math.max(0, Math.log(qe) - 17.9) / 2.3), _t = this.renderContext.get_world(), St = this.renderContext.get_world().clone();
                    St._multiply(y.Matrix3d._scaling(1e5, 1e5, 1e5)), St._multiply(y.Matrix3d._rotationX(23.5 / 180 * Math.PI)), St._multiply(y.Matrix3d.translation(this.renderContext.cameraPosition)), this.renderContext.set_world(St), this.renderContext.set_worldBase(St), this.renderContext.space = !0, this.renderContext.makeFrustum();
                    var yt = this.renderContext.lighting;
                    if (this.renderContext.lighting = !1, Se.Settings.get_active().get_solarSystemMilkyWay() && lt < 1 && (this._milkyWayBackground == null && (this._milkyWayBackground = this.getImagesetByName("Digitized Sky Survey (Color)")), this._milkyWayBackground != null)) {
                      D.RenderTriangle.cullInside = !0;
                      var Ct = (1 - lt) / 2;
                      this.renderContext.drawImageSet(this._milkyWayBackground, Ct * 100), D.RenderTriangle.cullInside = !1;
                    }
                    this._drawSkyOverlays(), this.renderContext.lighting = yt, this.renderContext.space = !1, this.renderContext.set_world(_t), this.renderContext.set_worldBase(_t), this.renderContext.makeFrustum();
                    var Lt = this.renderContext.cameraPosition, Vt = this.renderContext.get_world(), Tt = this.renderContext.get_world();
                    Tt._multiply(y.Matrix3d.translation(this.renderContext.viewCamera.viewTarget)), this.renderContext.cameraPosition = y.Vector3d.subtractVectors(this.renderContext.cameraPosition, this.renderContext.viewCamera.viewTarget), this.renderContext.set_world(Tt), this.renderContext.makeFrustum(), Se.Settings.get_active().get_solarSystemCosmos() && k.Grids.drawCosmos3D(this.renderContext, 1), Se.Settings.get_active().get_solarSystemMilkyWay() && ft > 0 && k.Grids.drawGalaxyImage(this.renderContext, ft), Se.Settings.get_active().get_solarSystemStars() && k.Grids.drawStars3D(this.renderContext, 1), Tt = Vt;
                    var xt = this.renderContext.viewCamera.viewTarget, Ot = y.Vector3d.create(-xt.x, -xt.y, -xt.z);
                    this.renderContext.cameraPosition = Lt, Tt._multiply(y.Matrix3d.translation(Ot)), this.renderContext.set_world(Tt), this.renderContext.makeFrustum(), De.LayerManager._draw(this.renderContext, 1, !0, "Sky", !0, !1), this.renderContext.set_world(Vt), this.renderContext.makeFrustum(), this.renderContext.get_solarSystemCameraDistance() < 15e3 && (this.renderContext.setupMatricesSolarSystem(!1), Se.Settings.get_active().get_solarSystemMinorPlanets() && Le.MinorPlanets.drawMPC3D(this.renderContext, 1, this.renderContext.viewCamera.viewTarget), Se.Settings.get_active().get_solarSystemPlanets() && O.Planets3d.drawPlanets3D(this.renderContext, 1, this.renderContext.viewCamera.viewTarget));
                  } else {
                    if (!this.renderType || this.renderType === 1 ? this.renderContext._setupMatricesLand3d() : this.renderContext.setupMatricesSpace3d(this.renderContext.width, this.renderContext.height), this.renderContext.drawImageSet(this.renderContext.get_backgroundImageset(), 100), this.renderContext.get_foregroundImageset() != null)
                      if (this.renderContext.get_foregroundImageset().get_dataSetType() !== this.renderContext.get_backgroundImageset().get_dataSetType())
                        this.renderContext.set_foregroundImageset(null);
                      else if (this.renderContext.viewCamera.opacity !== 100 && this.renderContext.gl == null) {
                        (this._foregroundCanvas.width !== this.renderContext.width || this._foregroundCanvas.height !== this.renderContext.height) && (this._foregroundCanvas.width = s.ss.truncate(this.renderContext.width), this._foregroundCanvas.height = s.ss.truncate(this.renderContext.height));
                        var Pt = this.renderContext.device;
                        this._fgDevice.clearRect(0, 0, this.renderContext.width, this.renderContext.height), this.renderContext.device = this._fgDevice, this.renderContext.drawImageSet(this.renderContext.get_foregroundImageset(), 100), this.renderContext.device = Pt, this.renderContext.device.save(), this.renderContext.device.globalAlpha = this.renderContext.viewCamera.opacity / 100, this.renderContext.device.drawImage(this._foregroundCanvas, 0, 0), this.renderContext.device.restore();
                      } else
                        this.renderContext.drawImageSet(this.renderContext.get_foregroundImageset(), this.renderContext.viewCamera.opacity);
                    if (this.renderType === 2)
                      for (var kt = s.ss.enumerate(this.renderContext.get_catalogHipsImagesets()); kt.moveNext(); ) {
                        var zt = kt.current;
                        zt.get_hipsProperties().get_catalogSpreadSheetLayer().enabled && zt.get_hipsProperties().get_catalogSpreadSheetLayer().lastVersion === zt.get_hipsProperties().get_catalogSpreadSheetLayer().get_version() && this.renderContext.drawImageSet(zt, 100);
                      }
                    if (this.renderType === 2 && Se.Settings.get_active().get_showSolarSystem() && (ze.Planets.drawPlanets(this.renderContext, 1), this.constellation = B.Constellations.containment.findConstellationForPoint(this.renderContext.viewCamera.get_RA(), this.renderContext.viewCamera.get_dec()), this._drawSkyOverlays()), this.get_planetLike() || this.get_space()) {
                      if (this.get_space())
                        this.renderContext.set_worldBaseNonRotating(this.renderContext.get_world()), this._targetBackgroundImageset != null && this.renderContext.set_nominalRadius(this._targetBackgroundImageset.get_meanRadius());
                      else {
                        var Bt = Pe.Coordinates.mstFromUTC2(Te.SpaceTimeController.get_now(), 0) / 180 * Math.PI;
                        this.renderContext.set_worldBaseNonRotating(y.Matrix3d.multiplyMatrix(y.Matrix3d._rotationY(Bt), this.renderContext.get_worldBase())), this._targetBackgroundImageset != null && this.renderContext.set_nominalRadius(this._targetBackgroundImageset.get_meanRadius());
                      }
                      var gt = this.getCurrentReferenceFrame();
                      De.LayerManager._draw(this.renderContext, 1, this.get_space(), gt, !0, this.get_space());
                    }
                  }
                  var rt = this.renderContext.get_world(), nt = this.renderContext.get_view(), bt = this.renderContext.get_projection();
                  if (Se.Settings.get_current().get_showCrosshairs() && this._drawCrosshairs(this.renderContext), this.uiController != null)
                    this.uiController.render(this.renderContext);
                  else {
                    Ve.Annotation.prepBatch(this.renderContext);
                    for (var Et = s.ss.enumerate(this._annotations); Et.moveNext(); ) {
                      var Rt = Et.current;
                      Rt.draw(this.renderContext);
                    }
                    if (Ve.Annotation.drawBatch(this.renderContext), s.ss.now() - this._lastMouseMove > 400) {
                      var $t = this.getCoordinatesForScreenPoint(this._hoverTextPoint.x, this._hoverTextPoint.y);
                      this._annotationHover($t.x, $t.y, this._hoverTextPoint.x, this._hoverTextPoint.y), this._lastMouseMove = new Date(2100, 1, 1);
                    }
                    s.ss.emptyString(this._hoverText) || this._drawHoverText(this.renderContext);
                  }
                  var pt = !Fe.TileCache.get_queueCount();
                  this.renderContext.setupMatricesOverlays(), this._fadeFrame(), this._frameCount++, Fe.TileCache.decimateQueue(), Fe.TileCache.processQueue(this.renderContext), ke.Tile.currentRenderGeneration++, $.TourPlayer.get_playing() || this.set_crossFadeFrame(!1), this.renderContext.set_world(rt), this.renderContext.set_view(nt), this.renderContext.set_projection(bt);
                  var Ft = s.ss.now(), Nt = Ft - this._lastUpdate;
                  Nt > 1e3 && (this._lastUpdate = Ft, this._frameCount = 0, D.RenderTriangle.trianglesRendered = 0, D.RenderTriangle.trianglesCulled = 0), this.capturingVideo && (this.dumpFrameParams != null && (!this.dumpFrameParams.waitDownload || pt) && (this.captureFrameForVideo(this._videoBlobReady, this.dumpFrameParams.width, this.dumpFrameParams.height, this.dumpFrameParams.format), Te.SpaceTimeController.nextFrame()), Te.SpaceTimeController.get_doneDumping() && (Te.SpaceTimeController.frameDumping = !1, Te.SpaceTimeController.cancelFrameDump = !1, this.capturingVideo = !1));
                }
              },
              getCurrentReferenceFrame: function() {
                if (this.renderContext.get_backgroundImageset() == null)
                  return "Sun";
                if (!s.ss.emptyString(this.renderContext.get_backgroundImageset().get_referenceFrame()))
                  return this.renderContext.get_backgroundImageset().get_referenceFrame();
                if (!this.renderContext.get_backgroundImageset().get_dataSetType())
                  return "Earth";
                if (this.renderContext.get_backgroundImageset().get_name() === "Visible Imagery" && this.renderContext.get_backgroundImageset().get_url().toLowerCase().indexOf("mars") > -1)
                  return this.renderContext.get_backgroundImageset().set_referenceFrame("Mars"), this.renderContext.get_backgroundImageset().get_referenceFrame();
                if (this.renderContext.get_backgroundImageset().get_dataSetType() === 1)
                  for (var Ge = s.ss.enumerate($e.solarSystemObjectsNames); Ge.moveNext(); ) {
                    var Ye = Ge.current;
                    if (this.renderContext.get_backgroundImageset().get_name().toLowerCase().indexOf(Ye.toLowerCase()) > -1)
                      return this.renderContext.get_backgroundImageset().set_referenceFrame(Ye), Ye;
                  }
                return this.renderContext.get_backgroundImageset().get_dataSetType() === 2 ? "Sky" : "";
              },
              get_planetLike: function() {
                return this.renderContext.get_backgroundImageset() != null ? !this.renderContext.get_backgroundImageset().get_dataSetType() || this.renderContext.get_backgroundImageset().get_dataSetType() === 1 : !0;
              },
              get_space: function() {
                return this.renderContext.get_backgroundImageset() != null ? this.renderContext.get_backgroundImageset().get_dataSetType() === 2 : !0;
              },
              _drawSkyOverlays: function() {
                Se.Settings.get_active().get_showConstellationPictures() && !this.freestandingMode && B.Constellations.drawArtwork(this.renderContext), Se.Settings.get_active().get_showConstellationFigures() && ($e.constellationsFigures == null && ($e.constellationsFigures = B.Constellations.create(
                  "Constellations",
                  _.URLHelpers.singleton.engineAssetUrl("figures.txt"),
                  !1,
                  // "boundry"
                  !1,
                  // "noInterpollation"
                  !1
                  // "resource"
                )), $e.constellationsFigures.draw(this.renderContext, !1, "UMA", !1)), Se.Settings.get_active().get_showEclipticGrid() && (k.Grids.drawEclipticGrid(this.renderContext, 1, Se.Settings.get_active().get_eclipticGridColor()), Se.Settings.get_active().get_showEclipticGridText() && k.Grids.drawEclipticGridText(this.renderContext, 1, Se.Settings.get_active().get_eclipticGridColor())), Se.Settings.get_active().get_showGalacticGrid() && (k.Grids.drawGalacticGrid(this.renderContext, 1, Se.Settings.get_active().get_galacticGridColor()), Se.Settings.get_active().get_showGalacticGridText() && k.Grids.drawGalacticGridText(this.renderContext, 1, Se.Settings.get_active().get_galacticGridColor())), Se.Settings.get_active().get_showAltAzGrid() && (k.Grids.drawAltAzGrid(this.renderContext, 1, Se.Settings.get_active().get_altAzGridColor()), Se.Settings.get_active().get_showAltAzGridText() && k.Grids.drawAltAzGridText(this.renderContext, 1, Se.Settings.get_active().get_altAzGridColor())), Se.Settings.get_active().get_showPrecessionChart() && k.Grids.drawPrecessionChart(this.renderContext, 1, Se.Settings.get_active().get_precessionChartColor()), Se.Settings.get_active().get_showEcliptic() && (k.Grids.drawEcliptic(this.renderContext, 1, Se.Settings.get_active().get_eclipticColor()), Se.Settings.get_active().get_showEclipticOverviewText() && k.Grids.drawEclipticText(this.renderContext, 1, Se.Settings.get_active().get_eclipticColor())), Se.Settings.get_active().get_showGrid() && (k.Grids.drawEquitorialGrid(this.renderContext, 1, Se.Settings.get_active().get_equatorialGridColor()), Se.Settings.get_active().get_showEquatorialGridText() && k.Grids.drawEquitorialGridText(this.renderContext, 1, Se.Settings.get_active().get_equatorialGridColor())), Se.Settings.get_active().get_showConstellationBoundries() && ($e.constellationsBoundries == null && ($e.constellationsBoundries = B.Constellations.create(
                  "Constellations",
                  _.URLHelpers.singleton.engineAssetUrl("constellations.txt"),
                  !0,
                  // "boundry"
                  !1,
                  // "noInterpollation"
                  !1
                  // "resource"
                )), $e.constellationsBoundries.draw(this.renderContext, Se.Settings.get_active().get_showConstellationSelection(), this.constellation, !1)), Se.Settings.get_active().get_showConstellationLabels() && B.Constellations.drawConstellationNames(this.renderContext, 1, c.Colors.get_yellow());
              },
              _drawHoverText: function(Ge) {
                if (Ge.gl == null) {
                  var Ye = Ge.device;
                  Ye.save(), Ye.fillStyle = "White", Ye.font = "15px Arial", Ye.fillText(this._hoverText, this._hoverTextPoint.x, this._hoverTextPoint.y), Ye.restore();
                }
              },
              rAtoViewLng: function(Ge) {
                return (180 - Ge / 24 * 360 - 180 + 540) % 360 - 180;
              },
              _updateViewParameters: function() {
                if (this.renderContext.space && this._tracking && this._trackingObject != null)
                  if (Se.Settings.get_active().get_galacticMode() && this.renderContext.space) {
                    var Ge = Pe.Coordinates.j2000toGalactic(this._trackingObject.get_RA() * 15, this._trackingObject.get_dec());
                    this.renderContext.targetAlt = this.renderContext.alt = Ge[1], this.renderContext.targetAz = this.renderContext.az = Ge[0];
                  } else if (this.renderContext.space && Se.Settings.get_active().get_localHorizonMode()) {
                    var Ye = Pe.Coordinates.equitorialToHorizon(Pe.Coordinates.fromRaDec(this._trackingObject.get_RA(), this._trackingObject.get_dec()), Te.SpaceTimeController.get_location(), Te.SpaceTimeController.get_now());
                    this.renderContext.targetAlt = this.renderContext.alt = Ye.get_alt(), this.renderContext.targetAz = this.renderContext.az = Ye.get_az();
                  } else
                    this.renderContext.viewCamera.lng = this.renderContext.targetCamera.lng = this.rAtoViewLng(this._trackingObject.get_RA()), this.renderContext.viewCamera.lat = this.renderContext.targetCamera.lat = this._trackingObject.get_dec();
                else
                  this.get_solarSystemMode() || (this._tracking = !1, this._trackingObject = null);
                var je = 1 - 0.8, ht = 0.8;
                if (!this._tracking) {
                  var qe = this.renderContext.viewCamera.zoom / 4e3;
                  this.renderContext.viewCamera.zoom > 360 && (qe = 360 / 4e4), this.renderContext.space && (Se.Settings.get_active().get_localHorizonMode() || Se.Settings.get_active().get_galacticMode()) ? (Math.abs(this.renderContext.targetAlt - this.renderContext.alt) >= qe | Math.abs(this.renderContext.targetAz - this.renderContext.az) >= qe) === 1 && (this.renderContext.alt += (this.renderContext.targetAlt - this.renderContext.alt) / 10, Math.abs(this.renderContext.targetAz - this.renderContext.az) > 170 ? this.renderContext.targetAz > this.renderContext.az ? this.renderContext.az += (this.renderContext.targetAz - (360 + this.renderContext.az)) / 10 : this.renderContext.az += (360 + this.renderContext.targetAz - this.renderContext.az) / 10 : this.renderContext.az += (this.renderContext.targetAz - this.renderContext.az) / 10, this.renderContext.az = (this.renderContext.az + 720) % 360) : (Math.abs(this.renderContext.targetCamera.lat - this.renderContext.viewCamera.lat) >= qe | Math.abs(this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) >= qe) === 1 ? (this.renderContext.viewCamera.lat += (this.renderContext.targetCamera.lat - this.renderContext.viewCamera.lat) / 10, Math.abs(this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) > 170 ? this.renderContext.targetCamera.lng > this.renderContext.viewCamera.lng ? this.renderContext.viewCamera.lng += (this.renderContext.targetCamera.lng - (360 + this.renderContext.viewCamera.lng)) / 10 : this.renderContext.viewCamera.lng += (360 + this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) / 10 : this.renderContext.viewCamera.lng += (this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) / 10, this.renderContext.viewCamera.lng = (this.renderContext.viewCamera.lng + 720) % 360) : (this.renderContext.viewCamera.lat !== this.renderContext.targetCamera.lat || this.renderContext.viewCamera.lng !== this.renderContext.targetCamera.lng) && (this.renderContext.viewCamera.lat = this.renderContext.targetCamera.lat, this.renderContext.viewCamera.lng = this.renderContext.targetCamera.lng);
                }
                this.renderContext.viewCamera.zoom = ht * this.renderContext.viewCamera.zoom + je * this.renderContext.targetCamera.zoom, this.renderContext.viewCamera.rotation = ht * this.renderContext.viewCamera.rotation + je * this.renderContext.targetCamera.rotation, this.renderContext.viewCamera.angle = ht * this.renderContext.viewCamera.angle + je * this.renderContext.targetCamera.angle;
              },
              move: function(Ge, Ye) {
                var je = Math.atan2(Ye, Ge), ht = Math.sqrt(Ge * Ge + Ye * Ye);
                this.get_solarSystemMode() || this.get_planetLike() ? (Ge = Math.cos(je + this.renderContext.viewCamera.rotation) * ht, Ye = Math.sin(je + this.renderContext.viewCamera.rotation) * ht) : (Ge = Math.cos(je - this.renderContext.viewCamera.rotation) * ht, Ye = Math.sin(je - this.renderContext.viewCamera.rotation) * ht);
                var qe = this.renderContext.get_fovScale() / 3600;
                this.renderContext.get_backgroundImageset().get_dataSetType() == b.ImageSetType.solarSystem && (qe = 0.06);
                var lt = qe / Math.max(0.2, Math.cos(this.renderContext.viewCamera.lat / 180 * Math.PI));
                (!this.renderContext.get_backgroundImageset().get_dataSetType() || this.renderContext.get_backgroundImageset().get_dataSetType() === 1 || this.renderContext.get_backgroundImageset().get_dataSetType() == b.ImageSetType.solarSystem) && (lt *= 6.3, qe *= 6.3), this.renderContext.space && (Se.Settings.get_active().get_galacticMode() || Se.Settings.get_active().get_localHorizonMode()) ? (Ge = Se.Settings.get_active().get_localHorizonMode() ? -Ge : Ge, this.renderContext.targetAz += Ge * lt, this.renderContext.targetAz = (this.renderContext.targetAz + 720) % 360, this.renderContext.targetAlt += Ye * qe, this.renderContext.targetAlt > 90 && (this.renderContext.targetAlt = 90), this.renderContext.targetAlt < -90 && (this.renderContext.targetAlt = -90)) : (this.renderContext.targetCamera.lng -= Ge * lt, this.renderContext.targetCamera.lng = (this.renderContext.targetCamera.lng + 720) % 360, this.renderContext.targetCamera.lat += Ye * qe, this.renderContext.targetCamera.lat > 90 && (this.renderContext.targetCamera.lat = 90), this.renderContext.targetCamera.lat < -90 && (this.renderContext.targetCamera.lat = -90)), Se.Settings.get_globalSettings().get_smoothPan() || (this.renderContext.viewCamera = this.renderContext.targetCamera.copy()), Ge && Ye && (this._tracking = !1, this._trackingObject = null);
              },
              zoom: function(Ge) {
                this.renderContext.targetCamera.zoom *= Ge, this.renderContext.targetCamera.zoom > this.get_zoomMax() && (this.renderContext.targetCamera.zoom = this.get_zoomMax()), Se.Settings.get_globalSettings().get_smoothPan() || (this.renderContext.viewCamera = this.renderContext.targetCamera.copy());
              },
              roll: function(Ge) {
                this.renderContext.targetCamera.rotation += Ge;
              },
              // Gesture events
              onGestureStart: function(Ge) {
                this._mouseDown = !1, this._beginZoom = this.renderContext.viewCamera.zoom;
              },
              onGestureChange: function(Ge) {
                var Ye = Ge;
                this._mouseDown = !1, this.renderContext.targetCamera.zoom = this.renderContext.viewCamera.zoom = Math.min(360, this._beginZoom * (1 / Ye.scale));
              },
              onGestureEnd: function(Ge) {
                this._mouseDown = !1;
              },
              // Touch events
              onTouchStart: function(Ge) {
                var Ye = Ge;
                if (Ye.preventDefault(), Ye.stopPropagation(), this._lastX = Ye.targetTouches[0].pageX, this._lastY = Ye.targetTouches[0].pageY, Ye.targetTouches.length === 2) {
                  this._hasTwoTouches = !0;
                  return;
                }
                if (this.uiController != null) {
                  var je = new Ne(this._lastX, this._lastY);
                  if (this.uiController.mouseDown(this, je)) {
                    this._mouseDown = !1, this._dragging = !1;
                    return;
                  }
                }
                this._mouseDown = !0;
              },
              onTouchMove: function(Ge) {
                var Ye = Ge;
                if (this._hasTwoTouches) {
                  var je = Ye.touches[0], ht = Ye.touches[1], qe = new Array(2);
                  if (qe[0] = y.Vector2d.create(je.pageX, je.pageY), qe[1] = y.Vector2d.create(ht.pageX, ht.pageY), !this._dragging && this._pinchingZoomRect[0] != null && this._pinchingZoomRect[1] != null) {
                    var lt = y.Vector2d.create(this.renderContext.width / 2, this.renderContext.height / 2), ft = y.Vector2d.subtract(qe[0], this._pinchingZoomRect[0]), _t = y.Vector2d.subtract(qe[1], this._pinchingZoomRect[1]), St = y.Vector2d.subtract(this._pinchingZoomRect[0], lt), yt = y.Vector2d.subtract(this._pinchingZoomRect[1], lt);
                    St.normalize(), yt.normalize();
                    var Ct = ft.x * St.x + ft.y * St.y, Lt = _t.x * yt.x + _t.y * yt.y, Vt = y.Vector2d.create(Ct * St.x, Ct * St.y), Tt = y.Vector2d.create(Lt * yt.x, Lt * yt.y), xt = y.Vector2d.subtract(ft, Vt), Ot = y.Vector2d.subtract(_t, Tt), Pt = Vt.get_length() + Tt.get_length(), kt = xt.get_length() + Ot.get_length();
                    if (Pt >= 0.5 * kt && !this._rotating) {
                      var zt = this.getDistance(this._pinchingZoomRect[0], this._pinchingZoomRect[1]), Bt = this.getDistance(qe[0], qe[1]), gt = zt / Bt;
                      this.zoom(gt), this._zooming = !0;
                    } else if (!this._zooming) {
                      var rt = y.Vector2d.subtract(this._pinchingZoomRect[0], lt), nt = y.Vector2d.subtract(this._pinchingZoomRect[1], lt), bt = y.Vector2d.subtract(qe[0], lt), Et = y.Vector2d.subtract(qe[1], lt), Rt = this.crossProductZ(rt, bt), $t = this.crossProductZ(nt, Et), pt = Math.asin(Rt / (rt.get_length() * bt.get_length())), Ft = Math.asin($t / (nt.get_length() * Et.get_length()));
                      if (pt * Ft >= 0) {
                        var Nt = pt + Ft;
                        (this.get_planetLike() || this.get_solarSystemMode()) && (Nt *= -1), this.roll(Nt), this._rotating = !0;
                      }
                    }
                  }
                  this._pinchingZoomRect = qe, Ye.stopPropagation(), Ye.preventDefault();
                  return;
                }
                if (Ye.preventDefault(), Ye.stopPropagation(), this._mouseDown && !(this._rotating || this._zooming)) {
                  var Kt = Ye.targetTouches[0].pageX - this._lastX, At = Ye.targetTouches[0].pageY - this._lastY;
                  this._dragging = this._dragging || Math.sqrt(Kt * Kt + At * At) > this._dragThreshold, this.move(Kt, At), this._lastX = Ye.targetTouches[0].pageX, this._lastY = Ye.targetTouches[0].pageY;
                } else if (this.uiController != null && this.uiController.mouseMove(this, Ge)) {
                  Ge.preventDefault(), Ge.stopPropagation();
                  return;
                }
              },
              onTouchEnd: function(Ge) {
                var Ye = Ge;
                if (Ye.preventDefault(), Ye.stopPropagation(), this._pinchingZoomRect[0] = null, this._pinchingZoomRect[1] = null, this._hasTwoTouches) {
                  Ye.touches.length < 2 && (this._hasTwoTouches = !1);
                  return;
                }
                if (this.uiController != null) {
                  var je = new Ne(this._lastX, this._lastY);
                  if (this.uiController.mouseUp(this, je)) {
                    this._mouseDown = !1, this._dragging = !1;
                    return;
                  }
                }
                this._mouseDown = !1, this._dragging = !1, this._zooming = !1, this._rotating = !1;
              },
              // Pointer events
              onPointerDown: function(Ge) {
                var Ye = Ge, je = 0, ht = arguments[0], qe = arguments[0].target;
                if (qe.setPointerCapture ? qe.setPointerCapture(ht.pointerId) : qe.msSetPointerCapture && qe.msSetPointerCapture(ht.pointerId), this._pointerIds[0] === Ye.pointerId)
                  je = 0;
                else if (this._pointerIds[1] === Ye.pointerId)
                  je = 1;
                else if (!this._pointerIds[0])
                  je = 0;
                else if (!this._pointerIds[1])
                  je = 1;
                else
                  return;
                this._pointerIds[je] = Ye.pointerId, this._pinchingZoomRect[je] = y.Vector2d.create(Ge.offsetX, Ge.offsetY);
              },
              onPointerMove: function(Ge) {
                var Ye = Ge, je = 0;
                if (this._pointerIds[0] === Ye.pointerId)
                  je = 0;
                else if (this._pointerIds[1] === Ye.pointerId)
                  je = 1;
                else
                  return;
                if (this._pinchingZoomRect[0] != null && this._pinchingZoomRect[1] != null) {
                  var ht = this.getDistance(this._pinchingZoomRect[0], this._pinchingZoomRect[1]), qe = y.Vector2d.create(Ge.offsetX, Ge.offsetY), lt = this.getDistance(qe, this._pinchingZoomRect[0]), ft = ht / lt, _t = Math.abs(Math.log(ft));
                  isFinite(_t) || (_t = 1e3);
                  var St = this.getDistance(qe, this._pinchingZoomRect[1]), yt = ht / St, Ct = Math.abs(Math.log(yt));
                  isFinite(Ct) || (Ct = 1e3), Ct < _t ? (this._pinchingZoomRect[0] = qe, this.zoom(yt)) : (this._pinchingZoomRect[1] = qe, this.zoom(ft));
                } else
                  this._pinchingZoomRect[je] = y.Vector2d.create(Ge.offsetX, Ge.offsetY);
                Ge.stopPropagation(), Ge.preventDefault();
              },
              // NOTE! As of July 2020, Chrome on Macs seems to sometimes fail to
              // deliver this event. So our pinch-detection code needs to be robust to
              // that.
              onPointerUp: function(Ge) {
                var Ye = Ge;
                this._pointerIds[0] === Ye.pointerId && (this._pointerIds[0] = -2, this._pinchingZoomRect[0] = null), this._pointerIds[1] === Ye.pointerId && (this._pointerIds[1] = -2, this._pinchingZoomRect[1] = null);
              },
              // Mouse events
              onMouseDown: function(Ge) {
                document.addEventListener("mousemove", s.ss.bind("onMouseMove", this), !1), document.addEventListener("mouseup", s.ss.bind("onMouseUp", this), !1), !(this.uiController != null && this.uiController.mouseDown(this, Ge)) && (this._mouseDown = !0, this._lastX = u.Mouse.offsetX(this.canvas, Ge), this._lastY = u.Mouse.offsetY(this.canvas, Ge));
              },
              onMouseMove: function(Ge) {
                if (this._lastMouseMove = s.ss.now(), this._hoverTextPoint = y.Vector2d.create(u.Mouse.offsetX(this.canvas, Ge), u.Mouse.offsetY(this.canvas, Ge)), this._hoverText = "", this._mouseDown)
                  Ge.preventDefault(), Ge.stopPropagation(), this._moved = !0, Ge.ctrlKey ? this._tilt(u.Mouse.offsetX(this.canvas, Ge) - this._lastX, u.Mouse.offsetY(this.canvas, Ge) - this._lastY) : this.move(u.Mouse.offsetX(this.canvas, Ge) - this._lastX, u.Mouse.offsetY(this.canvas, Ge) - this._lastY), this._lastX = u.Mouse.offsetX(this.canvas, Ge), this._lastY = u.Mouse.offsetY(this.canvas, Ge);
                else if (this.uiController != null && this.uiController.mouseMove(this, Ge)) {
                  Ge.preventDefault(), Ge.stopPropagation();
                  return;
                }
              },
              onMouseUp: function(Ge) {
                if (document.removeEventListener("mousemove", s.ss.bind("onMouseMove", this), !1), document.removeEventListener("mouseup", s.ss.bind("onMouseUp", this), !1), this.uiController != null && this.uiController.mouseUp(this, Ge)) {
                  this._mouseDown = !1, Ge.preventDefault();
                  return;
                }
                if (this._mouseDown && !this._moved) {
                  var Ye = this.getCoordinatesForScreenPoint(u.Mouse.offsetX(this.canvas, Ge), u.Mouse.offsetY(this.canvas, Ge));
                  this._annotationclicked(Ye.x, Ye.y, u.Mouse.offsetX(this.canvas, Ge), u.Mouse.offsetY(this.canvas, Ge)) || l.globalScriptInterface._fireClick(Ye.x, Ye.y);
                }
                this._mouseDown = !1, this._moved = !1;
              },
              // WheelEvent is a WWT-specific name that we use to abstract across the
              // different wheel-motion events that browsers provide: "wheel",
              // "mousewheel", "DOMMouseScroll".
              onMouseWheel: function(Ge) {
                var Ye = Ge, je;
                Ye.deltaY ? je = -Ye.deltaY : Ye.detail ? je = Ye.detail * -1 : je = Ye.wheelDelta, je > 0 ? this.zoom(0.9) : this.zoom(1.1), Ge.stopPropagation(), Ge.preventDefault();
              },
              onDoubleClick: function(Ge) {
                $e.showDataLayers = !0;
              },
              onKeyDown: function(Ge) {
                this.uiController != null && this.uiController.keyDown(this, Ge);
              },
              getDistance: function(Ge, Ye) {
                var je, ht;
                return je = Ge.x - Ye.x, ht = Ge.y - Ye.y, Math.sqrt(je * je + ht * ht);
              },
              crossProductZ: function(Ge, Ye) {
                return Ge.x * Ye.y - Ge.y * Ye.x;
              },
              onContextMenu: function(Ge) {
                Ge.preventDefault(), Ge.stopPropagation();
              },
              _tilt: function(Ge, Ye) {
                this.renderContext.targetCamera.rotation += Ge * 1e-3, this.renderContext.targetCamera.angle += Ye * 1e-3, this.renderContext.targetCamera.angle < -1.52 && (this.renderContext.targetCamera.angle = -1.52), this.renderContext.targetCamera.angle > 0 && (this.renderContext.targetCamera.angle = 0);
              },
              getCoordinatesForScreenPoint: function(Ge, Ye) {
                var je = y.Vector2d.create(Ge, Ye), ht = this.transformPickPointToWorldSpace(je, this.renderContext.width, this.renderContext.height);
                return Pe.Coordinates.cartesianToSphericalSky(ht);
              },
              transformPickPointToWorldSpace: function(Ge, Ye, je) {
                var ht = new y.Vector3d();
                if (this.renderContext.get_projection() != null) {
                  var qe = new y.Vector3d();
                  qe.x = (2 * Ge.x / Ye - 1) / this.renderContext.get_projection().get_m11(), qe.y = -(2 * Ge.y / je - 1) / this.renderContext.get_projection().get_m22(), qe.z = 1;
                  var lt = y.Matrix3d.multiplyMatrix(this.renderContext.get_world(), this.renderContext.get_view());
                  lt.invert(), ht.x = qe.x * lt.get_m11() + qe.y * lt.get_m21() + qe.z * lt.get_m31(), ht.y = qe.x * lt.get_m12() + qe.y * lt.get_m22() + qe.z * lt.get_m32(), ht.z = qe.x * lt.get_m13() + qe.y * lt.get_m23() + qe.z * lt.get_m33(), ht.normalize();
                }
                return ht;
              },
              transformWorldPointToPickSpace: function(Ge, Ye, je) {
                var ht = y.Matrix3d.multiplyMatrix(this.renderContext.get_world(), this.renderContext.get_view()), qe = new y.Vector2d(), lt = Ge.x * ht.get_m13() + Ge.y * ht.get_m23() + Ge.z * ht.get_m33(), ft = (Ge.x * ht.get_m11() + Ge.y * ht.get_m21() + Ge.z * ht.get_m31()) / lt, _t = -(Ge.x * ht.get_m12() + Ge.y * ht.get_m22() + Ge.z * ht.get_m32()) / lt;
                return qe.x = Math.round((1 + this.renderContext.get_projection().get_m11() * ft) * (Ye / 2)), qe.y = Math.round((1 + this.renderContext.get_projection().get_m22() * _t) * (je / 2)), qe;
              },
              getScreenPointForCoordinates: function(Ge, Ye) {
                var je = y.Vector2d.create(Ge, Ye), ht = Pe.Coordinates.sphericalSkyToCartesian(je), qe = this.transformWorldPointToPickSpace(ht, this.renderContext.width, this.renderContext.height);
                return qe;
              },
              // Note that due to limitations of ScriptSharp, this method was public even
              // though it should really have been private.
              setup: function(Ge, Ye, je, ht) {
                var qe = this;
                window.addEventListener("contextmenu", s.ss.bind("onContextMenu", this), !1), document.body.addEventListener("keydown", s.ss.bind("onKeyDown", this), !1), Ge.addEventListener("dblclick", s.ss.bind("onDoubleClick", this), !1), Ge.addEventListener("mousedown", s.ss.bind("onMouseDown", this), !1), Ge.addEventListener("wheel", s.ss.bind("onMouseWheel", this), !1), Ge.addEventListener("mousewheel", s.ss.bind("onMouseWheel", this), !1), Ge.addEventListener("DOMMouseScroll", s.ss.bind("onMouseWheel", this), !1), Ge.addEventListener("touchstart", s.ss.bind("onTouchStart", this), !1), Ge.addEventListener("touchmove", s.ss.bind("onTouchMove", this), !1), Ge.addEventListener("touchend", s.ss.bind("onTouchEnd", this), !1), Ge.addEventListener("gesturechange", s.ss.bind("onGestureChange", this), !1), Ge.addEventListener("gesturestart", s.ss.bind("onGestureStart", this), !1), Ge.addEventListener("gestureend", s.ss.bind("onGestureEnd", this), !1), Ge.addEventListener("pointerdown", s.ss.bind("onPointerDown", this), !1), Ge.addEventListener("pointermove", s.ss.bind("onPointerMove", this), !1), Ge.addEventListener("pointerup", s.ss.bind("onPointerUp", this), !1), this.renderContext.viewCamera.lat = Ye, this.renderContext.viewCamera.lng = je, this.renderContext.viewCamera.zoom = ht, this.renderContext.targetCamera = this.renderContext.viewCamera.copy(), this.renderContext.gl == null && (this._foregroundCanvas = document.createElement("canvas"), this._foregroundCanvas.width = Ge.width, this._foregroundCanvas.height = Ge.height, this._fgDevice = this._foregroundCanvas.getContext("2d")), this.freestandingMode ? setTimeout(function() {
                  qe._setupComplete();
                }, 0) : (0, l.loadWtmlFile)(_.URLHelpers.singleton.coreDynamicUrl("wwtweb/catalog.aspx?X=ImageSets6"), s.ss.bind("_setupComplete", this), !0);
              },
              _setupComplete: function() {
                l.globalScriptInterface._fireReady();
              },
              gotoRADecZoom: function(Ge, Ye, je, ht, qe) {
                this._tracking = !1, this._trackingObject = null, this.gotoTargetFull(
                  !1,
                  // noZoom
                  ht,
                  this._cameraParametersFromRADecZoom(Ge, Ye, je, qe),
                  t.globalRenderContext.get_foregroundImageset(),
                  t.globalRenderContext.get_backgroundImageset()
                );
              },
              _cameraParametersFromRADecZoom: function(Ge, Ye, je, ht) {
                for (; Ge > 24; )
                  Ge -= 24;
                for (; Ge < 0; )
                  Ge += 24;
                Ye = y.DoubleUtilities.clamp(Ye, -90, 90), je = y.DoubleUtilities.clamp(je, this.get_zoomMin(), this.get_zoomMax());
                var qe = ht ?? t.globalRenderContext.viewCamera.rotation, lt = Me.CameraParameters.create(Ye, t.globalRenderContext.rAtoViewLng(Ge), je, qe, t.globalRenderContext.viewCamera.angle, t.globalRenderContext.viewCamera.opacity);
                return lt;
              },
              timeToRADecZoom: function(Ge, Ye, je, ht) {
                var qe = this._cameraParametersFromRADecZoom(Ge, Ye, je, ht);
                return this.timeToTargetFull(qe, !1);
              },
              get_solarSystemMode: function() {
                return this.renderContext.get_backgroundImageset() == null ? !1 : this.renderContext.get_backgroundImageset().get_dataSetType() == b.ImageSetType.solarSystem;
              },
              gotoTarget: function(Ge, Ye, je, ht) {
                if (Ge != null) {
                  if (ht && this.get_solarSystemMode() && (Ge.get_classification() === 536870912 && Ge.get_type() !== 4 || Ge.get_classification() === 1 || Ge.get_classification() === 1048576 && Ge.get_distance() > 0)) {
                    var qe = 65536;
                    if (Ge.get_classification() === 1 || Ge.get_classification() === 1048576)
                      qe = 20;
                    else
                      try {
                        Ge.get_target() !== 65536 ? qe = Ge.get_target() : qe = ze.Planets.getPlanetIDFromName(Ge.get_name());
                      } catch {
                      }
                    if (qe !== 65536) {
                      if (this._trackingObject = Ge, qe === this._solarSystemTrack && !(Ge.get_classification() === 1 || Ge.get_classification() === 1048576)) {
                        this.gotoTarget3(Ge.get_camParams(), Ye, je);
                        return;
                      }
                      var lt = 4;
                      qe === 20 ? lt = 17 : lt += 13 * (101 - Se.Settings.get_active().get_solarSystemScale()) / 100, je && (lt = 1);
                      var ft = this.renderContext.viewCamera.copy();
                      ft.targetReferenceFrame = "", ft.target = qe;
                      var _t = 10;
                      if (qe === 20) {
                        Ge.get_classification() === xe.Classification.galaxy ? _t = 1404946007758 : _t = 63239.6717 * 100;
                        var St = Pe.Coordinates.raDecTo3dAu(Ge.get_RA(), Ge.get_dec(), Ge.get_distance()), yt = Pe.Coordinates.meanObliquityOfEcliptic(Te.SpaceTimeController.get_jNow()) / 180 * Math.PI;
                        St.rotateX(yt), ft.viewTarget = y.Vector3d.negate(ft.viewTarget);
                      } else {
                        switch (ft.viewTarget = ze.Planets.getPlanet3dLocationJD(qe, Te.SpaceTimeController.getJNowForFutureTime(lt)), qe) {
                          case 0:
                            _t = 0.6;
                            break;
                          case 1:
                            _t = 4e-4;
                            break;
                          case 2:
                            _t = 4e-4;
                            break;
                          case 3:
                            _t = 4e-4;
                            break;
                          case 4:
                            _t = 7e-3;
                            break;
                          case 5:
                            _t = 7e-3;
                            break;
                          case 6:
                            _t = 4e-3;
                            break;
                          case 7:
                            _t = 4e-3;
                            break;
                          case 8:
                            _t = 4e-4;
                            break;
                          case 9:
                            _t = 4e-4;
                            break;
                          case 10:
                            _t = 4e-4;
                            break;
                          case 11:
                            _t = 4e-4;
                            break;
                          case 12:
                            _t = 4e-4;
                            break;
                          case 13:
                            _t = 4e-4;
                            break;
                          case 19:
                            _t = 4e-4;
                            break;
                          case 20:
                            _t = 10;
                            break;
                        }
                        _t = _t * Se.Settings.get_active().get_solarSystemScale();
                      }
                      var Ct = this.renderContext.viewCamera.copy();
                      this._solarSystemTrack === 20 && !s.ss.emptyString(this.renderContext.get_trackingFrame()) && (Ct = this.renderContext.customTrackingParams, this.renderContext.set_trackingFrame("")), ft.zoom = _t;
                      var Lt = ft.viewTarget;
                      if (Lt.subtract(Ct.viewTarget), Ge.get_classification() === 1 && (Lt = y.Vector3d.negate(Lt)), Lt.length()) {
                        var Vt = Lt.toRaDec();
                        qe === 20 ? ft.lat = -Vt.y : ft.lat = Vt.y, ft.lng = Vt.x * 15 - 90;
                      } else
                        ft.lat = this.renderContext.viewCamera.lat, ft.lng = this.renderContext.viewCamera.lng;
                      qe !== Me.SolarSystemObjects.custom && (ft.viewTarget = ze.Planets.getPlanetTargetPoint(qe, ft.lat, ft.lng, Te.SpaceTimeController.getJNowForFutureTime(lt)));
                      var Tt = new Ke.ViewMoverKenBurnsStyle(Ct, ft, lt, Te.SpaceTimeController.get_now(), Te.SpaceTimeController.getTimeForFutureTime(lt), 3);
                      Tt.fastDirectionMove = !0, this.set__mover(Tt);
                      return;
                    }
                  }
                  this._tracking = !1, this._trackingObject = null;
                  var xt = Ge.get_camParams().copy();
                  this.renderContext.get_backgroundImageset() != null && Ge.get_type() !== this.renderContext.get_backgroundImageset().get_dataSetType() ? (this.renderContext.targetCamera = Ge.get_camParams().copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.renderContext.set_backgroundImageset(this.getDefaultImageset(Ge.get_type(), 3)), je = !0) : this.get_solarSystemMode() && Ge.get_target() !== this._solarSystemTrack && (this.renderContext.targetCamera = Ge.get_camParams().copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this._solarSystemTrack = Ge.get_target(), je = !0), Ge.get_classification() === 128 ? (xt.zoom = this.get_zoomMax(), this.gotoTargetFull(!1, je, xt, null, null)) : (this._solarSystemTrack = Ge.get_target(), this.gotoTargetFull(Ye, je, xt, Ge.get_studyImageset(), Ge.get_backgroundImageset()), ht && (this._tracking = !0, this._trackingObject = Ge));
                }
              },
              gotoTarget3: function(Ge, Ye, je) {
                this._tracking = !1, this._trackingObject = null, this.gotoTargetFull(Ye, je, Ge, this.renderContext.get_foregroundImageset(), this.renderContext.get_backgroundImageset());
              },
              _tooCloseForSlewMove: function(Ge) {
                return Math.abs(this.renderContext.viewCamera.lat - Ge.lat) < 1e-12 && Math.abs(this.renderContext.viewCamera.lng - Ge.lng) < 1e-12 && Math.abs(this.renderContext.viewCamera.zoom - Ge.zoom) < 1e-12 && Math.abs(this.renderContext.viewCamera.rotation - Ge.rotation) < 1e-12;
              },
              gotoTargetFull: function(Ge, Ye, je, ht, qe) {
                if (this._tracking = !1, this._trackingObject = null, this._targetStudyImageset = ht, this._targetBackgroundImageset = qe, Ge ? (je.zoom = this.renderContext.viewCamera.zoom, je.angle = this.renderContext.viewCamera.angle, je.rotation = this.renderContext.viewCamera.rotation) : (je.zoom === -1 || !je.zoom) && (this.renderContext.space ? je.zoom = 1.40625 : je.zoom = 0.09), Ye || this._tooCloseForSlewMove(je)) {
                  if (this.set__mover(null), this.renderContext.targetCamera = je.copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.renderContext.space && Se.Settings.get_active().get_galacticMode()) {
                    var lt = Pe.Coordinates.j2000toGalactic(this.renderContext.viewCamera.get_RA() * 15, this.renderContext.viewCamera.get_dec());
                    this.renderContext.targetAlt = this.renderContext.alt = lt[1], this.renderContext.targetAz = this.renderContext.az = lt[0];
                  } else if (this.renderContext.space && Se.Settings.get_active().get_localHorizonMode()) {
                    var ft = Pe.Coordinates.equitorialToHorizon(Pe.Coordinates.fromRaDec(this.renderContext.viewCamera.get_RA(), this.renderContext.viewCamera.get_dec()), Te.SpaceTimeController.get_location(), Te.SpaceTimeController.get_now());
                    this.renderContext.targetAlt = this.renderContext.alt = ft.get_alt(), this.renderContext.targetAz = this.renderContext.az = ft.get_az();
                  }
                  this._mover_Midpoint();
                } else
                  this.set__mover(Ke.ViewMoverSlew.create(this.renderContext.viewCamera, je)), this.get__mover().set_midpoint(s.ss.bind("_mover_Midpoint", this));
              },
              _slewTimeBetweenTargets: function(Ge, Ye) {
                var je = Ke.ViewMoverSlew.create(Ge, Ye);
                return je.get_moveTime();
              },
              timeToTargetFull: function(Ge, Ye) {
                return Ye && (Ge.zoom = this.renderContext.viewCamera.zoom, Ge.angle = this.renderContext.viewCamera.angle, Ge.rotation = this.renderContext.viewCamera.rotation), this._tooCloseForSlewMove(Ge) ? 0 : this._slewTimeBetweenTargets(t.globalRenderContext.viewCamera, Ge);
              },
              _freezeView: function() {
                this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.set__mover(null);
              },
              get__mover: function() {
                return this.renderContext.viewMover;
              },
              set__mover: function(Ge) {
                return this.renderContext.viewMover = Ge, Ge;
              },
              fadeInImageSet: function(Ge) {
                this.renderContext.get_backgroundImageset() != null && Ge.get_dataSetType() !== this.renderContext.get_backgroundImageset().get_dataSetType() && (Fe.TileCache.purgeQueue(), Fe.TileCache.clearCache()), this.renderContext.set_backgroundImageset(Ge);
              },
              _mover_Midpoint: function() {
                (this._targetStudyImageset != null && this.renderContext.get_foregroundImageset() == null || this.renderContext.get_foregroundImageset() != null && !this.renderContext.get_foregroundImageset().equals(this._targetStudyImageset)) && this.renderContext.set_foregroundImageset(this._targetStudyImageset), this.renderContext.get_backgroundImageset() != null && this._targetBackgroundImageset != null && !this.renderContext.get_backgroundImageset().equals(this._targetBackgroundImageset) && (this._targetBackgroundImageset != null && this._targetBackgroundImageset.get_generic() ? this.fadeInImageSet(this._getRealImagesetFromGeneric(this._targetBackgroundImageset)) : this.fadeInImageSet(this._targetBackgroundImageset));
              },
              getDefaultImageset: function(Ge, Ye) {
                for (var je = s.ss.enumerate($e.imageSets); je.moveNext(); ) {
                  var ht = je.current;
                  if (ht.get_defaultSet() && ht.get_bandPass() === Ye && ht.get_dataSetType() === Ge)
                    return ht;
                }
                for (var qe = s.ss.enumerate($e.imageSets); qe.moveNext(); ) {
                  var ht = qe.current;
                  if (ht.get_bandPass() === Ye && ht.get_dataSetType() === Ge)
                    return ht;
                }
                for (var lt = s.ss.enumerate($e.imageSets); lt.moveNext(); ) {
                  var ht = lt.current;
                  if (ht.get_dataSetType() === Ge)
                    return ht;
                }
                return $e.imageSets[0];
              },
              _getRealImagesetFromGeneric: function(Ge) {
                for (var Ye = s.ss.enumerate($e.imageSets); Ye.moveNext(); ) {
                  var je = Ye.current;
                  if (je.get_defaultSet() && je.get_bandPass() === Ge.get_bandPass() && je.get_dataSetType() === Ge.get_dataSetType())
                    return je;
                }
                for (var ht = s.ss.enumerate($e.imageSets); ht.moveNext(); ) {
                  var je = ht.current;
                  if (je.get_bandPass() === Ge.get_bandPass() && je.get_dataSetType() === Ge.get_dataSetType())
                    return je;
                }
                return $e.imageSets[0];
              },
              _hideUI: function(Ge) {
              },
              createTour: function(Ge) {
                if (s.ss.canCast(this.uiController, $.TourPlayer)) {
                  var Ye = this.uiController;
                  Ye.stop(!1);
                }
                return this.tour = new Re.TourDocument(), this.tour.set_title(Ge), this.setupTour(), this.tour.set_editMode(!0), this.tour;
              },
              setupTour: function() {
                this.tourEdit = new Ie.TourEditTab(), this.tourEdit.set_tour(this.tour), this.tour.set_currentTourstopIndex(0), this.tour.set_editMode(!1), this.uiController = this.tourEdit.tourEditorUI;
              },
              loadTour: function(Ge) {
                var Ye = this;
                if (s.ss.canCast(this.uiController, $.TourPlayer)) {
                  var je = this.uiController;
                  je.stop(!1);
                }
                this.tour = Re.TourDocument.fromUrl(Ge, function() {
                  Ye.setupTour();
                  var ht = new $.TourPlayer();
                  ht.set_tour(Ye.tour), l.globalWWTControl.uiController = ht, l.globalScriptInterface._fireTourReady();
                });
              },
              playTour: function(Ge) {
                var Ye = this;
                if (s.ss.canCast(this.uiController, $.TourPlayer)) {
                  var je = this.uiController;
                  je.stop(!1);
                }
                this.tour = Re.TourDocument.fromUrl(Ge, function() {
                  Ye.setupTour(), Ye.tourEdit.playNow(!0), l.globalScriptInterface._fireTourReady();
                });
              },
              playCurrentTour: function() {
                if (s.ss.canCast(this.uiController, $.TourPlayer)) {
                  var Ge = this.uiController;
                  Ge.play();
                }
              },
              pauseCurrentTour: function() {
                if (s.ss.canCast(this.uiController, $.TourPlayer)) {
                  var Ge = this.uiController;
                  Ge.pauseTour();
                }
              },
              stopCurrentTour: function() {
                if (s.ss.canCast(this.uiController, $.TourPlayer)) {
                  var Ge = this.uiController;
                  Ge.stop(!1);
                }
              },
              _closeTour: function() {
              },
              getImagesetByName: function(Ge) {
                for (var Ye = s.ss.enumerate($e.imageSets); Ye.moveNext(); ) {
                  var je = Ye.current;
                  if (je.get_name().toLowerCase().indexOf(Ge.toLowerCase()) > -1)
                    return je;
                }
                return null;
              },
              getImageSetByUrl: function(Ge) {
                for (var Ye = s.ss.enumerate($e.imageSets); Ye.moveNext(); ) {
                  var je = Ye.current;
                  if (je.get_url() === Ge)
                    return je;
                }
                return null;
              },
              setBackgroundImageByName: function(Ge) {
                var Ye = this.getImagesetByName(Ge);
                Ye != null && this.renderContext.set_backgroundImageset(Ye);
              },
              setForegroundImageByName: function(Ge) {
                var Ye = this.getImagesetByName(Ge);
                Ye != null && this.renderContext.set_foregroundImageset(Ye);
              },
              addCatalogHips: function(Ge) {
                this.renderContext.addCatalogHips(Ge, null);
              },
              addCatalogHipsByName: function(Ge) {
                this.addCatalogHipsByNameWithCallback(Ge, null);
              },
              addCatalogHipsByNameWithCallback: function(Ge, Ye) {
                var je = this.getImagesetByName(Ge);
                je != null && this.renderContext.addCatalogHips(je, Ye);
              },
              removeCatalogHipsByName: function(Ge) {
                var Ye = this.getImagesetByName(Ge);
                Ye != null && this.renderContext.removeCatalogHips(Ye);
              },
              getCatalogHipsByName: function(Ge) {
                return this.renderContext.getCatalogHipsByName(Ge);
              },
              getCatalogHipsDataInView: function(Ge, Ye, je) {
                var ht = this.getImagesetByName(Ge);
                ht != null && this.renderContext.getCatalogHipsDataInView(ht, Ye, je);
              },
              setCutsForFits: function(Ge, Ye, je) {
                var ht = this.getImagesetByName(Ge);
                ht != null && ht.get_fitsProperties() != null ? (ht.get_fitsProperties().lowerCut = Ye, ht.get_fitsProperties().upperCut = je) : console.log(Ge + " not found");
              },
              setColorMapForFits: function(Ge, Ye) {
                var je = this.getImagesetByName(Ge);
                je != null && je.get_fitsProperties() != null ? je.get_fitsProperties().colorMapName = Ye : console.log(Ge + " not found");
              },
              setScaleTypeForFits: function(Ge, Ye) {
                var je = this.getImagesetByName(Ge);
                je != null && je.get_fitsProperties() != null ? je.get_fitsProperties().scaleType = Ye : console.log(Ge + " not found");
              },
              _drawCrosshairs: function(Ge) {
                if (Ge.gl == null) {
                  var Ye = Ge.device;
                  Ye.save(), Ye.beginPath(), Ye.strokeStyle = Se.Settings.get_current().get_crosshairsColor(), Ye.lineWidth = 2;
                  var je = Ge.width / 2, ht = Ge.height / 2, qe = 5;
                  Ye.moveTo(je, ht + qe), Ye.lineTo(je, ht - qe), Ye.moveTo(je + qe, ht), Ye.lineTo(je - qe, ht), Ye.stroke(), Ye.restore();
                } else {
                  if (this._crossHairs == null) {
                    var lt = 0.03, ft = lt * Ge.height / Ge.width;
                    this._crossHairs = new g.SimpleLineList(), this._crossHairs.set_depthBuffered(!1), this._crossHairs.pure2D = !0, this._crossHairs.addLine(y.Vector3d.create(-ft, 0, 0), y.Vector3d.create(ft, 0, 0)), this._crossHairs.addLine(y.Vector3d.create(0, -lt, 0), y.Vector3d.create(0, lt, 0));
                  }
                  this._crossHairs.drawLines(Ge, 1, c.Color.load(Se.Settings.get_current().get_crosshairsColor()));
                }
              },
              captureThumbnail: function(Ge) {
                this.captureFrame(Ge, 96, 45, "image/jpeg", !0);
              },
              captureCurrentFrame: function(Ge, Ye, je, ht) {
                this.captureFrame(Ge, Ye, je, ht, !1);
              },
              captureFrameForVideo: function(Ge, Ye, je, ht) {
                var qe = this, lt = Te.SpaceTimeController.currentFrameNumber, ft = function(_t) {
                  var St;
                  if (lt === qe._videoQueueIndex)
                    for (Ge(_t), qe._videoQueueIndex += 1; (St = s.ss.keyExists(qe._videoBlobQueue, qe._videoQueueIndex)) || qe._emptyFrames.indexOf(qe._videoQueueIndex) >= 0; )
                      St ? (Ge(qe._videoBlobQueue[qe._videoQueueIndex]), qe._videoBlobQueue[qe._videoQueueIndex] = null) : s.ss.remove(qe._emptyFrames, qe._videoQueueIndex), qe._videoQueueIndex += 1;
                  else
                    _t != null ? qe._videoBlobQueue[lt] = _t : qe._emptyFrames.push(lt);
                  qe._videoQueueIndex >= Te.SpaceTimeController.totalFrames && (qe._videoBlobReady = null, qe._videoBlobQueue = null, qe._videoQueueIndex = 0, qe._emptyFrames.length = 0);
                };
                this.captureCurrentFrame(ft, Ye, je, ht);
              },
              captureFrame: function(Ge, Ye, je, ht, qe) {
                qe && this.renderOneFrame();
                var lt = document.createElement("img");
                lt.addEventListener("load", function(ft) {
                  var _t = lt.width / lt.height, St = Ye / je, yt = Ye, Ct = je;
                  _t < St ? Ct = s.ss.truncate(yt / _t) : yt = s.ss.truncate(Ct * _t);
                  var Lt = (Ye - yt) / 2, Vt = (je - Ct) / 2, Tt = document.createElement("canvas");
                  Tt.height = je, Tt.width = Ye;
                  var xt = Tt.getContext("2d");
                  if (xt.drawImage(lt, Lt, Vt, yt, Ct), typeof Tt.msToBlob == "function") {
                    var Ot = Tt.msToBlob();
                    Ge(Ot);
                  } else
                    Tt.toBlob(Ge, ht);
                }, !1), lt.src = l.globalWWTControl.canvas.toDataURL();
              },
              clampZooms: function(Ge) {
                Ge.viewCamera.zoom = y.DoubleUtilities.clamp(Ge.viewCamera.zoom, this.get_zoomMin(), this.get_zoomMax()), Ge.targetCamera.zoom = y.DoubleUtilities.clamp(Ge.targetCamera.zoom, this.get_zoomMin(), this.get_zoomMax());
              }
            };
            (0, a.registerType)("WWTControl", [$e, Ze, null]);
            function Qe(Ge) {
              this._divId = null, this._startRenderLoop = !1, this._startLat = 0, this._startLng = 0, this._startZoom = 360, this._freestandingAssetBaseurl = "", this._startMode = "", this._divId = Ge;
            }
            var Ae = {
              startRenderLoop: function(Ge) {
                this._startRenderLoop = Ge;
              },
              initialView: function(Ge, Ye, je) {
                this._startLat = Ge, this._startLng = Ye, this._startZoom = je;
              },
              freestandingMode: function(Ge) {
                this._freestandingAssetBaseurl = Ge;
              },
              initialMode: function(Ge) {
                this._startMode = Ge;
              },
              create: function() {
                var Ge = !!this._freestandingAssetBaseurl, Ye;
                return this._startMode ? Ye = this._startMode : Ge ? Ye = "black" : Ye = "sky", (0, l.set_freestandingMode)(Ge), Ge && _.URLHelpers.singleton.overrideAssetBaseurl(this._freestandingAssetBaseurl), $e.initControl6(this._divId, this._startRenderLoop, this._startLat, this._startLng, this._startZoom, Ye);
              }
            };
            (0, a.registerType)("WWTControlBuilder", [Qe, Ae, null]);
            function Ne(Ge, Ye) {
              this.offsetX = 0, this.offsetY = 0, this.offsetX = Ge, this.offsetY = Ye;
            }
            var Be = {};
            (0, a.registerType)("WWTElementEvent", [Ne, Be, null]);
          }
        ),
        /***/
        "../node_modules/pako/index.js": (
          /*!*************************************!*\
            !*** ../node_modules/pako/index.js ***!
            \*************************************/
          /***/
          (e, r, n) => {
            var s = n(
              /*! ./lib/utils/common */
              "../node_modules/pako/lib/utils/common.js"
            ).assign, a = n(
              /*! ./lib/deflate */
              "../node_modules/pako/lib/deflate.js"
            ), t = n(
              /*! ./lib/inflate */
              "../node_modules/pako/lib/inflate.js"
            ), l = n(
              /*! ./lib/zlib/constants */
              "../node_modules/pako/lib/zlib/constants.js"
            ), o = {};
            s(o, a, t, l), e.exports = o;
          }
        ),
        /***/
        "../node_modules/pako/lib/deflate.js": (
          /*!*******************************************!*\
            !*** ../node_modules/pako/lib/deflate.js ***!
            \*******************************************/
          /***/
          (e, r, n) => {
            var s = n(
              /*! ./zlib/deflate */
              "../node_modules/pako/lib/zlib/deflate.js"
            ), a = n(
              /*! ./utils/common */
              "../node_modules/pako/lib/utils/common.js"
            ), t = n(
              /*! ./utils/strings */
              "../node_modules/pako/lib/utils/strings.js"
            ), l = n(
              /*! ./zlib/messages */
              "../node_modules/pako/lib/zlib/messages.js"
            ), o = n(
              /*! ./zlib/zstream */
              "../node_modules/pako/lib/zlib/zstream.js"
            ), c = Object.prototype.toString, _ = 0, u = 4, y = 0, g = 1, Ee = 2, Ve = -1, Me = 0, B = 8;
            function Pe(xe) {
              if (!(this instanceof Pe))
                return new Pe(xe);
              this.options = a.assign({
                level: Ve,
                method: B,
                chunkSize: 16384,
                windowBits: 15,
                memLevel: 8,
                strategy: Me,
                to: ""
              }, xe || {});
              var ze = this.options;
              ze.raw && ze.windowBits > 0 ? ze.windowBits = -ze.windowBits : ze.gzip && ze.windowBits > 0 && ze.windowBits < 16 && (ze.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new o(), this.strm.avail_out = 0;
              var Se = s.deflateInit2(
                this.strm,
                ze.level,
                ze.method,
                ze.windowBits,
                ze.memLevel,
                ze.strategy
              );
              if (Se !== y)
                throw new Error(l[Se]);
              if (ze.header && s.deflateSetHeader(this.strm, ze.header), ze.dictionary) {
                var Te;
                if (typeof ze.dictionary == "string" ? Te = t.string2buf(ze.dictionary) : c.call(ze.dictionary) === "[object ArrayBuffer]" ? Te = new Uint8Array(ze.dictionary) : Te = ze.dictionary, Se = s.deflateSetDictionary(this.strm, Te), Se !== y)
                  throw new Error(l[Se]);
                this._dict_set = !0;
              }
            }
            Pe.prototype.push = function(xe, ze) {
              var Se = this.strm, Te = this.options.chunkSize, D, ke;
              if (this.ended)
                return !1;
              ke = ze === ~~ze ? ze : ze === !0 ? u : _, typeof xe == "string" ? Se.input = t.string2buf(xe) : c.call(xe) === "[object ArrayBuffer]" ? Se.input = new Uint8Array(xe) : Se.input = xe, Se.next_in = 0, Se.avail_in = Se.input.length;
              do {
                if (Se.avail_out === 0 && (Se.output = new a.Buf8(Te), Se.next_out = 0, Se.avail_out = Te), D = s.deflate(Se, ke), D !== g && D !== y)
                  return this.onEnd(D), this.ended = !0, !1;
                (Se.avail_out === 0 || Se.avail_in === 0 && (ke === u || ke === Ee)) && (this.options.to === "string" ? this.onData(t.buf2binstring(a.shrinkBuf(Se.output, Se.next_out))) : this.onData(a.shrinkBuf(Se.output, Se.next_out)));
              } while ((Se.avail_in > 0 || Se.avail_out === 0) && D !== g);
              return ke === u ? (D = s.deflateEnd(this.strm), this.onEnd(D), this.ended = !0, D === y) : (ke === Ee && (this.onEnd(y), Se.avail_out = 0), !0);
            }, Pe.prototype.onData = function(xe) {
              this.chunks.push(xe);
            }, Pe.prototype.onEnd = function(xe) {
              xe === y && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = a.flattenChunks(this.chunks)), this.chunks = [], this.err = xe, this.msg = this.strm.msg;
            };
            function k(xe, ze) {
              var Se = new Pe(ze);
              if (Se.push(xe, !0), Se.err)
                throw Se.msg || l[Se.err];
              return Se.result;
            }
            function b(xe, ze) {
              return ze = ze || {}, ze.raw = !0, k(xe, ze);
            }
            function Le(xe, ze) {
              return ze = ze || {}, ze.gzip = !0, k(xe, ze);
            }
            r.Deflate = Pe, r.deflate = k, r.deflateRaw = b, r.gzip = Le;
          }
        ),
        /***/
        "../node_modules/pako/lib/inflate.js": (
          /*!*******************************************!*\
            !*** ../node_modules/pako/lib/inflate.js ***!
            \*******************************************/
          /***/
          (e, r, n) => {
            var s = n(
              /*! ./zlib/inflate */
              "../node_modules/pako/lib/zlib/inflate.js"
            ), a = n(
              /*! ./utils/common */
              "../node_modules/pako/lib/utils/common.js"
            ), t = n(
              /*! ./utils/strings */
              "../node_modules/pako/lib/utils/strings.js"
            ), l = n(
              /*! ./zlib/constants */
              "../node_modules/pako/lib/zlib/constants.js"
            ), o = n(
              /*! ./zlib/messages */
              "../node_modules/pako/lib/zlib/messages.js"
            ), c = n(
              /*! ./zlib/zstream */
              "../node_modules/pako/lib/zlib/zstream.js"
            ), _ = n(
              /*! ./zlib/gzheader */
              "../node_modules/pako/lib/zlib/gzheader.js"
            ), u = Object.prototype.toString;
            function y(Ve) {
              if (!(this instanceof y))
                return new y(Ve);
              this.options = a.assign({
                chunkSize: 16384,
                windowBits: 0,
                to: ""
              }, Ve || {});
              var Me = this.options;
              Me.raw && Me.windowBits >= 0 && Me.windowBits < 16 && (Me.windowBits = -Me.windowBits, Me.windowBits === 0 && (Me.windowBits = -15)), Me.windowBits >= 0 && Me.windowBits < 16 && !(Ve && Ve.windowBits) && (Me.windowBits += 32), Me.windowBits > 15 && Me.windowBits < 48 && (Me.windowBits & 15 || (Me.windowBits |= 15)), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new c(), this.strm.avail_out = 0;
              var B = s.inflateInit2(
                this.strm,
                Me.windowBits
              );
              if (B !== l.Z_OK)
                throw new Error(o[B]);
              if (this.header = new _(), s.inflateGetHeader(this.strm, this.header), Me.dictionary && (typeof Me.dictionary == "string" ? Me.dictionary = t.string2buf(Me.dictionary) : u.call(Me.dictionary) === "[object ArrayBuffer]" && (Me.dictionary = new Uint8Array(Me.dictionary)), Me.raw && (B = s.inflateSetDictionary(this.strm, Me.dictionary), B !== l.Z_OK)))
                throw new Error(o[B]);
            }
            y.prototype.push = function(Ve, Me) {
              var B = this.strm, Pe = this.options.chunkSize, k = this.options.dictionary, b, Le, xe, ze, Se, Te = !1;
              if (this.ended)
                return !1;
              Le = Me === ~~Me ? Me : Me === !0 ? l.Z_FINISH : l.Z_NO_FLUSH, typeof Ve == "string" ? B.input = t.binstring2buf(Ve) : u.call(Ve) === "[object ArrayBuffer]" ? B.input = new Uint8Array(Ve) : B.input = Ve, B.next_in = 0, B.avail_in = B.input.length;
              do {
                if (B.avail_out === 0 && (B.output = new a.Buf8(Pe), B.next_out = 0, B.avail_out = Pe), b = s.inflate(B, l.Z_NO_FLUSH), b === l.Z_NEED_DICT && k && (b = s.inflateSetDictionary(this.strm, k)), b === l.Z_BUF_ERROR && Te === !0 && (b = l.Z_OK, Te = !1), b !== l.Z_STREAM_END && b !== l.Z_OK)
                  return this.onEnd(b), this.ended = !0, !1;
                B.next_out && (B.avail_out === 0 || b === l.Z_STREAM_END || B.avail_in === 0 && (Le === l.Z_FINISH || Le === l.Z_SYNC_FLUSH)) && (this.options.to === "string" ? (xe = t.utf8border(B.output, B.next_out), ze = B.next_out - xe, Se = t.buf2string(B.output, xe), B.next_out = ze, B.avail_out = Pe - ze, ze && a.arraySet(B.output, B.output, xe, ze, 0), this.onData(Se)) : this.onData(a.shrinkBuf(B.output, B.next_out))), B.avail_in === 0 && B.avail_out === 0 && (Te = !0);
              } while ((B.avail_in > 0 || B.avail_out === 0) && b !== l.Z_STREAM_END);
              return b === l.Z_STREAM_END && (Le = l.Z_FINISH), Le === l.Z_FINISH ? (b = s.inflateEnd(this.strm), this.onEnd(b), this.ended = !0, b === l.Z_OK) : (Le === l.Z_SYNC_FLUSH && (this.onEnd(l.Z_OK), B.avail_out = 0), !0);
            }, y.prototype.onData = function(Ve) {
              this.chunks.push(Ve);
            }, y.prototype.onEnd = function(Ve) {
              Ve === l.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = a.flattenChunks(this.chunks)), this.chunks = [], this.err = Ve, this.msg = this.strm.msg;
            };
            function g(Ve, Me) {
              var B = new y(Me);
              if (B.push(Ve, !0), B.err)
                throw B.msg || o[B.err];
              return B.result;
            }
            function Ee(Ve, Me) {
              return Me = Me || {}, Me.raw = !0, g(Ve, Me);
            }
            r.Inflate = y, r.inflate = g, r.inflateRaw = Ee, r.ungzip = g;
          }
        ),
        /***/
        "../node_modules/pako/lib/utils/common.js": (
          /*!************************************************!*\
            !*** ../node_modules/pako/lib/utils/common.js ***!
            \************************************************/
          /***/
          (e, r) => {
            var n = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
            function s(l, o) {
              return Object.prototype.hasOwnProperty.call(l, o);
            }
            r.assign = function(l) {
              for (var o = Array.prototype.slice.call(arguments, 1); o.length; ) {
                var c = o.shift();
                if (c) {
                  if (typeof c != "object")
                    throw new TypeError(c + "must be non-object");
                  for (var _ in c)
                    s(c, _) && (l[_] = c[_]);
                }
              }
              return l;
            }, r.shrinkBuf = function(l, o) {
              return l.length === o ? l : l.subarray ? l.subarray(0, o) : (l.length = o, l);
            };
            var a = {
              arraySet: function(l, o, c, _, u) {
                if (o.subarray && l.subarray) {
                  l.set(o.subarray(c, c + _), u);
                  return;
                }
                for (var y = 0; y < _; y++)
                  l[u + y] = o[c + y];
              },
              // Join array of chunks to single array.
              flattenChunks: function(l) {
                var o, c, _, u, y, g;
                for (_ = 0, o = 0, c = l.length; o < c; o++)
                  _ += l[o].length;
                for (g = new Uint8Array(_), u = 0, o = 0, c = l.length; o < c; o++)
                  y = l[o], g.set(y, u), u += y.length;
                return g;
              }
            }, t = {
              arraySet: function(l, o, c, _, u) {
                for (var y = 0; y < _; y++)
                  l[u + y] = o[c + y];
              },
              // Join array of chunks to single array.
              flattenChunks: function(l) {
                return [].concat.apply([], l);
              }
            };
            r.setTyped = function(l) {
              l ? (r.Buf8 = Uint8Array, r.Buf16 = Uint16Array, r.Buf32 = Int32Array, r.assign(r, a)) : (r.Buf8 = Array, r.Buf16 = Array, r.Buf32 = Array, r.assign(r, t));
            }, r.setTyped(n);
          }
        ),
        /***/
        "../node_modules/pako/lib/utils/strings.js": (
          /*!*************************************************!*\
            !*** ../node_modules/pako/lib/utils/strings.js ***!
            \*************************************************/
          /***/
          (e, r, n) => {
            var s = n(
              /*! ./common */
              "../node_modules/pako/lib/utils/common.js"
            ), a = !0, t = !0;
            try {
              String.fromCharCode.apply(null, [0]);
            } catch {
              a = !1;
            }
            try {
              String.fromCharCode.apply(null, new Uint8Array(1));
            } catch {
              t = !1;
            }
            for (var l = new s.Buf8(256), o = 0; o < 256; o++)
              l[o] = o >= 252 ? 6 : o >= 248 ? 5 : o >= 240 ? 4 : o >= 224 ? 3 : o >= 192 ? 2 : 1;
            l[254] = l[254] = 1, r.string2buf = function(_) {
              var u, y, g, Ee, Ve, Me = _.length, B = 0;
              for (Ee = 0; Ee < Me; Ee++)
                y = _.charCodeAt(Ee), (y & 64512) === 55296 && Ee + 1 < Me && (g = _.charCodeAt(Ee + 1), (g & 64512) === 56320 && (y = 65536 + (y - 55296 << 10) + (g - 56320), Ee++)), B += y < 128 ? 1 : y < 2048 ? 2 : y < 65536 ? 3 : 4;
              for (u = new s.Buf8(B), Ve = 0, Ee = 0; Ve < B; Ee++)
                y = _.charCodeAt(Ee), (y & 64512) === 55296 && Ee + 1 < Me && (g = _.charCodeAt(Ee + 1), (g & 64512) === 56320 && (y = 65536 + (y - 55296 << 10) + (g - 56320), Ee++)), y < 128 ? u[Ve++] = y : y < 2048 ? (u[Ve++] = 192 | y >>> 6, u[Ve++] = 128 | y & 63) : y < 65536 ? (u[Ve++] = 224 | y >>> 12, u[Ve++] = 128 | y >>> 6 & 63, u[Ve++] = 128 | y & 63) : (u[Ve++] = 240 | y >>> 18, u[Ve++] = 128 | y >>> 12 & 63, u[Ve++] = 128 | y >>> 6 & 63, u[Ve++] = 128 | y & 63);
              return u;
            };
            function c(_, u) {
              if (u < 65534 && (_.subarray && t || !_.subarray && a))
                return String.fromCharCode.apply(null, s.shrinkBuf(_, u));
              for (var y = "", g = 0; g < u; g++)
                y += String.fromCharCode(_[g]);
              return y;
            }
            r.buf2binstring = function(_) {
              return c(_, _.length);
            }, r.binstring2buf = function(_) {
              for (var u = new s.Buf8(_.length), y = 0, g = u.length; y < g; y++)
                u[y] = _.charCodeAt(y);
              return u;
            }, r.buf2string = function(_, u) {
              var y, g, Ee, Ve, Me = u || _.length, B = new Array(Me * 2);
              for (g = 0, y = 0; y < Me; ) {
                if (Ee = _[y++], Ee < 128) {
                  B[g++] = Ee;
                  continue;
                }
                if (Ve = l[Ee], Ve > 4) {
                  B[g++] = 65533, y += Ve - 1;
                  continue;
                }
                for (Ee &= Ve === 2 ? 31 : Ve === 3 ? 15 : 7; Ve > 1 && y < Me; )
                  Ee = Ee << 6 | _[y++] & 63, Ve--;
                if (Ve > 1) {
                  B[g++] = 65533;
                  continue;
                }
                Ee < 65536 ? B[g++] = Ee : (Ee -= 65536, B[g++] = 55296 | Ee >> 10 & 1023, B[g++] = 56320 | Ee & 1023);
              }
              return c(B, g);
            }, r.utf8border = function(_, u) {
              var y;
              for (u = u || _.length, u > _.length && (u = _.length), y = u - 1; y >= 0 && (_[y] & 192) === 128; )
                y--;
              return y < 0 || y === 0 ? u : y + l[_[y]] > u ? y : u;
            };
          }
        ),
        /***/
        "../node_modules/pako/lib/zlib/adler32.js": (
          /*!************************************************!*\
            !*** ../node_modules/pako/lib/zlib/adler32.js ***!
            \************************************************/
          /***/
          (e) => {
            function r(n, s, a, t) {
              for (var l = n & 65535 | 0, o = n >>> 16 & 65535 | 0, c = 0; a !== 0; ) {
                c = a > 2e3 ? 2e3 : a, a -= c;
                do
                  l = l + s[t++] | 0, o = o + l | 0;
                while (--c);
                l %= 65521, o %= 65521;
              }
              return l | o << 16 | 0;
            }
            e.exports = r;
          }
        ),
        /***/
        "../node_modules/pako/lib/zlib/constants.js": (
          /*!**************************************************!*\
            !*** ../node_modules/pako/lib/zlib/constants.js ***!
            \**************************************************/
          /***/
          (e) => {
            e.exports = {
              /* Allowed flush values; see deflate() and inflate() below for details */
              Z_NO_FLUSH: 0,
              Z_PARTIAL_FLUSH: 1,
              Z_SYNC_FLUSH: 2,
              Z_FULL_FLUSH: 3,
              Z_FINISH: 4,
              Z_BLOCK: 5,
              Z_TREES: 6,
              /* Return codes for the compression/decompression functions. Negative values
              * are errors, positive values are used for special but normal events.
              */
              Z_OK: 0,
              Z_STREAM_END: 1,
              Z_NEED_DICT: 2,
              Z_ERRNO: -1,
              Z_STREAM_ERROR: -2,
              Z_DATA_ERROR: -3,
              //Z_MEM_ERROR:     -4,
              Z_BUF_ERROR: -5,
              //Z_VERSION_ERROR: -6,
              /* compression levels */
              Z_NO_COMPRESSION: 0,
              Z_BEST_SPEED: 1,
              Z_BEST_COMPRESSION: 9,
              Z_DEFAULT_COMPRESSION: -1,
              Z_FILTERED: 1,
              Z_HUFFMAN_ONLY: 2,
              Z_RLE: 3,
              Z_FIXED: 4,
              Z_DEFAULT_STRATEGY: 0,
              /* Possible values of the data_type field (though see inflate()) */
              Z_BINARY: 0,
              Z_TEXT: 1,
              //Z_ASCII:                1, // = Z_TEXT (deprecated)
              Z_UNKNOWN: 2,
              /* The deflate compression method */
              Z_DEFLATED: 8
              //Z_NULL:                 null // Use -1 or null inline, depending on var type
            };
          }
        ),
        /***/
        "../node_modules/pako/lib/zlib/crc32.js": (
          /*!**********************************************!*\
            !*** ../node_modules/pako/lib/zlib/crc32.js ***!
            \**********************************************/
          /***/
          (e) => {
            function r() {
              for (var a, t = [], l = 0; l < 256; l++) {
                a = l;
                for (var o = 0; o < 8; o++)
                  a = a & 1 ? 3988292384 ^ a >>> 1 : a >>> 1;
                t[l] = a;
              }
              return t;
            }
            var n = r();
            function s(a, t, l, o) {
              var c = n, _ = o + l;
              a ^= -1;
              for (var u = o; u < _; u++)
                a = a >>> 8 ^ c[(a ^ t[u]) & 255];
              return a ^ -1;
            }
            e.exports = s;
          }
        ),
        /***/
        "../node_modules/pako/lib/zlib/deflate.js": (
          /*!************************************************!*\
            !*** ../node_modules/pako/lib/zlib/deflate.js ***!
            \************************************************/
          /***/
          (e, r, n) => {
            var s = n(
              /*! ../utils/common */
              "../node_modules/pako/lib/utils/common.js"
            ), a = n(
              /*! ./trees */
              "../node_modules/pako/lib/zlib/trees.js"
            ), t = n(
              /*! ./adler32 */
              "../node_modules/pako/lib/zlib/adler32.js"
            ), l = n(
              /*! ./crc32 */
              "../node_modules/pako/lib/zlib/crc32.js"
            ), o = n(
              /*! ./messages */
              "../node_modules/pako/lib/zlib/messages.js"
            ), c = 0, _ = 1, u = 3, y = 4, g = 5, Ee = 0, Ve = 1, Me = -2, B = -3, Pe = -5, k = -1, b = 1, Le = 2, xe = 3, ze = 4, Se = 0, Te = 2, D = 8, ke = 9, Fe = 15, He = 8, We = 29, Ke = 256, $ = Ke + 1 + We, De = 30, Re = 19, Ie = 2 * $ + 1, O = 15, Ue = 3, $e = 258, Ze = $e + Ue + 1, Qe = 32, Ae = 42, Ne = 69, Be = 73, Ge = 91, Ye = 103, je = 113, ht = 666, qe = 1, lt = 2, ft = 3, _t = 4, St = 3;
            function yt(ot, Ut) {
              return ot.msg = o[Ut], Ut;
            }
            function Ct(ot) {
              return (ot << 1) - (ot > 4 ? 9 : 0);
            }
            function Lt(ot) {
              for (var Ut = ot.length; --Ut >= 0; )
                ot[Ut] = 0;
            }
            function Vt(ot) {
              var Ut = ot.state, dt = Ut.pending;
              dt > ot.avail_out && (dt = ot.avail_out), dt !== 0 && (s.arraySet(ot.output, Ut.pending_buf, Ut.pending_out, dt, ot.next_out), ot.next_out += dt, Ut.pending_out += dt, ot.total_out += dt, ot.avail_out -= dt, Ut.pending -= dt, Ut.pending === 0 && (Ut.pending_out = 0));
            }
            function Tt(ot, Ut) {
              a._tr_flush_block(ot, ot.block_start >= 0 ? ot.block_start : -1, ot.strstart - ot.block_start, Ut), ot.block_start = ot.strstart, Vt(ot.strm);
            }
            function xt(ot, Ut) {
              ot.pending_buf[ot.pending++] = Ut;
            }
            function Ot(ot, Ut) {
              ot.pending_buf[ot.pending++] = Ut >>> 8 & 255, ot.pending_buf[ot.pending++] = Ut & 255;
            }
            function Pt(ot, Ut, dt, Je) {
              var mt = ot.avail_in;
              return mt > Je && (mt = Je), mt === 0 ? 0 : (ot.avail_in -= mt, s.arraySet(Ut, ot.input, ot.next_in, mt, dt), ot.state.wrap === 1 ? ot.adler = t(ot.adler, Ut, mt, dt) : ot.state.wrap === 2 && (ot.adler = l(ot.adler, Ut, mt, dt)), ot.next_in += mt, ot.total_in += mt, mt);
            }
            function kt(ot, Ut) {
              var dt = ot.max_chain_length, Je = ot.strstart, mt, wt, jt = ot.prev_length, Gt = ot.nice_match, Yt = ot.strstart > ot.w_size - Ze ? ot.strstart - (ot.w_size - Ze) : 0, Qt = ot.window, tr = ot.w_mask, rr = ot.prev, er = ot.strstart + $e, sr = Qt[Je + jt - 1], hr = Qt[Je + jt];
              ot.prev_length >= ot.good_match && (dt >>= 2), Gt > ot.lookahead && (Gt = ot.lookahead);
              do
                if (mt = Ut, !(Qt[mt + jt] !== hr || Qt[mt + jt - 1] !== sr || Qt[mt] !== Qt[Je] || Qt[++mt] !== Qt[Je + 1])) {
                  Je += 2, mt++;
                  do
                    ;
                  while (Qt[++Je] === Qt[++mt] && Qt[++Je] === Qt[++mt] && Qt[++Je] === Qt[++mt] && Qt[++Je] === Qt[++mt] && Qt[++Je] === Qt[++mt] && Qt[++Je] === Qt[++mt] && Qt[++Je] === Qt[++mt] && Qt[++Je] === Qt[++mt] && Je < er);
                  if (wt = $e - (er - Je), Je = er - $e, wt > jt) {
                    if (ot.match_start = Ut, jt = wt, wt >= Gt)
                      break;
                    sr = Qt[Je + jt - 1], hr = Qt[Je + jt];
                  }
                }
              while ((Ut = rr[Ut & tr]) > Yt && --dt !== 0);
              return jt <= ot.lookahead ? jt : ot.lookahead;
            }
            function zt(ot) {
              var Ut = ot.w_size, dt, Je, mt, wt, jt;
              do {
                if (wt = ot.window_size - ot.lookahead - ot.strstart, ot.strstart >= Ut + (Ut - Ze)) {
                  s.arraySet(ot.window, ot.window, Ut, Ut, 0), ot.match_start -= Ut, ot.strstart -= Ut, ot.block_start -= Ut, Je = ot.hash_size, dt = Je;
                  do
                    mt = ot.head[--dt], ot.head[dt] = mt >= Ut ? mt - Ut : 0;
                  while (--Je);
                  Je = Ut, dt = Je;
                  do
                    mt = ot.prev[--dt], ot.prev[dt] = mt >= Ut ? mt - Ut : 0;
                  while (--Je);
                  wt += Ut;
                }
                if (ot.strm.avail_in === 0)
                  break;
                if (Je = Pt(ot.strm, ot.window, ot.strstart + ot.lookahead, wt), ot.lookahead += Je, ot.lookahead + ot.insert >= Ue)
                  for (jt = ot.strstart - ot.insert, ot.ins_h = ot.window[jt], ot.ins_h = (ot.ins_h << ot.hash_shift ^ ot.window[jt + 1]) & ot.hash_mask; ot.insert && (ot.ins_h = (ot.ins_h << ot.hash_shift ^ ot.window[jt + Ue - 1]) & ot.hash_mask, ot.prev[jt & ot.w_mask] = ot.head[ot.ins_h], ot.head[ot.ins_h] = jt, jt++, ot.insert--, !(ot.lookahead + ot.insert < Ue)); )
                    ;
              } while (ot.lookahead < Ze && ot.strm.avail_in !== 0);
            }
            function Bt(ot, Ut) {
              var dt = 65535;
              for (dt > ot.pending_buf_size - 5 && (dt = ot.pending_buf_size - 5); ; ) {
                if (ot.lookahead <= 1) {
                  if (zt(ot), ot.lookahead === 0 && Ut === c)
                    return qe;
                  if (ot.lookahead === 0)
                    break;
                }
                ot.strstart += ot.lookahead, ot.lookahead = 0;
                var Je = ot.block_start + dt;
                if ((ot.strstart === 0 || ot.strstart >= Je) && (ot.lookahead = ot.strstart - Je, ot.strstart = Je, Tt(ot, !1), ot.strm.avail_out === 0) || ot.strstart - ot.block_start >= ot.w_size - Ze && (Tt(ot, !1), ot.strm.avail_out === 0))
                  return qe;
              }
              return ot.insert = 0, Ut === y ? (Tt(ot, !0), ot.strm.avail_out === 0 ? ft : _t) : (ot.strstart > ot.block_start && (Tt(ot, !1), ot.strm.avail_out === 0), qe);
            }
            function gt(ot, Ut) {
              for (var dt, Je; ; ) {
                if (ot.lookahead < Ze) {
                  if (zt(ot), ot.lookahead < Ze && Ut === c)
                    return qe;
                  if (ot.lookahead === 0)
                    break;
                }
                if (dt = 0, ot.lookahead >= Ue && (ot.ins_h = (ot.ins_h << ot.hash_shift ^ ot.window[ot.strstart + Ue - 1]) & ot.hash_mask, dt = ot.prev[ot.strstart & ot.w_mask] = ot.head[ot.ins_h], ot.head[ot.ins_h] = ot.strstart), dt !== 0 && ot.strstart - dt <= ot.w_size - Ze && (ot.match_length = kt(ot, dt)), ot.match_length >= Ue)
                  if (Je = a._tr_tally(ot, ot.strstart - ot.match_start, ot.match_length - Ue), ot.lookahead -= ot.match_length, ot.match_length <= ot.max_lazy_match && ot.lookahead >= Ue) {
                    ot.match_length--;
                    do
                      ot.strstart++, ot.ins_h = (ot.ins_h << ot.hash_shift ^ ot.window[ot.strstart + Ue - 1]) & ot.hash_mask, dt = ot.prev[ot.strstart & ot.w_mask] = ot.head[ot.ins_h], ot.head[ot.ins_h] = ot.strstart;
                    while (--ot.match_length !== 0);
                    ot.strstart++;
                  } else
                    ot.strstart += ot.match_length, ot.match_length = 0, ot.ins_h = ot.window[ot.strstart], ot.ins_h = (ot.ins_h << ot.hash_shift ^ ot.window[ot.strstart + 1]) & ot.hash_mask;
                else
                  Je = a._tr_tally(ot, 0, ot.window[ot.strstart]), ot.lookahead--, ot.strstart++;
                if (Je && (Tt(ot, !1), ot.strm.avail_out === 0))
                  return qe;
              }
              return ot.insert = ot.strstart < Ue - 1 ? ot.strstart : Ue - 1, Ut === y ? (Tt(ot, !0), ot.strm.avail_out === 0 ? ft : _t) : ot.last_lit && (Tt(ot, !1), ot.strm.avail_out === 0) ? qe : lt;
            }
            function rt(ot, Ut) {
              for (var dt, Je, mt; ; ) {
                if (ot.lookahead < Ze) {
                  if (zt(ot), ot.lookahead < Ze && Ut === c)
                    return qe;
                  if (ot.lookahead === 0)
                    break;
                }
                if (dt = 0, ot.lookahead >= Ue && (ot.ins_h = (ot.ins_h << ot.hash_shift ^ ot.window[ot.strstart + Ue - 1]) & ot.hash_mask, dt = ot.prev[ot.strstart & ot.w_mask] = ot.head[ot.ins_h], ot.head[ot.ins_h] = ot.strstart), ot.prev_length = ot.match_length, ot.prev_match = ot.match_start, ot.match_length = Ue - 1, dt !== 0 && ot.prev_length < ot.max_lazy_match && ot.strstart - dt <= ot.w_size - Ze && (ot.match_length = kt(ot, dt), ot.match_length <= 5 && (ot.strategy === b || ot.match_length === Ue && ot.strstart - ot.match_start > 4096) && (ot.match_length = Ue - 1)), ot.prev_length >= Ue && ot.match_length <= ot.prev_length) {
                  mt = ot.strstart + ot.lookahead - Ue, Je = a._tr_tally(ot, ot.strstart - 1 - ot.prev_match, ot.prev_length - Ue), ot.lookahead -= ot.prev_length - 1, ot.prev_length -= 2;
                  do
                    ++ot.strstart <= mt && (ot.ins_h = (ot.ins_h << ot.hash_shift ^ ot.window[ot.strstart + Ue - 1]) & ot.hash_mask, dt = ot.prev[ot.strstart & ot.w_mask] = ot.head[ot.ins_h], ot.head[ot.ins_h] = ot.strstart);
                  while (--ot.prev_length !== 0);
                  if (ot.match_available = 0, ot.match_length = Ue - 1, ot.strstart++, Je && (Tt(ot, !1), ot.strm.avail_out === 0))
                    return qe;
                } else if (ot.match_available) {
                  if (Je = a._tr_tally(ot, 0, ot.window[ot.strstart - 1]), Je && Tt(ot, !1), ot.strstart++, ot.lookahead--, ot.strm.avail_out === 0)
                    return qe;
                } else
                  ot.match_available = 1, ot.strstart++, ot.lookahead--;
              }
              return ot.match_available && (Je = a._tr_tally(ot, 0, ot.window[ot.strstart - 1]), ot.match_available = 0), ot.insert = ot.strstart < Ue - 1 ? ot.strstart : Ue - 1, Ut === y ? (Tt(ot, !0), ot.strm.avail_out === 0 ? ft : _t) : ot.last_lit && (Tt(ot, !1), ot.strm.avail_out === 0) ? qe : lt;
            }
            function nt(ot, Ut) {
              for (var dt, Je, mt, wt, jt = ot.window; ; ) {
                if (ot.lookahead <= $e) {
                  if (zt(ot), ot.lookahead <= $e && Ut === c)
                    return qe;
                  if (ot.lookahead === 0)
                    break;
                }
                if (ot.match_length = 0, ot.lookahead >= Ue && ot.strstart > 0 && (mt = ot.strstart - 1, Je = jt[mt], Je === jt[++mt] && Je === jt[++mt] && Je === jt[++mt])) {
                  wt = ot.strstart + $e;
                  do
                    ;
                  while (Je === jt[++mt] && Je === jt[++mt] && Je === jt[++mt] && Je === jt[++mt] && Je === jt[++mt] && Je === jt[++mt] && Je === jt[++mt] && Je === jt[++mt] && mt < wt);
                  ot.match_length = $e - (wt - mt), ot.match_length > ot.lookahead && (ot.match_length = ot.lookahead);
                }
                if (ot.match_length >= Ue ? (dt = a._tr_tally(ot, 1, ot.match_length - Ue), ot.lookahead -= ot.match_length, ot.strstart += ot.match_length, ot.match_length = 0) : (dt = a._tr_tally(ot, 0, ot.window[ot.strstart]), ot.lookahead--, ot.strstart++), dt && (Tt(ot, !1), ot.strm.avail_out === 0))
                  return qe;
              }
              return ot.insert = 0, Ut === y ? (Tt(ot, !0), ot.strm.avail_out === 0 ? ft : _t) : ot.last_lit && (Tt(ot, !1), ot.strm.avail_out === 0) ? qe : lt;
            }
            function bt(ot, Ut) {
              for (var dt; ; ) {
                if (ot.lookahead === 0 && (zt(ot), ot.lookahead === 0)) {
                  if (Ut === c)
                    return qe;
                  break;
                }
                if (ot.match_length = 0, dt = a._tr_tally(ot, 0, ot.window[ot.strstart]), ot.lookahead--, ot.strstart++, dt && (Tt(ot, !1), ot.strm.avail_out === 0))
                  return qe;
              }
              return ot.insert = 0, Ut === y ? (Tt(ot, !0), ot.strm.avail_out === 0 ? ft : _t) : ot.last_lit && (Tt(ot, !1), ot.strm.avail_out === 0) ? qe : lt;
            }
            function Et(ot, Ut, dt, Je, mt) {
              this.good_length = ot, this.max_lazy = Ut, this.nice_length = dt, this.max_chain = Je, this.func = mt;
            }
            var Rt;
            Rt = [
              /*      good lazy nice chain */
              new Et(0, 0, 0, 0, Bt),
              /* 0 store only */
              new Et(4, 4, 8, 4, gt),
              /* 1 max speed, no lazy matches */
              new Et(4, 5, 16, 8, gt),
              /* 2 */
              new Et(4, 6, 32, 32, gt),
              /* 3 */
              new Et(4, 4, 16, 16, rt),
              /* 4 lazy matches */
              new Et(8, 16, 32, 32, rt),
              /* 5 */
              new Et(8, 16, 128, 128, rt),
              /* 6 */
              new Et(8, 32, 128, 256, rt),
              /* 7 */
              new Et(32, 128, 258, 1024, rt),
              /* 8 */
              new Et(32, 258, 258, 4096, rt)
              /* 9 max compression */
            ];
            function $t(ot) {
              ot.window_size = 2 * ot.w_size, Lt(ot.head), ot.max_lazy_match = Rt[ot.level].max_lazy, ot.good_match = Rt[ot.level].good_length, ot.nice_match = Rt[ot.level].nice_length, ot.max_chain_length = Rt[ot.level].max_chain, ot.strstart = 0, ot.block_start = 0, ot.lookahead = 0, ot.insert = 0, ot.match_length = ot.prev_length = Ue - 1, ot.match_available = 0, ot.ins_h = 0;
            }
            function pt() {
              this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = D, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new s.Buf16(Ie * 2), this.dyn_dtree = new s.Buf16((2 * De + 1) * 2), this.bl_tree = new s.Buf16((2 * Re + 1) * 2), Lt(this.dyn_ltree), Lt(this.dyn_dtree), Lt(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new s.Buf16(O + 1), this.heap = new s.Buf16(2 * $ + 1), Lt(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new s.Buf16(2 * $ + 1), Lt(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
            }
            function Ft(ot) {
              var Ut;
              return !ot || !ot.state ? yt(ot, Me) : (ot.total_in = ot.total_out = 0, ot.data_type = Te, Ut = ot.state, Ut.pending = 0, Ut.pending_out = 0, Ut.wrap < 0 && (Ut.wrap = -Ut.wrap), Ut.status = Ut.wrap ? Ae : je, ot.adler = Ut.wrap === 2 ? 0 : 1, Ut.last_flush = c, a._tr_init(Ut), Ee);
            }
            function Nt(ot) {
              var Ut = Ft(ot);
              return Ut === Ee && $t(ot.state), Ut;
            }
            function Kt(ot, Ut) {
              return !ot || !ot.state || ot.state.wrap !== 2 ? Me : (ot.state.gzhead = Ut, Ee);
            }
            function At(ot, Ut, dt, Je, mt, wt) {
              if (!ot)
                return Me;
              var jt = 1;
              if (Ut === k && (Ut = 6), Je < 0 ? (jt = 0, Je = -Je) : Je > 15 && (jt = 2, Je -= 16), mt < 1 || mt > ke || dt !== D || Je < 8 || Je > 15 || Ut < 0 || Ut > 9 || wt < 0 || wt > ze)
                return yt(ot, Me);
              Je === 8 && (Je = 9);
              var Gt = new pt();
              return ot.state = Gt, Gt.strm = ot, Gt.wrap = jt, Gt.gzhead = null, Gt.w_bits = Je, Gt.w_size = 1 << Gt.w_bits, Gt.w_mask = Gt.w_size - 1, Gt.hash_bits = mt + 7, Gt.hash_size = 1 << Gt.hash_bits, Gt.hash_mask = Gt.hash_size - 1, Gt.hash_shift = ~~((Gt.hash_bits + Ue - 1) / Ue), Gt.window = new s.Buf8(Gt.w_size * 2), Gt.head = new s.Buf16(Gt.hash_size), Gt.prev = new s.Buf16(Gt.w_size), Gt.lit_bufsize = 1 << mt + 6, Gt.pending_buf_size = Gt.lit_bufsize * 4, Gt.pending_buf = new s.Buf8(Gt.pending_buf_size), Gt.d_buf = 1 * Gt.lit_bufsize, Gt.l_buf = 3 * Gt.lit_bufsize, Gt.level = Ut, Gt.strategy = wt, Gt.method = dt, Nt(ot);
            }
            function Wt(ot, Ut) {
              return At(ot, Ut, D, Fe, He, Se);
            }
            function vt(ot, Ut) {
              var dt, Je, mt, wt;
              if (!ot || !ot.state || Ut > g || Ut < 0)
                return ot ? yt(ot, Me) : Me;
              if (Je = ot.state, !ot.output || !ot.input && ot.avail_in !== 0 || Je.status === ht && Ut !== y)
                return yt(ot, ot.avail_out === 0 ? Pe : Me);
              if (Je.strm = ot, dt = Je.last_flush, Je.last_flush = Ut, Je.status === Ae)
                if (Je.wrap === 2)
                  ot.adler = 0, xt(Je, 31), xt(Je, 139), xt(Je, 8), Je.gzhead ? (xt(
                    Je,
                    (Je.gzhead.text ? 1 : 0) + (Je.gzhead.hcrc ? 2 : 0) + (Je.gzhead.extra ? 4 : 0) + (Je.gzhead.name ? 8 : 0) + (Je.gzhead.comment ? 16 : 0)
                  ), xt(Je, Je.gzhead.time & 255), xt(Je, Je.gzhead.time >> 8 & 255), xt(Je, Je.gzhead.time >> 16 & 255), xt(Je, Je.gzhead.time >> 24 & 255), xt(Je, Je.level === 9 ? 2 : Je.strategy >= Le || Je.level < 2 ? 4 : 0), xt(Je, Je.gzhead.os & 255), Je.gzhead.extra && Je.gzhead.extra.length && (xt(Je, Je.gzhead.extra.length & 255), xt(Je, Je.gzhead.extra.length >> 8 & 255)), Je.gzhead.hcrc && (ot.adler = l(ot.adler, Je.pending_buf, Je.pending, 0)), Je.gzindex = 0, Je.status = Ne) : (xt(Je, 0), xt(Je, 0), xt(Je, 0), xt(Je, 0), xt(Je, 0), xt(Je, Je.level === 9 ? 2 : Je.strategy >= Le || Je.level < 2 ? 4 : 0), xt(Je, St), Je.status = je);
                else {
                  var jt = D + (Je.w_bits - 8 << 4) << 8, Gt = -1;
                  Je.strategy >= Le || Je.level < 2 ? Gt = 0 : Je.level < 6 ? Gt = 1 : Je.level === 6 ? Gt = 2 : Gt = 3, jt |= Gt << 6, Je.strstart !== 0 && (jt |= Qe), jt += 31 - jt % 31, Je.status = je, Ot(Je, jt), Je.strstart !== 0 && (Ot(Je, ot.adler >>> 16), Ot(Je, ot.adler & 65535)), ot.adler = 1;
                }
              if (Je.status === Ne)
                if (Je.gzhead.extra) {
                  for (mt = Je.pending; Je.gzindex < (Je.gzhead.extra.length & 65535) && !(Je.pending === Je.pending_buf_size && (Je.gzhead.hcrc && Je.pending > mt && (ot.adler = l(ot.adler, Je.pending_buf, Je.pending - mt, mt)), Vt(ot), mt = Je.pending, Je.pending === Je.pending_buf_size)); )
                    xt(Je, Je.gzhead.extra[Je.gzindex] & 255), Je.gzindex++;
                  Je.gzhead.hcrc && Je.pending > mt && (ot.adler = l(ot.adler, Je.pending_buf, Je.pending - mt, mt)), Je.gzindex === Je.gzhead.extra.length && (Je.gzindex = 0, Je.status = Be);
                } else
                  Je.status = Be;
              if (Je.status === Be)
                if (Je.gzhead.name) {
                  mt = Je.pending;
                  do {
                    if (Je.pending === Je.pending_buf_size && (Je.gzhead.hcrc && Je.pending > mt && (ot.adler = l(ot.adler, Je.pending_buf, Je.pending - mt, mt)), Vt(ot), mt = Je.pending, Je.pending === Je.pending_buf_size)) {
                      wt = 1;
                      break;
                    }
                    Je.gzindex < Je.gzhead.name.length ? wt = Je.gzhead.name.charCodeAt(Je.gzindex++) & 255 : wt = 0, xt(Je, wt);
                  } while (wt !== 0);
                  Je.gzhead.hcrc && Je.pending > mt && (ot.adler = l(ot.adler, Je.pending_buf, Je.pending - mt, mt)), wt === 0 && (Je.gzindex = 0, Je.status = Ge);
                } else
                  Je.status = Ge;
              if (Je.status === Ge)
                if (Je.gzhead.comment) {
                  mt = Je.pending;
                  do {
                    if (Je.pending === Je.pending_buf_size && (Je.gzhead.hcrc && Je.pending > mt && (ot.adler = l(ot.adler, Je.pending_buf, Je.pending - mt, mt)), Vt(ot), mt = Je.pending, Je.pending === Je.pending_buf_size)) {
                      wt = 1;
                      break;
                    }
                    Je.gzindex < Je.gzhead.comment.length ? wt = Je.gzhead.comment.charCodeAt(Je.gzindex++) & 255 : wt = 0, xt(Je, wt);
                  } while (wt !== 0);
                  Je.gzhead.hcrc && Je.pending > mt && (ot.adler = l(ot.adler, Je.pending_buf, Je.pending - mt, mt)), wt === 0 && (Je.status = Ye);
                } else
                  Je.status = Ye;
              if (Je.status === Ye && (Je.gzhead.hcrc ? (Je.pending + 2 > Je.pending_buf_size && Vt(ot), Je.pending + 2 <= Je.pending_buf_size && (xt(Je, ot.adler & 255), xt(Je, ot.adler >> 8 & 255), ot.adler = 0, Je.status = je)) : Je.status = je), Je.pending !== 0) {
                if (Vt(ot), ot.avail_out === 0)
                  return Je.last_flush = -1, Ee;
              } else if (ot.avail_in === 0 && Ct(Ut) <= Ct(dt) && Ut !== y)
                return yt(ot, Pe);
              if (Je.status === ht && ot.avail_in !== 0)
                return yt(ot, Pe);
              if (ot.avail_in !== 0 || Je.lookahead !== 0 || Ut !== c && Je.status !== ht) {
                var Yt = Je.strategy === Le ? bt(Je, Ut) : Je.strategy === xe ? nt(Je, Ut) : Rt[Je.level].func(Je, Ut);
                if ((Yt === ft || Yt === _t) && (Je.status = ht), Yt === qe || Yt === ft)
                  return ot.avail_out === 0 && (Je.last_flush = -1), Ee;
                if (Yt === lt && (Ut === _ ? a._tr_align(Je) : Ut !== g && (a._tr_stored_block(Je, 0, 0, !1), Ut === u && (Lt(Je.head), Je.lookahead === 0 && (Je.strstart = 0, Je.block_start = 0, Je.insert = 0))), Vt(ot), ot.avail_out === 0))
                  return Je.last_flush = -1, Ee;
              }
              return Ut !== y ? Ee : Je.wrap <= 0 ? Ve : (Je.wrap === 2 ? (xt(Je, ot.adler & 255), xt(Je, ot.adler >> 8 & 255), xt(Je, ot.adler >> 16 & 255), xt(Je, ot.adler >> 24 & 255), xt(Je, ot.total_in & 255), xt(Je, ot.total_in >> 8 & 255), xt(Je, ot.total_in >> 16 & 255), xt(Je, ot.total_in >> 24 & 255)) : (Ot(Je, ot.adler >>> 16), Ot(Je, ot.adler & 65535)), Vt(ot), Je.wrap > 0 && (Je.wrap = -Je.wrap), Je.pending !== 0 ? Ee : Ve);
            }
            function Xt(ot) {
              var Ut;
              return !ot || !ot.state ? Me : (Ut = ot.state.status, Ut !== Ae && Ut !== Ne && Ut !== Be && Ut !== Ge && Ut !== Ye && Ut !== je && Ut !== ht ? yt(ot, Me) : (ot.state = null, Ut === je ? yt(ot, B) : Ee));
            }
            function qt(ot, Ut) {
              var dt = Ut.length, Je, mt, wt, jt, Gt, Yt, Qt, tr;
              if (!ot || !ot.state || (Je = ot.state, jt = Je.wrap, jt === 2 || jt === 1 && Je.status !== Ae || Je.lookahead))
                return Me;
              for (jt === 1 && (ot.adler = t(ot.adler, Ut, dt, 0)), Je.wrap = 0, dt >= Je.w_size && (jt === 0 && (Lt(Je.head), Je.strstart = 0, Je.block_start = 0, Je.insert = 0), tr = new s.Buf8(Je.w_size), s.arraySet(tr, Ut, dt - Je.w_size, Je.w_size, 0), Ut = tr, dt = Je.w_size), Gt = ot.avail_in, Yt = ot.next_in, Qt = ot.input, ot.avail_in = dt, ot.next_in = 0, ot.input = Ut, zt(Je); Je.lookahead >= Ue; ) {
                mt = Je.strstart, wt = Je.lookahead - (Ue - 1);
                do
                  Je.ins_h = (Je.ins_h << Je.hash_shift ^ Je.window[mt + Ue - 1]) & Je.hash_mask, Je.prev[mt & Je.w_mask] = Je.head[Je.ins_h], Je.head[Je.ins_h] = mt, mt++;
                while (--wt);
                Je.strstart = mt, Je.lookahead = Ue - 1, zt(Je);
              }
              return Je.strstart += Je.lookahead, Je.block_start = Je.strstart, Je.insert = Je.lookahead, Je.lookahead = 0, Je.match_length = Je.prev_length = Ue - 1, Je.match_available = 0, ot.next_in = Yt, ot.input = Qt, ot.avail_in = Gt, Je.wrap = jt, Ee;
            }
            r.deflateInit = Wt, r.deflateInit2 = At, r.deflateReset = Nt, r.deflateResetKeep = Ft, r.deflateSetHeader = Kt, r.deflate = vt, r.deflateEnd = Xt, r.deflateSetDictionary = qt, r.deflateInfo = "pako deflate (from Nodeca project)";
          }
        ),
        /***/
        "../node_modules/pako/lib/zlib/gzheader.js": (
          /*!*************************************************!*\
            !*** ../node_modules/pako/lib/zlib/gzheader.js ***!
            \*************************************************/
          /***/
          (e) => {
            function r() {
              this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
            }
            e.exports = r;
          }
        ),
        /***/
        "../node_modules/pako/lib/zlib/inffast.js": (
          /*!************************************************!*\
            !*** ../node_modules/pako/lib/zlib/inffast.js ***!
            \************************************************/
          /***/
          (e) => {
            var r = 30, n = 12;
            e.exports = function(a, t) {
              var l, o, c, _, u, y, g, Ee, Ve, Me, B, Pe, k, b, Le, xe, ze, Se, Te, D, ke, Fe, He, We, Ke;
              l = a.state, o = a.next_in, We = a.input, c = o + (a.avail_in - 5), _ = a.next_out, Ke = a.output, u = _ - (t - a.avail_out), y = _ + (a.avail_out - 257), g = l.dmax, Ee = l.wsize, Ve = l.whave, Me = l.wnext, B = l.window, Pe = l.hold, k = l.bits, b = l.lencode, Le = l.distcode, xe = (1 << l.lenbits) - 1, ze = (1 << l.distbits) - 1;
              e:
                do {
                  k < 15 && (Pe += We[o++] << k, k += 8, Pe += We[o++] << k, k += 8), Se = b[Pe & xe];
                  t:
                    for (; ; ) {
                      if (Te = Se >>> 24, Pe >>>= Te, k -= Te, Te = Se >>> 16 & 255, Te === 0)
                        Ke[_++] = Se & 65535;
                      else if (Te & 16) {
                        D = Se & 65535, Te &= 15, Te && (k < Te && (Pe += We[o++] << k, k += 8), D += Pe & (1 << Te) - 1, Pe >>>= Te, k -= Te), k < 15 && (Pe += We[o++] << k, k += 8, Pe += We[o++] << k, k += 8), Se = Le[Pe & ze];
                        r:
                          for (; ; ) {
                            if (Te = Se >>> 24, Pe >>>= Te, k -= Te, Te = Se >>> 16 & 255, Te & 16) {
                              if (ke = Se & 65535, Te &= 15, k < Te && (Pe += We[o++] << k, k += 8, k < Te && (Pe += We[o++] << k, k += 8)), ke += Pe & (1 << Te) - 1, ke > g) {
                                a.msg = "invalid distance too far back", l.mode = r;
                                break e;
                              }
                              if (Pe >>>= Te, k -= Te, Te = _ - u, ke > Te) {
                                if (Te = ke - Te, Te > Ve && l.sane) {
                                  a.msg = "invalid distance too far back", l.mode = r;
                                  break e;
                                }
                                if (Fe = 0, He = B, Me === 0) {
                                  if (Fe += Ee - Te, Te < D) {
                                    D -= Te;
                                    do
                                      Ke[_++] = B[Fe++];
                                    while (--Te);
                                    Fe = _ - ke, He = Ke;
                                  }
                                } else if (Me < Te) {
                                  if (Fe += Ee + Me - Te, Te -= Me, Te < D) {
                                    D -= Te;
                                    do
                                      Ke[_++] = B[Fe++];
                                    while (--Te);
                                    if (Fe = 0, Me < D) {
                                      Te = Me, D -= Te;
                                      do
                                        Ke[_++] = B[Fe++];
                                      while (--Te);
                                      Fe = _ - ke, He = Ke;
                                    }
                                  }
                                } else if (Fe += Me - Te, Te < D) {
                                  D -= Te;
                                  do
                                    Ke[_++] = B[Fe++];
                                  while (--Te);
                                  Fe = _ - ke, He = Ke;
                                }
                                for (; D > 2; )
                                  Ke[_++] = He[Fe++], Ke[_++] = He[Fe++], Ke[_++] = He[Fe++], D -= 3;
                                D && (Ke[_++] = He[Fe++], D > 1 && (Ke[_++] = He[Fe++]));
                              } else {
                                Fe = _ - ke;
                                do
                                  Ke[_++] = Ke[Fe++], Ke[_++] = Ke[Fe++], Ke[_++] = Ke[Fe++], D -= 3;
                                while (D > 2);
                                D && (Ke[_++] = Ke[Fe++], D > 1 && (Ke[_++] = Ke[Fe++]));
                              }
                            } else if (Te & 64) {
                              a.msg = "invalid distance code", l.mode = r;
                              break e;
                            } else {
                              Se = Le[(Se & 65535) + (Pe & (1 << Te) - 1)];
                              continue r;
                            }
                            break;
                          }
                      } else if (Te & 64)
                        if (Te & 32) {
                          l.mode = n;
                          break e;
                        } else {
                          a.msg = "invalid literal/length code", l.mode = r;
                          break e;
                        }
                      else {
                        Se = b[(Se & 65535) + (Pe & (1 << Te) - 1)];
                        continue t;
                      }
                      break;
                    }
                } while (o < c && _ < y);
              D = k >> 3, o -= D, k -= D << 3, Pe &= (1 << k) - 1, a.next_in = o, a.next_out = _, a.avail_in = o < c ? 5 + (c - o) : 5 - (o - c), a.avail_out = _ < y ? 257 + (y - _) : 257 - (_ - y), l.hold = Pe, l.bits = k;
            };
          }
        ),
        /***/
        "../node_modules/pako/lib/zlib/inflate.js": (
          /*!************************************************!*\
            !*** ../node_modules/pako/lib/zlib/inflate.js ***!
            \************************************************/
          /***/
          (e, r, n) => {
            var s = n(
              /*! ../utils/common */
              "../node_modules/pako/lib/utils/common.js"
            ), a = n(
              /*! ./adler32 */
              "../node_modules/pako/lib/zlib/adler32.js"
            ), t = n(
              /*! ./crc32 */
              "../node_modules/pako/lib/zlib/crc32.js"
            ), l = n(
              /*! ./inffast */
              "../node_modules/pako/lib/zlib/inffast.js"
            ), o = n(
              /*! ./inftrees */
              "../node_modules/pako/lib/zlib/inftrees.js"
            ), c = 0, _ = 1, u = 2, y = 4, g = 5, Ee = 6, Ve = 0, Me = 1, B = 2, Pe = -2, k = -3, b = -4, Le = -5, xe = 8, ze = 1, Se = 2, Te = 3, D = 4, ke = 5, Fe = 6, He = 7, We = 8, Ke = 9, $ = 10, De = 11, Re = 12, Ie = 13, O = 14, Ue = 15, $e = 16, Ze = 17, Qe = 18, Ae = 19, Ne = 20, Be = 21, Ge = 22, Ye = 23, je = 24, ht = 25, qe = 26, lt = 27, ft = 28, _t = 29, St = 30, yt = 31, Ct = 32, Lt = 852, Vt = 592, Tt = 15, xt = Tt;
            function Ot(At) {
              return (At >>> 24 & 255) + (At >>> 8 & 65280) + ((At & 65280) << 8) + ((At & 255) << 24);
            }
            function Pt() {
              this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new s.Buf16(320), this.work = new s.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
            }
            function kt(At) {
              var Wt;
              return !At || !At.state ? Pe : (Wt = At.state, At.total_in = At.total_out = Wt.total = 0, At.msg = "", Wt.wrap && (At.adler = Wt.wrap & 1), Wt.mode = ze, Wt.last = 0, Wt.havedict = 0, Wt.dmax = 32768, Wt.head = null, Wt.hold = 0, Wt.bits = 0, Wt.lencode = Wt.lendyn = new s.Buf32(Lt), Wt.distcode = Wt.distdyn = new s.Buf32(Vt), Wt.sane = 1, Wt.back = -1, Ve);
            }
            function zt(At) {
              var Wt;
              return !At || !At.state ? Pe : (Wt = At.state, Wt.wsize = 0, Wt.whave = 0, Wt.wnext = 0, kt(At));
            }
            function Bt(At, Wt) {
              var vt, Xt;
              return !At || !At.state || (Xt = At.state, Wt < 0 ? (vt = 0, Wt = -Wt) : (vt = (Wt >> 4) + 1, Wt < 48 && (Wt &= 15)), Wt && (Wt < 8 || Wt > 15)) ? Pe : (Xt.window !== null && Xt.wbits !== Wt && (Xt.window = null), Xt.wrap = vt, Xt.wbits = Wt, zt(At));
            }
            function gt(At, Wt) {
              var vt, Xt;
              return At ? (Xt = new Pt(), At.state = Xt, Xt.window = null, vt = Bt(At, Wt), vt !== Ve && (At.state = null), vt) : Pe;
            }
            function rt(At) {
              return gt(At, xt);
            }
            var nt = !0, bt, Et;
            function Rt(At) {
              if (nt) {
                var Wt;
                for (bt = new s.Buf32(512), Et = new s.Buf32(32), Wt = 0; Wt < 144; )
                  At.lens[Wt++] = 8;
                for (; Wt < 256; )
                  At.lens[Wt++] = 9;
                for (; Wt < 280; )
                  At.lens[Wt++] = 7;
                for (; Wt < 288; )
                  At.lens[Wt++] = 8;
                for (o(_, At.lens, 0, 288, bt, 0, At.work, { bits: 9 }), Wt = 0; Wt < 32; )
                  At.lens[Wt++] = 5;
                o(u, At.lens, 0, 32, Et, 0, At.work, { bits: 5 }), nt = !1;
              }
              At.lencode = bt, At.lenbits = 9, At.distcode = Et, At.distbits = 5;
            }
            function $t(At, Wt, vt, Xt) {
              var qt, ot = At.state;
              return ot.window === null && (ot.wsize = 1 << ot.wbits, ot.wnext = 0, ot.whave = 0, ot.window = new s.Buf8(ot.wsize)), Xt >= ot.wsize ? (s.arraySet(ot.window, Wt, vt - ot.wsize, ot.wsize, 0), ot.wnext = 0, ot.whave = ot.wsize) : (qt = ot.wsize - ot.wnext, qt > Xt && (qt = Xt), s.arraySet(ot.window, Wt, vt - Xt, qt, ot.wnext), Xt -= qt, Xt ? (s.arraySet(ot.window, Wt, vt - Xt, Xt, 0), ot.wnext = Xt, ot.whave = ot.wsize) : (ot.wnext += qt, ot.wnext === ot.wsize && (ot.wnext = 0), ot.whave < ot.wsize && (ot.whave += qt))), 0;
            }
            function pt(At, Wt) {
              var vt, Xt, qt, ot, Ut, dt, Je, mt, wt, jt, Gt, Yt, Qt, tr, rr = 0, er, sr, hr, lr, vr, fr, or, dr, cr = new s.Buf8(4), Sr, ur, gr = (
                /* permutation of code lengths */
                [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
              );
              if (!At || !At.state || !At.output || !At.input && At.avail_in !== 0)
                return Pe;
              vt = At.state, vt.mode === Re && (vt.mode = Ie), Ut = At.next_out, qt = At.output, Je = At.avail_out, ot = At.next_in, Xt = At.input, dt = At.avail_in, mt = vt.hold, wt = vt.bits, jt = dt, Gt = Je, dr = Ve;
              e:
                for (; ; )
                  switch (vt.mode) {
                    case ze:
                      if (vt.wrap === 0) {
                        vt.mode = Ie;
                        break;
                      }
                      for (; wt < 16; ) {
                        if (dt === 0)
                          break e;
                        dt--, mt += Xt[ot++] << wt, wt += 8;
                      }
                      if (vt.wrap & 2 && mt === 35615) {
                        vt.check = 0, cr[0] = mt & 255, cr[1] = mt >>> 8 & 255, vt.check = t(vt.check, cr, 2, 0), mt = 0, wt = 0, vt.mode = Se;
                        break;
                      }
                      if (vt.flags = 0, vt.head && (vt.head.done = !1), !(vt.wrap & 1) || /* check if zlib header allowed */
                      (((mt & 255) << 8) + (mt >> 8)) % 31) {
                        At.msg = "incorrect header check", vt.mode = St;
                        break;
                      }
                      if ((mt & 15) !== xe) {
                        At.msg = "unknown compression method", vt.mode = St;
                        break;
                      }
                      if (mt >>>= 4, wt -= 4, or = (mt & 15) + 8, vt.wbits === 0)
                        vt.wbits = or;
                      else if (or > vt.wbits) {
                        At.msg = "invalid window size", vt.mode = St;
                        break;
                      }
                      vt.dmax = 1 << or, At.adler = vt.check = 1, vt.mode = mt & 512 ? $ : Re, mt = 0, wt = 0;
                      break;
                    case Se:
                      for (; wt < 16; ) {
                        if (dt === 0)
                          break e;
                        dt--, mt += Xt[ot++] << wt, wt += 8;
                      }
                      if (vt.flags = mt, (vt.flags & 255) !== xe) {
                        At.msg = "unknown compression method", vt.mode = St;
                        break;
                      }
                      if (vt.flags & 57344) {
                        At.msg = "unknown header flags set", vt.mode = St;
                        break;
                      }
                      vt.head && (vt.head.text = mt >> 8 & 1), vt.flags & 512 && (cr[0] = mt & 255, cr[1] = mt >>> 8 & 255, vt.check = t(vt.check, cr, 2, 0)), mt = 0, wt = 0, vt.mode = Te;
                    case Te:
                      for (; wt < 32; ) {
                        if (dt === 0)
                          break e;
                        dt--, mt += Xt[ot++] << wt, wt += 8;
                      }
                      vt.head && (vt.head.time = mt), vt.flags & 512 && (cr[0] = mt & 255, cr[1] = mt >>> 8 & 255, cr[2] = mt >>> 16 & 255, cr[3] = mt >>> 24 & 255, vt.check = t(vt.check, cr, 4, 0)), mt = 0, wt = 0, vt.mode = D;
                    case D:
                      for (; wt < 16; ) {
                        if (dt === 0)
                          break e;
                        dt--, mt += Xt[ot++] << wt, wt += 8;
                      }
                      vt.head && (vt.head.xflags = mt & 255, vt.head.os = mt >> 8), vt.flags & 512 && (cr[0] = mt & 255, cr[1] = mt >>> 8 & 255, vt.check = t(vt.check, cr, 2, 0)), mt = 0, wt = 0, vt.mode = ke;
                    case ke:
                      if (vt.flags & 1024) {
                        for (; wt < 16; ) {
                          if (dt === 0)
                            break e;
                          dt--, mt += Xt[ot++] << wt, wt += 8;
                        }
                        vt.length = mt, vt.head && (vt.head.extra_len = mt), vt.flags & 512 && (cr[0] = mt & 255, cr[1] = mt >>> 8 & 255, vt.check = t(vt.check, cr, 2, 0)), mt = 0, wt = 0;
                      } else
                        vt.head && (vt.head.extra = null);
                      vt.mode = Fe;
                    case Fe:
                      if (vt.flags & 1024 && (Yt = vt.length, Yt > dt && (Yt = dt), Yt && (vt.head && (or = vt.head.extra_len - vt.length, vt.head.extra || (vt.head.extra = new Array(vt.head.extra_len)), s.arraySet(
                        vt.head.extra,
                        Xt,
                        ot,
                        // extra field is limited to 65536 bytes
                        // - no need for additional size check
                        Yt,
                        /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                        or
                      )), vt.flags & 512 && (vt.check = t(vt.check, Xt, Yt, ot)), dt -= Yt, ot += Yt, vt.length -= Yt), vt.length))
                        break e;
                      vt.length = 0, vt.mode = He;
                    case He:
                      if (vt.flags & 2048) {
                        if (dt === 0)
                          break e;
                        Yt = 0;
                        do
                          or = Xt[ot + Yt++], vt.head && or && vt.length < 65536 && (vt.head.name += String.fromCharCode(or));
                        while (or && Yt < dt);
                        if (vt.flags & 512 && (vt.check = t(vt.check, Xt, Yt, ot)), dt -= Yt, ot += Yt, or)
                          break e;
                      } else
                        vt.head && (vt.head.name = null);
                      vt.length = 0, vt.mode = We;
                    case We:
                      if (vt.flags & 4096) {
                        if (dt === 0)
                          break e;
                        Yt = 0;
                        do
                          or = Xt[ot + Yt++], vt.head && or && vt.length < 65536 && (vt.head.comment += String.fromCharCode(or));
                        while (or && Yt < dt);
                        if (vt.flags & 512 && (vt.check = t(vt.check, Xt, Yt, ot)), dt -= Yt, ot += Yt, or)
                          break e;
                      } else
                        vt.head && (vt.head.comment = null);
                      vt.mode = Ke;
                    case Ke:
                      if (vt.flags & 512) {
                        for (; wt < 16; ) {
                          if (dt === 0)
                            break e;
                          dt--, mt += Xt[ot++] << wt, wt += 8;
                        }
                        if (mt !== (vt.check & 65535)) {
                          At.msg = "header crc mismatch", vt.mode = St;
                          break;
                        }
                        mt = 0, wt = 0;
                      }
                      vt.head && (vt.head.hcrc = vt.flags >> 9 & 1, vt.head.done = !0), At.adler = vt.check = 0, vt.mode = Re;
                      break;
                    case $:
                      for (; wt < 32; ) {
                        if (dt === 0)
                          break e;
                        dt--, mt += Xt[ot++] << wt, wt += 8;
                      }
                      At.adler = vt.check = Ot(mt), mt = 0, wt = 0, vt.mode = De;
                    case De:
                      if (vt.havedict === 0)
                        return At.next_out = Ut, At.avail_out = Je, At.next_in = ot, At.avail_in = dt, vt.hold = mt, vt.bits = wt, B;
                      At.adler = vt.check = 1, vt.mode = Re;
                    case Re:
                      if (Wt === g || Wt === Ee)
                        break e;
                    case Ie:
                      if (vt.last) {
                        mt >>>= wt & 7, wt -= wt & 7, vt.mode = lt;
                        break;
                      }
                      for (; wt < 3; ) {
                        if (dt === 0)
                          break e;
                        dt--, mt += Xt[ot++] << wt, wt += 8;
                      }
                      switch (vt.last = mt & 1, mt >>>= 1, wt -= 1, mt & 3) {
                        case 0:
                          vt.mode = O;
                          break;
                        case 1:
                          if (Rt(vt), vt.mode = Ne, Wt === Ee) {
                            mt >>>= 2, wt -= 2;
                            break e;
                          }
                          break;
                        case 2:
                          vt.mode = Ze;
                          break;
                        case 3:
                          At.msg = "invalid block type", vt.mode = St;
                      }
                      mt >>>= 2, wt -= 2;
                      break;
                    case O:
                      for (mt >>>= wt & 7, wt -= wt & 7; wt < 32; ) {
                        if (dt === 0)
                          break e;
                        dt--, mt += Xt[ot++] << wt, wt += 8;
                      }
                      if ((mt & 65535) !== (mt >>> 16 ^ 65535)) {
                        At.msg = "invalid stored block lengths", vt.mode = St;
                        break;
                      }
                      if (vt.length = mt & 65535, mt = 0, wt = 0, vt.mode = Ue, Wt === Ee)
                        break e;
                    case Ue:
                      vt.mode = $e;
                    case $e:
                      if (Yt = vt.length, Yt) {
                        if (Yt > dt && (Yt = dt), Yt > Je && (Yt = Je), Yt === 0)
                          break e;
                        s.arraySet(qt, Xt, ot, Yt, Ut), dt -= Yt, ot += Yt, Je -= Yt, Ut += Yt, vt.length -= Yt;
                        break;
                      }
                      vt.mode = Re;
                      break;
                    case Ze:
                      for (; wt < 14; ) {
                        if (dt === 0)
                          break e;
                        dt--, mt += Xt[ot++] << wt, wt += 8;
                      }
                      if (vt.nlen = (mt & 31) + 257, mt >>>= 5, wt -= 5, vt.ndist = (mt & 31) + 1, mt >>>= 5, wt -= 5, vt.ncode = (mt & 15) + 4, mt >>>= 4, wt -= 4, vt.nlen > 286 || vt.ndist > 30) {
                        At.msg = "too many length or distance symbols", vt.mode = St;
                        break;
                      }
                      vt.have = 0, vt.mode = Qe;
                    case Qe:
                      for (; vt.have < vt.ncode; ) {
                        for (; wt < 3; ) {
                          if (dt === 0)
                            break e;
                          dt--, mt += Xt[ot++] << wt, wt += 8;
                        }
                        vt.lens[gr[vt.have++]] = mt & 7, mt >>>= 3, wt -= 3;
                      }
                      for (; vt.have < 19; )
                        vt.lens[gr[vt.have++]] = 0;
                      if (vt.lencode = vt.lendyn, vt.lenbits = 7, Sr = { bits: vt.lenbits }, dr = o(c, vt.lens, 0, 19, vt.lencode, 0, vt.work, Sr), vt.lenbits = Sr.bits, dr) {
                        At.msg = "invalid code lengths set", vt.mode = St;
                        break;
                      }
                      vt.have = 0, vt.mode = Ae;
                    case Ae:
                      for (; vt.have < vt.nlen + vt.ndist; ) {
                        for (; rr = vt.lencode[mt & (1 << vt.lenbits) - 1], er = rr >>> 24, sr = rr >>> 16 & 255, hr = rr & 65535, !(er <= wt); ) {
                          if (dt === 0)
                            break e;
                          dt--, mt += Xt[ot++] << wt, wt += 8;
                        }
                        if (hr < 16)
                          mt >>>= er, wt -= er, vt.lens[vt.have++] = hr;
                        else {
                          if (hr === 16) {
                            for (ur = er + 2; wt < ur; ) {
                              if (dt === 0)
                                break e;
                              dt--, mt += Xt[ot++] << wt, wt += 8;
                            }
                            if (mt >>>= er, wt -= er, vt.have === 0) {
                              At.msg = "invalid bit length repeat", vt.mode = St;
                              break;
                            }
                            or = vt.lens[vt.have - 1], Yt = 3 + (mt & 3), mt >>>= 2, wt -= 2;
                          } else if (hr === 17) {
                            for (ur = er + 3; wt < ur; ) {
                              if (dt === 0)
                                break e;
                              dt--, mt += Xt[ot++] << wt, wt += 8;
                            }
                            mt >>>= er, wt -= er, or = 0, Yt = 3 + (mt & 7), mt >>>= 3, wt -= 3;
                          } else {
                            for (ur = er + 7; wt < ur; ) {
                              if (dt === 0)
                                break e;
                              dt--, mt += Xt[ot++] << wt, wt += 8;
                            }
                            mt >>>= er, wt -= er, or = 0, Yt = 11 + (mt & 127), mt >>>= 7, wt -= 7;
                          }
                          if (vt.have + Yt > vt.nlen + vt.ndist) {
                            At.msg = "invalid bit length repeat", vt.mode = St;
                            break;
                          }
                          for (; Yt--; )
                            vt.lens[vt.have++] = or;
                        }
                      }
                      if (vt.mode === St)
                        break;
                      if (vt.lens[256] === 0) {
                        At.msg = "invalid code -- missing end-of-block", vt.mode = St;
                        break;
                      }
                      if (vt.lenbits = 9, Sr = { bits: vt.lenbits }, dr = o(_, vt.lens, 0, vt.nlen, vt.lencode, 0, vt.work, Sr), vt.lenbits = Sr.bits, dr) {
                        At.msg = "invalid literal/lengths set", vt.mode = St;
                        break;
                      }
                      if (vt.distbits = 6, vt.distcode = vt.distdyn, Sr = { bits: vt.distbits }, dr = o(u, vt.lens, vt.nlen, vt.ndist, vt.distcode, 0, vt.work, Sr), vt.distbits = Sr.bits, dr) {
                        At.msg = "invalid distances set", vt.mode = St;
                        break;
                      }
                      if (vt.mode = Ne, Wt === Ee)
                        break e;
                    case Ne:
                      vt.mode = Be;
                    case Be:
                      if (dt >= 6 && Je >= 258) {
                        At.next_out = Ut, At.avail_out = Je, At.next_in = ot, At.avail_in = dt, vt.hold = mt, vt.bits = wt, l(At, Gt), Ut = At.next_out, qt = At.output, Je = At.avail_out, ot = At.next_in, Xt = At.input, dt = At.avail_in, mt = vt.hold, wt = vt.bits, vt.mode === Re && (vt.back = -1);
                        break;
                      }
                      for (vt.back = 0; rr = vt.lencode[mt & (1 << vt.lenbits) - 1], er = rr >>> 24, sr = rr >>> 16 & 255, hr = rr & 65535, !(er <= wt); ) {
                        if (dt === 0)
                          break e;
                        dt--, mt += Xt[ot++] << wt, wt += 8;
                      }
                      if (sr && !(sr & 240)) {
                        for (lr = er, vr = sr, fr = hr; rr = vt.lencode[fr + ((mt & (1 << lr + vr) - 1) >> lr)], er = rr >>> 24, sr = rr >>> 16 & 255, hr = rr & 65535, !(lr + er <= wt); ) {
                          if (dt === 0)
                            break e;
                          dt--, mt += Xt[ot++] << wt, wt += 8;
                        }
                        mt >>>= lr, wt -= lr, vt.back += lr;
                      }
                      if (mt >>>= er, wt -= er, vt.back += er, vt.length = hr, sr === 0) {
                        vt.mode = qe;
                        break;
                      }
                      if (sr & 32) {
                        vt.back = -1, vt.mode = Re;
                        break;
                      }
                      if (sr & 64) {
                        At.msg = "invalid literal/length code", vt.mode = St;
                        break;
                      }
                      vt.extra = sr & 15, vt.mode = Ge;
                    case Ge:
                      if (vt.extra) {
                        for (ur = vt.extra; wt < ur; ) {
                          if (dt === 0)
                            break e;
                          dt--, mt += Xt[ot++] << wt, wt += 8;
                        }
                        vt.length += mt & (1 << vt.extra) - 1, mt >>>= vt.extra, wt -= vt.extra, vt.back += vt.extra;
                      }
                      vt.was = vt.length, vt.mode = Ye;
                    case Ye:
                      for (; rr = vt.distcode[mt & (1 << vt.distbits) - 1], er = rr >>> 24, sr = rr >>> 16 & 255, hr = rr & 65535, !(er <= wt); ) {
                        if (dt === 0)
                          break e;
                        dt--, mt += Xt[ot++] << wt, wt += 8;
                      }
                      if (!(sr & 240)) {
                        for (lr = er, vr = sr, fr = hr; rr = vt.distcode[fr + ((mt & (1 << lr + vr) - 1) >> lr)], er = rr >>> 24, sr = rr >>> 16 & 255, hr = rr & 65535, !(lr + er <= wt); ) {
                          if (dt === 0)
                            break e;
                          dt--, mt += Xt[ot++] << wt, wt += 8;
                        }
                        mt >>>= lr, wt -= lr, vt.back += lr;
                      }
                      if (mt >>>= er, wt -= er, vt.back += er, sr & 64) {
                        At.msg = "invalid distance code", vt.mode = St;
                        break;
                      }
                      vt.offset = hr, vt.extra = sr & 15, vt.mode = je;
                    case je:
                      if (vt.extra) {
                        for (ur = vt.extra; wt < ur; ) {
                          if (dt === 0)
                            break e;
                          dt--, mt += Xt[ot++] << wt, wt += 8;
                        }
                        vt.offset += mt & (1 << vt.extra) - 1, mt >>>= vt.extra, wt -= vt.extra, vt.back += vt.extra;
                      }
                      if (vt.offset > vt.dmax) {
                        At.msg = "invalid distance too far back", vt.mode = St;
                        break;
                      }
                      vt.mode = ht;
                    case ht:
                      if (Je === 0)
                        break e;
                      if (Yt = Gt - Je, vt.offset > Yt) {
                        if (Yt = vt.offset - Yt, Yt > vt.whave && vt.sane) {
                          At.msg = "invalid distance too far back", vt.mode = St;
                          break;
                        }
                        Yt > vt.wnext ? (Yt -= vt.wnext, Qt = vt.wsize - Yt) : Qt = vt.wnext - Yt, Yt > vt.length && (Yt = vt.length), tr = vt.window;
                      } else
                        tr = qt, Qt = Ut - vt.offset, Yt = vt.length;
                      Yt > Je && (Yt = Je), Je -= Yt, vt.length -= Yt;
                      do
                        qt[Ut++] = tr[Qt++];
                      while (--Yt);
                      vt.length === 0 && (vt.mode = Be);
                      break;
                    case qe:
                      if (Je === 0)
                        break e;
                      qt[Ut++] = vt.length, Je--, vt.mode = Be;
                      break;
                    case lt:
                      if (vt.wrap) {
                        for (; wt < 32; ) {
                          if (dt === 0)
                            break e;
                          dt--, mt |= Xt[ot++] << wt, wt += 8;
                        }
                        if (Gt -= Je, At.total_out += Gt, vt.total += Gt, Gt && (At.adler = vt.check = /*UPDATE(state.check, put - _out, _out);*/
                        vt.flags ? t(vt.check, qt, Gt, Ut - Gt) : a(vt.check, qt, Gt, Ut - Gt)), Gt = Je, (vt.flags ? mt : Ot(mt)) !== vt.check) {
                          At.msg = "incorrect data check", vt.mode = St;
                          break;
                        }
                        mt = 0, wt = 0;
                      }
                      vt.mode = ft;
                    case ft:
                      if (vt.wrap && vt.flags) {
                        for (; wt < 32; ) {
                          if (dt === 0)
                            break e;
                          dt--, mt += Xt[ot++] << wt, wt += 8;
                        }
                        if (mt !== (vt.total & 4294967295)) {
                          At.msg = "incorrect length check", vt.mode = St;
                          break;
                        }
                        mt = 0, wt = 0;
                      }
                      vt.mode = _t;
                    case _t:
                      dr = Me;
                      break e;
                    case St:
                      dr = k;
                      break e;
                    case yt:
                      return b;
                    case Ct:
                    default:
                      return Pe;
                  }
              return At.next_out = Ut, At.avail_out = Je, At.next_in = ot, At.avail_in = dt, vt.hold = mt, vt.bits = wt, (vt.wsize || Gt !== At.avail_out && vt.mode < St && (vt.mode < lt || Wt !== y)) && $t(At, At.output, At.next_out, Gt - At.avail_out), jt -= At.avail_in, Gt -= At.avail_out, At.total_in += jt, At.total_out += Gt, vt.total += Gt, vt.wrap && Gt && (At.adler = vt.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
              vt.flags ? t(vt.check, qt, Gt, At.next_out - Gt) : a(vt.check, qt, Gt, At.next_out - Gt)), At.data_type = vt.bits + (vt.last ? 64 : 0) + (vt.mode === Re ? 128 : 0) + (vt.mode === Ne || vt.mode === Ue ? 256 : 0), (jt === 0 && Gt === 0 || Wt === y) && dr === Ve && (dr = Le), dr;
            }
            function Ft(At) {
              if (!At || !At.state)
                return Pe;
              var Wt = At.state;
              return Wt.window && (Wt.window = null), At.state = null, Ve;
            }
            function Nt(At, Wt) {
              var vt;
              return !At || !At.state || (vt = At.state, !(vt.wrap & 2)) ? Pe : (vt.head = Wt, Wt.done = !1, Ve);
            }
            function Kt(At, Wt) {
              var vt = Wt.length, Xt, qt, ot;
              return !At || !At.state || (Xt = At.state, Xt.wrap !== 0 && Xt.mode !== De) ? Pe : Xt.mode === De && (qt = 1, qt = a(qt, Wt, vt, 0), qt !== Xt.check) ? k : (ot = $t(At, Wt, vt, vt), ot ? (Xt.mode = yt, b) : (Xt.havedict = 1, Ve));
            }
            r.inflateReset = zt, r.inflateReset2 = Bt, r.inflateResetKeep = kt, r.inflateInit = rt, r.inflateInit2 = gt, r.inflate = pt, r.inflateEnd = Ft, r.inflateGetHeader = Nt, r.inflateSetDictionary = Kt, r.inflateInfo = "pako inflate (from Nodeca project)";
          }
        ),
        /***/
        "../node_modules/pako/lib/zlib/inftrees.js": (
          /*!*************************************************!*\
            !*** ../node_modules/pako/lib/zlib/inftrees.js ***!
            \*************************************************/
          /***/
          (e, r, n) => {
            var s = n(
              /*! ../utils/common */
              "../node_modules/pako/lib/utils/common.js"
            ), a = 15, t = 852, l = 592, o = 0, c = 1, _ = 2, u = [
              /* Length codes 257..285 base */
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              13,
              15,
              17,
              19,
              23,
              27,
              31,
              35,
              43,
              51,
              59,
              67,
              83,
              99,
              115,
              131,
              163,
              195,
              227,
              258,
              0,
              0
            ], y = [
              /* Length codes 257..285 extra */
              16,
              16,
              16,
              16,
              16,
              16,
              16,
              16,
              17,
              17,
              17,
              17,
              18,
              18,
              18,
              18,
              19,
              19,
              19,
              19,
              20,
              20,
              20,
              20,
              21,
              21,
              21,
              21,
              16,
              72,
              78
            ], g = [
              /* Distance codes 0..29 base */
              1,
              2,
              3,
              4,
              5,
              7,
              9,
              13,
              17,
              25,
              33,
              49,
              65,
              97,
              129,
              193,
              257,
              385,
              513,
              769,
              1025,
              1537,
              2049,
              3073,
              4097,
              6145,
              8193,
              12289,
              16385,
              24577,
              0,
              0
            ], Ee = [
              /* Distance codes 0..29 extra */
              16,
              16,
              16,
              16,
              17,
              17,
              18,
              18,
              19,
              19,
              20,
              20,
              21,
              21,
              22,
              22,
              23,
              23,
              24,
              24,
              25,
              25,
              26,
              26,
              27,
              27,
              28,
              28,
              29,
              29,
              64,
              64
            ];
            e.exports = function(Me, B, Pe, k, b, Le, xe, ze) {
              var Se = ze.bits, Te = 0, D = 0, ke = 0, Fe = 0, He = 0, We = 0, Ke = 0, $ = 0, De = 0, Re = 0, Ie, O, Ue, $e, Ze, Qe = null, Ae = 0, Ne, Be = new s.Buf16(a + 1), Ge = new s.Buf16(a + 1), Ye = null, je = 0, ht, qe, lt;
              for (Te = 0; Te <= a; Te++)
                Be[Te] = 0;
              for (D = 0; D < k; D++)
                Be[B[Pe + D]]++;
              for (He = Se, Fe = a; Fe >= 1 && Be[Fe] === 0; Fe--)
                ;
              if (He > Fe && (He = Fe), Fe === 0)
                return b[Le++] = 20971520, b[Le++] = 20971520, ze.bits = 1, 0;
              for (ke = 1; ke < Fe && Be[ke] === 0; ke++)
                ;
              for (He < ke && (He = ke), $ = 1, Te = 1; Te <= a; Te++)
                if ($ <<= 1, $ -= Be[Te], $ < 0)
                  return -1;
              if ($ > 0 && (Me === o || Fe !== 1))
                return -1;
              for (Ge[1] = 0, Te = 1; Te < a; Te++)
                Ge[Te + 1] = Ge[Te] + Be[Te];
              for (D = 0; D < k; D++)
                B[Pe + D] !== 0 && (xe[Ge[B[Pe + D]]++] = D);
              if (Me === o ? (Qe = Ye = xe, Ne = 19) : Me === c ? (Qe = u, Ae -= 257, Ye = y, je -= 257, Ne = 256) : (Qe = g, Ye = Ee, Ne = -1), Re = 0, D = 0, Te = ke, Ze = Le, We = He, Ke = 0, Ue = -1, De = 1 << He, $e = De - 1, Me === c && De > t || Me === _ && De > l)
                return 1;
              for (; ; ) {
                ht = Te - Ke, xe[D] < Ne ? (qe = 0, lt = xe[D]) : xe[D] > Ne ? (qe = Ye[je + xe[D]], lt = Qe[Ae + xe[D]]) : (qe = 96, lt = 0), Ie = 1 << Te - Ke, O = 1 << We, ke = O;
                do
                  O -= Ie, b[Ze + (Re >> Ke) + O] = ht << 24 | qe << 16 | lt | 0;
                while (O !== 0);
                for (Ie = 1 << Te - 1; Re & Ie; )
                  Ie >>= 1;
                if (Ie !== 0 ? (Re &= Ie - 1, Re += Ie) : Re = 0, D++, --Be[Te] === 0) {
                  if (Te === Fe)
                    break;
                  Te = B[Pe + xe[D]];
                }
                if (Te > He && (Re & $e) !== Ue) {
                  for (Ke === 0 && (Ke = He), Ze += ke, We = Te - Ke, $ = 1 << We; We + Ke < Fe && ($ -= Be[We + Ke], !($ <= 0)); )
                    We++, $ <<= 1;
                  if (De += 1 << We, Me === c && De > t || Me === _ && De > l)
                    return 1;
                  Ue = Re & $e, b[Ue] = He << 24 | We << 16 | Ze - Le | 0;
                }
              }
              return Re !== 0 && (b[Ze + Re] = Te - Ke << 24 | 4194304 | 0), ze.bits = He, 0;
            };
          }
        ),
        /***/
        "../node_modules/pako/lib/zlib/messages.js": (
          /*!*************************************************!*\
            !*** ../node_modules/pako/lib/zlib/messages.js ***!
            \*************************************************/
          /***/
          (e) => {
            e.exports = {
              2: "need dictionary",
              /* Z_NEED_DICT       2  */
              1: "stream end",
              /* Z_STREAM_END      1  */
              0: "",
              /* Z_OK              0  */
              "-1": "file error",
              /* Z_ERRNO         (-1) */
              "-2": "stream error",
              /* Z_STREAM_ERROR  (-2) */
              "-3": "data error",
              /* Z_DATA_ERROR    (-3) */
              "-4": "insufficient memory",
              /* Z_MEM_ERROR     (-4) */
              "-5": "buffer error",
              /* Z_BUF_ERROR     (-5) */
              "-6": "incompatible version"
              /* Z_VERSION_ERROR (-6) */
            };
          }
        ),
        /***/
        "../node_modules/pako/lib/zlib/trees.js": (
          /*!**********************************************!*\
            !*** ../node_modules/pako/lib/zlib/trees.js ***!
            \**********************************************/
          /***/
          (e, r, n) => {
            var s = n(
              /*! ../utils/common */
              "../node_modules/pako/lib/utils/common.js"
            ), a = 4, t = 0, l = 1, o = 2;
            function c(pt) {
              for (var Ft = pt.length; --Ft >= 0; )
                pt[Ft] = 0;
            }
            var _ = 0, u = 1, y = 2, g = 3, Ee = 258, Ve = 29, Me = 256, B = Me + 1 + Ve, Pe = 30, k = 19, b = 2 * B + 1, Le = 15, xe = 16, ze = 7, Se = 256, Te = 16, D = 17, ke = 18, Fe = (
              /* extra bits for each length code */
              [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
            ), He = (
              /* extra bits for each distance code */
              [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
            ), We = (
              /* extra bits for each bit length code */
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
            ), Ke = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], $ = 512, De = new Array((B + 2) * 2);
            c(De);
            var Re = new Array(Pe * 2);
            c(Re);
            var Ie = new Array($);
            c(Ie);
            var O = new Array(Ee - g + 1);
            c(O);
            var Ue = new Array(Ve);
            c(Ue);
            var $e = new Array(Pe);
            c($e);
            function Ze(pt, Ft, Nt, Kt, At) {
              this.static_tree = pt, this.extra_bits = Ft, this.extra_base = Nt, this.elems = Kt, this.max_length = At, this.has_stree = pt && pt.length;
            }
            var Qe, Ae, Ne;
            function Be(pt, Ft) {
              this.dyn_tree = pt, this.max_code = 0, this.stat_desc = Ft;
            }
            function Ge(pt) {
              return pt < 256 ? Ie[pt] : Ie[256 + (pt >>> 7)];
            }
            function Ye(pt, Ft) {
              pt.pending_buf[pt.pending++] = Ft & 255, pt.pending_buf[pt.pending++] = Ft >>> 8 & 255;
            }
            function je(pt, Ft, Nt) {
              pt.bi_valid > xe - Nt ? (pt.bi_buf |= Ft << pt.bi_valid & 65535, Ye(pt, pt.bi_buf), pt.bi_buf = Ft >> xe - pt.bi_valid, pt.bi_valid += Nt - xe) : (pt.bi_buf |= Ft << pt.bi_valid & 65535, pt.bi_valid += Nt);
            }
            function ht(pt, Ft, Nt) {
              je(
                pt,
                Nt[Ft * 2],
                Nt[Ft * 2 + 1]
                /*.Len*/
              );
            }
            function qe(pt, Ft) {
              var Nt = 0;
              do
                Nt |= pt & 1, pt >>>= 1, Nt <<= 1;
              while (--Ft > 0);
              return Nt >>> 1;
            }
            function lt(pt) {
              pt.bi_valid === 16 ? (Ye(pt, pt.bi_buf), pt.bi_buf = 0, pt.bi_valid = 0) : pt.bi_valid >= 8 && (pt.pending_buf[pt.pending++] = pt.bi_buf & 255, pt.bi_buf >>= 8, pt.bi_valid -= 8);
            }
            function ft(pt, Ft) {
              var Nt = Ft.dyn_tree, Kt = Ft.max_code, At = Ft.stat_desc.static_tree, Wt = Ft.stat_desc.has_stree, vt = Ft.stat_desc.extra_bits, Xt = Ft.stat_desc.extra_base, qt = Ft.stat_desc.max_length, ot, Ut, dt, Je, mt, wt, jt = 0;
              for (Je = 0; Je <= Le; Je++)
                pt.bl_count[Je] = 0;
              for (Nt[pt.heap[pt.heap_max] * 2 + 1] = 0, ot = pt.heap_max + 1; ot < b; ot++)
                Ut = pt.heap[ot], Je = Nt[Nt[Ut * 2 + 1] * 2 + 1] + 1, Je > qt && (Je = qt, jt++), Nt[Ut * 2 + 1] = Je, !(Ut > Kt) && (pt.bl_count[Je]++, mt = 0, Ut >= Xt && (mt = vt[Ut - Xt]), wt = Nt[Ut * 2], pt.opt_len += wt * (Je + mt), Wt && (pt.static_len += wt * (At[Ut * 2 + 1] + mt)));
              if (jt !== 0) {
                do {
                  for (Je = qt - 1; pt.bl_count[Je] === 0; )
                    Je--;
                  pt.bl_count[Je]--, pt.bl_count[Je + 1] += 2, pt.bl_count[qt]--, jt -= 2;
                } while (jt > 0);
                for (Je = qt; Je !== 0; Je--)
                  for (Ut = pt.bl_count[Je]; Ut !== 0; )
                    dt = pt.heap[--ot], !(dt > Kt) && (Nt[dt * 2 + 1] !== Je && (pt.opt_len += (Je - Nt[dt * 2 + 1]) * Nt[dt * 2], Nt[dt * 2 + 1] = Je), Ut--);
              }
            }
            function _t(pt, Ft, Nt) {
              var Kt = new Array(Le + 1), At = 0, Wt, vt;
              for (Wt = 1; Wt <= Le; Wt++)
                Kt[Wt] = At = At + Nt[Wt - 1] << 1;
              for (vt = 0; vt <= Ft; vt++) {
                var Xt = pt[vt * 2 + 1];
                Xt !== 0 && (pt[vt * 2] = qe(Kt[Xt]++, Xt));
              }
            }
            function St() {
              var pt, Ft, Nt, Kt, At, Wt = new Array(Le + 1);
              for (Nt = 0, Kt = 0; Kt < Ve - 1; Kt++)
                for (Ue[Kt] = Nt, pt = 0; pt < 1 << Fe[Kt]; pt++)
                  O[Nt++] = Kt;
              for (O[Nt - 1] = Kt, At = 0, Kt = 0; Kt < 16; Kt++)
                for ($e[Kt] = At, pt = 0; pt < 1 << He[Kt]; pt++)
                  Ie[At++] = Kt;
              for (At >>= 7; Kt < Pe; Kt++)
                for ($e[Kt] = At << 7, pt = 0; pt < 1 << He[Kt] - 7; pt++)
                  Ie[256 + At++] = Kt;
              for (Ft = 0; Ft <= Le; Ft++)
                Wt[Ft] = 0;
              for (pt = 0; pt <= 143; )
                De[pt * 2 + 1] = 8, pt++, Wt[8]++;
              for (; pt <= 255; )
                De[pt * 2 + 1] = 9, pt++, Wt[9]++;
              for (; pt <= 279; )
                De[pt * 2 + 1] = 7, pt++, Wt[7]++;
              for (; pt <= 287; )
                De[pt * 2 + 1] = 8, pt++, Wt[8]++;
              for (_t(De, B + 1, Wt), pt = 0; pt < Pe; pt++)
                Re[pt * 2 + 1] = 5, Re[pt * 2] = qe(pt, 5);
              Qe = new Ze(De, Fe, Me + 1, B, Le), Ae = new Ze(Re, He, 0, Pe, Le), Ne = new Ze(new Array(0), We, 0, k, ze);
            }
            function yt(pt) {
              var Ft;
              for (Ft = 0; Ft < B; Ft++)
                pt.dyn_ltree[Ft * 2] = 0;
              for (Ft = 0; Ft < Pe; Ft++)
                pt.dyn_dtree[Ft * 2] = 0;
              for (Ft = 0; Ft < k; Ft++)
                pt.bl_tree[Ft * 2] = 0;
              pt.dyn_ltree[Se * 2] = 1, pt.opt_len = pt.static_len = 0, pt.last_lit = pt.matches = 0;
            }
            function Ct(pt) {
              pt.bi_valid > 8 ? Ye(pt, pt.bi_buf) : pt.bi_valid > 0 && (pt.pending_buf[pt.pending++] = pt.bi_buf), pt.bi_buf = 0, pt.bi_valid = 0;
            }
            function Lt(pt, Ft, Nt, Kt) {
              Ct(pt), Kt && (Ye(pt, Nt), Ye(pt, ~Nt)), s.arraySet(pt.pending_buf, pt.window, Ft, Nt, pt.pending), pt.pending += Nt;
            }
            function Vt(pt, Ft, Nt, Kt) {
              var At = Ft * 2, Wt = Nt * 2;
              return pt[At] < pt[Wt] || pt[At] === pt[Wt] && Kt[Ft] <= Kt[Nt];
            }
            function Tt(pt, Ft, Nt) {
              for (var Kt = pt.heap[Nt], At = Nt << 1; At <= pt.heap_len && (At < pt.heap_len && Vt(Ft, pt.heap[At + 1], pt.heap[At], pt.depth) && At++, !Vt(Ft, Kt, pt.heap[At], pt.depth)); )
                pt.heap[Nt] = pt.heap[At], Nt = At, At <<= 1;
              pt.heap[Nt] = Kt;
            }
            function xt(pt, Ft, Nt) {
              var Kt, At, Wt = 0, vt, Xt;
              if (pt.last_lit !== 0)
                do
                  Kt = pt.pending_buf[pt.d_buf + Wt * 2] << 8 | pt.pending_buf[pt.d_buf + Wt * 2 + 1], At = pt.pending_buf[pt.l_buf + Wt], Wt++, Kt === 0 ? ht(pt, At, Ft) : (vt = O[At], ht(pt, vt + Me + 1, Ft), Xt = Fe[vt], Xt !== 0 && (At -= Ue[vt], je(pt, At, Xt)), Kt--, vt = Ge(Kt), ht(pt, vt, Nt), Xt = He[vt], Xt !== 0 && (Kt -= $e[vt], je(pt, Kt, Xt)));
                while (Wt < pt.last_lit);
              ht(pt, Se, Ft);
            }
            function Ot(pt, Ft) {
              var Nt = Ft.dyn_tree, Kt = Ft.stat_desc.static_tree, At = Ft.stat_desc.has_stree, Wt = Ft.stat_desc.elems, vt, Xt, qt = -1, ot;
              for (pt.heap_len = 0, pt.heap_max = b, vt = 0; vt < Wt; vt++)
                Nt[vt * 2] !== 0 ? (pt.heap[++pt.heap_len] = qt = vt, pt.depth[vt] = 0) : Nt[vt * 2 + 1] = 0;
              for (; pt.heap_len < 2; )
                ot = pt.heap[++pt.heap_len] = qt < 2 ? ++qt : 0, Nt[ot * 2] = 1, pt.depth[ot] = 0, pt.opt_len--, At && (pt.static_len -= Kt[ot * 2 + 1]);
              for (Ft.max_code = qt, vt = pt.heap_len >> 1; vt >= 1; vt--)
                Tt(pt, Nt, vt);
              ot = Wt;
              do
                vt = pt.heap[
                  1
                  /*SMALLEST*/
                ], pt.heap[
                  1
                  /*SMALLEST*/
                ] = pt.heap[pt.heap_len--], Tt(
                  pt,
                  Nt,
                  1
                  /*SMALLEST*/
                ), Xt = pt.heap[
                  1
                  /*SMALLEST*/
                ], pt.heap[--pt.heap_max] = vt, pt.heap[--pt.heap_max] = Xt, Nt[ot * 2] = Nt[vt * 2] + Nt[Xt * 2], pt.depth[ot] = (pt.depth[vt] >= pt.depth[Xt] ? pt.depth[vt] : pt.depth[Xt]) + 1, Nt[vt * 2 + 1] = Nt[Xt * 2 + 1] = ot, pt.heap[
                  1
                  /*SMALLEST*/
                ] = ot++, Tt(
                  pt,
                  Nt,
                  1
                  /*SMALLEST*/
                );
              while (pt.heap_len >= 2);
              pt.heap[--pt.heap_max] = pt.heap[
                1
                /*SMALLEST*/
              ], ft(pt, Ft), _t(Nt, qt, pt.bl_count);
            }
            function Pt(pt, Ft, Nt) {
              var Kt, At = -1, Wt, vt = Ft[0 * 2 + 1], Xt = 0, qt = 7, ot = 4;
              for (vt === 0 && (qt = 138, ot = 3), Ft[(Nt + 1) * 2 + 1] = 65535, Kt = 0; Kt <= Nt; Kt++)
                Wt = vt, vt = Ft[(Kt + 1) * 2 + 1], !(++Xt < qt && Wt === vt) && (Xt < ot ? pt.bl_tree[Wt * 2] += Xt : Wt !== 0 ? (Wt !== At && pt.bl_tree[Wt * 2]++, pt.bl_tree[Te * 2]++) : Xt <= 10 ? pt.bl_tree[D * 2]++ : pt.bl_tree[ke * 2]++, Xt = 0, At = Wt, vt === 0 ? (qt = 138, ot = 3) : Wt === vt ? (qt = 6, ot = 3) : (qt = 7, ot = 4));
            }
            function kt(pt, Ft, Nt) {
              var Kt, At = -1, Wt, vt = Ft[0 * 2 + 1], Xt = 0, qt = 7, ot = 4;
              for (vt === 0 && (qt = 138, ot = 3), Kt = 0; Kt <= Nt; Kt++)
                if (Wt = vt, vt = Ft[(Kt + 1) * 2 + 1], !(++Xt < qt && Wt === vt)) {
                  if (Xt < ot)
                    do
                      ht(pt, Wt, pt.bl_tree);
                    while (--Xt !== 0);
                  else
                    Wt !== 0 ? (Wt !== At && (ht(pt, Wt, pt.bl_tree), Xt--), ht(pt, Te, pt.bl_tree), je(pt, Xt - 3, 2)) : Xt <= 10 ? (ht(pt, D, pt.bl_tree), je(pt, Xt - 3, 3)) : (ht(pt, ke, pt.bl_tree), je(pt, Xt - 11, 7));
                  Xt = 0, At = Wt, vt === 0 ? (qt = 138, ot = 3) : Wt === vt ? (qt = 6, ot = 3) : (qt = 7, ot = 4);
                }
            }
            function zt(pt) {
              var Ft;
              for (Pt(pt, pt.dyn_ltree, pt.l_desc.max_code), Pt(pt, pt.dyn_dtree, pt.d_desc.max_code), Ot(pt, pt.bl_desc), Ft = k - 1; Ft >= 3 && pt.bl_tree[Ke[Ft] * 2 + 1] === 0; Ft--)
                ;
              return pt.opt_len += 3 * (Ft + 1) + 5 + 5 + 4, Ft;
            }
            function Bt(pt, Ft, Nt, Kt) {
              var At;
              for (je(pt, Ft - 257, 5), je(pt, Nt - 1, 5), je(pt, Kt - 4, 4), At = 0; At < Kt; At++)
                je(pt, pt.bl_tree[Ke[At] * 2 + 1], 3);
              kt(pt, pt.dyn_ltree, Ft - 1), kt(pt, pt.dyn_dtree, Nt - 1);
            }
            function gt(pt) {
              var Ft = 4093624447, Nt;
              for (Nt = 0; Nt <= 31; Nt++, Ft >>>= 1)
                if (Ft & 1 && pt.dyn_ltree[Nt * 2] !== 0)
                  return t;
              if (pt.dyn_ltree[18] !== 0 || pt.dyn_ltree[20] !== 0 || pt.dyn_ltree[26] !== 0)
                return l;
              for (Nt = 32; Nt < Me; Nt++)
                if (pt.dyn_ltree[Nt * 2] !== 0)
                  return l;
              return t;
            }
            var rt = !1;
            function nt(pt) {
              rt || (St(), rt = !0), pt.l_desc = new Be(pt.dyn_ltree, Qe), pt.d_desc = new Be(pt.dyn_dtree, Ae), pt.bl_desc = new Be(pt.bl_tree, Ne), pt.bi_buf = 0, pt.bi_valid = 0, yt(pt);
            }
            function bt(pt, Ft, Nt, Kt) {
              je(pt, (_ << 1) + (Kt ? 1 : 0), 3), Lt(pt, Ft, Nt, !0);
            }
            function Et(pt) {
              je(pt, u << 1, 3), ht(pt, Se, De), lt(pt);
            }
            function Rt(pt, Ft, Nt, Kt) {
              var At, Wt, vt = 0;
              pt.level > 0 ? (pt.strm.data_type === o && (pt.strm.data_type = gt(pt)), Ot(pt, pt.l_desc), Ot(pt, pt.d_desc), vt = zt(pt), At = pt.opt_len + 3 + 7 >>> 3, Wt = pt.static_len + 3 + 7 >>> 3, Wt <= At && (At = Wt)) : At = Wt = Nt + 5, Nt + 4 <= At && Ft !== -1 ? bt(pt, Ft, Nt, Kt) : pt.strategy === a || Wt === At ? (je(pt, (u << 1) + (Kt ? 1 : 0), 3), xt(pt, De, Re)) : (je(pt, (y << 1) + (Kt ? 1 : 0), 3), Bt(pt, pt.l_desc.max_code + 1, pt.d_desc.max_code + 1, vt + 1), xt(pt, pt.dyn_ltree, pt.dyn_dtree)), yt(pt), Kt && Ct(pt);
            }
            function $t(pt, Ft, Nt) {
              return pt.pending_buf[pt.d_buf + pt.last_lit * 2] = Ft >>> 8 & 255, pt.pending_buf[pt.d_buf + pt.last_lit * 2 + 1] = Ft & 255, pt.pending_buf[pt.l_buf + pt.last_lit] = Nt & 255, pt.last_lit++, Ft === 0 ? pt.dyn_ltree[Nt * 2]++ : (pt.matches++, Ft--, pt.dyn_ltree[(O[Nt] + Me + 1) * 2]++, pt.dyn_dtree[Ge(Ft) * 2]++), pt.last_lit === pt.lit_bufsize - 1;
            }
            r._tr_init = nt, r._tr_stored_block = bt, r._tr_flush_block = Rt, r._tr_tally = $t, r._tr_align = Et;
          }
        ),
        /***/
        "../node_modules/pako/lib/zlib/zstream.js": (
          /*!************************************************!*\
            !*** ../node_modules/pako/lib/zlib/zstream.js ***!
            \************************************************/
          /***/
          (e) => {
            function r() {
              this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
            }
            e.exports = r;
          }
        ),
        /***/
        "../node_modules/uuid/dist/esm-browser/parse.js": (
          /*!******************************************************!*\
            !*** ../node_modules/uuid/dist/esm-browser/parse.js ***!
            \******************************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              default: () => t
              /* harmony export */
            });
            var s = n(
              /*! ./validate.js */
              "../node_modules/uuid/dist/esm-browser/validate.js"
            );
            function a(l) {
              if (!(0, s.default)(l))
                throw TypeError("Invalid UUID");
              var o, c = new Uint8Array(16);
              return c[0] = (o = parseInt(l.slice(0, 8), 16)) >>> 24, c[1] = o >>> 16 & 255, c[2] = o >>> 8 & 255, c[3] = o & 255, c[4] = (o = parseInt(l.slice(9, 13), 16)) >>> 8, c[5] = o & 255, c[6] = (o = parseInt(l.slice(14, 18), 16)) >>> 8, c[7] = o & 255, c[8] = (o = parseInt(l.slice(19, 23), 16)) >>> 8, c[9] = o & 255, c[10] = (o = parseInt(l.slice(24, 36), 16)) / 1099511627776 & 255, c[11] = o / 4294967296 & 255, c[12] = o >>> 24 & 255, c[13] = o >>> 16 & 255, c[14] = o >>> 8 & 255, c[15] = o & 255, c;
            }
            const t = a;
          }
        ),
        /***/
        "../node_modules/uuid/dist/esm-browser/regex.js": (
          /*!******************************************************!*\
            !*** ../node_modules/uuid/dist/esm-browser/regex.js ***!
            \******************************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              default: () => s
              /* harmony export */
            });
            const s = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
          }
        ),
        /***/
        "../node_modules/uuid/dist/esm-browser/sha1.js": (
          /*!*****************************************************!*\
            !*** ../node_modules/uuid/dist/esm-browser/sha1.js ***!
            \*****************************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              default: () => l
              /* harmony export */
            });
            function s(o, c, _, u) {
              switch (o) {
                case 0:
                  return c & _ ^ ~c & u;
                case 1:
                  return c ^ _ ^ u;
                case 2:
                  return c & _ ^ c & u ^ _ & u;
                case 3:
                  return c ^ _ ^ u;
              }
            }
            function a(o, c) {
              return o << c | o >>> 32 - c;
            }
            function t(o) {
              var c = [1518500249, 1859775393, 2400959708, 3395469782], _ = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
              if (typeof o == "string") {
                var u = unescape(encodeURIComponent(o));
                o = [];
                for (var y = 0; y < u.length; ++y)
                  o.push(u.charCodeAt(y));
              } else
                Array.isArray(o) || (o = Array.prototype.slice.call(o));
              o.push(128);
              for (var g = o.length / 4 + 2, Ee = Math.ceil(g / 16), Ve = new Array(Ee), Me = 0; Me < Ee; ++Me) {
                for (var B = new Uint32Array(16), Pe = 0; Pe < 16; ++Pe)
                  B[Pe] = o[Me * 64 + Pe * 4] << 24 | o[Me * 64 + Pe * 4 + 1] << 16 | o[Me * 64 + Pe * 4 + 2] << 8 | o[Me * 64 + Pe * 4 + 3];
                Ve[Me] = B;
              }
              Ve[Ee - 1][14] = (o.length - 1) * 8 / Math.pow(2, 32), Ve[Ee - 1][14] = Math.floor(Ve[Ee - 1][14]), Ve[Ee - 1][15] = (o.length - 1) * 8 & 4294967295;
              for (var k = 0; k < Ee; ++k) {
                for (var b = new Uint32Array(80), Le = 0; Le < 16; ++Le)
                  b[Le] = Ve[k][Le];
                for (var xe = 16; xe < 80; ++xe)
                  b[xe] = a(b[xe - 3] ^ b[xe - 8] ^ b[xe - 14] ^ b[xe - 16], 1);
                for (var ze = _[0], Se = _[1], Te = _[2], D = _[3], ke = _[4], Fe = 0; Fe < 80; ++Fe) {
                  var He = Math.floor(Fe / 20), We = a(ze, 5) + s(He, Se, Te, D) + ke + c[He] + b[Fe] >>> 0;
                  ke = D, D = Te, Te = a(Se, 30) >>> 0, Se = ze, ze = We;
                }
                _[0] = _[0] + ze >>> 0, _[1] = _[1] + Se >>> 0, _[2] = _[2] + Te >>> 0, _[3] = _[3] + D >>> 0, _[4] = _[4] + ke >>> 0;
              }
              return [_[0] >> 24 & 255, _[0] >> 16 & 255, _[0] >> 8 & 255, _[0] & 255, _[1] >> 24 & 255, _[1] >> 16 & 255, _[1] >> 8 & 255, _[1] & 255, _[2] >> 24 & 255, _[2] >> 16 & 255, _[2] >> 8 & 255, _[2] & 255, _[3] >> 24 & 255, _[3] >> 16 & 255, _[3] >> 8 & 255, _[3] & 255, _[4] >> 24 & 255, _[4] >> 16 & 255, _[4] >> 8 & 255, _[4] & 255];
            }
            const l = t;
          }
        ),
        /***/
        "../node_modules/uuid/dist/esm-browser/stringify.js": (
          /*!**********************************************************!*\
            !*** ../node_modules/uuid/dist/esm-browser/stringify.js ***!
            \**********************************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              default: () => o
              /* harmony export */
            });
            for (var s = n(
              /*! ./validate.js */
              "../node_modules/uuid/dist/esm-browser/validate.js"
            ), a = [], t = 0; t < 256; ++t)
              a.push((t + 256).toString(16).substr(1));
            function l(c) {
              var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, u = (a[c[_ + 0]] + a[c[_ + 1]] + a[c[_ + 2]] + a[c[_ + 3]] + "-" + a[c[_ + 4]] + a[c[_ + 5]] + "-" + a[c[_ + 6]] + a[c[_ + 7]] + "-" + a[c[_ + 8]] + a[c[_ + 9]] + "-" + a[c[_ + 10]] + a[c[_ + 11]] + a[c[_ + 12]] + a[c[_ + 13]] + a[c[_ + 14]] + a[c[_ + 15]]).toLowerCase();
              if (!(0, s.default)(u))
                throw TypeError("Stringified UUID is invalid");
              return u;
            }
            const o = l;
          }
        ),
        /***/
        "../node_modules/uuid/dist/esm-browser/v35.js": (
          /*!****************************************************!*\
            !*** ../node_modules/uuid/dist/esm-browser/v35.js ***!
            \****************************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              DNS: () => (
                /* binding */
                l
              ),
              /* harmony export */
              URL: () => (
                /* binding */
                o
              ),
              /* harmony export */
              default: () => (
                /* export default binding */
                c
              )
              /* harmony export */
            });
            var s = n(
              /*! ./stringify.js */
              "../node_modules/uuid/dist/esm-browser/stringify.js"
            ), a = n(
              /*! ./parse.js */
              "../node_modules/uuid/dist/esm-browser/parse.js"
            );
            function t(_) {
              _ = unescape(encodeURIComponent(_));
              for (var u = [], y = 0; y < _.length; ++y)
                u.push(_.charCodeAt(y));
              return u;
            }
            var l = "6ba7b810-9dad-11d1-80b4-00c04fd430c8", o = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
            function c(_, u, y) {
              function g(Ee, Ve, Me, B) {
                if (typeof Ee == "string" && (Ee = t(Ee)), typeof Ve == "string" && (Ve = (0, a.default)(Ve)), Ve.length !== 16)
                  throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
                var Pe = new Uint8Array(16 + Ee.length);
                if (Pe.set(Ve), Pe.set(Ee, Ve.length), Pe = y(Pe), Pe[6] = Pe[6] & 15 | u, Pe[8] = Pe[8] & 63 | 128, Me) {
                  B = B || 0;
                  for (var k = 0; k < 16; ++k)
                    Me[B + k] = Pe[k];
                  return Me;
                }
                return (0, s.default)(Pe);
              }
              try {
                g.name = _;
              } catch {
              }
              return g.DNS = l, g.URL = o, g;
            }
          }
        ),
        /***/
        "../node_modules/uuid/dist/esm-browser/v5.js": (
          /*!***************************************************!*\
            !*** ../node_modules/uuid/dist/esm-browser/v5.js ***!
            \***************************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              default: () => l
              /* harmony export */
            });
            var s = n(
              /*! ./v35.js */
              "../node_modules/uuid/dist/esm-browser/v35.js"
            ), a = n(
              /*! ./sha1.js */
              "../node_modules/uuid/dist/esm-browser/sha1.js"
            ), t = (0, s.default)("v5", 80, a.default);
            const l = t;
          }
        ),
        /***/
        "../node_modules/uuid/dist/esm-browser/validate.js": (
          /*!*********************************************************!*\
            !*** ../node_modules/uuid/dist/esm-browser/validate.js ***!
            \*********************************************************/
          /***/
          (e, r, n) => {
            n.r(r), n.d(r, {
              /* harmony export */
              default: () => t
              /* harmony export */
            });
            var s = n(
              /*! ./regex.js */
              "../node_modules/uuid/dist/esm-browser/regex.js"
            );
            function a(l) {
              return typeof l == "string" && s.default.test(l);
            }
            const t = a;
          }
        )
        /******/
      }, __webpack_module_cache__ = {};
      function __webpack_require__(e) {
        var r = __webpack_module_cache__[e];
        if (r !== void 0)
          return r.exports;
        var n = __webpack_module_cache__[e] = {
          /******/
          // no module.id needed
          /******/
          // no module.loaded needed
          /******/
          exports: {}
          /******/
        };
        return __webpack_modules__[e](n, n.exports, __webpack_require__), n.exports;
      }
      __webpack_require__.n = (e) => {
        var r = e && e.__esModule ? (
          /******/
          () => e.default
        ) : (
          /******/
          () => e
        );
        return __webpack_require__.d(r, { a: r }), r;
      }, __webpack_require__.d = (e, r) => {
        for (var n in r)
          __webpack_require__.o(r, n) && !__webpack_require__.o(e, n) && Object.defineProperty(e, n, { enumerable: !0, get: r[n] });
      }, __webpack_require__.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r), __webpack_require__.r = (e) => {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 });
      };
      var __webpack_exports__ = {};
      return (() => {
        /*!**********************!*\
          !*** ./esm/index.js ***!
          \**********************/
        __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
          /* harmony export */
          ABR: () => (
            /* reexport safe */
            k.ABR
          ),
          /* harmony export */
          ACFT: () => (
            /* reexport safe */
            k.ACFT
          ),
          /* harmony export */
          ASEP: () => (
            /* reexport safe */
            a.ASEP
          ),
          /* harmony export */
          Alignment: () => (
            /* reexport safe */
            rr.Alignment
          ),
          /* harmony export */
          AltTypes: () => (
            /* reexport safe */
            xr.AltTypes
          ),
          /* harmony export */
          AltUnits: () => (
            /* reexport safe */
            Xe.AltUnits
          ),
          /* harmony export */
          Annotation: () => (
            /* reexport safe */
            bt.Annotation
          ),
          /* harmony export */
          AnnotationClickEventArgs: () => (
            /* reexport safe */
            $r.AnnotationClickEventArgs
          ),
          /* harmony export */
          ArrivedEventArgs: () => (
            /* reexport safe */
            $r.ArrivedEventArgs
          ),
          /* harmony export */
          AstroCalc: () => (
            /* reexport safe */
            qe.AstroCalc
          ),
          /* harmony export */
          AstroRaDec: () => (
            /* reexport safe */
            qe.AstroRaDec
          ),
          /* harmony export */
          AudioOverlay: () => (
            /* reexport safe */
            yr.AudioOverlay
          ),
          /* harmony export */
          AudioType: () => (
            /* reexport safe */
            yr.AudioType
          ),
          /* harmony export */
          BandPass: () => (
            /* reexport safe */
            Yt.BandPass
          ),
          /* harmony export */
          BinaryReader: () => (
            /* reexport safe */
            Tt.BinaryReader
          ),
          /* harmony export */
          Bitmap: () => (
            /* reexport safe */
            Lt.Bitmap
          ),
          /* harmony export */
          BitmapOverlay: () => (
            /* reexport safe */
            yr.BitmapOverlay
          ),
          /* harmony export */
          BlendState: () => (
            /* reexport safe */
            Be.BlendState
          ),
          /* harmony export */
          BodyAngles: () => (
            /* reexport safe */
            hr.BodyAngles
          ),
          /* harmony export */
          C3D: () => (
            /* reexport safe */
            s.C3D
          ),
          /* harmony export */
          CAAEarth: () => (
            /* reexport safe */
            t.CAAEarth
          ),
          /* harmony export */
          CAAEclipticalElementDetails: () => (
            /* reexport safe */
            Le.CAAEclipticalElementDetails
          ),
          /* harmony export */
          CAAEclipticalElements: () => (
            /* reexport safe */
            Le.CAAEclipticalElements
          ),
          /* harmony export */
          CAAFK5: () => (
            /* reexport safe */
            l.CAAFK5
          ),
          /* harmony export */
          CAAGlobe: () => (
            /* reexport safe */
            D.CAAGlobe
          ),
          /* harmony export */
          CAAJupiter: () => (
            /* reexport safe */
            g.CAAJupiter
          ),
          /* harmony export */
          CAAKepler: () => (
            /* reexport safe */
            Pe.CAAKepler
          ),
          /* harmony export */
          CAAMars: () => (
            /* reexport safe */
            y.CAAMars
          ),
          /* harmony export */
          CAAMercury: () => (
            /* reexport safe */
            _.CAAMercury
          ),
          /* harmony export */
          CAAMoon: () => (
            /* reexport safe */
            He.CAAMoon
          ),
          /* harmony export */
          CAAMoonNodes: () => (
            /* reexport safe */
            Ke.CAAMoonNodes
          ),
          /* harmony export */
          CAAMoonPerigeeApogee: () => (
            /* reexport safe */
            $.CAAMoonPerigeeApogee
          ),
          /* harmony export */
          CAAMoonPhases: () => (
            /* reexport safe */
            De.CAAMoonPhases
          ),
          /* harmony export */
          CAANeptune: () => (
            /* reexport safe */
            Me.CAANeptune
          ),
          /* harmony export */
          CAANutation: () => (
            /* reexport safe */
            o.CAANutation
          ),
          /* harmony export */
          CAAParallax: () => (
            /* reexport safe */
            Re.CAAParallax
          ),
          /* harmony export */
          CAAPhysicalJupiter: () => (
            /* reexport safe */
            O.CAAPhysicalJupiter
          ),
          /* harmony export */
          CAAPhysicalJupiterDetails: () => (
            /* reexport safe */
            O.CAAPhysicalJupiterDetails
          ),
          /* harmony export */
          CAAPhysicalMars: () => (
            /* reexport safe */
            Ue.CAAPhysicalMars
          ),
          /* harmony export */
          CAAPhysicalMarsDetails: () => (
            /* reexport safe */
            Ue.CAAPhysicalMarsDetails
          ),
          /* harmony export */
          CAAPhysicalSun: () => (
            /* reexport safe */
            $e.CAAPhysicalSun
          ),
          /* harmony export */
          CAAPhysicalSunDetails: () => (
            /* reexport safe */
            $e.CAAPhysicalSunDetails
          ),
          /* harmony export */
          CAAPluto: () => (
            /* reexport safe */
            B.CAAPluto
          ),
          /* harmony export */
          CAAPrecession: () => (
            /* reexport safe */
            Ze.CAAPrecession
          ),
          /* harmony export */
          CAARiseTransitSet: () => (
            /* reexport safe */
            Qe.CAARiseTransitSet
          ),
          /* harmony export */
          CAARiseTransitSetDetails: () => (
            /* reexport safe */
            Qe.CAARiseTransitSetDetails
          ),
          /* harmony export */
          CAASaturn: () => (
            /* reexport safe */
            Ee.CAASaturn
          ),
          /* harmony export */
          CAASaturnRingDetails: () => (
            /* reexport safe */
            Ae.CAASaturnRingDetails
          ),
          /* harmony export */
          CAASaturnRings: () => (
            /* reexport safe */
            Ae.CAASaturnRings
          ),
          /* harmony export */
          CAASidereal: () => (
            /* reexport safe */
            Ie.CAASidereal
          ),
          /* harmony export */
          CAAStellarMagnitudes: () => (
            /* reexport safe */
            Ne.CAAStellarMagnitudes
          ),
          /* harmony export */
          CAASun: () => (
            /* reexport safe */
            c.CAASun
          ),
          /* harmony export */
          CAATopocentricEclipticDetails: () => (
            /* reexport safe */
            Re.CAATopocentricEclipticDetails
          ),
          /* harmony export */
          CAAUranus: () => (
            /* reexport safe */
            Ve.CAAUranus
          ),
          /* harmony export */
          CAAVenus: () => (
            /* reexport safe */
            u.CAAVenus
          ),
          /* harmony export */
          COR: () => (
            /* reexport safe */
            s.COR
          ),
          /* harmony export */
          CT: () => (
            /* reexport safe */
            s.CT
          ),
          /* harmony export */
          CalD: () => (
            /* reexport safe */
            n.CalD
          ),
          /* harmony export */
          CameraParameters: () => (
            /* reexport safe */
            Et.CameraParameters
          ),
          /* harmony export */
          CatalogSpreadSheetLayer: () => (
            /* reexport safe */
            Br.CatalogSpreadSheetLayer
          ),
          /* harmony export */
          Circle: () => (
            /* reexport safe */
            bt.Circle
          ),
          /* harmony export */
          Classification: () => (
            /* reexport safe */
            lr.Classification
          ),
          /* harmony export */
          CollectionLoadedEventArgs: () => (
            /* reexport safe */
            $r.CollectionLoadedEventArgs
          ),
          /* harmony export */
          Color: () => (
            /* reexport safe */
            Ge.Color
          ),
          /* harmony export */
          ColorMapContainer: () => (
            /* reexport safe */
            Kt.ColorMapContainer
          ),
          /* harmony export */
          ColorMaps: () => (
            /* reexport safe */
            xr.ColorMaps
          ),
          /* harmony export */
          ColorPicker: () => (
            /* reexport safe */
            Cr.ColorPicker
          ),
          /* harmony export */
          Colors: () => (
            /* reexport safe */
            Ge.Colors
          ),
          /* harmony export */
          ConstellationFilter: () => (
            /* reexport safe */
            Rt.ConstellationFilter
          ),
          /* harmony export */
          Constellations: () => (
            /* reexport safe */
            er.Constellations
          ),
          /* harmony export */
          ContextMenuStrip: () => (
            /* reexport safe */
            Vt.ContextMenuStrip
          ),
          /* harmony export */
          ConvexHull: () => (
            /* reexport safe */
            je.ConvexHull
          ),
          /* harmony export */
          Coordinates: () => (
            /* reexport safe */
            Pt.Coordinates
          ),
          /* harmony export */
          CoordinatesTypes: () => (
            /* reexport safe */
            xr.CoordinatesTypes
          ),
          /* harmony export */
          CullMode: () => (
            /* reexport safe */
            yt.CullMode
          ),
          /* harmony export */
          Cursor: () => (
            /* reexport safe */
            ht.Cursor
          ),
          /* harmony export */
          Cursors: () => (
            /* reexport safe */
            ht.Cursors
          ),
          /* harmony export */
          DAY_OF_WEEK: () => (
            /* reexport safe */
            n.DAY_OF_WEEK
          ),
          /* harmony export */
          DT: () => (
            /* reexport safe */
            n.DT
          ),
          /* harmony export */
          DYT: () => (
            /* reexport safe */
            b.DYT
          ),
          /* harmony export */
          DataItem: () => (
            /* reexport safe */
            yt.DataItem
          ),
          /* harmony export */
          DataTypes: () => (
            /* reexport safe */
            vt.DataTypes
          ),
          /* harmony export */
          DataVizWizard: () => (
            /* reexport safe */
            Ir.DataVizWizard
          ),
          /* harmony export */
          Dates: () => (
            /* reexport safe */
            yt.Dates
          ),
          /* harmony export */
          Dialog: () => (
            /* reexport safe */
            kr.Dialog
          ),
          /* harmony export */
          DialogResult: () => (
            /* reexport safe */
            ht.DialogResult
          ),
          /* harmony export */
          DomainValue: () => (
            /* reexport safe */
            Xe.DomainValue
          ),
          /* harmony export */
          DoubleUtilities: () => (
            /* reexport safe */
            je.DoubleUtilities
          ),
          /* harmony export */
          ELL: () => (
            /* reexport safe */
            ze.ELL
          ),
          /* harmony export */
          EO: () => (
            /* reexport safe */
            ze.EO
          ),
          /* harmony export */
          EOD: () => (
            /* reexport safe */
            ze.EOD
          ),
          /* harmony export */
          EOE: () => (
            /* reexport safe */
            ze.EOE
          ),
          /* harmony export */
          EOT: () => (
            /* reexport safe */
            Se.EOT
          ),
          /* harmony export */
          EPD: () => (
            /* reexport safe */
            ze.EPD
          ),
          /* harmony export */
          EPO: () => (
            /* reexport safe */
            xe.EPO
          ),
          /* harmony export */
          EllipseRenderer: () => (
            /* reexport safe */
            Ht.EllipseRenderer
          ),
          /* harmony export */
          EllipseShader: () => (
            /* reexport safe */
            St.EllipseShader
          ),
          /* harmony export */
          EquirectangularTile: () => (
            /* reexport safe */
            Ut.EquirectangularTile
          ),
          /* harmony export */
          FadeType: () => (
            /* reexport safe */
            Xe.FadeType
          ),
          /* harmony export */
          FastMath: () => (
            /* reexport safe */
            kt.FastMath
          ),
          /* harmony export */
          FileCabinet: () => (
            /* reexport safe */
            _r.FileCabinet
          ),
          /* harmony export */
          FileEntry: () => (
            /* reexport safe */
            _r.FileEntry
          ),
          /* harmony export */
          FitsImage: () => (
            /* reexport safe */
            Wt.FitsImage
          ),
          /* harmony export */
          FitsImageJs: () => (
            /* reexport safe */
            vt.FitsImageJs
          ),
          /* harmony export */
          FitsImageTile: () => (
            /* reexport safe */
            Xt.FitsImageTile
          ),
          /* harmony export */
          FitsProperties: () => (
            /* reexport safe */
            $t.FitsProperties
          ),
          /* harmony export */
          FitsShader: () => (
            /* reexport safe */
            St.FitsShader
          ),
          /* harmony export */
          FlipbookOverlay: () => (
            /* reexport safe */
            yr.FlipbookOverlay
          ),
          /* harmony export */
          Folder: () => (
            /* reexport safe */
            wr.Folder
          ),
          /* harmony export */
          FolderBrowser: () => (
            /* reexport safe */
            Dr.FolderBrowser
          ),
          /* harmony export */
          FolderDownloadAction: () => (
            /* reexport safe */
            Mr.FolderDownloadAction
          ),
          /* harmony export */
          FolderGroup: () => (
            /* reexport safe */
            wr.FolderGroup
          ),
          /* harmony export */
          FolderRefreshType: () => (
            /* reexport safe */
            wr.FolderRefreshType
          ),
          /* harmony export */
          FolderType: () => (
            /* reexport safe */
            wr.FolderType
          ),
          /* harmony export */
          FolderUp: () => (
            /* reexport safe */
            vr.FolderUp
          ),
          /* harmony export */
          Formatting: () => (
            /* reexport safe */
            Ot.Formatting
          ),
          /* harmony export */
          FrameTarget: () => (
            /* reexport safe */
            Vr.FrameTarget
          ),
          /* harmony export */
          FrameWizard: () => (
            /* reexport safe */
            Ir.FrameWizard
          ),
          /* harmony export */
          Fxyf: () => (
            /* reexport safe */
            rt.Fxyf
          ),
          /* harmony export */
          GFX: () => (
            /* binding */
            jr
          ),
          /* harmony export */
          GM: () => (
            /* reexport safe */
            Te.GM
          ),
          /* harmony export */
          GMD: () => (
            /* reexport safe */
            Te.GMD
          ),
          /* harmony export */
          GMDS: () => (
            /* reexport safe */
            Te.GMDS
          ),
          /* harmony export */
          Galaxy: () => (
            /* reexport safe */
            pt.Galaxy
          ),
          /* harmony export */
          GlyphCache: () => (
            /* reexport safe */
            rr.GlyphCache
          ),
          /* harmony export */
          GlyphItem: () => (
            /* reexport safe */
            rr.GlyphItem
          ),
          /* harmony export */
          GreatCircleDialog: () => (
            /* reexport safe */
            Ir.GreatCircleDialog
          ),
          /* harmony export */
          GreatCirlceRouteLayer: () => (
            /* reexport safe */
            ct.GreatCirlceRouteLayer
          ),
          /* harmony export */
          GridLayer: () => (
            /* reexport safe */
            Mt.GridLayer
          ),
          /* harmony export */
          Grids: () => (
            /* reexport safe */
            fr.Grids
          ),
          /* harmony export */
          GroundOverlayLayer: () => (
            /* reexport safe */
            Vr.GroundOverlayLayer
          ),
          /* harmony export */
          Group: () => (
            /* reexport safe */
            It.Group
          ),
          /* harmony export */
          Guid: () => (
            /* reexport safe */
            ht.Guid
          ),
          /* harmony export */
          HealpixTables: () => (
            /* reexport safe */
            zt.HealpixTables
          ),
          /* harmony export */
          HealpixTile: () => (
            /* reexport safe */
            dt.HealpixTile
          ),
          /* harmony export */
          HealpixUtils: () => (
            /* reexport safe */
            Bt.HealpixUtils
          ),
          /* harmony export */
          HipsProperties: () => (
            /* reexport safe */
            Fr.HipsProperties
          ),
          /* harmony export */
          Histogram: () => (
            /* reexport safe */
            Ar.Histogram
          ),
          /* harmony export */
          HistogramEqualization: () => (
            /* reexport safe */
            vt.HistogramEqualization
          ),
          /* harmony export */
          Hploc: () => (
            /* reexport safe */
            gt.Hploc
          ),
          /* harmony export */
          IFR: () => (
            /* reexport safe */
            ke.IFR
          ),
          /* harmony export */
          INTP: () => (
            /* reexport safe */
            Fe.INTP
          ),
          /* harmony export */
          IPlace: () => (
            /* reexport safe */
            nt.IPlace
          ),
          /* harmony export */
          ISSLayer: () => (
            /* reexport safe */
            Nr.ISSLayer
          ),
          /* harmony export */
          ISettings: () => (
            /* reexport safe */
            nt.ISettings
          ),
          /* harmony export */
          IThumbnail: () => (
            /* reexport safe */
            nt.IThumbnail
          ),
          /* harmony export */
          IUIServicesCallbacks: () => (
            /* reexport safe */
            nt.IUIServicesCallbacks
          ),
          /* harmony export */
          IUiController: () => (
            /* reexport safe */
            nt.IUiController
          ),
          /* harmony export */
          IUndoStep: () => (
            /* reexport safe */
            nt.IUndoStep
          ),
          /* harmony export */
          IViewMover: () => (
            /* reexport safe */
            nt.IViewMover
          ),
          /* harmony export */
          ImageSetLayer: () => (
            /* reexport safe */
            Dt.ImageSetLayer
          ),
          /* harmony export */
          ImageSetType: () => (
            /* reexport safe */
            Yt.ImageSetType
          ),
          /* harmony export */
          ImageShader: () => (
            /* reexport safe */
            St.ImageShader
          ),
          /* harmony export */
          ImageShader2: () => (
            /* reexport safe */
            St.ImageShader2
          ),
          /* harmony export */
          Imageset: () => (
            /* reexport safe */
            Yt.Imageset
          ),
          /* harmony export */
          InViewReturnMessage: () => (
            /* reexport safe */
            Ur.InViewReturnMessage
          ),
          /* harmony export */
          IndexBuffer: () => (
            /* reexport safe */
            lt.IndexBuffer
          ),
          /* harmony export */
          InterpolationType: () => (
            /* reexport safe */
            Et.InterpolationType
          ),
          /* harmony export */
          KeplerPointSpriteShader: () => (
            /* reexport safe */
            St.KeplerPointSpriteShader
          ),
          /* harmony export */
          KeplerVertex: () => (
            /* reexport safe */
            or.KeplerVertex
          ),
          /* harmony export */
          KeplerianElements: () => (
            /* reexport safe */
            hr.KeplerianElements
          ),
          /* harmony export */
          Keys: () => (
            /* reexport safe */
            ht.Keys
          ),
          /* harmony export */
          KmlCoordinate: () => (
            /* reexport safe */
            Br.KmlCoordinate
          ),
          /* harmony export */
          KmlLineList: () => (
            /* reexport safe */
            Br.KmlLineList
          ),
          /* harmony export */
          Language: () => (
            /* reexport safe */
            ht.Language
          ),
          /* harmony export */
          LatLngEdges: () => (
            /* reexport safe */
            wt.LatLngEdges
          ),
          /* harmony export */
          Layer: () => (
            /* reexport safe */
            Xe.Layer
          ),
          /* harmony export */
          LayerInfo: () => (
            /* reexport safe */
            Er.LayerInfo
          ),
          /* harmony export */
          LayerManager: () => (
            /* reexport safe */
            Vr.LayerManager
          ),
          /* harmony export */
          LayerMap: () => (
            /* reexport safe */
            Vr.LayerMap
          ),
          /* harmony export */
          LayerUI: () => (
            /* reexport safe */
            ut.LayerUI
          ),
          /* harmony export */
          LayerUIMenuItem: () => (
            /* reexport safe */
            ut.LayerUIMenuItem
          ),
          /* harmony export */
          LayerUITreeNode: () => (
            /* reexport safe */
            ut.LayerUITreeNode
          ),
          /* harmony export */
          LineList: () => (
            /* reexport safe */
            yt.LineList
          ),
          /* harmony export */
          LineShaderNormalDates: () => (
            /* reexport safe */
            St.LineShaderNormalDates
          ),
          /* harmony export */
          Linepoint: () => (
            /* reexport safe */
            er.Linepoint
          ),
          /* harmony export */
          Lineset: () => (
            /* reexport safe */
            er.Lineset
          ),
          /* harmony export */
          LocationHint: () => (
            /* reexport safe */
            je.LocationHint
          ),
          /* harmony export */
          LoopTypes: () => (
            /* reexport safe */
            yr.LoopTypes
          ),
          /* harmony export */
          MIFR: () => (
            /* reexport safe */
            We.MIFR
          ),
          /* harmony export */
          MPAC: () => (
            /* reexport safe */
            $.MPAC
          ),
          /* harmony export */
          MarkerMixes: () => (
            /* reexport safe */
            xr.MarkerMixes
          ),
          /* harmony export */
          MarkerScales: () => (
            /* reexport safe */
            xr.MarkerScales
          ),
          /* harmony export */
          MasterTime: () => (
            /* reexport safe */
            Or.MasterTime
          ),
          /* harmony export */
          Material: () => (
            /* reexport safe */
            It.Material
          ),
          /* harmony export */
          Matrix2d: () => (
            /* reexport safe */
            je.Matrix2d
          ),
          /* harmony export */
          Matrix3d: () => (
            /* reexport safe */
            je.Matrix3d
          ),
          /* harmony export */
          MercatorTile: () => (
            /* reexport safe */
            Je.MercatorTile
          ),
          /* harmony export */
          Mesh: () => (
            /* reexport safe */
            It.Mesh
          ),
          /* harmony export */
          ModelShader: () => (
            /* reexport safe */
            St.ModelShader
          ),
          /* harmony export */
          ModelShaderTan: () => (
            /* reexport safe */
            St.ModelShaderTan
          ),
          /* harmony export */
          MoonCoefficient1: () => (
            /* reexport safe */
            He.MoonCoefficient1
          ),
          /* harmony export */
          MoonCoefficient2: () => (
            /* reexport safe */
            He.MoonCoefficient2
          ),
          /* harmony export */
          Mouse: () => (
            /* reexport safe */
            ht.Mouse
          ),
          /* harmony export */
          NUC: () => (
            /* reexport safe */
            o.NUC
          ),
          /* harmony export */
          Object3d: () => (
            /* reexport safe */
            It.Object3d
          ),
          /* harmony export */
          Object3dLayer: () => (
            /* reexport safe */
            It.Object3dLayer
          ),
          /* harmony export */
          Object3dLayerUI: () => (
            /* reexport safe */
            It.Object3dLayerUI
          ),
          /* harmony export */
          ObjectNode: () => (
            /* reexport safe */
            It.ObjectNode
          ),
          /* harmony export */
          Orbit: () => (
            /* reexport safe */
            Ht.Orbit
          ),
          /* harmony export */
          OrbitLayer: () => (
            /* reexport safe */
            ir.OrbitLayer
          ),
          /* harmony export */
          OrbitLayerUI: () => (
            /* reexport safe */
            ir.OrbitLayerUI
          ),
          /* harmony export */
          OrbitLineList: () => (
            /* reexport safe */
            yt.OrbitLineList
          ),
          /* harmony export */
          OrbitLineShader: () => (
            /* reexport safe */
            St.OrbitLineShader
          ),
          /* harmony export */
          Overlay: () => (
            /* reexport safe */
            yr.Overlay
          ),
          /* harmony export */
          OverlayAnchor: () => (
            /* reexport safe */
            yr.OverlayAnchor
          ),
          /* harmony export */
          OverlayList: () => (
            /* reexport safe */
            Pr.OverlayList
          ),
          /* harmony export */
          OverlayProperties: () => (
            /* reexport safe */
            ht.OverlayProperties
          ),
          /* harmony export */
          Place: () => (
            /* reexport safe */
            lr.Place
          ),
          /* harmony export */
          PlaneD: () => (
            /* reexport safe */
            je.PlaneD
          ),
          /* harmony export */
          Planets: () => (
            /* reexport safe */
            hr.Planets
          ),
          /* harmony export */
          PlotTile: () => (
            /* reexport safe */
            mt.PlotTile
          ),
          /* harmony export */
          PlotTypes: () => (
            /* reexport safe */
            xr.PlotTypes
          ),
          /* harmony export */
          PlutoCoefficient1: () => (
            /* reexport safe */
            B.PlutoCoefficient1
          ),
          /* harmony export */
          PlutoCoefficient2: () => (
            /* reexport safe */
            B.PlutoCoefficient2
          ),
          /* harmony export */
          PointList: () => (
            /* reexport safe */
            yt.PointList
          ),
          /* harmony export */
          PointScaleTypes: () => (
            /* reexport safe */
            yt.PointScaleTypes
          ),
          /* harmony export */
          PointType: () => (
            /* reexport safe */
            er.PointType
          ),
          /* harmony export */
          Pointing: () => (
            /* reexport safe */
            dr.Pointing
          ),
          /* harmony export */
          Poly: () => (
            /* reexport safe */
            bt.Poly
          ),
          /* harmony export */
          PolyLine: () => (
            /* reexport safe */
            bt.PolyLine
          ),
          /* harmony export */
          PopupColorPicker: () => (
            /* reexport safe */
            ht.PopupColorPicker
          ),
          /* harmony export */
          PopupVolume: () => (
            /* reexport safe */
            ht.PopupVolume
          ),
          /* harmony export */
          PositionColored: () => (
            /* reexport safe */
            je.PositionColored
          ),
          /* harmony export */
          PositionColoredTextured: () => (
            /* reexport safe */
            je.PositionColoredTextured
          ),
          /* harmony export */
          PositionNormalTextured: () => (
            /* reexport safe */
            je.PositionNormalTextured
          ),
          /* harmony export */
          PositionNormalTexturedTangent: () => (
            /* reexport safe */
            je.PositionNormalTexturedTangent
          ),
          /* harmony export */
          PositionNormalTexturedTangentVertexBuffer: () => (
            /* reexport safe */
            lt.PositionNormalTexturedTangentVertexBuffer
          ),
          /* harmony export */
          PositionNormalTexturedVertexBuffer: () => (
            /* reexport safe */
            lt.PositionNormalTexturedVertexBuffer
          ),
          /* harmony export */
          PositionNormalTexturedX2: () => (
            /* reexport safe */
            je.PositionNormalTexturedX2
          ),
          /* harmony export */
          PositionTexture: () => (
            /* reexport safe */
            je.PositionTexture
          ),
          /* harmony export */
          PositionVertexBuffer: () => (
            /* reexport safe */
            lt.PositionVertexBuffer
          ),
          /* harmony export */
          Primitives: () => (
            /* reexport safe */
            nr.Primitives
          ),
          /* harmony export */
          ProjectionType: () => (
            /* reexport safe */
            Yt.ProjectionType
          ),
          /* harmony export */
          PushPin: () => (
            /* reexport safe */
            Br.PushPin
          ),
          /* harmony export */
          RAUnits: () => (
            /* reexport safe */
            xr.RAUnits
          ),
          /* harmony export */
          Rectangle: () => (
            /* reexport safe */
            ht.Rectangle
          ),
          /* harmony export */
          ReferenceFrame: () => (
            /* reexport safe */
            Zt.ReferenceFrame
          ),
          /* harmony export */
          ReferenceFrameProps: () => (
            /* reexport safe */
            Ir.ReferenceFrameProps
          ),
          /* harmony export */
          ReferenceFrameTypes: () => (
            /* reexport safe */
            Zt.ReferenceFrameTypes
          ),
          /* harmony export */
          ReferenceFrames: () => (
            /* reexport safe */
            Vr.ReferenceFrames
          ),
          /* harmony export */
          RenderContext: () => (
            /* reexport safe */
            Ur.RenderContext
          ),
          /* harmony export */
          RenderTriangle: () => (
            /* reexport safe */
            ot.RenderTriangle
          ),
          /* harmony export */
          RiseSetDetails: () => (
            /* reexport safe */
            qe.RiseSetDetails
          ),
          /* harmony export */
          ScaleLinear: () => (
            /* reexport safe */
            vt.ScaleLinear
          ),
          /* harmony export */
          ScaleLog: () => (
            /* reexport safe */
            vt.ScaleLog
          ),
          /* harmony export */
          ScaleMap: () => (
            /* reexport safe */
            vt.ScaleMap
          ),
          /* harmony export */
          ScalePow: () => (
            /* reexport safe */
            vt.ScalePow
          ),
          /* harmony export */
          ScaleSqrt: () => (
            /* reexport safe */
            vt.ScaleSqrt
          ),
          /* harmony export */
          ScaleTypes: () => (
            /* reexport safe */
            $t.ScaleTypes
          ),
          /* harmony export */
          ScriptInterface: () => (
            /* reexport safe */
            $r.ScriptInterface
          ),
          /* harmony export */
          SelectLink: () => (
            /* reexport safe */
            ht.SelectLink
          ),
          /* harmony export */
          Selection: () => (
            /* reexport safe */
            br.Selection
          ),
          /* harmony export */
          SelectionAnchor: () => (
            /* reexport safe */
            br.SelectionAnchor
          ),
          /* harmony export */
          SettingParameter: () => (
            /* reexport safe */
            Qt.SettingParameter
          ),
          /* harmony export */
          Settings: () => (
            /* reexport safe */
            Qt.Settings
          ),
          /* harmony export */
          ShapeOverlay: () => (
            /* reexport safe */
            yr.ShapeOverlay
          ),
          /* harmony export */
          ShapeSpriteShader: () => (
            /* reexport safe */
            St.ShapeSpriteShader
          ),
          /* harmony export */
          ShapeType: () => (
            /* reexport safe */
            yr.ShapeType
          ),
          /* harmony export */
          ShortIndexBuffer: () => (
            /* reexport safe */
            lt.ShortIndexBuffer
          ),
          /* harmony export */
          SimpleInput: () => (
            /* reexport safe */
            xt.SimpleInput
          ),
          /* harmony export */
          SimpleLineList: () => (
            /* reexport safe */
            yt.SimpleLineList
          ),
          /* harmony export */
          SimpleLineShader: () => (
            /* reexport safe */
            St.SimpleLineShader
          ),
          /* harmony export */
          SimpleLineShader2D: () => (
            /* reexport safe */
            St.SimpleLineShader2D
          ),
          /* harmony export */
          SkyImageTile: () => (
            /* reexport safe */
            jt.SkyImageTile
          ),
          /* harmony export */
          SkyOverlays: () => (
            /* reexport safe */
            Vr.SkyOverlays
          ),
          /* harmony export */
          SlideChangedEventArgs: () => (
            /* reexport safe */
            $r.SlideChangedEventArgs
          ),
          /* harmony export */
          SolarSystemObjects: () => (
            /* reexport safe */
            Et.SolarSystemObjects
          ),
          /* harmony export */
          SoundEditor: () => (
            /* reexport safe */
            Pr.SoundEditor
          ),
          /* harmony export */
          SpaceTimeController: () => (
            /* reexport safe */
            sr.SpaceTimeController
          ),
          /* harmony export */
          SphereHull: () => (
            /* reexport safe */
            je.SphereHull
          ),
          /* harmony export */
          SpreadSheetLayer: () => (
            /* reexport safe */
            Br.SpreadSheetLayer
          ),
          /* harmony export */
          SpriteShader: () => (
            /* reexport safe */
            St.SpriteShader
          ),
          /* harmony export */
          Star: () => (
            /* reexport safe */
            pt.Star
          ),
          /* harmony export */
          StateType: () => (
            /* reexport safe */
            Nt.StateType
          ),
          /* harmony export */
          StockSkyOverlayTypes: () => (
            /* reexport safe */
            Qt.StockSkyOverlayTypes
          ),
          /* harmony export */
          Table: () => (
            /* reexport safe */
            Jt.Table
          ),
          /* harmony export */
          TagMe: () => (
            /* reexport safe */
            Vt.TagMe
          ),
          /* harmony export */
          TangentTile: () => (
            /* reexport safe */
            wt.TangentTile
          ),
          /* harmony export */
          Tessellator: () => (
            /* reexport safe */
            _t.Tessellator
          ),
          /* harmony export */
          Text3d: () => (
            /* reexport safe */
            rr.Text3d
          ),
          /* harmony export */
          Text3dBatch: () => (
            /* reexport safe */
            rr.Text3dBatch
          ),
          /* harmony export */
          TextBorderStyle: () => (
            /* reexport safe */
            tr.TextBorderStyle
          ),
          /* harmony export */
          TextObject: () => (
            /* reexport safe */
            tr.TextObject
          ),
          /* harmony export */
          TextOverlay: () => (
            /* reexport safe */
            yr.TextOverlay
          ),
          /* harmony export */
          TextShader: () => (
            /* reexport safe */
            St.TextShader
          ),
          /* harmony export */
          Texture: () => (
            /* reexport safe */
            ft.Texture
          ),
          /* harmony export */
          ThumbnailSize: () => (
            /* reexport safe */
            Dr.ThumbnailSize
          ),
          /* harmony export */
          Tile: () => (
            /* reexport safe */
            qt.Tile
          ),
          /* harmony export */
          TileShader: () => (
            /* reexport safe */
            St.TileShader
          ),
          /* harmony export */
          TimeLine: () => (
            /* reexport safe */
            Pr.TimeLine
          ),
          /* harmony export */
          TimeSeriesLayer: () => (
            /* reexport safe */
            xr.TimeSeriesLayer
          ),
          /* harmony export */
          TimeSeriesLineVertex: () => (
            /* reexport safe */
            yt.TimeSeriesLineVertex
          ),
          /* harmony export */
          TimeSeriesPointSpriteShader: () => (
            /* reexport safe */
            St.TimeSeriesPointSpriteShader
          ),
          /* harmony export */
          TimeSeriesPointVertex: () => (
            /* reexport safe */
            yt.TimeSeriesPointVertex
          ),
          /* harmony export */
          ToastTile: () => (
            /* reexport safe */
            Gt.ToastTile
          ),
          /* harmony export */
          ToolStripMenuItem: () => (
            /* reexport safe */
            Vt.ToolStripMenuItem
          ),
          /* harmony export */
          ToolStripSeparator: () => (
            /* reexport safe */
            Vt.ToolStripSeparator
          ),
          /* harmony export */
          Tour: () => (
            /* reexport safe */
            cr.Tour
          ),
          /* harmony export */
          TourDocument: () => (
            /* reexport safe */
            pr.TourDocument
          ),
          /* harmony export */
          TourEdit: () => (
            /* reexport safe */
            Pr.TourEdit
          ),
          /* harmony export */
          TourEditTab: () => (
            /* reexport safe */
            mr.TourEditTab
          ),
          /* harmony export */
          TourEditor: () => (
            /* reexport safe */
            Pr.TourEditor
          ),
          /* harmony export */
          TourPlayer: () => (
            /* reexport safe */
            Or.TourPlayer
          ),
          /* harmony export */
          TourStop: () => (
            /* reexport safe */
            Er.TourStop
          ),
          /* harmony export */
          TourStopList: () => (
            /* reexport safe */
            Pr.TourStopList
          ),
          /* harmony export */
          TransitionType: () => (
            /* reexport safe */
            Er.TransitionType
          ),
          /* harmony export */
          TriangleFanList: () => (
            /* reexport safe */
            yt.TriangleFanList
          ),
          /* harmony export */
          TriangleList: () => (
            /* reexport safe */
            yt.TriangleList
          ),
          /* harmony export */
          URLHelpers: () => (
            /* reexport safe */
            Ye.URLHelpers
          ),
          /* harmony export */
          URLRewriteMode: () => (
            /* reexport safe */
            Ye.URLRewriteMode
          ),
          /* harmony export */
          UiTools: () => (
            /* reexport safe */
            Ft.UiTools
          ),
          /* harmony export */
          Undo: () => (
            /* reexport safe */
            Rr.Undo
          ),
          /* harmony export */
          UndoStep: () => (
            /* reexport safe */
            Rr.UndoStep
          ),
          /* harmony export */
          UndoTourPropertiesChange: () => (
            /* reexport safe */
            Rr.UndoTourPropertiesChange
          ),
          /* harmony export */
          UndoTourSlidelistChange: () => (
            /* reexport safe */
            Rr.UndoTourSlidelistChange
          ),
          /* harmony export */
          UndoTourStopChange: () => (
            /* reexport safe */
            Er.UndoTourStopChange
          ),
          /* harmony export */
          UserLevel: () => (
            /* reexport safe */
            pr.UserLevel
          ),
          /* harmony export */
          Util: () => (
            /* reexport safe */
            r.Util
          ),
          /* harmony export */
          VSC: () => (
            /* reexport safe */
            t.VSC
          ),
          /* harmony export */
          Vector2d: () => (
            /* reexport safe */
            je.Vector2d
          ),
          /* harmony export */
          Vector3d: () => (
            /* reexport safe */
            je.Vector3d
          ),
          /* harmony export */
          Vector4d: () => (
            /* reexport safe */
            je.Vector4d
          ),
          /* harmony export */
          VertexBufferBase: () => (
            /* reexport safe */
            lt.VertexBufferBase
          ),
          /* harmony export */
          VideoOutputType: () => (
            /* reexport safe */
            Sr.VideoOutputType
          ),
          /* harmony export */
          ViewMoverKenBurnsStyle: () => (
            /* reexport safe */
            ur.ViewMoverKenBurnsStyle
          ),
          /* harmony export */
          VizLayer: () => (
            /* reexport safe */
            gr.VizLayer
          ),
          /* harmony export */
          VoColumn: () => (
            /* reexport safe */
            nr.VoColumn
          ),
          /* harmony export */
          VoRow: () => (
            /* reexport safe */
            nr.VoRow
          ),
          /* harmony export */
          VoTable: () => (
            /* reexport safe */
            nr.VoTable
          ),
          /* harmony export */
          VoTableLayer: () => (
            /* reexport safe */
            Lr.VoTableLayer
          ),
          /* harmony export */
          WWTControl: () => (
            /* reexport safe */
            Tr.WWTControl
          ),
          /* harmony export */
          WWTControlBuilder: () => (
            /* reexport safe */
            Tr.WWTControlBuilder
          ),
          /* harmony export */
          WWTElementEvent: () => (
            /* reexport safe */
            Tr.WWTElementEvent
          ),
          /* harmony export */
          WcsImage: () => (
            /* reexport safe */
            At.WcsImage
          ),
          /* harmony export */
          WebFile: () => (
            /* reexport safe */
            Nt.WebFile
          ),
          /* harmony export */
          Wtml: () => (
            /* reexport safe */
            Mr.Wtml
          ),
          /* harmony export */
          XmlTextWriter: () => (
            /* reexport safe */
            Ot.XmlTextWriter
          ),
          /* harmony export */
          Xyf: () => (
            /* reexport safe */
            dt.Xyf
          ),
          /* harmony export */
          set_tilePrepDevice: () => (
            /* reexport safe */
            Ct.set_tilePrepDevice
          ),
          /* harmony export */
          set_useGlVersion2: () => (
            /* reexport safe */
            Ct.set_useGlVersion2
          ),
          /* harmony export */
          ss: () => (
            /* reexport safe */
            e.ss
          )
          /* harmony export */
        });
        var e = __webpack_require__(
          /*! ./ss.js */
          "./esm/ss.js"
        ), r = __webpack_require__(
          /*! ./baseutil.js */
          "./esm/baseutil.js"
        ), n = __webpack_require__(
          /*! ./astrocalc/date.js */
          "./esm/astrocalc/date.js"
        ), s = __webpack_require__(
          /*! ./astrocalc/coordinate_transformation.js */
          "./esm/astrocalc/coordinate_transformation.js"
        ), a = __webpack_require__(
          /*! ./astrocalc/angular_separation.js */
          "./esm/astrocalc/angular_separation.js"
        ), t = __webpack_require__(
          /*! ./astrocalc/earth.js */
          "./esm/astrocalc/earth.js"
        ), l = __webpack_require__(
          /*! ./astrocalc/fk5.js */
          "./esm/astrocalc/fk5.js"
        ), o = __webpack_require__(
          /*! ./astrocalc/nutation.js */
          "./esm/astrocalc/nutation.js"
        ), c = __webpack_require__(
          /*! ./astrocalc/sun.js */
          "./esm/astrocalc/sun.js"
        ), _ = __webpack_require__(
          /*! ./astrocalc/mercury.js */
          "./esm/astrocalc/mercury.js"
        ), u = __webpack_require__(
          /*! ./astrocalc/venus.js */
          "./esm/astrocalc/venus.js"
        ), y = __webpack_require__(
          /*! ./astrocalc/mars.js */
          "./esm/astrocalc/mars.js"
        ), g = __webpack_require__(
          /*! ./astrocalc/jupiter.js */
          "./esm/astrocalc/jupiter.js"
        ), Ee = __webpack_require__(
          /*! ./astrocalc/saturn.js */
          "./esm/astrocalc/saturn.js"
        ), Ve = __webpack_require__(
          /*! ./astrocalc/uranus.js */
          "./esm/astrocalc/uranus.js"
        ), Me = __webpack_require__(
          /*! ./astrocalc/neptune.js */
          "./esm/astrocalc/neptune.js"
        ), B = __webpack_require__(
          /*! ./astrocalc/pluto.js */
          "./esm/astrocalc/pluto.js"
        ), Pe = __webpack_require__(
          /*! ./astrocalc/kepler.js */
          "./esm/astrocalc/kepler.js"
        ), k = __webpack_require__(
          /*! ./astrocalc/aberration.js */
          "./esm/astrocalc/aberration.js"
        ), b = __webpack_require__(
          /*! ./astrocalc/dynamical_time.js */
          "./esm/astrocalc/dynamical_time.js"
        ), Le = __webpack_require__(
          /*! ./astrocalc/ecliptical_elements.js */
          "./esm/astrocalc/ecliptical_elements.js"
        ), xe = __webpack_require__(
          /*! ./astrocalc/elements_planetary_orbit.js */
          "./esm/astrocalc/elements_planetary_orbit.js"
        ), ze = __webpack_require__(
          /*! ./astrocalc/elliptical.js */
          "./esm/astrocalc/elliptical.js"
        ), Se = __webpack_require__(
          /*! ./astrocalc/equation_of_time.js */
          "./esm/astrocalc/equation_of_time.js"
        ), Te = __webpack_require__(
          /*! ./astrocalc/galilean_moons.js */
          "./esm/astrocalc/galilean_moons.js"
        ), D = __webpack_require__(
          /*! ./astrocalc/globe.js */
          "./esm/astrocalc/globe.js"
        ), ke = __webpack_require__(
          /*! ./astrocalc/illuminated_fraction.js */
          "./esm/astrocalc/illuminated_fraction.js"
        ), Fe = __webpack_require__(
          /*! ./astrocalc/interpolate.js */
          "./esm/astrocalc/interpolate.js"
        ), He = __webpack_require__(
          /*! ./astrocalc/moon.js */
          "./esm/astrocalc/moon.js"
        ), We = __webpack_require__(
          /*! ./astrocalc/moon_illuminated_fraction.js */
          "./esm/astrocalc/moon_illuminated_fraction.js"
        ), Ke = __webpack_require__(
          /*! ./astrocalc/moon_nodes.js */
          "./esm/astrocalc/moon_nodes.js"
        ), $ = __webpack_require__(
          /*! ./astrocalc/moon_perigee_apogee.js */
          "./esm/astrocalc/moon_perigee_apogee.js"
        ), De = __webpack_require__(
          /*! ./astrocalc/moon_phases.js */
          "./esm/astrocalc/moon_phases.js"
        ), Re = __webpack_require__(
          /*! ./astrocalc/parallax.js */
          "./esm/astrocalc/parallax.js"
        ), Ie = __webpack_require__(
          /*! ./astrocalc/sidereal.js */
          "./esm/astrocalc/sidereal.js"
        ), O = __webpack_require__(
          /*! ./astrocalc/physical_jupiter.js */
          "./esm/astrocalc/physical_jupiter.js"
        ), Ue = __webpack_require__(
          /*! ./astrocalc/physical_mars.js */
          "./esm/astrocalc/physical_mars.js"
        ), $e = __webpack_require__(
          /*! ./astrocalc/physical_sun.js */
          "./esm/astrocalc/physical_sun.js"
        ), Ze = __webpack_require__(
          /*! ./astrocalc/precession.js */
          "./esm/astrocalc/precession.js"
        ), Qe = __webpack_require__(
          /*! ./astrocalc/rise_transit_set.js */
          "./esm/astrocalc/rise_transit_set.js"
        ), Ae = __webpack_require__(
          /*! ./astrocalc/saturn_rings.js */
          "./esm/astrocalc/saturn_rings.js"
        ), Ne = __webpack_require__(
          /*! ./astrocalc/stellar_magnitudes.js */
          "./esm/astrocalc/stellar_magnitudes.js"
        ), Be = __webpack_require__(
          /*! ./blend_state.js */
          "./esm/blend_state.js"
        ), Ge = __webpack_require__(
          /*! ./color.js */
          "./esm/color.js"
        ), Ye = __webpack_require__(
          /*! ./url_helpers.js */
          "./esm/url_helpers.js"
        ), je = __webpack_require__(
          /*! ./double3d.js */
          "./esm/double3d.js"
        ), ht = __webpack_require__(
          /*! ./util.js */
          "./esm/util.js"
        ), qe = __webpack_require__(
          /*! ./astrocalc.js */
          "./esm/astrocalc.js"
        ), lt = __webpack_require__(
          /*! ./graphics/gl_buffers.js */
          "./esm/graphics/gl_buffers.js"
        ), ft = __webpack_require__(
          /*! ./graphics/texture.js */
          "./esm/graphics/texture.js"
        ), _t = __webpack_require__(
          /*! ./graphics/tessellator.js */
          "./esm/graphics/tessellator.js"
        ), St = __webpack_require__(
          /*! ./graphics/shaders.js */
          "./esm/graphics/shaders.js"
        ), yt = __webpack_require__(
          /*! ./graphics/primitives3d.js */
          "./esm/graphics/primitives3d.js"
        ), Ct = __webpack_require__(
          /*! ./render_globals.js */
          "./esm/render_globals.js"
        ), Lt = __webpack_require__(
          /*! ./utilities/bitmap.js */
          "./esm/utilities/bitmap.js"
        ), Vt = __webpack_require__(
          /*! ./utilities/context_menu_strip.js */
          "./esm/utilities/context_menu_strip.js"
        ), Tt = __webpack_require__(
          /*! ./utilities/binary_reader.js */
          "./esm/utilities/binary_reader.js"
        ), xt = __webpack_require__(
          /*! ./utilities/simple_input.js */
          "./esm/utilities/simple_input.js"
        ), Ot = __webpack_require__(
          /*! ./utilities/xml_text_writer.js */
          "./esm/utilities/xml_text_writer.js"
        ), Pt = __webpack_require__(
          /*! ./coordinates.js */
          "./esm/coordinates.js"
        ), kt = __webpack_require__(
          /*! ./fast_math.js */
          "./esm/fast_math.js"
        ), zt = __webpack_require__(
          /*! ./healpix_tables.js */
          "./esm/healpix_tables.js"
        ), Bt = __webpack_require__(
          /*! ./healpix_utils.js */
          "./esm/healpix_utils.js"
        ), gt = __webpack_require__(
          /*! ./hploc.js */
          "./esm/hploc.js"
        ), rt = __webpack_require__(
          /*! ./fxyf.js */
          "./esm/fxyf.js"
        ), nt = __webpack_require__(
          /*! ./interfaces.js */
          "./esm/interfaces.js"
        ), bt = __webpack_require__(
          /*! ./annotation.js */
          "./esm/annotation.js"
        ), Et = __webpack_require__(
          /*! ./camera_parameters.js */
          "./esm/camera_parameters.js"
        ), Rt = __webpack_require__(
          /*! ./constellation_filter.js */
          "./esm/constellation_filter.js"
        ), $t = __webpack_require__(
          /*! ./fits_properties.js */
          "./esm/fits_properties.js"
        ), pt = __webpack_require__(
          /*! ./star.js */
          "./esm/star.js"
        ), Ft = __webpack_require__(
          /*! ./ui_tools.js */
          "./esm/ui_tools.js"
        ), Nt = __webpack_require__(
          /*! ./web_file.js */
          "./esm/web_file.js"
        ), Kt = __webpack_require__(
          /*! ./layers/color_map_container.js */
          "./esm/layers/color_map_container.js"
        ), At = __webpack_require__(
          /*! ./layers/wcs_image.js */
          "./esm/layers/wcs_image.js"
        ), Wt = __webpack_require__(
          /*! ./layers/fits_image.js */
          "./esm/layers/fits_image.js"
        ), vt = __webpack_require__(
          /*! ./layers/fits_image_js.js */
          "./esm/layers/fits_image_js.js"
        ), Xt = __webpack_require__(
          /*! ./layers/fits_image_tile.js */
          "./esm/layers/fits_image_tile.js"
        ), qt = __webpack_require__(
          /*! ./tile.js */
          "./esm/tile.js"
        ), ot = __webpack_require__(
          /*! ./render_triangle.js */
          "./esm/render_triangle.js"
        ), Ut = __webpack_require__(
          /*! ./equirectangular_tile.js */
          "./esm/equirectangular_tile.js"
        ), dt = __webpack_require__(
          /*! ./healpix_tile.js */
          "./esm/healpix_tile.js"
        ), Je = __webpack_require__(
          /*! ./mercator_tile.js */
          "./esm/mercator_tile.js"
        ), mt = __webpack_require__(
          /*! ./plot_tile.js */
          "./esm/plot_tile.js"
        ), wt = __webpack_require__(
          /*! ./tangent_tile.js */
          "./esm/tangent_tile.js"
        ), jt = __webpack_require__(
          /*! ./sky_image_tile.js */
          "./esm/sky_image_tile.js"
        ), Gt = __webpack_require__(
          /*! ./toast_tile.js */
          "./esm/toast_tile.js"
        ), Yt = __webpack_require__(
          /*! ./imageset.js */
          "./esm/imageset.js"
        ), Qt = __webpack_require__(
          /*! ./settings.js */
          "./esm/settings.js"
        ), tr = __webpack_require__(
          /*! ./tours/text_object.js */
          "./esm/tours/text_object.js"
        ), rr = __webpack_require__(
          /*! ./sky_text.js */
          "./esm/sky_text.js"
        ), er = __webpack_require__(
          /*! ./constellations.js */
          "./esm/constellations.js"
        ), sr = __webpack_require__(
          /*! ./space_time_controller.js */
          "./esm/space_time_controller.js"
        ), hr = __webpack_require__(
          /*! ./planets.js */
          "./esm/planets.js"
        ), lr = __webpack_require__(
          /*! ./place.js */
          "./esm/place.js"
        ), vr = __webpack_require__(
          /*! ./folder_up.js */
          "./esm/folder_up.js"
        ), fr = __webpack_require__(
          /*! ./grids.js */
          "./esm/grids.js"
        ), or = __webpack_require__(
          /*! ./kepler_vertex.js */
          "./esm/kepler_vertex.js"
        ), dr = __webpack_require__(
          /*! ./pointing.js */
          "./esm/pointing.js"
        ), cr = __webpack_require__(
          /*! ./tour.js */
          "./esm/tour.js"
        ), Sr = __webpack_require__(
          /*! ./video_output_type.js */
          "./esm/video_output_type.js"
        ), ur = __webpack_require__(
          /*! ./view_mover.js */
          "./esm/view_mover.js"
        ), gr = __webpack_require__(
          /*! ./viz_layer.js */
          "./esm/viz_layer.js"
        ), Cr = __webpack_require__(
          /*! ./utilities/color_picker.js */
          "./esm/utilities/color_picker.js"
        ), kr = __webpack_require__(
          /*! ./utilities/dialog.js */
          "./esm/utilities/dialog.js"
        ), Ar = __webpack_require__(
          /*! ./utilities/histogram.js */
          "./esm/utilities/histogram.js"
        ), Xe = __webpack_require__(
          /*! ./layers/layer.js */
          "./esm/layers/layer.js"
        ), ut = __webpack_require__(
          /*! ./layers/layer_ui.js */
          "./esm/layers/layer_ui.js"
        ), ct = __webpack_require__(
          /*! ./layers/great_circle_route_layer.js */
          "./esm/layers/great_circle_route_layer.js"
        ), Mt = __webpack_require__(
          /*! ./layers/grid_layer.js */
          "./esm/layers/grid_layer.js"
        ), Dt = __webpack_require__(
          /*! ./layers/imageset_layer.js */
          "./esm/layers/imageset_layer.js"
        ), It = __webpack_require__(
          /*! ./layers/object3d.js */
          "./esm/layers/object3d.js"
        ), Ht = __webpack_require__(
          /*! ./layers/orbit.js */
          "./esm/layers/orbit.js"
        ), Zt = __webpack_require__(
          /*! ./layers/reference_frame.js */
          "./esm/layers/reference_frame.js"
        ), ir = __webpack_require__(
          /*! ./layers/orbit_layer.js */
          "./esm/layers/orbit_layer.js"
        ), Jt = __webpack_require__(
          /*! ./layers/table.js */
          "./esm/layers/table.js"
        ), nr = __webpack_require__(
          /*! ./layers/vo_table.js */
          "./esm/layers/vo_table.js"
        ), _r = __webpack_require__(
          /*! ./tours/file_cabinet.js */
          "./esm/tours/file_cabinet.js"
        ), yr = __webpack_require__(
          /*! ./tours/overlay.js */
          "./esm/tours/overlay.js"
        ), br = __webpack_require__(
          /*! ./tours/selection.js */
          "./esm/tours/selection.js"
        ), Er = __webpack_require__(
          /*! ./tours/tour_stop.js */
          "./esm/tours/tour_stop.js"
        ), Rr = __webpack_require__(
          /*! ./tours/undo.js */
          "./esm/tours/undo.js"
        ), Pr = __webpack_require__(
          /*! ./tours/tour_editor.js */
          "./esm/tours/tour_editor.js"
        ), Or = __webpack_require__(
          /*! ./tours/tour_player.js */
          "./esm/tours/tour_player.js"
        ), Nr = __webpack_require__(
          /*! ./layers/iss_layer.js */
          "./esm/layers/iss_layer.js"
        ), xr = __webpack_require__(
          /*! ./layers/time_series_layer.js */
          "./esm/layers/time_series_layer.js"
        ), Br = __webpack_require__(
          /*! ./layers/spreadsheet_layer.js */
          "./esm/layers/spreadsheet_layer.js"
        ), Lr = __webpack_require__(
          /*! ./layers/vo_table_layer.js */
          "./esm/layers/vo_table_layer.js"
        ), Vr = __webpack_require__(
          /*! ./layers/layer_manager.js */
          "./esm/layers/layer_manager.js"
        );
        __webpack_require__(
          /*! ./layers/from_xml.js */
          "./esm/layers/from_xml.js"
        );
        var Ir = __webpack_require__(
          /*! ./layers/manager_dialogs.js */
          "./esm/layers/manager_dialogs.js"
        ), pr = __webpack_require__(
          /*! ./tours/tour_document.js */
          "./esm/tours/tour_document.js"
        ), mr = __webpack_require__(
          /*! ./tours/tour_edit.js */
          "./esm/tours/tour_edit.js"
        ), wr = __webpack_require__(
          /*! ./folder.js */
          "./esm/folder.js"
        ), Dr = __webpack_require__(
          /*! ./folder_browser.js */
          "./esm/folder_browser.js"
        ), Fr = __webpack_require__(
          /*! ./hips_properties.js */
          "./esm/hips_properties.js"
        ), Ur = __webpack_require__(
          /*! ./render_context.js */
          "./esm/render_context.js"
        ), $r = __webpack_require__(
          /*! ./script_interface.js */
          "./esm/script_interface.js"
        ), Tr = __webpack_require__(
          /*! ./wwt_control.js */
          "./esm/wwt_control.js"
        ), Mr = __webpack_require__(
          /*! ./wtml.js */
          "./esm/wtml.js"
        ), Wr = __webpack_require__(
          /*! ./typesystem.js */
          "./esm/typesystem.js"
        ), zr = __webpack_require__(
          /*! ./data_globals.js */
          "./esm/data_globals.js"
        );
        function jr() {
        }
        (0, Wr.registerType)("GFX", [jr, null, null]), Tr.WWTControl.exploreRoot = new wr.Folder(), Tr.WWTControl.singleton = new Tr.WWTControl(), Tr.WWTControl.singleton.renderContext = new Ur.RenderContext(), (0, zr.set_globalWWTControl)(Tr.WWTControl.singleton), (0, Ct.set_globalRenderContext)(Tr.WWTControl.singleton.renderContext), sr.SpaceTimeController._metaNow = e.ss.now(), sr.SpaceTimeController._now = e.ss.now(), sr.SpaceTimeController.last = sr.SpaceTimeController.get_metaNow(), sr.SpaceTimeController.updateClock(), or.KeplerVertex.baseDate = e.ss.truncate(sr.SpaceTimeController.utcToJulian(e.ss.now()));
      })(), __webpack_exports__;
    })()
  ));
})(src);
var srcExports = src.exports;
const require$$0 = /* @__PURE__ */ getAugmentedNamespace(vue_runtime_esmBundler);
(function(e, r) {
  (function(s, a) {
    e.exports = a(srcExports, require$$0);
  })(typeof self < "u" ? self : commonjsGlobal$1, (n, s) => (
    /******/
    (() => {
      var a = {
        /***/
        959: (
          /***/
          (c, _) => {
            _.Z = (u, y) => {
              const g = u.__vccOpts || u;
              for (const [Ee, Ve] of y)
                g[Ee] = Ve;
              return g;
            };
          }
        ),
        /***/
        415: (
          /***/
          (c) => {
            c.exports = n;
          }
        ),
        /***/
        203: (
          /***/
          (c) => {
            c.exports = s;
          }
        )
        /******/
      }, t = {};
      function l(c) {
        var _ = t[c];
        if (_ !== void 0)
          return _.exports;
        var u = t[c] = {
          /******/
          // no module.id needed
          /******/
          // no module.loaded needed
          /******/
          exports: {}
          /******/
        };
        return a[c](u, u.exports, l), u.exports;
      }
      l.d = (c, _) => {
        for (var u in _)
          l.o(_, u) && !l.o(c, u) && Object.defineProperty(c, u, { enumerable: !0, get: _[u] });
      }, l.g = function() {
        if (typeof globalThis == "object")
          return globalThis;
        try {
          return this || new Function("return this")();
        } catch {
          if (typeof window == "object")
            return window;
        }
      }(), l.o = (c, _) => Object.prototype.hasOwnProperty.call(c, _), l.r = (c) => {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(c, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(c, "__esModule", { value: !0 });
      }, l.p = "";
      var o = {};
      return (() => {
        if (l.r(o), l.d(o, {
          ImageSetLayerState: () => (
            /* reexport */
            hr
          ),
          ImagesetInfo: () => (
            /* reexport */
            er
          ),
          SpreadSheetLayerInfo: () => (
            /* reexport */
            sr
          ),
          WWTAwareComponent: () => (
            /* reexport */
            or
          ),
          WWTComponent: () => (
            /* reexport */
            kr
          ),
          engineStore: () => (
            /* reexport */
            fr
          ),
          wwtPinia: () => (
            /* reexport */
            Ar
          )
        }), typeof window < "u") {
          var c = window.document.currentScript, _ = c && c.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);
          _ && (l.p = _[1]);
        }
        var u = l(203), y = !1;
        /*!
         * pinia v2.1.6
         * (c) 2023 Eduardo San Martin Morote
         * @license MIT
         */
        let g;
        const Ee = (Xe) => g = Xe, Ve = (
          /* istanbul ignore next */
          Symbol()
        );
        function Me(Xe) {
          return Xe && typeof Xe == "object" && Object.prototype.toString.call(Xe) === "[object Object]" && typeof Xe.toJSON != "function";
        }
        var B;
        (function(Xe) {
          Xe.direct = "direct", Xe.patchObject = "patch object", Xe.patchFunction = "patch function";
        })(B || (B = {}));
        function Pe() {
          const Xe = (0, u.effectScope)(!0), ut = Xe.run(() => (0, u.ref)({}));
          let ct = [], Mt = [];
          const Dt = (0, u.markRaw)({
            install(It) {
              Ee(Dt), Dt._a = It, It.provide(Ve, Dt), It.config.globalProperties.$pinia = Dt, Mt.forEach((Ht) => ct.push(Ht)), Mt = [];
            },
            use(It) {
              return !this._a && !y ? Mt.push(It) : ct.push(It), this;
            },
            _p: ct,
            // it's actually undefined here
            // @ts-expect-error
            _a: null,
            _e: Xe,
            _s: /* @__PURE__ */ new Map(),
            state: ut
          });
          return Dt;
        }
        const k = () => {
        };
        function b(Xe, ut, ct, Mt = k) {
          Xe.push(ut);
          const Dt = () => {
            const It = Xe.indexOf(ut);
            It > -1 && (Xe.splice(It, 1), Mt());
          };
          return !ct && (0, u.getCurrentScope)() && (0, u.onScopeDispose)(Dt), Dt;
        }
        function Le(Xe, ...ut) {
          Xe.slice().forEach((ct) => {
            ct(...ut);
          });
        }
        const xe = (Xe) => Xe();
        function ze(Xe, ut) {
          Xe instanceof Map && ut instanceof Map && ut.forEach((ct, Mt) => Xe.set(Mt, ct)), Xe instanceof Set && ut instanceof Set && ut.forEach(Xe.add, Xe);
          for (const ct in ut) {
            if (!ut.hasOwnProperty(ct))
              continue;
            const Mt = ut[ct], Dt = Xe[ct];
            Me(Dt) && Me(Mt) && Xe.hasOwnProperty(ct) && !(0, u.isRef)(Mt) && !(0, u.isReactive)(Mt) ? Xe[ct] = ze(Dt, Mt) : Xe[ct] = Mt;
          }
          return Xe;
        }
        const Se = (
          /* istanbul ignore next */
          Symbol()
        );
        function Te(Xe) {
          return !Me(Xe) || !Xe.hasOwnProperty(Se);
        }
        const { assign: D } = Object;
        function ke(Xe) {
          return !!((0, u.isRef)(Xe) && Xe.effect);
        }
        function Fe(Xe, ut, ct, Mt) {
          const { state: Dt, actions: It, getters: Ht } = ut, Zt = ct.state.value[Xe];
          let ir;
          function Jt() {
            Zt || (ct.state.value[Xe] = Dt ? Dt() : {});
            const nr = (0, u.toRefs)(ct.state.value[Xe]);
            return D(nr, It, Object.keys(Ht || {}).reduce((_r, yr) => (_r[yr] = (0, u.markRaw)((0, u.computed)(() => {
              Ee(ct);
              const br = ct._s.get(Xe);
              return Ht[yr].call(br, br);
            })), _r), {}));
          }
          return ir = He(Xe, Jt, ut, ct, Mt, !0), ir;
        }
        function He(Xe, ut, ct = {}, Mt, Dt, It) {
          let Ht;
          const Zt = D({ actions: {} }, ct), ir = {
            deep: !0
            // flush: 'post',
          };
          let Jt, nr, _r = [], yr = [], br;
          const Er = Mt.state.value[Xe];
          !It && !Er && (Mt.state.value[Xe] = {}), (0, u.ref)({});
          let Rr;
          function Pr(pr) {
            let mr;
            Jt = nr = !1, typeof pr == "function" ? (pr(Mt.state.value[Xe]), mr = {
              type: B.patchFunction,
              storeId: Xe,
              events: br
            }) : (ze(Mt.state.value[Xe], pr), mr = {
              type: B.patchObject,
              payload: pr,
              storeId: Xe,
              events: br
            });
            const wr = Rr = Symbol();
            (0, u.nextTick)().then(() => {
              Rr === wr && (Jt = !0);
            }), nr = !0, Le(_r, mr, Mt.state.value[Xe]);
          }
          const Or = It ? function() {
            const { state: mr } = ct, wr = mr ? mr() : {};
            this.$patch((Dr) => {
              D(Dr, wr);
            });
          } : (
            /* istanbul ignore next */
            k
          );
          function Nr() {
            Ht.stop(), _r = [], yr = [], Mt._s.delete(Xe);
          }
          function xr(pr, mr) {
            return function() {
              Ee(Mt);
              const wr = Array.from(arguments), Dr = [], Fr = [];
              function Ur(Mr) {
                Dr.push(Mr);
              }
              function $r(Mr) {
                Fr.push(Mr);
              }
              Le(yr, {
                args: wr,
                name: pr,
                store: Lr,
                after: Ur,
                onError: $r
              });
              let Tr;
              try {
                Tr = mr.apply(this && this.$id === Xe ? this : Lr, wr);
              } catch (Mr) {
                throw Le(Fr, Mr), Mr;
              }
              return Tr instanceof Promise ? Tr.then((Mr) => (Le(Dr, Mr), Mr)).catch((Mr) => (Le(Fr, Mr), Promise.reject(Mr))) : (Le(Dr, Tr), Tr);
            };
          }
          const Br = {
            _p: Mt,
            // _s: scope,
            $id: Xe,
            $onAction: b.bind(null, yr),
            $patch: Pr,
            $reset: Or,
            $subscribe(pr, mr = {}) {
              const wr = b(_r, pr, mr.detached, () => Dr()), Dr = Ht.run(() => (0, u.watch)(() => Mt.state.value[Xe], (Fr) => {
                (mr.flush === "sync" ? nr : Jt) && pr({
                  storeId: Xe,
                  type: B.direct,
                  events: br
                }, Fr);
              }, D({}, ir, mr)));
              return wr;
            },
            $dispose: Nr
          }, Lr = (0, u.reactive)(Br);
          Mt._s.set(Xe, Lr);
          const Vr = Mt._a && Mt._a.runWithContext || xe, Ir = Mt._e.run(() => (Ht = (0, u.effectScope)(), Vr(() => Ht.run(ut))));
          for (const pr in Ir) {
            const mr = Ir[pr];
            if ((0, u.isRef)(mr) && !ke(mr) || (0, u.isReactive)(mr))
              It || (Er && Te(mr) && ((0, u.isRef)(mr) ? mr.value = Er[pr] : ze(mr, Er[pr])), Mt.state.value[Xe][pr] = mr);
            else if (typeof mr == "function") {
              const wr = xr(pr, mr);
              Ir[pr] = wr, Zt.actions[pr] = mr;
            }
          }
          return D(Lr, Ir), D((0, u.toRaw)(Lr), Ir), Object.defineProperty(Lr, "$state", {
            get: () => Mt.state.value[Xe],
            set: (pr) => {
              Pr((mr) => {
                D(mr, pr);
              });
            }
          }), Mt._p.forEach((pr) => {
            D(Lr, Ht.run(() => pr({
              store: Lr,
              app: Mt._a,
              pinia: Mt,
              options: Zt
            })));
          }), Er && It && ct.hydrate && ct.hydrate(Lr.$state, Er), Jt = !0, nr = !0, Lr;
        }
        function We(Xe, ut, ct) {
          let Mt, Dt;
          const It = typeof ut == "function";
          typeof Xe == "string" ? (Mt = Xe, Dt = It ? ct : ut) : (Dt = Xe, Mt = Xe.id);
          function Ht(Zt, ir) {
            const Jt = (0, u.hasInjectionContext)();
            return Zt = // in test mode, ignore the argument provided as we can always retrieve a
            // pinia instance with getActivePinia()
            Zt || (Jt ? (0, u.inject)(Ve, null) : null), Zt && Ee(Zt), Zt = g, Zt._s.has(Mt) || (It ? He(Mt, ut, Dt, Zt) : Fe(Mt, Dt, Zt)), Zt._s.get(Mt);
          }
          return Ht.$id = Mt, Ht;
        }
        function Ke(Xe, ut) {
          return Array.isArray(ut) ? ut.reduce((ct, Mt) => (ct[Mt] = function() {
            return Xe(this.$pinia)[Mt];
          }, ct), {}) : Object.keys(ut).reduce((ct, Mt) => (ct[Mt] = function() {
            const Dt = Xe(this.$pinia), It = ut[Mt];
            return typeof It == "function" ? It.call(this, Dt) : Dt[It];
          }, ct), {});
        }
        function $(Xe, ut) {
          return Array.isArray(ut) ? ut.reduce((ct, Mt) => (ct[Mt] = function(...Dt) {
            return Xe(this.$pinia)[Mt](...Dt);
          }, ct), {}) : Object.keys(ut).reduce((ct, Mt) => (ct[Mt] = function(...Dt) {
            return Xe(this.$pinia)[ut[Mt]](...Dt);
          }, ct), {});
        }
        var De = function(Xe, ut) {
          return De = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(ct, Mt) {
            ct.__proto__ = Mt;
          } || function(ct, Mt) {
            for (var Dt in Mt)
              Object.prototype.hasOwnProperty.call(Mt, Dt) && (ct[Dt] = Mt[Dt]);
          }, De(Xe, ut);
        };
        function Re(Xe, ut) {
          if (typeof ut != "function" && ut !== null)
            throw new TypeError("Class extends value " + String(ut) + " is not a constructor or null");
          De(Xe, ut);
          function ct() {
            this.constructor = Xe;
          }
          Xe.prototype = ut === null ? Object.create(ut) : (ct.prototype = ut.prototype, new ct());
        }
        var Ie = function() {
          return Ie = Object.assign || function(ut) {
            for (var ct, Mt = 1, Dt = arguments.length; Mt < Dt; Mt++) {
              ct = arguments[Mt];
              for (var It in ct)
                Object.prototype.hasOwnProperty.call(ct, It) && (ut[It] = ct[It]);
            }
            return ut;
          }, Ie.apply(this, arguments);
        };
        function O(Xe, ut, ct, Mt) {
          function Dt(It) {
            return It instanceof ct ? It : new ct(function(Ht) {
              Ht(It);
            });
          }
          return new (ct || (ct = Promise))(function(It, Ht) {
            function Zt(nr) {
              try {
                Jt(Mt.next(nr));
              } catch (_r) {
                Ht(_r);
              }
            }
            function ir(nr) {
              try {
                Jt(Mt.throw(nr));
              } catch (_r) {
                Ht(_r);
              }
            }
            function Jt(nr) {
              nr.done ? It(nr.value) : Dt(nr.value).then(Zt, ir);
            }
            Jt((Mt = Mt.apply(Xe, ut || [])).next());
          });
        }
        function Ue(Xe, ut) {
          var ct = { label: 0, sent: function() {
            if (It[0] & 1)
              throw It[1];
            return It[1];
          }, trys: [], ops: [] }, Mt, Dt, It, Ht;
          return Ht = { next: Zt(0), throw: Zt(1), return: Zt(2) }, typeof Symbol == "function" && (Ht[Symbol.iterator] = function() {
            return this;
          }), Ht;
          function Zt(Jt) {
            return function(nr) {
              return ir([Jt, nr]);
            };
          }
          function ir(Jt) {
            if (Mt)
              throw new TypeError("Generator is already executing.");
            for (; Ht && (Ht = 0, Jt[0] && (ct = 0)), ct; )
              try {
                if (Mt = 1, Dt && (It = Jt[0] & 2 ? Dt.return : Jt[0] ? Dt.throw || ((It = Dt.return) && It.call(Dt), 0) : Dt.next) && !(It = It.call(Dt, Jt[1])).done)
                  return It;
                switch (Dt = 0, It && (Jt = [Jt[0] & 2, It.value]), Jt[0]) {
                  case 0:
                  case 1:
                    It = Jt;
                    break;
                  case 4:
                    return ct.label++, { value: Jt[1], done: !1 };
                  case 5:
                    ct.label++, Dt = Jt[1], Jt = [0];
                    continue;
                  case 7:
                    Jt = ct.ops.pop(), ct.trys.pop();
                    continue;
                  default:
                    if (It = ct.trys, !(It = It.length > 0 && It[It.length - 1]) && (Jt[0] === 6 || Jt[0] === 2)) {
                      ct = 0;
                      continue;
                    }
                    if (Jt[0] === 3 && (!It || Jt[1] > It[0] && Jt[1] < It[3])) {
                      ct.label = Jt[1];
                      break;
                    }
                    if (Jt[0] === 6 && ct.label < It[1]) {
                      ct.label = It[1], It = Jt;
                      break;
                    }
                    if (It && ct.label < It[2]) {
                      ct.label = It[2], ct.ops.push(Jt);
                      break;
                    }
                    It[2] && ct.ops.pop(), ct.trys.pop();
                    continue;
                }
                Jt = ut.call(Xe, ct);
              } catch (nr) {
                Jt = [6, nr], Dt = 0;
              } finally {
                Mt = It = 0;
              }
            if (Jt[0] & 5)
              throw Jt[1];
            return { value: Jt[0] ? Jt[1] : void 0, done: !0 };
          }
        }
        function $e(Xe) {
          var ut = typeof Symbol == "function" && Symbol.iterator, ct = ut && Xe[ut], Mt = 0;
          if (ct)
            return ct.call(Xe);
          if (Xe && typeof Xe.length == "number")
            return {
              next: function() {
                return Xe && Mt >= Xe.length && (Xe = void 0), { value: Xe && Xe[Mt++], done: !Xe };
              }
            };
          throw new TypeError(ut ? "Object is not iterable." : "Symbol.iterator is not defined.");
        }
        function Ze(Xe, ut) {
          var ct = typeof Symbol == "function" && Xe[Symbol.iterator];
          if (!ct)
            return Xe;
          var Mt = ct.call(Xe), Dt, It = [], Ht;
          try {
            for (; (ut === void 0 || ut-- > 0) && !(Dt = Mt.next()).done; )
              It.push(Dt.value);
          } catch (Zt) {
            Ht = { error: Zt };
          } finally {
            try {
              Dt && !Dt.done && (ct = Mt.return) && ct.call(Mt);
            } finally {
              if (Ht)
                throw Ht.error;
            }
          }
          return It;
        }
        typeof SuppressedError == "function" && SuppressedError;
        var Qe = 3.14159265358979, Ae = 180 / Qe, Ne = Qe / 180, Be = 12 / Qe, Ge = Qe / 12, Ye = 12 / 180, je;
        (function(Xe) {
          Xe[Xe.depth = 0] = "depth", Xe[Xe.altitude = 1] = "altitude", Xe[Xe.distance = 2] = "distance", Xe[Xe.seaLevel = 3] = "seaLevel", Xe[Xe.terrain = 4] = "terrain";
        })(je || (je = {}));
        var ht;
        (function(Xe) {
          Xe[Xe.meters = 1] = "meters", Xe[Xe.feet = 2] = "feet", Xe[Xe.inches = 3] = "inches", Xe[Xe.miles = 4] = "miles", Xe[Xe.kilometers = 5] = "kilometers", Xe[Xe.astronomicalUnits = 6] = "astronomicalUnits", Xe[Xe.lightYears = 7] = "lightYears", Xe[Xe.parsecs = 8] = "parsecs", Xe[Xe.megaParsecs = 9] = "megaParsecs", Xe[Xe.custom = 10] = "custom";
        })(ht || (ht = {}));
        var qe;
        (function(Xe) {
          Xe[Xe.gamma = 0] = "gamma", Xe[Xe.xRay = 1] = "xRay", Xe[Xe.ultraviolet = 2] = "ultraviolet", Xe[Xe.visible = 3] = "visible", Xe[Xe.hydrogenAlpha = 4] = "hydrogenAlpha", Xe[Xe.IR = 4] = "IR", Xe[Xe.microwave = 5] = "microwave", Xe[Xe.radio = 6] = "radio", Xe[Xe.visibleNight = 6] = "visibleNight";
        })(qe || (qe = {}));
        var lt;
        (function(Xe) {
          Xe[Xe.star = 1] = "star", Xe[Xe.supernova = 2] = "supernova", Xe[Xe.blackHole = 4] = "blackHole", Xe[Xe.neutronStar = 8] = "neutronStar", Xe[Xe.doubleStar = 16] = "doubleStar", Xe[Xe.multipleStars = 32] = "multipleStars", Xe[Xe.asterism = 64] = "asterism", Xe[Xe.constellation = 128] = "constellation", Xe[Xe.openCluster = 256] = "openCluster", Xe[Xe.globularCluster = 512] = "globularCluster", Xe[Xe.nebulousCluster = 1024] = "nebulousCluster", Xe[Xe.nebula = 2048] = "nebula", Xe[Xe.emissionNebula = 4096] = "emissionNebula", Xe[Xe.planetaryNebula = 8192] = "planetaryNebula", Xe[Xe.reflectionNebula = 16384] = "reflectionNebula", Xe[Xe.darkNebula = 32768] = "darkNebula", Xe[Xe.giantMolecularCloud = 65536] = "giantMolecularCloud", Xe[Xe.supernovaRemnant = 131072] = "supernovaRemnant", Xe[Xe.interstellarDust = 262144] = "interstellarDust", Xe[Xe.quasar = 524288] = "quasar", Xe[Xe.galaxy = 1048576] = "galaxy", Xe[Xe.spiralGalaxy = 2097152] = "spiralGalaxy", Xe[Xe.irregularGalaxy = 4194304] = "irregularGalaxy", Xe[Xe.ellipticalGalaxy = 8388608] = "ellipticalGalaxy", Xe[Xe.knot = 16777216] = "knot", Xe[Xe.plateDefect = 33554432] = "plateDefect", Xe[Xe.clusterOfGalaxies = 67108864] = "clusterOfGalaxies", Xe[Xe.otherNGC = 134217728] = "otherNGC", Xe[Xe.unidentified = 268435456] = "unidentified", Xe[Xe.solarSystem = 536870912] = "solarSystem", Xe[Xe.unfiltered = 1073741823] = "unfiltered", Xe[Xe.stellar = 63] = "stellar", Xe[Xe.stellarGroupings = 2032] = "stellarGroupings", Xe[Xe.nebulae = 523264] = "nebulae", Xe[Xe.galactic = 133693440] = "galactic", Xe[Xe.other = 436207616] = "other";
        })(lt || (lt = {}));
        var ft;
        (function(Xe) {
          Xe[Xe.spherical = 0] = "spherical", Xe[Xe.rectangular = 1] = "rectangular", Xe[Xe.orbital = 2] = "orbital";
        })(ft || (ft = {}));
        var _t;
        (function(Xe) {
          Xe[Xe.byteT = 0] = "byteT", Xe[Xe.int16T = 1] = "int16T", Xe[Xe.int32T = 2] = "int32T", Xe[Xe.floatT = 3] = "floatT", Xe[Xe.doubleT = 4] = "doubleT", Xe[Xe.none = 5] = "none";
        })(_t || (_t = {}));
        var St;
        (function(Xe) {
          Xe[Xe.fadeIn = 1] = "fadeIn", Xe[Xe.fadeOut = 2] = "fadeOut", Xe[Xe.both = 3] = "both", Xe[Xe.none = 4] = "none";
        })(St || (St = {}));
        var yt;
        (function(Xe) {
          Xe[Xe.explorer = 0] = "explorer", Xe[Xe.tour = 1] = "tour", Xe[Xe.search = 2] = "search", Xe[Xe.constellation = 3] = "constellation", Xe[Xe.view = 4] = "view", Xe[Xe.goTo = 5] = "goTo", Xe[Xe.community = 6] = "community", Xe[Xe.context = 7] = "context", Xe[Xe.voTable = 8] = "voTable", Xe[Xe.imageStack = 9] = "imageStack";
        })(yt || (yt = {}));
        var Ct;
        (function(Xe) {
          Xe[Xe.interval = 0] = "interval", Xe[Xe.conditionalGet = 1] = "conditionalGet", Xe[Xe.viewChange = 2] = "viewChange";
        })(Ct || (Ct = {}));
        var Lt;
        (function(Xe) {
          Xe[Xe.earth = 0] = "earth", Xe[Xe.planet = 1] = "planet", Xe[Xe.sky = 2] = "sky", Xe[Xe.panorama = 3] = "panorama";
        })(Lt || (Lt = {}));
        var Vt;
        (function(Xe) {
          Xe[Xe.earth = 0] = "earth", Xe[Xe.planet = 1] = "planet", Xe[Xe.sky = 2] = "sky", Xe[Xe.panorama = 3] = "panorama", Xe[Xe.solarSystem = 4] = "solarSystem", Xe[Xe.sandbox = 5] = "sandbox";
        })(Vt || (Vt = {}));
        var Tt;
        (function(Xe) {
          Xe[Xe.screen = 0] = "screen", Xe[Xe.world = 1] = "world";
        })(Tt || (Tt = {}));
        var xt;
        (function(Xe) {
          Xe[Xe.gaussian = 0] = "gaussian", Xe[Xe.point = 1] = "point", Xe[Xe.circle = 2] = "circle", Xe[Xe.square = 3] = "square", Xe[Xe.pushPin = 4] = "pushPin", Xe[Xe.custom = 5] = "custom";
        })(xt || (xt = {}));
        var Ot;
        (function(Xe) {
          Xe[Xe.linear = 0] = "linear", Xe[Xe.power = 1] = "power", Xe[Xe.log = 2] = "log", Xe[Xe.constant = 3] = "constant", Xe[Xe.stellarMagnitude = 4] = "stellarMagnitude";
        })(Ot || (Ot = {}));
        var Pt;
        (function(Xe) {
          Xe[Xe.mercator = 0] = "mercator", Xe[Xe.equirectangular = 1] = "equirectangular", Xe[Xe.tangent = 2] = "tangent", Xe[Xe.tan = 2] = "tan", Xe[Xe.toast = 3] = "toast", Xe[Xe.spherical = 4] = "spherical", Xe[Xe.skyImage = 5] = "skyImage", Xe[Xe.plotted = 6] = "plotted";
        })(Pt || (Pt = {}));
        var kt;
        (function(Xe) {
          Xe[Xe.hours = 0] = "hours", Xe[Xe.degrees = 1] = "degrees";
        })(kt || (kt = {}));
        var zt;
        (function(Xe) {
          Xe[Xe.sky = 0] = "sky", Xe[Xe.ecliptic = 1] = "ecliptic", Xe[Xe.galactic = 2] = "galactic", Xe[Xe.sun = 3] = "sun", Xe[Xe.mercury = 4] = "mercury", Xe[Xe.venus = 5] = "venus", Xe[Xe.earth = 6] = "earth", Xe[Xe.mars = 7] = "mars", Xe[Xe.jupiter = 8] = "jupiter", Xe[Xe.saturn = 9] = "saturn", Xe[Xe.uranus = 10] = "uranus", Xe[Xe.neptune = 11] = "neptune", Xe[Xe.pluto = 12] = "pluto", Xe[Xe.moon = 13] = "moon", Xe[Xe.io = 14] = "io", Xe[Xe.europa = 15] = "europa", Xe[Xe.ganymede = 16] = "ganymede", Xe[Xe.callisto = 17] = "callisto", Xe[Xe.custom = 18] = "custom", Xe[Xe.identity = 19] = "identity", Xe[Xe.sandbox = 20] = "sandbox";
        })(zt || (zt = {}));
        var Bt;
        (function(Xe) {
          Xe[Xe.fixedSherical = 0] = "fixedSherical", Xe[Xe.orbital = 1] = "orbital", Xe[Xe.trajectory = 2] = "trajectory", Xe[Xe.synodic = 3] = "synodic";
        })(Bt || (Bt = {}));
        var gt;
        (function(Xe) {
          Xe[Xe.linear = 0] = "linear", Xe[Xe.log = 1] = "log", Xe[Xe.power = 2] = "power", Xe[Xe.squareRoot = 3] = "squareRoot", Xe[Xe.histogramEqualization = 4] = "histogramEqualization";
        })(gt || (gt = {}));
        var rt;
        (function(Xe) {
          Xe[Xe.sun = 0] = "sun", Xe[Xe.mercury = 1] = "mercury", Xe[Xe.venus = 2] = "venus", Xe[Xe.mars = 3] = "mars", Xe[Xe.jupiter = 4] = "jupiter", Xe[Xe.saturn = 5] = "saturn", Xe[Xe.uranus = 6] = "uranus", Xe[Xe.neptune = 7] = "neptune", Xe[Xe.pluto = 8] = "pluto", Xe[Xe.moon = 9] = "moon", Xe[Xe.io = 10] = "io", Xe[Xe.europa = 11] = "europa", Xe[Xe.ganymede = 12] = "ganymede", Xe[Xe.callisto = 13] = "callisto", Xe[Xe.ioShadow = 14] = "ioShadow", Xe[Xe.europaShadow = 15] = "europaShadow", Xe[Xe.ganymedeShadow = 16] = "ganymedeShadow", Xe[Xe.callistoShadow = 17] = "callistoShadow", Xe[Xe.sunEclipsed = 18] = "sunEclipsed", Xe[Xe.earth = 19] = "earth", Xe[Xe.custom = 20] = "custom", Xe[Xe.undefined = 65536] = "undefined";
        })(rt || (rt = {}));
        var nt = l(415), bt = [
          "astronomical",
          "color",
          "enabled",
          "fadeSpan",
          "name",
          "opacity",
          "opened",
          "referenceFrame",
          "version"
        ];
        function Et(Xe, ut) {
          var ct, Mt;
          try {
            for (var Dt = $e(bt), It = Dt.next(); !It.done; It = Dt.next()) {
              var Ht = It.value;
              ut["set_" + Ht](Xe["get_" + Ht]());
            }
          } catch (Zt) {
            ct = { error: Zt };
          } finally {
            try {
              It && !It.done && (Mt = Dt.return) && Mt.call(Dt);
            } finally {
              if (ct)
                throw ct.error;
            }
          }
        }
        var Rt = (
          /** @class */
          function() {
            function Xe(ut) {
              Et(ut, this);
            }
            return Xe.prototype.get_astronomical = function() {
              return this.astronomical;
            }, Xe.prototype.set_astronomical = function(ut) {
              return this.astronomical = ut, ut;
            }, Xe.prototype.get_color = function() {
              return this.color;
            }, Xe.prototype.set_color = function(ut) {
              return this.color = ut, ut;
            }, Xe.prototype.get_enabled = function() {
              return this.enabled;
            }, Xe.prototype.set_enabled = function(ut) {
              return this.enabled = ut, ut;
            }, Xe.prototype.get_endTime = function() {
              return this.endTime;
            }, Xe.prototype.set_endTime = function(ut) {
              return this.endTime = ut, ut;
            }, Xe.prototype.get_fadeSpan = function() {
              return this.fadeSpan;
            }, Xe.prototype.set_fadeSpan = function(ut) {
              return this.fadeSpan = ut, ut;
            }, Xe.prototype.get_fadeType = function() {
              return this.fadeType;
            }, Xe.prototype.set_fadeType = function(ut) {
              return this.fadeType = ut, ut;
            }, Xe.prototype.get_name = function() {
              return this.name;
            }, Xe.prototype.set_name = function(ut) {
              return this.name = ut, ut;
            }, Xe.prototype.get_opacity = function() {
              return this.opacity;
            }, Xe.prototype.set_opacity = function(ut) {
              return this.opacity = ut, ut;
            }, Xe.prototype.get_opened = function() {
              return this.opened;
            }, Xe.prototype.set_opened = function(ut) {
              return this.opened = ut, ut;
            }, Xe.prototype.get_referenceFrame = function() {
              return this.referenceFrame;
            }, Xe.prototype.set_referenceFrame = function(ut) {
              return this.referenceFrame = ut, ut;
            }, Xe.prototype.get_startTime = function() {
              return this.startTime;
            }, Xe.prototype.set_startTime = function(ut) {
              return this.startTime = ut, ut;
            }, Xe.prototype.get_version = function() {
              return this.version;
            }, Xe.prototype.set_version = function(ut) {
              return this.version = ut, ut;
            }, Xe;
          }()
        ), $t = [
          "colorMapperName",
          "overrideDefaultLayer"
        ];
        bt.concat($t);
        function pt(Xe, ut) {
          var ct = "set_" + ut[0], Mt = ut[1];
          Xe[ct](Mt);
        }
        function Ft(Xe, ut) {
          var ct, Mt;
          Et(Xe, ut);
          try {
            for (var Dt = $e($t), It = Dt.next(); !It.done; It = Dt.next()) {
              var Ht = It.value;
              ut["set_" + Ht](Xe["get_" + Ht]());
            }
          } catch (Zt) {
            ct = { error: Zt };
          } finally {
            try {
              It && !It.done && (Mt = Dt.return) && Mt.call(Dt);
            } finally {
              if (ct)
                throw ct.error;
            }
          }
        }
        var Nt = (
          /** @class */
          function(Xe) {
            Re(ut, Xe);
            function ut(ct) {
              var Mt = (
                // Here we redundantly copy the generic Layer settings, but TypeScript
                // requires the super() call. Oh well.
                Xe.call(this, ct) || this
              );
              return Ft(ct, Mt), Mt;
            }
            return ut.prototype.get_colorMapperName = function() {
              return this.colorMapperName;
            }, ut.prototype.set_colorMapperName = function(ct) {
              return this.colorMapperName = ct, ct;
            }, ut.prototype.get_overrideDefaultLayer = function() {
              return this.overrideDefaultLayer;
            }, ut.prototype.set_overrideDefaultLayer = function(ct) {
              return this.overrideDefaultLayer = ct, ct;
            }, ut;
          }(Rt)
        ), Kt = [
          "altColumn",
          "altType",
          "altUnit",
          "barChartBitmask",
          "beginRange",
          "cartesianCustomScale",
          "cartesianScale",
          "colorMapColumn",
          "colorMapperName",
          "coordinatesType",
          "decay",
          "dynamicColor",
          "dynamicData",
          "endDateColumn",
          "endRange",
          "geometryColumn",
          "hyperlinkColumn",
          "hyperlinkFormat",
          "latColumn",
          "lngColumn",
          "markerColumn",
          "markerIndex",
          "markerScale",
          "nameColumn",
          "normalizeColorMap",
          "normalizeColorMapMax",
          "normalizeColorMapMin",
          "normalizeSize",
          "normalizeSizeClip",
          "normalizeSizeMax",
          "normalizeSizeMin",
          "plotType",
          "pointScaleType",
          "raUnits",
          "scaleFactor",
          "showFarSide",
          "sizeColumn",
          "startDateColumn",
          "timeSeries",
          "xAxisColumn",
          "xAxisReverse",
          "yAxisColumn",
          "yAxisReverse",
          "zAxisColumn",
          "zAxisReverse"
        ];
        bt.concat(Kt);
        function At(Xe, ut) {
          var ct = "set_" + ut[0], Mt = ut[1];
          Xe[ct](Mt);
        }
        function Wt(Xe, ut) {
          var ct, Mt;
          Et(Xe, ut);
          try {
            for (var Dt = $e(Kt), It = Dt.next(); !It.done; It = Dt.next()) {
              var Ht = It.value;
              ut["set_" + Ht](Xe["get_" + Ht]());
            }
          } catch (Zt) {
            ct = { error: Zt };
          } finally {
            try {
              It && !It.done && (Mt = Dt.return) && Mt.call(Dt);
            } finally {
              if (ct)
                throw ct.error;
            }
          }
        }
        var vt = (
          /** @class */
          function(Xe) {
            Re(ut, Xe);
            function ut(ct) {
              var Mt = (
                // Here we redundantly copy the generic Layer settings, but TypeScript
                // requires the super() call. Oh well.
                Xe.call(this, ct) || this
              );
              return Wt(ct, Mt), Mt;
            }
            return ut.prototype.get_altColumn = function() {
              return this.altColumn;
            }, ut.prototype.set_altColumn = function(ct) {
              return this.altColumn = ct, ct;
            }, ut.prototype.get_altType = function() {
              return this.altType;
            }, ut.prototype.set_altType = function(ct) {
              return this.altType = ct, ct;
            }, ut.prototype.get_altUnit = function() {
              return this.altUnit;
            }, ut.prototype.set_altUnit = function(ct) {
              return this.altUnit = ct, ct;
            }, ut.prototype.get_barChartBitmask = function() {
              return this.barChartBitmask;
            }, ut.prototype.set_barChartBitmask = function(ct) {
              return this.barChartBitmask = ct, ct;
            }, ut.prototype.get_beginRange = function() {
              return this.beginRange;
            }, ut.prototype.set_beginRange = function(ct) {
              return this.beginRange = ct, ct;
            }, ut.prototype.get_cartesianCustomScale = function() {
              return this.cartesianCustomScale;
            }, ut.prototype.set_cartesianCustomScale = function(ct) {
              return this.cartesianCustomScale = ct, ct;
            }, ut.prototype.get_cartesianScale = function() {
              return this.cartesianScale;
            }, ut.prototype.set_cartesianScale = function(ct) {
              return this.cartesianScale = ct, ct;
            }, ut.prototype.get_colorMapColumn = function() {
              return this.colorMapColumn;
            }, ut.prototype.set_colorMapColumn = function(ct) {
              return this.colorMapColumn = ct, ct;
            }, ut.prototype.get_colorMapperName = function() {
              return this.colorMapperName;
            }, ut.prototype.set_colorMapperName = function(ct) {
              return this.colorMapperName = ct, ct;
            }, ut.prototype.get_coordinatesType = function() {
              return this.coordinatesType;
            }, ut.prototype.set_coordinatesType = function(ct) {
              return this.coordinatesType = ct, ct;
            }, ut.prototype.get_decay = function() {
              return this.decay;
            }, ut.prototype.set_decay = function(ct) {
              return this.decay = ct, ct;
            }, ut.prototype.get_dynamicColor = function() {
              return this.dynamicColor;
            }, ut.prototype.set_dynamicColor = function(ct) {
              return this.dynamicColor = ct, ct;
            }, ut.prototype.get_dynamicData = function() {
              return this.dynamicData;
            }, ut.prototype.set_dynamicData = function(ct) {
              return this.dynamicData = ct, ct;
            }, ut.prototype.get_endDateColumn = function() {
              return this.endDateColumn;
            }, ut.prototype.set_endDateColumn = function(ct) {
              return this.endDateColumn = ct, ct;
            }, ut.prototype.get_endRange = function() {
              return this.endRange;
            }, ut.prototype.set_endRange = function(ct) {
              return this.endRange = ct, ct;
            }, ut.prototype.get_geometryColumn = function() {
              return this.geometryColumn;
            }, ut.prototype.set_geometryColumn = function(ct) {
              return this.geometryColumn = ct, ct;
            }, ut.prototype.get_hyperlinkColumn = function() {
              return this.hyperlinkColumn;
            }, ut.prototype.set_hyperlinkColumn = function(ct) {
              return this.hyperlinkColumn = ct, ct;
            }, ut.prototype.get_hyperlinkFormat = function() {
              return this.hyperlinkFormat;
            }, ut.prototype.set_hyperlinkFormat = function(ct) {
              return this.hyperlinkFormat = ct, ct;
            }, ut.prototype.get_latColumn = function() {
              return this.latColumn;
            }, ut.prototype.set_latColumn = function(ct) {
              return this.latColumn = ct, ct;
            }, ut.prototype.get_lngColumn = function() {
              return this.lngColumn;
            }, ut.prototype.set_lngColumn = function(ct) {
              return this.lngColumn = ct, ct;
            }, ut.prototype.get_markerColumn = function() {
              return this.markerColumn;
            }, ut.prototype.set_markerColumn = function(ct) {
              return this.markerColumn = ct, ct;
            }, ut.prototype.get_markerIndex = function() {
              return this.markerIndex;
            }, ut.prototype.set_markerIndex = function(ct) {
              return this.markerIndex = ct, ct;
            }, ut.prototype.get_markerScale = function() {
              return this.markerScale;
            }, ut.prototype.set_markerScale = function(ct) {
              return this.markerScale = ct, ct;
            }, ut.prototype.get_nameColumn = function() {
              return this.nameColumn;
            }, ut.prototype.set_nameColumn = function(ct) {
              return this.nameColumn = ct, ct;
            }, ut.prototype.get_normalizeColorMap = function() {
              return this.normalizeColorMap;
            }, ut.prototype.set_normalizeColorMap = function(ct) {
              return this.normalizeColorMap = ct, ct;
            }, ut.prototype.get_normalizeColorMapMax = function() {
              return this.normalizeColorMapMax;
            }, ut.prototype.set_normalizeColorMapMax = function(ct) {
              return this.normalizeColorMapMax = ct, ct;
            }, ut.prototype.get_normalizeColorMapMin = function() {
              return this.normalizeColorMapMin;
            }, ut.prototype.set_normalizeColorMapMin = function(ct) {
              return this.normalizeColorMapMin = ct, ct;
            }, ut.prototype.get_normalizeSize = function() {
              return this.normalizeSize;
            }, ut.prototype.set_normalizeSize = function(ct) {
              return this.normalizeSize = ct, ct;
            }, ut.prototype.get_normalizeSizeClip = function() {
              return this.normalizeSizeClip;
            }, ut.prototype.set_normalizeSizeClip = function(ct) {
              return this.normalizeSizeClip = ct, ct;
            }, ut.prototype.get_normalizeSizeMax = function() {
              return this.normalizeSizeMax;
            }, ut.prototype.set_normalizeSizeMax = function(ct) {
              return this.normalizeSizeMax = ct, ct;
            }, ut.prototype.get_normalizeSizeMin = function() {
              return this.normalizeSizeMin;
            }, ut.prototype.set_normalizeSizeMin = function(ct) {
              return this.normalizeSizeMin = ct, ct;
            }, ut.prototype.get_plotType = function() {
              return this.plotType;
            }, ut.prototype.set_plotType = function(ct) {
              return this.plotType = ct, ct;
            }, ut.prototype.get_pointScaleType = function() {
              return this.pointScaleType;
            }, ut.prototype.set_pointScaleType = function(ct) {
              return this.pointScaleType = ct, ct;
            }, ut.prototype.get_raUnits = function() {
              return this.raUnits;
            }, ut.prototype.set_raUnits = function(ct) {
              return this.raUnits = ct, ct;
            }, ut.prototype.get_scaleFactor = function() {
              return this.scaleFactor;
            }, ut.prototype.set_scaleFactor = function(ct) {
              return this.scaleFactor = ct, ct;
            }, ut.prototype.get_showFarSide = function() {
              return this.showFarSide;
            }, ut.prototype.set_showFarSide = function(ct) {
              return this.showFarSide = ct, ct;
            }, ut.prototype.get_sizeColumn = function() {
              return this.sizeColumn;
            }, ut.prototype.set_sizeColumn = function(ct) {
              return this.sizeColumn = ct, ct;
            }, ut.prototype.get_startDateColumn = function() {
              return this.startDateColumn;
            }, ut.prototype.set_startDateColumn = function(ct) {
              return this.startDateColumn = ct, ct;
            }, ut.prototype.get_timeSeries = function() {
              return this.timeSeries;
            }, ut.prototype.set_timeSeries = function(ct) {
              return this.timeSeries = ct, ct;
            }, ut.prototype.get_xAxisColumn = function() {
              return this.xAxisColumn;
            }, ut.prototype.set_xAxisColumn = function(ct) {
              return this.xAxisColumn = ct, ct;
            }, ut.prototype.get_xAxisReverse = function() {
              return this.xAxisReverse;
            }, ut.prototype.set_xAxisReverse = function(ct) {
              return this.xAxisReverse = ct, ct;
            }, ut.prototype.get_yAxisColumn = function() {
              return this.yAxisColumn;
            }, ut.prototype.set_yAxisColumn = function(ct) {
              return this.yAxisColumn = ct, ct;
            }, ut.prototype.get_yAxisReverse = function() {
              return this.yAxisReverse;
            }, ut.prototype.set_yAxisReverse = function(ct) {
              return this.yAxisReverse = ct, ct;
            }, ut.prototype.get_zAxisColumn = function() {
              return this.zAxisColumn;
            }, ut.prototype.set_zAxisColumn = function(ct) {
              return this.zAxisColumn = ct, ct;
            }, ut.prototype.get_zAxisReverse = function() {
              return this.zAxisReverse;
            }, ut.prototype.set_zAxisReverse = function(ct) {
              return this.zAxisReverse = ct, ct;
            }, ut;
          }(Rt)
        ), Xt = [
          "id",
          "label",
          "opacity",
          "showHoverLabel",
          "tag"
        ];
        function qt(Xe, ut) {
          var ct, Mt;
          try {
            for (var Dt = $e(Xt), It = Dt.next(); !It.done; It = Dt.next()) {
              var Ht = It.value;
              ut["set_" + Ht](Xe["get_" + Ht]());
            }
          } catch (Zt) {
            ct = { error: Zt };
          } finally {
            try {
              It && !It.done && (Mt = Dt.return) && Mt.call(Dt);
            } finally {
              if (ct)
                throw ct.error;
            }
          }
        }
        var ot = (
          /** @class */
          function() {
            function Xe(ut) {
              qt(ut, this);
            }
            return Xe.prototype.get_id = function() {
              return this.id;
            }, Xe.prototype.set_id = function(ut) {
              return this.id = ut, ut;
            }, Xe.prototype.get_label = function() {
              return this.label;
            }, Xe.prototype.set_label = function(ut) {
              return this.label = ut, ut;
            }, Xe.prototype.get_opacity = function() {
              return this.opacity;
            }, Xe.prototype.set_opacity = function(ut) {
              return this.opacity = ut, ut;
            }, Xe.prototype.get_showHoverLabel = function() {
              return this.showHoverLabel;
            }, Xe.prototype.set_showHoverLabel = function(ut) {
              return this.showHoverLabel = ut, ut;
            }, Xe.prototype.get_tag = function() {
              return this.tag;
            }, Xe.prototype.set_tag = function(ut) {
              return this.tag = ut, ut;
            }, Xe;
          }()
        ), Ut = [
          "fill",
          "fillColor",
          "lineColor",
          "lineWidth",
          "radius",
          "skyRelative"
        ];
        Xt.concat(Ut);
        function dt(Xe, ut) {
          var ct, Mt;
          qt(Xe, ut);
          try {
            for (var Dt = $e(Ut), It = Dt.next(); !It.done; It = Dt.next()) {
              var Ht = It.value;
              ut["set_" + Ht](Xe["get_" + Ht]());
            }
          } catch (Zt) {
            ct = { error: Zt };
          } finally {
            try {
              It && !It.done && (Mt = Dt.return) && Mt.call(Dt);
            } finally {
              if (ct)
                throw ct.error;
            }
          }
        }
        /** @class */
        (function(Xe) {
          Re(ut, Xe);
          function ut(ct) {
            var Mt = Xe.call(this, ct) || this;
            return dt(ct, Mt), Mt;
          }
          return ut.prototype.get_fill = function() {
            return this.fill;
          }, ut.prototype.set_fill = function(ct) {
            return this.fill = ct, ct;
          }, ut.prototype.get_fillColor = function() {
            return this.fillColor;
          }, ut.prototype.set_fillColor = function(ct) {
            return this.fillColor = ct, ct;
          }, ut.prototype.get_lineColor = function() {
            return this.lineColor;
          }, ut.prototype.set_lineColor = function(ct) {
            return this.lineColor = ct, ct;
          }, ut.prototype.get_lineWidth = function() {
            return this.lineWidth;
          }, ut.prototype.set_lineWidth = function(ct) {
            return this.lineWidth = ct, ct;
          }, ut.prototype.get_radius = function() {
            return this.radius;
          }, ut.prototype.set_radius = function(ct) {
            return this.radius = ct, ct;
          }, ut.prototype.get_skyRelative = function() {
            return this.skyRelative;
          }, ut.prototype.set_skyRelative = function(ct) {
            return this.skyRelative = ct, ct;
          }, ut;
        })(ot);
        var Je = [
          "fill",
          "fillColor",
          "lineColor",
          "lineWidth"
        ];
        Xt.concat(Je);
        function mt(Xe, ut) {
          var ct, Mt;
          qt(Xe, ut);
          try {
            for (var Dt = $e(Je), It = Dt.next(); !It.done; It = Dt.next()) {
              var Ht = It.value;
              ut["set_" + Ht](Xe["get_" + Ht]());
            }
          } catch (Zt) {
            ct = { error: Zt };
          } finally {
            try {
              It && !It.done && (Mt = Dt.return) && Mt.call(Dt);
            } finally {
              if (ct)
                throw ct.error;
            }
          }
        }
        /** @class */
        (function(Xe) {
          Re(ut, Xe);
          function ut(ct) {
            var Mt = Xe.call(this, ct) || this;
            return mt(ct, Mt), Mt;
          }
          return ut.prototype.get_fill = function() {
            return this.fill;
          }, ut.prototype.set_fill = function(ct) {
            return this.fill = ct, ct;
          }, ut.prototype.get_fillColor = function() {
            return this.fillColor;
          }, ut.prototype.set_fillColor = function(ct) {
            return this.fillColor = ct, ct;
          }, ut.prototype.get_lineColor = function() {
            return this.lineColor;
          }, ut.prototype.set_lineColor = function(ct) {
            return this.lineColor = ct, ct;
          }, ut.prototype.get_lineWidth = function() {
            return this.lineWidth;
          }, ut.prototype.set_lineWidth = function(ct) {
            return this.lineWidth = ct, ct;
          }, ut;
        })(ot);
        var wt = [
          "lineColor",
          "lineWidth"
        ];
        Xt.concat(wt);
        function jt(Xe, ut) {
          var ct, Mt;
          qt(Xe, ut);
          try {
            for (var Dt = $e(wt), It = Dt.next(); !It.done; It = Dt.next()) {
              var Ht = It.value;
              ut["set_" + Ht](Xe["get_" + Ht]());
            }
          } catch (Zt) {
            ct = { error: Zt };
          } finally {
            try {
              It && !It.done && (Mt = Dt.return) && Mt.call(Dt);
            } finally {
              if (ct)
                throw ct.error;
            }
          }
        }
        /** @class */
        (function(Xe) {
          Re(ut, Xe);
          function ut(ct) {
            var Mt = Xe.call(this, ct) || this;
            return jt(ct, Mt), Mt;
          }
          return ut.prototype.get_lineColor = function() {
            return this.lineColor;
          }, ut.prototype.set_lineColor = function(ct) {
            return this.lineColor = ct, ct;
          }, ut.prototype.get_lineWidth = function() {
            return this.lineWidth;
          }, ut.prototype.set_lineWidth = function(ct) {
            return this.lineWidth = ct, ct;
          }, ut;
        })(ot);
        var Gt = [
          "altColumn",
          "altType",
          "altUnit",
          "autoUpdate",
          "beginRange",
          "cartesianCustomScale",
          "cartesianScale",
          "colorMapColumn",
          "coordinatesType",
          "dataSourceUrl",
          "decay",
          "dynamicData",
          "endDateColumn",
          "endRange",
          "hyperlinkColumn",
          "hyperlinkFormat",
          "latColumn",
          "lngColumn",
          "markerColumn",
          "markerIndex",
          "markerScale",
          "nameColumn",
          "plotType",
          "pointScaleType",
          "raUnits",
          "scaleFactor",
          "showFarSide",
          "sizeColumn",
          "startDateColumn",
          "timeSeries",
          "xAxisColumn",
          "xAxisReverse",
          "yAxisColumn",
          "yAxisReverse",
          "zAxisColumn",
          "zAxisReverse"
        ];
        bt.concat(Gt);
        function Yt(Xe, ut) {
          var ct, Mt;
          Et(Xe, ut);
          try {
            for (var Dt = $e(Gt), It = Dt.next(); !It.done; It = Dt.next()) {
              var Ht = It.value;
              ut["set_" + Ht](Xe["get_" + Ht]());
            }
          } catch (Zt) {
            ct = { error: Zt };
          } finally {
            try {
              It && !It.done && (Mt = Dt.return) && Mt.call(Dt);
            } finally {
              if (ct)
                throw ct.error;
            }
          }
        }
        /** @class */
        (function(Xe) {
          Re(ut, Xe);
          function ut(ct) {
            var Mt = (
              // Here we redundantly copy the generic Layer settings, but TypeScript
              // requires the super() call. Oh well.
              Xe.call(this, ct) || this
            );
            return Yt(ct, Mt), Mt;
          }
          return ut.prototype.get_altColumn = function() {
            return this.altColumn;
          }, ut.prototype.set_altColumn = function(ct) {
            return this.altColumn = ct, ct;
          }, ut.prototype.get_altType = function() {
            return this.altType;
          }, ut.prototype.set_altType = function(ct) {
            return this.altType = ct, ct;
          }, ut.prototype.get_altUnit = function() {
            return this.altUnit;
          }, ut.prototype.set_altUnit = function(ct) {
            return this.altUnit = ct, ct;
          }, ut.prototype.get_autoUpdate = function() {
            return this.autoUpdate;
          }, ut.prototype.set_autoUpdate = function(ct) {
            return this.autoUpdate = ct, ct;
          }, ut.prototype.get_beginRange = function() {
            return this.beginRange;
          }, ut.prototype.set_beginRange = function(ct) {
            return this.beginRange = ct, ct;
          }, ut.prototype.get_cartesianCustomScale = function() {
            return this.cartesianCustomScale;
          }, ut.prototype.set_cartesianCustomScale = function(ct) {
            return this.cartesianCustomScale = ct, ct;
          }, ut.prototype.get_cartesianScale = function() {
            return this.cartesianScale;
          }, ut.prototype.set_cartesianScale = function(ct) {
            return this.cartesianScale = ct, ct;
          }, ut.prototype.get_colorMapColumn = function() {
            return this.colorMapColumn;
          }, ut.prototype.set_colorMapColumn = function(ct) {
            return this.colorMapColumn = ct, ct;
          }, ut.prototype.get_coordinatesType = function() {
            return this.coordinatesType;
          }, ut.prototype.set_coordinatesType = function(ct) {
            return this.coordinatesType = ct, ct;
          }, ut.prototype.get_dataSourceUrl = function() {
            return this.dataSourceUrl;
          }, ut.prototype.set_dataSourceUrl = function(ct) {
            return this.dataSourceUrl = ct, ct;
          }, ut.prototype.get_decay = function() {
            return this.decay;
          }, ut.prototype.set_decay = function(ct) {
            return this.decay = ct, ct;
          }, ut.prototype.get_dynamicData = function() {
            return this.dynamicData;
          }, ut.prototype.set_dynamicData = function(ct) {
            return this.dynamicData = ct, ct;
          }, ut.prototype.get_endDateColumn = function() {
            return this.endDateColumn;
          }, ut.prototype.set_endDateColumn = function(ct) {
            return this.endDateColumn = ct, ct;
          }, ut.prototype.get_endRange = function() {
            return this.endRange;
          }, ut.prototype.set_endRange = function(ct) {
            return this.endRange = ct, ct;
          }, ut.prototype.get_hyperlinkColumn = function() {
            return this.hyperlinkColumn;
          }, ut.prototype.set_hyperlinkColumn = function(ct) {
            return this.hyperlinkColumn = ct, ct;
          }, ut.prototype.get_hyperlinkFormat = function() {
            return this.hyperlinkFormat;
          }, ut.prototype.set_hyperlinkFormat = function(ct) {
            return this.hyperlinkFormat = ct, ct;
          }, ut.prototype.get_latColumn = function() {
            return this.latColumn;
          }, ut.prototype.set_latColumn = function(ct) {
            return this.latColumn = ct, ct;
          }, ut.prototype.get_lngColumn = function() {
            return this.lngColumn;
          }, ut.prototype.set_lngColumn = function(ct) {
            return this.lngColumn = ct, ct;
          }, ut.prototype.get_markerColumn = function() {
            return this.markerColumn;
          }, ut.prototype.set_markerColumn = function(ct) {
            return this.markerColumn = ct, ct;
          }, ut.prototype.get_markerIndex = function() {
            return this.markerIndex;
          }, ut.prototype.set_markerIndex = function(ct) {
            return this.markerIndex = ct, ct;
          }, ut.prototype.get_markerScale = function() {
            return this.markerScale;
          }, ut.prototype.set_markerScale = function(ct) {
            return this.markerScale = ct, ct;
          }, ut.prototype.get_nameColumn = function() {
            return this.nameColumn;
          }, ut.prototype.set_nameColumn = function(ct) {
            return this.nameColumn = ct, ct;
          }, ut.prototype.get_plotType = function() {
            return this.plotType;
          }, ut.prototype.set_plotType = function(ct) {
            return this.plotType = ct, ct;
          }, ut.prototype.get_pointScaleType = function() {
            return this.pointScaleType;
          }, ut.prototype.set_pointScaleType = function(ct) {
            return this.pointScaleType = ct, ct;
          }, ut.prototype.get_raUnits = function() {
            return this.raUnits;
          }, ut.prototype.set_raUnits = function(ct) {
            return this.raUnits = ct, ct;
          }, ut.prototype.get_scaleFactor = function() {
            return this.scaleFactor;
          }, ut.prototype.set_scaleFactor = function(ct) {
            return this.scaleFactor = ct, ct;
          }, ut.prototype.get_showFarSide = function() {
            return this.showFarSide;
          }, ut.prototype.set_showFarSide = function(ct) {
            return this.showFarSide = ct, ct;
          }, ut.prototype.get_sizeColumn = function() {
            return this.sizeColumn;
          }, ut.prototype.set_sizeColumn = function(ct) {
            return this.sizeColumn = ct, ct;
          }, ut.prototype.get_startDateColumn = function() {
            return this.startDateColumn;
          }, ut.prototype.set_startDateColumn = function(ct) {
            return this.startDateColumn = ct, ct;
          }, ut.prototype.get_timeSeries = function() {
            return this.timeSeries;
          }, ut.prototype.set_timeSeries = function(ct) {
            return this.timeSeries = ct, ct;
          }, ut.prototype.get_xAxisColumn = function() {
            return this.xAxisColumn;
          }, ut.prototype.set_xAxisColumn = function(ct) {
            return this.xAxisColumn = ct, ct;
          }, ut.prototype.get_xAxisReverse = function() {
            return this.xAxisReverse;
          }, ut.prototype.set_xAxisReverse = function(ct) {
            return this.xAxisReverse = ct, ct;
          }, ut.prototype.get_yAxisColumn = function() {
            return this.yAxisColumn;
          }, ut.prototype.set_yAxisColumn = function(ct) {
            return this.yAxisColumn = ct, ct;
          }, ut.prototype.get_yAxisReverse = function() {
            return this.yAxisReverse;
          }, ut.prototype.set_yAxisReverse = function(ct) {
            return this.yAxisReverse = ct, ct;
          }, ut.prototype.get_zAxisColumn = function() {
            return this.zAxisColumn;
          }, ut.prototype.set_zAxisColumn = function(ct) {
            return this.zAxisColumn = ct, ct;
          }, ut.prototype.get_zAxisReverse = function() {
            return this.zAxisReverse;
          }, ut.prototype.set_zAxisReverse = function(ct) {
            return this.zAxisReverse = ct, ct;
          }, ut;
        })(Rt);
        var Qt = (
          /** @class */
          /* @__PURE__ */ function() {
            function Xe(ut, ct, Mt) {
              this.payload = ut, this.resolve = ct, this.reject = Mt;
            }
            return Xe;
          }()
        ), tr = (
          /** @class */
          function() {
            function Xe(ut) {
              ut === void 0 && (ut = {});
              var ct = this;
              this.readyPromises = [], this.readyFired = !1, this.arrivePromises = [], this.arriveSeqnum = 0, this.collectionLoadedPromises = [], this.collectionRequests = /* @__PURE__ */ new Map(), this.tourReadyPromises = [], this.tourReadySeqnum = 0, this.tourEndedCallback = null;
              var Mt = new nt.WWTControlBuilder(ut.elId || "wwt");
              if (ut.startInternalRenderLoop !== void 0 && Mt.startRenderLoop(ut.startInternalRenderLoop), ut.freestandingAssetBaseurl !== void 0 && Mt.freestandingMode(ut.freestandingAssetBaseurl), ut.startLatDeg !== void 0 && ut.startLngDeg !== void 0) {
                var Dt = ut.startZoomDeg || 360;
                Mt.initialView(ut.startLatDeg, ut.startLngDeg, Dt);
              }
              ut.startMode !== void 0 && Mt.initialMode(ut.startMode), this.si = Mt.create(), this.ctl = nt.WWTControl.singleton, this.lm = nt.LayerManager, this.stc = nt.SpaceTimeController, this.applySetting(["showConstellationBoundries", !1]), this.applySetting(["showConstellationFigures", !1]), this.applySetting(["showConstellationSelection", !1]), this.applySetting(["showCrosshairs", !1]), this.si.add_ready(function(It) {
                var Ht, Zt;
                try {
                  for (var ir = $e(ct.readyPromises), Jt = ir.next(); !Jt.done; Jt = ir.next()) {
                    var nr = Jt.value;
                    nr.resolve();
                  }
                } catch (_r) {
                  Ht = { error: _r };
                } finally {
                  try {
                    Jt && !Jt.done && (Zt = ir.return) && Zt.call(ir);
                  } finally {
                    if (Ht)
                      throw Ht.error;
                  }
                }
                ct.readyFired = !0, ct.readyPromises = [];
              }), this.si.add_arrived(function(It, Ht) {
                var Zt, ir;
                try {
                  for (var Jt = $e(ct.arrivePromises), nr = Jt.next(); !nr.done; nr = Jt.next()) {
                    var _r = nr.value;
                    _r.payload < ct.arriveSeqnum ? _r.reject("superseded") : _r.resolve();
                  }
                } catch (yr) {
                  Zt = { error: yr };
                } finally {
                  try {
                    nr && !nr.done && (ir = Jt.return) && ir.call(Jt);
                  } finally {
                    if (Zt)
                      throw Zt.error;
                  }
                }
                ct.arrivePromises = [];
              }), this.si.add_tourReady(function(It) {
                var Ht, Zt;
                try {
                  for (var ir = $e(ct.tourReadyPromises), Jt = ir.next(); !Jt.done; Jt = ir.next()) {
                    var nr = Jt.value;
                    nr.payload < ct.tourReadySeqnum ? nr.reject("superseded") : nr.resolve();
                  }
                } catch (_r) {
                  Ht = { error: _r };
                } finally {
                  try {
                    Jt && !Jt.done && (Zt = ir.return) && Zt.call(ir);
                  } finally {
                    if (Ht)
                      throw Ht.error;
                  }
                }
                ct.tourReadyPromises = [];
              }), nt.TourPlayer.add_tourEnded(function(It) {
                var Ht = ct.getActiveTourPlayer();
                Ht !== null && ct.tourEndedCallback !== null && ct.tourEndedCallback(Ht);
              });
            }
            return Xe.prototype.waitForReady = function() {
              return O(this, void 0, void 0, function() {
                var ut = this;
                return Ue(this, function(ct) {
                  return [2, new Promise(function(Mt, Dt) {
                    ut.readyFired ? Mt() : ut.readyPromises.push(new Qt(null, Mt, Dt));
                  })];
                });
              });
            }, Xe.prototype.makeArrivePromise = function(ut) {
              var ct, Mt, Dt = this;
              this.arriveSeqnum += 1;
              var It = this.arriveSeqnum;
              try {
                for (var Ht = $e(this.arrivePromises), Zt = Ht.next(); !Zt.done; Zt = Ht.next()) {
                  var ir = Zt.value;
                  ir.reject("superseded");
                }
              } catch (Jt) {
                ct = { error: Jt };
              } finally {
                try {
                  Zt && !Zt.done && (Mt = Ht.return) && Mt.call(Ht);
                } finally {
                  if (ct)
                    throw ct.error;
                }
              }
              return this.arrivePromises = [], new Promise(function(Jt, nr) {
                Dt.arriveSeqnum > It ? nr("superseded") : ut ? Jt() : Dt.arrivePromises.push(new Qt(It, Jt, nr));
              });
            }, Xe.prototype.gotoRADecZoom = function(ut, ct, Mt, Dt, It) {
              return O(this, void 0, void 0, function() {
                return Ue(this, function(Ht) {
                  return this.ctl.gotoRADecZoom(ut * Be, ct * Ae, Mt, Dt, It), [2, this.makeArrivePromise(Dt)];
                });
              });
            }, Xe.prototype.timeToRADecZoom = function(ut, ct, Mt, Dt) {
              var It = this.ctl.timeToRADecZoom(ut * Be, ct * Ae, Mt, Dt);
              return It;
            }, Xe.prototype.gotoTarget = function(ut) {
              return O(this, void 0, void 0, function() {
                return Ue(this, function(ct) {
                  return this.ctl.gotoTarget(ut.place, ut.noZoom, ut.instant, ut.trackObject), [2, this.makeArrivePromise(ut.instant)];
                });
              });
            }, Xe.prototype.addImagesetToRepository = function(ut) {
              return nt.WWTControl.addImageSetToRepository(ut);
            }, Xe.prototype.loadImageCollection = function(ut, ct) {
              return O(this, void 0, void 0, function() {
                var Mt, Dt, It = this;
                return Ue(this, function(Ht) {
                  return Mt = this.collectionRequests.get(ut), Mt != null ? [2, Promise.resolve(Mt)] : (Mt === void 0 && (this.collectionRequests.set(ut, null), Dt = { f: null }, ct === void 0 && (ct = !1), Dt.f = nt.Wtml.getWtmlFile(ut, function() {
                    var Zt = Dt.f;
                    It.collectionRequests.set(ut, Zt), It.collectionLoadedPromises = It.collectionLoadedPromises.filter(function(ir) {
                      return ir.payload == ut ? (ir.resolve(Zt), !1) : !0;
                    });
                  }, ct)), [2, new Promise(function(Zt, ir) {
                    var Jt = It.collectionRequests.get(ut);
                    Jt != null ? Zt(Jt) : It.collectionLoadedPromises.push(new Qt(ut, Zt, ir));
                  })]);
                });
              });
            }, Xe.prototype.addImageSetLayer = function(ut) {
              return O(this, void 0, void 0, function() {
                var ct = this;
                return Ue(this, function(Mt) {
                  return [2, new Promise(function(Dt, It) {
                    ct.si.addImageSetLayer(ut.url, ut.mode, ut.name, ut.goto, function(Ht) {
                      Dt(Ht);
                    });
                  })];
                });
              });
            }, Xe.prototype.setImageSetLayerOrder = function(ut) {
              this.si.setImageSetLayerOrder(ut.id, ut.order);
            }, Xe.prototype.stretchFitsLayer = function(ut) {
              var ct = this.lm.get_layerList()[ut.id];
              if (ct && ct instanceof nt.ImageSetLayer) {
                ct.setImageScalePhysical(ut.stretch, ut.vmin, ut.vmax);
                var Mt = ct.getFitsImage();
                Mt !== null && (ct.get_imageSet().get_fitsProperties().transparentBlack = !1);
              }
            }, Xe.prototype.setFitsLayerColormap = function(ut) {
              var ct = this.lm.get_layerList()[ut.id];
              ct && ct instanceof nt.ImageSetLayer && ct.set_colorMapperName(ut.name);
            }, Xe.prototype.applyFitsLayerSettings = function(ut) {
              var ct, Mt, Dt = this.lm.get_layerList()[ut.id];
              if (Dt && Dt instanceof nt.ImageSetLayer)
                try {
                  for (var It = $e(ut.settings), Ht = It.next(); !Ht.done; Ht = It.next()) {
                    var Zt = Ht.value;
                    pt(Dt, Zt);
                  }
                } catch (ir) {
                  ct = { error: ir };
                } finally {
                  try {
                    Ht && !Ht.done && (Mt = It.return) && Mt.call(It);
                  } finally {
                    if (ct)
                      throw ct.error;
                  }
                }
            }, Xe.prototype.updateTableLayer = function(ut) {
              var ct = this.lm.get_layerList()[ut.id];
              ct && ct instanceof nt.SpreadSheetLayer && ct.updateData(ut.dataCsv, !0, !0, !0);
            }, Xe.prototype.applyTableLayerSettings = function(ut) {
              var ct, Mt, Dt = this.lm.get_layerList()[ut.id];
              if (Dt && Dt instanceof nt.SpreadSheetLayer)
                try {
                  for (var It = $e(ut.settings), Ht = It.next(); !Ht.done; Ht = It.next()) {
                    var Zt = Ht.value;
                    At(Dt, Zt);
                  }
                } catch (ir) {
                  ct = { error: ir };
                } finally {
                  try {
                    Ht && !Ht.done && (Mt = It.return) && Mt.call(It);
                  } finally {
                    if (ct)
                      throw ct.error;
                  }
                }
            }, Xe.prototype.addCatalogHipsByName = function(ut) {
              return O(this, void 0, void 0, function() {
                var ct = this;
                return Ue(this, function(Mt) {
                  return [2, new Promise(function(Dt, It) {
                    var Ht = ct.ctl.getImagesetByName(ut.name);
                    Ht === null ? It() : ct.ctl.renderContext.addCatalogHips(Ht, function() {
                      Dt(Ht);
                    });
                  })];
                });
              });
            }, Xe.prototype.getCatalogHipsDataInView = function(ut) {
              return O(this, void 0, void 0, function() {
                var ct = this;
                return Ue(this, function(Mt) {
                  return [2, new Promise(function(Dt, It) {
                    ct.ctl.renderContext.getCatalogHipsDataInView(ut.imageset, ut.limit, function(Ht) {
                      Dt(Ht);
                    });
                  })];
                });
              });
            }, Xe.prototype.applySetting = function(ut) {
              var ct = "set_" + ut[0], Mt = ut[1];
              this.si.settings[ct](Mt);
            }, Xe.prototype.setBackgroundImageByName = function(ut) {
              this.ctl.setBackgroundImageByName(ut);
            }, Xe.prototype.setForegroundImageByName = function(ut) {
              this.ctl.setForegroundImageByName(ut);
            }, Xe.prototype.setForegroundOpacity = function(ut) {
              this.si.setForegroundOpacity(ut);
            }, Xe.prototype.setupForImageset = function(ut) {
              var ct;
              ut.background ? ct = ut.background : ct = this.ctl.getDefaultImageset(ut.foreground.get_dataSetType(), ut.foreground.get_bandPass());
              var Mt;
              ut.foreground.get_levels() > 0 ? Mt = ut.foreground.get_baseTileDegrees() : Mt = ut.foreground.get_baseTileDegrees() * ut.foreground.get_offsetY() * 2;
              var Dt = new nt.Place();
              Dt.set_type(ut.foreground.get_dataSetType()), Dt.set_backgroundImageset(ct), Dt.set_studyImageset(ut.foreground);
              var It = !1;
              switch (ut.foreground.get_dataSetType()) {
                case Vt.sky:
                  Mt == 180 ? It = !0 : (Dt.set_RA(ut.foreground.get_centerX() * Ye), Dt.set_dec(ut.foreground.get_centerY()), Dt.set_zoomLevel(Mt * 6));
                  break;
                case Vt.earth:
                case Vt.planet:
                  Dt.set_zoomLevel(120), Mt != 180 && (Dt.set_lng(ut.foreground.get_centerX()), Dt.set_lat(ut.foreground.get_centerY()));
                  break;
                default:
                  Dt.set_zoomLevel(360);
                  break;
              }
              this.ctl.renderContext.set_backgroundImageset(ct), this.ctl.gotoTarget(
                Dt,
                It,
                !0,
                // instant
                !0
                // trackObject
              );
            }, Xe.prototype.getActiveTourPlayer = function() {
              return this.ctl.uiController === null ? null : this.ctl.uiController instanceof nt.TourPlayer ? this.ctl.uiController : null;
            }, Xe.prototype.getIsTourPlaying = function(ut) {
              return nt.TourPlayer.get_playing();
            }, Xe.prototype.loadTour = function(ut) {
              return O(this, void 0, void 0, function() {
                var ct, Mt, Dt, It, Ht, Zt, ir = this;
                return Ue(this, function(Jt) {
                  this.ctl.loadTour(ut), this.tourReadySeqnum += 1, ct = this.tourReadySeqnum;
                  try {
                    for (Mt = $e(this.tourReadyPromises), Dt = Mt.next(); !Dt.done; Dt = Mt.next())
                      It = Dt.value, It.reject("superseded");
                  } catch (nr) {
                    Ht = { error: nr };
                  } finally {
                    try {
                      Dt && !Dt.done && (Zt = Mt.return) && Zt.call(Mt);
                    } finally {
                      if (Ht)
                        throw Ht.error;
                    }
                  }
                  return this.tourReadyPromises = [], [2, new Promise(function(nr, _r) {
                    ir.tourReadySeqnum > ct ? _r("superseded") : ir.tourReadyPromises.push(new Qt(ct, nr, _r));
                  })];
                });
              });
            }, Xe.prototype.loadAndPlayTour = function(ut) {
              return O(this, void 0, void 0, function() {
                var ct, Mt, Dt, It, Ht, Zt, ir = this;
                return Ue(this, function(Jt) {
                  this.ctl.playTour(ut), this.tourReadySeqnum += 1, ct = this.tourReadySeqnum;
                  try {
                    for (Mt = $e(this.tourReadyPromises), Dt = Mt.next(); !Dt.done; Dt = Mt.next())
                      It = Dt.value, It.reject("superseded");
                  } catch (nr) {
                    Ht = { error: nr };
                  } finally {
                    try {
                      Dt && !Dt.done && (Zt = Mt.return) && Zt.call(Mt);
                    } finally {
                      if (Ht)
                        throw Ht.error;
                    }
                  }
                  return this.tourReadyPromises = [], [2, new Promise(function(nr, _r) {
                    ir.tourReadySeqnum > ct ? _r("superseded") : ir.tourReadyPromises.push(new Qt(ct, nr, _r));
                  })];
                });
              });
            }, Xe.prototype.getEffectiveTourTimecode = function() {
              var ut = this.getActiveTourPlayer();
              if (ut === null)
                return 0;
              var ct = ut.get_tour();
              if (ct === null)
                return 0;
              var Mt = ct.get_currentTourstopIndex();
              if (Mt < 0)
                return 0;
              var Dt = ct.elapsedTimeTillTourstop(Mt), It = ct.get_tourStops()[Mt], Ht = It.get_tweenPosition() * It.get_duration() * 1e-3, Zt = Dt + Ht;
              if (Zt < 0)
                return 0;
              var ir = ct.get_runTime() * 1e-3;
              return Zt > ir ? ir : Zt;
            }, Xe.prototype.seekToTourTimecode = function(ut) {
              var ct = this.getActiveTourPlayer();
              if (ct !== null) {
                var Mt = ct.get_tour();
                if (Mt !== null) {
                  for (var Dt = Mt.get_tourStops(), It = Dt.length - 1, Ht = 0; Ht < Dt.length; Ht++) {
                    var Zt = Mt.elapsedTimeTillTourstop(Ht);
                    if (Zt >= ut) {
                      It = Ht - 1;
                      break;
                    }
                  }
                  It < 0 && (It = 0), ct.playFromTourstop(Dt[It]);
                }
              }
            }, Xe.prototype.captureFrame = function(ut) {
              var ct = this;
              return new Promise(function(Mt, Dt) {
                ct.ctl.captureFrame(function(It) {
                  return Mt(It);
                }, ut.width, ut.height, ut.format);
              });
            }, Xe.prototype.captureVideo = function(ut) {
              var ct = this.ctl, Mt = new ReadableStream({
                start: function(Dt) {
                  function It() {
                    var Ht = 0;
                    ct.captureVideo(function(Zt) {
                      Ht++, Dt.enqueue(Zt), Ht >= ut.totalFrames && Dt.close();
                    }, ut.width, ut.height, ut.framesPerSecond, ut.totalFrames, ut.format);
                  }
                  return It();
                }
              });
              return Mt;
            }, Xe;
          }()
        ), rr = (
          /** @class */
          function() {
            function Xe() {
              this.inst = null, this.onLinkedCallbacks = [];
            }
            return Xe.prototype.link = function(ut) {
              var ct, Mt;
              if (this.inst !== null)
                throw new Error("must unlink WWT Pinia global state before relinking");
              this.inst = ut;
              try {
                for (var Dt = $e(this.onLinkedCallbacks), It = Dt.next(); !It.done; It = Dt.next()) {
                  var Ht = It.value;
                  Ht();
                }
              } catch (Zt) {
                ct = { error: Zt };
              } finally {
                try {
                  It && !It.done && (Mt = Dt.return) && Mt.call(Dt);
                } finally {
                  if (ct)
                    throw ct.error;
                }
              }
              this.onLinkedCallbacks = [];
            }, Xe.prototype.unlink = function() {
              this.inst = null;
            }, Xe;
          }()
        ), er = (
          /** @class */
          function() {
            function Xe(ut, ct, Mt, Dt, It, Ht) {
              Ht === void 0 && (Ht = null), this.url = ut, this.name = ct, this.type = Mt, this.description = Dt, this.extension = It, this.id = Ht;
            }
            return Xe.fromImageset = function(ut) {
              var ct, Mt;
              return new Xe(ut.get_url(), ut.get_name(), ut.get_dataSetType(), ut.get_creditsText(), ut.get_extension(), (Mt = (ct = ut.get_hipsProperties()) === null || ct === void 0 ? void 0 : ct.get_catalogSpreadSheetLayer().id.toString()) !== null && Mt !== void 0 ? Mt : null);
            }, Xe;
          }()
        ), sr = (
          /** @class */
          function() {
            function Xe(ut, ct, Mt) {
              this.id = ut, this.referenceFrame = ct, this.name = Mt ?? ut;
            }
            return Xe.prototype.setName = function(ut) {
              this.name = ut;
            }, Xe;
          }()
        ), hr = (
          /** @class */
          function() {
            function Xe(ut) {
              this.guidText = ut.id.toString(), this.settings = new Nt(ut);
              var ct = ut.get_imageSet().get_fitsProperties();
              this.scaleType = ct.scaleType, this.vmin = ct.lowerCut, this.vmax = ct.upperCut, this.colormapName = ct.colorMapName;
            }
            return Xe.prototype.getGuid = function() {
              return this.guidText;
            }, Xe;
          }()
        );
        function lr(Xe) {
          if (Xe.inst === null)
            throw new Error("cannot get activeLayersList without linking to WWTInstance");
          var ut = [];
          function ct(Dt) {
            var It, Ht, Zt, ir;
            try {
              for (var Jt = $e(Dt.layers), nr = Jt.next(); !nr.done; nr = Jt.next()) {
                var _r = nr.value;
                ut.push(_r.id.toString());
              }
            } catch (Or) {
              It = { error: Or };
            } finally {
              try {
                nr && !nr.done && (Ht = Jt.return) && Ht.call(Jt);
              } finally {
                if (It)
                  throw It.error;
              }
            }
            try {
              for (var yr = $e(Object.entries(Dt.childMaps)), br = yr.next(); !br.done; br = yr.next()) {
                var Er = Ze(br.value, 2), Rr = Er[0], Pr = Er[1];
                ct(Pr);
              }
            } catch (Or) {
              Zt = { error: Or };
            } finally {
              try {
                br && !br.done && (ir = yr.return) && ir.call(yr);
              } finally {
                if (Zt)
                  throw Zt.error;
              }
            }
          }
          var Mt = Xe.inst.lm.get_allMaps()[Xe.inst.ctl.getCurrentReferenceFrame()];
          return Mt && ct(Mt), ut;
        }
        function vr() {
          return nt.WWTControl.getImageSets().map(er.fromImageset);
        }
        var fr = We("wwt-engine", {
          // NOTE: We were originally alphabetizing these all, but now I think it will be
          // better to group topically related fields.
          state: function() {
            return {
              activeLayers: [],
              availableImagesets: [],
              backgroundImageset: null,
              clockDiscontinuities: 0,
              clockRate: 1,
              currentTime: /* @__PURE__ */ new Date(),
              decRad: 0,
              foregroundImageset: null,
              foregroundOpacity: 100,
              imagesetLayers: {},
              isTourPlayerActive: !1,
              isTourPlaying: !1,
              raRad: 0,
              renderType: Vt.sky,
              rollRad: 0,
              spreadSheetLayers: {},
              timeAtStartup: Date.now(),
              tourCompletions: 0,
              tourRunTime: null,
              tourStopStartTimes: [],
              tourTimecode: 0,
              showWebGl2Warning: !1,
              zoomDeg: 0
            };
          },
          getters: {
            lookupImageset: function(Xe) {
              var ut = this;
              return function(ct) {
                if (ut.$wwt.inst === null)
                  throw new Error("cannot lookupImageset without linking to WWTInstance");
                return ut.$wwt.inst.ctl.getImagesetByName(ct);
              };
            },
            findRADecForScreenPoint: function(Xe) {
              var ut = this;
              return function(ct) {
                if (ut.$wwt.inst === null)
                  throw new Error("cannot findRADecForScreenPoint without linking to WWTInstance");
                var Mt = ut.$wwt.inst.ctl.getCoordinatesForScreenPoint(ct.x, ct.y);
                return { ra: (15 * Mt.x + 720) % 360, dec: Mt.y };
              };
            },
            findScreenPointForRADec: function(Xe) {
              var ut = this;
              return function(ct) {
                if (ut.$wwt.inst === null)
                  throw new Error("cannot findScreenPointForRADec without linking to WWTInstance");
                return ut.$wwt.inst.ctl.getScreenPointForCoordinates(ct.ra / 15, ct.dec);
              };
            },
            imagesetStateForLayer: function(Xe) {
              return function(ut) {
                return Xe.imagesetLayers[ut] || null;
              };
            },
            activeImagesetLayerStates: function() {
              var Xe, ut, ct = [];
              try {
                for (var Mt = $e(this.activeLayers), Dt = Mt.next(); !Dt.done; Dt = Mt.next()) {
                  var It = Dt.value, Ht = this.imagesetLayers[It];
                  Ht && ct.push(Ht);
                }
              } catch (Zt) {
                Xe = { error: Zt };
              } finally {
                try {
                  Dt && !Dt.done && (ut = Mt.return) && ut.call(Mt);
                } finally {
                  if (Xe)
                    throw Xe.error;
                }
              }
              return ct;
            },
            catalogLayerKey: function(Xe) {
              return function(ut) {
                var ct;
                return (ct = ut.id) !== null && ct !== void 0 ? ct : "";
              };
            },
            imagesetForLayer: function(Xe) {
              var ut = this;
              return function(ct) {
                if (ut.$wwt.inst === null)
                  throw new Error("cannot get imagesetForLayer without linking to WWTInstance");
                var Mt = ut.$wwt.inst.lm.get_layerList()[ct];
                return Mt !== null && Mt instanceof nt.ImageSetLayer ? Mt.get_imageSet() : null;
              };
            },
            imagesetLayerById: function(Xe) {
              var ut = this;
              return function(ct) {
                if (ut.$wwt.inst === null)
                  throw new Error("cannot get imagesetLayerById without linking to WWTInstance");
                var Mt = ut.layerById(ct);
                return Mt !== null && Mt instanceof nt.ImageSetLayer ? Mt : null;
              };
            },
            layerForHipsCatalog: function(Xe) {
              var ut = this;
              return function(ct) {
                if (ut.$wwt.inst === null)
                  throw new Error("cannot get layerForHipsCatalog without linking to WWTInstance");
                var Mt = nt.Guid.createFrom(ct).toString();
                return ut.spreadSheetLayerById(Mt);
              };
            },
            layerById: function(Xe) {
              var ut = this;
              return function(ct) {
                if (ut.$wwt.inst === null)
                  throw new Error("cannot get layerById without linking to WWTInstance");
                return ut.$wwt.inst.lm.get_layerList()[ct];
              };
            },
            spreadsheetStateForHipsCatalog: function(Xe) {
              var ut = this;
              return function(ct) {
                if (ut.$wwt.inst === null)
                  throw new Error("cannot get spreadsheetStateForHipsCatalog without linking to WWTInstance");
                var Mt = nt.Guid.createFrom(ct).toString();
                return Xe.spreadSheetLayers[Mt] || null;
              };
            },
            spreadSheetLayerById: function(Xe) {
              var ut = this;
              return function(ct) {
                if (ut.$wwt.inst === null)
                  throw new Error("cannot get spreadsheetLayerById without linking to WWTInstance");
                var Mt = ut.layerById(ct);
                return Mt !== null && Mt instanceof nt.SpreadSheetLayer ? Mt : null;
              };
            },
            spreadsheetStateById: function(Xe) {
              return function(ut) {
                return Xe.spreadSheetLayers[ut] || null;
              };
            },
            spreadSheetLayer: function(Xe) {
              var ut = this;
              return function(ct) {
                if (ut.$wwt.inst === null)
                  throw new Error("cannot get spreadSheetLayer without linking to WWTInstance");
                var Mt = ut.catalogLayerKey(ct);
                return ut.spreadSheetLayerById(Mt);
              };
            },
            spreadsheetState: function(Xe) {
              var ut = this;
              return function(ct) {
                var Mt = ut.catalogLayerKey(ct);
                return Xe.spreadSheetLayers[Mt] || null;
              };
            }
          },
          actions: {
            internalLinkToInstance: function(Xe) {
              this.$wwt.link(Xe);
            },
            internalUnlinkFromInstance: function() {
              this.$wwt.unlink();
            },
            internalUpdate: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot internalUpdate without linking to WWTInstance");
              var Xe = this.$wwt.inst, ut = Xe.si.getRA() * Ge;
              this.raRad != ut && (this.raRad = ut);
              var ct = Xe.si.getDec() * Ne;
              this.decRad != ct && (this.decRad = ct);
              var Mt = Xe.ctl.renderContext.viewCamera.zoom;
              this.zoomDeg != Mt && (this.zoomDeg = Mt);
              var Dt = Xe.ctl.renderContext.viewCamera.rotation;
              this.rollRad != Dt && (this.rollRad = Dt);
              var It = Xe.ctl.renderContext.get_backgroundImageset() || null;
              this.backgroundImageset != It && (this.backgroundImageset = It);
              var Ht = Xe.stc.get_now();
              this.currentTime != Ht && (this.currentTime = Ht);
              var Zt = Xe.ctl.renderContext.get_foregroundImageset() || null;
              this.foregroundImageset != Zt && (this.foregroundImageset = Zt), this.foregroundOpacity != Xe.ctl.renderContext.viewCamera.opacity && (this.foregroundOpacity = Xe.ctl.renderContext.viewCamera.opacity), this.renderType != Xe.ctl.renderType && (this.renderType = Xe.ctl.renderType);
              var ir = Xe.getActiveTourPlayer();
              this.tourTimecode = Xe.getEffectiveTourTimecode(), ir !== null ? (this.isTourPlayerActive = !0, this.isTourPlaying = Xe.getIsTourPlaying(ir)) : (this.isTourPlayerActive = !1, this.isTourPlaying = !1);
              var Jt = !Xe.si.isUsingWebGl2() && Date.now() - this.timeAtStartup < 15e3;
              this.showWebGl2Warning != Jt && (this.showWebGl2Warning = Jt);
            },
            internalIncrementTourCompletions: function() {
              this.tourCompletions += 1;
            },
            applySetting: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot applySetting without linking to WWTInstance");
              this.$wwt.inst.applySetting(Xe);
            },
            setBackgroundImageByName: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setBackgroundImageByName without linking to WWTInstance");
              this.$wwt.inst.setBackgroundImageByName(Xe);
            },
            setForegroundImageByName: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setForegroundImageByName without linking to WWTInstance");
              this.$wwt.inst.setForegroundImageByName(Xe);
            },
            setForegroundOpacity: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setForegroundOpacity without linking to WWTInstance");
              this.$wwt.inst.setForegroundOpacity(Xe), this.foregroundOpacity = Xe;
            },
            setupForImageset: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setupForImageset without linking to WWTInstance");
              this.$wwt.inst.setupForImageset(Xe);
            },
            zoom: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot zoom without linking to WWTInstance");
              this.$wwt.inst.ctl.zoom(Xe);
            },
            move: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot move without linking to WWTInstance");
              this.$wwt.inst.ctl.move(Xe.x, Xe.y);
            },
            tilt: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot tilt without linking to WWTInstance");
              this.$wwt.inst.ctl._tilt(Xe.x, Xe.y);
            },
            setTime: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setTime without linking to WWTInstance");
              this.$wwt.inst.stc.set_now(Xe), this.clockDiscontinuities += 1;
            },
            setClockRate: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setClockRate without linking to WWTInstance");
              this.$wwt.inst.stc.get_timeRate() != Xe && (this.$wwt.inst.stc.set_timeRate(Xe), this.clockRate = Xe, this.clockDiscontinuities += 1);
            },
            setClockSync: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setClockSync without linking to WWTInstance");
              this.$wwt.inst.stc.get_syncToClock() != Xe && (this.$wwt.inst.stc.set_syncToClock(Xe), Xe ? this.clockRate = this.$wwt.inst.stc.get_timeRate() : this.clockRate = 0, this.clockDiscontinuities += 1);
            },
            startTour: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot start tour without linking to WWTInstance");
              var Xe = this.$wwt.inst.getActiveTourPlayer();
              if (Xe === null)
                throw new Error("no tour to start");
              Xe.play();
            },
            toggleTourPlayPauseState: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot play/pause tour without linking to WWTInstance");
              var Xe = this.$wwt.inst.getActiveTourPlayer();
              if (Xe === null)
                throw new Error("no tour to play/pause");
              Xe.pauseTour();
            },
            setTourPlayerLeaveSettingsWhenStopped: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setTourPlayerLeaveSettingsWhenStopped without linking to WWTInstance");
              var ut = this.$wwt.inst.getActiveTourPlayer();
              if (ut === null)
                throw new Error("no tour player to control");
              ut.set_leaveSettingsWhenStopped(Xe);
            },
            seekToTourTimecode: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot seekToTourTimecode without linking to WWTInstance");
              this.$wwt.inst.seekToTourTimecode(Xe);
            },
            viewAsTourXml: function(Xe) {
              return O(this, void 0, void 0, function() {
                var ut, ct, Mt, Dt, It;
                return Ue(this, function(Ht) {
                  return nt.WWTControl.singleton.createTour(Xe || ""), ut = nt.WWTControl.singleton.tourEdit, ut.addSlide(!1), ct = ut.get_tour(), ct === null ? [2, Promise.resolve(null)] : (Mt = ct.saveToBlob(), Dt = new FileReader(), Dt.readAsText(Mt), It = "", [2, new Promise(function(Zt, ir) {
                    Dt.onloadend = function() {
                      It += Dt.result, Zt(It);
                    };
                  })]);
                });
              });
            },
            waitForReady: function() {
              return O(this, void 0, void 0, function() {
                var Xe = this;
                return Ue(this, function(ut) {
                  return this.$wwt.inst !== null ? [2, this.$wwt.inst.waitForReady()] : [2, new Promise(function(ct, Mt) {
                    var Dt = function() {
                      Xe.$wwt.inst.waitForReady().then(ct);
                    };
                    Xe.$wwt.inst !== null ? Dt() : Xe.$wwt.onLinkedCallbacks.push(Dt);
                  })];
                });
              });
            },
            gotoRADecZoom: function(Xe) {
              var ut = Xe.raRad, ct = Xe.decRad, Mt = Xe.zoomDeg, Dt = Xe.instant, It = Xe.rollRad;
              return O(this, void 0, void 0, function() {
                return Ue(this, function(Ht) {
                  if (this.$wwt.inst === null)
                    throw new Error("cannot gotoRADecZoom without linking to WWTInstance");
                  return [2, this.$wwt.inst.gotoRADecZoom(ut, ct, Mt, Dt, It)];
                });
              });
            },
            timeToRADecZoom: function(Xe) {
              var ut = Xe.raRad, ct = Xe.decRad, Mt = Xe.zoomDeg, Dt = Xe.rollRad;
              if (this.$wwt.inst === null)
                throw new Error("cannot get timeToRADecZoom without linking to WWTInstance");
              return this.$wwt.inst.timeToRADecZoom(ut, ct, Mt, Dt);
            },
            gotoTarget: function(Xe) {
              return O(this, void 0, void 0, function() {
                return Ue(this, function(ut) {
                  if (this.$wwt.inst === null)
                    throw new Error("cannot gotoTarget without linking to WWTInstance");
                  return [2, this.$wwt.inst.gotoTarget(Xe)];
                });
              });
            },
            setTrackedObject: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setTrackedObject without linking to WWTInstance");
              this.$wwt.inst.ctl.renderContext.set_solarSystemTrack(Xe);
            },
            loadTour: function(Xe) {
              var ut = Xe.url, ct = Xe.play;
              return O(this, void 0, void 0, function() {
                var Mt, Dt, It, Ht, Zt, ir;
                return Ue(this, function(Jt) {
                  switch (Jt.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot loadTour without linking to WWTInstance");
                      return ct ? [4, this.$wwt.inst.loadAndPlayTour(ut)] : [3, 2];
                    case 1:
                      return Jt.sent(), [3, 4];
                    case 2:
                      return [4, this.$wwt.inst.loadTour(ut)];
                    case 3:
                      Jt.sent(), Jt.label = 4;
                    case 4:
                      if (Mt = null, Dt = [], It = this.$wwt.inst.getActiveTourPlayer(), It !== null && (Ht = It.get_tour(), Ht !== null))
                        for (Mt = Ht.get_runTime() * 1e-3, Zt = Ht.get_tourStops().length, ir = 0; ir < Zt; ir++)
                          Dt.push(Ht.elapsedTimeTillTourstop(ir));
                      return [2, { tourRunTime: Mt, tourStopStartTimes: Dt }];
                  }
                });
              });
            },
            loadImageCollection: function(Xe) {
              var ut = Xe.url, ct = Xe.loadChildFolders;
              return O(this, void 0, void 0, function() {
                var Mt;
                return Ue(this, function(Dt) {
                  switch (Dt.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot loadImageCollection without linking to WWTInstance");
                      return [4, this.$wwt.inst.loadImageCollection(ut, ct)];
                    case 1:
                      return Mt = Dt.sent(), this.availableImagesets = vr(), [2, Mt];
                  }
                });
              });
            },
            addImagesetToRepository: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot addImagesetToRepository without linking to WWTInstance");
              return this.$wwt.inst.addImagesetToRepository(Xe);
            },
            // General layers
            deleteLayer: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot deleteLayer without linking to WWTInstance");
              var ut = "";
              if (typeof Xe == "string") {
                ut = Xe;
                var ct = nt.Guid.fromString(Xe);
                this.$wwt.inst.lm.deleteLayerByID(ct, !0, !0);
              } else
                ut = Xe.toString(), this.$wwt.inst.lm.deleteLayerByID(Xe, !0, !0);
              delete this.imagesetLayers[ut], delete this.spreadSheetLayers[ut], this.activeLayers = lr(this.$wwt);
            },
            // Imageset layers, including FITS layers
            addImageSetLayer: function(Xe) {
              return O(this, void 0, void 0, function() {
                var ut, ct;
                return Ue(this, function(Mt) {
                  switch (Mt.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot addImageSetLayer without linking to WWTInstance");
                      return [4, this.$wwt.inst.addImageSetLayer(Xe)];
                    case 1:
                      return ut = Mt.sent(), ct = ut.id.toString(), this.imagesetLayers[ct] = new hr(ut), this.activeLayers = lr(this.$wwt), [2, ut];
                  }
                });
              });
            },
            // deprecated, but maintained for compatibility:
            loadFitsLayer: function(Xe) {
              return O(this, void 0, void 0, function() {
                var ut;
                return Ue(this, function(ct) {
                  if (this.$wwt.inst === null)
                    throw new Error("cannot loadFitsLayer without linking to WWTInstance");
                  return ut = {
                    url: Xe.url,
                    mode: "fits",
                    name: Xe.name,
                    goto: Xe.gotoTarget
                  }, [2, this.$wwt.inst.addImageSetLayer(ut)];
                });
              });
            },
            setImageSetLayerOrder: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setImageSetLayerOrder without linking to WWTInstance");
              this.$wwt.inst.setImageSetLayerOrder(Xe), this.activeLayers = lr(this.$wwt);
            },
            stretchFitsLayer: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot stretchFitsLayer without linking to WWTInstance");
              this.$wwt.inst.stretchFitsLayer(Xe);
              var ut = this.imagesetLayers[Xe.id];
              ut && (ut.scaleType = Xe.stretch, ut.vmin = Xe.vmin, ut.vmax = Xe.vmax);
            },
            setFitsLayerColormap: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot setFitsLayerColormap without linking to WWTInstance");
              this.$wwt.inst.setFitsLayerColormap(Xe);
              var ut = this.imagesetLayers[Xe.id];
              ut && (ut.colormapName = Xe.name);
            },
            applyFitsLayerSettings: function(Xe) {
              var ut, ct;
              if (this.$wwt.inst === null)
                throw new Error("cannot applyFitsLayerSettings without linking to WWTInstance");
              this.$wwt.inst.applyFitsLayerSettings(Xe);
              var Mt = this.imagesetLayers[Xe.id];
              if (Mt)
                try {
                  for (var Dt = $e(Xe.settings), It = Dt.next(); !It.done; It = Dt.next()) {
                    var Ht = It.value;
                    pt(Mt.settings, Ht);
                  }
                } catch (Zt) {
                  ut = { error: Zt };
                } finally {
                  try {
                    It && !It.done && (ct = Dt.return) && ct.call(Dt);
                  } finally {
                    if (ut)
                      throw ut.error;
                  }
                }
            },
            // Spreadsheet layers
            createTableLayer: function(Xe) {
              return O(this, void 0, void 0, function() {
                var ut, ct, Mt, Dt;
                return Ue(this, function(It) {
                  switch (It.label) {
                    case 0:
                      if (this.$wwt.inst === null)
                        throw new Error("cannot createTableLayer without linking to WWTInstance");
                      return ut = this.$wwt.inst.lm.createSpreadsheetLayer(Xe.referenceFrame, Xe.name, Xe.dataCsv), ut.set_lngColumn(-1), ut.set_latColumn(-1), ut.set_altColumn(-1), ut.set_sizeColumn(-1), ut.set_colorMapColumn(-1), ut.set_startDateColumn(-1), ut.set_endDateColumn(-1), ut.set_xAxisColumn(-1), ut.set_yAxisColumn(-1), ut.set_zAxisColumn(-1), ut.set_altUnit(ht.meters), ut.set_referenceFrame(Xe.referenceFrame), Xe.referenceFrame == "Sky" && ut.set_astronomical(!0), ct = Promise.resolve(ut), [4, ct];
                    case 1:
                      return Mt = It.sent(), Dt = Mt.id.toString(), this.spreadSheetLayers[Dt] = new vt(Mt), this.activeLayers = lr(this.$wwt), [2, Mt];
                  }
                });
              });
            },
            applyTableLayerSettings: function(Xe) {
              var ut, ct;
              if (this.$wwt.inst === null)
                throw new Error("cannot applyTableLayerSettings without linking to WWTInstance");
              this.$wwt.inst.applyTableLayerSettings(Xe);
              var Mt = this.spreadSheetLayers[Xe.id];
              if (Mt !== void 0)
                try {
                  for (var Dt = $e(Xe.settings), It = Dt.next(); !It.done; It = Dt.next()) {
                    var Ht = It.value;
                    At(Mt, Ht);
                  }
                } catch (Zt) {
                  ut = { error: Zt };
                } finally {
                  try {
                    It && !It.done && (ct = Dt.return) && ct.call(Dt);
                  } finally {
                    if (ut)
                      throw ut.error;
                  }
                }
            },
            updateTableLayer: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot updateTableLayer without linking to WWTInstance");
              this.$wwt.inst.updateTableLayer(Xe);
            },
            // Progressive HiPS catalogs.
            //
            // These have some characteristics of imagesets, and some characteristics
            // of spreadsheet layers.
            addCatalogHipsByName: function(Xe) {
              return O(this, void 0, void 0, function() {
                var ut, ct, Mt, Dt, It;
                return Ue(this, function(Ht) {
                  switch (Ht.label) {
                    case 0:
                      if (this.$wwt.inst == null)
                        throw new Error("cannot addCatalogHipsByName without linking to WWTInstance");
                      return [4, this.$wwt.inst.addCatalogHipsByName(Xe)];
                    case 1:
                      return ut = Ht.sent(), ct = ut.get_hipsProperties(), ct !== null && (Mt = ct.get_catalogSpreadSheetLayer(), Dt = Mt.id.toString(), this.spreadSheetLayers[Dt] = new vt(Mt), It = vr().find(function(Zt) {
                        return Zt.name === Xe.name;
                      }), It !== void 0 && (It.id = Dt)), this.activeLayers = lr(this.$wwt), [2, ut];
                  }
                });
              });
            },
            getCatalogHipsDataInView: function(Xe) {
              if (this.$wwt.inst == null)
                throw new Error("cannot getCatalogHipsDataInView without linking to WWTInstance");
              return this.$wwt.inst.getCatalogHipsDataInView(Xe);
            },
            removeCatalogHipsByName: function(Xe) {
              if (this.$wwt.inst == null)
                throw new Error("cannot removeCatalogHipsByName without linking to WWTInstance");
              this.$wwt.inst.ctl.removeCatalogHipsByName(Xe);
              var ut = nt.Guid.createFrom(Xe).toString();
              delete this.spreadSheetLayers[ut], this.activeLayers = lr(this.$wwt);
            },
            // Annotations
            addAnnotation: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot addAnnotation without linking to WWTInstance");
              this.$wwt.inst.si.addAnnotation(Xe);
            },
            removeAnnotation: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot removeAnnotation without linking to WWTInstance");
              this.$wwt.inst.si.removeAnnotation(Xe);
            },
            clearAnnotations: function() {
              if (this.$wwt.inst === null)
                throw new Error("cannot clearAnnotations without linking to WWTInstance");
              this.$wwt.inst.si.clearAnnotations();
            },
            // Capturing the current display
            captureFrame: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot captureThumbnail without linking to WWTInstance");
              return this.$wwt.inst.captureFrame(Xe);
            },
            // Capturing a video as a readable stream
            captureVideo: function(Xe) {
              if (this.$wwt.inst === null)
                throw new Error("cannot captureVideo without linking to WWTInstance");
              return this.$wwt.inst.captureVideo(Xe);
            }
          }
        }), or = (0, u.defineComponent)({
          props: {
            /** The namespace of the Pinia module used to track the WWT component’s state.
             * This prop should have the same value in all components in the app that
             * reference WWT.
             */
            wwtNamespace: { type: String, default: "wwt", required: !0 },
            wwtFreestandingAssetBaseurl: String
          },
          computed: Ie(Ie({}, Ke(fr, {
            /** The GUIDs of all rendered layers, in their draw order.
             *
             * This list gives the GUIDs of the layers that are currently candidates for
             * rendering. This list is determined by the hierarchy of "layer maps"
             * registered with the engine and its current rendering mode. Layers in this
             * list might not be actually rendered if their `enabled` flag is false, if
             * they are fully transparent, and so on.
             **/
            wwtActiveLayers: "activeLayers",
            /** Information about the imagesets that are available to be used as a background.
               *
               * The info includes the name, which can then be used to set the background image
               * via the [[setBackgroundImageByName]] mutation.
               */
            wwtAvailableImagesets: "availableImagesets",
            /** The current background [Imageset](../../engine/classes/imageset.html), or
             * null if it is undefined.
             *
             * You can cause this state variable to change using the
             * [[setBackgroundImageByName]] mutation.
             * **/
            wwtBackgroundImageset: "backgroundImageset",
            /** The current time of WWT internal clock. In normal operation this variable
             * will change with every rendered WWT frame, or every 30 ms or so.
             */
            wwtCurrentTime: "currentTime",
            /** The number of times that the progression of the WWT internal clock has
             * been changed discontinuously.
             *
             * The main use of this state variable is that you can
             * [watch](https://vuejs.org/api/reactivity-core.html#watch) for changes to it and be alerted
             * when the clock has been altered. */
            wwtClockDiscontinuities: "clockDiscontinuities",
            /** The rate at which the WWT internal clock progresses compared to real time.
             * If the WWT clock is paused, this will be zero. Negative and fractional
             * values are both possible. */
            wwtClockRate: "clockRate",
            /** The current declination of the center of the WWT view, in radians.
             *
             * TODO: define the meaning here for view modes other than "sky."
             */
            wwtDecRad: "decRad",
            /** The current foreground [Imageset](../../engine/classes/imageset.html), or
             * null if it is undefined.
             *
             * You can cause this state variable to change using the
             * [[setForegroundImageByName]] mutation.
             * **/
            wwtForegroundImageset: "foregroundImageset",
            /** The opacity of the foreground imageset. Values range between 0 (invisible)
              * and 100 (fully opaque). */
            wwtForegroundOpacity: "foregroundOpacity",
            /** A table of activated imageset layers.
             *
             * Use [[imagesetStateForLayer]] to access information about a particular
             * layer.
             */
            wwtImagesetLayers: "imagesetLayers",
            /** Whether a tour has been loaded up and is available for playback. */
            wwtIsTourPlayerActive: "isTourPlayerActive",
            /** Whether a tour is actively playing back right now. This can spontaneously become
              * false if the tour completes playing. */
            wwtIsTourPlaying: "isTourPlaying",
            /** The current right ascension of the center of the WWT view, in radians.
             *
             * TODO: define the meaning here for view modes other than "sky."
             */
            wwtRARad: "raRad",
            /** The current mode of the WWT renderer.
             *
             * This is derived from the "type" of the active background imageset. To
             * change the mode, change the background imageset with
             * [[setBackgroundImageByName]].
             */
            wwtRenderType: "renderType",
            /** The current roll of the view camera, in radians */
            wwtRollRad: "rollRad",
            /** Whether or not to show a warning about recommending WebGL 2 */
            wwtShowWebGl2Warning: "showWebGl2Warning",
            /** A table of activated imageset layers.
             *
             * Use [[imagesetStateForLayer]] to access information about a particular
             * layer.
             */
            wwtSpreadSheetLayers: "spreadSheetLayers",
            /** The number of times that a WWT tour has completed playing.
             *
             * The main use of this state variable is that you can
             * [watch](https://vuejs.org/api/reactivity-core.html#watch) for changes to it and be alerted
             * when a tour finishes. Watching [[wwtIsTourPlaying]] doesn't suffice because
             * that will trigger when a tour is paused. */
            wwtTourCompletions: "tourCompletions",
            /** The total runtime of the current tour, in seconds, if there is one. */
            wwtTourRunTime: "tourRunTime",
            /** The timecodes at which the current tour’s "stops" begin, in seconds.
             *
             * Each WWT tour is composed of one or more "stops", each of which has a fixed
             * wall-clock duration. This variable gives the start times of the stops under
             * the assumption that they all follow one another in sequence. It is possible
             * to have nonlinear flow from one stop to the next.
             *
             * If no tour is loaded, this is an empty array.
             */
            wwtTourStopStartTimes: "tourStopStartTimes",
            /** The "timecode" of the current tour playback progression.
             *
             * The "timecode" is approximately the number of seconds elapsed since tour
             * playback began. More precisely, however, it is the start time of the
             * current tour stop, plus however much wall-clock time has elapsed while at
             * that stop. Because it is possible for stops to link to each other
             * non-linearly, it is also possible for the timecode to progress non-linearly
             * even when the tour plays back without user interaction.
             *
             * In combination with [[wwtTourStopStartTimes]], you can use this value to
             * determine the index number of the currently active tour stop.
             *
             * If no tour is loaded, this is zero.
             */
            wwtTourTimecode: "tourTimecode",
            /** The WWT zoom level, in degrees.
             *
             * TODO: define the semantics here in 3D and other modes.
             *
             * In 2D sky mode, the zoom level is the angular height of the viewport,
             * *times six*.
             */
            wwtZoomDeg: "zoomDeg"
          })), Ke(fr, [
            /** Get the reactive state for the active imageset layers
             *
             * These layers are created using the [[addImageSetLayer]] action. The state
             * structures returned by this function are part of the reactive store, so
             * you can wire them up to your UI and they will update correctly. The list is
             * returned in the engine's render order.
             *
             * @returns The layer states
             */
            "activeImagesetLayerStates",
            /** Get the right ascension and declination, in degrees, for x, y coordinates on the screen */
            "findRADecForScreenPoint",
            /** Given an RA and Dec position, return the x, y coordinates of the screen point */
            "findScreenPointForRADec",
            /** Look up the WWT engine object for an active imageset layer.
             *
             * This getter gets the WWT `Imageset` object associated with an imageset
             * layer. The returned object is *not* part of the Vue(x) reactivity system,
             * so you shouldn't use it to set up UI elements, but you can obtain more
             * detailed information about the imageset than is stored in the state
             * management system. For UI purposes, use [[imagesetStateForLayer]].
             *
             * @param guidtext The GUID of the layer to query, as a string
             * @returns The layer's underlying imageset, or null if the GUID is
             * unrecognized
             */
            "imagesetForLayer",
            /** Look up the reactive state for an active imageset layer.
             *
             * These layers are created using the [[addImageSetLayer]] action. The state
             * returned by this function is part of the reactive store, so you can
             * wire it up to your UI and it will update as the layer settings are changed.
             * If you need "runtime" state not captured in the reactivity system, you may
             * need to use [[imagesetForLayer]] instead.
             *
             * @param guidtext The GUID of the layer to query, as a string
             * @returns The layer state, or null if the GUID is unrecognized
             */
            "imagesetStateForLayer",
            /** Get the actual WWT `SpreadSheetLayer` for the named HiPS catalog.
             *
             * Do not use this function for UI purposes -- the WWT layer object is not
             * integrated into the reactive state system, and so if you use it as a basis
             * for UI elements, those elements will not be updated properly if/when the
             * layer's settings change. Use [[spreadsheetStateForHipsCatalog]] instead.
             *
             * @param name The `datasetName` of the HiPS catalog
             */
            "layerForHipsCatalog",
            /** Look up an [Imageset](../../engine/classes/imageset.html) in the engine’s
             * table of ones with registered names.
             *
             * This delegates to
             * [WWTControl.getImagesetByName()](../../engine/wwtcontrol.html#getimagesetbyname),
             * which has very eager name-matching rules. But if nothing matches, null is
             * returned.
             *
             * Imagesets are not added to the engine’s list of names automatically. In
             * order for an imageset to be findable by this function, its containing
             * folder must have been loaded using the [[loadImageCollection]] action.
             */
            "lookupImageset",
            /** Get the actual WWT `SpreadSheetLayer` for the table layer with the given ID.
             *
             * Do not use this function for UI purposes -- the WWT layer object is not
             * integrated into the reactive state system, and so if you use it as a basis
             * for UI elements, those elements will not be updated properly if/when the
             * layer's settings change. Use [[spreadsheetState]] instead.
             *
             * @param id The table layer's identifier.
             */
            "spreadSheetLayerById",
            /** Get the actual WWT `SpreadSheetLayer` for the table layer corresponding
             * to the given CatalogLayerInfo.
             *
             * Do not use this function for UI purposes -- the WWT layer object is not
             * integrated into the reactive state system, and so if you use it as a basis
             * for UI elements, those elements will not be updated properly if/when the
             * layer's settings change. Use [[spreadsheetState]] instead.
             *
             * @param id The table layer's identifier.
             */
            "spreadSheetLayer",
            /** Get reactive `SpreadSheetLayer` settings for the table layer corresponding to
             * the given CatalogLayerInfo.
             *
             * The returned data structure is a component of the app's reactive state. You can
             * therefore use the settings to construct UI elements, and they will update
             * reactively as the state evolves. The actual data structures used by WWT are
             * separate, but the two mirror each other.
             *
             * @param catalog A CatalogLayerInfo object corresponding to the layer.
             */
            "spreadsheetState",
            /** Get reactive `SpreadSheetLayer` settings for the table layer with the given ID.
             *
             * The returned data structure is a component of the app's reactive state. You can
             * therefore use the settings to construct UI elements, and they will update
             * reactively as the state evolves. The actual data structures used by WWT are
             * separate, but the two mirror each other.
             *
             * @param id The identifier of the table layer.
             */
            "spreadsheetStateById",
            /** Get reactive `SpreadSheetLayer` settings for the named HiPS catalog.
             *
             * The returned data structure is a component of the app's reactive state. You can
             * therefore use the settings to construct UI elements, and they will update
             * reactively as the state evolves. The actual data structures used by WWT are
             * separate, but the two mirror each other.
             *
             * @param name The `datasetName` of the HiPS catalog
             */
            "spreadsheetStateForHipsCatalog"
          ])),
          methods: Ie({}, $(fr, [
            /** Add a "catalog HiPS" dataset to the current view, by name.
             *
             * If the catalog name is not in the engine's registry, the promise rejects.
             */
            "addCatalogHipsByName",
            /** Request the creation of a tabular data layer.
             *
             * The action resolves to a new [SpreadSheetLayer](../../engine/classes/spreadsheetlayer.html) instance.
             */
            "createTableLayer",
            /** Request an export of the catalog HiPS data within the current viewport. */
            "getCatalogHipsDataInView",
            /** Command the view to steer to a specific configuration.
             *
             * The async action completes when the view arrives, or when
             * a subsequent view command overrides this one.
             *
             * TODO: document semantics when not in 2D sky mode!
             */
            "gotoRADecZoom",
            /** Returns the time it would take, in seconds, to navigate to the given target. */
            "timeToRADecZoom",
            /** Command the view to steer as specified in
             * [the options](../../engine-helpers/interfaces/gototargetoptions.html).
             *
             * The async action completes when the view arrives, or when
             * a subsequent view command overrides this one.
             */
            "gotoTarget",
            /** Request the engine to load the specified image collection.
             *
             * The image collection is a [WTML file](https://docs.worldwidetelescope.org/data-guide/1/data-file-formats/collections/)
             * Images in collections loaded this way become usable for name-based lookup
             * by interfaces such as [[setForegroundImageByName]].
             *
             * The action resolves to a [Folder](../../engine/classes/folder.html) instance.
             * It’s asynchronous because the specified WTML file has to be downloaded.
             */
            "loadImageCollection",
            /** Add an imageset directly into the engine's database.
             *
             * If an imageset with the same URL has already been loaded, this is a
             * no-op.
             *
             * This returns the imageset that ultimately resides in the engine's
             * database. It could either be the input argument, if it was newly added,
             * or a pre-existing imageset in the no-op condition.
             */
            "addImagesetToRepository",
            /** Deprecated. Use addImageSetLayer instead.
             * Request the creation of a FITS image layer.
             *
             * The action resolves to a new [ImageSetLayer](../../engine/classes/imagesetlayer.html) instance.
             * It’s asynchronous because the requested FITS file has to be downloaded.
             */
            "loadFitsLayer",
            /** Request the creation of a image layer. Either a single FITS or an image set.
             *
             * The action resolves to a new [ImageSetLayer](../../engine/classes/imagesetlayer.html) instance.
             * It’s asynchronous because the requested url has to be downloaded.
             */
            "addImageSetLayer",
            /** Request the engine to load a tour file.
             *
             * The action resolves when the load is complete. It’s asynchronous because
             * the full WTT tour file has to be downloaded.
            */
            "loadTour",
            /** Get the current view as a one-slide tour, serialized to XML */
            "viewAsTourXml",
            /** Wait for the WWT engine to become ready for usage.
             *
             * You should invoke this action and wait for is completion before trying to
             * do anything else with a WWT-aware component. The action resolves when the
             * WWT engine has completed its initialization, which involes the download of
             * some supporting data files.
             */
            "waitForReady",
            // Formerly mutations
            // TODO: Alphabetize this into one big list
            /** Add an [Annotation](../../engine/classes/annotation.html) to the view. */
            "addAnnotation",
            /** Alter one or more settings of the specified FITS image layer as specified
             * in [the options](../../engine-helpers/interfaces/applyfitslayersettingsoptions.html).
             */
            "applyFitsLayerSettings",
            /** Alter one or more settings of the specified tabular data layers as specified
             * in [the options](../../engine-helpers/interfaces/applytablelayersettingsoptions.html).
             */
            "applyTableLayerSettings",
            /** Alter one [WWT engine setting](../../engine/modules.html#enginesetting). */
            "applySetting",
            /** Capture the current frame as an image `Blob` with the desired width, height, and format.
             * The first argument is a callback function to execute on the created `Blob`. */
            "captureFrame",
            /** Capture a video as a stream of image `Blob`s with the desired width, height and format.
             * The number of frames per second and total frame count are specified as well. */
            "captureVideo",
            /** Clear all [Annotations](../../engine/classes/annotation.html) from the view. */
            "clearAnnotations",
            /** Delete the specified layer from the layer manager.
             *
             * A layer may be identified by either its name or its [id](../../engine/classes/layer.html#id).
             */
            "deleteLayer",
            /** Remove the specified [Annotation](../../engine/classes/annotation.html) from the view. */
            "removeAnnotation",
            /** Remove a "catalog HiPS" dataset to the current view, by name. */
            "removeCatalogHipsByName",
            /** Seek tour playback to the specified timecode.
             *
             * See [[wwtTourTimecode]] for a definition of the tour timecode.
             *
             * An important limitation is that the engine can only seek to the very
             * beginning of a tour stop. If you request a timecode in the middle of a
             * slide, the seek will actually occur to the start time of that slide.
             */
            "seekToTourTimecode",
            /** Set the current background [Imageset](../../engine/classes/imageset.html)
             * based on its name.
             *
             * The name lookup here is effectively done using [[lookupImageset]]. If
             * the name is not found, the current background imageset remains unchanged.
             *
             * Changing the background imageset may change the value of [[wwtRenderType]],
             * and the overall "mode" of the WWT renderer.
             */
            "setBackgroundImageByName",
            /** Set the rate at which the WWT clock progresses compared to wall-clock time.
             *
             * A value of 10 means that the WWT clock progresses ten times faster than
             * real time. A value of -0.1 means that the WWT clock moves backwards, ten
             * times slower than real time.
             *
             * Altering this causes an increment in [[wwtClockDiscontinuities]].
             */
            "setClockRate",
            /** Set whether the WWT clock should progress with real time.
             *
             * See
             * [SpaceTimeController.set_syncToClock()](../../engine/modules/spacetimecontroller.html#set_synctoclock).
             * This interface effectively allows you to pause the WWT clock.
             *
             * Altering this causes an increment in [[wwtClockDiscontinuities]].
             */
            "setClockSync",
            /** Set the colormap used for a FITS image layer according to
             * [the options](../../engine-helpers/interfaces/setfitslayercolormapoptions.html).
             */
            "setFitsLayerColormap",
            /** Set the current foreground [Imageset](../../engine/classes/imageset.html)
             * based on its name.
             *
             * The name lookup here is effectively done using [[lookupImageset]]. If
             * the name is not found, the current foreground imageset remains unchanged.
             */
            "setForegroundImageByName",
            /** Set the opacity of the foreground imageset.
             *
             * Valid values are between 0 (invisible) and 100 (fully opaque).
             */
            "setForegroundOpacity",
            /** Change the [ImageSetLayer](../../engine/classes/imagesetlayer.html)
             * position in the draw cycle.
             */
            "setImageSetLayerOrder",
            /** Set whether the renderer settings of tours should remain applied after
             * those tours finish playing back.
             *
             * This specialized option helps avoid jarring visual effects when tours
             * finish playing. If a tour activates a renderer option like "local horizon
             * mode", by default that option will turn off when the tour finishes, causing
             * the view to suddenly change. If this option is set to True, that setting
             * will remain active, preventing the sudden change.
             */
            "setTourPlayerLeaveSettingsWhenStopped",
            /** Set the current time of WWT's internal clock.
             *
             * Altering this causes an increment in [[wwtClockDiscontinuities]].
             */
            "setTime",
            /** Set the "tracked object" in the 3D solar system view.
             *
             * Allowed values are
             * [defined in @wwtelescope/engine-types](../../engine-types/enums/solarsystemobjects.html).
             */
            "setTrackedObject",
            /** Set up the background and foreground imagesets according to
             * [the options](../../engine-helpers/interfaces/setupforimagesetoptions.html)
             *
             * The main use of this interface is that it provides a mechanism to guess
             * the appropriate background imageset given a foreground imageset that you
             * want to show.
             */
            "setupForImageset",
            /** Start playback of the currently loaded tour.
             *
             * Nothing happens if no tour is loaded.
             */
            "startTour",
            /** Alter the "stretch" of a FITS image layer according to
             * [the options](../../engine-helpers/interfaces/stretchfitslayeroptions.html).
             */
            "stretchFitsLayer",
            /** Toggle the play/pause state of the current tour.
             *
             * Nothing happens if no tour is loaded.
             */
            "toggleTourPlayPauseState",
            /** Update the contents of a tabular data layer according to
             * [the options](../../engine-helpers/interfaces/updatetablelayeroptions.html).
             */
            "updateTableLayer",
            //"updateAvailableImagesets",
            /** Set the zoom level of the view.
             *
             * This action may result in an action that takes a perceptible amount of
             * time to resolve, if the "smooth pan" renderer option is enabled. To have
             * proper asynchronous feedback about when the zoom operation completes, use
             * [[gotoRADecZoom]].
             */
            "zoom",
            /** Moves the position of the view */
            "move",
            /** Tilts the position of the view */
            "tilt"
          ]))
        }), dr = ["id"];
        function cr(Xe, ut, ct, Mt, Dt, It) {
          return (0, u.openBlock)(), (0, u.createElementBlock)("div", {
            id: Xe.uniqueId,
            class: "wwtelescope-component"
          }, null, 8, dr);
        }
        var Sr = 0;
        const ur = (0, u.defineComponent)({
          props: {
            wwtNamespace: { type: String, default: "wwt", required: !0 },
            wwtFreestandingAssetBaseurl: String,
            customId: String
          },
          data: function() {
            return {
              uniqueId: "",
              wwt: void 0,
              renderLoopId: void 0
            };
          },
          methods: Ie({}, $(fr, [
            "internalIncrementTourCompletions",
            "internalLinkToInstance",
            "internalUnlinkFromInstance",
            "internalUpdate",
            "waitForReady"
          ])),
          created: function() {
            var Xe = this.customId === void 0 ? "wwtcmpt".concat(Sr) : this.customId;
            Object.defineProperties(this, {
              uniqueId: { get: function() {
                return Xe;
              } }
            }), Sr += 1;
          },
          mounted: function() {
            var Xe = this;
            this.wwt = (0, u.markRaw)(new tr({
              elId: this.uniqueId,
              startInternalRenderLoop: !1,
              // Start at the Galactic Center by default. RA of the GC ~= 266.4 deg; in WWT, lng = 360 - RA.
              startLatDeg: -28.9,
              startLngDeg: 93.6,
              freestandingAssetBaseurl: this.wwtFreestandingAssetBaseurl
            })), this.internalLinkToInstance(this.wwt);
            var ut = function() {
              var ct = Xe.wwt;
              Xe.renderLoopId = window.requestAnimationFrame(ut), ct.ctl.renderOneFrame(), Xe.internalUpdate();
            };
            this.waitForReady().then(function() {
              (0, u.nextTick)().then(function() {
                Xe.renderLoopId = window.requestAnimationFrame(ut);
              });
            }), this.wwt.tourEndedCallback = function(ct) {
              Xe.internalIncrementTourCompletions();
            };
          },
          unmounted: function() {
            this.renderLoopId !== void 0 && (window.cancelAnimationFrame(this.renderLoopId), this.renderLoopId = void 0), this.wwt !== void 0 && (this.wwt.tourEndedCallback = null), this.internalUnlinkFromInstance();
          }
        });
        var gr = l(959);
        const kr = /* @__PURE__ */ (0, gr.Z)(ur, [["render", cr]]);
        var Ar = Pe();
        Ar.use(function(Xe) {
          var ut = Xe.store;
          ut.$wwt = new rr();
        });
      })(), o;
    })()
  ));
})(index_umd);
var index_umdExports = index_umd.exports;
let getRandomValues;
const rnds8 = new Uint8Array(16);
function rng() {
  if (!getRandomValues && (getRandomValues = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !getRandomValues))
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return getRandomValues(rnds8);
}
const byteToHex = [];
for (let e = 0; e < 256; ++e)
  byteToHex.push((e + 256).toString(16).slice(1));
function unsafeStringify(e, r = 0) {
  return byteToHex[e[r + 0]] + byteToHex[e[r + 1]] + byteToHex[e[r + 2]] + byteToHex[e[r + 3]] + "-" + byteToHex[e[r + 4]] + byteToHex[e[r + 5]] + "-" + byteToHex[e[r + 6]] + byteToHex[e[r + 7]] + "-" + byteToHex[e[r + 8]] + byteToHex[e[r + 9]] + "-" + byteToHex[e[r + 10]] + byteToHex[e[r + 11]] + byteToHex[e[r + 12]] + byteToHex[e[r + 13]] + byteToHex[e[r + 14]] + byteToHex[e[r + 15]];
}
const randomUUID = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto), native = {
  randomUUID
};
function v4(e, r, n) {
  if (native.randomUUID && !r && !e)
    return native.randomUUID();
  e = e || {};
  const s = e.random || (e.rng || rng)();
  if (s[6] = s[6] & 15 | 64, s[8] = s[8] & 63 | 128, r) {
    n = n || 0;
    for (let a = 0; a < 16; ++a)
      r[n + a] = s[a];
    return r;
  }
  return unsafeStringify(s);
}
const _export_sfc = (e, r) => {
  const n = e.__vccOpts || e;
  for (const [s, a] of r)
    n[s] = a;
  return n;
}, _sfc_main$4 = {
  extends: index_umdExports.WWTComponent,
  data() {
    return {
      customId: `${v4()}`
    };
  }
}, _hoisted_1$4 = ["id"];
function _sfc_render$5(e, r, n, s, a, t) {
  return openBlock(), createElementBlock("div", {
    id: a.customId,
    class: "wwtelescope-component"
  }, null, 8, _hoisted_1$4);
}
const UniqueWWTComponent = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["render", _sfc_render$5]]);
function ownKeys$1(e, r) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    r && (s = s.filter(function(a) {
      return Object.getOwnPropertyDescriptor(e, a).enumerable;
    })), n.push.apply(n, s);
  }
  return n;
}
function _objectSpread2$1(e) {
  for (var r = 1; r < arguments.length; r++) {
    var n = arguments[r] != null ? arguments[r] : {};
    r % 2 ? ownKeys$1(Object(n), !0).forEach(function(s) {
      _defineProperty$1(e, s, n[s]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ownKeys$1(Object(n)).forEach(function(s) {
      Object.defineProperty(e, s, Object.getOwnPropertyDescriptor(n, s));
    });
  }
  return e;
}
function _typeof$1(e) {
  "@babel/helpers - typeof";
  return _typeof$1 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(r) {
    return typeof r;
  } : function(r) {
    return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
  }, _typeof$1(e);
}
function _classCallCheck(e, r) {
  if (!(e instanceof r))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
  for (var n = 0; n < r.length; n++) {
    var s = r[n];
    s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(e, s.key, s);
  }
}
function _createClass(e, r, n) {
  return r && _defineProperties(e.prototype, r), n && _defineProperties(e, n), Object.defineProperty(e, "prototype", {
    writable: !1
  }), e;
}
function _defineProperty$1(e, r, n) {
  return r in e ? Object.defineProperty(e, r, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = n, e;
}
function _slicedToArray(e, r) {
  return _arrayWithHoles(e) || _iterableToArrayLimit(e, r) || _unsupportedIterableToArray(e, r) || _nonIterableRest();
}
function _toConsumableArray(e) {
  return _arrayWithoutHoles(e) || _iterableToArray(e) || _unsupportedIterableToArray(e) || _nonIterableSpread();
}
function _arrayWithoutHoles(e) {
  if (Array.isArray(e))
    return _arrayLikeToArray(e);
}
function _arrayWithHoles(e) {
  if (Array.isArray(e))
    return e;
}
function _iterableToArray(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null)
    return Array.from(e);
}
function _iterableToArrayLimit(e, r) {
  var n = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
  if (n != null) {
    var s = [], a = !0, t = !1, l, o;
    try {
      for (n = n.call(e); !(a = (l = n.next()).done) && (s.push(l.value), !(r && s.length === r)); a = !0)
        ;
    } catch (c) {
      t = !0, o = c;
    } finally {
      try {
        !a && n.return != null && n.return();
      } finally {
        if (t)
          throw o;
      }
    }
    return s;
  }
}
function _unsupportedIterableToArray(e, r) {
  if (e) {
    if (typeof e == "string")
      return _arrayLikeToArray(e, r);
    var n = Object.prototype.toString.call(e).slice(8, -1);
    if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set")
      return Array.from(e);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray(e, r);
  }
}
function _arrayLikeToArray(e, r) {
  (r == null || r > e.length) && (r = e.length);
  for (var n = 0, s = new Array(r); n < r; n++)
    s[n] = e[n];
  return s;
}
function _nonIterableSpread() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function _nonIterableRest() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
var noop$1 = function e() {
}, _WINDOW = {}, _DOCUMENT = {}, _MUTATION_OBSERVER = null, _PERFORMANCE = {
  mark: noop$1,
  measure: noop$1
};
try {
  typeof window < "u" && (_WINDOW = window), typeof document < "u" && (_DOCUMENT = document), typeof MutationObserver < "u" && (_MUTATION_OBSERVER = MutationObserver), typeof performance < "u" && (_PERFORMANCE = performance);
} catch (e) {
}
var _ref = _WINDOW.navigator || {}, _ref$userAgent = _ref.userAgent, userAgent = _ref$userAgent === void 0 ? "" : _ref$userAgent, WINDOW = _WINDOW, DOCUMENT = _DOCUMENT, MUTATION_OBSERVER = _MUTATION_OBSERVER, PERFORMANCE = _PERFORMANCE;
WINDOW.document;
var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener == "function" && typeof DOCUMENT.createElement == "function", IS_IE = ~userAgent.indexOf("MSIE") || ~userAgent.indexOf("Trident/"), _familyProxy, _familyProxy2, _familyProxy3, _familyProxy4, _familyProxy5, NAMESPACE_IDENTIFIER = "___FONT_AWESOME___", UNITS_IN_GRID = 16, DEFAULT_CSS_PREFIX = "fa", DEFAULT_REPLACEMENT_CLASS = "svg-inline--fa", DATA_FA_I2SVG = "data-fa-i2svg", DATA_FA_PSEUDO_ELEMENT = "data-fa-pseudo-element", DATA_FA_PSEUDO_ELEMENT_PENDING = "data-fa-pseudo-element-pending", DATA_PREFIX = "data-prefix", DATA_ICON = "data-icon", HTML_CLASS_I2SVG_BASE_CLASS = "fontawesome-i2svg", MUTATION_APPROACH_ASYNC = "async", TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ["HTML", "HEAD", "STYLE", "SCRIPT"], PRODUCTION$1 = function() {
  try {
    return !0;
  } catch {
    return !1;
  }
}(), FAMILY_CLASSIC = "classic", FAMILY_SHARP = "sharp", FAMILIES = [FAMILY_CLASSIC, FAMILY_SHARP];
function familyProxy(e) {
  return new Proxy(e, {
    get: function(n, s) {
      return s in n ? n[s] : n[FAMILY_CLASSIC];
    }
  });
}
var PREFIX_TO_STYLE = familyProxy((_familyProxy = {}, _defineProperty$1(_familyProxy, FAMILY_CLASSIC, {
  fa: "solid",
  fas: "solid",
  "fa-solid": "solid",
  far: "regular",
  "fa-regular": "regular",
  fal: "light",
  "fa-light": "light",
  fat: "thin",
  "fa-thin": "thin",
  fad: "duotone",
  "fa-duotone": "duotone",
  fab: "brands",
  "fa-brands": "brands",
  fak: "kit",
  fakd: "kit",
  "fa-kit": "kit",
  "fa-kit-duotone": "kit"
}), _defineProperty$1(_familyProxy, FAMILY_SHARP, {
  fa: "solid",
  fass: "solid",
  "fa-solid": "solid",
  fasr: "regular",
  "fa-regular": "regular",
  fasl: "light",
  "fa-light": "light",
  fast: "thin",
  "fa-thin": "thin"
}), _familyProxy)), STYLE_TO_PREFIX = familyProxy((_familyProxy2 = {}, _defineProperty$1(_familyProxy2, FAMILY_CLASSIC, {
  solid: "fas",
  regular: "far",
  light: "fal",
  thin: "fat",
  duotone: "fad",
  brands: "fab",
  kit: "fak"
}), _defineProperty$1(_familyProxy2, FAMILY_SHARP, {
  solid: "fass",
  regular: "fasr",
  light: "fasl",
  thin: "fast"
}), _familyProxy2)), PREFIX_TO_LONG_STYLE = familyProxy((_familyProxy3 = {}, _defineProperty$1(_familyProxy3, FAMILY_CLASSIC, {
  fab: "fa-brands",
  fad: "fa-duotone",
  fak: "fa-kit",
  fal: "fa-light",
  far: "fa-regular",
  fas: "fa-solid",
  fat: "fa-thin"
}), _defineProperty$1(_familyProxy3, FAMILY_SHARP, {
  fass: "fa-solid",
  fasr: "fa-regular",
  fasl: "fa-light",
  fast: "fa-thin"
}), _familyProxy3)), LONG_STYLE_TO_PREFIX = familyProxy((_familyProxy4 = {}, _defineProperty$1(_familyProxy4, FAMILY_CLASSIC, {
  "fa-brands": "fab",
  "fa-duotone": "fad",
  "fa-kit": "fak",
  "fa-light": "fal",
  "fa-regular": "far",
  "fa-solid": "fas",
  "fa-thin": "fat"
}), _defineProperty$1(_familyProxy4, FAMILY_SHARP, {
  "fa-solid": "fass",
  "fa-regular": "fasr",
  "fa-light": "fasl",
  "fa-thin": "fast"
}), _familyProxy4)), ICON_SELECTION_SYNTAX_PATTERN = /fa(s|r|l|t|d|b|k|ss|sr|sl|st)?[\-\ ]/, LAYERS_TEXT_CLASSNAME = "fa-layers-text", FONT_FAMILY_PATTERN = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp|Kit)?.*/i, FONT_WEIGHT_TO_PREFIX = familyProxy((_familyProxy5 = {}, _defineProperty$1(_familyProxy5, FAMILY_CLASSIC, {
  900: "fas",
  400: "far",
  normal: "far",
  300: "fal",
  100: "fat"
}), _defineProperty$1(_familyProxy5, FAMILY_SHARP, {
  900: "fass",
  400: "fasr",
  300: "fasl",
  100: "fast"
}), _familyProxy5)), oneToTen = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], oneToTwenty = oneToTen.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]), ATTRIBUTES_WATCHED_FOR_MUTATION = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"], DUOTONE_CLASSES = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
}, prefixes = /* @__PURE__ */ new Set();
Object.keys(STYLE_TO_PREFIX[FAMILY_CLASSIC]).map(prefixes.add.bind(prefixes));
Object.keys(STYLE_TO_PREFIX[FAMILY_SHARP]).map(prefixes.add.bind(prefixes));
var RESERVED_CLASSES = [].concat(FAMILIES, _toConsumableArray(prefixes), ["2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", DUOTONE_CLASSES.GROUP, DUOTONE_CLASSES.SWAP_OPACITY, DUOTONE_CLASSES.PRIMARY, DUOTONE_CLASSES.SECONDARY]).concat(oneToTen.map(function(e) {
  return "".concat(e, "x");
})).concat(oneToTwenty.map(function(e) {
  return "w-".concat(e);
})), initial = WINDOW.FontAwesomeConfig || {};
function getAttrConfig(e) {
  var r = DOCUMENT.querySelector("script[" + e + "]");
  if (r)
    return r.getAttribute(e);
}
function coerce(e) {
  return e === "" ? !0 : e === "false" ? !1 : e === "true" ? !0 : e;
}
if (DOCUMENT && typeof DOCUMENT.querySelector == "function") {
  var attrs = [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]];
  attrs.forEach(function(e) {
    var r = _slicedToArray(e, 2), n = r[0], s = r[1], a = coerce(getAttrConfig(n));
    a != null && (initial[s] = a);
  });
}
var _default = {
  styleDefault: "solid",
  familyDefault: "classic",
  cssPrefix: DEFAULT_CSS_PREFIX,
  replacementClass: DEFAULT_REPLACEMENT_CLASS,
  autoReplaceSvg: !0,
  autoAddCss: !0,
  autoA11y: !0,
  searchPseudoElements: !1,
  observeMutations: !0,
  mutateApproach: "async",
  keepOriginalSource: !0,
  measurePerformance: !1,
  showMissingIcons: !0
};
initial.familyPrefix && (initial.cssPrefix = initial.familyPrefix);
var _config = _objectSpread2$1(_objectSpread2$1({}, _default), initial);
_config.autoReplaceSvg || (_config.observeMutations = !1);
var config = {};
Object.keys(_default).forEach(function(e) {
  Object.defineProperty(config, e, {
    enumerable: !0,
    set: function(n) {
      _config[e] = n, _onChangeCb.forEach(function(s) {
        return s(config);
      });
    },
    get: function() {
      return _config[e];
    }
  });
});
Object.defineProperty(config, "familyPrefix", {
  enumerable: !0,
  set: function e(r) {
    _config.cssPrefix = r, _onChangeCb.forEach(function(n) {
      return n(config);
    });
  },
  get: function e() {
    return _config.cssPrefix;
  }
});
WINDOW.FontAwesomeConfig = config;
var _onChangeCb = [];
function onChange(e) {
  return _onChangeCb.push(e), function() {
    _onChangeCb.splice(_onChangeCb.indexOf(e), 1);
  };
}
var d$1 = UNITS_IN_GRID, meaninglessTransform = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: !1,
  flipY: !1
};
function insertCss(e) {
  if (!(!e || !IS_DOM)) {
    var r = DOCUMENT.createElement("style");
    r.setAttribute("type", "text/css"), r.innerHTML = e;
    for (var n = DOCUMENT.head.childNodes, s = null, a = n.length - 1; a > -1; a--) {
      var t = n[a], l = (t.tagName || "").toUpperCase();
      ["STYLE", "LINK"].indexOf(l) > -1 && (s = t);
    }
    return DOCUMENT.head.insertBefore(r, s), e;
  }
}
var idPool = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function nextUniqueId() {
  for (var e = 12, r = ""; e-- > 0; )
    r += idPool[Math.random() * 62 | 0];
  return r;
}
function toArray$1(e) {
  for (var r = [], n = (e || []).length >>> 0; n--; )
    r[n] = e[n];
  return r;
}
function classArray(e) {
  return e.classList ? toArray$1(e.classList) : (e.getAttribute("class") || "").split(" ").filter(function(r) {
    return r;
  });
}
function htmlEscape(e) {
  return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function joinAttributes(e) {
  return Object.keys(e || {}).reduce(function(r, n) {
    return r + "".concat(n, '="').concat(htmlEscape(e[n]), '" ');
  }, "").trim();
}
function joinStyles(e) {
  return Object.keys(e || {}).reduce(function(r, n) {
    return r + "".concat(n, ": ").concat(e[n].trim(), ";");
  }, "");
}
function transformIsMeaningful(e) {
  return e.size !== meaninglessTransform.size || e.x !== meaninglessTransform.x || e.y !== meaninglessTransform.y || e.rotate !== meaninglessTransform.rotate || e.flipX || e.flipY;
}
function transformForSvg(e) {
  var r = e.transform, n = e.containerWidth, s = e.iconWidth, a = {
    transform: "translate(".concat(n / 2, " 256)")
  }, t = "translate(".concat(r.x * 32, ", ").concat(r.y * 32, ") "), l = "scale(".concat(r.size / 16 * (r.flipX ? -1 : 1), ", ").concat(r.size / 16 * (r.flipY ? -1 : 1), ") "), o = "rotate(".concat(r.rotate, " 0 0)"), c = {
    transform: "".concat(t, " ").concat(l, " ").concat(o)
  }, _ = {
    transform: "translate(".concat(s / 2 * -1, " -256)")
  };
  return {
    outer: a,
    inner: c,
    path: _
  };
}
function transformForCss(e) {
  var r = e.transform, n = e.width, s = n === void 0 ? UNITS_IN_GRID : n, a = e.height, t = a === void 0 ? UNITS_IN_GRID : a, l = e.startCentered, o = l === void 0 ? !1 : l, c = "";
  return o && IS_IE ? c += "translate(".concat(r.x / d$1 - s / 2, "em, ").concat(r.y / d$1 - t / 2, "em) ") : o ? c += "translate(calc(-50% + ".concat(r.x / d$1, "em), calc(-50% + ").concat(r.y / d$1, "em)) ") : c += "translate(".concat(r.x / d$1, "em, ").concat(r.y / d$1, "em) "), c += "scale(".concat(r.size / d$1 * (r.flipX ? -1 : 1), ", ").concat(r.size / d$1 * (r.flipY ? -1 : 1), ") "), c += "rotate(".concat(r.rotate, "deg) "), c;
}
var baseStyles = `:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Solid";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Regular";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Light";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Thin";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  -webkit-transform-origin: center center;
          transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-counter-scale, 0.25));
          transform: scale(var(--fa-counter-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom right;
          transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: bottom left;
          transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top right;
          transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  -webkit-transform: scale(var(--fa-layers-scale, 0.25));
          transform: scale(var(--fa-layers-scale, 0.25));
  -webkit-transform-origin: top left;
          transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(var(--fa-li-width, 2em) * -1);
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  -webkit-animation-name: fa-beat;
          animation-name: fa-beat;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  -webkit-animation-name: fa-bounce;
          animation-name: fa-bounce;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  -webkit-animation-name: fa-fade;
          animation-name: fa-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  -webkit-animation-name: fa-beat-fade;
          animation-name: fa-beat-fade;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  -webkit-animation-name: fa-flip;
          animation-name: fa-flip;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);
          animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  -webkit-animation-name: fa-shake;
          animation-name: fa-shake;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-delay: var(--fa-animation-delay, 0s);
          animation-delay: var(--fa-animation-delay, 0s);
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 2s);
          animation-duration: var(--fa-animation-duration, 2s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, linear);
          animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  -webkit-animation-name: fa-spin;
          animation-name: fa-spin;
  -webkit-animation-direction: var(--fa-animation-direction, normal);
          animation-direction: var(--fa-animation-direction, normal);
  -webkit-animation-duration: var(--fa-animation-duration, 1s);
          animation-duration: var(--fa-animation-duration, 1s);
  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);
          animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));
          animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    -webkit-animation-delay: -1ms;
            animation-delay: -1ms;
    -webkit-animation-duration: 1ms;
            animation-duration: 1ms;
    -webkit-animation-iteration-count: 1;
            animation-iteration-count: 1;
    -webkit-transition-delay: 0s;
            transition-delay: 0s;
    -webkit-transition-duration: 0s;
            transition-duration: 0s;
  }
}
@-webkit-keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-beat {
  0%, 90% {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  45% {
    -webkit-transform: scale(var(--fa-beat-scale, 1.25));
            transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@-webkit-keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-bounce {
  0% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  10% {
    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
  100% {
    -webkit-transform: scale(1, 1) translateY(0);
            transform: scale(1, 1) translateY(0);
  }
}
@-webkit-keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@-webkit-keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  50% {
    opacity: 1;
    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));
            transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@-webkit-keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-flip {
  50% {
    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@-webkit-keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@keyframes fa-shake {
  0% {
    -webkit-transform: rotate(-15deg);
            transform: rotate(-15deg);
  }
  4% {
    -webkit-transform: rotate(15deg);
            transform: rotate(15deg);
  }
  8%, 24% {
    -webkit-transform: rotate(-18deg);
            transform: rotate(-18deg);
  }
  12%, 28% {
    -webkit-transform: rotate(18deg);
            transform: rotate(18deg);
  }
  16% {
    -webkit-transform: rotate(-22deg);
            transform: rotate(-22deg);
  }
  20% {
    -webkit-transform: rotate(22deg);
            transform: rotate(22deg);
  }
  32% {
    -webkit-transform: rotate(-12deg);
            transform: rotate(-12deg);
  }
  36% {
    -webkit-transform: rotate(12deg);
            transform: rotate(12deg);
  }
  40%, 100% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
}
@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
}

.fa-rotate-180 {
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.fa-rotate-270 {
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg);
}

.fa-flip-horizontal {
  -webkit-transform: scale(-1, 1);
          transform: scale(-1, 1);
}

.fa-flip-vertical {
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  -webkit-transform: scale(-1, -1);
          transform: scale(-1, -1);
}

.fa-rotate-by {
  -webkit-transform: rotate(var(--fa-rotate-angle, none));
          transform: rotate(var(--fa-rotate-angle, none));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}

.fad.fa-inverse,
.fa-duotone.fa-inverse {
  color: var(--fa-inverse, #fff);
}`;
function css() {
  var e = DEFAULT_CSS_PREFIX, r = DEFAULT_REPLACEMENT_CLASS, n = config.cssPrefix, s = config.replacementClass, a = baseStyles;
  if (n !== e || s !== r) {
    var t = new RegExp("\\.".concat(e, "\\-"), "g"), l = new RegExp("\\--".concat(e, "\\-"), "g"), o = new RegExp("\\.".concat(r), "g");
    a = a.replace(t, ".".concat(n, "-")).replace(l, "--".concat(n, "-")).replace(o, ".".concat(s));
  }
  return a;
}
var _cssInserted = !1;
function ensureCss() {
  config.autoAddCss && !_cssInserted && (insertCss(css()), _cssInserted = !0);
}
var InjectCSS = {
  mixout: function e() {
    return {
      dom: {
        css,
        insertCss: ensureCss
      }
    };
  },
  hooks: function e() {
    return {
      beforeDOMElementCreation: function() {
        ensureCss();
      },
      beforeI2svg: function() {
        ensureCss();
      }
    };
  }
}, w$1 = WINDOW || {};
w$1[NAMESPACE_IDENTIFIER] || (w$1[NAMESPACE_IDENTIFIER] = {});
w$1[NAMESPACE_IDENTIFIER].styles || (w$1[NAMESPACE_IDENTIFIER].styles = {});
w$1[NAMESPACE_IDENTIFIER].hooks || (w$1[NAMESPACE_IDENTIFIER].hooks = {});
w$1[NAMESPACE_IDENTIFIER].shims || (w$1[NAMESPACE_IDENTIFIER].shims = []);
var namespace = w$1[NAMESPACE_IDENTIFIER], functions = [], listener = function e() {
  DOCUMENT.removeEventListener("DOMContentLoaded", e), loaded = 1, functions.map(function(r) {
    return r();
  });
}, loaded = !1;
IS_DOM && (loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState), loaded || DOCUMENT.addEventListener("DOMContentLoaded", listener));
function domready(e) {
  IS_DOM && (loaded ? setTimeout(e, 0) : functions.push(e));
}
function toHtml(e) {
  var r = e.tag, n = e.attributes, s = n === void 0 ? {} : n, a = e.children, t = a === void 0 ? [] : a;
  return typeof e == "string" ? htmlEscape(e) : "<".concat(r, " ").concat(joinAttributes(s), ">").concat(t.map(toHtml).join(""), "</").concat(r, ">");
}
function iconFromMapping(e, r, n) {
  if (e && e[r] && e[r][n])
    return {
      prefix: r,
      iconName: n,
      icon: e[r][n]
    };
}
var bindInternal4 = function e(r, n) {
  return function(s, a, t, l) {
    return r.call(n, s, a, t, l);
  };
}, reduce = function e(r, n, s, a) {
  var t = Object.keys(r), l = t.length, o = a !== void 0 ? bindInternal4(n, a) : n, c, _, u;
  for (s === void 0 ? (c = 1, u = r[t[0]]) : (c = 0, u = s); c < l; c++)
    _ = t[c], u = o(u, r[_], _, r);
  return u;
};
function ucs2decode(e) {
  for (var r = [], n = 0, s = e.length; n < s; ) {
    var a = e.charCodeAt(n++);
    if (a >= 55296 && a <= 56319 && n < s) {
      var t = e.charCodeAt(n++);
      (t & 64512) == 56320 ? r.push(((a & 1023) << 10) + (t & 1023) + 65536) : (r.push(a), n--);
    } else
      r.push(a);
  }
  return r;
}
function toHex(e) {
  var r = ucs2decode(e);
  return r.length === 1 ? r[0].toString(16) : null;
}
function codePointAt(e, r) {
  var n = e.length, s = e.charCodeAt(r), a;
  return s >= 55296 && s <= 56319 && n > r + 1 && (a = e.charCodeAt(r + 1), a >= 56320 && a <= 57343) ? (s - 55296) * 1024 + a - 56320 + 65536 : s;
}
function normalizeIcons(e) {
  return Object.keys(e).reduce(function(r, n) {
    var s = e[n], a = !!s.icon;
    return a ? r[s.iconName] = s.icon : r[n] = s, r;
  }, {});
}
function defineIcons(e, r) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, s = n.skipHooks, a = s === void 0 ? !1 : s, t = normalizeIcons(r);
  typeof namespace.hooks.addPack == "function" && !a ? namespace.hooks.addPack(e, normalizeIcons(r)) : namespace.styles[e] = _objectSpread2$1(_objectSpread2$1({}, namespace.styles[e] || {}), t), e === "fas" && defineIcons("fa", r);
}
var _LONG_STYLE, _PREFIXES, _PREFIXES_FOR_FAMILY, styles = namespace.styles, shims = namespace.shims, LONG_STYLE = (_LONG_STYLE = {}, _defineProperty$1(_LONG_STYLE, FAMILY_CLASSIC, Object.values(PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC])), _defineProperty$1(_LONG_STYLE, FAMILY_SHARP, Object.values(PREFIX_TO_LONG_STYLE[FAMILY_SHARP])), _LONG_STYLE), _defaultUsablePrefix = null, _byUnicode = {}, _byLigature = {}, _byOldName = {}, _byOldUnicode = {}, _byAlias = {}, PREFIXES = (_PREFIXES = {}, _defineProperty$1(_PREFIXES, FAMILY_CLASSIC, Object.keys(PREFIX_TO_STYLE[FAMILY_CLASSIC])), _defineProperty$1(_PREFIXES, FAMILY_SHARP, Object.keys(PREFIX_TO_STYLE[FAMILY_SHARP])), _PREFIXES);
function isReserved(e) {
  return ~RESERVED_CLASSES.indexOf(e);
}
function getIconName(e, r) {
  var n = r.split("-"), s = n[0], a = n.slice(1).join("-");
  return s === e && a !== "" && !isReserved(a) ? a : null;
}
var build = function e() {
  var r = function(t) {
    return reduce(styles, function(l, o, c) {
      return l[c] = reduce(o, t, {}), l;
    }, {});
  };
  _byUnicode = r(function(a, t, l) {
    if (t[3] && (a[t[3]] = l), t[2]) {
      var o = t[2].filter(function(c) {
        return typeof c == "number";
      });
      o.forEach(function(c) {
        a[c.toString(16)] = l;
      });
    }
    return a;
  }), _byLigature = r(function(a, t, l) {
    if (a[l] = l, t[2]) {
      var o = t[2].filter(function(c) {
        return typeof c == "string";
      });
      o.forEach(function(c) {
        a[c] = l;
      });
    }
    return a;
  }), _byAlias = r(function(a, t, l) {
    var o = t[2];
    return a[l] = l, o.forEach(function(c) {
      a[c] = l;
    }), a;
  });
  var n = "far" in styles || config.autoFetchSvg, s = reduce(shims, function(a, t) {
    var l = t[0], o = t[1], c = t[2];
    return o === "far" && !n && (o = "fas"), typeof l == "string" && (a.names[l] = {
      prefix: o,
      iconName: c
    }), typeof l == "number" && (a.unicodes[l.toString(16)] = {
      prefix: o,
      iconName: c
    }), a;
  }, {
    names: {},
    unicodes: {}
  });
  _byOldName = s.names, _byOldUnicode = s.unicodes, _defaultUsablePrefix = getCanonicalPrefix(config.styleDefault, {
    family: config.familyDefault
  });
};
onChange(function(e) {
  _defaultUsablePrefix = getCanonicalPrefix(e.styleDefault, {
    family: config.familyDefault
  });
});
build();
function byUnicode(e, r) {
  return (_byUnicode[e] || {})[r];
}
function byLigature(e, r) {
  return (_byLigature[e] || {})[r];
}
function byAlias(e, r) {
  return (_byAlias[e] || {})[r];
}
function byOldName(e) {
  return _byOldName[e] || {
    prefix: null,
    iconName: null
  };
}
function byOldUnicode(e) {
  var r = _byOldUnicode[e], n = byUnicode("fas", e);
  return r || (n ? {
    prefix: "fas",
    iconName: n
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function getDefaultUsablePrefix() {
  return _defaultUsablePrefix;
}
var emptyCanonicalIcon = function e() {
  return {
    prefix: null,
    iconName: null,
    rest: []
  };
};
function getCanonicalPrefix(e) {
  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = r.family, s = n === void 0 ? FAMILY_CLASSIC : n, a = PREFIX_TO_STYLE[s][e], t = STYLE_TO_PREFIX[s][e] || STYLE_TO_PREFIX[s][a], l = e in namespace.styles ? e : null;
  return t || l || null;
}
var PREFIXES_FOR_FAMILY = (_PREFIXES_FOR_FAMILY = {}, _defineProperty$1(_PREFIXES_FOR_FAMILY, FAMILY_CLASSIC, Object.keys(PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC])), _defineProperty$1(_PREFIXES_FOR_FAMILY, FAMILY_SHARP, Object.keys(PREFIX_TO_LONG_STYLE[FAMILY_SHARP])), _PREFIXES_FOR_FAMILY);
function getCanonicalIcon(e) {
  var r, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, s = n.skipLookups, a = s === void 0 ? !1 : s, t = (r = {}, _defineProperty$1(r, FAMILY_CLASSIC, "".concat(config.cssPrefix, "-").concat(FAMILY_CLASSIC)), _defineProperty$1(r, FAMILY_SHARP, "".concat(config.cssPrefix, "-").concat(FAMILY_SHARP)), r), l = null, o = FAMILY_CLASSIC;
  (e.includes(t[FAMILY_CLASSIC]) || e.some(function(_) {
    return PREFIXES_FOR_FAMILY[FAMILY_CLASSIC].includes(_);
  })) && (o = FAMILY_CLASSIC), (e.includes(t[FAMILY_SHARP]) || e.some(function(_) {
    return PREFIXES_FOR_FAMILY[FAMILY_SHARP].includes(_);
  })) && (o = FAMILY_SHARP);
  var c = e.reduce(function(_, u) {
    var y = getIconName(config.cssPrefix, u);
    if (styles[u] ? (u = LONG_STYLE[o].includes(u) ? LONG_STYLE_TO_PREFIX[o][u] : u, l = u, _.prefix = u) : PREFIXES[o].indexOf(u) > -1 ? (l = u, _.prefix = getCanonicalPrefix(u, {
      family: o
    })) : y ? _.iconName = y : u !== config.replacementClass && u !== t[FAMILY_CLASSIC] && u !== t[FAMILY_SHARP] && _.rest.push(u), !a && _.prefix && _.iconName) {
      var g = l === "fa" ? byOldName(_.iconName) : {}, Ee = byAlias(_.prefix, _.iconName);
      g.prefix && (l = null), _.iconName = g.iconName || Ee || _.iconName, _.prefix = g.prefix || _.prefix, _.prefix === "far" && !styles.far && styles.fas && !config.autoFetchSvg && (_.prefix = "fas");
    }
    return _;
  }, emptyCanonicalIcon());
  return (e.includes("fa-brands") || e.includes("fab")) && (c.prefix = "fab"), (e.includes("fa-duotone") || e.includes("fad")) && (c.prefix = "fad"), !c.prefix && o === FAMILY_SHARP && (styles.fass || config.autoFetchSvg) && (c.prefix = "fass", c.iconName = byAlias(c.prefix, c.iconName) || c.iconName), (c.prefix === "fa" || l === "fa") && (c.prefix = getDefaultUsablePrefix() || "fas"), c;
}
var Library = /* @__PURE__ */ function() {
  function e() {
    _classCallCheck(this, e), this.definitions = {};
  }
  return _createClass(e, [{
    key: "add",
    value: function() {
      for (var n = this, s = arguments.length, a = new Array(s), t = 0; t < s; t++)
        a[t] = arguments[t];
      var l = a.reduce(this._pullDefinitions, {});
      Object.keys(l).forEach(function(o) {
        n.definitions[o] = _objectSpread2$1(_objectSpread2$1({}, n.definitions[o] || {}), l[o]), defineIcons(o, l[o]);
        var c = PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC][o];
        c && defineIcons(c, l[o]), build();
      });
    }
  }, {
    key: "reset",
    value: function() {
      this.definitions = {};
    }
  }, {
    key: "_pullDefinitions",
    value: function(n, s) {
      var a = s.prefix && s.iconName && s.icon ? {
        0: s
      } : s;
      return Object.keys(a).map(function(t) {
        var l = a[t], o = l.prefix, c = l.iconName, _ = l.icon, u = _[2];
        n[o] || (n[o] = {}), u.length > 0 && u.forEach(function(y) {
          typeof y == "string" && (n[o][y] = _);
        }), n[o][c] = _;
      }), n;
    }
  }]), e;
}(), _plugins = [], _hooks = {}, providers = {}, defaultProviderKeys = Object.keys(providers);
function registerPlugins(e, r) {
  var n = r.mixoutsTo;
  return _plugins = e, _hooks = {}, Object.keys(providers).forEach(function(s) {
    defaultProviderKeys.indexOf(s) === -1 && delete providers[s];
  }), _plugins.forEach(function(s) {
    var a = s.mixout ? s.mixout() : {};
    if (Object.keys(a).forEach(function(l) {
      typeof a[l] == "function" && (n[l] = a[l]), _typeof$1(a[l]) === "object" && Object.keys(a[l]).forEach(function(o) {
        n[l] || (n[l] = {}), n[l][o] = a[l][o];
      });
    }), s.hooks) {
      var t = s.hooks();
      Object.keys(t).forEach(function(l) {
        _hooks[l] || (_hooks[l] = []), _hooks[l].push(t[l]);
      });
    }
    s.provides && s.provides(providers);
  }), n;
}
function chainHooks(e, r) {
  for (var n = arguments.length, s = new Array(n > 2 ? n - 2 : 0), a = 2; a < n; a++)
    s[a - 2] = arguments[a];
  var t = _hooks[e] || [];
  return t.forEach(function(l) {
    r = l.apply(null, [r].concat(s));
  }), r;
}
function callHooks(e) {
  for (var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++)
    n[s - 1] = arguments[s];
  var a = _hooks[e] || [];
  a.forEach(function(t) {
    t.apply(null, n);
  });
}
function callProvided() {
  var e = arguments[0], r = Array.prototype.slice.call(arguments, 1);
  return providers[e] ? providers[e].apply(null, r) : void 0;
}
function findIconDefinition(e) {
  e.prefix === "fa" && (e.prefix = "fas");
  var r = e.iconName, n = e.prefix || getDefaultUsablePrefix();
  if (r)
    return r = byAlias(n, r) || r, iconFromMapping(library.definitions, n, r) || iconFromMapping(namespace.styles, n, r);
}
var library = new Library(), noAuto = function e() {
  config.autoReplaceSvg = !1, config.observeMutations = !1, callHooks("noAuto");
}, dom = {
  i2svg: function e() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return IS_DOM ? (callHooks("beforeI2svg", r), callProvided("pseudoElements2svg", r), callProvided("i2svg", r)) : Promise.reject("Operation requires a DOM of some kind.");
  },
  watch: function e() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = r.autoReplaceSvgRoot;
    config.autoReplaceSvg === !1 && (config.autoReplaceSvg = !0), config.observeMutations = !0, domready(function() {
      autoReplace({
        autoReplaceSvgRoot: n
      }), callHooks("watch", r);
    });
  }
}, parse = {
  icon: function e(r) {
    if (r === null)
      return null;
    if (_typeof$1(r) === "object" && r.prefix && r.iconName)
      return {
        prefix: r.prefix,
        iconName: byAlias(r.prefix, r.iconName) || r.iconName
      };
    if (Array.isArray(r) && r.length === 2) {
      var n = r[1].indexOf("fa-") === 0 ? r[1].slice(3) : r[1], s = getCanonicalPrefix(r[0]);
      return {
        prefix: s,
        iconName: byAlias(s, n) || n
      };
    }
    if (typeof r == "string" && (r.indexOf("".concat(config.cssPrefix, "-")) > -1 || r.match(ICON_SELECTION_SYNTAX_PATTERN))) {
      var a = getCanonicalIcon(r.split(" "), {
        skipLookups: !0
      });
      return {
        prefix: a.prefix || getDefaultUsablePrefix(),
        iconName: byAlias(a.prefix, a.iconName) || a.iconName
      };
    }
    if (typeof r == "string") {
      var t = getDefaultUsablePrefix();
      return {
        prefix: t,
        iconName: byAlias(t, r) || r
      };
    }
  }
}, api = {
  noAuto,
  config,
  dom,
  parse,
  library,
  findIconDefinition,
  toHtml
}, autoReplace = function e() {
  var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = r.autoReplaceSvgRoot, s = n === void 0 ? DOCUMENT : n;
  (Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg && api.dom.i2svg({
    node: s
  });
};
function domVariants(e, r) {
  return Object.defineProperty(e, "abstract", {
    get: r
  }), Object.defineProperty(e, "html", {
    get: function() {
      return e.abstract.map(function(s) {
        return toHtml(s);
      });
    }
  }), Object.defineProperty(e, "node", {
    get: function() {
      if (IS_DOM) {
        var s = DOCUMENT.createElement("div");
        return s.innerHTML = e.html, s.children;
      }
    }
  }), e;
}
function asIcon(e) {
  var r = e.children, n = e.main, s = e.mask, a = e.attributes, t = e.styles, l = e.transform;
  if (transformIsMeaningful(l) && n.found && !s.found) {
    var o = n.width, c = n.height, _ = {
      x: o / c / 2,
      y: 0.5
    };
    a.style = joinStyles(_objectSpread2$1(_objectSpread2$1({}, t), {}, {
      "transform-origin": "".concat(_.x + l.x / 16, "em ").concat(_.y + l.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes: a,
    children: r
  }];
}
function asSymbol(e) {
  var r = e.prefix, n = e.iconName, s = e.children, a = e.attributes, t = e.symbol, l = t === !0 ? "".concat(r, "-").concat(config.cssPrefix, "-").concat(n) : t;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: _objectSpread2$1(_objectSpread2$1({}, a), {}, {
        id: l
      }),
      children: s
    }]
  }];
}
function makeInlineSvgAbstract(e) {
  var r = e.icons, n = r.main, s = r.mask, a = e.prefix, t = e.iconName, l = e.transform, o = e.symbol, c = e.title, _ = e.maskId, u = e.titleId, y = e.extra, g = e.watchable, Ee = g === void 0 ? !1 : g, Ve = s.found ? s : n, Me = Ve.width, B = Ve.height, Pe = a === "fak", k = [config.replacementClass, t ? "".concat(config.cssPrefix, "-").concat(t) : ""].filter(function(D) {
    return y.classes.indexOf(D) === -1;
  }).filter(function(D) {
    return D !== "" || !!D;
  }).concat(y.classes).join(" "), b = {
    children: [],
    attributes: _objectSpread2$1(_objectSpread2$1({}, y.attributes), {}, {
      "data-prefix": a,
      "data-icon": t,
      class: k,
      role: y.attributes.role || "img",
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 ".concat(Me, " ").concat(B)
    })
  }, Le = Pe && !~y.classes.indexOf("fa-fw") ? {
    width: "".concat(Me / B * 16 * 0.0625, "em")
  } : {};
  Ee && (b.attributes[DATA_FA_I2SVG] = ""), c && (b.children.push({
    tag: "title",
    attributes: {
      id: b.attributes["aria-labelledby"] || "title-".concat(u || nextUniqueId())
    },
    children: [c]
  }), delete b.attributes.title);
  var xe = _objectSpread2$1(_objectSpread2$1({}, b), {}, {
    prefix: a,
    iconName: t,
    main: n,
    mask: s,
    maskId: _,
    transform: l,
    symbol: o,
    styles: _objectSpread2$1(_objectSpread2$1({}, Le), y.styles)
  }), ze = s.found && n.found ? callProvided("generateAbstractMask", xe) || {
    children: [],
    attributes: {}
  } : callProvided("generateAbstractIcon", xe) || {
    children: [],
    attributes: {}
  }, Se = ze.children, Te = ze.attributes;
  return xe.children = Se, xe.attributes = Te, o ? asSymbol(xe) : asIcon(xe);
}
function makeLayersTextAbstract(e) {
  var r = e.content, n = e.width, s = e.height, a = e.transform, t = e.title, l = e.extra, o = e.watchable, c = o === void 0 ? !1 : o, _ = _objectSpread2$1(_objectSpread2$1(_objectSpread2$1({}, l.attributes), t ? {
    title: t
  } : {}), {}, {
    class: l.classes.join(" ")
  });
  c && (_[DATA_FA_I2SVG] = "");
  var u = _objectSpread2$1({}, l.styles);
  transformIsMeaningful(a) && (u.transform = transformForCss({
    transform: a,
    startCentered: !0,
    width: n,
    height: s
  }), u["-webkit-transform"] = u.transform);
  var y = joinStyles(u);
  y.length > 0 && (_.style = y);
  var g = [];
  return g.push({
    tag: "span",
    attributes: _,
    children: [r]
  }), t && g.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [t]
  }), g;
}
function makeLayersCounterAbstract(e) {
  var r = e.content, n = e.title, s = e.extra, a = _objectSpread2$1(_objectSpread2$1(_objectSpread2$1({}, s.attributes), n ? {
    title: n
  } : {}), {}, {
    class: s.classes.join(" ")
  }), t = joinStyles(s.styles);
  t.length > 0 && (a.style = t);
  var l = [];
  return l.push({
    tag: "span",
    attributes: a,
    children: [r]
  }), n && l.push({
    tag: "span",
    attributes: {
      class: "sr-only"
    },
    children: [n]
  }), l;
}
var styles$1 = namespace.styles;
function asFoundIcon(e) {
  var r = e[0], n = e[1], s = e.slice(4), a = _slicedToArray(s, 1), t = a[0], l = null;
  return Array.isArray(t) ? l = {
    tag: "g",
    attributes: {
      class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.GROUP)
    },
    children: [{
      tag: "path",
      attributes: {
        class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.SECONDARY),
        fill: "currentColor",
        d: t[0]
      }
    }, {
      tag: "path",
      attributes: {
        class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.PRIMARY),
        fill: "currentColor",
        d: t[1]
      }
    }]
  } : l = {
    tag: "path",
    attributes: {
      fill: "currentColor",
      d: t
    }
  }, {
    found: !0,
    width: r,
    height: n,
    icon: l
  };
}
var missingIconResolutionMixin = {
  found: !1,
  width: 512,
  height: 512
};
function maybeNotifyMissing(e, r) {
  !PRODUCTION$1 && !config.showMissingIcons && e && console.error('Icon with name "'.concat(e, '" and prefix "').concat(r, '" is missing.'));
}
function findIcon(e, r) {
  var n = r;
  return r === "fa" && config.styleDefault !== null && (r = getDefaultUsablePrefix()), new Promise(function(s, a) {
    if (callProvided("missingIconAbstract"), n === "fa") {
      var t = byOldName(e) || {};
      e = t.iconName || e, r = t.prefix || r;
    }
    if (e && r && styles$1[r] && styles$1[r][e]) {
      var l = styles$1[r][e];
      return s(asFoundIcon(l));
    }
    maybeNotifyMissing(e, r), s(_objectSpread2$1(_objectSpread2$1({}, missingIconResolutionMixin), {}, {
      icon: config.showMissingIcons && e ? callProvided("missingIconAbstract") || {} : {}
    }));
  });
}
var noop$1$1 = function e() {
}, p = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {
  mark: noop$1$1,
  measure: noop$1$1
}, preamble = 'FA "6.5.1"', begin = function e(r) {
  return p.mark("".concat(preamble, " ").concat(r, " begins")), function() {
    return end(r);
  };
}, end = function e(r) {
  p.mark("".concat(preamble, " ").concat(r, " ends")), p.measure("".concat(preamble, " ").concat(r), "".concat(preamble, " ").concat(r, " begins"), "".concat(preamble, " ").concat(r, " ends"));
}, perf = {
  begin,
  end
}, noop$2 = function e() {
};
function isWatched(e) {
  var r = e.getAttribute ? e.getAttribute(DATA_FA_I2SVG) : null;
  return typeof r == "string";
}
function hasPrefixAndIcon(e) {
  var r = e.getAttribute ? e.getAttribute(DATA_PREFIX) : null, n = e.getAttribute ? e.getAttribute(DATA_ICON) : null;
  return r && n;
}
function hasBeenReplaced(e) {
  return e && e.classList && e.classList.contains && e.classList.contains(config.replacementClass);
}
function getMutator() {
  if (config.autoReplaceSvg === !0)
    return mutators.replace;
  var e = mutators[config.autoReplaceSvg];
  return e || mutators.replace;
}
function createElementNS(e) {
  return DOCUMENT.createElementNS("http://www.w3.org/2000/svg", e);
}
function createElement(e) {
  return DOCUMENT.createElement(e);
}
function convertSVG(e) {
  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = r.ceFn, s = n === void 0 ? e.tag === "svg" ? createElementNS : createElement : n;
  if (typeof e == "string")
    return DOCUMENT.createTextNode(e);
  var a = s(e.tag);
  Object.keys(e.attributes || []).forEach(function(l) {
    a.setAttribute(l, e.attributes[l]);
  });
  var t = e.children || [];
  return t.forEach(function(l) {
    a.appendChild(convertSVG(l, {
      ceFn: s
    }));
  }), a;
}
function nodeAsComment(e) {
  var r = " ".concat(e.outerHTML, " ");
  return r = "".concat(r, "Font Awesome fontawesome.com "), r;
}
var mutators = {
  replace: function e(r) {
    var n = r[0];
    if (n.parentNode)
      if (r[1].forEach(function(a) {
        n.parentNode.insertBefore(convertSVG(a), n);
      }), n.getAttribute(DATA_FA_I2SVG) === null && config.keepOriginalSource) {
        var s = DOCUMENT.createComment(nodeAsComment(n));
        n.parentNode.replaceChild(s, n);
      } else
        n.remove();
  },
  nest: function e(r) {
    var n = r[0], s = r[1];
    if (~classArray(n).indexOf(config.replacementClass))
      return mutators.replace(r);
    var a = new RegExp("".concat(config.cssPrefix, "-.*"));
    if (delete s[0].attributes.id, s[0].attributes.class) {
      var t = s[0].attributes.class.split(" ").reduce(function(o, c) {
        return c === config.replacementClass || c.match(a) ? o.toSvg.push(c) : o.toNode.push(c), o;
      }, {
        toNode: [],
        toSvg: []
      });
      s[0].attributes.class = t.toSvg.join(" "), t.toNode.length === 0 ? n.removeAttribute("class") : n.setAttribute("class", t.toNode.join(" "));
    }
    var l = s.map(function(o) {
      return toHtml(o);
    }).join(`
`);
    n.setAttribute(DATA_FA_I2SVG, ""), n.innerHTML = l;
  }
};
function performOperationSync(e) {
  e();
}
function perform(e, r) {
  var n = typeof r == "function" ? r : noop$2;
  if (e.length === 0)
    n();
  else {
    var s = performOperationSync;
    config.mutateApproach === MUTATION_APPROACH_ASYNC && (s = WINDOW.requestAnimationFrame || performOperationSync), s(function() {
      var a = getMutator(), t = perf.begin("mutate");
      e.map(a), t(), n();
    });
  }
}
var disabled = !1;
function disableObservation() {
  disabled = !0;
}
function enableObservation() {
  disabled = !1;
}
var mo = null;
function observe(e) {
  if (MUTATION_OBSERVER && config.observeMutations) {
    var r = e.treeCallback, n = r === void 0 ? noop$2 : r, s = e.nodeCallback, a = s === void 0 ? noop$2 : s, t = e.pseudoElementsCallback, l = t === void 0 ? noop$2 : t, o = e.observeMutationsRoot, c = o === void 0 ? DOCUMENT : o;
    mo = new MUTATION_OBSERVER(function(_) {
      if (!disabled) {
        var u = getDefaultUsablePrefix();
        toArray$1(_).forEach(function(y) {
          if (y.type === "childList" && y.addedNodes.length > 0 && !isWatched(y.addedNodes[0]) && (config.searchPseudoElements && l(y.target), n(y.target)), y.type === "attributes" && y.target.parentNode && config.searchPseudoElements && l(y.target.parentNode), y.type === "attributes" && isWatched(y.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(y.attributeName))
            if (y.attributeName === "class" && hasPrefixAndIcon(y.target)) {
              var g = getCanonicalIcon(classArray(y.target)), Ee = g.prefix, Ve = g.iconName;
              y.target.setAttribute(DATA_PREFIX, Ee || u), Ve && y.target.setAttribute(DATA_ICON, Ve);
            } else
              hasBeenReplaced(y.target) && a(y.target);
        });
      }
    }), IS_DOM && mo.observe(c, {
      childList: !0,
      attributes: !0,
      characterData: !0,
      subtree: !0
    });
  }
}
function disconnect() {
  mo && mo.disconnect();
}
function styleParser(e) {
  var r = e.getAttribute("style"), n = [];
  return r && (n = r.split(";").reduce(function(s, a) {
    var t = a.split(":"), l = t[0], o = t.slice(1);
    return l && o.length > 0 && (s[l] = o.join(":").trim()), s;
  }, {})), n;
}
function classParser(e) {
  var r = e.getAttribute("data-prefix"), n = e.getAttribute("data-icon"), s = e.innerText !== void 0 ? e.innerText.trim() : "", a = getCanonicalIcon(classArray(e));
  return a.prefix || (a.prefix = getDefaultUsablePrefix()), r && n && (a.prefix = r, a.iconName = n), a.iconName && a.prefix || (a.prefix && s.length > 0 && (a.iconName = byLigature(a.prefix, e.innerText) || byUnicode(a.prefix, toHex(e.innerText))), !a.iconName && config.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (a.iconName = e.firstChild.data)), a;
}
function attributesParser(e) {
  var r = toArray$1(e.attributes).reduce(function(a, t) {
    return a.name !== "class" && a.name !== "style" && (a[t.name] = t.value), a;
  }, {}), n = e.getAttribute("title"), s = e.getAttribute("data-fa-title-id");
  return config.autoA11y && (n ? r["aria-labelledby"] = "".concat(config.replacementClass, "-title-").concat(s || nextUniqueId()) : (r["aria-hidden"] = "true", r.focusable = "false")), r;
}
function blankMeta() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: meaninglessTransform,
    symbol: !1,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function parseMeta(e) {
  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: !0
  }, n = classParser(e), s = n.iconName, a = n.prefix, t = n.rest, l = attributesParser(e), o = chainHooks("parseNodeAttributes", {}, e), c = r.styleParser ? styleParser(e) : [];
  return _objectSpread2$1({
    iconName: s,
    title: e.getAttribute("title"),
    titleId: e.getAttribute("data-fa-title-id"),
    prefix: a,
    transform: meaninglessTransform,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: !1,
    extra: {
      classes: t,
      styles: c,
      attributes: l
    }
  }, o);
}
var styles$2 = namespace.styles;
function generateMutation(e) {
  var r = config.autoReplaceSvg === "nest" ? parseMeta(e, {
    styleParser: !1
  }) : parseMeta(e);
  return ~r.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME) ? callProvided("generateLayersText", e, r) : callProvided("generateSvgReplacementMutation", e, r);
}
var knownPrefixes = /* @__PURE__ */ new Set();
FAMILIES.map(function(e) {
  knownPrefixes.add("fa-".concat(e));
});
Object.keys(PREFIX_TO_STYLE[FAMILY_CLASSIC]).map(knownPrefixes.add.bind(knownPrefixes));
Object.keys(PREFIX_TO_STYLE[FAMILY_SHARP]).map(knownPrefixes.add.bind(knownPrefixes));
knownPrefixes = _toConsumableArray(knownPrefixes);
function onTree(e) {
  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!IS_DOM)
    return Promise.resolve();
  var n = DOCUMENT.documentElement.classList, s = function(y) {
    return n.add("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(y));
  }, a = function(y) {
    return n.remove("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(y));
  }, t = config.autoFetchSvg ? knownPrefixes : FAMILIES.map(function(u) {
    return "fa-".concat(u);
  }).concat(Object.keys(styles$2));
  t.includes("fa") || t.push("fa");
  var l = [".".concat(LAYERS_TEXT_CLASSNAME, ":not([").concat(DATA_FA_I2SVG, "])")].concat(t.map(function(u) {
    return ".".concat(u, ":not([").concat(DATA_FA_I2SVG, "])");
  })).join(", ");
  if (l.length === 0)
    return Promise.resolve();
  var o = [];
  try {
    o = toArray$1(e.querySelectorAll(l));
  } catch {
  }
  if (o.length > 0)
    s("pending"), a("complete");
  else
    return Promise.resolve();
  var c = perf.begin("onTree"), _ = o.reduce(function(u, y) {
    try {
      var g = generateMutation(y);
      g && u.push(g);
    } catch (Ee) {
      PRODUCTION$1 || Ee.name === "MissingIcon" && console.error(Ee);
    }
    return u;
  }, []);
  return new Promise(function(u, y) {
    Promise.all(_).then(function(g) {
      perform(g, function() {
        s("active"), s("complete"), a("pending"), typeof r == "function" && r(), c(), u();
      });
    }).catch(function(g) {
      c(), y(g);
    });
  });
}
function onNode(e) {
  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  generateMutation(e).then(function(n) {
    n && perform([n], r);
  });
}
function resolveIcons(e) {
  return function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, s = (r || {}).icon ? r : findIconDefinition(r || {}), a = n.mask;
    return a && (a = (a || {}).icon ? a : findIconDefinition(a || {})), e(s, _objectSpread2$1(_objectSpread2$1({}, n), {}, {
      mask: a
    }));
  };
}
var render$1 = function e(r) {
  var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, s = n.transform, a = s === void 0 ? meaninglessTransform : s, t = n.symbol, l = t === void 0 ? !1 : t, o = n.mask, c = o === void 0 ? null : o, _ = n.maskId, u = _ === void 0 ? null : _, y = n.title, g = y === void 0 ? null : y, Ee = n.titleId, Ve = Ee === void 0 ? null : Ee, Me = n.classes, B = Me === void 0 ? [] : Me, Pe = n.attributes, k = Pe === void 0 ? {} : Pe, b = n.styles, Le = b === void 0 ? {} : b;
  if (r) {
    var xe = r.prefix, ze = r.iconName, Se = r.icon;
    return domVariants(_objectSpread2$1({
      type: "icon"
    }, r), function() {
      return callHooks("beforeDOMElementCreation", {
        iconDefinition: r,
        params: n
      }), config.autoA11y && (g ? k["aria-labelledby"] = "".concat(config.replacementClass, "-title-").concat(Ve || nextUniqueId()) : (k["aria-hidden"] = "true", k.focusable = "false")), makeInlineSvgAbstract({
        icons: {
          main: asFoundIcon(Se),
          mask: c ? asFoundIcon(c.icon) : {
            found: !1,
            width: null,
            height: null,
            icon: {}
          }
        },
        prefix: xe,
        iconName: ze,
        transform: _objectSpread2$1(_objectSpread2$1({}, meaninglessTransform), a),
        symbol: l,
        title: g,
        maskId: u,
        titleId: Ve,
        extra: {
          attributes: k,
          styles: Le,
          classes: B
        }
      });
    });
  }
}, ReplaceElements = {
  mixout: function e() {
    return {
      icon: resolveIcons(render$1)
    };
  },
  hooks: function e() {
    return {
      mutationObserverCallbacks: function(n) {
        return n.treeCallback = onTree, n.nodeCallback = onNode, n;
      }
    };
  },
  provides: function e(r) {
    r.i2svg = function(n) {
      var s = n.node, a = s === void 0 ? DOCUMENT : s, t = n.callback, l = t === void 0 ? function() {
      } : t;
      return onTree(a, l);
    }, r.generateSvgReplacementMutation = function(n, s) {
      var a = s.iconName, t = s.title, l = s.titleId, o = s.prefix, c = s.transform, _ = s.symbol, u = s.mask, y = s.maskId, g = s.extra;
      return new Promise(function(Ee, Ve) {
        Promise.all([findIcon(a, o), u.iconName ? findIcon(u.iconName, u.prefix) : Promise.resolve({
          found: !1,
          width: 512,
          height: 512,
          icon: {}
        })]).then(function(Me) {
          var B = _slicedToArray(Me, 2), Pe = B[0], k = B[1];
          Ee([n, makeInlineSvgAbstract({
            icons: {
              main: Pe,
              mask: k
            },
            prefix: o,
            iconName: a,
            transform: c,
            symbol: _,
            maskId: y,
            title: t,
            titleId: l,
            extra: g,
            watchable: !0
          })]);
        }).catch(Ve);
      });
    }, r.generateAbstractIcon = function(n) {
      var s = n.children, a = n.attributes, t = n.main, l = n.transform, o = n.styles, c = joinStyles(o);
      c.length > 0 && (a.style = c);
      var _;
      return transformIsMeaningful(l) && (_ = callProvided("generateAbstractTransformGrouping", {
        main: t,
        transform: l,
        containerWidth: t.width,
        iconWidth: t.width
      })), s.push(_ || t.icon), {
        children: s,
        attributes: a
      };
    };
  }
}, Layers = {
  mixout: function e() {
    return {
      layer: function(n) {
        var s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, a = s.classes, t = a === void 0 ? [] : a;
        return domVariants({
          type: "layer"
        }, function() {
          callHooks("beforeDOMElementCreation", {
            assembler: n,
            params: s
          });
          var l = [];
          return n(function(o) {
            Array.isArray(o) ? o.map(function(c) {
              l = l.concat(c.abstract);
            }) : l = l.concat(o.abstract);
          }), [{
            tag: "span",
            attributes: {
              class: ["".concat(config.cssPrefix, "-layers")].concat(_toConsumableArray(t)).join(" ")
            },
            children: l
          }];
        });
      }
    };
  }
}, LayersCounter = {
  mixout: function e() {
    return {
      counter: function(n) {
        var s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, a = s.title, t = a === void 0 ? null : a, l = s.classes, o = l === void 0 ? [] : l, c = s.attributes, _ = c === void 0 ? {} : c, u = s.styles, y = u === void 0 ? {} : u;
        return domVariants({
          type: "counter",
          content: n
        }, function() {
          return callHooks("beforeDOMElementCreation", {
            content: n,
            params: s
          }), makeLayersCounterAbstract({
            content: n.toString(),
            title: t,
            extra: {
              attributes: _,
              styles: y,
              classes: ["".concat(config.cssPrefix, "-layers-counter")].concat(_toConsumableArray(o))
            }
          });
        });
      }
    };
  }
}, LayersText = {
  mixout: function e() {
    return {
      text: function(n) {
        var s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, a = s.transform, t = a === void 0 ? meaninglessTransform : a, l = s.title, o = l === void 0 ? null : l, c = s.classes, _ = c === void 0 ? [] : c, u = s.attributes, y = u === void 0 ? {} : u, g = s.styles, Ee = g === void 0 ? {} : g;
        return domVariants({
          type: "text",
          content: n
        }, function() {
          return callHooks("beforeDOMElementCreation", {
            content: n,
            params: s
          }), makeLayersTextAbstract({
            content: n,
            transform: _objectSpread2$1(_objectSpread2$1({}, meaninglessTransform), t),
            title: o,
            extra: {
              attributes: y,
              styles: Ee,
              classes: ["".concat(config.cssPrefix, "-layers-text")].concat(_toConsumableArray(_))
            }
          });
        });
      }
    };
  },
  provides: function e(r) {
    r.generateLayersText = function(n, s) {
      var a = s.title, t = s.transform, l = s.extra, o = null, c = null;
      if (IS_IE) {
        var _ = parseInt(getComputedStyle(n).fontSize, 10), u = n.getBoundingClientRect();
        o = u.width / _, c = u.height / _;
      }
      return config.autoA11y && !a && (l.attributes["aria-hidden"] = "true"), Promise.resolve([n, makeLayersTextAbstract({
        content: n.innerHTML,
        width: o,
        height: c,
        transform: t,
        title: a,
        extra: l,
        watchable: !0
      })]);
    };
  }
}, CLEAN_CONTENT_PATTERN = new RegExp('"', "ug"), SECONDARY_UNICODE_RANGE = [1105920, 1112319];
function hexValueFromContent(e) {
  var r = e.replace(CLEAN_CONTENT_PATTERN, ""), n = codePointAt(r, 0), s = n >= SECONDARY_UNICODE_RANGE[0] && n <= SECONDARY_UNICODE_RANGE[1], a = r.length === 2 ? r[0] === r[1] : !1;
  return {
    value: toHex(a ? r[0] : r),
    isSecondary: s || a
  };
}
function replaceForPosition(e, r) {
  var n = "".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(r.replace(":", "-"));
  return new Promise(function(s, a) {
    if (e.getAttribute(n) !== null)
      return s();
    var t = toArray$1(e.children), l = t.filter(function(Se) {
      return Se.getAttribute(DATA_FA_PSEUDO_ELEMENT) === r;
    })[0], o = WINDOW.getComputedStyle(e, r), c = o.getPropertyValue("font-family").match(FONT_FAMILY_PATTERN), _ = o.getPropertyValue("font-weight"), u = o.getPropertyValue("content");
    if (l && !c)
      return e.removeChild(l), s();
    if (c && u !== "none" && u !== "") {
      var y = o.getPropertyValue("content"), g = ~["Sharp"].indexOf(c[2]) ? FAMILY_SHARP : FAMILY_CLASSIC, Ee = ~["Solid", "Regular", "Light", "Thin", "Duotone", "Brands", "Kit"].indexOf(c[2]) ? STYLE_TO_PREFIX[g][c[2].toLowerCase()] : FONT_WEIGHT_TO_PREFIX[g][_], Ve = hexValueFromContent(y), Me = Ve.value, B = Ve.isSecondary, Pe = c[0].startsWith("FontAwesome"), k = byUnicode(Ee, Me), b = k;
      if (Pe) {
        var Le = byOldUnicode(Me);
        Le.iconName && Le.prefix && (k = Le.iconName, Ee = Le.prefix);
      }
      if (k && !B && (!l || l.getAttribute(DATA_PREFIX) !== Ee || l.getAttribute(DATA_ICON) !== b)) {
        e.setAttribute(n, b), l && e.removeChild(l);
        var xe = blankMeta(), ze = xe.extra;
        ze.attributes[DATA_FA_PSEUDO_ELEMENT] = r, findIcon(k, Ee).then(function(Se) {
          var Te = makeInlineSvgAbstract(_objectSpread2$1(_objectSpread2$1({}, xe), {}, {
            icons: {
              main: Se,
              mask: emptyCanonicalIcon()
            },
            prefix: Ee,
            iconName: b,
            extra: ze,
            watchable: !0
          })), D = DOCUMENT.createElementNS("http://www.w3.org/2000/svg", "svg");
          r === "::before" ? e.insertBefore(D, e.firstChild) : e.appendChild(D), D.outerHTML = Te.map(function(ke) {
            return toHtml(ke);
          }).join(`
`), e.removeAttribute(n), s();
        }).catch(a);
      } else
        s();
    } else
      s();
  });
}
function replace2(e) {
  return Promise.all([replaceForPosition(e, "::before"), replaceForPosition(e, "::after")]);
}
function processable(e) {
  return e.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!e.parentNode || e.parentNode.tagName !== "svg");
}
function searchPseudoElements(e) {
  if (IS_DOM)
    return new Promise(function(r, n) {
      var s = toArray$1(e.querySelectorAll("*")).filter(processable).map(replace2), a = perf.begin("searchPseudoElements");
      disableObservation(), Promise.all(s).then(function() {
        a(), enableObservation(), r();
      }).catch(function() {
        a(), enableObservation(), n();
      });
    });
}
var PseudoElements = {
  hooks: function e() {
    return {
      mutationObserverCallbacks: function(n) {
        return n.pseudoElementsCallback = searchPseudoElements, n;
      }
    };
  },
  provides: function e(r) {
    r.pseudoElements2svg = function(n) {
      var s = n.node, a = s === void 0 ? DOCUMENT : s;
      config.searchPseudoElements && searchPseudoElements(a);
    };
  }
}, _unwatched = !1, MutationObserver$1 = {
  mixout: function e() {
    return {
      dom: {
        unwatch: function() {
          disableObservation(), _unwatched = !0;
        }
      }
    };
  },
  hooks: function e() {
    return {
      bootstrap: function() {
        observe(chainHooks("mutationObserverCallbacks", {}));
      },
      noAuto: function() {
        disconnect();
      },
      watch: function(n) {
        var s = n.observeMutationsRoot;
        _unwatched ? enableObservation() : observe(chainHooks("mutationObserverCallbacks", {
          observeMutationsRoot: s
        }));
      }
    };
  }
}, parseTransformString = function e(r) {
  var n = {
    size: 16,
    x: 0,
    y: 0,
    flipX: !1,
    flipY: !1,
    rotate: 0
  };
  return r.toLowerCase().split(" ").reduce(function(s, a) {
    var t = a.toLowerCase().split("-"), l = t[0], o = t.slice(1).join("-");
    if (l && o === "h")
      return s.flipX = !0, s;
    if (l && o === "v")
      return s.flipY = !0, s;
    if (o = parseFloat(o), isNaN(o))
      return s;
    switch (l) {
      case "grow":
        s.size = s.size + o;
        break;
      case "shrink":
        s.size = s.size - o;
        break;
      case "left":
        s.x = s.x - o;
        break;
      case "right":
        s.x = s.x + o;
        break;
      case "up":
        s.y = s.y - o;
        break;
      case "down":
        s.y = s.y + o;
        break;
      case "rotate":
        s.rotate = s.rotate + o;
        break;
    }
    return s;
  }, n);
}, PowerTransforms = {
  mixout: function e() {
    return {
      parse: {
        transform: function(n) {
          return parseTransformString(n);
        }
      }
    };
  },
  hooks: function e() {
    return {
      parseNodeAttributes: function(n, s) {
        var a = s.getAttribute("data-fa-transform");
        return a && (n.transform = parseTransformString(a)), n;
      }
    };
  },
  provides: function e(r) {
    r.generateAbstractTransformGrouping = function(n) {
      var s = n.main, a = n.transform, t = n.containerWidth, l = n.iconWidth, o = {
        transform: "translate(".concat(t / 2, " 256)")
      }, c = "translate(".concat(a.x * 32, ", ").concat(a.y * 32, ") "), _ = "scale(".concat(a.size / 16 * (a.flipX ? -1 : 1), ", ").concat(a.size / 16 * (a.flipY ? -1 : 1), ") "), u = "rotate(".concat(a.rotate, " 0 0)"), y = {
        transform: "".concat(c, " ").concat(_, " ").concat(u)
      }, g = {
        transform: "translate(".concat(l / 2 * -1, " -256)")
      }, Ee = {
        outer: o,
        inner: y,
        path: g
      };
      return {
        tag: "g",
        attributes: _objectSpread2$1({}, Ee.outer),
        children: [{
          tag: "g",
          attributes: _objectSpread2$1({}, Ee.inner),
          children: [{
            tag: s.icon.tag,
            children: s.icon.children,
            attributes: _objectSpread2$1(_objectSpread2$1({}, s.icon.attributes), Ee.path)
          }]
        }]
      };
    };
  }
}, ALL_SPACE = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function fillBlack(e) {
  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  return e.attributes && (e.attributes.fill || r) && (e.attributes.fill = "black"), e;
}
function deGroup(e) {
  return e.tag === "g" ? e.children : [e];
}
var Masks = {
  hooks: function e() {
    return {
      parseNodeAttributes: function(n, s) {
        var a = s.getAttribute("data-fa-mask"), t = a ? getCanonicalIcon(a.split(" ").map(function(l) {
          return l.trim();
        })) : emptyCanonicalIcon();
        return t.prefix || (t.prefix = getDefaultUsablePrefix()), n.mask = t, n.maskId = s.getAttribute("data-fa-mask-id"), n;
      }
    };
  },
  provides: function e(r) {
    r.generateAbstractMask = function(n) {
      var s = n.children, a = n.attributes, t = n.main, l = n.mask, o = n.maskId, c = n.transform, _ = t.width, u = t.icon, y = l.width, g = l.icon, Ee = transformForSvg({
        transform: c,
        containerWidth: y,
        iconWidth: _
      }), Ve = {
        tag: "rect",
        attributes: _objectSpread2$1(_objectSpread2$1({}, ALL_SPACE), {}, {
          fill: "white"
        })
      }, Me = u.children ? {
        children: u.children.map(fillBlack)
      } : {}, B = {
        tag: "g",
        attributes: _objectSpread2$1({}, Ee.inner),
        children: [fillBlack(_objectSpread2$1({
          tag: u.tag,
          attributes: _objectSpread2$1(_objectSpread2$1({}, u.attributes), Ee.path)
        }, Me))]
      }, Pe = {
        tag: "g",
        attributes: _objectSpread2$1({}, Ee.outer),
        children: [B]
      }, k = "mask-".concat(o || nextUniqueId()), b = "clip-".concat(o || nextUniqueId()), Le = {
        tag: "mask",
        attributes: _objectSpread2$1(_objectSpread2$1({}, ALL_SPACE), {}, {
          id: k,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [Ve, Pe]
      }, xe = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: b
          },
          children: deGroup(g)
        }, Le]
      };
      return s.push(xe, {
        tag: "rect",
        attributes: _objectSpread2$1({
          fill: "currentColor",
          "clip-path": "url(#".concat(b, ")"),
          mask: "url(#".concat(k, ")")
        }, ALL_SPACE)
      }), {
        children: s,
        attributes: a
      };
    };
  }
}, MissingIconIndicator = {
  provides: function e(r) {
    var n = !1;
    WINDOW.matchMedia && (n = WINDOW.matchMedia("(prefers-reduced-motion: reduce)").matches), r.missingIconAbstract = function() {
      var s = [], a = {
        fill: "currentColor"
      }, t = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      s.push({
        tag: "path",
        attributes: _objectSpread2$1(_objectSpread2$1({}, a), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      var l = _objectSpread2$1(_objectSpread2$1({}, t), {}, {
        attributeName: "opacity"
      }), o = {
        tag: "circle",
        attributes: _objectSpread2$1(_objectSpread2$1({}, a), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      return n || o.children.push({
        tag: "animate",
        attributes: _objectSpread2$1(_objectSpread2$1({}, t), {}, {
          attributeName: "r",
          values: "28;14;28;28;14;28;"
        })
      }, {
        tag: "animate",
        attributes: _objectSpread2$1(_objectSpread2$1({}, l), {}, {
          values: "1;0;1;1;0;1;"
        })
      }), s.push(o), s.push({
        tag: "path",
        attributes: _objectSpread2$1(_objectSpread2$1({}, a), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: n ? [] : [{
          tag: "animate",
          attributes: _objectSpread2$1(_objectSpread2$1({}, l), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      }), n || s.push({
        tag: "path",
        attributes: _objectSpread2$1(_objectSpread2$1({}, a), {}, {
          opacity: "0",
          d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
        }),
        children: [{
          tag: "animate",
          attributes: _objectSpread2$1(_objectSpread2$1({}, l), {}, {
            values: "0;0;1;1;0;0;"
          })
        }]
      }), {
        tag: "g",
        attributes: {
          class: "missing"
        },
        children: s
      };
    };
  }
}, SvgSymbols = {
  hooks: function e() {
    return {
      parseNodeAttributes: function(n, s) {
        var a = s.getAttribute("data-fa-symbol"), t = a === null ? !1 : a === "" ? !0 : a;
        return n.symbol = t, n;
      }
    };
  }
}, plugins = [InjectCSS, ReplaceElements, Layers, LayersCounter, LayersText, PseudoElements, MutationObserver$1, PowerTransforms, Masks, MissingIconIndicator, SvgSymbols];
registerPlugins(plugins, {
  mixoutsTo: api
});
api.noAuto;
api.config;
var library$1 = api.library;
api.dom;
var parse$1 = api.parse;
api.findIconDefinition;
api.toHtml;
var icon2 = api.icon;
api.layer;
api.text;
api.counter;
var faCircleMinus = {
  prefix: "fas",
  iconName: "circle-minus",
  icon: [512, 512, ["minus-circle"], "f056", "M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM184 232H328c13.3 0 24 10.7 24 24s-10.7 24-24 24H184c-13.3 0-24-10.7-24-24s10.7-24 24-24z"]
}, faMinusCircle = faCircleMinus, faPencil = {
  prefix: "fas",
  iconName: "pencil",
  icon: [512, 512, [9999, 61504, "pencil-alt"], "f303", "M410.3 231l11.3-11.3-33.9-33.9-62.1-62.1L291.7 89.8l-11.3 11.3-22.6 22.6L58.6 322.9c-10.4 10.4-18 23.3-22.2 37.4L1 480.7c-2.5 8.4-.2 17.5 6.1 23.7s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L387.7 253.7 410.3 231zM160 399.4l-9.1 22.7c-4 3.1-8.5 5.4-13.3 6.9L59.4 452l23-78.1c1.4-4.9 3.8-9.4 6.9-13.3l22.7-9.1v32c0 8.8 7.2 16 16 16h32zM362.7 18.7L348.3 33.2 325.7 55.8 314.3 67.1l33.9 33.9 62.1 62.1 33.9 33.9 11.3-11.3 22.6-22.6 14.5-14.5c25-25 25-65.5 0-90.5L453.3 18.7c-25-25-65.5-25-90.5 0zm-47.4 168l-144 144c-6.2 6.2-16.4 6.2-22.6 0s-6.2-16.4 0-22.6l144-144c6.2-6.2 16.4-6.2 22.6 0s6.2 16.4 0 22.6z"]
}, faPencilAlt = faPencil, faCompress = {
  prefix: "fas",
  iconName: "compress",
  icon: [448, 512, [], "f066", "M160 64c0-17.7-14.3-32-32-32s-32 14.3-32 32v64H32c-17.7 0-32 14.3-32 32s14.3 32 32 32h96c17.7 0 32-14.3 32-32V64zM32 320c-17.7 0-32 14.3-32 32s14.3 32 32 32H96v64c0 17.7 14.3 32 32 32s32-14.3 32-32V352c0-17.7-14.3-32-32-32H32zM352 64c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7 14.3 32 32 32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H352V64zM320 320c-17.7 0-32 14.3-32 32v96c0 17.7 14.3 32 32 32s32-14.3 32-32V384h64c17.7 0 32-14.3 32-32s-14.3-32-32-32H320z"]
}, faEyeSlash = {
  prefix: "fas",
  iconName: "eye-slash",
  icon: [640, 512, [], "f070", "M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7L525.6 386.7c39.6-40.6 66.4-86.1 79.9-118.4c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C465.5 68.8 400.8 32 320 32c-68.2 0-125 26.3-169.3 60.8L38.8 5.1zM223.1 149.5C248.6 126.2 282.7 112 320 112c79.5 0 144 64.5 144 144c0 24.9-6.3 48.3-17.4 68.7L408 294.5c8.4-19.3 10.6-41.4 4.8-63.3c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3c0 10.2-2.4 19.8-6.6 28.3l-90.3-70.8zM373 389.9c-16.4 6.5-34.3 10.1-53 10.1c-79.5 0-144-64.5-144-144c0-6.9 .5-13.6 1.4-20.2L83.1 161.5C60.3 191.2 44 220.8 34.5 243.7c-3.3 7.9-3.3 16.7 0 24.6c14.9 35.7 46.2 87.7 93 131.1C174.5 443.2 239.2 480 320 480c47.8 0 89.9-12.9 126.2-32.5L373 389.9z"]
}, faChevronUp = {
  prefix: "fas",
  iconName: "chevron-up",
  icon: [512, 512, [], "f077", "M233.4 105.4c12.5-12.5 32.8-12.5 45.3 0l192 192c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L256 173.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l192-192z"]
}, faMapLocationDot = {
  prefix: "fas",
  iconName: "map-location-dot",
  icon: [576, 512, ["map-marked-alt"], "f5a0", "M408 120c0 54.6-73.1 151.9-105.2 192c-7.7 9.6-22 9.6-29.6 0C241.1 271.9 168 174.6 168 120C168 53.7 221.7 0 288 0s120 53.7 120 120zm8 80.4c3.5-6.9 6.7-13.8 9.6-20.6c.5-1.2 1-2.5 1.5-3.7l116-46.4C558.9 123.4 576 135 576 152V422.8c0 9.8-6 18.6-15.1 22.3L416 503V200.4zM137.6 138.3c2.4 14.1 7.2 28.3 12.8 41.5c2.9 6.8 6.1 13.7 9.6 20.6V451.8L32.9 502.7C17.1 509 0 497.4 0 480.4V209.6c0-9.8 6-18.6 15.1-22.3l122.6-49zM327.8 332c13.9-17.4 35.7-45.7 56.2-77V504.3L192 449.4V255c20.5 31.3 42.3 59.6 56.2 77c20.5 25.6 59.1 25.6 79.6 0zM288 152a40 40 0 1 0 0-80 40 40 0 1 0 0 80z"]
}, faMapMarkedAlt = faMapLocationDot, faImage = {
  prefix: "fas",
  iconName: "image",
  icon: [512, 512, [], "f03e", "M0 96C0 60.7 28.7 32 64 32H448c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zM323.8 202.5c-4.5-6.6-11.9-10.5-19.8-10.5s-15.4 3.9-19.8 10.5l-87 127.6L170.7 297c-4.6-5.7-11.5-9-18.7-9s-14.2 3.3-18.7 9l-64 80c-5.8 7.2-6.9 17.1-2.9 25.4s12.4 13.6 21.6 13.6h96 32H424c8.9 0 17.1-4.9 21.2-12.8s3.6-17.4-1.4-24.7l-120-176zM112 192a48 48 0 1 0 0-96 48 48 0 1 0 0 96z"]
}, faCircleArrowRight = {
  prefix: "fas",
  iconName: "circle-arrow-right",
  icon: [512, 512, ["arrow-circle-right"], "f0a9", "M0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM281 385c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l71-71L136 280c-13.3 0-24-10.7-24-24s10.7-24 24-24l182.1 0-71-71c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0L393 239c9.4 9.4 9.4 24.6 0 33.9L281 385z"]
}, faArrowCircleRight = faCircleArrowRight, faCircle = {
  prefix: "fas",
  iconName: "circle",
  icon: [512, 512, [128308, 128309, 128992, 128993, 128994, 128995, 128996, 9679, 9898, 9899, 11044, 61708, 61915], "f111", "M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512z"]
}, faEye = {
  prefix: "fas",
  iconName: "eye",
  icon: [576, 512, [128065], "f06e", "M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z"]
}, faFloppyDisk = {
  prefix: "fas",
  iconName: "floppy-disk",
  icon: [448, 512, [128190, 128426, "save"], "f0c7", "M64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V173.3c0-17-6.7-33.3-18.7-45.3L352 50.7C340 38.7 323.7 32 306.7 32H64zm0 96c0-17.7 14.3-32 32-32H288c17.7 0 32 14.3 32 32v64c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V128zM224 288a64 64 0 1 1 0 128 64 64 0 1 1 0-128z"]
}, faSave = faFloppyDisk, faMountain = {
  prefix: "fas",
  iconName: "mountain",
  icon: [512, 512, [127956], "f6fc", "M256 32c12.5 0 24.1 6.4 30.8 17L503.4 394.4c5.6 8.9 8.6 19.2 8.6 29.7c0 30.9-25 55.9-55.9 55.9H55.9C25 480 0 455 0 424.1c0-10.5 3-20.8 8.6-29.7L225.2 49c6.6-10.6 18.3-17 30.8-17zm65 192L256 120.4 176.9 246.5l18.3 24.4c6.4 8.5 19.2 8.5 25.6 0l25.6-34.1c6-8.1 15.5-12.8 25.6-12.8h49z"]
}, faCrosshairs = {
  prefix: "fas",
  iconName: "crosshairs",
  icon: [512, 512, [], "f05b", "M256 0c17.7 0 32 14.3 32 32V42.4c93.7 13.9 167.7 88 181.6 181.6H480c17.7 0 32 14.3 32 32s-14.3 32-32 32H469.6c-13.9 93.7-88 167.7-181.6 181.6V480c0 17.7-14.3 32-32 32s-32-14.3-32-32V469.6C130.3 455.7 56.3 381.7 42.4 288H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H42.4C56.3 130.3 130.3 56.3 224 42.4V32c0-17.7 14.3-32 32-32zM107.4 288c12.5 58.3 58.4 104.1 116.6 116.6V384c0-17.7 14.3-32 32-32s32 14.3 32 32v20.6c58.3-12.5 104.1-58.4 116.6-116.6H384c-17.7 0-32-14.3-32-32s14.3-32 32-32h20.6C392.1 165.7 346.3 119.9 288 107.4V128c0 17.7-14.3 32-32 32s-32-14.3-32-32V107.4C165.7 119.9 119.9 165.7 107.4 224H128c17.7 0 32 14.3 32 32s-14.3 32-32 32H107.4zM256 224a32 32 0 1 1 0 64 32 32 0 1 1 0-64z"]
}, faSliders = {
  prefix: "fas",
  iconName: "sliders",
  icon: [512, 512, ["sliders-h"], "f1de", "M0 416c0 17.7 14.3 32 32 32l54.7 0c12.3 28.3 40.5 48 73.3 48s61-19.7 73.3-48L480 448c17.7 0 32-14.3 32-32s-14.3-32-32-32l-246.7 0c-12.3-28.3-40.5-48-73.3-48s-61 19.7-73.3 48L32 384c-17.7 0-32 14.3-32 32zm128 0a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zM320 256a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm32-80c-32.8 0-61 19.7-73.3 48L32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l246.7 0c12.3 28.3 40.5 48 73.3 48s61-19.7 73.3-48l54.7 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-54.7 0c-12.3-28.3-40.5-48-73.3-48zM192 128a32 32 0 1 1 0-64 32 32 0 1 1 0 64zm73.3-64C253 35.7 224.8 16 192 16s-61 19.7-73.3 48L32 64C14.3 64 0 78.3 0 96s14.3 32 32 32l86.7 0c12.3 28.3 40.5 48 73.3 48s61-19.7 73.3-48L480 128c17.7 0 32-14.3 32-32s-14.3-32-32-32L265.3 64z"]
}, faSlidersH = faSliders, faLocationDot = {
  prefix: "fas",
  iconName: "location-dot",
  icon: [384, 512, ["map-marker-alt"], "f3c5", "M215.7 499.2C267 435 384 279.4 384 192C384 86 298 0 192 0S0 86 0 192c0 87.4 117 243 168.3 307.2c12.3 15.3 35.1 15.3 47.4 0zM192 128a64 64 0 1 1 0 128 64 64 0 1 1 0-128z"]
}, faMapMarkerAlt = faLocationDot, faChevronDown = {
  prefix: "fas",
  iconName: "chevron-down",
  icon: [512, 512, [], "f078", "M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"]
}, faCircleHalfStroke = {
  prefix: "fas",
  iconName: "circle-half-stroke",
  icon: [512, 512, [9680, "adjust"], "f042", "M448 256c0-106-86-192-192-192V448c106 0 192-86 192-192zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256z"]
}, faAdjust = faCircleHalfStroke, faCopy = {
  prefix: "fas",
  iconName: "copy",
  icon: [448, 512, [], "f0c5", "M208 0H332.1c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9V336c0 26.5-21.5 48-48 48H208c-26.5 0-48-21.5-48-48V48c0-26.5 21.5-48 48-48zM48 128h80v64H64V448H256V416h64v48c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48z"]
}, faPlus = {
  prefix: "fas",
  iconName: "plus",
  icon: [448, 512, [10133, 61543, "add"], "2b", "M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z"]
}, faExpand = {
  prefix: "fas",
  iconName: "expand",
  icon: [448, 512, [], "f065", "M32 32C14.3 32 0 46.3 0 64v96c0 17.7 14.3 32 32 32s32-14.3 32-32V96h64c17.7 0 32-14.3 32-32s-14.3-32-32-32H32zM64 352c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7 14.3 32 32 32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H64V352zM320 32c-17.7 0-32 14.3-32 32s14.3 32 32 32h64v64c0 17.7 14.3 32 32 32s32-14.3 32-32V64c0-17.7-14.3-32-32-32H320zM448 352c0-17.7-14.3-32-32-32s-32 14.3-32 32v64H320c-17.7 0-32 14.3-32 32s14.3 32 32 32h96c17.7 0 32-14.3 32-32V352z"]
}, faXmark = {
  prefix: "fas",
  iconName: "xmark",
  icon: [384, 512, [128473, 10005, 10006, 10060, 215, "close", "multiply", "remove", "times"], "f00d", "M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"]
}, faTimes = faXmark, faPhotoFilm = {
  prefix: "fas",
  iconName: "photo-film",
  icon: [640, 512, ["photo-video"], "f87c", "M256 0H576c35.3 0 64 28.7 64 64V288c0 35.3-28.7 64-64 64H256c-35.3 0-64-28.7-64-64V64c0-35.3 28.7-64 64-64zM476 106.7C471.5 100 464 96 456 96s-15.5 4-20 10.7l-56 84L362.7 169c-4.6-5.7-11.5-9-18.7-9s-14.2 3.3-18.7 9l-64 80c-5.8 7.2-6.9 17.1-2.9 25.4s12.4 13.6 21.6 13.6h80 48H552c8.9 0 17-4.9 21.2-12.7s3.7-17.3-1.2-24.6l-96-144zM336 96a32 32 0 1 0 -64 0 32 32 0 1 0 64 0zM64 128h96V384v32c0 17.7 14.3 32 32 32H320c17.7 0 32-14.3 32-32V384H512v64c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V192c0-35.3 28.7-64 64-64zm8 64c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16H88c8.8 0 16-7.2 16-16V208c0-8.8-7.2-16-16-16H72zm0 104c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16H88c8.8 0 16-7.2 16-16V312c0-8.8-7.2-16-16-16H72zm0 104c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16H88c8.8 0 16-7.2 16-16V416c0-8.8-7.2-16-16-16H72zm336 16v16c0 8.8 7.2 16 16 16h16c8.8 0 16-7.2 16-16V416c0-8.8-7.2-16-16-16H424c-8.8 0-16 7.2-16 16z"]
}, faPhotoVideo = faPhotoFilm, faCirclePlus = {
  prefix: "fas",
  iconName: "circle-plus",
  icon: [512, 512, ["plus-circle"], "f055", "M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM232 344V280H168c-13.3 0-24-10.7-24-24s10.7-24 24-24h64V168c0-13.3 10.7-24 24-24s24 10.7 24 24v64h64c13.3 0 24 10.7 24 24s-10.7 24-24 24H280v64c0 13.3-10.7 24-24 24s-24-10.7-24-24z"]
}, faPlusCircle = faCirclePlus, faRectangleXmark = {
  prefix: "fas",
  iconName: "rectangle-xmark",
  icon: [512, 512, [62164, "rectangle-times", "times-rectangle", "window-close"], "f410", "M64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zM175 175c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z"]
}, faWindowClose = faRectangleXmark, faMagnifyingGlassPlus = {
  prefix: "fas",
  iconName: "magnifying-glass-plus",
  icon: [512, 512, ["search-plus"], "f00e", "M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM184 296c0 13.3 10.7 24 24 24s24-10.7 24-24V232h64c13.3 0 24-10.7 24-24s-10.7-24-24-24H232V120c0-13.3-10.7-24-24-24s-24 10.7-24 24v64H120c-13.3 0-24 10.7-24 24s10.7 24 24 24h64v64z"]
}, faSearchPlus = faMagnifyingGlassPlus, faMagnifyingGlassMinus = {
  prefix: "fas",
  iconName: "magnifying-glass-minus",
  icon: [512, 512, ["search-minus"], "f010", "M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM136 184c-13.3 0-24 10.7-24 24s10.7 24 24 24H280c13.3 0 24-10.7 24-24s-10.7-24-24-24H136z"]
}, faSearchMinus = faMagnifyingGlassMinus;
function ownKeys(e, r) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    r && (s = s.filter(function(a) {
      return Object.getOwnPropertyDescriptor(e, a).enumerable;
    })), n.push.apply(n, s);
  }
  return n;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var n = arguments[r] != null ? arguments[r] : {};
    r % 2 ? ownKeys(Object(n), !0).forEach(function(s) {
      _defineProperty(e, s, n[s]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ownKeys(Object(n)).forEach(function(s) {
      Object.defineProperty(e, s, Object.getOwnPropertyDescriptor(n, s));
    });
  }
  return e;
}
function _typeof(e) {
  "@babel/helpers - typeof";
  return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(r) {
    return typeof r;
  } : function(r) {
    return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
  }, _typeof(e);
}
function _defineProperty(e, r, n) {
  return r = _toPropertyKey(r), r in e ? Object.defineProperty(e, r, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = n, e;
}
function _objectWithoutPropertiesLoose(e, r) {
  if (e == null)
    return {};
  var n = {}, s = Object.keys(e), a, t;
  for (t = 0; t < s.length; t++)
    a = s[t], !(r.indexOf(a) >= 0) && (n[a] = e[a]);
  return n;
}
function _objectWithoutProperties(e, r) {
  if (e == null)
    return {};
  var n = _objectWithoutPropertiesLoose(e, r), s, a;
  if (Object.getOwnPropertySymbols) {
    var t = Object.getOwnPropertySymbols(e);
    for (a = 0; a < t.length; a++)
      s = t[a], !(r.indexOf(s) >= 0) && Object.prototype.propertyIsEnumerable.call(e, s) && (n[s] = e[s]);
  }
  return n;
}
function _toPrimitive(e, r) {
  if (typeof e != "object" || e === null)
    return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var s = n.call(e, r || "default");
    if (typeof s != "object")
      return s;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (r === "string" ? String : Number)(e);
}
function _toPropertyKey(e) {
  var r = _toPrimitive(e, "string");
  return typeof r == "symbol" ? r : String(r);
}
var commonjsGlobal = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, humps$1 = { exports: {} };
(function(e) {
  (function(r) {
    var n = function(Pe, k, b) {
      if (!_(k) || y(k) || g(k) || Ee(k) || c(k))
        return k;
      var Le, xe = 0, ze = 0;
      if (u(k))
        for (Le = [], ze = k.length; xe < ze; xe++)
          Le.push(n(Pe, k[xe], b));
      else {
        Le = {};
        for (var Se in k)
          Object.prototype.hasOwnProperty.call(k, Se) && (Le[Pe(Se, b)] = n(Pe, k[Se], b));
      }
      return Le;
    }, s = function(Pe, k) {
      k = k || {};
      var b = k.separator || "_", Le = k.split || /(?=[A-Z])/;
      return Pe.split(Le).join(b);
    }, a = function(Pe) {
      return Ve(Pe) ? Pe : (Pe = Pe.replace(/[\-_\s]+(.)?/g, function(k, b) {
        return b ? b.toUpperCase() : "";
      }), Pe.substr(0, 1).toLowerCase() + Pe.substr(1));
    }, t = function(Pe) {
      var k = a(Pe);
      return k.substr(0, 1).toUpperCase() + k.substr(1);
    }, l = function(Pe, k) {
      return s(Pe, k).toLowerCase();
    }, o = Object.prototype.toString, c = function(Pe) {
      return typeof Pe == "function";
    }, _ = function(Pe) {
      return Pe === Object(Pe);
    }, u = function(Pe) {
      return o.call(Pe) == "[object Array]";
    }, y = function(Pe) {
      return o.call(Pe) == "[object Date]";
    }, g = function(Pe) {
      return o.call(Pe) == "[object RegExp]";
    }, Ee = function(Pe) {
      return o.call(Pe) == "[object Boolean]";
    }, Ve = function(Pe) {
      return Pe = Pe - 0, Pe === Pe;
    }, Me = function(Pe, k) {
      var b = k && "process" in k ? k.process : k;
      return typeof b != "function" ? Pe : function(Le, xe) {
        return b(Le, Pe, xe);
      };
    }, B = {
      camelize: a,
      decamelize: l,
      pascalize: t,
      depascalize: l,
      camelizeKeys: function(Pe, k) {
        return n(Me(a, k), Pe);
      },
      decamelizeKeys: function(Pe, k) {
        return n(Me(l, k), Pe, k);
      },
      pascalizeKeys: function(Pe, k) {
        return n(Me(t, k), Pe);
      },
      depascalizeKeys: function() {
        return this.decamelizeKeys.apply(this, arguments);
      }
    };
    e.exports ? e.exports = B : r.humps = B;
  })(commonjsGlobal);
})(humps$1);
var humps = humps$1.exports, _excluded = ["class", "style"];
function styleToObject(e) {
  return e.split(";").map(function(r) {
    return r.trim();
  }).filter(function(r) {
    return r;
  }).reduce(function(r, n) {
    var s = n.indexOf(":"), a = humps.camelize(n.slice(0, s)), t = n.slice(s + 1).trim();
    return r[a] = t, r;
  }, {});
}
function classToObject(e) {
  return e.split(/\s+/).reduce(function(r, n) {
    return r[n] = !0, r;
  }, {});
}
function convert(e) {
  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof e == "string")
    return e;
  var s = (e.children || []).map(function(c) {
    return convert(c);
  }), a = Object.keys(e.attributes || {}).reduce(function(c, _) {
    var u = e.attributes[_];
    switch (_) {
      case "class":
        c.class = classToObject(u);
        break;
      case "style":
        c.style = styleToObject(u);
        break;
      default:
        c.attrs[_] = u;
    }
    return c;
  }, {
    attrs: {},
    class: {},
    style: {}
  });
  n.class;
  var t = n.style, l = t === void 0 ? {} : t, o = _objectWithoutProperties(n, _excluded);
  return h$1(e.tag, _objectSpread2(_objectSpread2(_objectSpread2({}, r), {}, {
    class: a.class,
    style: _objectSpread2(_objectSpread2({}, a.style), l)
  }, a.attrs), o), s);
}
var PRODUCTION = !1;
try {
  PRODUCTION = !0;
} catch (e) {
}
function log() {
  if (!PRODUCTION && console && typeof console.error == "function") {
    var e;
    (e = console).error.apply(e, arguments);
  }
}
function objectWithKey(e, r) {
  return Array.isArray(r) && r.length > 0 || !Array.isArray(r) && r ? _defineProperty({}, e, r) : {};
}
function classList(e) {
  var r, n = (r = {
    "fa-spin": e.spin,
    "fa-pulse": e.pulse,
    "fa-fw": e.fixedWidth,
    "fa-border": e.border,
    "fa-li": e.listItem,
    "fa-inverse": e.inverse,
    "fa-flip": e.flip === !0,
    "fa-flip-horizontal": e.flip === "horizontal" || e.flip === "both",
    "fa-flip-vertical": e.flip === "vertical" || e.flip === "both"
  }, _defineProperty(r, "fa-".concat(e.size), e.size !== null), _defineProperty(r, "fa-rotate-".concat(e.rotation), e.rotation !== null), _defineProperty(r, "fa-pull-".concat(e.pull), e.pull !== null), _defineProperty(r, "fa-swap-opacity", e.swapOpacity), _defineProperty(r, "fa-bounce", e.bounce), _defineProperty(r, "fa-shake", e.shake), _defineProperty(r, "fa-beat", e.beat), _defineProperty(r, "fa-fade", e.fade), _defineProperty(r, "fa-beat-fade", e.beatFade), _defineProperty(r, "fa-flash", e.flash), _defineProperty(r, "fa-spin-pulse", e.spinPulse), _defineProperty(r, "fa-spin-reverse", e.spinReverse), r);
  return Object.keys(n).map(function(s) {
    return n[s] ? s : null;
  }).filter(function(s) {
    return s;
  });
}
function normalizeIconArgs(e) {
  if (e && _typeof(e) === "object" && e.prefix && e.iconName && e.icon)
    return e;
  if (parse$1.icon)
    return parse$1.icon(e);
  if (e === null)
    return null;
  if (_typeof(e) === "object" && e.prefix && e.iconName)
    return e;
  if (Array.isArray(e) && e.length === 2)
    return {
      prefix: e[0],
      iconName: e[1]
    };
  if (typeof e == "string")
    return {
      prefix: "fas",
      iconName: e
    };
}
var FontAwesomeIcon = /* @__PURE__ */ defineComponent({
  name: "FontAwesomeIcon",
  props: {
    border: {
      type: Boolean,
      default: !1
    },
    fixedWidth: {
      type: Boolean,
      default: !1
    },
    flip: {
      type: [Boolean, String],
      default: !1,
      validator: function e(r) {
        return [!0, !1, "horizontal", "vertical", "both"].indexOf(r) > -1;
      }
    },
    icon: {
      type: [Object, Array, String],
      required: !0
    },
    mask: {
      type: [Object, Array, String],
      default: null
    },
    maskId: {
      type: String,
      default: null
    },
    listItem: {
      type: Boolean,
      default: !1
    },
    pull: {
      type: String,
      default: null,
      validator: function e(r) {
        return ["right", "left"].indexOf(r) > -1;
      }
    },
    pulse: {
      type: Boolean,
      default: !1
    },
    rotation: {
      type: [String, Number],
      default: null,
      validator: function e(r) {
        return [90, 180, 270].indexOf(Number.parseInt(r, 10)) > -1;
      }
    },
    swapOpacity: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: null,
      validator: function e(r) {
        return ["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"].indexOf(r) > -1;
      }
    },
    spin: {
      type: Boolean,
      default: !1
    },
    transform: {
      type: [String, Object],
      default: null
    },
    symbol: {
      type: [Boolean, String],
      default: !1
    },
    title: {
      type: String,
      default: null
    },
    titleId: {
      type: String,
      default: null
    },
    inverse: {
      type: Boolean,
      default: !1
    },
    bounce: {
      type: Boolean,
      default: !1
    },
    shake: {
      type: Boolean,
      default: !1
    },
    beat: {
      type: Boolean,
      default: !1
    },
    fade: {
      type: Boolean,
      default: !1
    },
    beatFade: {
      type: Boolean,
      default: !1
    },
    flash: {
      type: Boolean,
      default: !1
    },
    spinPulse: {
      type: Boolean,
      default: !1
    },
    spinReverse: {
      type: Boolean,
      default: !1
    }
  },
  setup: function e(r, n) {
    var s = n.attrs, a = computed(function() {
      return normalizeIconArgs(r.icon);
    }), t = computed(function() {
      return objectWithKey("classes", classList(r));
    }), l = computed(function() {
      return objectWithKey("transform", typeof r.transform == "string" ? parse$1.transform(r.transform) : r.transform);
    }), o = computed(function() {
      return objectWithKey("mask", normalizeIconArgs(r.mask));
    }), c = computed(function() {
      return icon2(a.value, _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, t.value), l.value), o.value), {}, {
        symbol: r.symbol,
        title: r.title,
        titleId: r.titleId,
        maskId: r.maskId
      }));
    });
    watch(c, function(u) {
      if (!u)
        return log("Could not find one or more icon(s)", a.value, o.value);
    }, {
      immediate: !0
    });
    var _ = computed(function() {
      return c.value ? convert(c.value.abstract[0], {}, s) : null;
    });
    return function() {
      return _.value;
    };
  }
});
function M(e) {
  return { all: e = e || /* @__PURE__ */ new Map(), on: function(r, n) {
    var s = e.get(r);
    s ? s.push(n) : e.set(r, [n]);
  }, off: function(r, n) {
    var s = e.get(r);
    s && (n ? s.splice(s.indexOf(n) >>> 0, 1) : e.set(r, []));
  }, emit: function(r, n) {
    var s = e.get(r);
    s && s.slice().map(function(a) {
      a(n);
    }), (s = e.get("*")) && s.slice().map(function(a) {
      a(r, n);
    });
  } };
}
const d = M(), C = /* @__PURE__ */ new Map(), w = {
  x: ["left", "center", "right"],
  y: ["top", "bottom"]
}, R = /* @__PURE__ */ ((e) => () => e++)(0), V = (e) => typeof e != "string" ? [] : e.split(/\s+/gi).filter((r) => r), W = (e) => {
  typeof e == "string" && (e = V(e));
  let r = null, n = null;
  return e.forEach((s) => {
    w.y.indexOf(s) !== -1 && (n = s), w.x.indexOf(s) !== -1 && (r = s);
  }), { x: r, y: n };
};
class Y {
  constructor(r, n, s) {
    this.remaining = n, this.callback = r, this.notifyItem = s, this.resume();
  }
  pause() {
    clearTimeout(this.notifyItem.timer), this.remaining -= Date.now() - this.start;
  }
  resume() {
    this.start = Date.now(), clearTimeout(this.notifyItem.timer), this.notifyItem.timer = setTimeout(this.callback, this.remaining);
  }
}
const m = {
  position: ["top", "right"],
  cssAnimation: "vn-fade",
  velocityAnimation: {
    enter: (e) => ({
      height: [e.clientHeight, 0],
      opacity: [1, 0]
    }),
    leave: {
      height: 0,
      opacity: [0, 1]
    }
  }
}, j = /* @__PURE__ */ defineComponent({
  name: "velocity-group",
  emits: ["after-leave", "leave", "enter"],
  methods: {
    enter(e, r) {
      this.$emit("enter", e, r);
    },
    leave(e, r) {
      this.$emit("leave", e, r);
    },
    afterLeave() {
      this.$emit("after-leave");
    }
  }
}), v = (e, r) => {
  const n = e.__vccOpts || e;
  for (const [s, a] of r)
    n[s] = a;
  return n;
};
function G(e, r, n, s, a, t) {
  return openBlock(), createBlock(TransitionGroup, {
    tag: "span",
    css: !1,
    onEnter: e.enter,
    onLeave: e.leave,
    onAfterLeave: e.afterLeave
  }, {
    default: withCtx(() => [
      renderSlot(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["onEnter", "onLeave", "onAfterLeave"]);
}
const z = /* @__PURE__ */ v(j, [["render", G]]), F = /* @__PURE__ */ defineComponent({
  name: "css-group",
  inheritAttrs: !1,
  props: {
    name: { type: String, required: !0 }
  }
});
function P(e, r, n, s, a, t) {
  return openBlock(), createBlock(TransitionGroup, {
    tag: "span",
    name: e.name
  }, {
    default: withCtx(() => [
      renderSlot(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["name"]);
}
const q = /* @__PURE__ */ v(F, [["render", P]]), h = "[-+]?[0-9]*.?[0-9]+", L = [
  {
    name: "px",
    regexp: new RegExp(`^${h}px$`)
  },
  {
    name: "%",
    regexp: new RegExp(`^${h}%$`)
  },
  /**
   * Fallback option
   * If no suffix specified, assigning "px"
   */
  {
    name: "px",
    regexp: new RegExp(`^${h}$`)
  }
], J = (e) => {
  if (e === "auto")
    return {
      type: e,
      value: 0
    };
  for (let r = 0; r < L.length; r++) {
    const n = L[r];
    if (n.regexp.test(e))
      return {
        type: n.name,
        value: parseFloat(e)
      };
  }
  return {
    type: "",
    value: e
  };
}, K = (e) => {
  switch (typeof e) {
    case "number":
      return { type: "px", value: e };
    case "string":
      return J(e);
    default:
      return { type: "", value: e };
  }
}, f = {
  IDLE: 0,
  DESTROYED: 2
}, Q = /* @__PURE__ */ defineComponent({
  name: "notifications",
  components: {
    VelocityGroup: z,
    CssGroup: q
  },
  props: {
    group: {
      type: String,
      default: ""
    },
    width: {
      type: [Number, String],
      default: 300
    },
    reverse: {
      type: Boolean,
      default: !1
    },
    position: {
      type: [String, Array],
      default: m.position
    },
    classes: {
      type: String,
      default: "vue-notification"
    },
    animationType: {
      type: String,
      default: "css"
    },
    animation: {
      type: Object,
      default: m.velocityAnimation
    },
    animationName: {
      type: String,
      default: m.cssAnimation
    },
    speed: {
      type: Number,
      default: 300
    },
    /* Todo */
    cooldown: {
      type: Number,
      default: 0
    },
    duration: {
      type: Number,
      default: 3e3
    },
    delay: {
      type: Number,
      default: 0
    },
    max: {
      type: Number,
      default: 1 / 0
    },
    ignoreDuplicates: {
      type: Boolean,
      default: !1
    },
    closeOnClick: {
      type: Boolean,
      default: !0
    },
    pauseOnHover: {
      type: Boolean,
      default: !1
    }
  },
  emits: ["click", "destroy", "start"],
  data() {
    return {
      list: [],
      velocity: C.get("velocity"),
      timerControl: null
    };
  },
  computed: {
    actualWidth() {
      return K(this.width);
    },
    isVA() {
      return this.animationType === "velocity";
    },
    componentName() {
      return this.isVA ? "velocity-group" : "css-group";
    },
    styles() {
      const { x: e, y: r } = W(this.position), n = this.actualWidth.value, s = this.actualWidth.type, a = {
        width: n + s
      };
      return r && (a[r] = "0px"), e && (e === "center" ? a.left = `calc(50% - ${+n / 2}${s})` : a[e] = "0px"), a;
    },
    active() {
      return this.list.filter((e) => e.state !== f.DESTROYED);
    },
    botToTop() {
      return this.styles.hasOwnProperty("bottom");
    }
  },
  mounted() {
    d.on("add", this.addItem), d.on("close", this.closeItem);
  },
  methods: {
    destroyIfNecessary(e) {
      this.$emit("click", e), this.closeOnClick && this.destroy(e);
    },
    pauseTimeout() {
      var e;
      this.pauseOnHover && ((e = this.timerControl) == null || e.pause());
    },
    resumeTimeout() {
      var e;
      this.pauseOnHover && ((e = this.timerControl) == null || e.resume());
    },
    addItem(e = {}) {
      if (e.group || (e.group = ""), e.data || (e.data = {}), this.group !== e.group)
        return;
      if (e.clean || e.clear) {
        this.destroyAll();
        return;
      }
      const r = typeof e.duration == "number" ? e.duration : this.duration, n = typeof e.speed == "number" ? e.speed : this.speed, s = typeof e.ignoreDuplicates == "boolean" ? e.ignoreDuplicates : this.ignoreDuplicates, { title: a, text: t, type: l, data: o, id: c } = e, _ = {
        id: c || R(),
        title: a,
        text: t,
        type: l,
        state: f.IDLE,
        speed: n,
        length: r + 2 * n,
        data: o
      };
      r >= 0 && (this.timerControl = new Y(() => this.destroy(_), _.length, _));
      const u = this.reverse ? !this.botToTop : this.botToTop;
      let y = -1;
      const g = this.active.some((Ee) => Ee.title === e.title && Ee.text === e.text);
      (!s || !g) && (u ? (this.list.push(_), this.$emit("start", _), this.active.length > this.max && (y = 0)) : (this.list.unshift(_), this.$emit("start", _), this.active.length > this.max && (y = this.active.length - 1)), y !== -1 && this.destroy(this.active[y]));
    },
    closeItem(e) {
      this.destroyById(e);
    },
    notifyClass(e) {
      return [
        "vue-notification-template",
        this.classes,
        e.type || ""
      ];
    },
    notifyWrapperStyle(e) {
      return this.isVA ? void 0 : { transition: `all ${e.speed}ms` };
    },
    destroy(e) {
      clearTimeout(e.timer), e.state = f.DESTROYED, this.clean(), this.$emit("destroy", e);
    },
    destroyById(e) {
      const r = this.list.find((n) => n.id === e);
      r && this.destroy(r);
    },
    destroyAll() {
      this.active.forEach(this.destroy);
    },
    getAnimation(e, r) {
      var n;
      const s = (n = this.animation) == null ? void 0 : n[e];
      return typeof s == "function" ? s.call(this, r) : s;
    },
    enter(e, r) {
      if (!this.isVA)
        return;
      const n = this.getAnimation("enter", e);
      this.velocity(e, n, {
        duration: this.speed,
        complete: r
      });
    },
    leave(e, r) {
      if (!this.isVA)
        return;
      const n = this.getAnimation("leave", e);
      this.velocity(e, n, {
        duration: this.speed,
        complete: r
      });
    },
    clean() {
      this.list = this.list.filter((e) => e.state !== f.DESTROYED);
    }
  }
}), U = ["data-id"], X = ["onClick"], Z = ["innerHTML"], tt = ["innerHTML"];
function et(e, r, n, s, a, t) {
  return openBlock(), createElementBlock("div", {
    class: "vue-notification-group",
    style: normalizeStyle(e.styles)
  }, [
    (openBlock(), createBlock(resolveDynamicComponent(e.componentName), {
      name: e.animationName,
      onEnter: e.enter,
      onLeave: e.leave,
      onAfterLeave: e.clean
    }, {
      default: withCtx(() => [
        (openBlock(!0), createElementBlock(Fragment, null, renderList(e.active, (l) => (openBlock(), createElementBlock("div", {
          key: l.id,
          class: "vue-notification-wrapper",
          style: normalizeStyle(e.notifyWrapperStyle(l)),
          "data-id": l.id,
          onMouseenter: r[0] || (r[0] = (...o) => e.pauseTimeout && e.pauseTimeout(...o)),
          onMouseleave: r[1] || (r[1] = (...o) => e.resumeTimeout && e.resumeTimeout(...o))
        }, [
          renderSlot(e.$slots, "body", {
            class: normalizeClass([e.classes, l.type]),
            item: l,
            close: () => e.destroy(l)
          }, () => [
            createBaseVNode("div", {
              class: normalizeClass(e.notifyClass(l)),
              onClick: (o) => e.destroyIfNecessary(l)
            }, [
              l.title ? (openBlock(), createElementBlock("div", {
                key: 0,
                class: "notification-title",
                innerHTML: l.title
              }, null, 8, Z)) : createCommentVNode("", !0),
              createBaseVNode("div", {
                class: "notification-content",
                innerHTML: l.text
              }, null, 8, tt)
            ], 10, X)
          ])
        ], 44, U))), 128))
      ]),
      _: 3
    }, 40, ["name", "onEnter", "onLeave", "onAfterLeave"]))
  ], 4);
}
const it = /* @__PURE__ */ v(Q, [["render", et]]), A = (e) => {
  typeof e == "string" && (e = { title: "", text: e }), typeof e == "object" && d.emit("add", e);
};
A.close = (e) => {
  d.emit("close", e);
};
function st(e, r = {}) {
  Object.entries(r).forEach((s) => C.set(...s));
  const n = r.name || "notify";
  e.config.globalProperties["$" + n] = A, e.component(r.componentName || "Notifications", it);
}
const at = {
  install: st
};
(function() {
  var e;
  try {
    if (typeof document < "u") {
      var r = document.createElement("style");
      r.nonce = (e = document.head.querySelector("meta[property=csp-nonce]")) == null ? void 0 : e.content, r.appendChild(document.createTextNode(".vue-notification-group{display:block;position:fixed;z-index:5000}.vue-notification-wrapper{display:block;overflow:hidden;width:100%;margin:0;padding:0}.notification-title{font-weight:600}.vue-notification-template{display:block;box-sizing:border-box;background:white;text-align:left}.vue-notification{display:block;box-sizing:border-box;text-align:left;font-size:12px;padding:10px;margin:0 5px 5px;color:#fff;background:#44A4FC;border-left:5px solid #187FE7}.vue-notification.warn{background:#ffb648;border-left-color:#f48a06}.vue-notification.error{background:#E54D42;border-left-color:#b82e24}.vue-notification.success{background:#68CD86;border-left-color:#42a85f}.vn-fade-enter-active,.vn-fade-leave-active,.vn-fade-move{transition:all .5s}.vn-fade-enter-from,.vn-fade-leave-to{opacity:0}")), document.head.appendChild(r);
    }
  } catch (n) {
    console.error("vite-plugin-css-injected-by-js", n);
  }
})();
var vueSliderComponent_umd_min = { exports: {} };
(function(e, r) {
  (function(n, s) {
    e.exports = s(require$$0);
  })(typeof self < "u" ? self : commonjsGlobal$1, function(n) {
    return function() {
      var s = { 388: function(o, c) {
        var _, u, y;
        (function(g, Ee) {
          u = [], _ = Ee, y = typeof _ == "function" ? _.apply(c, u) : _, y === void 0 || (o.exports = y);
        })(typeof self < "u" && self, function() {
          function g() {
            var Ee = Object.getOwnPropertyDescriptor(document, "currentScript");
            if (!Ee && "currentScript" in document && document.currentScript || Ee && Ee.get !== g && document.currentScript)
              return document.currentScript;
            try {
              throw new Error();
            } catch (D) {
              var Ve, Me, B, Pe = /.*at [^(]*\((.*):(.+):(.+)\)$/gi, k = /@([^@]*):(\d+):(\d+)\s*$/gi, b = Pe.exec(D.stack) || k.exec(D.stack), Le = b && b[1] || !1, xe = b && b[2] || !1, ze = document.location.href.replace(document.location.hash, ""), Se = document.getElementsByTagName("script");
              Le === ze && (Ve = document.documentElement.outerHTML, Me = new RegExp("(?:[^\\n]+?\\n){0," + (xe - 2) + "}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*", "i"), B = Ve.replace(Me, "$1").trim());
              for (var Te = 0; Te < Se.length; Te++)
                if (Se[Te].readyState === "interactive" || Se[Te].src === Le || Le === ze && Se[Te].innerHTML && Se[Te].innerHTML.trim() === B)
                  return Se[Te];
              return null;
            }
          }
          return g;
        });
      }, 905: function(o, c, _) {
        _.r(c);
        var u = _(117), y = _.n(u), g = _(488), Ee = _.n(g), Ve = Ee()(y());
        Ve.push([o.id, ".vue-slider-dot{position:absolute;-webkit-transition:all 0s;transition:all 0s;z-index:5}.vue-slider-dot:focus{outline:none}.vue-slider-dot-tooltip{position:absolute;visibility:hidden}.vue-slider-dot-hover:hover .vue-slider-dot-tooltip,.vue-slider-dot-tooltip-show{visibility:visible}.vue-slider-dot-tooltip-top{top:-10px;left:50%;-webkit-transform:translate(-50%,-100%);transform:translate(-50%,-100%)}.vue-slider-dot-tooltip-bottom{bottom:-10px;left:50%;-webkit-transform:translate(-50%,100%);transform:translate(-50%,100%)}.vue-slider-dot-tooltip-left{left:-10px;top:50%;-webkit-transform:translate(-100%,-50%);transform:translate(-100%,-50%)}.vue-slider-dot-tooltip-right{right:-10px;top:50%;-webkit-transform:translate(100%,-50%);transform:translate(100%,-50%)}", ""]), c.default = Ve;
      }, 121: function(o, c, _) {
        _.r(c);
        var u = _(117), y = _.n(u), g = _(488), Ee = _.n(g), Ve = Ee()(y());
        Ve.push([o.id, ".vue-slider-marks{position:relative;width:100%;height:100%}.vue-slider-mark{position:absolute;z-index:1}.vue-slider-ltr .vue-slider-mark,.vue-slider-rtl .vue-slider-mark{width:0;height:100%;top:50%}.vue-slider-ltr .vue-slider-mark-step,.vue-slider-rtl .vue-slider-mark-step{top:0}.vue-slider-ltr .vue-slider-mark-label,.vue-slider-rtl .vue-slider-mark-label{top:100%;margin-top:10px}.vue-slider-ltr .vue-slider-mark{-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.vue-slider-ltr .vue-slider-mark-step{left:0}.vue-slider-ltr .vue-slider-mark-label{left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.vue-slider-rtl .vue-slider-mark{-webkit-transform:translate(50%,-50%);transform:translate(50%,-50%)}.vue-slider-rtl .vue-slider-mark-step{right:0}.vue-slider-rtl .vue-slider-mark-label{right:50%;-webkit-transform:translateX(50%);transform:translateX(50%)}.vue-slider-btt .vue-slider-mark,.vue-slider-ttb .vue-slider-mark{width:100%;height:0;left:50%}.vue-slider-btt .vue-slider-mark-step,.vue-slider-ttb .vue-slider-mark-step{left:0}.vue-slider-btt .vue-slider-mark-label,.vue-slider-ttb .vue-slider-mark-label{left:100%;margin-left:10px}.vue-slider-btt .vue-slider-mark{-webkit-transform:translate(-50%,50%);transform:translate(-50%,50%)}.vue-slider-btt .vue-slider-mark-step{top:0}.vue-slider-btt .vue-slider-mark-label{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.vue-slider-ttb .vue-slider-mark{-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.vue-slider-ttb .vue-slider-mark-step{bottom:0}.vue-slider-ttb .vue-slider-mark-label{bottom:50%;-webkit-transform:translateY(50%);transform:translateY(50%)}.vue-slider-mark-label,.vue-slider-mark-step{position:absolute}", ""]), c.default = Ve;
      }, 207: function(o, c, _) {
        _.r(c);
        var u = _(117), y = _.n(u), g = _(488), Ee = _.n(g), Ve = Ee()(y());
        Ve.push([o.id, ".vue-slider{position:relative;-webkit-box-sizing:content-box;box-sizing:content-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:block;-webkit-tap-highlight-color:rgba(0,0,0,0)}.vue-slider-rail{position:relative;width:100%;height:100%;-webkit-transition-property:width,height,left,right,top,bottom;transition-property:width,height,left,right,top,bottom}.vue-slider-process{position:absolute;z-index:1}", ""]), c.default = Ve;
      }, 488: function(o) {
        o.exports = function(c) {
          var _ = [];
          return _.toString = function() {
            return this.map(function(u) {
              var y = "", g = typeof u[5] < "u";
              return u[4] && (y += "@supports (".concat(u[4], ") {")), u[2] && (y += "@media ".concat(u[2], " {")), g && (y += "@layer".concat(u[5].length > 0 ? " ".concat(u[5]) : "", " {")), y += c(u), g && (y += "}"), u[2] && (y += "}"), u[4] && (y += "}"), y;
            }).join("");
          }, _.i = function(u, y, g, Ee, Ve) {
            typeof u == "string" && (u = [[null, u, void 0]]);
            var Me = {};
            if (g)
              for (var B = 0; B < this.length; B++) {
                var Pe = this[B][0];
                Pe != null && (Me[Pe] = !0);
              }
            for (var k = 0; k < u.length; k++) {
              var b = [].concat(u[k]);
              g && Me[b[0]] || (typeof Ve < "u" && (typeof b[5] > "u" || (b[1] = "@layer".concat(b[5].length > 0 ? " ".concat(b[5]) : "", " {").concat(b[1], "}")), b[5] = Ve), y && (b[2] && (b[1] = "@media ".concat(b[2], " {").concat(b[1], "}")), b[2] = y), Ee && (b[4] ? (b[1] = "@supports (".concat(b[4], ") {").concat(b[1], "}"), b[4] = Ee) : b[4] = "".concat(Ee)), _.push(b));
            }
          }, _;
        };
      }, 117: function(o) {
        o.exports = function(c) {
          return c[1];
        };
      }, 831: function(o, c) {
        c.Z = (_, u) => {
          const y = _.__vccOpts || _;
          for (const [g, Ee] of u)
            y[g] = Ee;
          return y;
        };
      }, 466: function(o, c, _) {
        var u = _(905);
        u.__esModule && (u = u.default), typeof u == "string" && (u = [[o.id, u, ""]]), u.locals && (o.exports = u.locals);
        var y = _(959).Z;
        y("50bc1720", u, !0, { sourceMap: !1, shadowMode: !1 });
      }, 18: function(o, c, _) {
        var u = _(121);
        u.__esModule && (u = u.default), typeof u == "string" && (u = [[o.id, u, ""]]), u.locals && (o.exports = u.locals);
        var y = _(959).Z;
        y("10aa5f36", u, !0, { sourceMap: !1, shadowMode: !1 });
      }, 631: function(o, c, _) {
        var u = _(207);
        u.__esModule && (u = u.default), typeof u == "string" && (u = [[o.id, u, ""]]), u.locals && (o.exports = u.locals);
        var y = _(959).Z;
        y("1772934e", u, !0, { sourceMap: !1, shadowMode: !1 });
      }, 959: function(o, c, _) {
        function u(He, We) {
          for (var Ke = [], $ = {}, De = 0; De < We.length; De++) {
            var Re = We[De], Ie = Re[0], O = Re[1], Ue = Re[2], $e = Re[3], Ze = { id: He + ":" + De, css: O, media: Ue, sourceMap: $e };
            $[Ie] ? $[Ie].parts.push(Ze) : Ke.push($[Ie] = { id: Ie, parts: [Ze] });
          }
          return Ke;
        }
        _.d(c, { Z: function() {
          return xe;
        } });
        var y = typeof document < "u";
        if (typeof DEBUG < "u" && DEBUG && !y)
          throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");
        var g = {}, Ee = y && (document.head || document.getElementsByTagName("head")[0]), Ve = null, Me = 0, B = !1, Pe = function() {
        }, k = null, b = "data-vue-ssr-id", Le = typeof navigator < "u" && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase());
        function xe(He, We, Ke, $) {
          B = Ke, k = $ || {};
          var De = u(He, We);
          return ze(De), function(Re) {
            for (var Ie = [], O = 0; O < De.length; O++) {
              var Ue = De[O], $e = g[Ue.id];
              $e.refs--, Ie.push($e);
            }
            for (Re ? (De = u(He, Re), ze(De)) : De = [], O = 0; O < Ie.length; O++)
              if ($e = Ie[O], $e.refs === 0) {
                for (var Ze = 0; Ze < $e.parts.length; Ze++)
                  $e.parts[Ze]();
                delete g[$e.id];
              }
          };
        }
        function ze(He) {
          for (var We = 0; We < He.length; We++) {
            var Ke = He[We], $ = g[Ke.id];
            if ($) {
              $.refs++;
              for (var De = 0; De < $.parts.length; De++)
                $.parts[De](Ke.parts[De]);
              for (; De < Ke.parts.length; De++)
                $.parts.push(Te(Ke.parts[De]));
              $.parts.length > Ke.parts.length && ($.parts.length = Ke.parts.length);
            } else {
              var Re = [];
              for (De = 0; De < Ke.parts.length; De++)
                Re.push(Te(Ke.parts[De]));
              g[Ke.id] = { id: Ke.id, refs: 1, parts: Re };
            }
          }
        }
        function Se() {
          var He = document.createElement("style");
          return He.type = "text/css", Ee.appendChild(He), He;
        }
        function Te(He) {
          var We, Ke, $ = document.querySelector("style[" + b + '~="' + He.id + '"]');
          if ($) {
            if (B)
              return Pe;
            $.parentNode.removeChild($);
          }
          if (Le) {
            var De = Me++;
            $ = Ve || (Ve = Se()), We = ke.bind(null, $, De, !1), Ke = ke.bind(null, $, De, !0);
          } else
            $ = Se(), We = Fe.bind(null, $), Ke = function() {
              $.parentNode.removeChild($);
            };
          return We(He), function(Re) {
            if (Re) {
              if (Re.css === He.css && Re.media === He.media && Re.sourceMap === He.sourceMap)
                return;
              We(He = Re);
            } else
              Ke();
          };
        }
        var D = /* @__PURE__ */ function() {
          var He = [];
          return function(We, Ke) {
            return He[We] = Ke, He.filter(Boolean).join(`
`);
          };
        }();
        function ke(He, We, Ke, $) {
          var De = Ke ? "" : $.css;
          if (He.styleSheet)
            He.styleSheet.cssText = D(We, De);
          else {
            var Re = document.createTextNode(De), Ie = He.childNodes;
            Ie[We] && He.removeChild(Ie[We]), Ie.length ? He.insertBefore(Re, Ie[We]) : He.appendChild(Re);
          }
        }
        function Fe(He, We) {
          var Ke = We.css, $ = We.media, De = We.sourceMap;
          if ($ && He.setAttribute("media", $), k.ssrId && He.setAttribute(b, We.id), De && (Ke += `
/*# sourceURL=` + De.sources[0] + " */", Ke += `
/*# sourceMappingURL=data:application/json;base64,` + btoa(unescape(encodeURIComponent(JSON.stringify(De)))) + " */"), He.styleSheet)
            He.styleSheet.cssText = Ke;
          else {
            for (; He.firstChild; )
              He.removeChild(He.firstChild);
            He.appendChild(document.createTextNode(Ke));
          }
        }
      }, 927: function(o) {
        o.exports = n;
      } }, a = {};
      function t(o) {
        var c = a[o];
        if (c !== void 0)
          return c.exports;
        var _ = a[o] = { id: o, exports: {} };
        return s[o].call(_.exports, _, _.exports, t), _.exports;
      }
      (function() {
        t.n = function(o) {
          var c = o && o.__esModule ? function() {
            return o.default;
          } : function() {
            return o;
          };
          return t.d(c, { a: c }), c;
        };
      })(), function() {
        t.d = function(o, c) {
          for (var _ in c)
            t.o(c, _) && !t.o(o, _) && Object.defineProperty(o, _, { enumerable: !0, get: c[_] });
        };
      }(), function() {
        t.o = function(o, c) {
          return Object.prototype.hasOwnProperty.call(o, c);
        };
      }(), function() {
        t.r = function(o) {
          typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o, "__esModule", { value: !0 });
        };
      }(), function() {
        t.p = "";
      }();
      var l = {};
      return function() {
        if (t.d(l, { default: function() {
          return Ut;
        } }), typeof window < "u") {
          var o = window.document.currentScript, c = t(388);
          o = c(), "currentScript" in document || Object.defineProperty(document, "currentScript", { get: c });
          var _ = o && o.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);
          _ && (t.p = _[1]);
        }
        var u = t(927);
        function y(dt, Je, mt) {
          return Je in dt ? Object.defineProperty(dt, Je, { value: mt, enumerable: !0, configurable: !0, writable: !0 }) : dt[Je] = mt, dt;
        }
        var g = { key: 0, class: "vue-slider-marks" };
        function Ee(dt, Je, mt, wt, jt, Gt) {
          var Yt = (0, u.resolveComponent)("vue-slider-mark"), Qt = (0, u.resolveComponent)("vue-slider-dot");
          return (0, u.openBlock)(), (0, u.createElementBlock)("div", (0, u.mergeProps)({ ref: "container", class: dt.containerClasses, style: dt.containerStyles, onClick: Je[2] || (Je[2] = function() {
            return dt.clickHandle && dt.clickHandle.apply(dt, arguments);
          }), onTouchstartPassive: Je[3] || (Je[3] = function() {
            return dt.dragStartOnProcess && dt.dragStartOnProcess.apply(dt, arguments);
          }), onMousedownPassive: Je[4] || (Je[4] = function() {
            return dt.dragStartOnProcess && dt.dragStartOnProcess.apply(dt, arguments);
          }) }, dt.$attrs), [(0, u.createElementVNode)("div", { class: "vue-slider-rail", style: (0, u.normalizeStyle)(dt.railStyle) }, [((0, u.openBlock)(!0), (0, u.createElementBlock)(u.Fragment, null, (0, u.renderList)(dt.processArray, function(tr, rr) {
            return (0, u.renderSlot)(dt.$slots, "process", (0, u.normalizeProps)((0, u.guardReactiveProps)(tr)), function() {
              return [((0, u.openBlock)(), (0, u.createElementBlock)("div", { class: "vue-slider-process", key: "process-".concat(rr), style: (0, u.normalizeStyle)(tr.style) }, null, 4))];
            });
          }), 256)), dt.sliderMarks && dt.control ? ((0, u.openBlock)(), (0, u.createElementBlock)("div", g, [((0, u.openBlock)(!0), (0, u.createElementBlock)(u.Fragment, null, (0, u.renderList)(dt.control.markList, function(tr, rr) {
            return (0, u.renderSlot)(dt.$slots, "mark", (0, u.normalizeProps)((0, u.guardReactiveProps)(tr)), function() {
              var er;
              return [((0, u.openBlock)(), (0, u.createBlock)(Yt, { key: "mark-".concat(rr), mark: tr, hideLabel: dt.hideLabel, style: (0, u.normalizeStyle)((er = {}, y(er, dt.isHorizontal ? "height" : "width", "100%"), y(er, dt.isHorizontal ? "width" : "height", dt.tailSize), y(er, dt.mainDirection, "".concat(tr.pos, "%")), er)), stepStyle: dt.stepStyle, stepActiveStyle: dt.stepActiveStyle, labelStyle: dt.labelStyle, labelActiveStyle: dt.labelActiveStyle, onPressLabel: Je[0] || (Je[0] = function(sr) {
                return dt.clickable && dt.setValueByPos(sr);
              }) }, { step: (0, u.withCtx)(function() {
                return [(0, u.renderSlot)(dt.$slots, "step", (0, u.normalizeProps)((0, u.guardReactiveProps)(tr)))];
              }), label: (0, u.withCtx)(function() {
                return [(0, u.renderSlot)(dt.$slots, "label", (0, u.normalizeProps)((0, u.guardReactiveProps)(tr)))];
              }), _: 2 }, 1032, ["mark", "hideLabel", "style", "stepStyle", "stepActiveStyle", "labelStyle", "labelActiveStyle"]))];
            });
          }), 256))])) : (0, u.createCommentVNode)("", !0), ((0, u.openBlock)(!0), (0, u.createElementBlock)(u.Fragment, null, (0, u.renderList)(dt.dots, function(tr, rr) {
            var er;
            return (0, u.openBlock)(), (0, u.createBlock)(Qt, (0, u.mergeProps)({ ref_for: !0, ref: "dot-".concat(rr), key: "dot-".concat(rr), value: tr.value, disabled: tr.disabled, focus: tr.focus, "dot-style": [tr.style, tr.disabled ? tr.disabledStyle : null, tr.focus ? tr.focusStyle : null], tooltip: tr.tooltip || dt.tooltip, "tooltip-style": [dt.tooltipStyle, tr.tooltipStyle, tr.disabled ? tr.tooltipDisabledStyle : null, tr.focus ? tr.tooltipFocusStyle : null], "tooltip-formatter": Array.isArray(dt.sliderTooltipFormatter) ? dt.sliderTooltipFormatter[rr] : dt.sliderTooltipFormatter, "tooltip-placement": dt.tooltipDirections[rr], style: [dt.dotBaseStyle, (er = {}, y(er, dt.mainDirection, "".concat(tr.pos, "%")), y(er, "transition", "".concat(dt.mainDirection, " ").concat(dt.animateTime, "s")), er)], onDragStart: function() {
              return dt.dragStart(rr);
            }, role: "slider", "aria-valuenow": tr.value, "aria-valuemin": dt.min, "aria-valuemax": dt.max, "aria-orientation": dt.isHorizontal ? "horizontal" : "vertical", tabindex: "0", onFocus: function() {
              return dt.focus(tr, rr);
            }, onBlur: Je[1] || (Je[1] = function() {
              return dt.blur();
            }) }, dt.dotAttrs), { dot: (0, u.withCtx)(function() {
              return [(0, u.renderSlot)(dt.$slots, "dot", (0, u.normalizeProps)((0, u.guardReactiveProps)(tr)))];
            }), tooltip: (0, u.withCtx)(function() {
              return [(0, u.renderSlot)(dt.$slots, "tooltip", (0, u.normalizeProps)((0, u.guardReactiveProps)(tr)))];
            }), _: 2 }, 1040, ["value", "disabled", "focus", "dot-style", "tooltip", "tooltip-style", "tooltip-formatter", "tooltip-placement", "style", "onDragStart", "aria-valuenow", "aria-valuemin", "aria-valuemax", "aria-orientation", "onFocus"]);
          }), 128))], 4), (0, u.renderSlot)(dt.$slots, "default", { value: dt.getValue() })], 16);
        }
        var Ve = ["aria-valuetext"], Me = { class: "vue-slider-dot-tooltip-text" };
        function B(dt, Je, mt, wt, jt, Gt) {
          var Yt;
          return (0, u.openBlock)(), (0, u.createElementBlock)("div", { ref: "dot", class: (0, u.normalizeClass)(dt.dotClasses), "aria-valuetext": (Yt = dt.tooltipValue) === null || Yt === void 0 ? void 0 : Yt.toString(), onMousedownPassive: Je[0] || (Je[0] = function() {
            return dt.dragStart && dt.dragStart.apply(dt, arguments);
          }), onTouchstartPassive: Je[1] || (Je[1] = function() {
            return dt.dragStart && dt.dragStart.apply(dt, arguments);
          }) }, [(0, u.renderSlot)(dt.$slots, "dot", {}, function() {
            return [(0, u.createElementVNode)("div", { class: (0, u.normalizeClass)(dt.handleClasses), style: (0, u.normalizeStyle)(dt.dotStyle) }, null, 6)];
          }), dt.tooltip !== "none" ? ((0, u.openBlock)(), (0, u.createElementBlock)("div", { key: 0, class: (0, u.normalizeClass)(dt.tooltipClasses) }, [(0, u.renderSlot)(dt.$slots, "tooltip", {}, function() {
            return [(0, u.createElementVNode)("div", { class: (0, u.normalizeClass)(dt.tooltipInnerClasses), style: (0, u.normalizeStyle)(dt.tooltipStyle) }, [(0, u.createElementVNode)("span", Me, (0, u.toDisplayString)(dt.tooltipValue), 1)], 6)];
          })], 2)) : (0, u.createCommentVNode)("", !0)], 42, Ve);
        }
        t(466);
        var Pe = (0, u.defineComponent)({ name: "VueSliderDot", emits: ["drag-start"], props: { value: { type: [String, Number], default: 0 }, tooltip: { type: String, required: !0 }, tooltipPlacement: { type: String, validator: function(dt) {
          return ["top", "right", "bottom", "left"].indexOf(dt) > -1;
        }, required: !0 }, tooltipFormatter: { type: [String, Function] }, focus: { type: Boolean, default: !1 }, disabled: { type: Boolean, default: !1 }, dotStyle: { type: Object }, tooltipStyle: { type: Object } }, computed: { dotClasses: function() {
          return ["vue-slider-dot", { "vue-slider-dot-hover": this.tooltip === "hover" || this.tooltip === "active", "vue-slider-dot-disabled": this.disabled, "vue-slider-dot-focus": this.focus }];
        }, handleClasses: function() {
          return ["vue-slider-dot-handle", { "vue-slider-dot-handle-disabled": this.disabled, "vue-slider-dot-handle-focus": this.focus }];
        }, tooltipClasses: function() {
          return ["vue-slider-dot-tooltip", ["vue-slider-dot-tooltip-".concat(this.tooltipPlacement)], { "vue-slider-dot-tooltip-show": this.showTooltip }];
        }, tooltipInnerClasses: function() {
          return ["vue-slider-dot-tooltip-inner", ["vue-slider-dot-tooltip-inner-".concat(this.tooltipPlacement)], { "vue-slider-dot-tooltip-inner-disabled": this.disabled, "vue-slider-dot-tooltip-inner-focus": this.focus }];
        }, showTooltip: function() {
          switch (this.tooltip) {
            case "always":
              return !0;
            case "none":
              return !1;
            case "focus":
            case "active":
              return !!this.focus;
            default:
              return !1;
          }
        }, tooltipValue: function() {
          return this.tooltipFormatter ? typeof this.tooltipFormatter == "string" ? this.tooltipFormatter.replace(/\{value\}/, String(this.value)) : this.tooltipFormatter(this.value) : this.value;
        } }, methods: { dragStart: function() {
          if (this.disabled)
            return !1;
          this.$emit("drag-start");
        } } }), k = t(831), Le = (0, k.Z)(Pe, [["render", B]]);
        function xe(dt, Je, mt, wt, jt, Gt) {
          return (0, u.openBlock)(), (0, u.createElementBlock)("div", { class: (0, u.normalizeClass)(dt.marksClasses) }, [(0, u.renderSlot)(dt.$slots, "step", {}, function() {
            return [(0, u.createElementVNode)("div", { class: (0, u.normalizeClass)(dt.stepClasses), style: (0, u.normalizeStyle)([dt.stepStyle, dt.mark.style || {}, dt.mark.active && dt.stepActiveStyle ? dt.stepActiveStyle : {}, dt.mark.active && dt.mark.activeStyle ? dt.mark.activeStyle : {}]) }, null, 6)];
          }), dt.hideLabel ? (0, u.createCommentVNode)("", !0) : (0, u.renderSlot)(dt.$slots, "label", { key: 0 }, function() {
            return [(0, u.createElementVNode)("div", { class: (0, u.normalizeClass)(dt.labelClasses), style: (0, u.normalizeStyle)([dt.labelStyle, dt.mark.labelStyle || {}, dt.mark.active && dt.labelActiveStyle ? dt.labelActiveStyle : {}, dt.mark.active && dt.mark.labelActiveStyle ? dt.mark.labelActiveStyle : {}]), onClick: Je[0] || (Je[0] = function() {
              return dt.labelClickHandle && dt.labelClickHandle.apply(dt, arguments);
            }) }, (0, u.toDisplayString)(dt.mark.label), 7)];
          })], 2);
        }
        t(18);
        var ze = (0, u.defineComponent)({ name: "VueSliderMark", emits: ["press-label"], props: { mark: { type: Object, required: !0 }, hideLabel: { type: Boolean }, stepStyle: { type: Object, default: function() {
          return {};
        } }, stepActiveStyle: { type: Object, default: function() {
          return {};
        } }, labelStyle: { type: Object, default: function() {
          return {};
        } }, labelActiveStyle: { type: Object, default: function() {
          return {};
        } } }, computed: { marksClasses: function() {
          return ["vue-slider-mark", { "vue-slider-mark-active": this.mark.active }];
        }, stepClasses: function() {
          return ["vue-slider-mark-step", { "vue-slider-mark-step-active": this.mark.active }];
        }, labelClasses: function() {
          return ["vue-slider-mark-label", { "vue-slider-mark-label-active": this.mark.active }];
        } }, methods: { labelClickHandle: function(dt) {
          dt.stopPropagation(), this.$emit("press-label", this.mark.pos);
        } } });
        const Se = (0, k.Z)(ze, [["render", xe]]);
        var Te, D = Se, ke = function(dt) {
          return typeof dt == "number" ? "".concat(dt, "px") : dt;
        }, Fe = function(dt) {
          var Je = document.documentElement, mt = document.body, wt = dt.getBoundingClientRect(), jt = { y: wt.top + (window.pageYOffset || Je.scrollTop) - (Je.clientTop || mt.clientTop || 0), x: wt.left + (window.pageXOffset || Je.scrollLeft) - (Je.clientLeft || mt.clientLeft || 0) };
          return jt;
        }, He = function(dt, Je, mt) {
          var wt = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1, jt = "targetTouches" in dt ? dt.targetTouches[0] : dt, Gt = Fe(Je), Yt = { x: jt.pageX - Gt.x, y: jt.pageY - Gt.y };
          return { x: mt ? Je.offsetWidth * wt - Yt.x : Yt.x, y: mt ? Je.offsetHeight * wt - Yt.y : Yt.y };
        };
        (function(dt) {
          dt[dt.PAGE_UP = 33] = "PAGE_UP", dt[dt.PAGE_DOWN = 34] = "PAGE_DOWN", dt[dt.END = 35] = "END", dt[dt.HOME = 36] = "HOME", dt[dt.LEFT = 37] = "LEFT", dt[dt.UP = 38] = "UP", dt[dt.RIGHT = 39] = "RIGHT", dt[dt.DOWN = 40] = "DOWN";
        })(Te || (Te = {}));
        var We = function(dt, Je) {
          if (Je.hook) {
            var mt = Je.hook(dt);
            if (typeof mt == "function")
              return mt;
            if (!mt)
              return null;
          }
          switch (dt.keyCode) {
            case Te.UP:
              return function(wt) {
                return Je.direction === "ttb" ? wt - 1 : wt + 1;
              };
            case Te.RIGHT:
              return function(wt) {
                return Je.direction === "rtl" ? wt - 1 : wt + 1;
              };
            case Te.DOWN:
              return function(wt) {
                return Je.direction === "ttb" ? wt + 1 : wt - 1;
              };
            case Te.LEFT:
              return function(wt) {
                return Je.direction === "rtl" ? wt + 1 : wt - 1;
              };
            case Te.END:
              return function() {
                return Je.max;
              };
            case Te.HOME:
              return function() {
                return Je.min;
              };
            case Te.PAGE_UP:
              return function(wt) {
                return wt + 10;
              };
            case Te.PAGE_DOWN:
              return function(wt) {
                return wt - 10;
              };
            default:
              return null;
          }
        };
        function Ke(dt, Je) {
          if (!(dt instanceof Je))
            throw new TypeError("Cannot call a class as a function");
        }
        function $(dt, Je) {
          for (var mt = 0; mt < Je.length; mt++) {
            var wt = Je[mt];
            wt.enumerable = wt.enumerable || !1, wt.configurable = !0, "value" in wt && (wt.writable = !0), Object.defineProperty(dt, wt.key, wt);
          }
        }
        function De(dt, Je, mt) {
          return Je && $(dt.prototype, Je), mt && $(dt, mt), Object.defineProperty(dt, "prototype", { writable: !1 }), dt;
        }
        function Re(dt, Je, mt) {
          return Je in dt ? Object.defineProperty(dt, Je, { value: mt, enumerable: !0, configurable: !0, writable: !0 }) : dt[Je] = mt, dt;
        }
        var Ie, O, Ue = function() {
          function dt(Je) {
            Ke(this, dt), Re(this, "num", void 0), this.num = Je;
          }
          return De(dt, [{ key: "decimal", value: function(Je, mt) {
            var wt = this.num, jt = this.getDecimalLen(wt), Gt = this.getDecimalLen(Je), Yt = 0;
            switch (mt) {
              case "+":
                Yt = this.getExponent(jt, Gt), this.num = (this.safeRoundUp(wt, Yt) + this.safeRoundUp(Je, Yt)) / Yt;
                break;
              case "-":
                Yt = this.getExponent(jt, Gt), this.num = (this.safeRoundUp(wt, Yt) - this.safeRoundUp(Je, Yt)) / Yt;
                break;
              case "*":
                this.num = this.safeRoundUp(this.safeRoundUp(wt, this.getExponent(jt)), this.safeRoundUp(Je, this.getExponent(Gt))) / this.getExponent(jt + Gt);
                break;
              case "/":
                Yt = this.getExponent(jt, Gt), this.num = this.safeRoundUp(wt, Yt) / this.safeRoundUp(Je, Yt);
                break;
              case "%":
                Yt = this.getExponent(jt, Gt), this.num = this.safeRoundUp(wt, Yt) % this.safeRoundUp(Je, Yt) / Yt;
                break;
            }
            return this;
          } }, { key: "plus", value: function(Je) {
            return this.decimal(Je, "+");
          } }, { key: "minus", value: function(Je) {
            return this.decimal(Je, "-");
          } }, { key: "multiply", value: function(Je) {
            return this.decimal(Je, "*");
          } }, { key: "divide", value: function(Je) {
            return this.decimal(Je, "/");
          } }, { key: "remainder", value: function(Je) {
            return this.decimal(Je, "%");
          } }, { key: "toNumber", value: function() {
            return this.num;
          } }, { key: "getDecimalLen", value: function(Je) {
            var mt = "".concat(Je).split("e");
            return ("".concat(mt[0]).split(".")[1] || "").length - (mt[1] ? +mt[1] : 0);
          } }, { key: "getExponent", value: function(Je, mt) {
            return Math.pow(10, mt !== void 0 ? Math.max(Je, mt) : Je);
          } }, { key: "safeRoundUp", value: function(Je, mt) {
            return Math.round(Je * mt);
          } }]), dt;
        }();
        function $e(dt, Je) {
          return Ae(dt) || Qe(dt, Je) || je(dt, Je) || Ze();
        }
        function Ze() {
          throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }
        function Qe(dt, Je) {
          var mt = dt == null ? null : typeof Symbol < "u" && dt[Symbol.iterator] || dt["@@iterator"];
          if (mt != null) {
            var wt, jt, Gt = [], Yt = !0, Qt = !1;
            try {
              for (mt = mt.call(dt); !(Yt = (wt = mt.next()).done) && (Gt.push(wt.value), !(Je && Gt.length === Je)); Yt = !0)
                ;
            } catch (tr) {
              Qt = !0, jt = tr;
            } finally {
              try {
                Yt || mt.return == null || mt.return();
              } finally {
                if (Qt)
                  throw jt;
              }
            }
            return Gt;
          }
        }
        function Ae(dt) {
          if (Array.isArray(dt))
            return dt;
        }
        function Ne(dt, Je) {
          var mt = Object.keys(dt);
          if (Object.getOwnPropertySymbols) {
            var wt = Object.getOwnPropertySymbols(dt);
            Je && (wt = wt.filter(function(jt) {
              return Object.getOwnPropertyDescriptor(dt, jt).enumerable;
            })), mt.push.apply(mt, wt);
          }
          return mt;
        }
        function Be(dt) {
          for (var Je = 1; Je < arguments.length; Je++) {
            var mt = arguments[Je] != null ? arguments[Je] : {};
            Je % 2 ? Ne(Object(mt), !0).forEach(function(wt) {
              yt(dt, wt, mt[wt]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(dt, Object.getOwnPropertyDescriptors(mt)) : Ne(Object(mt)).forEach(function(wt) {
              Object.defineProperty(dt, wt, Object.getOwnPropertyDescriptor(mt, wt));
            });
          }
          return dt;
        }
        function Ge(dt) {
          return qe(dt) || ht(dt) || je(dt) || Ye();
        }
        function Ye() {
          throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }
        function je(dt, Je) {
          if (dt) {
            if (typeof dt == "string")
              return lt(dt, Je);
            var mt = Object.prototype.toString.call(dt).slice(8, -1);
            return mt === "Object" && dt.constructor && (mt = dt.constructor.name), mt === "Map" || mt === "Set" ? Array.from(dt) : mt === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(mt) ? lt(dt, Je) : void 0;
          }
        }
        function ht(dt) {
          if (typeof Symbol < "u" && dt[Symbol.iterator] != null || dt["@@iterator"] != null)
            return Array.from(dt);
        }
        function qe(dt) {
          if (Array.isArray(dt))
            return lt(dt);
        }
        function lt(dt, Je) {
          (Je == null || Je > dt.length) && (Je = dt.length);
          for (var mt = 0, wt = new Array(Je); mt < Je; mt++)
            wt[mt] = dt[mt];
          return wt;
        }
        function ft(dt, Je) {
          if (!(dt instanceof Je))
            throw new TypeError("Cannot call a class as a function");
        }
        function _t(dt, Je) {
          for (var mt = 0; mt < Je.length; mt++) {
            var wt = Je[mt];
            wt.enumerable = wt.enumerable || !1, wt.configurable = !0, "value" in wt && (wt.writable = !0), Object.defineProperty(dt, wt.key, wt);
          }
        }
        function St(dt, Je, mt) {
          return Je && _t(dt.prototype, Je), mt && _t(dt, mt), Object.defineProperty(dt, "prototype", { writable: !1 }), dt;
        }
        function yt(dt, Je, mt) {
          return Je in dt ? Object.defineProperty(dt, Je, { value: mt, enumerable: !0, configurable: !0, writable: !0 }) : dt[Je] = mt, dt;
        }
        (function(dt) {
          dt[dt.VALUE = 1] = "VALUE", dt[dt.INTERVAL = 2] = "INTERVAL", dt[dt.MIN = 3] = "MIN", dt[dt.MAX = 4] = "MAX", dt[dt.ORDER = 5] = "ORDER";
        })(O || (O = {}));
        var Ct = (Ie = {}, yt(Ie, O.VALUE, 'The type of the "value" is illegal'), yt(Ie, O.INTERVAL, 'The prop "interval" is invalid, "(max - min)" must be divisible by "interval"'), yt(Ie, O.MIN, 'The "value" must be greater than or equal to the "min".'), yt(Ie, O.MAX, 'The "value" must be less than or equal to the "max".'), yt(Ie, O.ORDER, 'When "order" is false, the parameters "minRange", "maxRange", "fixed", "enabled" are invalid.'), Ie), Lt = function() {
          function dt(Je) {
            ft(this, dt), yt(this, "dotsPos", []), yt(this, "dotsValue", []), yt(this, "data", void 0), yt(this, "enableCross", void 0), yt(this, "fixed", void 0), yt(this, "max", void 0), yt(this, "min", void 0), yt(this, "interval", void 0), yt(this, "minRange", void 0), yt(this, "maxRange", void 0), yt(this, "order", void 0), yt(this, "marks", void 0), yt(this, "included", void 0), yt(this, "process", void 0), yt(this, "adsorb", void 0), yt(this, "dotOptions", void 0), yt(this, "onError", void 0), yt(this, "cacheRangeDir", {}), this.data = Je.data, this.max = Je.max, this.min = Je.min, this.interval = Je.interval, this.order = Je.order, this.marks = Je.marks, this.included = Je.included, this.process = Je.process, this.adsorb = Je.adsorb, this.dotOptions = Je.dotOptions, this.onError = Je.onError, this.order ? (this.minRange = Je.minRange || 0, this.maxRange = Je.maxRange || 0, this.enableCross = Je.enableCross, this.fixed = Je.fixed) : ((Je.minRange || Je.maxRange || !Je.enableCross || Je.fixed) && this.emitError(O.ORDER), this.minRange = 0, this.maxRange = 0, this.enableCross = !0, this.fixed = !1), this.setValue(Je.value);
          }
          return St(dt, [{ key: "setValue", value: function(Je) {
            this.setDotsValue(Array.isArray(Je) ? Ge(Je) : [Je], !0);
          } }, { key: "setDotsValue", value: function(Je, mt) {
            this.dotsValue = Je, mt && this.syncDotsPos();
          } }, { key: "setDotsPos", value: function(Je) {
            var mt = this, wt = this.order ? Ge(Je).sort(function(jt, Gt) {
              return jt - Gt;
            }) : Je;
            this.dotsPos = wt, this.setDotsValue(wt.map(function(jt) {
              return mt.getValueByPos(jt);
            }), this.adsorb);
          } }, { key: "getValueByPos", value: function(Je) {
            var mt = this.parsePos(Je);
            if (this.included) {
              var wt = 100;
              this.markList.forEach(function(jt) {
                var Gt = Math.abs(jt.pos - Je);
                Gt < wt && (wt = Gt, mt = jt.value);
              });
            }
            return mt;
          } }, { key: "syncDotsPos", value: function() {
            var Je = this;
            this.dotsPos = this.dotsValue.map(function(mt) {
              return Je.parseValue(mt);
            });
          } }, { key: "markList", get: function() {
            var Je = this;
            if (!this.marks)
              return [];
            var mt = function(wt, jt) {
              var Gt = Je.parseValue(wt);
              return Be({ pos: Gt, value: wt, label: wt, active: Je.isActiveByPos(Gt) }, jt);
            };
            return this.marks === !0 ? this.getValues().map(function(wt) {
              return mt(wt);
            }) : Object.prototype.toString.call(this.marks) === "[object Object]" ? Object.keys(this.marks).sort(function(wt, jt) {
              return +wt - +jt;
            }).map(function(wt) {
              var jt = Je.marks[wt];
              return mt(wt, typeof jt != "string" ? jt : { label: jt });
            }) : Array.isArray(this.marks) ? this.marks.map(function(wt) {
              return mt(wt);
            }) : typeof this.marks == "function" ? this.getValues().map(function(wt) {
              return { value: wt, result: Je.marks(wt) };
            }).filter(function(wt) {
              var jt = wt.result;
              return !!jt;
            }).map(function(wt) {
              var jt = wt.value, Gt = wt.result;
              return mt(jt, Gt);
            }) : [];
          } }, { key: "getRecentDot", value: function(Je) {
            var mt = this.dotsPos.map(function(wt) {
              return Math.abs(wt - Je);
            });
            return mt.indexOf(Math.min.apply(Math, Ge(mt)));
          } }, { key: "getIndexByValue", value: function(Je) {
            return this.data ? this.data.indexOf(Je) : new Ue(+Je).minus(this.min).divide(this.interval).toNumber();
          } }, { key: "getValueByIndex", value: function(Je) {
            return Je < 0 ? Je = 0 : Je > this.total && (Je = this.total), this.data ? this.data[Je] : new Ue(Je).multiply(this.interval).plus(this.min).toNumber();
          } }, { key: "setDotPos", value: function(Je, mt) {
            Je = this.getValidPos(Je, mt).pos;
            var wt = Je - this.dotsPos[mt];
            if (wt) {
              var jt = new Array(this.dotsPos.length);
              this.fixed ? jt = this.getFixedChangePosArr(wt, mt) : this.minRange || this.maxRange ? jt = this.getLimitRangeChangePosArr(Je, wt, mt) : jt[mt] = wt, this.setDotsPos(this.dotsPos.map(function(Gt, Yt) {
                return Gt + (jt[Yt] || 0);
              }));
            }
          } }, { key: "getFixedChangePosArr", value: function(Je, mt) {
            var wt = this;
            return this.dotsPos.forEach(function(jt, Gt) {
              if (Gt !== mt) {
                var Yt = wt.getValidPos(jt + Je, Gt), Qt = Yt.pos, tr = Yt.inRange;
                tr || (Je = Math.min(Math.abs(Qt - jt), Math.abs(Je)) * (Je < 0 ? -1 : 1));
              }
            }), this.dotsPos.map(function(jt) {
              return Je;
            });
          } }, { key: "getLimitRangeChangePosArr", value: function(Je, mt, wt) {
            var jt = this, Gt = [{ index: wt, changePos: mt }], Yt = mt;
            return [this.minRange, this.maxRange].forEach(function(Qt, tr) {
              if (!Qt)
                return !1;
              var rr = tr === 0, er = mt > 0, sr = 0;
              sr = rr ? er ? 1 : -1 : er ? -1 : 1;
              for (var hr = function(cr, Sr) {
                var ur = Math.abs(cr - Sr);
                return rr ? ur < jt.minRangeDir : ur > jt.maxRangeDir;
              }, lr = wt + sr, vr = jt.dotsPos[lr], fr = Je; jt.isPos(vr) && hr(vr, fr); ) {
                var or = jt.getValidPos(vr + Yt, lr), dr = or.pos;
                Gt.push({ index: lr, changePos: dr - vr }), lr += sr, fr = dr, vr = jt.dotsPos[lr];
              }
            }), this.dotsPos.map(function(Qt, tr) {
              var rr = Gt.filter(function(er) {
                return er.index === tr;
              });
              return rr.length ? rr[0].changePos : 0;
            });
          } }, { key: "isPos", value: function(Je) {
            return typeof Je == "number";
          } }, { key: "getValidPos", value: function(Je, mt) {
            var wt = this.valuePosRange[mt], jt = !0;
            return Je < wt[0] ? (Je = wt[0], jt = !1) : Je > wt[1] && (Je = wt[1], jt = !1), { pos: Je, inRange: jt };
          } }, { key: "parseValue", value: function(Je) {
            if (this.data)
              Je = this.data.indexOf(Je);
            else if (typeof Je == "number" || typeof Je == "string") {
              if (Je = +Je, Je < this.min)
                return this.emitError(O.MIN), 0;
              if (Je > this.max)
                return this.emitError(O.MAX), 0;
              if (typeof Je != "number" || Je !== Je)
                return this.emitError(O.VALUE), 0;
              Je = new Ue(Je).minus(this.min).divide(this.interval).toNumber();
            }
            var mt = new Ue(Je).multiply(this.gap).toNumber();
            return mt < 0 ? 0 : mt > 100 ? 100 : mt;
          } }, { key: "parsePos", value: function(Je) {
            var mt = Math.round(Je / this.gap);
            return this.getValueByIndex(mt);
          } }, { key: "isActiveByPos", value: function(Je) {
            return this.processArray.some(function(mt) {
              var wt = $e(mt, 2), jt = wt[0], Gt = wt[1];
              return Je >= jt && Je <= Gt;
            });
          } }, { key: "getValues", value: function() {
            if (this.data)
              return this.data;
            for (var Je = [], mt = 0; mt <= this.total; mt++)
              Je.push(new Ue(mt).multiply(this.interval).plus(this.min).toNumber());
            return Je;
          } }, { key: "getRangeDir", value: function(Je) {
            return Je ? new Ue(Je).divide(new Ue(this.data ? this.data.length - 1 : this.max).minus(this.data ? 0 : this.min).toNumber()).multiply(100).toNumber() : 100;
          } }, { key: "emitError", value: function(Je) {
            this.onError && this.onError(Je, Ct[Je]);
          } }, { key: "processArray", get: function() {
            if (this.process) {
              if (typeof this.process == "function")
                return this.process(this.dotsPos);
              if (this.dotsPos.length === 1)
                return [[0, this.dotsPos[0]]];
              if (this.dotsPos.length > 1)
                return [[Math.min.apply(Math, Ge(this.dotsPos)), Math.max.apply(Math, Ge(this.dotsPos))]];
            }
            return [];
          } }, { key: "total", get: function() {
            var Je = 0;
            return Je = this.data ? this.data.length - 1 : new Ue(this.max).minus(this.min).divide(this.interval).toNumber(), Je - Math.floor(Je) !== 0 ? (this.emitError(O.INTERVAL), 0) : Je;
          } }, { key: "gap", get: function() {
            return 100 / this.total;
          } }, { key: "minRangeDir", get: function() {
            return this.cacheRangeDir[this.minRange] ? this.cacheRangeDir[this.minRange] : this.cacheRangeDir[this.minRange] = this.getRangeDir(this.minRange);
          } }, { key: "maxRangeDir", get: function() {
            return this.cacheRangeDir[this.maxRange] ? this.cacheRangeDir[this.maxRange] : this.cacheRangeDir[this.maxRange] = this.getRangeDir(this.maxRange);
          } }, { key: "getDotRange", value: function(Je, mt, wt) {
            if (!this.dotOptions)
              return wt;
            var jt = Array.isArray(this.dotOptions) ? this.dotOptions[Je] : this.dotOptions;
            return jt && jt[mt] !== void 0 ? this.parseValue(jt[mt]) : wt;
          } }, { key: "valuePosRange", get: function() {
            var Je = this, mt = this.dotsPos, wt = [];
            return mt.forEach(function(jt, Gt) {
              wt.push([Math.max(Je.minRange ? Je.minRangeDir * Gt : 0, Je.enableCross ? 0 : mt[Gt - 1] || 0, Je.getDotRange(Gt, "min", 0)), Math.min(Je.minRange ? 100 - Je.minRangeDir * (mt.length - 1 - Gt) : 100, Je.enableCross ? 100 : mt[Gt + 1] || 100, Je.getDotRange(Gt, "max", 100))]);
            }), wt;
          } }, { key: "dotsIndex", get: function() {
            var Je = this;
            return this.dotsValue.map(function(mt) {
              return Je.getIndexByValue(mt);
            });
          } }]), dt;
        }();
        function Vt(dt, Je) {
          if (!(dt instanceof Je))
            throw new TypeError("Cannot call a class as a function");
        }
        function Tt(dt, Je) {
          for (var mt = 0; mt < Je.length; mt++) {
            var wt = Je[mt];
            wt.enumerable = wt.enumerable || !1, wt.configurable = !0, "value" in wt && (wt.writable = !0), Object.defineProperty(dt, wt.key, wt);
          }
        }
        function xt(dt, Je, mt) {
          return Je && Tt(dt.prototype, Je), mt && Tt(dt, mt), Object.defineProperty(dt, "prototype", { writable: !1 }), dt;
        }
        function Ot(dt, Je, mt) {
          return Je in dt ? Object.defineProperty(dt, Je, { value: mt, enumerable: !0, configurable: !0, writable: !0 }) : dt[Je] = mt, dt;
        }
        var Pt = function() {
          function dt(Je) {
            Vt(this, dt), Ot(this, "map", void 0), Ot(this, "states", 0), this.map = Je;
          }
          return xt(dt, [{ key: "add", value: function(Je) {
            this.states |= Je;
          } }, { key: "delete", value: function(Je) {
            this.states &= ~Je;
          } }, { key: "toggle", value: function(Je) {
            this.has(Je) ? this.delete(Je) : this.add(Je);
          } }, { key: "has", value: function(Je) {
            return !!(this.states & Je);
          } }]), dt;
        }();
        t(631);
        function kt(dt) {
          return gt(dt) || Bt(dt) || pt(dt) || zt();
        }
        function zt() {
          throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }
        function Bt(dt) {
          if (typeof Symbol < "u" && dt[Symbol.iterator] != null || dt["@@iterator"] != null)
            return Array.from(dt);
        }
        function gt(dt) {
          if (Array.isArray(dt))
            return Ft(dt);
        }
        function rt(dt) {
          return rt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Je) {
            return typeof Je;
          } : function(Je) {
            return Je && typeof Symbol == "function" && Je.constructor === Symbol && Je !== Symbol.prototype ? "symbol" : typeof Je;
          }, rt(dt);
        }
        function nt(dt, Je) {
          var mt = Object.keys(dt);
          if (Object.getOwnPropertySymbols) {
            var wt = Object.getOwnPropertySymbols(dt);
            Je && (wt = wt.filter(function(jt) {
              return Object.getOwnPropertyDescriptor(dt, jt).enumerable;
            })), mt.push.apply(mt, wt);
          }
          return mt;
        }
        function bt(dt) {
          for (var Je = 1; Je < arguments.length; Je++) {
            var mt = arguments[Je] != null ? arguments[Je] : {};
            Je % 2 ? nt(Object(mt), !0).forEach(function(wt) {
              Et(dt, wt, mt[wt]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(dt, Object.getOwnPropertyDescriptors(mt)) : nt(Object(mt)).forEach(function(wt) {
              Object.defineProperty(dt, wt, Object.getOwnPropertyDescriptor(mt, wt));
            });
          }
          return dt;
        }
        function Et(dt, Je, mt) {
          return Je in dt ? Object.defineProperty(dt, Je, { value: mt, enumerable: !0, configurable: !0, writable: !0 }) : dt[Je] = mt, dt;
        }
        function Rt(dt, Je) {
          return Kt(dt) || Nt(dt, Je) || pt(dt, Je) || $t();
        }
        function $t() {
          throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }
        function pt(dt, Je) {
          if (dt) {
            if (typeof dt == "string")
              return Ft(dt, Je);
            var mt = Object.prototype.toString.call(dt).slice(8, -1);
            return mt === "Object" && dt.constructor && (mt = dt.constructor.name), mt === "Map" || mt === "Set" ? Array.from(dt) : mt === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(mt) ? Ft(dt, Je) : void 0;
          }
        }
        function Ft(dt, Je) {
          (Je == null || Je > dt.length) && (Je = dt.length);
          for (var mt = 0, wt = new Array(Je); mt < Je; mt++)
            wt[mt] = dt[mt];
          return wt;
        }
        function Nt(dt, Je) {
          var mt = dt == null ? null : typeof Symbol < "u" && dt[Symbol.iterator] || dt["@@iterator"];
          if (mt != null) {
            var wt, jt, Gt = [], Yt = !0, Qt = !1;
            try {
              for (mt = mt.call(dt); !(Yt = (wt = mt.next()).done) && (Gt.push(wt.value), !(Je && Gt.length === Je)); Yt = !0)
                ;
            } catch (tr) {
              Qt = !0, jt = tr;
            } finally {
              try {
                Yt || mt.return == null || mt.return();
              } finally {
                if (Qt)
                  throw jt;
              }
            }
            return Gt;
          }
        }
        function Kt(dt) {
          if (Array.isArray(dt))
            return dt;
        }
        var At = { None: 0, Drag: 2, Focus: 4 }, Wt = 4, vt = (0, u.defineComponent)({ name: "VueSlider", components: { VueSliderDot: Le, VueSliderMark: D }, emits: ["change", "drag-start", "dragging", "drag-end", "error", "update:modelValue"], data: function() {
          return { control: null, states: new Pt(At), scale: 1, focusDotIndex: 0 };
        }, props: { modelValue: { type: [Number, String, Array], default: 0 }, silent: { type: Boolean, default: !1 }, direction: { type: String, default: "ltr", validator: function(dt) {
          return ["ltr", "rtl", "ttb", "btt"].indexOf(dt) > -1;
        } }, width: { type: [Number, String] }, height: { type: [Number, String] }, dotSize: { type: [Number, Array], default: 14 }, contained: { type: Boolean, default: !1 }, min: { type: Number, default: 0 }, max: { type: Number, default: 100 }, interval: { type: Number, default: 1 }, disabled: { type: Boolean, default: !1 }, clickable: { type: Boolean, default: !0 }, dragOnClick: { type: Boolean, default: !1 }, duration: { type: Number, default: 0.5 }, data: { type: [Object, Array] }, dataValue: { type: String, default: "value" }, dataLabel: { type: String, default: "label" }, lazy: { type: Boolean, default: !1 }, tooltip: { type: String, default: "active", validator: function(dt) {
          return ["none", "always", "focus", "hover", "active"].indexOf(dt) > -1;
        } }, tooltipPlacement: { type: [String, Array], validator: function(dt) {
          return (Array.isArray(dt) ? dt : [dt]).every(function(Je) {
            return ["top", "right", "bottom", "left"].indexOf(Je) > -1;
          });
        } }, tooltipFormatter: { type: [String, Array, Function] }, useKeyboard: { type: Boolean, default: !0 }, keydownHook: { type: Function }, enableCross: { type: Boolean, default: !0 }, fixed: { type: Boolean, default: !1 }, order: { type: Boolean, default: !0 }, minRange: { type: Number }, maxRange: { type: Number }, marks: { type: [Boolean, Object, Array, Function], default: !1 }, process: { type: [Boolean, Function], default: !0 }, zoom: { type: Number }, included: { type: Boolean }, adsorb: { type: Boolean }, hideLabel: { type: Boolean }, dotOptions: { type: [Object, Array] }, dotAttrs: { type: Object }, railStyle: { type: Object }, processStyle: { type: Object }, dotStyle: { type: Object }, tooltipStyle: { type: Object }, stepStyle: { type: Object }, stepActiveStyle: { type: Object }, labelStyle: { type: Object }, labelActiveStyle: { type: Object } }, computed: { isHorizontal: function() {
          return this.direction === "ltr" || this.direction === "rtl";
        }, isReverse: function() {
          return this.direction === "rtl" || this.direction === "btt";
        }, tailSize: function() {
          return ke((this.isHorizontal ? this.height : this.width) || Wt);
        }, containerClasses: function() {
          return ["vue-slider", ["vue-slider-".concat(this.direction)], { "vue-slider-disabled": this.disabled }];
        }, containerStyles: function() {
          var dt = Array.isArray(this.dotSize) ? this.dotSize : [this.dotSize, this.dotSize], Je = Rt(dt, 2), mt = Je[0], wt = Je[1], jt = this.width ? ke(this.width) : this.isHorizontal ? "auto" : ke(Wt), Gt = this.height ? ke(this.height) : this.isHorizontal ? ke(Wt) : "auto";
          return { padding: this.contained ? "".concat(wt / 2, "px ").concat(mt / 2, "px") : this.isHorizontal ? "".concat(wt / 2, "px 0") : "0 ".concat(mt / 2, "px"), width: jt, height: Gt };
        }, processArray: function() {
          var dt = this;
          return this.control.processArray.map(function(Je, mt) {
            var wt, jt = Rt(Je, 3), Gt = jt[0], Yt = jt[1], Qt = jt[2];
            if (Gt > Yt) {
              var tr = [Yt, Gt];
              Gt = tr[0], Yt = tr[1];
            }
            var rr = dt.isHorizontal ? "width" : "height";
            return { start: Gt, end: Yt, index: mt, style: bt(bt((wt = {}, Et(wt, dt.isHorizontal ? "height" : "width", "100%"), Et(wt, dt.isHorizontal ? "top" : "left", 0), Et(wt, dt.mainDirection, "".concat(Gt, "%")), Et(wt, rr, "".concat(Yt - Gt, "%")), Et(wt, "transitionProperty", "".concat(rr, ",").concat(dt.mainDirection)), Et(wt, "transitionDuration", "".concat(dt.animateTime, "s")), wt), dt.processStyle), Qt) };
          });
        }, dotBaseStyle: function() {
          var dt, Je = Array.isArray(this.dotSize) ? this.dotSize : [this.dotSize, this.dotSize], mt = Rt(Je, 2), wt = mt[0], jt = mt[1];
          return dt = this.isHorizontal ? Et({ transform: "translate(".concat(this.isReverse ? "50%" : "-50%", ", -50%)"), WebkitTransform: "translate(".concat(this.isReverse ? "50%" : "-50%", ", -50%)"), top: "50%" }, this.direction === "ltr" ? "left" : "right", "0") : Et({ transform: "translate(-50%, ".concat(this.isReverse ? "50%" : "-50%", ")"), WebkitTransform: "translate(-50%, ".concat(this.isReverse ? "50%" : "-50%", ")"), left: "50%" }, this.direction === "btt" ? "bottom" : "top", "0"), bt({ width: "".concat(wt, "px"), height: "".concat(jt, "px") }, dt);
        }, mainDirection: function() {
          switch (this.direction) {
            case "ltr":
              return "left";
            case "rtl":
              return "right";
            case "btt":
              return "bottom";
            case "ttb":
              return "top";
            default:
              return "left";
          }
        }, tooltipDirections: function() {
          var dt = this.tooltipPlacement || (this.isHorizontal ? "top" : "left");
          return Array.isArray(dt) ? dt : this.dots.map(function() {
            return dt;
          });
        }, dots: function() {
          var dt = this;
          return this.control.dotsPos.map(function(Je, mt) {
            return bt({ pos: Je, index: mt, value: dt.control.dotsValue[mt], focus: dt.states.has(At.Focus) && dt.focusDotIndex === mt, disabled: dt.disabled, style: dt.dotStyle }, (Array.isArray(dt.dotOptions) ? dt.dotOptions[mt] : dt.dotOptions) || {});
          });
        }, animateTime: function() {
          return this.states.has(At.Drag) ? 0 : this.duration;
        }, canSort: function() {
          return this.order && !this.minRange && !this.maxRange && !this.fixed && this.enableCross;
        }, sliderData: function() {
          var dt = this;
          return this.isObjectArrayData(this.data) ? this.data.map(function(Je) {
            return Je[dt.dataValue];
          }) : this.isObjectData(this.data) ? Object.keys(this.data) : this.data;
        }, sliderMarks: function() {
          var dt = this;
          return this.marks ? this.marks : this.isObjectArrayData(this.data) ? function(Je) {
            var mt = { label: Je };
            return dt.data.some(function(wt) {
              return wt[dt.dataValue] === Je && (mt.label = wt[dt.dataLabel], !0);
            }), mt;
          } : this.isObjectData(this.data) ? this.data : void 0;
        }, sliderTooltipFormatter: function() {
          var dt = this;
          if (this.tooltipFormatter)
            return this.tooltipFormatter;
          if (this.isObjectArrayData(this.data))
            return function(mt) {
              var wt = "" + mt;
              return dt.data.some(function(jt) {
                return jt[dt.dataValue] === mt && (wt = jt[dt.dataLabel], !0);
              }), wt;
            };
          if (this.isObjectData(this.data)) {
            var Je = this.data;
            return function(mt) {
              return Je[mt];
            };
          }
        }, isNotSync: function() {
          var dt = this.control.dotsValue;
          return Array.isArray(this.modelValue) ? this.modelValue.length !== dt.length || this.modelValue.some(function(Je, mt) {
            return Je !== dt[mt];
          }) : this.modelValue !== dt[0];
        }, dragRange: function() {
          var dt = this.dots[this.focusDotIndex - 1], Je = this.dots[this.focusDotIndex + 1];
          return [dt ? dt.pos : -1 / 0, Je ? Je.pos : 1 / 0];
        } }, watch: { modelValue: function() {
          this.control && !this.states.has(At.Drag) && this.isNotSync && this.control.setValue(this.modelValue);
        } }, methods: { isObjectData: function(dt) {
          return !!dt && Object.prototype.toString.call(dt) === "[object Object]";
        }, isObjectArrayData: function(dt) {
          return !!dt && Array.isArray(dt) && dt.length > 0 && rt(dt[0]) === "object";
        }, bindEvent: function() {
          document.addEventListener("touchmove", this.dragMove, { passive: !1 }), document.addEventListener("touchend", this.dragEnd, { passive: !1 }), document.addEventListener("mousedown", this.blurHandle), document.addEventListener("mousemove", this.dragMove), document.addEventListener("mouseup", this.dragEnd), document.addEventListener("mouseleave", this.dragEnd), document.addEventListener("keydown", this.keydownHandle);
        }, unbindEvent: function() {
          document.removeEventListener("touchmove", this.dragMove), document.removeEventListener("touchend", this.dragEnd), document.removeEventListener("mousedown", this.blurHandle), document.removeEventListener("mousemove", this.dragMove), document.removeEventListener("mouseup", this.dragEnd), document.removeEventListener("mouseleave", this.dragEnd), document.removeEventListener("keydown", this.keydownHandle);
        }, setScale: function() {
          this.scale = new Ue(Math.floor(this.isHorizontal ? this.$el.offsetWidth : this.$el.offsetHeight)).multiply(this.zoom || 1).divide(100).toNumber();
        }, initControl: function() {
          var dt = this;
          this.control = new Lt({ value: this.modelValue, data: this.sliderData, enableCross: this.enableCross, fixed: this.fixed, max: this.max, min: this.min, interval: this.interval, minRange: this.minRange, maxRange: this.maxRange, order: this.order, marks: this.sliderMarks, included: this.included, process: this.process, adsorb: this.adsorb, dotOptions: this.dotOptions, onError: this.emitError }), ["data", "enableCross", "fixed", "max", "min", "interval", "minRange", "maxRange", "order", "marks", "process", "adsorb", "included", "dotOptions"].forEach(function(Je) {
            dt.$watch(Je, function(mt) {
              if (Je === "data" && Array.isArray(dt.control.data) && Array.isArray(mt) && dt.control.data.length === mt.length && mt.every(function(wt, jt) {
                return wt === dt.control.data[jt];
              }))
                return !1;
              switch (Je) {
                case "data":
                case "dataLabel":
                case "dataValue":
                  dt.control.data = dt.sliderData;
                  break;
                case "mark":
                  dt.control.marks = dt.sliderMarks;
                  break;
                default:
                  dt.control[Je] = mt;
              }
              ["data", "max", "min", "interval"].indexOf(Je) > -1 && dt.control.syncDotsPos();
            });
          });
        }, syncValueByPos: function() {
          var dt = this.control.dotsValue;
          if (this.isDiff(dt, Array.isArray(this.modelValue) ? this.modelValue : [this.modelValue])) {
            var Je = dt.length === 1 ? dt[0] : kt(dt);
            this.$emit("change", Je, this.focusDotIndex), this.$emit("update:modelValue", Je);
          }
        }, isDiff: function(dt, Je) {
          return dt.length !== Je.length || dt.some(function(mt, wt) {
            return mt !== Je[wt];
          });
        }, emitError: function(dt, Je) {
          this.silent || console.error("[VueSlider error]: ".concat(Je)), this.$emit("error", dt, Je);
        }, dragStartOnProcess: function(dt) {
          if (this.dragOnClick) {
            this.setScale();
            var Je = this.getPosByEvent(dt), mt = this.control.getRecentDot(Je);
            if (this.dots[mt].disabled)
              return;
            this.dragStart(mt), this.control.setDotPos(Je, this.focusDotIndex), this.lazy || this.syncValueByPos();
          }
        }, dragStart: function(dt) {
          this.focusDotIndex = dt, this.setScale(), this.states.add(At.Drag), this.states.add(At.Focus), this.$emit("drag-start", this.focusDotIndex);
        }, dragMove: function(dt) {
          if (!this.states.has(At.Drag))
            return !1;
          dt.preventDefault();
          var Je = this.getPosByEvent(dt);
          this.isCrossDot(Je), this.control.setDotPos(Je, this.focusDotIndex), this.lazy || this.syncValueByPos();
          var mt = this.control.dotsValue;
          this.$emit("dragging", mt.length === 1 ? mt[0] : kt(mt), this.focusDotIndex);
        }, isCrossDot: function(dt) {
          if (this.canSort) {
            var Je = this.focusDotIndex, mt = dt;
            if (mt > this.dragRange[1] ? (mt = this.dragRange[1], this.focusDotIndex++) : mt < this.dragRange[0] && (mt = this.dragRange[0], this.focusDotIndex--), Je !== this.focusDotIndex) {
              var wt = this.$refs["dot-".concat(this.focusDotIndex)];
              wt && wt.$el && wt.$el.focus(), this.control.setDotPos(mt, Je);
            }
          }
        }, dragEnd: function(dt) {
          var Je = this;
          if (!this.states.has(At.Drag))
            return !1;
          setTimeout(function() {
            Je.lazy && Je.syncValueByPos(), Je.included && Je.isNotSync ? Je.control.setValue(Je.modelValue) : Je.control.syncDotsPos(), Je.states.delete(At.Drag), Je.useKeyboard && !("targetTouches" in dt) || Je.states.delete(At.Focus), Je.$emit("drag-end", Je.focusDotIndex);
          });
        }, blurHandle: function(dt) {
          if (!this.states.has(At.Focus) || !this.$refs.container || this.$refs.container.contains(dt.target))
            return !1;
          this.states.delete(At.Focus);
        }, clickHandle: function(dt) {
          if (!this.clickable || this.disabled)
            return !1;
          if (!this.states.has(At.Drag)) {
            this.setScale();
            var Je = this.getPosByEvent(dt);
            this.setValueByPos(Je);
          }
        }, focus: function(dt) {
          var Je = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          dt.disabled || (this.states.add(At.Focus), this.focusDotIndex = Je);
        }, blur: function() {
          this.states.delete(At.Focus);
        }, getValue: function() {
          var dt = this.control.dotsValue;
          return dt.length === 1 ? dt[0] : dt;
        }, getIndex: function() {
          var dt = this.control.dotsIndex;
          return dt.length === 1 ? dt[0] : dt;
        }, setValue: function(dt) {
          this.control.setValue(Array.isArray(dt) ? kt(dt) : [dt]), this.syncValueByPos();
        }, setIndex: function(dt) {
          var Je = this, mt = Array.isArray(dt) ? dt.map(function(wt) {
            return Je.control.getValueByIndex(wt);
          }) : this.control.getValueByIndex(dt);
          this.setValue(mt);
        }, setValueByPos: function(dt) {
          var Je = this, mt = this.control.getRecentDot(dt);
          if (this.disabled || this.dots[mt].disabled)
            return !1;
          this.focusDotIndex = mt, this.control.setDotPos(dt, mt), this.syncValueByPos(), this.useKeyboard && this.states.add(At.Focus), setTimeout(function() {
            Je.included && Je.isNotSync ? Je.control.setValue(Je.modelValue) : Je.control.syncDotsPos();
          });
        }, keydownHandle: function(dt) {
          var Je = this;
          if (!this.useKeyboard || !this.states.has(At.Focus))
            return !1;
          var mt = this.included && this.marks, wt = We(dt, { direction: this.direction, max: mt ? this.control.markList.length - 1 : this.control.total, min: 0, hook: this.keydownHook });
          if (wt) {
            dt.preventDefault();
            var jt = -1, Gt = 0;
            mt ? (this.control.markList.some(function(Yt, Qt) {
              return Yt.value === Je.control.dotsValue[Je.focusDotIndex] && (jt = wt(Qt), !0);
            }), jt < 0 ? jt = 0 : jt > this.control.markList.length - 1 && (jt = this.control.markList.length - 1), Gt = this.control.markList[jt].pos) : (jt = wt(this.control.getIndexByValue(this.control.dotsValue[this.focusDotIndex])), Gt = this.control.parseValue(this.control.getValueByIndex(jt))), this.isCrossDot(Gt), this.control.setDotPos(Gt, this.focusDotIndex), this.syncValueByPos();
          }
        }, getPosByEvent: function(dt) {
          return He(dt, this.$el, this.isReverse, this.zoom)[this.isHorizontal ? "x" : "y"] / this.scale;
        }, renderSlot: function(dt, Je, mt) {
          var wt = this.$slots[dt];
          return wt ? wt(Je) : mt;
        } }, created: function() {
          this.initControl();
        }, mounted: function() {
          this.bindEvent();
        }, beforeUnmount: function() {
          this.unbindEvent();
        } }), qt = (0, k.Z)(vt, [["render", Ee]]);
        qt.VueSliderMark = D, qt.VueSliderDot = Le;
        var ot = qt, Ut = ot;
      }(), l = l.default, l;
    }();
  });
})(vueSliderComponent_umd_min);
var vueSliderComponent_umd_minExports = vueSliderComponent_umd_min.exports;
const VueSlider = /* @__PURE__ */ getDefaultExportFromCjs(vueSliderComponent_umd_minExports);
//! moment.js
//! version : 2.30.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
var hookCallback;
function hooks() {
  return hookCallback.apply(null, arguments);
}
function setHookCallback(e) {
  hookCallback = e;
}
function isArray(e) {
  return e instanceof Array || Object.prototype.toString.call(e) === "[object Array]";
}
function isObject(e) {
  return e != null && Object.prototype.toString.call(e) === "[object Object]";
}
function hasOwnProp(e, r) {
  return Object.prototype.hasOwnProperty.call(e, r);
}
function isObjectEmpty(e) {
  if (Object.getOwnPropertyNames)
    return Object.getOwnPropertyNames(e).length === 0;
  var r;
  for (r in e)
    if (hasOwnProp(e, r))
      return !1;
  return !0;
}
function isUndefined(e) {
  return e === void 0;
}
function isNumber(e) {
  return typeof e == "number" || Object.prototype.toString.call(e) === "[object Number]";
}
function isDate(e) {
  return e instanceof Date || Object.prototype.toString.call(e) === "[object Date]";
}
function map(e, r) {
  var n = [], s, a = e.length;
  for (s = 0; s < a; ++s)
    n.push(r(e[s], s));
  return n;
}
function extend(e, r) {
  for (var n in r)
    hasOwnProp(r, n) && (e[n] = r[n]);
  return hasOwnProp(r, "toString") && (e.toString = r.toString), hasOwnProp(r, "valueOf") && (e.valueOf = r.valueOf), e;
}
function createUTC(e, r, n, s) {
  return createLocalOrUTC(e, r, n, s, !0).utc();
}
function defaultParsingFlags() {
  return {
    empty: !1,
    unusedTokens: [],
    unusedInput: [],
    overflow: -2,
    charsLeftOver: 0,
    nullInput: !1,
    invalidEra: null,
    invalidMonth: null,
    invalidFormat: !1,
    userInvalidated: !1,
    iso: !1,
    parsedDateParts: [],
    era: null,
    meridiem: null,
    rfc2822: !1,
    weekdayMismatch: !1
  };
}
function getParsingFlags(e) {
  return e._pf == null && (e._pf = defaultParsingFlags()), e._pf;
}
var some;
Array.prototype.some ? some = Array.prototype.some : some = function(e) {
  var r = Object(this), n = r.length >>> 0, s;
  for (s = 0; s < n; s++)
    if (s in r && e.call(this, r[s], s, r))
      return !0;
  return !1;
};
function isValid(e) {
  var r = null, n = !1, s = e._d && !isNaN(e._d.getTime());
  if (s && (r = getParsingFlags(e), n = some.call(r.parsedDateParts, function(a) {
    return a != null;
  }), s = r.overflow < 0 && !r.empty && !r.invalidEra && !r.invalidMonth && !r.invalidWeekday && !r.weekdayMismatch && !r.nullInput && !r.invalidFormat && !r.userInvalidated && (!r.meridiem || r.meridiem && n), e._strict && (s = s && r.charsLeftOver === 0 && r.unusedTokens.length === 0 && r.bigHour === void 0)), Object.isFrozen == null || !Object.isFrozen(e))
    e._isValid = s;
  else
    return s;
  return e._isValid;
}
function createInvalid(e) {
  var r = createUTC(NaN);
  return e != null ? extend(getParsingFlags(r), e) : getParsingFlags(r).userInvalidated = !0, r;
}
var momentProperties = hooks.momentProperties = [], updateInProgress = !1;
function copyConfig(e, r) {
  var n, s, a, t = momentProperties.length;
  if (isUndefined(r._isAMomentObject) || (e._isAMomentObject = r._isAMomentObject), isUndefined(r._i) || (e._i = r._i), isUndefined(r._f) || (e._f = r._f), isUndefined(r._l) || (e._l = r._l), isUndefined(r._strict) || (e._strict = r._strict), isUndefined(r._tzm) || (e._tzm = r._tzm), isUndefined(r._isUTC) || (e._isUTC = r._isUTC), isUndefined(r._offset) || (e._offset = r._offset), isUndefined(r._pf) || (e._pf = getParsingFlags(r)), isUndefined(r._locale) || (e._locale = r._locale), t > 0)
    for (n = 0; n < t; n++)
      s = momentProperties[n], a = r[s], isUndefined(a) || (e[s] = a);
  return e;
}
function Moment(e) {
  copyConfig(this, e), this._d = new Date(e._d != null ? e._d.getTime() : NaN), this.isValid() || (this._d = /* @__PURE__ */ new Date(NaN)), updateInProgress === !1 && (updateInProgress = !0, hooks.updateOffset(this), updateInProgress = !1);
}
function isMoment(e) {
  return e instanceof Moment || e != null && e._isAMomentObject != null;
}
function warn(e) {
  hooks.suppressDeprecationWarnings === !1 && typeof console < "u" && console.warn && console.warn("Deprecation warning: " + e);
}
function deprecate(e, r) {
  var n = !0;
  return extend(function() {
    if (hooks.deprecationHandler != null && hooks.deprecationHandler(null, e), n) {
      var s = [], a, t, l, o = arguments.length;
      for (t = 0; t < o; t++) {
        if (a = "", typeof arguments[t] == "object") {
          a += `
[` + t + "] ";
          for (l in arguments[0])
            hasOwnProp(arguments[0], l) && (a += l + ": " + arguments[0][l] + ", ");
          a = a.slice(0, -2);
        } else
          a = arguments[t];
        s.push(a);
      }
      warn(
        e + `
Arguments: ` + Array.prototype.slice.call(s).join("") + `
` + new Error().stack
      ), n = !1;
    }
    return r.apply(this, arguments);
  }, r);
}
var deprecations = {};
function deprecateSimple(e, r) {
  hooks.deprecationHandler != null && hooks.deprecationHandler(e, r), deprecations[e] || (warn(r), deprecations[e] = !0);
}
hooks.suppressDeprecationWarnings = !1;
hooks.deprecationHandler = null;
function isFunction(e) {
  return typeof Function < "u" && e instanceof Function || Object.prototype.toString.call(e) === "[object Function]";
}
function set(e) {
  var r, n;
  for (n in e)
    hasOwnProp(e, n) && (r = e[n], isFunction(r) ? this[n] = r : this["_" + n] = r);
  this._config = e, this._dayOfMonthOrdinalParseLenient = new RegExp(
    (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source
  );
}
function mergeConfigs(e, r) {
  var n = extend({}, e), s;
  for (s in r)
    hasOwnProp(r, s) && (isObject(e[s]) && isObject(r[s]) ? (n[s] = {}, extend(n[s], e[s]), extend(n[s], r[s])) : r[s] != null ? n[s] = r[s] : delete n[s]);
  for (s in e)
    hasOwnProp(e, s) && !hasOwnProp(r, s) && isObject(e[s]) && (n[s] = extend({}, n[s]));
  return n;
}
function Locale(e) {
  e != null && this.set(e);
}
var keys;
Object.keys ? keys = Object.keys : keys = function(e) {
  var r, n = [];
  for (r in e)
    hasOwnProp(e, r) && n.push(r);
  return n;
};
var defaultCalendar = {
  sameDay: "[Today at] LT",
  nextDay: "[Tomorrow at] LT",
  nextWeek: "dddd [at] LT",
  lastDay: "[Yesterday at] LT",
  lastWeek: "[Last] dddd [at] LT",
  sameElse: "L"
};
function calendar(e, r, n) {
  var s = this._calendar[e] || this._calendar.sameElse;
  return isFunction(s) ? s.call(r, n) : s;
}
function zeroFill(e, r, n) {
  var s = "" + Math.abs(e), a = r - s.length, t = e >= 0;
  return (t ? n ? "+" : "" : "-") + Math.pow(10, Math.max(0, a)).toString().substr(1) + s;
}
var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, formatFunctions = {}, formatTokenFunctions = {};
function addFormatToken(e, r, n, s) {
  var a = s;
  typeof s == "string" && (a = function() {
    return this[s]();
  }), e && (formatTokenFunctions[e] = a), r && (formatTokenFunctions[r[0]] = function() {
    return zeroFill(a.apply(this, arguments), r[1], r[2]);
  }), n && (formatTokenFunctions[n] = function() {
    return this.localeData().ordinal(
      a.apply(this, arguments),
      e
    );
  });
}
function removeFormattingTokens(e) {
  return e.match(/\[[\s\S]/) ? e.replace(/^\[|\]$/g, "") : e.replace(/\\/g, "");
}
function makeFormatFunction(e) {
  var r = e.match(formattingTokens), n, s;
  for (n = 0, s = r.length; n < s; n++)
    formatTokenFunctions[r[n]] ? r[n] = formatTokenFunctions[r[n]] : r[n] = removeFormattingTokens(r[n]);
  return function(a) {
    var t = "", l;
    for (l = 0; l < s; l++)
      t += isFunction(r[l]) ? r[l].call(a, e) : r[l];
    return t;
  };
}
function formatMoment(e, r) {
  return e.isValid() ? (r = expandFormat(r, e.localeData()), formatFunctions[r] = formatFunctions[r] || makeFormatFunction(r), formatFunctions[r](e)) : e.localeData().invalidDate();
}
function expandFormat(e, r) {
  var n = 5;
  function s(a) {
    return r.longDateFormat(a) || a;
  }
  for (localFormattingTokens.lastIndex = 0; n >= 0 && localFormattingTokens.test(e); )
    e = e.replace(
      localFormattingTokens,
      s
    ), localFormattingTokens.lastIndex = 0, n -= 1;
  return e;
}
var defaultLongDateFormat = {
  LTS: "h:mm:ss A",
  LT: "h:mm A",
  L: "MM/DD/YYYY",
  LL: "MMMM D, YYYY",
  LLL: "MMMM D, YYYY h:mm A",
  LLLL: "dddd, MMMM D, YYYY h:mm A"
};
function longDateFormat(e) {
  var r = this._longDateFormat[e], n = this._longDateFormat[e.toUpperCase()];
  return r || !n ? r : (this._longDateFormat[e] = n.match(formattingTokens).map(function(s) {
    return s === "MMMM" || s === "MM" || s === "DD" || s === "dddd" ? s.slice(1) : s;
  }).join(""), this._longDateFormat[e]);
}
var defaultInvalidDate = "Invalid date";
function invalidDate() {
  return this._invalidDate;
}
var defaultOrdinal = "%d", defaultDayOfMonthOrdinalParse = /\d{1,2}/;
function ordinal(e) {
  return this._ordinal.replace("%d", e);
}
var defaultRelativeTime = {
  future: "in %s",
  past: "%s ago",
  s: "a few seconds",
  ss: "%d seconds",
  m: "a minute",
  mm: "%d minutes",
  h: "an hour",
  hh: "%d hours",
  d: "a day",
  dd: "%d days",
  w: "a week",
  ww: "%d weeks",
  M: "a month",
  MM: "%d months",
  y: "a year",
  yy: "%d years"
};
function relativeTime(e, r, n, s) {
  var a = this._relativeTime[n];
  return isFunction(a) ? a(e, r, n, s) : a.replace(/%d/i, e);
}
function pastFuture(e, r) {
  var n = this._relativeTime[e > 0 ? "future" : "past"];
  return isFunction(n) ? n(r) : n.replace(/%s/i, r);
}
var aliases = {
  D: "date",
  dates: "date",
  date: "date",
  d: "day",
  days: "day",
  day: "day",
  e: "weekday",
  weekdays: "weekday",
  weekday: "weekday",
  E: "isoWeekday",
  isoweekdays: "isoWeekday",
  isoweekday: "isoWeekday",
  DDD: "dayOfYear",
  dayofyears: "dayOfYear",
  dayofyear: "dayOfYear",
  h: "hour",
  hours: "hour",
  hour: "hour",
  ms: "millisecond",
  milliseconds: "millisecond",
  millisecond: "millisecond",
  m: "minute",
  minutes: "minute",
  minute: "minute",
  M: "month",
  months: "month",
  month: "month",
  Q: "quarter",
  quarters: "quarter",
  quarter: "quarter",
  s: "second",
  seconds: "second",
  second: "second",
  gg: "weekYear",
  weekyears: "weekYear",
  weekyear: "weekYear",
  GG: "isoWeekYear",
  isoweekyears: "isoWeekYear",
  isoweekyear: "isoWeekYear",
  w: "week",
  weeks: "week",
  week: "week",
  W: "isoWeek",
  isoweeks: "isoWeek",
  isoweek: "isoWeek",
  y: "year",
  years: "year",
  year: "year"
};
function normalizeUnits(e) {
  return typeof e == "string" ? aliases[e] || aliases[e.toLowerCase()] : void 0;
}
function normalizeObjectUnits(e) {
  var r = {}, n, s;
  for (s in e)
    hasOwnProp(e, s) && (n = normalizeUnits(s), n && (r[n] = e[s]));
  return r;
}
var priorities = {
  date: 9,
  day: 11,
  weekday: 11,
  isoWeekday: 11,
  dayOfYear: 4,
  hour: 13,
  millisecond: 16,
  minute: 14,
  month: 8,
  quarter: 7,
  second: 15,
  weekYear: 1,
  isoWeekYear: 1,
  week: 5,
  isoWeek: 5,
  year: 1
};
function getPrioritizedUnits(e) {
  var r = [], n;
  for (n in e)
    hasOwnProp(e, n) && r.push({ unit: n, priority: priorities[n] });
  return r.sort(function(s, a) {
    return s.priority - a.priority;
  }), r;
}
var match1 = /\d/, match2 = /\d\d/, match3 = /\d{3}/, match4 = /\d{4}/, match6 = /[+-]?\d{6}/, match1to2 = /\d\d?/, match3to4 = /\d\d\d\d?/, match5to6 = /\d\d\d\d\d\d?/, match1to3 = /\d{1,3}/, match1to4 = /\d{1,4}/, match1to6 = /[+-]?\d{1,6}/, matchUnsigned = /\d+/, matchSigned = /[+-]?\d+/, matchOffset = /Z|[+-]\d\d:?\d\d/gi, matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, match1to2NoLeadingZero = /^[1-9]\d?/, match1to2HasZero = /^([1-9]\d|\d)/, regexes;
regexes = {};
function addRegexToken(e, r, n) {
  regexes[e] = isFunction(r) ? r : function(s, a) {
    return s && n ? n : r;
  };
}
function getParseRegexForToken(e, r) {
  return hasOwnProp(regexes, e) ? regexes[e](r._strict, r._locale) : new RegExp(unescapeFormat(e));
}
function unescapeFormat(e) {
  return regexEscape(
    e.replace("\\", "").replace(
      /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
      function(r, n, s, a, t) {
        return n || s || a || t;
      }
    )
  );
}
function regexEscape(e) {
  return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
}
function absFloor(e) {
  return e < 0 ? Math.ceil(e) || 0 : Math.floor(e);
}
function toInt(e) {
  var r = +e, n = 0;
  return r !== 0 && isFinite(r) && (n = absFloor(r)), n;
}
var tokens = {};
function addParseToken(e, r) {
  var n, s = r, a;
  for (typeof e == "string" && (e = [e]), isNumber(r) && (s = function(t, l) {
    l[r] = toInt(t);
  }), a = e.length, n = 0; n < a; n++)
    tokens[e[n]] = s;
}
function addWeekParseToken(e, r) {
  addParseToken(e, function(n, s, a, t) {
    a._w = a._w || {}, r(n, a._w, a, t);
  });
}
function addTimeToArrayFromToken(e, r, n) {
  r != null && hasOwnProp(tokens, e) && tokens[e](r, n._a, n, e);
}
function isLeapYear(e) {
  return e % 4 === 0 && e % 100 !== 0 || e % 400 === 0;
}
var YEAR = 0, MONTH = 1, DATE = 2, HOUR = 3, MINUTE = 4, SECOND = 5, MILLISECOND = 6, WEEK = 7, WEEKDAY = 8;
addFormatToken("Y", 0, 0, function() {
  var e = this.year();
  return e <= 9999 ? zeroFill(e, 4) : "+" + e;
});
addFormatToken(0, ["YY", 2], 0, function() {
  return this.year() % 100;
});
addFormatToken(0, ["YYYY", 4], 0, "year");
addFormatToken(0, ["YYYYY", 5], 0, "year");
addFormatToken(0, ["YYYYYY", 6, !0], 0, "year");
addRegexToken("Y", matchSigned);
addRegexToken("YY", match1to2, match2);
addRegexToken("YYYY", match1to4, match4);
addRegexToken("YYYYY", match1to6, match6);
addRegexToken("YYYYYY", match1to6, match6);
addParseToken(["YYYYY", "YYYYYY"], YEAR);
addParseToken("YYYY", function(e, r) {
  r[YEAR] = e.length === 2 ? hooks.parseTwoDigitYear(e) : toInt(e);
});
addParseToken("YY", function(e, r) {
  r[YEAR] = hooks.parseTwoDigitYear(e);
});
addParseToken("Y", function(e, r) {
  r[YEAR] = parseInt(e, 10);
});
function daysInYear(e) {
  return isLeapYear(e) ? 366 : 365;
}
hooks.parseTwoDigitYear = function(e) {
  return toInt(e) + (toInt(e) > 68 ? 1900 : 2e3);
};
var getSetYear = makeGetSet("FullYear", !0);
function getIsLeapYear() {
  return isLeapYear(this.year());
}
function makeGetSet(e, r) {
  return function(n) {
    return n != null ? (set$1(this, e, n), hooks.updateOffset(this, r), this) : get(this, e);
  };
}
function get(e, r) {
  if (!e.isValid())
    return NaN;
  var n = e._d, s = e._isUTC;
  switch (r) {
    case "Milliseconds":
      return s ? n.getUTCMilliseconds() : n.getMilliseconds();
    case "Seconds":
      return s ? n.getUTCSeconds() : n.getSeconds();
    case "Minutes":
      return s ? n.getUTCMinutes() : n.getMinutes();
    case "Hours":
      return s ? n.getUTCHours() : n.getHours();
    case "Date":
      return s ? n.getUTCDate() : n.getDate();
    case "Day":
      return s ? n.getUTCDay() : n.getDay();
    case "Month":
      return s ? n.getUTCMonth() : n.getMonth();
    case "FullYear":
      return s ? n.getUTCFullYear() : n.getFullYear();
    default:
      return NaN;
  }
}
function set$1(e, r, n) {
  var s, a, t, l, o;
  if (!(!e.isValid() || isNaN(n))) {
    switch (s = e._d, a = e._isUTC, r) {
      case "Milliseconds":
        return void (a ? s.setUTCMilliseconds(n) : s.setMilliseconds(n));
      case "Seconds":
        return void (a ? s.setUTCSeconds(n) : s.setSeconds(n));
      case "Minutes":
        return void (a ? s.setUTCMinutes(n) : s.setMinutes(n));
      case "Hours":
        return void (a ? s.setUTCHours(n) : s.setHours(n));
      case "Date":
        return void (a ? s.setUTCDate(n) : s.setDate(n));
      case "FullYear":
        break;
      default:
        return;
    }
    t = n, l = e.month(), o = e.date(), o = o === 29 && l === 1 && !isLeapYear(t) ? 28 : o, a ? s.setUTCFullYear(t, l, o) : s.setFullYear(t, l, o);
  }
}
function stringGet(e) {
  return e = normalizeUnits(e), isFunction(this[e]) ? this[e]() : this;
}
function stringSet(e, r) {
  if (typeof e == "object") {
    e = normalizeObjectUnits(e);
    var n = getPrioritizedUnits(e), s, a = n.length;
    for (s = 0; s < a; s++)
      this[n[s].unit](e[n[s].unit]);
  } else if (e = normalizeUnits(e), isFunction(this[e]))
    return this[e](r);
  return this;
}
function mod(e, r) {
  return (e % r + r) % r;
}
var indexOf;
Array.prototype.indexOf ? indexOf = Array.prototype.indexOf : indexOf = function(e) {
  var r;
  for (r = 0; r < this.length; ++r)
    if (this[r] === e)
      return r;
  return -1;
};
function daysInMonth(e, r) {
  if (isNaN(e) || isNaN(r))
    return NaN;
  var n = mod(r, 12);
  return e += (r - n) / 12, n === 1 ? isLeapYear(e) ? 29 : 28 : 31 - n % 7 % 2;
}
addFormatToken("M", ["MM", 2], "Mo", function() {
  return this.month() + 1;
});
addFormatToken("MMM", 0, 0, function(e) {
  return this.localeData().monthsShort(this, e);
});
addFormatToken("MMMM", 0, 0, function(e) {
  return this.localeData().months(this, e);
});
addRegexToken("M", match1to2, match1to2NoLeadingZero);
addRegexToken("MM", match1to2, match2);
addRegexToken("MMM", function(e, r) {
  return r.monthsShortRegex(e);
});
addRegexToken("MMMM", function(e, r) {
  return r.monthsRegex(e);
});
addParseToken(["M", "MM"], function(e, r) {
  r[MONTH] = toInt(e) - 1;
});
addParseToken(["MMM", "MMMM"], function(e, r, n, s) {
  var a = n._locale.monthsParse(e, s, n._strict);
  a != null ? r[MONTH] = a : getParsingFlags(n).invalidMonth = e;
});
var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split(
  "_"
), defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, defaultMonthsShortRegex = matchWord, defaultMonthsRegex = matchWord;
function localeMonths(e, r) {
  return e ? isArray(this._months) ? this._months[e.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(r) ? "format" : "standalone"][e.month()] : isArray(this._months) ? this._months : this._months.standalone;
}
function localeMonthsShort(e, r) {
  return e ? isArray(this._monthsShort) ? this._monthsShort[e.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(r) ? "format" : "standalone"][e.month()] : isArray(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;
}
function handleStrictParse(e, r, n) {
  var s, a, t, l = e.toLocaleLowerCase();
  if (!this._monthsParse)
    for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], s = 0; s < 12; ++s)
      t = createUTC([2e3, s]), this._shortMonthsParse[s] = this.monthsShort(
        t,
        ""
      ).toLocaleLowerCase(), this._longMonthsParse[s] = this.months(t, "").toLocaleLowerCase();
  return n ? r === "MMM" ? (a = indexOf.call(this._shortMonthsParse, l), a !== -1 ? a : null) : (a = indexOf.call(this._longMonthsParse, l), a !== -1 ? a : null) : r === "MMM" ? (a = indexOf.call(this._shortMonthsParse, l), a !== -1 ? a : (a = indexOf.call(this._longMonthsParse, l), a !== -1 ? a : null)) : (a = indexOf.call(this._longMonthsParse, l), a !== -1 ? a : (a = indexOf.call(this._shortMonthsParse, l), a !== -1 ? a : null));
}
function localeMonthsParse(e, r, n) {
  var s, a, t;
  if (this._monthsParseExact)
    return handleStrictParse.call(this, e, r, n);
  for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), s = 0; s < 12; s++) {
    if (a = createUTC([2e3, s]), n && !this._longMonthsParse[s] && (this._longMonthsParse[s] = new RegExp(
      "^" + this.months(a, "").replace(".", "") + "$",
      "i"
    ), this._shortMonthsParse[s] = new RegExp(
      "^" + this.monthsShort(a, "").replace(".", "") + "$",
      "i"
    )), !n && !this._monthsParse[s] && (t = "^" + this.months(a, "") + "|^" + this.monthsShort(a, ""), this._monthsParse[s] = new RegExp(t.replace(".", ""), "i")), n && r === "MMMM" && this._longMonthsParse[s].test(e))
      return s;
    if (n && r === "MMM" && this._shortMonthsParse[s].test(e))
      return s;
    if (!n && this._monthsParse[s].test(e))
      return s;
  }
}
function setMonth(e, r) {
  if (!e.isValid())
    return e;
  if (typeof r == "string") {
    if (/^\d+$/.test(r))
      r = toInt(r);
    else if (r = e.localeData().monthsParse(r), !isNumber(r))
      return e;
  }
  var n = r, s = e.date();
  return s = s < 29 ? s : Math.min(s, daysInMonth(e.year(), n)), e._isUTC ? e._d.setUTCMonth(n, s) : e._d.setMonth(n, s), e;
}
function getSetMonth(e) {
  return e != null ? (setMonth(this, e), hooks.updateOffset(this, !0), this) : get(this, "Month");
}
function getDaysInMonth() {
  return daysInMonth(this.year(), this.month());
}
function monthsShortRegex(e) {
  return this._monthsParseExact ? (hasOwnProp(this, "_monthsRegex") || computeMonthsParse.call(this), e ? this._monthsShortStrictRegex : this._monthsShortRegex) : (hasOwnProp(this, "_monthsShortRegex") || (this._monthsShortRegex = defaultMonthsShortRegex), this._monthsShortStrictRegex && e ? this._monthsShortStrictRegex : this._monthsShortRegex);
}
function monthsRegex(e) {
  return this._monthsParseExact ? (hasOwnProp(this, "_monthsRegex") || computeMonthsParse.call(this), e ? this._monthsStrictRegex : this._monthsRegex) : (hasOwnProp(this, "_monthsRegex") || (this._monthsRegex = defaultMonthsRegex), this._monthsStrictRegex && e ? this._monthsStrictRegex : this._monthsRegex);
}
function computeMonthsParse() {
  function e(c, _) {
    return _.length - c.length;
  }
  var r = [], n = [], s = [], a, t, l, o;
  for (a = 0; a < 12; a++)
    t = createUTC([2e3, a]), l = regexEscape(this.monthsShort(t, "")), o = regexEscape(this.months(t, "")), r.push(l), n.push(o), s.push(o), s.push(l);
  r.sort(e), n.sort(e), s.sort(e), this._monthsRegex = new RegExp("^(" + s.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp(
    "^(" + n.join("|") + ")",
    "i"
  ), this._monthsShortStrictRegex = new RegExp(
    "^(" + r.join("|") + ")",
    "i"
  );
}
function createDate(e, r, n, s, a, t, l) {
  var o;
  return e < 100 && e >= 0 ? (o = new Date(e + 400, r, n, s, a, t, l), isFinite(o.getFullYear()) && o.setFullYear(e)) : o = new Date(e, r, n, s, a, t, l), o;
}
function createUTCDate(e) {
  var r, n;
  return e < 100 && e >= 0 ? (n = Array.prototype.slice.call(arguments), n[0] = e + 400, r = new Date(Date.UTC.apply(null, n)), isFinite(r.getUTCFullYear()) && r.setUTCFullYear(e)) : r = new Date(Date.UTC.apply(null, arguments)), r;
}
function firstWeekOffset(e, r, n) {
  var s = 7 + r - n, a = (7 + createUTCDate(e, 0, s).getUTCDay() - r) % 7;
  return -a + s - 1;
}
function dayOfYearFromWeeks(e, r, n, s, a) {
  var t = (7 + n - s) % 7, l = firstWeekOffset(e, s, a), o = 1 + 7 * (r - 1) + t + l, c, _;
  return o <= 0 ? (c = e - 1, _ = daysInYear(c) + o) : o > daysInYear(e) ? (c = e + 1, _ = o - daysInYear(e)) : (c = e, _ = o), {
    year: c,
    dayOfYear: _
  };
}
function weekOfYear(e, r, n) {
  var s = firstWeekOffset(e.year(), r, n), a = Math.floor((e.dayOfYear() - s - 1) / 7) + 1, t, l;
  return a < 1 ? (l = e.year() - 1, t = a + weeksInYear(l, r, n)) : a > weeksInYear(e.year(), r, n) ? (t = a - weeksInYear(e.year(), r, n), l = e.year() + 1) : (l = e.year(), t = a), {
    week: t,
    year: l
  };
}
function weeksInYear(e, r, n) {
  var s = firstWeekOffset(e, r, n), a = firstWeekOffset(e + 1, r, n);
  return (daysInYear(e) - s + a) / 7;
}
addFormatToken("w", ["ww", 2], "wo", "week");
addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
addRegexToken("w", match1to2, match1to2NoLeadingZero);
addRegexToken("ww", match1to2, match2);
addRegexToken("W", match1to2, match1to2NoLeadingZero);
addRegexToken("WW", match1to2, match2);
addWeekParseToken(
  ["w", "ww", "W", "WW"],
  function(e, r, n, s) {
    r[s.substr(0, 1)] = toInt(e);
  }
);
function localeWeek(e) {
  return weekOfYear(e, this._week.dow, this._week.doy).week;
}
var defaultLocaleWeek = {
  dow: 0,
  // Sunday is the first day of the week.
  doy: 6
  // The week that contains Jan 6th is the first week of the year.
};
function localeFirstDayOfWeek() {
  return this._week.dow;
}
function localeFirstDayOfYear() {
  return this._week.doy;
}
function getSetWeek(e) {
  var r = this.localeData().week(this);
  return e == null ? r : this.add((e - r) * 7, "d");
}
function getSetISOWeek(e) {
  var r = weekOfYear(this, 1, 4).week;
  return e == null ? r : this.add((e - r) * 7, "d");
}
addFormatToken("d", 0, "do", "day");
addFormatToken("dd", 0, 0, function(e) {
  return this.localeData().weekdaysMin(this, e);
});
addFormatToken("ddd", 0, 0, function(e) {
  return this.localeData().weekdaysShort(this, e);
});
addFormatToken("dddd", 0, 0, function(e) {
  return this.localeData().weekdays(this, e);
});
addFormatToken("e", 0, 0, "weekday");
addFormatToken("E", 0, 0, "isoWeekday");
addRegexToken("d", match1to2);
addRegexToken("e", match1to2);
addRegexToken("E", match1to2);
addRegexToken("dd", function(e, r) {
  return r.weekdaysMinRegex(e);
});
addRegexToken("ddd", function(e, r) {
  return r.weekdaysShortRegex(e);
});
addRegexToken("dddd", function(e, r) {
  return r.weekdaysRegex(e);
});
addWeekParseToken(["dd", "ddd", "dddd"], function(e, r, n, s) {
  var a = n._locale.weekdaysParse(e, s, n._strict);
  a != null ? r.d = a : getParsingFlags(n).invalidWeekday = e;
});
addWeekParseToken(["d", "e", "E"], function(e, r, n, s) {
  r[s] = toInt(e);
});
function parseWeekday(e, r) {
  return typeof e != "string" ? e : isNaN(e) ? (e = r.weekdaysParse(e), typeof e == "number" ? e : null) : parseInt(e, 10);
}
function parseIsoWeekday(e, r) {
  return typeof e == "string" ? r.weekdaysParse(e) % 7 || 7 : isNaN(e) ? null : e;
}
function shiftWeekdays(e, r) {
  return e.slice(r, 7).concat(e.slice(0, r));
}
var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), defaultWeekdaysRegex = matchWord, defaultWeekdaysShortRegex = matchWord, defaultWeekdaysMinRegex = matchWord;
function localeWeekdays(e, r) {
  var n = isArray(this._weekdays) ? this._weekdays : this._weekdays[e && e !== !0 && this._weekdays.isFormat.test(r) ? "format" : "standalone"];
  return e === !0 ? shiftWeekdays(n, this._week.dow) : e ? n[e.day()] : n;
}
function localeWeekdaysShort(e) {
  return e === !0 ? shiftWeekdays(this._weekdaysShort, this._week.dow) : e ? this._weekdaysShort[e.day()] : this._weekdaysShort;
}
function localeWeekdaysMin(e) {
  return e === !0 ? shiftWeekdays(this._weekdaysMin, this._week.dow) : e ? this._weekdaysMin[e.day()] : this._weekdaysMin;
}
function handleStrictParse$1(e, r, n) {
  var s, a, t, l = e.toLocaleLowerCase();
  if (!this._weekdaysParse)
    for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], s = 0; s < 7; ++s)
      t = createUTC([2e3, 1]).day(s), this._minWeekdaysParse[s] = this.weekdaysMin(
        t,
        ""
      ).toLocaleLowerCase(), this._shortWeekdaysParse[s] = this.weekdaysShort(
        t,
        ""
      ).toLocaleLowerCase(), this._weekdaysParse[s] = this.weekdays(t, "").toLocaleLowerCase();
  return n ? r === "dddd" ? (a = indexOf.call(this._weekdaysParse, l), a !== -1 ? a : null) : r === "ddd" ? (a = indexOf.call(this._shortWeekdaysParse, l), a !== -1 ? a : null) : (a = indexOf.call(this._minWeekdaysParse, l), a !== -1 ? a : null) : r === "dddd" ? (a = indexOf.call(this._weekdaysParse, l), a !== -1 || (a = indexOf.call(this._shortWeekdaysParse, l), a !== -1) ? a : (a = indexOf.call(this._minWeekdaysParse, l), a !== -1 ? a : null)) : r === "ddd" ? (a = indexOf.call(this._shortWeekdaysParse, l), a !== -1 || (a = indexOf.call(this._weekdaysParse, l), a !== -1) ? a : (a = indexOf.call(this._minWeekdaysParse, l), a !== -1 ? a : null)) : (a = indexOf.call(this._minWeekdaysParse, l), a !== -1 || (a = indexOf.call(this._weekdaysParse, l), a !== -1) ? a : (a = indexOf.call(this._shortWeekdaysParse, l), a !== -1 ? a : null));
}
function localeWeekdaysParse(e, r, n) {
  var s, a, t;
  if (this._weekdaysParseExact)
    return handleStrictParse$1.call(this, e, r, n);
  for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), s = 0; s < 7; s++) {
    if (a = createUTC([2e3, 1]).day(s), n && !this._fullWeekdaysParse[s] && (this._fullWeekdaysParse[s] = new RegExp(
      "^" + this.weekdays(a, "").replace(".", "\\.?") + "$",
      "i"
    ), this._shortWeekdaysParse[s] = new RegExp(
      "^" + this.weekdaysShort(a, "").replace(".", "\\.?") + "$",
      "i"
    ), this._minWeekdaysParse[s] = new RegExp(
      "^" + this.weekdaysMin(a, "").replace(".", "\\.?") + "$",
      "i"
    )), this._weekdaysParse[s] || (t = "^" + this.weekdays(a, "") + "|^" + this.weekdaysShort(a, "") + "|^" + this.weekdaysMin(a, ""), this._weekdaysParse[s] = new RegExp(t.replace(".", ""), "i")), n && r === "dddd" && this._fullWeekdaysParse[s].test(e))
      return s;
    if (n && r === "ddd" && this._shortWeekdaysParse[s].test(e))
      return s;
    if (n && r === "dd" && this._minWeekdaysParse[s].test(e))
      return s;
    if (!n && this._weekdaysParse[s].test(e))
      return s;
  }
}
function getSetDayOfWeek(e) {
  if (!this.isValid())
    return e != null ? this : NaN;
  var r = get(this, "Day");
  return e != null ? (e = parseWeekday(e, this.localeData()), this.add(e - r, "d")) : r;
}
function getSetLocaleDayOfWeek(e) {
  if (!this.isValid())
    return e != null ? this : NaN;
  var r = (this.day() + 7 - this.localeData()._week.dow) % 7;
  return e == null ? r : this.add(e - r, "d");
}
function getSetISODayOfWeek(e) {
  if (!this.isValid())
    return e != null ? this : NaN;
  if (e != null) {
    var r = parseIsoWeekday(e, this.localeData());
    return this.day(this.day() % 7 ? r : r - 7);
  } else
    return this.day() || 7;
}
function weekdaysRegex(e) {
  return this._weekdaysParseExact ? (hasOwnProp(this, "_weekdaysRegex") || computeWeekdaysParse.call(this), e ? this._weekdaysStrictRegex : this._weekdaysRegex) : (hasOwnProp(this, "_weekdaysRegex") || (this._weekdaysRegex = defaultWeekdaysRegex), this._weekdaysStrictRegex && e ? this._weekdaysStrictRegex : this._weekdaysRegex);
}
function weekdaysShortRegex(e) {
  return this._weekdaysParseExact ? (hasOwnProp(this, "_weekdaysRegex") || computeWeekdaysParse.call(this), e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (hasOwnProp(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = defaultWeekdaysShortRegex), this._weekdaysShortStrictRegex && e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex);
}
function weekdaysMinRegex(e) {
  return this._weekdaysParseExact ? (hasOwnProp(this, "_weekdaysRegex") || computeWeekdaysParse.call(this), e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (hasOwnProp(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = defaultWeekdaysMinRegex), this._weekdaysMinStrictRegex && e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex);
}
function computeWeekdaysParse() {
  function e(u, y) {
    return y.length - u.length;
  }
  var r = [], n = [], s = [], a = [], t, l, o, c, _;
  for (t = 0; t < 7; t++)
    l = createUTC([2e3, 1]).day(t), o = regexEscape(this.weekdaysMin(l, "")), c = regexEscape(this.weekdaysShort(l, "")), _ = regexEscape(this.weekdays(l, "")), r.push(o), n.push(c), s.push(_), a.push(o), a.push(c), a.push(_);
  r.sort(e), n.sort(e), s.sort(e), a.sort(e), this._weekdaysRegex = new RegExp("^(" + a.join("|") + ")", "i"), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp(
    "^(" + s.join("|") + ")",
    "i"
  ), this._weekdaysShortStrictRegex = new RegExp(
    "^(" + n.join("|") + ")",
    "i"
  ), this._weekdaysMinStrictRegex = new RegExp(
    "^(" + r.join("|") + ")",
    "i"
  );
}
function hFormat() {
  return this.hours() % 12 || 12;
}
function kFormat() {
  return this.hours() || 24;
}
addFormatToken("H", ["HH", 2], 0, "hour");
addFormatToken("h", ["hh", 2], 0, hFormat);
addFormatToken("k", ["kk", 2], 0, kFormat);
addFormatToken("hmm", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
});
addFormatToken("hmmss", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
addFormatToken("Hmm", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2);
});
addFormatToken("Hmmss", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
function meridiem(e, r) {
  addFormatToken(e, 0, 0, function() {
    return this.localeData().meridiem(
      this.hours(),
      this.minutes(),
      r
    );
  });
}
meridiem("a", !0);
meridiem("A", !1);
function matchMeridiem(e, r) {
  return r._meridiemParse;
}
addRegexToken("a", matchMeridiem);
addRegexToken("A", matchMeridiem);
addRegexToken("H", match1to2, match1to2HasZero);
addRegexToken("h", match1to2, match1to2NoLeadingZero);
addRegexToken("k", match1to2, match1to2NoLeadingZero);
addRegexToken("HH", match1to2, match2);
addRegexToken("hh", match1to2, match2);
addRegexToken("kk", match1to2, match2);
addRegexToken("hmm", match3to4);
addRegexToken("hmmss", match5to6);
addRegexToken("Hmm", match3to4);
addRegexToken("Hmmss", match5to6);
addParseToken(["H", "HH"], HOUR);
addParseToken(["k", "kk"], function(e, r, n) {
  var s = toInt(e);
  r[HOUR] = s === 24 ? 0 : s;
});
addParseToken(["a", "A"], function(e, r, n) {
  n._isPm = n._locale.isPM(e), n._meridiem = e;
});
addParseToken(["h", "hh"], function(e, r, n) {
  r[HOUR] = toInt(e), getParsingFlags(n).bigHour = !0;
});
addParseToken("hmm", function(e, r, n) {
  var s = e.length - 2;
  r[HOUR] = toInt(e.substr(0, s)), r[MINUTE] = toInt(e.substr(s)), getParsingFlags(n).bigHour = !0;
});
addParseToken("hmmss", function(e, r, n) {
  var s = e.length - 4, a = e.length - 2;
  r[HOUR] = toInt(e.substr(0, s)), r[MINUTE] = toInt(e.substr(s, 2)), r[SECOND] = toInt(e.substr(a)), getParsingFlags(n).bigHour = !0;
});
addParseToken("Hmm", function(e, r, n) {
  var s = e.length - 2;
  r[HOUR] = toInt(e.substr(0, s)), r[MINUTE] = toInt(e.substr(s));
});
addParseToken("Hmmss", function(e, r, n) {
  var s = e.length - 4, a = e.length - 2;
  r[HOUR] = toInt(e.substr(0, s)), r[MINUTE] = toInt(e.substr(s, 2)), r[SECOND] = toInt(e.substr(a));
});
function localeIsPM(e) {
  return (e + "").toLowerCase().charAt(0) === "p";
}
var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i, getSetHour = makeGetSet("Hours", !0);
function localeMeridiem(e, r, n) {
  return e > 11 ? n ? "pm" : "PM" : n ? "am" : "AM";
}
var baseConfig = {
  calendar: defaultCalendar,
  longDateFormat: defaultLongDateFormat,
  invalidDate: defaultInvalidDate,
  ordinal: defaultOrdinal,
  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
  relativeTime: defaultRelativeTime,
  months: defaultLocaleMonths,
  monthsShort: defaultLocaleMonthsShort,
  week: defaultLocaleWeek,
  weekdays: defaultLocaleWeekdays,
  weekdaysMin: defaultLocaleWeekdaysMin,
  weekdaysShort: defaultLocaleWeekdaysShort,
  meridiemParse: defaultLocaleMeridiemParse
}, locales = {}, localeFamilies = {}, globalLocale;
function commonPrefix(e, r) {
  var n, s = Math.min(e.length, r.length);
  for (n = 0; n < s; n += 1)
    if (e[n] !== r[n])
      return n;
  return s;
}
function normalizeLocale(e) {
  return e && e.toLowerCase().replace("_", "-");
}
function chooseLocale(e) {
  for (var r = 0, n, s, a, t; r < e.length; ) {
    for (t = normalizeLocale(e[r]).split("-"), n = t.length, s = normalizeLocale(e[r + 1]), s = s ? s.split("-") : null; n > 0; ) {
      if (a = loadLocale(t.slice(0, n).join("-")), a)
        return a;
      if (s && s.length >= n && commonPrefix(t, s) >= n - 1)
        break;
      n--;
    }
    r++;
  }
  return globalLocale;
}
function isLocaleNameSane(e) {
  return !!(e && e.match("^[^/\\\\]*$"));
}
function loadLocale(e) {
  var r = null, n;
  if (locales[e] === void 0 && typeof module < "u" && module && module.exports && isLocaleNameSane(e))
    try {
      r = globalLocale._abbr, n = require, n("./locale/" + e), getSetGlobalLocale(r);
    } catch {
      locales[e] = null;
    }
  return locales[e];
}
function getSetGlobalLocale(e, r) {
  var n;
  return e && (isUndefined(r) ? n = getLocale(e) : n = defineLocale(e, r), n ? globalLocale = n : typeof console < "u" && console.warn && console.warn(
    "Locale " + e + " not found. Did you forget to load it?"
  )), globalLocale._abbr;
}
function defineLocale(e, r) {
  if (r !== null) {
    var n, s = baseConfig;
    if (r.abbr = e, locales[e] != null)
      deprecateSimple(
        "defineLocaleOverride",
        "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
      ), s = locales[e]._config;
    else if (r.parentLocale != null)
      if (locales[r.parentLocale] != null)
        s = locales[r.parentLocale]._config;
      else if (n = loadLocale(r.parentLocale), n != null)
        s = n._config;
      else
        return localeFamilies[r.parentLocale] || (localeFamilies[r.parentLocale] = []), localeFamilies[r.parentLocale].push({
          name: e,
          config: r
        }), null;
    return locales[e] = new Locale(mergeConfigs(s, r)), localeFamilies[e] && localeFamilies[e].forEach(function(a) {
      defineLocale(a.name, a.config);
    }), getSetGlobalLocale(e), locales[e];
  } else
    return delete locales[e], null;
}
function updateLocale(e, r) {
  if (r != null) {
    var n, s, a = baseConfig;
    locales[e] != null && locales[e].parentLocale != null ? locales[e].set(mergeConfigs(locales[e]._config, r)) : (s = loadLocale(e), s != null && (a = s._config), r = mergeConfigs(a, r), s == null && (r.abbr = e), n = new Locale(r), n.parentLocale = locales[e], locales[e] = n), getSetGlobalLocale(e);
  } else
    locales[e] != null && (locales[e].parentLocale != null ? (locales[e] = locales[e].parentLocale, e === getSetGlobalLocale() && getSetGlobalLocale(e)) : locales[e] != null && delete locales[e]);
  return locales[e];
}
function getLocale(e) {
  var r;
  if (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e)
    return globalLocale;
  if (!isArray(e)) {
    if (r = loadLocale(e), r)
      return r;
    e = [e];
  }
  return chooseLocale(e);
}
function listLocales() {
  return keys(locales);
}
function checkOverflow(e) {
  var r, n = e._a;
  return n && getParsingFlags(e).overflow === -2 && (r = n[MONTH] < 0 || n[MONTH] > 11 ? MONTH : n[DATE] < 1 || n[DATE] > daysInMonth(n[YEAR], n[MONTH]) ? DATE : n[HOUR] < 0 || n[HOUR] > 24 || n[HOUR] === 24 && (n[MINUTE] !== 0 || n[SECOND] !== 0 || n[MILLISECOND] !== 0) ? HOUR : n[MINUTE] < 0 || n[MINUTE] > 59 ? MINUTE : n[SECOND] < 0 || n[SECOND] > 59 ? SECOND : n[MILLISECOND] < 0 || n[MILLISECOND] > 999 ? MILLISECOND : -1, getParsingFlags(e)._overflowDayOfYear && (r < YEAR || r > DATE) && (r = DATE), getParsingFlags(e)._overflowWeeks && r === -1 && (r = WEEK), getParsingFlags(e)._overflowWeekday && r === -1 && (r = WEEKDAY), getParsingFlags(e).overflow = r), e;
}
var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, tzRegex = /Z|[+-]\d\d(?::?\d\d)?/, isoDates = [
  ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
  ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
  ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
  ["GGGG-[W]WW", /\d{4}-W\d\d/, !1],
  ["YYYY-DDD", /\d{4}-\d{3}/],
  ["YYYY-MM", /\d{4}-\d\d/, !1],
  ["YYYYYYMMDD", /[+-]\d{10}/],
  ["YYYYMMDD", /\d{8}/],
  ["GGGG[W]WWE", /\d{4}W\d{3}/],
  ["GGGG[W]WW", /\d{4}W\d{2}/, !1],
  ["YYYYDDD", /\d{7}/],
  ["YYYYMM", /\d{6}/, !1],
  ["YYYY", /\d{4}/, !1]
], isoTimes = [
  ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
  ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
  ["HH:mm:ss", /\d\d:\d\d:\d\d/],
  ["HH:mm", /\d\d:\d\d/],
  ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
  ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
  ["HHmmss", /\d\d\d\d\d\d/],
  ["HHmm", /\d\d\d\d/],
  ["HH", /\d\d/]
], aspNetJsonRegex = /^\/?Date\((-?\d+)/i, rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, obsOffsets = {
  UT: 0,
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};
function configFromISO(e) {
  var r, n, s = e._i, a = extendedIsoRegex.exec(s) || basicIsoRegex.exec(s), t, l, o, c, _ = isoDates.length, u = isoTimes.length;
  if (a) {
    for (getParsingFlags(e).iso = !0, r = 0, n = _; r < n; r++)
      if (isoDates[r][1].exec(a[1])) {
        l = isoDates[r][0], t = isoDates[r][2] !== !1;
        break;
      }
    if (l == null) {
      e._isValid = !1;
      return;
    }
    if (a[3]) {
      for (r = 0, n = u; r < n; r++)
        if (isoTimes[r][1].exec(a[3])) {
          o = (a[2] || " ") + isoTimes[r][0];
          break;
        }
      if (o == null) {
        e._isValid = !1;
        return;
      }
    }
    if (!t && o != null) {
      e._isValid = !1;
      return;
    }
    if (a[4])
      if (tzRegex.exec(a[4]))
        c = "Z";
      else {
        e._isValid = !1;
        return;
      }
    e._f = l + (o || "") + (c || ""), configFromStringAndFormat(e);
  } else
    e._isValid = !1;
}
function extractFromRFC2822Strings(e, r, n, s, a, t) {
  var l = [
    untruncateYear(e),
    defaultLocaleMonthsShort.indexOf(r),
    parseInt(n, 10),
    parseInt(s, 10),
    parseInt(a, 10)
  ];
  return t && l.push(parseInt(t, 10)), l;
}
function untruncateYear(e) {
  var r = parseInt(e, 10);
  return r <= 49 ? 2e3 + r : r <= 999 ? 1900 + r : r;
}
function preprocessRFC2822(e) {
  return e.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function checkWeekday(e, r, n) {
  if (e) {
    var s = defaultLocaleWeekdaysShort.indexOf(e), a = new Date(
      r[0],
      r[1],
      r[2]
    ).getDay();
    if (s !== a)
      return getParsingFlags(n).weekdayMismatch = !0, n._isValid = !1, !1;
  }
  return !0;
}
function calculateOffset(e, r, n) {
  if (e)
    return obsOffsets[e];
  if (r)
    return 0;
  var s = parseInt(n, 10), a = s % 100, t = (s - a) / 100;
  return t * 60 + a;
}
function configFromRFC2822(e) {
  var r = rfc2822.exec(preprocessRFC2822(e._i)), n;
  if (r) {
    if (n = extractFromRFC2822Strings(
      r[4],
      r[3],
      r[2],
      r[5],
      r[6],
      r[7]
    ), !checkWeekday(r[1], n, e))
      return;
    e._a = n, e._tzm = calculateOffset(r[8], r[9], r[10]), e._d = createUTCDate.apply(null, e._a), e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), getParsingFlags(e).rfc2822 = !0;
  } else
    e._isValid = !1;
}
function configFromString(e) {
  var r = aspNetJsonRegex.exec(e._i);
  if (r !== null) {
    e._d = /* @__PURE__ */ new Date(+r[1]);
    return;
  }
  if (configFromISO(e), e._isValid === !1)
    delete e._isValid;
  else
    return;
  if (configFromRFC2822(e), e._isValid === !1)
    delete e._isValid;
  else
    return;
  e._strict ? e._isValid = !1 : hooks.createFromInputFallback(e);
}
hooks.createFromInputFallback = deprecate(
  "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
  function(e) {
    e._d = /* @__PURE__ */ new Date(e._i + (e._useUTC ? " UTC" : ""));
  }
);
function defaults(e, r, n) {
  return e ?? r ?? n;
}
function currentDateArray(e) {
  var r = new Date(hooks.now());
  return e._useUTC ? [
    r.getUTCFullYear(),
    r.getUTCMonth(),
    r.getUTCDate()
  ] : [r.getFullYear(), r.getMonth(), r.getDate()];
}
function configFromArray(e) {
  var r, n, s = [], a, t, l;
  if (!e._d) {
    for (a = currentDateArray(e), e._w && e._a[DATE] == null && e._a[MONTH] == null && dayOfYearFromWeekInfo(e), e._dayOfYear != null && (l = defaults(e._a[YEAR], a[YEAR]), (e._dayOfYear > daysInYear(l) || e._dayOfYear === 0) && (getParsingFlags(e)._overflowDayOfYear = !0), n = createUTCDate(l, 0, e._dayOfYear), e._a[MONTH] = n.getUTCMonth(), e._a[DATE] = n.getUTCDate()), r = 0; r < 3 && e._a[r] == null; ++r)
      e._a[r] = s[r] = a[r];
    for (; r < 7; r++)
      e._a[r] = s[r] = e._a[r] == null ? r === 2 ? 1 : 0 : e._a[r];
    e._a[HOUR] === 24 && e._a[MINUTE] === 0 && e._a[SECOND] === 0 && e._a[MILLISECOND] === 0 && (e._nextDay = !0, e._a[HOUR] = 0), e._d = (e._useUTC ? createUTCDate : createDate).apply(
      null,
      s
    ), t = e._useUTC ? e._d.getUTCDay() : e._d.getDay(), e._tzm != null && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), e._nextDay && (e._a[HOUR] = 24), e._w && typeof e._w.d < "u" && e._w.d !== t && (getParsingFlags(e).weekdayMismatch = !0);
  }
}
function dayOfYearFromWeekInfo(e) {
  var r, n, s, a, t, l, o, c, _;
  r = e._w, r.GG != null || r.W != null || r.E != null ? (t = 1, l = 4, n = defaults(
    r.GG,
    e._a[YEAR],
    weekOfYear(createLocal(), 1, 4).year
  ), s = defaults(r.W, 1), a = defaults(r.E, 1), (a < 1 || a > 7) && (c = !0)) : (t = e._locale._week.dow, l = e._locale._week.doy, _ = weekOfYear(createLocal(), t, l), n = defaults(r.gg, e._a[YEAR], _.year), s = defaults(r.w, _.week), r.d != null ? (a = r.d, (a < 0 || a > 6) && (c = !0)) : r.e != null ? (a = r.e + t, (r.e < 0 || r.e > 6) && (c = !0)) : a = t), s < 1 || s > weeksInYear(n, t, l) ? getParsingFlags(e)._overflowWeeks = !0 : c != null ? getParsingFlags(e)._overflowWeekday = !0 : (o = dayOfYearFromWeeks(n, s, a, t, l), e._a[YEAR] = o.year, e._dayOfYear = o.dayOfYear);
}
hooks.ISO_8601 = function() {
};
hooks.RFC_2822 = function() {
};
function configFromStringAndFormat(e) {
  if (e._f === hooks.ISO_8601) {
    configFromISO(e);
    return;
  }
  if (e._f === hooks.RFC_2822) {
    configFromRFC2822(e);
    return;
  }
  e._a = [], getParsingFlags(e).empty = !0;
  var r = "" + e._i, n, s, a, t, l, o = r.length, c = 0, _, u;
  for (a = expandFormat(e._f, e._locale).match(formattingTokens) || [], u = a.length, n = 0; n < u; n++)
    t = a[n], s = (r.match(getParseRegexForToken(t, e)) || [])[0], s && (l = r.substr(0, r.indexOf(s)), l.length > 0 && getParsingFlags(e).unusedInput.push(l), r = r.slice(
      r.indexOf(s) + s.length
    ), c += s.length), formatTokenFunctions[t] ? (s ? getParsingFlags(e).empty = !1 : getParsingFlags(e).unusedTokens.push(t), addTimeToArrayFromToken(t, s, e)) : e._strict && !s && getParsingFlags(e).unusedTokens.push(t);
  getParsingFlags(e).charsLeftOver = o - c, r.length > 0 && getParsingFlags(e).unusedInput.push(r), e._a[HOUR] <= 12 && getParsingFlags(e).bigHour === !0 && e._a[HOUR] > 0 && (getParsingFlags(e).bigHour = void 0), getParsingFlags(e).parsedDateParts = e._a.slice(0), getParsingFlags(e).meridiem = e._meridiem, e._a[HOUR] = meridiemFixWrap(
    e._locale,
    e._a[HOUR],
    e._meridiem
  ), _ = getParsingFlags(e).era, _ !== null && (e._a[YEAR] = e._locale.erasConvertYear(_, e._a[YEAR])), configFromArray(e), checkOverflow(e);
}
function meridiemFixWrap(e, r, n) {
  var s;
  return n == null ? r : e.meridiemHour != null ? e.meridiemHour(r, n) : (e.isPM != null && (s = e.isPM(n), s && r < 12 && (r += 12), !s && r === 12 && (r = 0)), r);
}
function configFromStringAndArray(e) {
  var r, n, s, a, t, l, o = !1, c = e._f.length;
  if (c === 0) {
    getParsingFlags(e).invalidFormat = !0, e._d = /* @__PURE__ */ new Date(NaN);
    return;
  }
  for (a = 0; a < c; a++)
    t = 0, l = !1, r = copyConfig({}, e), e._useUTC != null && (r._useUTC = e._useUTC), r._f = e._f[a], configFromStringAndFormat(r), isValid(r) && (l = !0), t += getParsingFlags(r).charsLeftOver, t += getParsingFlags(r).unusedTokens.length * 10, getParsingFlags(r).score = t, o ? t < s && (s = t, n = r) : (s == null || t < s || l) && (s = t, n = r, l && (o = !0));
  extend(e, n || r);
}
function configFromObject(e) {
  if (!e._d) {
    var r = normalizeObjectUnits(e._i), n = r.day === void 0 ? r.date : r.day;
    e._a = map(
      [r.year, r.month, n, r.hour, r.minute, r.second, r.millisecond],
      function(s) {
        return s && parseInt(s, 10);
      }
    ), configFromArray(e);
  }
}
function createFromConfig(e) {
  var r = new Moment(checkOverflow(prepareConfig(e)));
  return r._nextDay && (r.add(1, "d"), r._nextDay = void 0), r;
}
function prepareConfig(e) {
  var r = e._i, n = e._f;
  return e._locale = e._locale || getLocale(e._l), r === null || n === void 0 && r === "" ? createInvalid({ nullInput: !0 }) : (typeof r == "string" && (e._i = r = e._locale.preparse(r)), isMoment(r) ? new Moment(checkOverflow(r)) : (isDate(r) ? e._d = r : isArray(n) ? configFromStringAndArray(e) : n ? configFromStringAndFormat(e) : configFromInput(e), isValid(e) || (e._d = null), e));
}
function configFromInput(e) {
  var r = e._i;
  isUndefined(r) ? e._d = new Date(hooks.now()) : isDate(r) ? e._d = new Date(r.valueOf()) : typeof r == "string" ? configFromString(e) : isArray(r) ? (e._a = map(r.slice(0), function(n) {
    return parseInt(n, 10);
  }), configFromArray(e)) : isObject(r) ? configFromObject(e) : isNumber(r) ? e._d = new Date(r) : hooks.createFromInputFallback(e);
}
function createLocalOrUTC(e, r, n, s, a) {
  var t = {};
  return (r === !0 || r === !1) && (s = r, r = void 0), (n === !0 || n === !1) && (s = n, n = void 0), (isObject(e) && isObjectEmpty(e) || isArray(e) && e.length === 0) && (e = void 0), t._isAMomentObject = !0, t._useUTC = t._isUTC = a, t._l = n, t._i = e, t._f = r, t._strict = s, createFromConfig(t);
}
function createLocal(e, r, n, s) {
  return createLocalOrUTC(e, r, n, s, !1);
}
var prototypeMin = deprecate(
  "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var e = createLocal.apply(null, arguments);
    return this.isValid() && e.isValid() ? e < this ? this : e : createInvalid();
  }
), prototypeMax = deprecate(
  "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var e = createLocal.apply(null, arguments);
    return this.isValid() && e.isValid() ? e > this ? this : e : createInvalid();
  }
);
function pickBy(e, r) {
  var n, s;
  if (r.length === 1 && isArray(r[0]) && (r = r[0]), !r.length)
    return createLocal();
  for (n = r[0], s = 1; s < r.length; ++s)
    (!r[s].isValid() || r[s][e](n)) && (n = r[s]);
  return n;
}
function min() {
  var e = [].slice.call(arguments, 0);
  return pickBy("isBefore", e);
}
function max() {
  var e = [].slice.call(arguments, 0);
  return pickBy("isAfter", e);
}
var now = function() {
  return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
}, ordering = [
  "year",
  "quarter",
  "month",
  "week",
  "day",
  "hour",
  "minute",
  "second",
  "millisecond"
];
function isDurationValid(e) {
  var r, n = !1, s, a = ordering.length;
  for (r in e)
    if (hasOwnProp(e, r) && !(indexOf.call(ordering, r) !== -1 && (e[r] == null || !isNaN(e[r]))))
      return !1;
  for (s = 0; s < a; ++s)
    if (e[ordering[s]]) {
      if (n)
        return !1;
      parseFloat(e[ordering[s]]) !== toInt(e[ordering[s]]) && (n = !0);
    }
  return !0;
}
function isValid$1() {
  return this._isValid;
}
function createInvalid$1() {
  return createDuration(NaN);
}
function Duration(e) {
  var r = normalizeObjectUnits(e), n = r.year || 0, s = r.quarter || 0, a = r.month || 0, t = r.week || r.isoWeek || 0, l = r.day || 0, o = r.hour || 0, c = r.minute || 0, _ = r.second || 0, u = r.millisecond || 0;
  this._isValid = isDurationValid(r), this._milliseconds = +u + _ * 1e3 + // 1000
  c * 6e4 + // 1000 * 60
  o * 1e3 * 60 * 60, this._days = +l + t * 7, this._months = +a + s * 3 + n * 12, this._data = {}, this._locale = getLocale(), this._bubble();
}
function isDuration(e) {
  return e instanceof Duration;
}
function absRound(e) {
  return e < 0 ? Math.round(-1 * e) * -1 : Math.round(e);
}
function compareArrays(e, r, n) {
  var s = Math.min(e.length, r.length), a = Math.abs(e.length - r.length), t = 0, l;
  for (l = 0; l < s; l++)
    (n && e[l] !== r[l] || !n && toInt(e[l]) !== toInt(r[l])) && t++;
  return t + a;
}
function offset(e, r) {
  addFormatToken(e, 0, 0, function() {
    var n = this.utcOffset(), s = "+";
    return n < 0 && (n = -n, s = "-"), s + zeroFill(~~(n / 60), 2) + r + zeroFill(~~n % 60, 2);
  });
}
offset("Z", ":");
offset("ZZ", "");
addRegexToken("Z", matchShortOffset);
addRegexToken("ZZ", matchShortOffset);
addParseToken(["Z", "ZZ"], function(e, r, n) {
  n._useUTC = !0, n._tzm = offsetFromString(matchShortOffset, e);
});
var chunkOffset = /([\+\-]|\d\d)/gi;
function offsetFromString(e, r) {
  var n = (r || "").match(e), s, a, t;
  return n === null ? null : (s = n[n.length - 1] || [], a = (s + "").match(chunkOffset) || ["-", 0, 0], t = +(a[1] * 60) + toInt(a[2]), t === 0 ? 0 : a[0] === "+" ? t : -t);
}
function cloneWithOffset(e, r) {
  var n, s;
  return r._isUTC ? (n = r.clone(), s = (isMoment(e) || isDate(e) ? e.valueOf() : createLocal(e).valueOf()) - n.valueOf(), n._d.setTime(n._d.valueOf() + s), hooks.updateOffset(n, !1), n) : createLocal(e).local();
}
function getDateOffset(e) {
  return -Math.round(e._d.getTimezoneOffset());
}
hooks.updateOffset = function() {
};
function getSetOffset(e, r, n) {
  var s = this._offset || 0, a;
  if (!this.isValid())
    return e != null ? this : NaN;
  if (e != null) {
    if (typeof e == "string") {
      if (e = offsetFromString(matchShortOffset, e), e === null)
        return this;
    } else
      Math.abs(e) < 16 && !n && (e = e * 60);
    return !this._isUTC && r && (a = getDateOffset(this)), this._offset = e, this._isUTC = !0, a != null && this.add(a, "m"), s !== e && (!r || this._changeInProgress ? addSubtract(
      this,
      createDuration(e - s, "m"),
      1,
      !1
    ) : this._changeInProgress || (this._changeInProgress = !0, hooks.updateOffset(this, !0), this._changeInProgress = null)), this;
  } else
    return this._isUTC ? s : getDateOffset(this);
}
function getSetZone(e, r) {
  return e != null ? (typeof e != "string" && (e = -e), this.utcOffset(e, r), this) : -this.utcOffset();
}
function setOffsetToUTC(e) {
  return this.utcOffset(0, e);
}
function setOffsetToLocal(e) {
  return this._isUTC && (this.utcOffset(0, e), this._isUTC = !1, e && this.subtract(getDateOffset(this), "m")), this;
}
function setOffsetToParsedOffset() {
  if (this._tzm != null)
    this.utcOffset(this._tzm, !1, !0);
  else if (typeof this._i == "string") {
    var e = offsetFromString(matchOffset, this._i);
    e != null ? this.utcOffset(e) : this.utcOffset(0, !0);
  }
  return this;
}
function hasAlignedHourOffset(e) {
  return this.isValid() ? (e = e ? createLocal(e).utcOffset() : 0, (this.utcOffset() - e) % 60 === 0) : !1;
}
function isDaylightSavingTime() {
  return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
}
function isDaylightSavingTimeShifted() {
  if (!isUndefined(this._isDSTShifted))
    return this._isDSTShifted;
  var e = {}, r;
  return copyConfig(e, this), e = prepareConfig(e), e._a ? (r = e._isUTC ? createUTC(e._a) : createLocal(e._a), this._isDSTShifted = this.isValid() && compareArrays(e._a, r.toArray()) > 0) : this._isDSTShifted = !1, this._isDSTShifted;
}
function isLocal() {
  return this.isValid() ? !this._isUTC : !1;
}
function isUtcOffset() {
  return this.isValid() ? this._isUTC : !1;
}
function isUtc() {
  return this.isValid() ? this._isUTC && this._offset === 0 : !1;
}
var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
function createDuration(e, r) {
  var n = e, s = null, a, t, l;
  return isDuration(e) ? n = {
    ms: e._milliseconds,
    d: e._days,
    M: e._months
  } : isNumber(e) || !isNaN(+e) ? (n = {}, r ? n[r] = +e : n.milliseconds = +e) : (s = aspNetRegex.exec(e)) ? (a = s[1] === "-" ? -1 : 1, n = {
    y: 0,
    d: toInt(s[DATE]) * a,
    h: toInt(s[HOUR]) * a,
    m: toInt(s[MINUTE]) * a,
    s: toInt(s[SECOND]) * a,
    ms: toInt(absRound(s[MILLISECOND] * 1e3)) * a
    // the millisecond decimal point is included in the match
  }) : (s = isoRegex.exec(e)) ? (a = s[1] === "-" ? -1 : 1, n = {
    y: parseIso(s[2], a),
    M: parseIso(s[3], a),
    w: parseIso(s[4], a),
    d: parseIso(s[5], a),
    h: parseIso(s[6], a),
    m: parseIso(s[7], a),
    s: parseIso(s[8], a)
  }) : n == null ? n = {} : typeof n == "object" && ("from" in n || "to" in n) && (l = momentsDifference(
    createLocal(n.from),
    createLocal(n.to)
  ), n = {}, n.ms = l.milliseconds, n.M = l.months), t = new Duration(n), isDuration(e) && hasOwnProp(e, "_locale") && (t._locale = e._locale), isDuration(e) && hasOwnProp(e, "_isValid") && (t._isValid = e._isValid), t;
}
createDuration.fn = Duration.prototype;
createDuration.invalid = createInvalid$1;
function parseIso(e, r) {
  var n = e && parseFloat(e.replace(",", "."));
  return (isNaN(n) ? 0 : n) * r;
}
function positiveMomentsDifference(e, r) {
  var n = {};
  return n.months = r.month() - e.month() + (r.year() - e.year()) * 12, e.clone().add(n.months, "M").isAfter(r) && --n.months, n.milliseconds = +r - +e.clone().add(n.months, "M"), n;
}
function momentsDifference(e, r) {
  var n;
  return e.isValid() && r.isValid() ? (r = cloneWithOffset(r, e), e.isBefore(r) ? n = positiveMomentsDifference(e, r) : (n = positiveMomentsDifference(r, e), n.milliseconds = -n.milliseconds, n.months = -n.months), n) : { milliseconds: 0, months: 0 };
}
function createAdder(e, r) {
  return function(n, s) {
    var a, t;
    return s !== null && !isNaN(+s) && (deprecateSimple(
      r,
      "moment()." + r + "(period, number) is deprecated. Please use moment()." + r + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
    ), t = n, n = s, s = t), a = createDuration(n, s), addSubtract(this, a, e), this;
  };
}
function addSubtract(e, r, n, s) {
  var a = r._milliseconds, t = absRound(r._days), l = absRound(r._months);
  e.isValid() && (s = s ?? !0, l && setMonth(e, get(e, "Month") + l * n), t && set$1(e, "Date", get(e, "Date") + t * n), a && e._d.setTime(e._d.valueOf() + a * n), s && hooks.updateOffset(e, t || l));
}
var add = createAdder(1, "add"), subtract = createAdder(-1, "subtract");
function isString(e) {
  return typeof e == "string" || e instanceof String;
}
function isMomentInput(e) {
  return isMoment(e) || isDate(e) || isString(e) || isNumber(e) || isNumberOrStringArray(e) || isMomentInputObject(e) || e === null || e === void 0;
}
function isMomentInputObject(e) {
  var r = isObject(e) && !isObjectEmpty(e), n = !1, s = [
    "years",
    "year",
    "y",
    "months",
    "month",
    "M",
    "days",
    "day",
    "d",
    "dates",
    "date",
    "D",
    "hours",
    "hour",
    "h",
    "minutes",
    "minute",
    "m",
    "seconds",
    "second",
    "s",
    "milliseconds",
    "millisecond",
    "ms"
  ], a, t, l = s.length;
  for (a = 0; a < l; a += 1)
    t = s[a], n = n || hasOwnProp(e, t);
  return r && n;
}
function isNumberOrStringArray(e) {
  var r = isArray(e), n = !1;
  return r && (n = e.filter(function(s) {
    return !isNumber(s) && isString(e);
  }).length === 0), r && n;
}
function isCalendarSpec(e) {
  var r = isObject(e) && !isObjectEmpty(e), n = !1, s = [
    "sameDay",
    "nextDay",
    "lastDay",
    "nextWeek",
    "lastWeek",
    "sameElse"
  ], a, t;
  for (a = 0; a < s.length; a += 1)
    t = s[a], n = n || hasOwnProp(e, t);
  return r && n;
}
function getCalendarFormat(e, r) {
  var n = e.diff(r, "days", !0);
  return n < -6 ? "sameElse" : n < -1 ? "lastWeek" : n < 0 ? "lastDay" : n < 1 ? "sameDay" : n < 2 ? "nextDay" : n < 7 ? "nextWeek" : "sameElse";
}
function calendar$1(e, r) {
  arguments.length === 1 && (arguments[0] ? isMomentInput(arguments[0]) ? (e = arguments[0], r = void 0) : isCalendarSpec(arguments[0]) && (r = arguments[0], e = void 0) : (e = void 0, r = void 0));
  var n = e || createLocal(), s = cloneWithOffset(n, this).startOf("day"), a = hooks.calendarFormat(this, s) || "sameElse", t = r && (isFunction(r[a]) ? r[a].call(this, n) : r[a]);
  return this.format(
    t || this.localeData().calendar(a, this, createLocal(n))
  );
}
function clone() {
  return new Moment(this);
}
function isAfter(e, r) {
  var n = isMoment(e) ? e : createLocal(e);
  return this.isValid() && n.isValid() ? (r = normalizeUnits(r) || "millisecond", r === "millisecond" ? this.valueOf() > n.valueOf() : n.valueOf() < this.clone().startOf(r).valueOf()) : !1;
}
function isBefore(e, r) {
  var n = isMoment(e) ? e : createLocal(e);
  return this.isValid() && n.isValid() ? (r = normalizeUnits(r) || "millisecond", r === "millisecond" ? this.valueOf() < n.valueOf() : this.clone().endOf(r).valueOf() < n.valueOf()) : !1;
}
function isBetween(e, r, n, s) {
  var a = isMoment(e) ? e : createLocal(e), t = isMoment(r) ? r : createLocal(r);
  return this.isValid() && a.isValid() && t.isValid() ? (s = s || "()", (s[0] === "(" ? this.isAfter(a, n) : !this.isBefore(a, n)) && (s[1] === ")" ? this.isBefore(t, n) : !this.isAfter(t, n))) : !1;
}
function isSame(e, r) {
  var n = isMoment(e) ? e : createLocal(e), s;
  return this.isValid() && n.isValid() ? (r = normalizeUnits(r) || "millisecond", r === "millisecond" ? this.valueOf() === n.valueOf() : (s = n.valueOf(), this.clone().startOf(r).valueOf() <= s && s <= this.clone().endOf(r).valueOf())) : !1;
}
function isSameOrAfter(e, r) {
  return this.isSame(e, r) || this.isAfter(e, r);
}
function isSameOrBefore(e, r) {
  return this.isSame(e, r) || this.isBefore(e, r);
}
function diff(e, r, n) {
  var s, a, t;
  if (!this.isValid())
    return NaN;
  if (s = cloneWithOffset(e, this), !s.isValid())
    return NaN;
  switch (a = (s.utcOffset() - this.utcOffset()) * 6e4, r = normalizeUnits(r), r) {
    case "year":
      t = monthDiff(this, s) / 12;
      break;
    case "month":
      t = monthDiff(this, s);
      break;
    case "quarter":
      t = monthDiff(this, s) / 3;
      break;
    case "second":
      t = (this - s) / 1e3;
      break;
    case "minute":
      t = (this - s) / 6e4;
      break;
    case "hour":
      t = (this - s) / 36e5;
      break;
    case "day":
      t = (this - s - a) / 864e5;
      break;
    case "week":
      t = (this - s - a) / 6048e5;
      break;
    default:
      t = this - s;
  }
  return n ? t : absFloor(t);
}
function monthDiff(e, r) {
  if (e.date() < r.date())
    return -monthDiff(r, e);
  var n = (r.year() - e.year()) * 12 + (r.month() - e.month()), s = e.clone().add(n, "months"), a, t;
  return r - s < 0 ? (a = e.clone().add(n - 1, "months"), t = (r - s) / (s - a)) : (a = e.clone().add(n + 1, "months"), t = (r - s) / (a - s)), -(n + t) || 0;
}
hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
function toString() {
  return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
}
function toISOString(e) {
  if (!this.isValid())
    return null;
  var r = e !== !0, n = r ? this.clone().utc() : this;
  return n.year() < 0 || n.year() > 9999 ? formatMoment(
    n,
    r ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
  ) : isFunction(Date.prototype.toISOString) ? r ? this.toDate().toISOString() : new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(n, "Z")) : formatMoment(
    n,
    r ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
  );
}
function inspect() {
  if (!this.isValid())
    return "moment.invalid(/* " + this._i + " */)";
  var e = "moment", r = "", n, s, a, t;
  return this.isLocal() || (e = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone", r = "Z"), n = "[" + e + '("]', s = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY", a = "-MM-DD[T]HH:mm:ss.SSS", t = r + '[")]', this.format(n + s + a + t);
}
function format(e) {
  e || (e = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat);
  var r = formatMoment(this, e);
  return this.localeData().postformat(r);
}
function from(e, r) {
  return this.isValid() && (isMoment(e) && e.isValid() || createLocal(e).isValid()) ? createDuration({ to: this, from: e }).locale(this.locale()).humanize(!r) : this.localeData().invalidDate();
}
function fromNow(e) {
  return this.from(createLocal(), e);
}
function to(e, r) {
  return this.isValid() && (isMoment(e) && e.isValid() || createLocal(e).isValid()) ? createDuration({ from: this, to: e }).locale(this.locale()).humanize(!r) : this.localeData().invalidDate();
}
function toNow(e) {
  return this.to(createLocal(), e);
}
function locale(e) {
  var r;
  return e === void 0 ? this._locale._abbr : (r = getLocale(e), r != null && (this._locale = r), this);
}
var lang = deprecate(
  "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
  function(e) {
    return e === void 0 ? this.localeData() : this.locale(e);
  }
);
function localeData() {
  return this._locale;
}
var MS_PER_SECOND = 1e3, MS_PER_MINUTE = 60 * MS_PER_SECOND, MS_PER_HOUR = 60 * MS_PER_MINUTE, MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
function mod$1(e, r) {
  return (e % r + r) % r;
}
function localStartOfDate(e, r, n) {
  return e < 100 && e >= 0 ? new Date(e + 400, r, n) - MS_PER_400_YEARS : new Date(e, r, n).valueOf();
}
function utcStartOfDate(e, r, n) {
  return e < 100 && e >= 0 ? Date.UTC(e + 400, r, n) - MS_PER_400_YEARS : Date.UTC(e, r, n);
}
function startOf(e) {
  var r, n;
  if (e = normalizeUnits(e), e === void 0 || e === "millisecond" || !this.isValid())
    return this;
  switch (n = this._isUTC ? utcStartOfDate : localStartOfDate, e) {
    case "year":
      r = n(this.year(), 0, 1);
      break;
    case "quarter":
      r = n(
        this.year(),
        this.month() - this.month() % 3,
        1
      );
      break;
    case "month":
      r = n(this.year(), this.month(), 1);
      break;
    case "week":
      r = n(
        this.year(),
        this.month(),
        this.date() - this.weekday()
      );
      break;
    case "isoWeek":
      r = n(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1)
      );
      break;
    case "day":
    case "date":
      r = n(this.year(), this.month(), this.date());
      break;
    case "hour":
      r = this._d.valueOf(), r -= mod$1(
        r + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      );
      break;
    case "minute":
      r = this._d.valueOf(), r -= mod$1(r, MS_PER_MINUTE);
      break;
    case "second":
      r = this._d.valueOf(), r -= mod$1(r, MS_PER_SECOND);
      break;
  }
  return this._d.setTime(r), hooks.updateOffset(this, !0), this;
}
function endOf(e) {
  var r, n;
  if (e = normalizeUnits(e), e === void 0 || e === "millisecond" || !this.isValid())
    return this;
  switch (n = this._isUTC ? utcStartOfDate : localStartOfDate, e) {
    case "year":
      r = n(this.year() + 1, 0, 1) - 1;
      break;
    case "quarter":
      r = n(
        this.year(),
        this.month() - this.month() % 3 + 3,
        1
      ) - 1;
      break;
    case "month":
      r = n(this.year(), this.month() + 1, 1) - 1;
      break;
    case "week":
      r = n(
        this.year(),
        this.month(),
        this.date() - this.weekday() + 7
      ) - 1;
      break;
    case "isoWeek":
      r = n(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1) + 7
      ) - 1;
      break;
    case "day":
    case "date":
      r = n(this.year(), this.month(), this.date() + 1) - 1;
      break;
    case "hour":
      r = this._d.valueOf(), r += MS_PER_HOUR - mod$1(
        r + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      ) - 1;
      break;
    case "minute":
      r = this._d.valueOf(), r += MS_PER_MINUTE - mod$1(r, MS_PER_MINUTE) - 1;
      break;
    case "second":
      r = this._d.valueOf(), r += MS_PER_SECOND - mod$1(r, MS_PER_SECOND) - 1;
      break;
  }
  return this._d.setTime(r), hooks.updateOffset(this, !0), this;
}
function valueOf() {
  return this._d.valueOf() - (this._offset || 0) * 6e4;
}
function unix() {
  return Math.floor(this.valueOf() / 1e3);
}
function toDate() {
  return new Date(this.valueOf());
}
function toArray() {
  var e = this;
  return [
    e.year(),
    e.month(),
    e.date(),
    e.hour(),
    e.minute(),
    e.second(),
    e.millisecond()
  ];
}
function toObject() {
  var e = this;
  return {
    years: e.year(),
    months: e.month(),
    date: e.date(),
    hours: e.hours(),
    minutes: e.minutes(),
    seconds: e.seconds(),
    milliseconds: e.milliseconds()
  };
}
function toJSON() {
  return this.isValid() ? this.toISOString() : null;
}
function isValid$2() {
  return isValid(this);
}
function parsingFlags() {
  return extend({}, getParsingFlags(this));
}
function invalidAt() {
  return getParsingFlags(this).overflow;
}
function creationData() {
  return {
    input: this._i,
    format: this._f,
    locale: this._locale,
    isUTC: this._isUTC,
    strict: this._strict
  };
}
addFormatToken("N", 0, 0, "eraAbbr");
addFormatToken("NN", 0, 0, "eraAbbr");
addFormatToken("NNN", 0, 0, "eraAbbr");
addFormatToken("NNNN", 0, 0, "eraName");
addFormatToken("NNNNN", 0, 0, "eraNarrow");
addFormatToken("y", ["y", 1], "yo", "eraYear");
addFormatToken("y", ["yy", 2], 0, "eraYear");
addFormatToken("y", ["yyy", 3], 0, "eraYear");
addFormatToken("y", ["yyyy", 4], 0, "eraYear");
addRegexToken("N", matchEraAbbr);
addRegexToken("NN", matchEraAbbr);
addRegexToken("NNN", matchEraAbbr);
addRegexToken("NNNN", matchEraName);
addRegexToken("NNNNN", matchEraNarrow);
addParseToken(
  ["N", "NN", "NNN", "NNNN", "NNNNN"],
  function(e, r, n, s) {
    var a = n._locale.erasParse(e, s, n._strict);
    a ? getParsingFlags(n).era = a : getParsingFlags(n).invalidEra = e;
  }
);
addRegexToken("y", matchUnsigned);
addRegexToken("yy", matchUnsigned);
addRegexToken("yyy", matchUnsigned);
addRegexToken("yyyy", matchUnsigned);
addRegexToken("yo", matchEraYearOrdinal);
addParseToken(["y", "yy", "yyy", "yyyy"], YEAR);
addParseToken(["yo"], function(e, r, n, s) {
  var a;
  n._locale._eraYearOrdinalRegex && (a = e.match(n._locale._eraYearOrdinalRegex)), n._locale.eraYearOrdinalParse ? r[YEAR] = n._locale.eraYearOrdinalParse(e, a) : r[YEAR] = parseInt(e, 10);
});
function localeEras(e, r) {
  var n, s, a, t = this._eras || getLocale("en")._eras;
  for (n = 0, s = t.length; n < s; ++n) {
    switch (typeof t[n].since) {
      case "string":
        a = hooks(t[n].since).startOf("day"), t[n].since = a.valueOf();
        break;
    }
    switch (typeof t[n].until) {
      case "undefined":
        t[n].until = 1 / 0;
        break;
      case "string":
        a = hooks(t[n].until).startOf("day").valueOf(), t[n].until = a.valueOf();
        break;
    }
  }
  return t;
}
function localeErasParse(e, r, n) {
  var s, a, t = this.eras(), l, o, c;
  for (e = e.toUpperCase(), s = 0, a = t.length; s < a; ++s)
    if (l = t[s].name.toUpperCase(), o = t[s].abbr.toUpperCase(), c = t[s].narrow.toUpperCase(), n)
      switch (r) {
        case "N":
        case "NN":
        case "NNN":
          if (o === e)
            return t[s];
          break;
        case "NNNN":
          if (l === e)
            return t[s];
          break;
        case "NNNNN":
          if (c === e)
            return t[s];
          break;
      }
    else if ([l, o, c].indexOf(e) >= 0)
      return t[s];
}
function localeErasConvertYear(e, r) {
  var n = e.since <= e.until ? 1 : -1;
  return r === void 0 ? hooks(e.since).year() : hooks(e.since).year() + (r - e.offset) * n;
}
function getEraName() {
  var e, r, n, s = this.localeData().eras();
  for (e = 0, r = s.length; e < r; ++e)
    if (n = this.clone().startOf("day").valueOf(), s[e].since <= n && n <= s[e].until || s[e].until <= n && n <= s[e].since)
      return s[e].name;
  return "";
}
function getEraNarrow() {
  var e, r, n, s = this.localeData().eras();
  for (e = 0, r = s.length; e < r; ++e)
    if (n = this.clone().startOf("day").valueOf(), s[e].since <= n && n <= s[e].until || s[e].until <= n && n <= s[e].since)
      return s[e].narrow;
  return "";
}
function getEraAbbr() {
  var e, r, n, s = this.localeData().eras();
  for (e = 0, r = s.length; e < r; ++e)
    if (n = this.clone().startOf("day").valueOf(), s[e].since <= n && n <= s[e].until || s[e].until <= n && n <= s[e].since)
      return s[e].abbr;
  return "";
}
function getEraYear() {
  var e, r, n, s, a = this.localeData().eras();
  for (e = 0, r = a.length; e < r; ++e)
    if (n = a[e].since <= a[e].until ? 1 : -1, s = this.clone().startOf("day").valueOf(), a[e].since <= s && s <= a[e].until || a[e].until <= s && s <= a[e].since)
      return (this.year() - hooks(a[e].since).year()) * n + a[e].offset;
  return this.year();
}
function erasNameRegex(e) {
  return hasOwnProp(this, "_erasNameRegex") || computeErasParse.call(this), e ? this._erasNameRegex : this._erasRegex;
}
function erasAbbrRegex(e) {
  return hasOwnProp(this, "_erasAbbrRegex") || computeErasParse.call(this), e ? this._erasAbbrRegex : this._erasRegex;
}
function erasNarrowRegex(e) {
  return hasOwnProp(this, "_erasNarrowRegex") || computeErasParse.call(this), e ? this._erasNarrowRegex : this._erasRegex;
}
function matchEraAbbr(e, r) {
  return r.erasAbbrRegex(e);
}
function matchEraName(e, r) {
  return r.erasNameRegex(e);
}
function matchEraNarrow(e, r) {
  return r.erasNarrowRegex(e);
}
function matchEraYearOrdinal(e, r) {
  return r._eraYearOrdinalRegex || matchUnsigned;
}
function computeErasParse() {
  var e = [], r = [], n = [], s = [], a, t, l, o, c, _ = this.eras();
  for (a = 0, t = _.length; a < t; ++a)
    l = regexEscape(_[a].name), o = regexEscape(_[a].abbr), c = regexEscape(_[a].narrow), r.push(l), e.push(o), n.push(c), s.push(l), s.push(o), s.push(c);
  this._erasRegex = new RegExp("^(" + s.join("|") + ")", "i"), this._erasNameRegex = new RegExp("^(" + r.join("|") + ")", "i"), this._erasAbbrRegex = new RegExp("^(" + e.join("|") + ")", "i"), this._erasNarrowRegex = new RegExp(
    "^(" + n.join("|") + ")",
    "i"
  );
}
addFormatToken(0, ["gg", 2], 0, function() {
  return this.weekYear() % 100;
});
addFormatToken(0, ["GG", 2], 0, function() {
  return this.isoWeekYear() % 100;
});
function addWeekYearFormatToken(e, r) {
  addFormatToken(0, [e, e.length], 0, r);
}
addWeekYearFormatToken("gggg", "weekYear");
addWeekYearFormatToken("ggggg", "weekYear");
addWeekYearFormatToken("GGGG", "isoWeekYear");
addWeekYearFormatToken("GGGGG", "isoWeekYear");
addRegexToken("G", matchSigned);
addRegexToken("g", matchSigned);
addRegexToken("GG", match1to2, match2);
addRegexToken("gg", match1to2, match2);
addRegexToken("GGGG", match1to4, match4);
addRegexToken("gggg", match1to4, match4);
addRegexToken("GGGGG", match1to6, match6);
addRegexToken("ggggg", match1to6, match6);
addWeekParseToken(
  ["gggg", "ggggg", "GGGG", "GGGGG"],
  function(e, r, n, s) {
    r[s.substr(0, 2)] = toInt(e);
  }
);
addWeekParseToken(["gg", "GG"], function(e, r, n, s) {
  r[s] = hooks.parseTwoDigitYear(e);
});
function getSetWeekYear(e) {
  return getSetWeekYearHelper.call(
    this,
    e,
    this.week(),
    this.weekday() + this.localeData()._week.dow,
    this.localeData()._week.dow,
    this.localeData()._week.doy
  );
}
function getSetISOWeekYear(e) {
  return getSetWeekYearHelper.call(
    this,
    e,
    this.isoWeek(),
    this.isoWeekday(),
    1,
    4
  );
}
function getISOWeeksInYear() {
  return weeksInYear(this.year(), 1, 4);
}
function getISOWeeksInISOWeekYear() {
  return weeksInYear(this.isoWeekYear(), 1, 4);
}
function getWeeksInYear() {
  var e = this.localeData()._week;
  return weeksInYear(this.year(), e.dow, e.doy);
}
function getWeeksInWeekYear() {
  var e = this.localeData()._week;
  return weeksInYear(this.weekYear(), e.dow, e.doy);
}
function getSetWeekYearHelper(e, r, n, s, a) {
  var t;
  return e == null ? weekOfYear(this, s, a).year : (t = weeksInYear(e, s, a), r > t && (r = t), setWeekAll.call(this, e, r, n, s, a));
}
function setWeekAll(e, r, n, s, a) {
  var t = dayOfYearFromWeeks(e, r, n, s, a), l = createUTCDate(t.year, 0, t.dayOfYear);
  return this.year(l.getUTCFullYear()), this.month(l.getUTCMonth()), this.date(l.getUTCDate()), this;
}
addFormatToken("Q", 0, "Qo", "quarter");
addRegexToken("Q", match1);
addParseToken("Q", function(e, r) {
  r[MONTH] = (toInt(e) - 1) * 3;
});
function getSetQuarter(e) {
  return e == null ? Math.ceil((this.month() + 1) / 3) : this.month((e - 1) * 3 + this.month() % 3);
}
addFormatToken("D", ["DD", 2], "Do", "date");
addRegexToken("D", match1to2, match1to2NoLeadingZero);
addRegexToken("DD", match1to2, match2);
addRegexToken("Do", function(e, r) {
  return e ? r._dayOfMonthOrdinalParse || r._ordinalParse : r._dayOfMonthOrdinalParseLenient;
});
addParseToken(["D", "DD"], DATE);
addParseToken("Do", function(e, r) {
  r[DATE] = toInt(e.match(match1to2)[0]);
});
var getSetDayOfMonth = makeGetSet("Date", !0);
addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
addRegexToken("DDD", match1to3);
addRegexToken("DDDD", match3);
addParseToken(["DDD", "DDDD"], function(e, r, n) {
  n._dayOfYear = toInt(e);
});
function getSetDayOfYear(e) {
  var r = Math.round(
    (this.clone().startOf("day") - this.clone().startOf("year")) / 864e5
  ) + 1;
  return e == null ? r : this.add(e - r, "d");
}
addFormatToken("m", ["mm", 2], 0, "minute");
addRegexToken("m", match1to2, match1to2HasZero);
addRegexToken("mm", match1to2, match2);
addParseToken(["m", "mm"], MINUTE);
var getSetMinute = makeGetSet("Minutes", !1);
addFormatToken("s", ["ss", 2], 0, "second");
addRegexToken("s", match1to2, match1to2HasZero);
addRegexToken("ss", match1to2, match2);
addParseToken(["s", "ss"], SECOND);
var getSetSecond = makeGetSet("Seconds", !1);
addFormatToken("S", 0, 0, function() {
  return ~~(this.millisecond() / 100);
});
addFormatToken(0, ["SS", 2], 0, function() {
  return ~~(this.millisecond() / 10);
});
addFormatToken(0, ["SSS", 3], 0, "millisecond");
addFormatToken(0, ["SSSS", 4], 0, function() {
  return this.millisecond() * 10;
});
addFormatToken(0, ["SSSSS", 5], 0, function() {
  return this.millisecond() * 100;
});
addFormatToken(0, ["SSSSSS", 6], 0, function() {
  return this.millisecond() * 1e3;
});
addFormatToken(0, ["SSSSSSS", 7], 0, function() {
  return this.millisecond() * 1e4;
});
addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
  return this.millisecond() * 1e5;
});
addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
  return this.millisecond() * 1e6;
});
addRegexToken("S", match1to3, match1);
addRegexToken("SS", match1to3, match2);
addRegexToken("SSS", match1to3, match3);
var token, getSetMillisecond;
for (token = "SSSS"; token.length <= 9; token += "S")
  addRegexToken(token, matchUnsigned);
function parseMs(e, r) {
  r[MILLISECOND] = toInt(("0." + e) * 1e3);
}
for (token = "S"; token.length <= 9; token += "S")
  addParseToken(token, parseMs);
getSetMillisecond = makeGetSet("Milliseconds", !1);
addFormatToken("z", 0, 0, "zoneAbbr");
addFormatToken("zz", 0, 0, "zoneName");
function getZoneAbbr() {
  return this._isUTC ? "UTC" : "";
}
function getZoneName() {
  return this._isUTC ? "Coordinated Universal Time" : "";
}
var proto = Moment.prototype;
proto.add = add;
proto.calendar = calendar$1;
proto.clone = clone;
proto.diff = diff;
proto.endOf = endOf;
proto.format = format;
proto.from = from;
proto.fromNow = fromNow;
proto.to = to;
proto.toNow = toNow;
proto.get = stringGet;
proto.invalidAt = invalidAt;
proto.isAfter = isAfter;
proto.isBefore = isBefore;
proto.isBetween = isBetween;
proto.isSame = isSame;
proto.isSameOrAfter = isSameOrAfter;
proto.isSameOrBefore = isSameOrBefore;
proto.isValid = isValid$2;
proto.lang = lang;
proto.locale = locale;
proto.localeData = localeData;
proto.max = prototypeMax;
proto.min = prototypeMin;
proto.parsingFlags = parsingFlags;
proto.set = stringSet;
proto.startOf = startOf;
proto.subtract = subtract;
proto.toArray = toArray;
proto.toObject = toObject;
proto.toDate = toDate;
proto.toISOString = toISOString;
proto.inspect = inspect;
typeof Symbol < "u" && Symbol.for != null && (proto[Symbol.for("nodejs.util.inspect.custom")] = function() {
  return "Moment<" + this.format() + ">";
});
proto.toJSON = toJSON;
proto.toString = toString;
proto.unix = unix;
proto.valueOf = valueOf;
proto.creationData = creationData;
proto.eraName = getEraName;
proto.eraNarrow = getEraNarrow;
proto.eraAbbr = getEraAbbr;
proto.eraYear = getEraYear;
proto.year = getSetYear;
proto.isLeapYear = getIsLeapYear;
proto.weekYear = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;
proto.quarter = proto.quarters = getSetQuarter;
proto.month = getSetMonth;
proto.daysInMonth = getDaysInMonth;
proto.week = proto.weeks = getSetWeek;
proto.isoWeek = proto.isoWeeks = getSetISOWeek;
proto.weeksInYear = getWeeksInYear;
proto.weeksInWeekYear = getWeeksInWeekYear;
proto.isoWeeksInYear = getISOWeeksInYear;
proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
proto.date = getSetDayOfMonth;
proto.day = proto.days = getSetDayOfWeek;
proto.weekday = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear = getSetDayOfYear;
proto.hour = proto.hours = getSetHour;
proto.minute = proto.minutes = getSetMinute;
proto.second = proto.seconds = getSetSecond;
proto.millisecond = proto.milliseconds = getSetMillisecond;
proto.utcOffset = getSetOffset;
proto.utc = setOffsetToUTC;
proto.local = setOffsetToLocal;
proto.parseZone = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST = isDaylightSavingTime;
proto.isLocal = isLocal;
proto.isUtcOffset = isUtcOffset;
proto.isUtc = isUtc;
proto.isUTC = isUtc;
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;
proto.dates = deprecate(
  "dates accessor is deprecated. Use date instead.",
  getSetDayOfMonth
);
proto.months = deprecate(
  "months accessor is deprecated. Use month instead",
  getSetMonth
);
proto.years = deprecate(
  "years accessor is deprecated. Use year instead",
  getSetYear
);
proto.zone = deprecate(
  "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
  getSetZone
);
proto.isDSTShifted = deprecate(
  "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
  isDaylightSavingTimeShifted
);
function createUnix(e) {
  return createLocal(e * 1e3);
}
function createInZone() {
  return createLocal.apply(null, arguments).parseZone();
}
function preParsePostFormat(e) {
  return e;
}
var proto$1 = Locale.prototype;
proto$1.calendar = calendar;
proto$1.longDateFormat = longDateFormat;
proto$1.invalidDate = invalidDate;
proto$1.ordinal = ordinal;
proto$1.preparse = preParsePostFormat;
proto$1.postformat = preParsePostFormat;
proto$1.relativeTime = relativeTime;
proto$1.pastFuture = pastFuture;
proto$1.set = set;
proto$1.eras = localeEras;
proto$1.erasParse = localeErasParse;
proto$1.erasConvertYear = localeErasConvertYear;
proto$1.erasAbbrRegex = erasAbbrRegex;
proto$1.erasNameRegex = erasNameRegex;
proto$1.erasNarrowRegex = erasNarrowRegex;
proto$1.months = localeMonths;
proto$1.monthsShort = localeMonthsShort;
proto$1.monthsParse = localeMonthsParse;
proto$1.monthsRegex = monthsRegex;
proto$1.monthsShortRegex = monthsShortRegex;
proto$1.week = localeWeek;
proto$1.firstDayOfYear = localeFirstDayOfYear;
proto$1.firstDayOfWeek = localeFirstDayOfWeek;
proto$1.weekdays = localeWeekdays;
proto$1.weekdaysMin = localeWeekdaysMin;
proto$1.weekdaysShort = localeWeekdaysShort;
proto$1.weekdaysParse = localeWeekdaysParse;
proto$1.weekdaysRegex = weekdaysRegex;
proto$1.weekdaysShortRegex = weekdaysShortRegex;
proto$1.weekdaysMinRegex = weekdaysMinRegex;
proto$1.isPM = localeIsPM;
proto$1.meridiem = localeMeridiem;
function get$1(e, r, n, s) {
  var a = getLocale(), t = createUTC().set(s, r);
  return a[n](t, e);
}
function listMonthsImpl(e, r, n) {
  if (isNumber(e) && (r = e, e = void 0), e = e || "", r != null)
    return get$1(e, r, n, "month");
  var s, a = [];
  for (s = 0; s < 12; s++)
    a[s] = get$1(e, s, n, "month");
  return a;
}
function listWeekdaysImpl(e, r, n, s) {
  typeof e == "boolean" ? (isNumber(r) && (n = r, r = void 0), r = r || "") : (r = e, n = r, e = !1, isNumber(r) && (n = r, r = void 0), r = r || "");
  var a = getLocale(), t = e ? a._week.dow : 0, l, o = [];
  if (n != null)
    return get$1(r, (n + t) % 7, s, "day");
  for (l = 0; l < 7; l++)
    o[l] = get$1(r, (l + t) % 7, s, "day");
  return o;
}
function listMonths(e, r) {
  return listMonthsImpl(e, r, "months");
}
function listMonthsShort(e, r) {
  return listMonthsImpl(e, r, "monthsShort");
}
function listWeekdays(e, r, n) {
  return listWeekdaysImpl(e, r, n, "weekdays");
}
function listWeekdaysShort(e, r, n) {
  return listWeekdaysImpl(e, r, n, "weekdaysShort");
}
function listWeekdaysMin(e, r, n) {
  return listWeekdaysImpl(e, r, n, "weekdaysMin");
}
getSetGlobalLocale("en", {
  eras: [
    {
      since: "0001-01-01",
      until: 1 / 0,
      offset: 1,
      name: "Anno Domini",
      narrow: "AD",
      abbr: "AD"
    },
    {
      since: "0000-12-31",
      until: -1 / 0,
      offset: 1,
      name: "Before Christ",
      narrow: "BC",
      abbr: "BC"
    }
  ],
  dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
  ordinal: function(e) {
    var r = e % 10, n = toInt(e % 100 / 10) === 1 ? "th" : r === 1 ? "st" : r === 2 ? "nd" : r === 3 ? "rd" : "th";
    return e + n;
  }
});
hooks.lang = deprecate(
  "moment.lang is deprecated. Use moment.locale instead.",
  getSetGlobalLocale
);
hooks.langData = deprecate(
  "moment.langData is deprecated. Use moment.localeData instead.",
  getLocale
);
var mathAbs = Math.abs;
function abs() {
  var e = this._data;
  return this._milliseconds = mathAbs(this._milliseconds), this._days = mathAbs(this._days), this._months = mathAbs(this._months), e.milliseconds = mathAbs(e.milliseconds), e.seconds = mathAbs(e.seconds), e.minutes = mathAbs(e.minutes), e.hours = mathAbs(e.hours), e.months = mathAbs(e.months), e.years = mathAbs(e.years), this;
}
function addSubtract$1(e, r, n, s) {
  var a = createDuration(r, n);
  return e._milliseconds += s * a._milliseconds, e._days += s * a._days, e._months += s * a._months, e._bubble();
}
function add$1(e, r) {
  return addSubtract$1(this, e, r, 1);
}
function subtract$1(e, r) {
  return addSubtract$1(this, e, r, -1);
}
function absCeil(e) {
  return e < 0 ? Math.floor(e) : Math.ceil(e);
}
function bubble() {
  var e = this._milliseconds, r = this._days, n = this._months, s = this._data, a, t, l, o, c;
  return e >= 0 && r >= 0 && n >= 0 || e <= 0 && r <= 0 && n <= 0 || (e += absCeil(monthsToDays(n) + r) * 864e5, r = 0, n = 0), s.milliseconds = e % 1e3, a = absFloor(e / 1e3), s.seconds = a % 60, t = absFloor(a / 60), s.minutes = t % 60, l = absFloor(t / 60), s.hours = l % 24, r += absFloor(l / 24), c = absFloor(daysToMonths(r)), n += c, r -= absCeil(monthsToDays(c)), o = absFloor(n / 12), n %= 12, s.days = r, s.months = n, s.years = o, this;
}
function daysToMonths(e) {
  return e * 4800 / 146097;
}
function monthsToDays(e) {
  return e * 146097 / 4800;
}
function as(e) {
  if (!this.isValid())
    return NaN;
  var r, n, s = this._milliseconds;
  if (e = normalizeUnits(e), e === "month" || e === "quarter" || e === "year")
    switch (r = this._days + s / 864e5, n = this._months + daysToMonths(r), e) {
      case "month":
        return n;
      case "quarter":
        return n / 3;
      case "year":
        return n / 12;
    }
  else
    switch (r = this._days + Math.round(monthsToDays(this._months)), e) {
      case "week":
        return r / 7 + s / 6048e5;
      case "day":
        return r + s / 864e5;
      case "hour":
        return r * 24 + s / 36e5;
      case "minute":
        return r * 1440 + s / 6e4;
      case "second":
        return r * 86400 + s / 1e3;
      case "millisecond":
        return Math.floor(r * 864e5) + s;
      default:
        throw new Error("Unknown unit " + e);
    }
}
function makeAs(e) {
  return function() {
    return this.as(e);
  };
}
var asMilliseconds = makeAs("ms"), asSeconds = makeAs("s"), asMinutes = makeAs("m"), asHours = makeAs("h"), asDays = makeAs("d"), asWeeks = makeAs("w"), asMonths = makeAs("M"), asQuarters = makeAs("Q"), asYears = makeAs("y"), valueOf$1 = asMilliseconds;
function clone$1() {
  return createDuration(this);
}
function get$2(e) {
  return e = normalizeUnits(e), this.isValid() ? this[e + "s"]() : NaN;
}
function makeGetter(e) {
  return function() {
    return this.isValid() ? this._data[e] : NaN;
  };
}
var milliseconds = makeGetter("milliseconds"), seconds = makeGetter("seconds"), minutes = makeGetter("minutes"), hours = makeGetter("hours"), days = makeGetter("days"), months = makeGetter("months"), years = makeGetter("years");
function weeks() {
  return absFloor(this.days() / 7);
}
var round = Math.round, thresholds = {
  ss: 44,
  // a few seconds to seconds
  s: 45,
  // seconds to minute
  m: 45,
  // minutes to hour
  h: 22,
  // hours to day
  d: 26,
  // days to month/week
  w: null,
  // weeks to month
  M: 11
  // months to year
};
function substituteTimeAgo(e, r, n, s, a) {
  return a.relativeTime(r || 1, !!n, e, s);
}
function relativeTime$1(e, r, n, s) {
  var a = createDuration(e).abs(), t = round(a.as("s")), l = round(a.as("m")), o = round(a.as("h")), c = round(a.as("d")), _ = round(a.as("M")), u = round(a.as("w")), y = round(a.as("y")), g = t <= n.ss && ["s", t] || t < n.s && ["ss", t] || l <= 1 && ["m"] || l < n.m && ["mm", l] || o <= 1 && ["h"] || o < n.h && ["hh", o] || c <= 1 && ["d"] || c < n.d && ["dd", c];
  return n.w != null && (g = g || u <= 1 && ["w"] || u < n.w && ["ww", u]), g = g || _ <= 1 && ["M"] || _ < n.M && ["MM", _] || y <= 1 && ["y"] || ["yy", y], g[2] = r, g[3] = +e > 0, g[4] = s, substituteTimeAgo.apply(null, g);
}
function getSetRelativeTimeRounding(e) {
  return e === void 0 ? round : typeof e == "function" ? (round = e, !0) : !1;
}
function getSetRelativeTimeThreshold(e, r) {
  return thresholds[e] === void 0 ? !1 : r === void 0 ? thresholds[e] : (thresholds[e] = r, e === "s" && (thresholds.ss = r - 1), !0);
}
function humanize(e, r) {
  if (!this.isValid())
    return this.localeData().invalidDate();
  var n = !1, s = thresholds, a, t;
  return typeof e == "object" && (r = e, e = !1), typeof e == "boolean" && (n = e), typeof r == "object" && (s = Object.assign({}, thresholds, r), r.s != null && r.ss == null && (s.ss = r.s - 1)), a = this.localeData(), t = relativeTime$1(this, !n, s, a), n && (t = a.pastFuture(+this, t)), a.postformat(t);
}
var abs$1 = Math.abs;
function sign(e) {
  return (e > 0) - (e < 0) || +e;
}
function toISOString$1() {
  if (!this.isValid())
    return this.localeData().invalidDate();
  var e = abs$1(this._milliseconds) / 1e3, r = abs$1(this._days), n = abs$1(this._months), s, a, t, l, o = this.asSeconds(), c, _, u, y;
  return o ? (s = absFloor(e / 60), a = absFloor(s / 60), e %= 60, s %= 60, t = absFloor(n / 12), n %= 12, l = e ? e.toFixed(3).replace(/\.?0+$/, "") : "", c = o < 0 ? "-" : "", _ = sign(this._months) !== sign(o) ? "-" : "", u = sign(this._days) !== sign(o) ? "-" : "", y = sign(this._milliseconds) !== sign(o) ? "-" : "", c + "P" + (t ? _ + t + "Y" : "") + (n ? _ + n + "M" : "") + (r ? u + r + "D" : "") + (a || s || e ? "T" : "") + (a ? y + a + "H" : "") + (s ? y + s + "M" : "") + (e ? y + l + "S" : "")) : "P0D";
}
var proto$2 = Duration.prototype;
proto$2.isValid = isValid$1;
proto$2.abs = abs;
proto$2.add = add$1;
proto$2.subtract = subtract$1;
proto$2.as = as;
proto$2.asMilliseconds = asMilliseconds;
proto$2.asSeconds = asSeconds;
proto$2.asMinutes = asMinutes;
proto$2.asHours = asHours;
proto$2.asDays = asDays;
proto$2.asWeeks = asWeeks;
proto$2.asMonths = asMonths;
proto$2.asQuarters = asQuarters;
proto$2.asYears = asYears;
proto$2.valueOf = valueOf$1;
proto$2._bubble = bubble;
proto$2.clone = clone$1;
proto$2.get = get$2;
proto$2.milliseconds = milliseconds;
proto$2.seconds = seconds;
proto$2.minutes = minutes;
proto$2.hours = hours;
proto$2.days = days;
proto$2.weeks = weeks;
proto$2.months = months;
proto$2.years = years;
proto$2.humanize = humanize;
proto$2.toISOString = toISOString$1;
proto$2.toString = toISOString$1;
proto$2.toJSON = toISOString$1;
proto$2.locale = locale;
proto$2.localeData = localeData;
proto$2.toIsoString = deprecate(
  "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
  toISOString$1
);
proto$2.lang = lang;
addFormatToken("X", 0, 0, "unix");
addFormatToken("x", 0, 0, "valueOf");
addRegexToken("x", matchSigned);
addRegexToken("X", matchTimestamp);
addParseToken("X", function(e, r, n) {
  n._d = new Date(parseFloat(e) * 1e3);
});
addParseToken("x", function(e, r, n) {
  n._d = new Date(toInt(e));
});
//! moment.js
hooks.version = "2.30.1";
setHookCallback(createLocal);
hooks.fn = proto;
hooks.min = min;
hooks.max = max;
hooks.now = now;
hooks.utc = createUTC;
hooks.unix = createUnix;
hooks.months = listMonths;
hooks.isDate = isDate;
hooks.locale = getSetGlobalLocale;
hooks.invalid = createInvalid;
hooks.duration = createDuration;
hooks.isMoment = isMoment;
hooks.weekdays = listWeekdays;
hooks.parseZone = createInZone;
hooks.localeData = getLocale;
hooks.isDuration = isDuration;
hooks.monthsShort = listMonthsShort;
hooks.weekdaysMin = listWeekdaysMin;
hooks.defineLocale = defineLocale;
hooks.updateLocale = updateLocale;
hooks.locales = listLocales;
hooks.weekdaysShort = listWeekdaysShort;
hooks.normalizeUnits = normalizeUnits;
hooks.relativeTimeRounding = getSetRelativeTimeRounding;
hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
hooks.calendarFormat = getCalendarFormat;
hooks.prototype = proto;
hooks.HTML5_FMT = {
  DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
  // <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
  // <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
  // <input type="datetime-local" step="0.001" />
  DATE: "YYYY-MM-DD",
  // <input type="date" />
  TIME: "HH:mm",
  // <input type="time" />
  TIME_SECONDS: "HH:mm:ss",
  // <input type="time" step="1" />
  TIME_MS: "HH:mm:ss.SSS",
  // <input type="time" step="0.001" />
  WEEK: "GGGG-[W]WW",
  // <input type="week" />
  MONTH: "YYYY-MM"
  // <input type="month" />
};
var screenfull = { exports: {} };
/*!
* screenfull
* v5.2.0 - 2021-11-03
* (c) Sindre Sorhus; MIT License
*/
(function(e) {
  (function() {
    var r = typeof window < "u" && typeof window.document < "u" ? window.document : {}, n = e.exports, s = function() {
      for (var l, o = [
        [
          "requestFullscreen",
          "exitFullscreen",
          "fullscreenElement",
          "fullscreenEnabled",
          "fullscreenchange",
          "fullscreenerror"
        ],
        // New WebKit
        [
          "webkitRequestFullscreen",
          "webkitExitFullscreen",
          "webkitFullscreenElement",
          "webkitFullscreenEnabled",
          "webkitfullscreenchange",
          "webkitfullscreenerror"
        ],
        // Old WebKit
        [
          "webkitRequestFullScreen",
          "webkitCancelFullScreen",
          "webkitCurrentFullScreenElement",
          "webkitCancelFullScreen",
          "webkitfullscreenchange",
          "webkitfullscreenerror"
        ],
        [
          "mozRequestFullScreen",
          "mozCancelFullScreen",
          "mozFullScreenElement",
          "mozFullScreenEnabled",
          "mozfullscreenchange",
          "mozfullscreenerror"
        ],
        [
          "msRequestFullscreen",
          "msExitFullscreen",
          "msFullscreenElement",
          "msFullscreenEnabled",
          "MSFullscreenChange",
          "MSFullscreenError"
        ]
      ], c = 0, _ = o.length, u = {}; c < _; c++)
        if (l = o[c], l && l[1] in r) {
          for (c = 0; c < l.length; c++)
            u[o[0][c]] = l[c];
          return u;
        }
      return !1;
    }(), a = {
      change: s.fullscreenchange,
      error: s.fullscreenerror
    }, t = {
      request: function(l, o) {
        return new Promise((function(c, _) {
          var u = (function() {
            this.off("change", u), c();
          }).bind(this);
          this.on("change", u), l = l || r.documentElement;
          var y = l[s.requestFullscreen](o);
          y instanceof Promise && y.then(u).catch(_);
        }).bind(this));
      },
      exit: function() {
        return new Promise((function(l, o) {
          if (!this.isFullscreen) {
            l();
            return;
          }
          var c = (function() {
            this.off("change", c), l();
          }).bind(this);
          this.on("change", c);
          var _ = r[s.exitFullscreen]();
          _ instanceof Promise && _.then(c).catch(o);
        }).bind(this));
      },
      toggle: function(l, o) {
        return this.isFullscreen ? this.exit() : this.request(l, o);
      },
      onchange: function(l) {
        this.on("change", l);
      },
      onerror: function(l) {
        this.on("error", l);
      },
      on: function(l, o) {
        var c = a[l];
        c && r.addEventListener(c, o, !1);
      },
      off: function(l, o) {
        var c = a[l];
        c && r.removeEventListener(c, o, !1);
      },
      raw: s
    };
    if (!s) {
      n ? e.exports = { isEnabled: !1 } : window.screenfull = { isEnabled: !1 };
      return;
    }
    Object.defineProperties(t, {
      isFullscreen: {
        get: function() {
          return !!r[s.fullscreenElement];
        }
      },
      element: {
        enumerable: !0,
        get: function() {
          return r[s.fullscreenElement];
        }
      },
      isEnabled: {
        enumerable: !0,
        get: function() {
          return !!r[s.fullscreenEnabled];
        }
      }
    }), n ? e.exports = t : window.screenfull = t;
  })();
})(screenfull);
var screenfullExports = screenfull.exports, buffer = {}, base64Js = {};
base64Js.byteLength = byteLength;
base64Js.toByteArray = toByteArray;
base64Js.fromByteArray = fromByteArray;
var lookup = [], revLookup = [], Arr = typeof Uint8Array < "u" ? Uint8Array : Array, code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for (var i = 0, len = code.length; i < len; ++i)
  lookup[i] = code[i], revLookup[code.charCodeAt(i)] = i;
revLookup[45] = 62;
revLookup[95] = 63;
function getLens(e) {
  var r = e.length;
  if (r % 4 > 0)
    throw new Error("Invalid string. Length must be a multiple of 4");
  var n = e.indexOf("=");
  n === -1 && (n = r);
  var s = n === r ? 0 : 4 - n % 4;
  return [n, s];
}
function byteLength(e) {
  var r = getLens(e), n = r[0], s = r[1];
  return (n + s) * 3 / 4 - s;
}
function _byteLength(e, r, n) {
  return (r + n) * 3 / 4 - n;
}
function toByteArray(e) {
  var r, n = getLens(e), s = n[0], a = n[1], t = new Arr(_byteLength(e, s, a)), l = 0, o = a > 0 ? s - 4 : s, c;
  for (c = 0; c < o; c += 4)
    r = revLookup[e.charCodeAt(c)] << 18 | revLookup[e.charCodeAt(c + 1)] << 12 | revLookup[e.charCodeAt(c + 2)] << 6 | revLookup[e.charCodeAt(c + 3)], t[l++] = r >> 16 & 255, t[l++] = r >> 8 & 255, t[l++] = r & 255;
  return a === 2 && (r = revLookup[e.charCodeAt(c)] << 2 | revLookup[e.charCodeAt(c + 1)] >> 4, t[l++] = r & 255), a === 1 && (r = revLookup[e.charCodeAt(c)] << 10 | revLookup[e.charCodeAt(c + 1)] << 4 | revLookup[e.charCodeAt(c + 2)] >> 2, t[l++] = r >> 8 & 255, t[l++] = r & 255), t;
}
function tripletToBase64(e) {
  return lookup[e >> 18 & 63] + lookup[e >> 12 & 63] + lookup[e >> 6 & 63] + lookup[e & 63];
}
function encodeChunk(e, r, n) {
  for (var s, a = [], t = r; t < n; t += 3)
    s = (e[t] << 16 & 16711680) + (e[t + 1] << 8 & 65280) + (e[t + 2] & 255), a.push(tripletToBase64(s));
  return a.join("");
}
function fromByteArray(e) {
  for (var r, n = e.length, s = n % 3, a = [], t = 16383, l = 0, o = n - s; l < o; l += t)
    a.push(encodeChunk(e, l, l + t > o ? o : l + t));
  return s === 1 ? (r = e[n - 1], a.push(
    lookup[r >> 2] + lookup[r << 4 & 63] + "=="
  )) : s === 2 && (r = (e[n - 2] << 8) + e[n - 1], a.push(
    lookup[r >> 10] + lookup[r >> 4 & 63] + lookup[r << 2 & 63] + "="
  )), a.join("");
}
var ieee754 = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
ieee754.read = function(e, r, n, s, a) {
  var t, l, o = a * 8 - s - 1, c = (1 << o) - 1, _ = c >> 1, u = -7, y = n ? a - 1 : 0, g = n ? -1 : 1, Ee = e[r + y];
  for (y += g, t = Ee & (1 << -u) - 1, Ee >>= -u, u += o; u > 0; t = t * 256 + e[r + y], y += g, u -= 8)
    ;
  for (l = t & (1 << -u) - 1, t >>= -u, u += s; u > 0; l = l * 256 + e[r + y], y += g, u -= 8)
    ;
  if (t === 0)
    t = 1 - _;
  else {
    if (t === c)
      return l ? NaN : (Ee ? -1 : 1) * (1 / 0);
    l = l + Math.pow(2, s), t = t - _;
  }
  return (Ee ? -1 : 1) * l * Math.pow(2, t - s);
};
ieee754.write = function(e, r, n, s, a, t) {
  var l, o, c, _ = t * 8 - a - 1, u = (1 << _) - 1, y = u >> 1, g = a === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, Ee = s ? 0 : t - 1, Ve = s ? 1 : -1, Me = r < 0 || r === 0 && 1 / r < 0 ? 1 : 0;
  for (r = Math.abs(r), isNaN(r) || r === 1 / 0 ? (o = isNaN(r) ? 1 : 0, l = u) : (l = Math.floor(Math.log(r) / Math.LN2), r * (c = Math.pow(2, -l)) < 1 && (l--, c *= 2), l + y >= 1 ? r += g / c : r += g * Math.pow(2, 1 - y), r * c >= 2 && (l++, c /= 2), l + y >= u ? (o = 0, l = u) : l + y >= 1 ? (o = (r * c - 1) * Math.pow(2, a), l = l + y) : (o = r * Math.pow(2, y - 1) * Math.pow(2, a), l = 0)); a >= 8; e[n + Ee] = o & 255, Ee += Ve, o /= 256, a -= 8)
    ;
  for (l = l << a | o, _ += a; _ > 0; e[n + Ee] = l & 255, Ee += Ve, l /= 256, _ -= 8)
    ;
  e[n + Ee - Ve] |= Me * 128;
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(e) {
  const r = base64Js, n = ieee754, s = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  e.Buffer = o, e.SlowBuffer = k, e.INSPECT_MAX_BYTES = 50;
  const a = 2147483647;
  e.kMaxLength = a, o.TYPED_ARRAY_SUPPORT = t(), !o.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
    "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
  );
  function t() {
    try {
      const gt = new Uint8Array(1), rt = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(rt, Uint8Array.prototype), Object.setPrototypeOf(gt, rt), gt.foo() === 42;
    } catch {
      return !1;
    }
  }
  Object.defineProperty(o.prototype, "parent", {
    enumerable: !0,
    get: function() {
      if (o.isBuffer(this))
        return this.buffer;
    }
  }), Object.defineProperty(o.prototype, "offset", {
    enumerable: !0,
    get: function() {
      if (o.isBuffer(this))
        return this.byteOffset;
    }
  });
  function l(gt) {
    if (gt > a)
      throw new RangeError('The value "' + gt + '" is invalid for option "size"');
    const rt = new Uint8Array(gt);
    return Object.setPrototypeOf(rt, o.prototype), rt;
  }
  function o(gt, rt, nt) {
    if (typeof gt == "number") {
      if (typeof rt == "string")
        throw new TypeError(
          'The "string" argument must be of type string. Received type number'
        );
      return y(gt);
    }
    return c(gt, rt, nt);
  }
  o.poolSize = 8192;
  function c(gt, rt, nt) {
    if (typeof gt == "string")
      return g(gt, rt);
    if (ArrayBuffer.isView(gt))
      return Ve(gt);
    if (gt == null)
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof gt
      );
    if (Ot(gt, ArrayBuffer) || gt && Ot(gt.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (Ot(gt, SharedArrayBuffer) || gt && Ot(gt.buffer, SharedArrayBuffer)))
      return Me(gt, rt, nt);
    if (typeof gt == "number")
      throw new TypeError(
        'The "value" argument must not be of type number. Received type number'
      );
    const bt = gt.valueOf && gt.valueOf();
    if (bt != null && bt !== gt)
      return o.from(bt, rt, nt);
    const Et = B(gt);
    if (Et)
      return Et;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof gt[Symbol.toPrimitive] == "function")
      return o.from(gt[Symbol.toPrimitive]("string"), rt, nt);
    throw new TypeError(
      "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof gt
    );
  }
  o.from = function(gt, rt, nt) {
    return c(gt, rt, nt);
  }, Object.setPrototypeOf(o.prototype, Uint8Array.prototype), Object.setPrototypeOf(o, Uint8Array);
  function _(gt) {
    if (typeof gt != "number")
      throw new TypeError('"size" argument must be of type number');
    if (gt < 0)
      throw new RangeError('The value "' + gt + '" is invalid for option "size"');
  }
  function u(gt, rt, nt) {
    return _(gt), gt <= 0 ? l(gt) : rt !== void 0 ? typeof nt == "string" ? l(gt).fill(rt, nt) : l(gt).fill(rt) : l(gt);
  }
  o.alloc = function(gt, rt, nt) {
    return u(gt, rt, nt);
  };
  function y(gt) {
    return _(gt), l(gt < 0 ? 0 : Pe(gt) | 0);
  }
  o.allocUnsafe = function(gt) {
    return y(gt);
  }, o.allocUnsafeSlow = function(gt) {
    return y(gt);
  };
  function g(gt, rt) {
    if ((typeof rt != "string" || rt === "") && (rt = "utf8"), !o.isEncoding(rt))
      throw new TypeError("Unknown encoding: " + rt);
    const nt = b(gt, rt) | 0;
    let bt = l(nt);
    const Et = bt.write(gt, rt);
    return Et !== nt && (bt = bt.slice(0, Et)), bt;
  }
  function Ee(gt) {
    const rt = gt.length < 0 ? 0 : Pe(gt.length) | 0, nt = l(rt);
    for (let bt = 0; bt < rt; bt += 1)
      nt[bt] = gt[bt] & 255;
    return nt;
  }
  function Ve(gt) {
    if (Ot(gt, Uint8Array)) {
      const rt = new Uint8Array(gt);
      return Me(rt.buffer, rt.byteOffset, rt.byteLength);
    }
    return Ee(gt);
  }
  function Me(gt, rt, nt) {
    if (rt < 0 || gt.byteLength < rt)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (gt.byteLength < rt + (nt || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    let bt;
    return rt === void 0 && nt === void 0 ? bt = new Uint8Array(gt) : nt === void 0 ? bt = new Uint8Array(gt, rt) : bt = new Uint8Array(gt, rt, nt), Object.setPrototypeOf(bt, o.prototype), bt;
  }
  function B(gt) {
    if (o.isBuffer(gt)) {
      const rt = Pe(gt.length) | 0, nt = l(rt);
      return nt.length === 0 || gt.copy(nt, 0, 0, rt), nt;
    }
    if (gt.length !== void 0)
      return typeof gt.length != "number" || Pt(gt.length) ? l(0) : Ee(gt);
    if (gt.type === "Buffer" && Array.isArray(gt.data))
      return Ee(gt.data);
  }
  function Pe(gt) {
    if (gt >= a)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + a.toString(16) + " bytes");
    return gt | 0;
  }
  function k(gt) {
    return +gt != gt && (gt = 0), o.alloc(+gt);
  }
  o.isBuffer = function(rt) {
    return rt != null && rt._isBuffer === !0 && rt !== o.prototype;
  }, o.compare = function(rt, nt) {
    if (Ot(rt, Uint8Array) && (rt = o.from(rt, rt.offset, rt.byteLength)), Ot(nt, Uint8Array) && (nt = o.from(nt, nt.offset, nt.byteLength)), !o.isBuffer(rt) || !o.isBuffer(nt))
      throw new TypeError(
        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
      );
    if (rt === nt)
      return 0;
    let bt = rt.length, Et = nt.length;
    for (let Rt = 0, $t = Math.min(bt, Et); Rt < $t; ++Rt)
      if (rt[Rt] !== nt[Rt]) {
        bt = rt[Rt], Et = nt[Rt];
        break;
      }
    return bt < Et ? -1 : Et < bt ? 1 : 0;
  }, o.isEncoding = function(rt) {
    switch (String(rt).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return !0;
      default:
        return !1;
    }
  }, o.concat = function(rt, nt) {
    if (!Array.isArray(rt))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (rt.length === 0)
      return o.alloc(0);
    let bt;
    if (nt === void 0)
      for (nt = 0, bt = 0; bt < rt.length; ++bt)
        nt += rt[bt].length;
    const Et = o.allocUnsafe(nt);
    let Rt = 0;
    for (bt = 0; bt < rt.length; ++bt) {
      let $t = rt[bt];
      if (Ot($t, Uint8Array))
        Rt + $t.length > Et.length ? (o.isBuffer($t) || ($t = o.from($t)), $t.copy(Et, Rt)) : Uint8Array.prototype.set.call(
          Et,
          $t,
          Rt
        );
      else if (o.isBuffer($t))
        $t.copy(Et, Rt);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      Rt += $t.length;
    }
    return Et;
  };
  function b(gt, rt) {
    if (o.isBuffer(gt))
      return gt.length;
    if (ArrayBuffer.isView(gt) || Ot(gt, ArrayBuffer))
      return gt.byteLength;
    if (typeof gt != "string")
      throw new TypeError(
        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof gt
      );
    const nt = gt.length, bt = arguments.length > 2 && arguments[2] === !0;
    if (!bt && nt === 0)
      return 0;
    let Et = !1;
    for (; ; )
      switch (rt) {
        case "ascii":
        case "latin1":
        case "binary":
          return nt;
        case "utf8":
        case "utf-8":
          return Ct(gt).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return nt * 2;
        case "hex":
          return nt >>> 1;
        case "base64":
          return Tt(gt).length;
        default:
          if (Et)
            return bt ? -1 : Ct(gt).length;
          rt = ("" + rt).toLowerCase(), Et = !0;
      }
  }
  o.byteLength = b;
  function Le(gt, rt, nt) {
    let bt = !1;
    if ((rt === void 0 || rt < 0) && (rt = 0), rt > this.length || ((nt === void 0 || nt > this.length) && (nt = this.length), nt <= 0) || (nt >>>= 0, rt >>>= 0, nt <= rt))
      return "";
    for (gt || (gt = "utf8"); ; )
      switch (gt) {
        case "hex":
          return O(this, rt, nt);
        case "utf8":
        case "utf-8":
          return Ke(this, rt, nt);
        case "ascii":
          return Re(this, rt, nt);
        case "latin1":
        case "binary":
          return Ie(this, rt, nt);
        case "base64":
          return We(this, rt, nt);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Ue(this, rt, nt);
        default:
          if (bt)
            throw new TypeError("Unknown encoding: " + gt);
          gt = (gt + "").toLowerCase(), bt = !0;
      }
  }
  o.prototype._isBuffer = !0;
  function xe(gt, rt, nt) {
    const bt = gt[rt];
    gt[rt] = gt[nt], gt[nt] = bt;
  }
  o.prototype.swap16 = function() {
    const rt = this.length;
    if (rt % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (let nt = 0; nt < rt; nt += 2)
      xe(this, nt, nt + 1);
    return this;
  }, o.prototype.swap32 = function() {
    const rt = this.length;
    if (rt % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (let nt = 0; nt < rt; nt += 4)
      xe(this, nt, nt + 3), xe(this, nt + 1, nt + 2);
    return this;
  }, o.prototype.swap64 = function() {
    const rt = this.length;
    if (rt % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (let nt = 0; nt < rt; nt += 8)
      xe(this, nt, nt + 7), xe(this, nt + 1, nt + 6), xe(this, nt + 2, nt + 5), xe(this, nt + 3, nt + 4);
    return this;
  }, o.prototype.toString = function() {
    const rt = this.length;
    return rt === 0 ? "" : arguments.length === 0 ? Ke(this, 0, rt) : Le.apply(this, arguments);
  }, o.prototype.toLocaleString = o.prototype.toString, o.prototype.equals = function(rt) {
    if (!o.isBuffer(rt))
      throw new TypeError("Argument must be a Buffer");
    return this === rt ? !0 : o.compare(this, rt) === 0;
  }, o.prototype.inspect = function() {
    let rt = "";
    const nt = e.INSPECT_MAX_BYTES;
    return rt = this.toString("hex", 0, nt).replace(/(.{2})/g, "$1 ").trim(), this.length > nt && (rt += " ... "), "<Buffer " + rt + ">";
  }, s && (o.prototype[s] = o.prototype.inspect), o.prototype.compare = function(rt, nt, bt, Et, Rt) {
    if (Ot(rt, Uint8Array) && (rt = o.from(rt, rt.offset, rt.byteLength)), !o.isBuffer(rt))
      throw new TypeError(
        'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof rt
      );
    if (nt === void 0 && (nt = 0), bt === void 0 && (bt = rt ? rt.length : 0), Et === void 0 && (Et = 0), Rt === void 0 && (Rt = this.length), nt < 0 || bt > rt.length || Et < 0 || Rt > this.length)
      throw new RangeError("out of range index");
    if (Et >= Rt && nt >= bt)
      return 0;
    if (Et >= Rt)
      return -1;
    if (nt >= bt)
      return 1;
    if (nt >>>= 0, bt >>>= 0, Et >>>= 0, Rt >>>= 0, this === rt)
      return 0;
    let $t = Rt - Et, pt = bt - nt;
    const Ft = Math.min($t, pt), Nt = this.slice(Et, Rt), Kt = rt.slice(nt, bt);
    for (let At = 0; At < Ft; ++At)
      if (Nt[At] !== Kt[At]) {
        $t = Nt[At], pt = Kt[At];
        break;
      }
    return $t < pt ? -1 : pt < $t ? 1 : 0;
  };
  function ze(gt, rt, nt, bt, Et) {
    if (gt.length === 0)
      return -1;
    if (typeof nt == "string" ? (bt = nt, nt = 0) : nt > 2147483647 ? nt = 2147483647 : nt < -2147483648 && (nt = -2147483648), nt = +nt, Pt(nt) && (nt = Et ? 0 : gt.length - 1), nt < 0 && (nt = gt.length + nt), nt >= gt.length) {
      if (Et)
        return -1;
      nt = gt.length - 1;
    } else if (nt < 0)
      if (Et)
        nt = 0;
      else
        return -1;
    if (typeof rt == "string" && (rt = o.from(rt, bt)), o.isBuffer(rt))
      return rt.length === 0 ? -1 : Se(gt, rt, nt, bt, Et);
    if (typeof rt == "number")
      return rt = rt & 255, typeof Uint8Array.prototype.indexOf == "function" ? Et ? Uint8Array.prototype.indexOf.call(gt, rt, nt) : Uint8Array.prototype.lastIndexOf.call(gt, rt, nt) : Se(gt, [rt], nt, bt, Et);
    throw new TypeError("val must be string, number or Buffer");
  }
  function Se(gt, rt, nt, bt, Et) {
    let Rt = 1, $t = gt.length, pt = rt.length;
    if (bt !== void 0 && (bt = String(bt).toLowerCase(), bt === "ucs2" || bt === "ucs-2" || bt === "utf16le" || bt === "utf-16le")) {
      if (gt.length < 2 || rt.length < 2)
        return -1;
      Rt = 2, $t /= 2, pt /= 2, nt /= 2;
    }
    function Ft(Kt, At) {
      return Rt === 1 ? Kt[At] : Kt.readUInt16BE(At * Rt);
    }
    let Nt;
    if (Et) {
      let Kt = -1;
      for (Nt = nt; Nt < $t; Nt++)
        if (Ft(gt, Nt) === Ft(rt, Kt === -1 ? 0 : Nt - Kt)) {
          if (Kt === -1 && (Kt = Nt), Nt - Kt + 1 === pt)
            return Kt * Rt;
        } else
          Kt !== -1 && (Nt -= Nt - Kt), Kt = -1;
    } else
      for (nt + pt > $t && (nt = $t - pt), Nt = nt; Nt >= 0; Nt--) {
        let Kt = !0;
        for (let At = 0; At < pt; At++)
          if (Ft(gt, Nt + At) !== Ft(rt, At)) {
            Kt = !1;
            break;
          }
        if (Kt)
          return Nt;
      }
    return -1;
  }
  o.prototype.includes = function(rt, nt, bt) {
    return this.indexOf(rt, nt, bt) !== -1;
  }, o.prototype.indexOf = function(rt, nt, bt) {
    return ze(this, rt, nt, bt, !0);
  }, o.prototype.lastIndexOf = function(rt, nt, bt) {
    return ze(this, rt, nt, bt, !1);
  };
  function Te(gt, rt, nt, bt) {
    nt = Number(nt) || 0;
    const Et = gt.length - nt;
    bt ? (bt = Number(bt), bt > Et && (bt = Et)) : bt = Et;
    const Rt = rt.length;
    bt > Rt / 2 && (bt = Rt / 2);
    let $t;
    for ($t = 0; $t < bt; ++$t) {
      const pt = parseInt(rt.substr($t * 2, 2), 16);
      if (Pt(pt))
        return $t;
      gt[nt + $t] = pt;
    }
    return $t;
  }
  function D(gt, rt, nt, bt) {
    return xt(Ct(rt, gt.length - nt), gt, nt, bt);
  }
  function ke(gt, rt, nt, bt) {
    return xt(Lt(rt), gt, nt, bt);
  }
  function Fe(gt, rt, nt, bt) {
    return xt(Tt(rt), gt, nt, bt);
  }
  function He(gt, rt, nt, bt) {
    return xt(Vt(rt, gt.length - nt), gt, nt, bt);
  }
  o.prototype.write = function(rt, nt, bt, Et) {
    if (nt === void 0)
      Et = "utf8", bt = this.length, nt = 0;
    else if (bt === void 0 && typeof nt == "string")
      Et = nt, bt = this.length, nt = 0;
    else if (isFinite(nt))
      nt = nt >>> 0, isFinite(bt) ? (bt = bt >>> 0, Et === void 0 && (Et = "utf8")) : (Et = bt, bt = void 0);
    else
      throw new Error(
        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
      );
    const Rt = this.length - nt;
    if ((bt === void 0 || bt > Rt) && (bt = Rt), rt.length > 0 && (bt < 0 || nt < 0) || nt > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    Et || (Et = "utf8");
    let $t = !1;
    for (; ; )
      switch (Et) {
        case "hex":
          return Te(this, rt, nt, bt);
        case "utf8":
        case "utf-8":
          return D(this, rt, nt, bt);
        case "ascii":
        case "latin1":
        case "binary":
          return ke(this, rt, nt, bt);
        case "base64":
          return Fe(this, rt, nt, bt);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return He(this, rt, nt, bt);
        default:
          if ($t)
            throw new TypeError("Unknown encoding: " + Et);
          Et = ("" + Et).toLowerCase(), $t = !0;
      }
  }, o.prototype.toJSON = function() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function We(gt, rt, nt) {
    return rt === 0 && nt === gt.length ? r.fromByteArray(gt) : r.fromByteArray(gt.slice(rt, nt));
  }
  function Ke(gt, rt, nt) {
    nt = Math.min(gt.length, nt);
    const bt = [];
    let Et = rt;
    for (; Et < nt; ) {
      const Rt = gt[Et];
      let $t = null, pt = Rt > 239 ? 4 : Rt > 223 ? 3 : Rt > 191 ? 2 : 1;
      if (Et + pt <= nt) {
        let Ft, Nt, Kt, At;
        switch (pt) {
          case 1:
            Rt < 128 && ($t = Rt);
            break;
          case 2:
            Ft = gt[Et + 1], (Ft & 192) === 128 && (At = (Rt & 31) << 6 | Ft & 63, At > 127 && ($t = At));
            break;
          case 3:
            Ft = gt[Et + 1], Nt = gt[Et + 2], (Ft & 192) === 128 && (Nt & 192) === 128 && (At = (Rt & 15) << 12 | (Ft & 63) << 6 | Nt & 63, At > 2047 && (At < 55296 || At > 57343) && ($t = At));
            break;
          case 4:
            Ft = gt[Et + 1], Nt = gt[Et + 2], Kt = gt[Et + 3], (Ft & 192) === 128 && (Nt & 192) === 128 && (Kt & 192) === 128 && (At = (Rt & 15) << 18 | (Ft & 63) << 12 | (Nt & 63) << 6 | Kt & 63, At > 65535 && At < 1114112 && ($t = At));
        }
      }
      $t === null ? ($t = 65533, pt = 1) : $t > 65535 && ($t -= 65536, bt.push($t >>> 10 & 1023 | 55296), $t = 56320 | $t & 1023), bt.push($t), Et += pt;
    }
    return De(bt);
  }
  const $ = 4096;
  function De(gt) {
    const rt = gt.length;
    if (rt <= $)
      return String.fromCharCode.apply(String, gt);
    let nt = "", bt = 0;
    for (; bt < rt; )
      nt += String.fromCharCode.apply(
        String,
        gt.slice(bt, bt += $)
      );
    return nt;
  }
  function Re(gt, rt, nt) {
    let bt = "";
    nt = Math.min(gt.length, nt);
    for (let Et = rt; Et < nt; ++Et)
      bt += String.fromCharCode(gt[Et] & 127);
    return bt;
  }
  function Ie(gt, rt, nt) {
    let bt = "";
    nt = Math.min(gt.length, nt);
    for (let Et = rt; Et < nt; ++Et)
      bt += String.fromCharCode(gt[Et]);
    return bt;
  }
  function O(gt, rt, nt) {
    const bt = gt.length;
    (!rt || rt < 0) && (rt = 0), (!nt || nt < 0 || nt > bt) && (nt = bt);
    let Et = "";
    for (let Rt = rt; Rt < nt; ++Rt)
      Et += kt[gt[Rt]];
    return Et;
  }
  function Ue(gt, rt, nt) {
    const bt = gt.slice(rt, nt);
    let Et = "";
    for (let Rt = 0; Rt < bt.length - 1; Rt += 2)
      Et += String.fromCharCode(bt[Rt] + bt[Rt + 1] * 256);
    return Et;
  }
  o.prototype.slice = function(rt, nt) {
    const bt = this.length;
    rt = ~~rt, nt = nt === void 0 ? bt : ~~nt, rt < 0 ? (rt += bt, rt < 0 && (rt = 0)) : rt > bt && (rt = bt), nt < 0 ? (nt += bt, nt < 0 && (nt = 0)) : nt > bt && (nt = bt), nt < rt && (nt = rt);
    const Et = this.subarray(rt, nt);
    return Object.setPrototypeOf(Et, o.prototype), Et;
  };
  function $e(gt, rt, nt) {
    if (gt % 1 !== 0 || gt < 0)
      throw new RangeError("offset is not uint");
    if (gt + rt > nt)
      throw new RangeError("Trying to access beyond buffer length");
  }
  o.prototype.readUintLE = o.prototype.readUIntLE = function(rt, nt, bt) {
    rt = rt >>> 0, nt = nt >>> 0, bt || $e(rt, nt, this.length);
    let Et = this[rt], Rt = 1, $t = 0;
    for (; ++$t < nt && (Rt *= 256); )
      Et += this[rt + $t] * Rt;
    return Et;
  }, o.prototype.readUintBE = o.prototype.readUIntBE = function(rt, nt, bt) {
    rt = rt >>> 0, nt = nt >>> 0, bt || $e(rt, nt, this.length);
    let Et = this[rt + --nt], Rt = 1;
    for (; nt > 0 && (Rt *= 256); )
      Et += this[rt + --nt] * Rt;
    return Et;
  }, o.prototype.readUint8 = o.prototype.readUInt8 = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 1, this.length), this[rt];
  }, o.prototype.readUint16LE = o.prototype.readUInt16LE = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 2, this.length), this[rt] | this[rt + 1] << 8;
  }, o.prototype.readUint16BE = o.prototype.readUInt16BE = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 2, this.length), this[rt] << 8 | this[rt + 1];
  }, o.prototype.readUint32LE = o.prototype.readUInt32LE = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 4, this.length), (this[rt] | this[rt + 1] << 8 | this[rt + 2] << 16) + this[rt + 3] * 16777216;
  }, o.prototype.readUint32BE = o.prototype.readUInt32BE = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 4, this.length), this[rt] * 16777216 + (this[rt + 1] << 16 | this[rt + 2] << 8 | this[rt + 3]);
  }, o.prototype.readBigUInt64LE = zt(function(rt) {
    rt = rt >>> 0, ft(rt, "offset");
    const nt = this[rt], bt = this[rt + 7];
    (nt === void 0 || bt === void 0) && _t(rt, this.length - 8);
    const Et = nt + this[++rt] * 2 ** 8 + this[++rt] * 2 ** 16 + this[++rt] * 2 ** 24, Rt = this[++rt] + this[++rt] * 2 ** 8 + this[++rt] * 2 ** 16 + bt * 2 ** 24;
    return BigInt(Et) + (BigInt(Rt) << BigInt(32));
  }), o.prototype.readBigUInt64BE = zt(function(rt) {
    rt = rt >>> 0, ft(rt, "offset");
    const nt = this[rt], bt = this[rt + 7];
    (nt === void 0 || bt === void 0) && _t(rt, this.length - 8);
    const Et = nt * 2 ** 24 + this[++rt] * 2 ** 16 + this[++rt] * 2 ** 8 + this[++rt], Rt = this[++rt] * 2 ** 24 + this[++rt] * 2 ** 16 + this[++rt] * 2 ** 8 + bt;
    return (BigInt(Et) << BigInt(32)) + BigInt(Rt);
  }), o.prototype.readIntLE = function(rt, nt, bt) {
    rt = rt >>> 0, nt = nt >>> 0, bt || $e(rt, nt, this.length);
    let Et = this[rt], Rt = 1, $t = 0;
    for (; ++$t < nt && (Rt *= 256); )
      Et += this[rt + $t] * Rt;
    return Rt *= 128, Et >= Rt && (Et -= Math.pow(2, 8 * nt)), Et;
  }, o.prototype.readIntBE = function(rt, nt, bt) {
    rt = rt >>> 0, nt = nt >>> 0, bt || $e(rt, nt, this.length);
    let Et = nt, Rt = 1, $t = this[rt + --Et];
    for (; Et > 0 && (Rt *= 256); )
      $t += this[rt + --Et] * Rt;
    return Rt *= 128, $t >= Rt && ($t -= Math.pow(2, 8 * nt)), $t;
  }, o.prototype.readInt8 = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 1, this.length), this[rt] & 128 ? (255 - this[rt] + 1) * -1 : this[rt];
  }, o.prototype.readInt16LE = function(rt, nt) {
    rt = rt >>> 0, nt || $e(rt, 2, this.length);
    const bt = this[rt] | this[rt + 1] << 8;
    return bt & 32768 ? bt | 4294901760 : bt;
  }, o.prototype.readInt16BE = function(rt, nt) {
    rt = rt >>> 0, nt || $e(rt, 2, this.length);
    const bt = this[rt + 1] | this[rt] << 8;
    return bt & 32768 ? bt | 4294901760 : bt;
  }, o.prototype.readInt32LE = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 4, this.length), this[rt] | this[rt + 1] << 8 | this[rt + 2] << 16 | this[rt + 3] << 24;
  }, o.prototype.readInt32BE = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 4, this.length), this[rt] << 24 | this[rt + 1] << 16 | this[rt + 2] << 8 | this[rt + 3];
  }, o.prototype.readBigInt64LE = zt(function(rt) {
    rt = rt >>> 0, ft(rt, "offset");
    const nt = this[rt], bt = this[rt + 7];
    (nt === void 0 || bt === void 0) && _t(rt, this.length - 8);
    const Et = this[rt + 4] + this[rt + 5] * 2 ** 8 + this[rt + 6] * 2 ** 16 + (bt << 24);
    return (BigInt(Et) << BigInt(32)) + BigInt(nt + this[++rt] * 2 ** 8 + this[++rt] * 2 ** 16 + this[++rt] * 2 ** 24);
  }), o.prototype.readBigInt64BE = zt(function(rt) {
    rt = rt >>> 0, ft(rt, "offset");
    const nt = this[rt], bt = this[rt + 7];
    (nt === void 0 || bt === void 0) && _t(rt, this.length - 8);
    const Et = (nt << 24) + // Overflow
    this[++rt] * 2 ** 16 + this[++rt] * 2 ** 8 + this[++rt];
    return (BigInt(Et) << BigInt(32)) + BigInt(this[++rt] * 2 ** 24 + this[++rt] * 2 ** 16 + this[++rt] * 2 ** 8 + bt);
  }), o.prototype.readFloatLE = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 4, this.length), n.read(this, rt, !0, 23, 4);
  }, o.prototype.readFloatBE = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 4, this.length), n.read(this, rt, !1, 23, 4);
  }, o.prototype.readDoubleLE = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 8, this.length), n.read(this, rt, !0, 52, 8);
  }, o.prototype.readDoubleBE = function(rt, nt) {
    return rt = rt >>> 0, nt || $e(rt, 8, this.length), n.read(this, rt, !1, 52, 8);
  };
  function Ze(gt, rt, nt, bt, Et, Rt) {
    if (!o.isBuffer(gt))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (rt > Et || rt < Rt)
      throw new RangeError('"value" argument is out of bounds');
    if (nt + bt > gt.length)
      throw new RangeError("Index out of range");
  }
  o.prototype.writeUintLE = o.prototype.writeUIntLE = function(rt, nt, bt, Et) {
    if (rt = +rt, nt = nt >>> 0, bt = bt >>> 0, !Et) {
      const pt = Math.pow(2, 8 * bt) - 1;
      Ze(this, rt, nt, bt, pt, 0);
    }
    let Rt = 1, $t = 0;
    for (this[nt] = rt & 255; ++$t < bt && (Rt *= 256); )
      this[nt + $t] = rt / Rt & 255;
    return nt + bt;
  }, o.prototype.writeUintBE = o.prototype.writeUIntBE = function(rt, nt, bt, Et) {
    if (rt = +rt, nt = nt >>> 0, bt = bt >>> 0, !Et) {
      const pt = Math.pow(2, 8 * bt) - 1;
      Ze(this, rt, nt, bt, pt, 0);
    }
    let Rt = bt - 1, $t = 1;
    for (this[nt + Rt] = rt & 255; --Rt >= 0 && ($t *= 256); )
      this[nt + Rt] = rt / $t & 255;
    return nt + bt;
  }, o.prototype.writeUint8 = o.prototype.writeUInt8 = function(rt, nt, bt) {
    return rt = +rt, nt = nt >>> 0, bt || Ze(this, rt, nt, 1, 255, 0), this[nt] = rt & 255, nt + 1;
  }, o.prototype.writeUint16LE = o.prototype.writeUInt16LE = function(rt, nt, bt) {
    return rt = +rt, nt = nt >>> 0, bt || Ze(this, rt, nt, 2, 65535, 0), this[nt] = rt & 255, this[nt + 1] = rt >>> 8, nt + 2;
  }, o.prototype.writeUint16BE = o.prototype.writeUInt16BE = function(rt, nt, bt) {
    return rt = +rt, nt = nt >>> 0, bt || Ze(this, rt, nt, 2, 65535, 0), this[nt] = rt >>> 8, this[nt + 1] = rt & 255, nt + 2;
  }, o.prototype.writeUint32LE = o.prototype.writeUInt32LE = function(rt, nt, bt) {
    return rt = +rt, nt = nt >>> 0, bt || Ze(this, rt, nt, 4, 4294967295, 0), this[nt + 3] = rt >>> 24, this[nt + 2] = rt >>> 16, this[nt + 1] = rt >>> 8, this[nt] = rt & 255, nt + 4;
  }, o.prototype.writeUint32BE = o.prototype.writeUInt32BE = function(rt, nt, bt) {
    return rt = +rt, nt = nt >>> 0, bt || Ze(this, rt, nt, 4, 4294967295, 0), this[nt] = rt >>> 24, this[nt + 1] = rt >>> 16, this[nt + 2] = rt >>> 8, this[nt + 3] = rt & 255, nt + 4;
  };
  function Qe(gt, rt, nt, bt, Et) {
    lt(rt, bt, Et, gt, nt, 7);
    let Rt = Number(rt & BigInt(4294967295));
    gt[nt++] = Rt, Rt = Rt >> 8, gt[nt++] = Rt, Rt = Rt >> 8, gt[nt++] = Rt, Rt = Rt >> 8, gt[nt++] = Rt;
    let $t = Number(rt >> BigInt(32) & BigInt(4294967295));
    return gt[nt++] = $t, $t = $t >> 8, gt[nt++] = $t, $t = $t >> 8, gt[nt++] = $t, $t = $t >> 8, gt[nt++] = $t, nt;
  }
  function Ae(gt, rt, nt, bt, Et) {
    lt(rt, bt, Et, gt, nt, 7);
    let Rt = Number(rt & BigInt(4294967295));
    gt[nt + 7] = Rt, Rt = Rt >> 8, gt[nt + 6] = Rt, Rt = Rt >> 8, gt[nt + 5] = Rt, Rt = Rt >> 8, gt[nt + 4] = Rt;
    let $t = Number(rt >> BigInt(32) & BigInt(4294967295));
    return gt[nt + 3] = $t, $t = $t >> 8, gt[nt + 2] = $t, $t = $t >> 8, gt[nt + 1] = $t, $t = $t >> 8, gt[nt] = $t, nt + 8;
  }
  o.prototype.writeBigUInt64LE = zt(function(rt, nt = 0) {
    return Qe(this, rt, nt, BigInt(0), BigInt("0xffffffffffffffff"));
  }), o.prototype.writeBigUInt64BE = zt(function(rt, nt = 0) {
    return Ae(this, rt, nt, BigInt(0), BigInt("0xffffffffffffffff"));
  }), o.prototype.writeIntLE = function(rt, nt, bt, Et) {
    if (rt = +rt, nt = nt >>> 0, !Et) {
      const Ft = Math.pow(2, 8 * bt - 1);
      Ze(this, rt, nt, bt, Ft - 1, -Ft);
    }
    let Rt = 0, $t = 1, pt = 0;
    for (this[nt] = rt & 255; ++Rt < bt && ($t *= 256); )
      rt < 0 && pt === 0 && this[nt + Rt - 1] !== 0 && (pt = 1), this[nt + Rt] = (rt / $t >> 0) - pt & 255;
    return nt + bt;
  }, o.prototype.writeIntBE = function(rt, nt, bt, Et) {
    if (rt = +rt, nt = nt >>> 0, !Et) {
      const Ft = Math.pow(2, 8 * bt - 1);
      Ze(this, rt, nt, bt, Ft - 1, -Ft);
    }
    let Rt = bt - 1, $t = 1, pt = 0;
    for (this[nt + Rt] = rt & 255; --Rt >= 0 && ($t *= 256); )
      rt < 0 && pt === 0 && this[nt + Rt + 1] !== 0 && (pt = 1), this[nt + Rt] = (rt / $t >> 0) - pt & 255;
    return nt + bt;
  }, o.prototype.writeInt8 = function(rt, nt, bt) {
    return rt = +rt, nt = nt >>> 0, bt || Ze(this, rt, nt, 1, 127, -128), rt < 0 && (rt = 255 + rt + 1), this[nt] = rt & 255, nt + 1;
  }, o.prototype.writeInt16LE = function(rt, nt, bt) {
    return rt = +rt, nt = nt >>> 0, bt || Ze(this, rt, nt, 2, 32767, -32768), this[nt] = rt & 255, this[nt + 1] = rt >>> 8, nt + 2;
  }, o.prototype.writeInt16BE = function(rt, nt, bt) {
    return rt = +rt, nt = nt >>> 0, bt || Ze(this, rt, nt, 2, 32767, -32768), this[nt] = rt >>> 8, this[nt + 1] = rt & 255, nt + 2;
  }, o.prototype.writeInt32LE = function(rt, nt, bt) {
    return rt = +rt, nt = nt >>> 0, bt || Ze(this, rt, nt, 4, 2147483647, -2147483648), this[nt] = rt & 255, this[nt + 1] = rt >>> 8, this[nt + 2] = rt >>> 16, this[nt + 3] = rt >>> 24, nt + 4;
  }, o.prototype.writeInt32BE = function(rt, nt, bt) {
    return rt = +rt, nt = nt >>> 0, bt || Ze(this, rt, nt, 4, 2147483647, -2147483648), rt < 0 && (rt = 4294967295 + rt + 1), this[nt] = rt >>> 24, this[nt + 1] = rt >>> 16, this[nt + 2] = rt >>> 8, this[nt + 3] = rt & 255, nt + 4;
  }, o.prototype.writeBigInt64LE = zt(function(rt, nt = 0) {
    return Qe(this, rt, nt, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }), o.prototype.writeBigInt64BE = zt(function(rt, nt = 0) {
    return Ae(this, rt, nt, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  });
  function Ne(gt, rt, nt, bt, Et, Rt) {
    if (nt + bt > gt.length)
      throw new RangeError("Index out of range");
    if (nt < 0)
      throw new RangeError("Index out of range");
  }
  function Be(gt, rt, nt, bt, Et) {
    return rt = +rt, nt = nt >>> 0, Et || Ne(gt, rt, nt, 4), n.write(gt, rt, nt, bt, 23, 4), nt + 4;
  }
  o.prototype.writeFloatLE = function(rt, nt, bt) {
    return Be(this, rt, nt, !0, bt);
  }, o.prototype.writeFloatBE = function(rt, nt, bt) {
    return Be(this, rt, nt, !1, bt);
  };
  function Ge(gt, rt, nt, bt, Et) {
    return rt = +rt, nt = nt >>> 0, Et || Ne(gt, rt, nt, 8), n.write(gt, rt, nt, bt, 52, 8), nt + 8;
  }
  o.prototype.writeDoubleLE = function(rt, nt, bt) {
    return Ge(this, rt, nt, !0, bt);
  }, o.prototype.writeDoubleBE = function(rt, nt, bt) {
    return Ge(this, rt, nt, !1, bt);
  }, o.prototype.copy = function(rt, nt, bt, Et) {
    if (!o.isBuffer(rt))
      throw new TypeError("argument should be a Buffer");
    if (bt || (bt = 0), !Et && Et !== 0 && (Et = this.length), nt >= rt.length && (nt = rt.length), nt || (nt = 0), Et > 0 && Et < bt && (Et = bt), Et === bt || rt.length === 0 || this.length === 0)
      return 0;
    if (nt < 0)
      throw new RangeError("targetStart out of bounds");
    if (bt < 0 || bt >= this.length)
      throw new RangeError("Index out of range");
    if (Et < 0)
      throw new RangeError("sourceEnd out of bounds");
    Et > this.length && (Et = this.length), rt.length - nt < Et - bt && (Et = rt.length - nt + bt);
    const Rt = Et - bt;
    return this === rt && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(nt, bt, Et) : Uint8Array.prototype.set.call(
      rt,
      this.subarray(bt, Et),
      nt
    ), Rt;
  }, o.prototype.fill = function(rt, nt, bt, Et) {
    if (typeof rt == "string") {
      if (typeof nt == "string" ? (Et = nt, nt = 0, bt = this.length) : typeof bt == "string" && (Et = bt, bt = this.length), Et !== void 0 && typeof Et != "string")
        throw new TypeError("encoding must be a string");
      if (typeof Et == "string" && !o.isEncoding(Et))
        throw new TypeError("Unknown encoding: " + Et);
      if (rt.length === 1) {
        const $t = rt.charCodeAt(0);
        (Et === "utf8" && $t < 128 || Et === "latin1") && (rt = $t);
      }
    } else
      typeof rt == "number" ? rt = rt & 255 : typeof rt == "boolean" && (rt = Number(rt));
    if (nt < 0 || this.length < nt || this.length < bt)
      throw new RangeError("Out of range index");
    if (bt <= nt)
      return this;
    nt = nt >>> 0, bt = bt === void 0 ? this.length : bt >>> 0, rt || (rt = 0);
    let Rt;
    if (typeof rt == "number")
      for (Rt = nt; Rt < bt; ++Rt)
        this[Rt] = rt;
    else {
      const $t = o.isBuffer(rt) ? rt : o.from(rt, Et), pt = $t.length;
      if (pt === 0)
        throw new TypeError('The value "' + rt + '" is invalid for argument "value"');
      for (Rt = 0; Rt < bt - nt; ++Rt)
        this[Rt + nt] = $t[Rt % pt];
    }
    return this;
  };
  const Ye = {};
  function je(gt, rt, nt) {
    Ye[gt] = class extends nt {
      constructor() {
        super(), Object.defineProperty(this, "message", {
          value: rt.apply(this, arguments),
          writable: !0,
          configurable: !0
        }), this.name = `${this.name} [${gt}]`, this.stack, delete this.name;
      }
      get code() {
        return gt;
      }
      set code(Et) {
        Object.defineProperty(this, "code", {
          configurable: !0,
          enumerable: !0,
          value: Et,
          writable: !0
        });
      }
      toString() {
        return `${this.name} [${gt}]: ${this.message}`;
      }
    };
  }
  je(
    "ERR_BUFFER_OUT_OF_BOUNDS",
    function(gt) {
      return gt ? `${gt} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    },
    RangeError
  ), je(
    "ERR_INVALID_ARG_TYPE",
    function(gt, rt) {
      return `The "${gt}" argument must be of type number. Received type ${typeof rt}`;
    },
    TypeError
  ), je(
    "ERR_OUT_OF_RANGE",
    function(gt, rt, nt) {
      let bt = `The value of "${gt}" is out of range.`, Et = nt;
      return Number.isInteger(nt) && Math.abs(nt) > 2 ** 32 ? Et = ht(String(nt)) : typeof nt == "bigint" && (Et = String(nt), (nt > BigInt(2) ** BigInt(32) || nt < -(BigInt(2) ** BigInt(32))) && (Et = ht(Et)), Et += "n"), bt += ` It must be ${rt}. Received ${Et}`, bt;
    },
    RangeError
  );
  function ht(gt) {
    let rt = "", nt = gt.length;
    const bt = gt[0] === "-" ? 1 : 0;
    for (; nt >= bt + 4; nt -= 3)
      rt = `_${gt.slice(nt - 3, nt)}${rt}`;
    return `${gt.slice(0, nt)}${rt}`;
  }
  function qe(gt, rt, nt) {
    ft(rt, "offset"), (gt[rt] === void 0 || gt[rt + nt] === void 0) && _t(rt, gt.length - (nt + 1));
  }
  function lt(gt, rt, nt, bt, Et, Rt) {
    if (gt > nt || gt < rt) {
      const $t = typeof rt == "bigint" ? "n" : "";
      let pt;
      throw Rt > 3 ? rt === 0 || rt === BigInt(0) ? pt = `>= 0${$t} and < 2${$t} ** ${(Rt + 1) * 8}${$t}` : pt = `>= -(2${$t} ** ${(Rt + 1) * 8 - 1}${$t}) and < 2 ** ${(Rt + 1) * 8 - 1}${$t}` : pt = `>= ${rt}${$t} and <= ${nt}${$t}`, new Ye.ERR_OUT_OF_RANGE("value", pt, gt);
    }
    qe(bt, Et, Rt);
  }
  function ft(gt, rt) {
    if (typeof gt != "number")
      throw new Ye.ERR_INVALID_ARG_TYPE(rt, "number", gt);
  }
  function _t(gt, rt, nt) {
    throw Math.floor(gt) !== gt ? (ft(gt, nt), new Ye.ERR_OUT_OF_RANGE(nt || "offset", "an integer", gt)) : rt < 0 ? new Ye.ERR_BUFFER_OUT_OF_BOUNDS() : new Ye.ERR_OUT_OF_RANGE(
      nt || "offset",
      `>= ${nt ? 1 : 0} and <= ${rt}`,
      gt
    );
  }
  const St = /[^+/0-9A-Za-z-_]/g;
  function yt(gt) {
    if (gt = gt.split("=")[0], gt = gt.trim().replace(St, ""), gt.length < 2)
      return "";
    for (; gt.length % 4 !== 0; )
      gt = gt + "=";
    return gt;
  }
  function Ct(gt, rt) {
    rt = rt || 1 / 0;
    let nt;
    const bt = gt.length;
    let Et = null;
    const Rt = [];
    for (let $t = 0; $t < bt; ++$t) {
      if (nt = gt.charCodeAt($t), nt > 55295 && nt < 57344) {
        if (!Et) {
          if (nt > 56319) {
            (rt -= 3) > -1 && Rt.push(239, 191, 189);
            continue;
          } else if ($t + 1 === bt) {
            (rt -= 3) > -1 && Rt.push(239, 191, 189);
            continue;
          }
          Et = nt;
          continue;
        }
        if (nt < 56320) {
          (rt -= 3) > -1 && Rt.push(239, 191, 189), Et = nt;
          continue;
        }
        nt = (Et - 55296 << 10 | nt - 56320) + 65536;
      } else
        Et && (rt -= 3) > -1 && Rt.push(239, 191, 189);
      if (Et = null, nt < 128) {
        if ((rt -= 1) < 0)
          break;
        Rt.push(nt);
      } else if (nt < 2048) {
        if ((rt -= 2) < 0)
          break;
        Rt.push(
          nt >> 6 | 192,
          nt & 63 | 128
        );
      } else if (nt < 65536) {
        if ((rt -= 3) < 0)
          break;
        Rt.push(
          nt >> 12 | 224,
          nt >> 6 & 63 | 128,
          nt & 63 | 128
        );
      } else if (nt < 1114112) {
        if ((rt -= 4) < 0)
          break;
        Rt.push(
          nt >> 18 | 240,
          nt >> 12 & 63 | 128,
          nt >> 6 & 63 | 128,
          nt & 63 | 128
        );
      } else
        throw new Error("Invalid code point");
    }
    return Rt;
  }
  function Lt(gt) {
    const rt = [];
    for (let nt = 0; nt < gt.length; ++nt)
      rt.push(gt.charCodeAt(nt) & 255);
    return rt;
  }
  function Vt(gt, rt) {
    let nt, bt, Et;
    const Rt = [];
    for (let $t = 0; $t < gt.length && !((rt -= 2) < 0); ++$t)
      nt = gt.charCodeAt($t), bt = nt >> 8, Et = nt % 256, Rt.push(Et), Rt.push(bt);
    return Rt;
  }
  function Tt(gt) {
    return r.toByteArray(yt(gt));
  }
  function xt(gt, rt, nt, bt) {
    let Et;
    for (Et = 0; Et < bt && !(Et + nt >= rt.length || Et >= gt.length); ++Et)
      rt[Et + nt] = gt[Et];
    return Et;
  }
  function Ot(gt, rt) {
    return gt instanceof rt || gt != null && gt.constructor != null && gt.constructor.name != null && gt.constructor.name === rt.name;
  }
  function Pt(gt) {
    return gt !== gt;
  }
  const kt = function() {
    const gt = "0123456789abcdef", rt = new Array(256);
    for (let nt = 0; nt < 16; ++nt) {
      const bt = nt * 16;
      for (let Et = 0; Et < 16; ++Et)
        rt[bt + Et] = gt[nt] + gt[Et];
    }
    return rt;
  }();
  function zt(gt) {
    return typeof BigInt > "u" ? Bt : gt;
  }
  function Bt() {
    throw new Error("BigInt not supported");
  }
})(buffer);
/*!
 * pinia v2.1.7
 * (c) 2023 Eduardo San Martin Morote
 * @license MIT
 */
let activePinia;
const setActivePinia = (e) => activePinia = e, piniaSymbol = (
  /* istanbul ignore next */
  Symbol()
);
function isPlainObject(e) {
  return e && typeof e == "object" && Object.prototype.toString.call(e) === "[object Object]" && typeof e.toJSON != "function";
}
var MutationType;
(function(e) {
  e.direct = "direct", e.patchObject = "patch object", e.patchFunction = "patch function";
})(MutationType || (MutationType = {}));
const noop = () => {
};
function addSubscription(e, r, n, s = noop) {
  e.push(r);
  const a = () => {
    const t = e.indexOf(r);
    t > -1 && (e.splice(t, 1), s());
  };
  return !n && getCurrentScope() && onScopeDispose(a), a;
}
function triggerSubscriptions(e, ...r) {
  e.slice().forEach((n) => {
    n(...r);
  });
}
const fallbackRunWithContext = (e) => e();
function mergeReactiveObjects(e, r) {
  e instanceof Map && r instanceof Map && r.forEach((n, s) => e.set(s, n)), e instanceof Set && r instanceof Set && r.forEach(e.add, e);
  for (const n in r) {
    if (!r.hasOwnProperty(n))
      continue;
    const s = r[n], a = e[n];
    isPlainObject(a) && isPlainObject(s) && e.hasOwnProperty(n) && !isRef(s) && !isReactive(s) ? e[n] = mergeReactiveObjects(a, s) : e[n] = s;
  }
  return e;
}
const skipHydrateSymbol = (
  /* istanbul ignore next */
  Symbol()
);
function shouldHydrate(e) {
  return !isPlainObject(e) || !e.hasOwnProperty(skipHydrateSymbol);
}
const { assign } = Object;
function isComputed(e) {
  return !!(isRef(e) && e.effect);
}
function createOptionsStore(e, r, n, s) {
  const { state: a, actions: t, getters: l } = r, o = n.state.value[e];
  let c;
  function _() {
    o || (n.state.value[e] = a ? a() : {});
    const u = toRefs(n.state.value[e]);
    return assign(u, t, Object.keys(l || {}).reduce((y, g) => (y[g] = markRaw(computed(() => {
      setActivePinia(n);
      const Ee = n._s.get(e);
      return l[g].call(Ee, Ee);
    })), y), {}));
  }
  return c = createSetupStore(e, _, r, n, s, !0), c;
}
function createSetupStore(e, r, n = {}, s, a, t) {
  let l;
  const o = assign({ actions: {} }, n), c = {
    deep: !0
    // flush: 'post',
  };
  let _, u, y = [], g = [], Ee;
  const Ve = s.state.value[e];
  !t && !Ve && (s.state.value[e] = {}), ref({});
  let Me;
  function B(Te) {
    let D;
    _ = u = !1, typeof Te == "function" ? (Te(s.state.value[e]), D = {
      type: MutationType.patchFunction,
      storeId: e,
      events: Ee
    }) : (mergeReactiveObjects(s.state.value[e], Te), D = {
      type: MutationType.patchObject,
      payload: Te,
      storeId: e,
      events: Ee
    });
    const ke = Me = Symbol();
    nextTick().then(() => {
      Me === ke && (_ = !0);
    }), u = !0, triggerSubscriptions(y, D, s.state.value[e]);
  }
  const Pe = t ? function() {
    const { state: D } = n, ke = D ? D() : {};
    this.$patch((Fe) => {
      assign(Fe, ke);
    });
  } : (
    /* istanbul ignore next */
    noop
  );
  function k() {
    l.stop(), y = [], g = [], s._s.delete(e);
  }
  function b(Te, D) {
    return function() {
      setActivePinia(s);
      const ke = Array.from(arguments), Fe = [], He = [];
      function We(De) {
        Fe.push(De);
      }
      function Ke(De) {
        He.push(De);
      }
      triggerSubscriptions(g, {
        args: ke,
        name: Te,
        store: xe,
        after: We,
        onError: Ke
      });
      let $;
      try {
        $ = D.apply(this && this.$id === e ? this : xe, ke);
      } catch (De) {
        throw triggerSubscriptions(He, De), De;
      }
      return $ instanceof Promise ? $.then((De) => (triggerSubscriptions(Fe, De), De)).catch((De) => (triggerSubscriptions(He, De), Promise.reject(De))) : (triggerSubscriptions(Fe, $), $);
    };
  }
  const Le = {
    _p: s,
    // _s: scope,
    $id: e,
    $onAction: addSubscription.bind(null, g),
    $patch: B,
    $reset: Pe,
    $subscribe(Te, D = {}) {
      const ke = addSubscription(y, Te, D.detached, () => Fe()), Fe = l.run(() => watch(() => s.state.value[e], (He) => {
        (D.flush === "sync" ? u : _) && Te({
          storeId: e,
          type: MutationType.direct,
          events: Ee
        }, He);
      }, assign({}, c, D)));
      return ke;
    },
    $dispose: k
  }, xe = reactive(Le);
  s._s.set(e, xe);
  const Se = (s._a && s._a.runWithContext || fallbackRunWithContext)(() => s._e.run(() => (l = effectScope()).run(r)));
  for (const Te in Se) {
    const D = Se[Te];
    if (isRef(D) && !isComputed(D) || isReactive(D))
      t || (Ve && shouldHydrate(D) && (isRef(D) ? D.value = Ve[Te] : mergeReactiveObjects(D, Ve[Te])), s.state.value[e][Te] = D);
    else if (typeof D == "function") {
      const ke = b(Te, D);
      Se[Te] = ke, o.actions[Te] = D;
    }
  }
  return assign(xe, Se), assign(toRaw(xe), Se), Object.defineProperty(xe, "$state", {
    get: () => s.state.value[e],
    set: (Te) => {
      B((D) => {
        assign(D, Te);
      });
    }
  }), s._p.forEach((Te) => {
    assign(xe, l.run(() => Te({
      store: xe,
      app: s._a,
      pinia: s,
      options: o
    })));
  }), Ve && t && n.hydrate && n.hydrate(xe.$state, Ve), _ = !0, u = !0, xe;
}
function defineStore(e, r, n) {
  let s, a;
  const t = typeof r == "function";
  typeof e == "string" ? (s = e, a = t ? n : r) : (a = e, s = e.id);
  function l(o, c) {
    const _ = hasInjectionContext();
    return o = // in test mode, ignore the argument provided as we can always retrieve a
    // pinia instance with getActivePinia()
    o || (_ ? inject(piniaSymbol, null) : null), o && setActivePinia(o), o = activePinia, o._s.has(s) || (t ? createSetupStore(s, r, a, o) : createOptionsStore(s, a, o)), o._s.get(s);
  }
  return l.$id = s, l;
}
function mapState(e, r) {
  return Array.isArray(r) ? r.reduce((n, s) => (n[s] = function() {
    return e(this.$pinia)[s];
  }, n), {}) : Object.keys(r).reduce((n, s) => (n[s] = function() {
    const a = e(this.$pinia), t = r[s];
    return typeof t == "function" ? t.call(this, a) : a[t];
  }, n), {});
}
function mapActions(e, r) {
  return Array.isArray(r) ? r.reduce((n, s) => (n[s] = function(...a) {
    return e(this.$pinia)[s](...a);
  }, n), {}) : Object.keys(r).reduce((n, s) => (n[s] = function(...a) {
    return e(this.$pinia)[r[s]](...a);
  }, n), {});
}
var PI = 3.14159265358979, TWOPI = 2 * PI, R2D$2 = 180 / PI, D2R$1 = PI / 180, R2H = 12 / PI;
function angnorm(e) {
  for (; e < 0; )
    e += TWOPI;
  for (; e >= TWOPI; )
    e -= TWOPI;
  return e;
}
function distance(e, r, n, s) {
  var a = Math.abs(e - n), t = Math.pow(Math.cos(s) * Math.sin(a), 2), l = Math.pow(Math.cos(r) * Math.sin(s) - Math.sin(r) * Math.cos(s) * Math.cos(a), 2), o = Math.sqrt(t + l), c = Math.sin(r) * Math.sin(s) + Math.cos(r) * Math.cos(s) * Math.cos(a);
  return Math.atan2(o, c);
}
function _formatSexagesimal(e, r, n, s, a, t) {
  var l = "";
  e < 0 ? (e = -e, l = "-") : r && (l = "+");
  var o = Math.floor(e);
  e = (e - o) * 60;
  var c = Math.floor(e);
  e = (e - c) * 60;
  var _ = Math.floor(e), u = e - _, y = String(o).padStart(n, "0"), g = String(c).padStart(2, "0"), Ee = String(_).padStart(2, "0"), Ve = u.toFixed(t).slice(1);
  return "".concat(l).concat(y).concat(s).concat(g).concat(a).concat(Ee).concat(Ve);
}
function fmtHours(e, r, n, s) {
  return r === void 0 && (r = ":"), n === void 0 && (n = ":"), s === void 0 && (s = 0), _formatSexagesimal(angnorm(e) * R2H, !1, 2, r, n, s);
}
function fmtDegLat(e, r, n, s) {
  return r === void 0 && (r = ":"), n === void 0 && (n = ":"), s === void 0 && (s = 0), e < -PI || e > PI ? " ??".concat(r, "??").concat(n, "??") : _formatSexagesimal(e * R2D$2, !0, 2, r, n, s);
}
function fmtDegLon(e, r, n, s) {
  return r === void 0 && (r = ":"), n === void 0 && (n = ":"), s === void 0 && (s = 0), _formatSexagesimal(angnorm(e) * R2D$2, !1, 3, r, n, s);
}
function getIndex(e, r, n = null) {
  if (!n)
    return e.indexOf(r);
  for (const [s, a] of e.entries())
    if (n(r, a))
      return s;
  return -1;
}
function addToArrayWithoutDuplication(e, r, n = null) {
  return getIndex(e, r, n) < 0 ? (e.push(r), !0) : !1;
}
function removeFromArray(e, r, n = null) {
  const s = getIndex(e, r, n);
  return s >= 0 && e.splice(s, 1), s;
}
function infoKey(e) {
  return e.id ?? "";
}
function sourcesEqual(e, r) {
  return e.ra === r.ra && e.dec === r.dec && infoKey(e.catalogLayer) === infoKey(r.catalogLayer);
}
function getFilteredLayers(e, r) {
  const n = Object.values(e), s = [];
  for (const a of n)
    a !== void 0 && r(a) && s.push(a.layer);
  return s;
}
const researchAppStore = defineStore("wwt-research-app", {
  state: () => ({
    _tableLayers: {},
    catalogNameMappings: {
      "2MASS All-Sky Catalog of Point Sources (Cutri+ 2003)": ["2MASS", "2MASS"],
      "The Guide Star Catalog, Version 2.3.2 (GSC2.3) (STScI, 2006)": ["GSC23", "GSC 2.3"],
      "The PPMXL Catalog (Roeser+ 2010)": ["PPMXL_ID", "PPMXL"],
      "UCAC5 Catalogue (Zacharias+ 2017) (ucac5)": ["SrcIDgaia", "GAIA ID"],
      "Gaia DR2 (Gaia Collaboration, 2018) (gaia2)": ["source_id", "GAIA ID"],
      "The SDSS Photometric Catalogue, Release 12 (Alam+, 2015) (sdss12)": ["SDSS12", "SDSS12"],
      "The Pan-STARRS release 1 (PS1) Survey - DR1 (Chambers+, 2016) (ps1)": ["f_objID", "PAN-Starrs ID"]
    },
    sources: []
  }),
  getters: {
    hipsCatalogs(e) {
      return () => getFilteredLayers(e._tableLayers, (r) => r.type == "hips");
    },
    visibleHipsCatalogs(e) {
      return () => getFilteredLayers(e._tableLayers, (r) => r.type == "hips" && r.visible);
    },
    tableLayers(e) {
      return () => getFilteredLayers(e._tableLayers, (r) => !0);
    },
    visibleTableLayers(e) {
      return () => getFilteredLayers(e._tableLayers, (r) => r.visible);
    },
    selectableTableLayers(e) {
      return () => getFilteredLayers(e._tableLayers, (r) => r.visible && r.selectable);
    },
    researchAppTableLayerVisibility(e) {
      return (r) => {
        const n = e._tableLayers[infoKey(r)];
        return n == null ? !1 : n.visible;
      };
    },
    researchAppTableLayerSelectability(e) {
      return (r) => {
        const n = e._tableLayers[infoKey(r)];
        return n == null ? !1 : n.selectable;
      };
    }
  },
  actions: {
    addResearchAppTableLayer(e) {
      const r = {
        type: e instanceof index_umdExports.ImagesetInfo ? "hips" : "table",
        visible: !0,
        layer: e,
        selectable: !0
      };
      this._tableLayers[infoKey(e)] = r;
    },
    removeResearchAppTableLayer(e) {
      delete this._tableLayers[infoKey(e)];
    },
    setResearchAppTableLayerVisibility(e) {
      const r = this._tableLayers[infoKey(e.layer)];
      r !== void 0 && (r.visible = e.visible);
    },
    setResearchAppTableLayerSelectability(e) {
      const r = this._tableLayers[infoKey(e.layer)];
      r !== void 0 && (r.selectable = e.selectable);
    },
    addSource(e) {
      addToArrayWithoutDuplication(this.sources, e, sourcesEqual);
    },
    removeSource(e) {
      removeFromArray(this.sources, e);
    }
  }
}), wwtEngineNamespace = "wwt-engine";
var extendStatics = function(e, r) {
  return extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, s) {
    n.__proto__ = s;
  } || function(n, s) {
    for (var a in s)
      Object.prototype.hasOwnProperty.call(s, a) && (n[a] = s[a]);
  }, extendStatics(e, r);
};
function __extends(e, r) {
  if (typeof r != "function" && r !== null)
    throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
  extendStatics(e, r);
  function n() {
    this.constructor = e;
  }
  e.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
}
function __values(e) {
  var r = typeof Symbol == "function" && Symbol.iterator, n = r && e[r], s = 0;
  if (n)
    return n.call(e);
  if (e && typeof e.length == "number")
    return {
      next: function() {
        return e && s >= e.length && (e = void 0), { value: e && e[s++], done: !e };
      }
    };
  throw new TypeError(r ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
typeof SuppressedError == "function" && SuppressedError;
var AltTypes;
(function(e) {
  e[e.depth = 0] = "depth", e[e.altitude = 1] = "altitude", e[e.distance = 2] = "distance", e[e.seaLevel = 3] = "seaLevel", e[e.terrain = 4] = "terrain";
})(AltTypes || (AltTypes = {}));
var AltUnits;
(function(e) {
  e[e.meters = 1] = "meters", e[e.feet = 2] = "feet", e[e.inches = 3] = "inches", e[e.miles = 4] = "miles", e[e.kilometers = 5] = "kilometers", e[e.astronomicalUnits = 6] = "astronomicalUnits", e[e.lightYears = 7] = "lightYears", e[e.parsecs = 8] = "parsecs", e[e.megaParsecs = 9] = "megaParsecs", e[e.custom = 10] = "custom";
})(AltUnits || (AltUnits = {}));
var BandPass;
(function(e) {
  e[e.gamma = 0] = "gamma", e[e.xRay = 1] = "xRay", e[e.ultraviolet = 2] = "ultraviolet", e[e.visible = 3] = "visible", e[e.hydrogenAlpha = 4] = "hydrogenAlpha", e[e.IR = 4] = "IR", e[e.microwave = 5] = "microwave", e[e.radio = 6] = "radio", e[e.visibleNight = 6] = "visibleNight";
})(BandPass || (BandPass = {}));
var Classification;
(function(e) {
  e[e.star = 1] = "star", e[e.supernova = 2] = "supernova", e[e.blackHole = 4] = "blackHole", e[e.neutronStar = 8] = "neutronStar", e[e.doubleStar = 16] = "doubleStar", e[e.multipleStars = 32] = "multipleStars", e[e.asterism = 64] = "asterism", e[e.constellation = 128] = "constellation", e[e.openCluster = 256] = "openCluster", e[e.globularCluster = 512] = "globularCluster", e[e.nebulousCluster = 1024] = "nebulousCluster", e[e.nebula = 2048] = "nebula", e[e.emissionNebula = 4096] = "emissionNebula", e[e.planetaryNebula = 8192] = "planetaryNebula", e[e.reflectionNebula = 16384] = "reflectionNebula", e[e.darkNebula = 32768] = "darkNebula", e[e.giantMolecularCloud = 65536] = "giantMolecularCloud", e[e.supernovaRemnant = 131072] = "supernovaRemnant", e[e.interstellarDust = 262144] = "interstellarDust", e[e.quasar = 524288] = "quasar", e[e.galaxy = 1048576] = "galaxy", e[e.spiralGalaxy = 2097152] = "spiralGalaxy", e[e.irregularGalaxy = 4194304] = "irregularGalaxy", e[e.ellipticalGalaxy = 8388608] = "ellipticalGalaxy", e[e.knot = 16777216] = "knot", e[e.plateDefect = 33554432] = "plateDefect", e[e.clusterOfGalaxies = 67108864] = "clusterOfGalaxies", e[e.otherNGC = 134217728] = "otherNGC", e[e.unidentified = 268435456] = "unidentified", e[e.solarSystem = 536870912] = "solarSystem", e[e.unfiltered = 1073741823] = "unfiltered", e[e.stellar = 63] = "stellar", e[e.stellarGroupings = 2032] = "stellarGroupings", e[e.nebulae = 523264] = "nebulae", e[e.galactic = 133693440] = "galactic", e[e.other = 436207616] = "other";
})(Classification || (Classification = {}));
var CoordinatesType;
(function(e) {
  e[e.spherical = 0] = "spherical", e[e.rectangular = 1] = "rectangular", e[e.orbital = 2] = "orbital";
})(CoordinatesType || (CoordinatesType = {}));
var DataTypes;
(function(e) {
  e[e.byteT = 0] = "byteT", e[e.int16T = 1] = "int16T", e[e.int32T = 2] = "int32T", e[e.floatT = 3] = "floatT", e[e.doubleT = 4] = "doubleT", e[e.none = 5] = "none";
})(DataTypes || (DataTypes = {}));
var FadeType;
(function(e) {
  e[e.fadeIn = 1] = "fadeIn", e[e.fadeOut = 2] = "fadeOut", e[e.both = 3] = "both", e[e.none = 4] = "none";
})(FadeType || (FadeType = {}));
var FolderGroup;
(function(e) {
  e[e.explorer = 0] = "explorer", e[e.tour = 1] = "tour", e[e.search = 2] = "search", e[e.constellation = 3] = "constellation", e[e.view = 4] = "view", e[e.goTo = 5] = "goTo", e[e.community = 6] = "community", e[e.context = 7] = "context", e[e.voTable = 8] = "voTable", e[e.imageStack = 9] = "imageStack";
})(FolderGroup || (FolderGroup = {}));
var FolderRefreshType;
(function(e) {
  e[e.interval = 0] = "interval", e[e.conditionalGet = 1] = "conditionalGet", e[e.viewChange = 2] = "viewChange";
})(FolderRefreshType || (FolderRefreshType = {}));
var FolderType;
(function(e) {
  e[e.earth = 0] = "earth", e[e.planet = 1] = "planet", e[e.sky = 2] = "sky", e[e.panorama = 3] = "panorama";
})(FolderType || (FolderType = {}));
var ImageSetType;
(function(e) {
  e[e.earth = 0] = "earth", e[e.planet = 1] = "planet", e[e.sky = 2] = "sky", e[e.panorama = 3] = "panorama", e[e.solarSystem = 4] = "solarSystem", e[e.sandbox = 5] = "sandbox";
})(ImageSetType || (ImageSetType = {}));
var MarkerScales;
(function(e) {
  e[e.screen = 0] = "screen", e[e.world = 1] = "world";
})(MarkerScales || (MarkerScales = {}));
var PlotTypes;
(function(e) {
  e[e.gaussian = 0] = "gaussian", e[e.point = 1] = "point", e[e.circle = 2] = "circle", e[e.square = 3] = "square", e[e.pushPin = 4] = "pushPin", e[e.custom = 5] = "custom";
})(PlotTypes || (PlotTypes = {}));
var PointScaleTypes;
(function(e) {
  e[e.linear = 0] = "linear", e[e.power = 1] = "power", e[e.log = 2] = "log", e[e.constant = 3] = "constant", e[e.stellarMagnitude = 4] = "stellarMagnitude";
})(PointScaleTypes || (PointScaleTypes = {}));
var ProjectionType;
(function(e) {
  e[e.mercator = 0] = "mercator", e[e.equirectangular = 1] = "equirectangular", e[e.tangent = 2] = "tangent", e[e.tan = 2] = "tan", e[e.toast = 3] = "toast", e[e.spherical = 4] = "spherical", e[e.skyImage = 5] = "skyImage", e[e.plotted = 6] = "plotted";
})(ProjectionType || (ProjectionType = {}));
var RAUnits;
(function(e) {
  e[e.hours = 0] = "hours", e[e.degrees = 1] = "degrees";
})(RAUnits || (RAUnits = {}));
var ReferenceFrames;
(function(e) {
  e[e.sky = 0] = "sky", e[e.ecliptic = 1] = "ecliptic", e[e.galactic = 2] = "galactic", e[e.sun = 3] = "sun", e[e.mercury = 4] = "mercury", e[e.venus = 5] = "venus", e[e.earth = 6] = "earth", e[e.mars = 7] = "mars", e[e.jupiter = 8] = "jupiter", e[e.saturn = 9] = "saturn", e[e.uranus = 10] = "uranus", e[e.neptune = 11] = "neptune", e[e.pluto = 12] = "pluto", e[e.moon = 13] = "moon", e[e.io = 14] = "io", e[e.europa = 15] = "europa", e[e.ganymede = 16] = "ganymede", e[e.callisto = 17] = "callisto", e[e.custom = 18] = "custom", e[e.identity = 19] = "identity", e[e.sandbox = 20] = "sandbox";
})(ReferenceFrames || (ReferenceFrames = {}));
var ReferenceFrameTypes;
(function(e) {
  e[e.fixedSherical = 0] = "fixedSherical", e[e.orbital = 1] = "orbital", e[e.trajectory = 2] = "trajectory", e[e.synodic = 3] = "synodic";
})(ReferenceFrameTypes || (ReferenceFrameTypes = {}));
var ScaleTypes;
(function(e) {
  e[e.linear = 0] = "linear", e[e.log = 1] = "log", e[e.power = 2] = "power", e[e.squareRoot = 3] = "squareRoot", e[e.histogramEqualization = 4] = "histogramEqualization";
})(ScaleTypes || (ScaleTypes = {}));
var SolarSystemObjects;
(function(e) {
  e[e.sun = 0] = "sun", e[e.mercury = 1] = "mercury", e[e.venus = 2] = "venus", e[e.mars = 3] = "mars", e[e.jupiter = 4] = "jupiter", e[e.saturn = 5] = "saturn", e[e.uranus = 6] = "uranus", e[e.neptune = 7] = "neptune", e[e.pluto = 8] = "pluto", e[e.moon = 9] = "moon", e[e.io = 10] = "io", e[e.europa = 11] = "europa", e[e.ganymede = 12] = "ganymede", e[e.callisto = 13] = "callisto", e[e.ioShadow = 14] = "ioShadow", e[e.europaShadow = 15] = "europaShadow", e[e.ganymedeShadow = 16] = "ganymedeShadow", e[e.callistoShadow = 17] = "callistoShadow", e[e.sunEclipsed = 18] = "sunEclipsed", e[e.earth = 19] = "earth", e[e.custom = 20] = "custom", e[e.undefined = 65536] = "undefined";
})(SolarSystemObjects || (SolarSystemObjects = {}));
var baseEngineSettingTypeInfo = {
  "actualPlanetScale/boolean": !0,
  "constellations/boolean": !0,
  "constellationBoundryColor/string": !0,
  "constellationFigureColor/string": !0,
  "constellationsEnabled/string": !0,
  "constellationSelectionColor/string": !0,
  "crosshairsColor/string": !0,
  "earthCutawayView/boolean": !0,
  //"fovCamera/number": true,  // skipping because not settable
  //"fovEyepiece/number": true,  // skipping because not settable
  //"fovTelescope/number": true,  // skipping because not settable
  "localHorizonMode/boolean": !0,
  "galacticMode/boolean": !0,
  "locationAltitude/number": !0,
  "locationLat/number": !0,
  "locationLng/number": !0,
  "milkyWayModel/boolean": !0,
  "showAltAzGrid/boolean": !0,
  "showAltAzGridText/boolean": !0,
  //"showClouds/boolean": true,  // skipping because not settable
  "showConstellations/boolean": !0,
  "showConstellationBoundries/boolean": !0,
  "showConstellationFigures/boolean": !0,
  "showConstellationLabels/boolean": !0,
  "showConstellationPictures/boolean": !0,
  "showConstellationSelection/boolean": !0,
  "showCrosshairs/boolean": !0,
  "showEarthSky/boolean": !0,
  "showEcliptic/boolean": !0,
  "showEclipticGrid/boolean": !0,
  "showEclipticGridText/boolean": !0,
  "showEclipticOverviewText/boolean": !0,
  "showElevationModel/boolean": !0,
  "showEquatorialGridText/boolean": !0,
  //"showFieldOfView/boolean": true,  // skipping because not settable
  "showGalacticGrid/boolean": !0,
  "showGalacticGridText/boolean": !0,
  "showGrid/boolean": !0,
  "showHorizon/boolean": !0,
  //"showHorizonPanorama/boolean": true,  // skipping because not settable
  "showISSModel/boolean": !0,
  //"showMoonsAsPointSource/boolean": true,  // skipping because not settable
  "showPrecessionChart/boolean": !0,
  "showSkyGrids/boolean": !0,
  "showSkyNode/boolean": !0,
  "showSkyOverlays/boolean": !0,
  "showSkyOverlaysIn3d/boolean": !0,
  "showSolarSystem/boolean": !0,
  "smoothPan/boolean": !0,
  "solarSystemCMB/boolean": !0,
  "solarSystemCosmos/boolean": !0,
  "solarSystemMilkyWay/boolean": !0,
  "solarSystemOrbits/boolean": !0,
  "solarSystemOverlays/boolean": !0,
  "solarSystemLighting/boolean": !0,
  "solarSystemMultiRes/boolean": !0,
  "solarSystemMinorPlanets/boolean": !0,
  "solarSystemMinorOrbits/boolean": !0,
  "solarSystemPlanets/boolean": !0,
  "solarSystemStars/boolean": !0,
  "minorPlanetsFilter/number": !0,
  "planetOrbitsFilter/number": !0,
  "solarSystemScale/number": !0
};
function isBaseEngineSetting(e) {
  var r = e[0] + "/" + typeof e[1];
  return r in baseEngineSettingTypeInfo;
}
var baseLayerSettingTypeInfo = {
  "astronomical/boolean": !0,
  "enabled/boolean": !0,
  "fadeSpan/number": !0,
  "name/string": !0,
  "opacity/number": !0,
  "opened/boolean": !0,
  "referenceFrame/string": !0,
  "version/number": !0
};
function isBaseLayerSetting(e) {
  var r = e[0] + "/" + typeof e[1];
  return r in baseLayerSettingTypeInfo;
}
var baseImageSetLayerSettingTypeInfo = {
  "colorMapperName/string": !0,
  "overrideDefaultLayer/boolean": !0
};
function isBaseImageSetLayerSetting(e) {
  var r = e[0] + "/" + typeof e[1];
  return r in baseImageSetLayerSettingTypeInfo || isBaseLayerSetting(e);
}
var layerSettingNames = [
  "astronomical",
  "color",
  "enabled",
  "fadeSpan",
  "name",
  "opacity",
  "opened",
  "referenceFrame",
  "version"
], layerSettingTypeInfo = {
  "color/Color": !0
};
function isLayerSetting(e) {
  var r = typeof e[1];
  e[1] instanceof srcExports.Color && (r = "Color");
  var n = e[0] + "/" + r;
  return n in layerSettingTypeInfo || isBaseLayerSetting(e);
}
function extractLayerSettings(e) {
  var r, n, s = [];
  try {
    for (var a = __values(layerSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      s.push([l, e["get_" + l]()]);
    }
  } catch (o) {
    r = { error: o };
  } finally {
    try {
      t && !t.done && (n = a.return) && n.call(a);
    } finally {
      if (r)
        throw r.error;
    }
  }
  return s;
}
function copyLayerSettings(e, r) {
  var n, s;
  try {
    for (var a = __values(layerSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      r["set_" + l](e["get_" + l]());
    }
  } catch (o) {
    n = { error: o };
  } finally {
    try {
      t && !t.done && (s = a.return) && s.call(a);
    } finally {
      if (n)
        throw n.error;
    }
  }
}
var LayerState = (
  /** @class */
  function() {
    function e(r) {
      copyLayerSettings(r, this);
    }
    return e.prototype.get_astronomical = function() {
      return this.astronomical;
    }, e.prototype.set_astronomical = function(r) {
      return this.astronomical = r, r;
    }, e.prototype.get_color = function() {
      return this.color;
    }, e.prototype.set_color = function(r) {
      return this.color = r, r;
    }, e.prototype.get_enabled = function() {
      return this.enabled;
    }, e.prototype.set_enabled = function(r) {
      return this.enabled = r, r;
    }, e.prototype.get_endTime = function() {
      return this.endTime;
    }, e.prototype.set_endTime = function(r) {
      return this.endTime = r, r;
    }, e.prototype.get_fadeSpan = function() {
      return this.fadeSpan;
    }, e.prototype.set_fadeSpan = function(r) {
      return this.fadeSpan = r, r;
    }, e.prototype.get_fadeType = function() {
      return this.fadeType;
    }, e.prototype.set_fadeType = function(r) {
      return this.fadeType = r, r;
    }, e.prototype.get_name = function() {
      return this.name;
    }, e.prototype.set_name = function(r) {
      return this.name = r, r;
    }, e.prototype.get_opacity = function() {
      return this.opacity;
    }, e.prototype.set_opacity = function(r) {
      return this.opacity = r, r;
    }, e.prototype.get_opened = function() {
      return this.opened;
    }, e.prototype.set_opened = function(r) {
      return this.opened = r, r;
    }, e.prototype.get_referenceFrame = function() {
      return this.referenceFrame;
    }, e.prototype.set_referenceFrame = function(r) {
      return this.referenceFrame = r, r;
    }, e.prototype.get_startTime = function() {
      return this.startTime;
    }, e.prototype.set_startTime = function(r) {
      return this.startTime = r, r;
    }, e.prototype.get_version = function() {
      return this.version;
    }, e.prototype.set_version = function(r) {
      return this.version = r, r;
    }, e;
  }()
), justImageSetLayerSettingNames = [
  "colorMapperName",
  "overrideDefaultLayer"
];
layerSettingNames.concat(justImageSetLayerSettingNames);
function isImageSetLayerSetting(e) {
  return isLayerSetting(e) || isBaseImageSetLayerSetting(e);
}
function extractImageSetLayerSettings(e) {
  var r, n, s = extractLayerSettings(e);
  try {
    for (var a = __values(justImageSetLayerSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      s.push([l, e["get_" + l]()]);
    }
  } catch (o) {
    r = { error: o };
  } finally {
    try {
      t && !t.done && (n = a.return) && n.call(a);
    } finally {
      if (r)
        throw r.error;
    }
  }
  return s;
}
function copyImageSetLayerSettings(e, r) {
  var n, s;
  copyLayerSettings(e, r);
  try {
    for (var a = __values(justImageSetLayerSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      r["set_" + l](e["get_" + l]());
    }
  } catch (o) {
    n = { error: o };
  } finally {
    try {
      t && !t.done && (s = a.return) && s.call(a);
    } finally {
      if (n)
        throw n.error;
    }
  }
}
(function(e) {
  __extends(r, e);
  function r(n) {
    var s = (
      // Here we redundantly copy the generic Layer settings, but TypeScript
      // requires the super() call. Oh well.
      e.call(this, n) || this
    );
    return copyImageSetLayerSettings(n, s), s;
  }
  return r.prototype.get_colorMapperName = function() {
    return this.colorMapperName;
  }, r.prototype.set_colorMapperName = function(n) {
    return this.colorMapperName = n, n;
  }, r.prototype.get_overrideDefaultLayer = function() {
    return this.overrideDefaultLayer;
  }, r.prototype.set_overrideDefaultLayer = function(n) {
    return this.overrideDefaultLayer = n, n;
  }, r;
})(LayerState);
var justSpreadSheetLayerSettingNames = [
  "altColumn",
  "altType",
  "altUnit",
  "barChartBitmask",
  "beginRange",
  "cartesianCustomScale",
  "cartesianScale",
  "colorMapColumn",
  "colorMapperName",
  "coordinatesType",
  "decay",
  "dynamicColor",
  "dynamicData",
  "endDateColumn",
  "endRange",
  "geometryColumn",
  "hyperlinkColumn",
  "hyperlinkFormat",
  "latColumn",
  "lngColumn",
  "markerColumn",
  "markerIndex",
  "markerScale",
  "nameColumn",
  "normalizeColorMap",
  "normalizeColorMapMax",
  "normalizeColorMapMin",
  "normalizeSize",
  "normalizeSizeClip",
  "normalizeSizeMax",
  "normalizeSizeMin",
  "plotType",
  "pointScaleType",
  "raUnits",
  "scaleFactor",
  "showFarSide",
  "sizeColumn",
  "startDateColumn",
  "timeSeries",
  "xAxisColumn",
  "xAxisReverse",
  "yAxisColumn",
  "yAxisReverse",
  "zAxisColumn",
  "zAxisReverse"
];
layerSettingNames.concat(justSpreadSheetLayerSettingNames);
function extractSpreadSheetLayerSettings(e) {
  var r, n, s = extractLayerSettings(e);
  try {
    for (var a = __values(justSpreadSheetLayerSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      s.push([l, e["get_" + l]()]);
    }
  } catch (o) {
    r = { error: o };
  } finally {
    try {
      t && !t.done && (n = a.return) && n.call(a);
    } finally {
      if (r)
        throw r.error;
    }
  }
  return s;
}
function copySpreadSheetLayerSettings(e, r) {
  var n, s;
  copyLayerSettings(e, r);
  try {
    for (var a = __values(justSpreadSheetLayerSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      r["set_" + l](e["get_" + l]());
    }
  } catch (o) {
    n = { error: o };
  } finally {
    try {
      t && !t.done && (s = a.return) && s.call(a);
    } finally {
      if (n)
        throw n.error;
    }
  }
}
(function(e) {
  __extends(r, e);
  function r(n) {
    var s = (
      // Here we redundantly copy the generic Layer settings, but TypeScript
      // requires the super() call. Oh well.
      e.call(this, n) || this
    );
    return copySpreadSheetLayerSettings(n, s), s;
  }
  return r.prototype.get_altColumn = function() {
    return this.altColumn;
  }, r.prototype.set_altColumn = function(n) {
    return this.altColumn = n, n;
  }, r.prototype.get_altType = function() {
    return this.altType;
  }, r.prototype.set_altType = function(n) {
    return this.altType = n, n;
  }, r.prototype.get_altUnit = function() {
    return this.altUnit;
  }, r.prototype.set_altUnit = function(n) {
    return this.altUnit = n, n;
  }, r.prototype.get_barChartBitmask = function() {
    return this.barChartBitmask;
  }, r.prototype.set_barChartBitmask = function(n) {
    return this.barChartBitmask = n, n;
  }, r.prototype.get_beginRange = function() {
    return this.beginRange;
  }, r.prototype.set_beginRange = function(n) {
    return this.beginRange = n, n;
  }, r.prototype.get_cartesianCustomScale = function() {
    return this.cartesianCustomScale;
  }, r.prototype.set_cartesianCustomScale = function(n) {
    return this.cartesianCustomScale = n, n;
  }, r.prototype.get_cartesianScale = function() {
    return this.cartesianScale;
  }, r.prototype.set_cartesianScale = function(n) {
    return this.cartesianScale = n, n;
  }, r.prototype.get_colorMapColumn = function() {
    return this.colorMapColumn;
  }, r.prototype.set_colorMapColumn = function(n) {
    return this.colorMapColumn = n, n;
  }, r.prototype.get_colorMapperName = function() {
    return this.colorMapperName;
  }, r.prototype.set_colorMapperName = function(n) {
    return this.colorMapperName = n, n;
  }, r.prototype.get_coordinatesType = function() {
    return this.coordinatesType;
  }, r.prototype.set_coordinatesType = function(n) {
    return this.coordinatesType = n, n;
  }, r.prototype.get_decay = function() {
    return this.decay;
  }, r.prototype.set_decay = function(n) {
    return this.decay = n, n;
  }, r.prototype.get_dynamicColor = function() {
    return this.dynamicColor;
  }, r.prototype.set_dynamicColor = function(n) {
    return this.dynamicColor = n, n;
  }, r.prototype.get_dynamicData = function() {
    return this.dynamicData;
  }, r.prototype.set_dynamicData = function(n) {
    return this.dynamicData = n, n;
  }, r.prototype.get_endDateColumn = function() {
    return this.endDateColumn;
  }, r.prototype.set_endDateColumn = function(n) {
    return this.endDateColumn = n, n;
  }, r.prototype.get_endRange = function() {
    return this.endRange;
  }, r.prototype.set_endRange = function(n) {
    return this.endRange = n, n;
  }, r.prototype.get_geometryColumn = function() {
    return this.geometryColumn;
  }, r.prototype.set_geometryColumn = function(n) {
    return this.geometryColumn = n, n;
  }, r.prototype.get_hyperlinkColumn = function() {
    return this.hyperlinkColumn;
  }, r.prototype.set_hyperlinkColumn = function(n) {
    return this.hyperlinkColumn = n, n;
  }, r.prototype.get_hyperlinkFormat = function() {
    return this.hyperlinkFormat;
  }, r.prototype.set_hyperlinkFormat = function(n) {
    return this.hyperlinkFormat = n, n;
  }, r.prototype.get_latColumn = function() {
    return this.latColumn;
  }, r.prototype.set_latColumn = function(n) {
    return this.latColumn = n, n;
  }, r.prototype.get_lngColumn = function() {
    return this.lngColumn;
  }, r.prototype.set_lngColumn = function(n) {
    return this.lngColumn = n, n;
  }, r.prototype.get_markerColumn = function() {
    return this.markerColumn;
  }, r.prototype.set_markerColumn = function(n) {
    return this.markerColumn = n, n;
  }, r.prototype.get_markerIndex = function() {
    return this.markerIndex;
  }, r.prototype.set_markerIndex = function(n) {
    return this.markerIndex = n, n;
  }, r.prototype.get_markerScale = function() {
    return this.markerScale;
  }, r.prototype.set_markerScale = function(n) {
    return this.markerScale = n, n;
  }, r.prototype.get_nameColumn = function() {
    return this.nameColumn;
  }, r.prototype.set_nameColumn = function(n) {
    return this.nameColumn = n, n;
  }, r.prototype.get_normalizeColorMap = function() {
    return this.normalizeColorMap;
  }, r.prototype.set_normalizeColorMap = function(n) {
    return this.normalizeColorMap = n, n;
  }, r.prototype.get_normalizeColorMapMax = function() {
    return this.normalizeColorMapMax;
  }, r.prototype.set_normalizeColorMapMax = function(n) {
    return this.normalizeColorMapMax = n, n;
  }, r.prototype.get_normalizeColorMapMin = function() {
    return this.normalizeColorMapMin;
  }, r.prototype.set_normalizeColorMapMin = function(n) {
    return this.normalizeColorMapMin = n, n;
  }, r.prototype.get_normalizeSize = function() {
    return this.normalizeSize;
  }, r.prototype.set_normalizeSize = function(n) {
    return this.normalizeSize = n, n;
  }, r.prototype.get_normalizeSizeClip = function() {
    return this.normalizeSizeClip;
  }, r.prototype.set_normalizeSizeClip = function(n) {
    return this.normalizeSizeClip = n, n;
  }, r.prototype.get_normalizeSizeMax = function() {
    return this.normalizeSizeMax;
  }, r.prototype.set_normalizeSizeMax = function(n) {
    return this.normalizeSizeMax = n, n;
  }, r.prototype.get_normalizeSizeMin = function() {
    return this.normalizeSizeMin;
  }, r.prototype.set_normalizeSizeMin = function(n) {
    return this.normalizeSizeMin = n, n;
  }, r.prototype.get_plotType = function() {
    return this.plotType;
  }, r.prototype.set_plotType = function(n) {
    return this.plotType = n, n;
  }, r.prototype.get_pointScaleType = function() {
    return this.pointScaleType;
  }, r.prototype.set_pointScaleType = function(n) {
    return this.pointScaleType = n, n;
  }, r.prototype.get_raUnits = function() {
    return this.raUnits;
  }, r.prototype.set_raUnits = function(n) {
    return this.raUnits = n, n;
  }, r.prototype.get_scaleFactor = function() {
    return this.scaleFactor;
  }, r.prototype.set_scaleFactor = function(n) {
    return this.scaleFactor = n, n;
  }, r.prototype.get_showFarSide = function() {
    return this.showFarSide;
  }, r.prototype.set_showFarSide = function(n) {
    return this.showFarSide = n, n;
  }, r.prototype.get_sizeColumn = function() {
    return this.sizeColumn;
  }, r.prototype.set_sizeColumn = function(n) {
    return this.sizeColumn = n, n;
  }, r.prototype.get_startDateColumn = function() {
    return this.startDateColumn;
  }, r.prototype.set_startDateColumn = function(n) {
    return this.startDateColumn = n, n;
  }, r.prototype.get_timeSeries = function() {
    return this.timeSeries;
  }, r.prototype.set_timeSeries = function(n) {
    return this.timeSeries = n, n;
  }, r.prototype.get_xAxisColumn = function() {
    return this.xAxisColumn;
  }, r.prototype.set_xAxisColumn = function(n) {
    return this.xAxisColumn = n, n;
  }, r.prototype.get_xAxisReverse = function() {
    return this.xAxisReverse;
  }, r.prototype.set_xAxisReverse = function(n) {
    return this.xAxisReverse = n, n;
  }, r.prototype.get_yAxisColumn = function() {
    return this.yAxisColumn;
  }, r.prototype.set_yAxisColumn = function(n) {
    return this.yAxisColumn = n, n;
  }, r.prototype.get_yAxisReverse = function() {
    return this.yAxisReverse;
  }, r.prototype.set_yAxisReverse = function(n) {
    return this.yAxisReverse = n, n;
  }, r.prototype.get_zAxisColumn = function() {
    return this.zAxisColumn;
  }, r.prototype.set_zAxisColumn = function(n) {
    return this.zAxisColumn = n, n;
  }, r.prototype.get_zAxisReverse = function() {
    return this.zAxisReverse;
  }, r.prototype.set_zAxisReverse = function(n) {
    return this.zAxisReverse = n, n;
  }, r;
})(LayerState);
var annotationSettingNames = [
  "id",
  "label",
  "opacity",
  "showHoverLabel",
  "tag"
], annotationSettingTypeInfo = {
  "id/string": !0,
  "label/string": !0,
  "opacity/number": !0,
  "showHoverLabel/boolean": !0,
  "tag/string": !0
};
function isAnnotationSetting(e) {
  var r = e[0] + "/" + typeof e[1];
  return r in annotationSettingTypeInfo;
}
function extractAnnotationSettings(e) {
  var r, n, s = [];
  try {
    for (var a = __values(annotationSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      s.push([l, e["get_" + l]()]);
    }
  } catch (o) {
    r = { error: o };
  } finally {
    try {
      t && !t.done && (n = a.return) && n.call(a);
    } finally {
      if (r)
        throw r.error;
    }
  }
  return s;
}
function copyAnnotationSettings(e, r) {
  var n, s;
  try {
    for (var a = __values(annotationSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      r["set_" + l](e["get_" + l]());
    }
  } catch (o) {
    n = { error: o };
  } finally {
    try {
      t && !t.done && (s = a.return) && s.call(a);
    } finally {
      if (n)
        throw n.error;
    }
  }
}
var AnnotationState = (
  /** @class */
  function() {
    function e(r) {
      copyAnnotationSettings(r, this);
    }
    return e.prototype.get_id = function() {
      return this.id;
    }, e.prototype.set_id = function(r) {
      return this.id = r, r;
    }, e.prototype.get_label = function() {
      return this.label;
    }, e.prototype.set_label = function(r) {
      return this.label = r, r;
    }, e.prototype.get_opacity = function() {
      return this.opacity;
    }, e.prototype.set_opacity = function(r) {
      return this.opacity = r, r;
    }, e.prototype.get_showHoverLabel = function() {
      return this.showHoverLabel;
    }, e.prototype.set_showHoverLabel = function(r) {
      return this.showHoverLabel = r, r;
    }, e.prototype.get_tag = function() {
      return this.tag;
    }, e.prototype.set_tag = function(r) {
      return this.tag = r, r;
    }, e;
  }()
), justCircleAnnotationSettingNames = [
  "fill",
  "fillColor",
  "lineColor",
  "lineWidth",
  "radius",
  "skyRelative"
];
annotationSettingNames.concat(justCircleAnnotationSettingNames);
var circleAnnotationSettingTypeInfo = {
  "fill/boolean": !0,
  "fillColor/string": !0,
  "lineColor/string": !0,
  "lineWidth/number": !0,
  "radius/number": !0,
  "skyRelative/boolean": !0
};
function isCircleAnnotationSetting(e) {
  var r = e[0] + "/" + typeof e[1];
  return r in circleAnnotationSettingTypeInfo || isAnnotationSetting(e);
}
function applyCircleAnnotationSetting(e, r) {
  var n = "set_" + r[0], s = r[1];
  e[n](s);
}
function extractCircleAnnotationSettings(e) {
  var r, n, s = extractAnnotationSettings(e);
  try {
    for (var a = __values(justCircleAnnotationSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      s.push([l, e["get_" + l]()]);
    }
  } catch (o) {
    r = { error: o };
  } finally {
    try {
      t && !t.done && (n = a.return) && n.call(a);
    } finally {
      if (r)
        throw r.error;
    }
  }
  return s;
}
function copyCircleAnnotationSettings(e, r) {
  var n, s;
  copyAnnotationSettings(e, r);
  try {
    for (var a = __values(justCircleAnnotationSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      r["set_" + l](e["get_" + l]());
    }
  } catch (o) {
    n = { error: o };
  } finally {
    try {
      t && !t.done && (s = a.return) && s.call(a);
    } finally {
      if (n)
        throw n.error;
    }
  }
}
(function(e) {
  __extends(r, e);
  function r(n) {
    var s = e.call(this, n) || this;
    return copyCircleAnnotationSettings(n, s), s;
  }
  return r.prototype.get_fill = function() {
    return this.fill;
  }, r.prototype.set_fill = function(n) {
    return this.fill = n, n;
  }, r.prototype.get_fillColor = function() {
    return this.fillColor;
  }, r.prototype.set_fillColor = function(n) {
    return this.fillColor = n, n;
  }, r.prototype.get_lineColor = function() {
    return this.lineColor;
  }, r.prototype.set_lineColor = function(n) {
    return this.lineColor = n, n;
  }, r.prototype.get_lineWidth = function() {
    return this.lineWidth;
  }, r.prototype.set_lineWidth = function(n) {
    return this.lineWidth = n, n;
  }, r.prototype.get_radius = function() {
    return this.radius;
  }, r.prototype.set_radius = function(n) {
    return this.radius = n, n;
  }, r.prototype.get_skyRelative = function() {
    return this.skyRelative;
  }, r.prototype.set_skyRelative = function(n) {
    return this.skyRelative = n, n;
  }, r;
})(AnnotationState);
var justPolyAnnotationSettingNames = [
  "fill",
  "fillColor",
  "lineColor",
  "lineWidth"
];
annotationSettingNames.concat(justPolyAnnotationSettingNames);
var polyAnnotationSettingTypeInfo = {
  "fill/boolean": !0,
  "fillColor/string": !0,
  "lineColor/string": !0,
  "lineWidth/number": !0
};
function isPolyAnnotationSetting(e) {
  var r = e[0] + "/" + typeof e[1];
  return r in polyAnnotationSettingTypeInfo || isAnnotationSetting(e);
}
function applyPolyAnnotationSetting(e, r) {
  var n = "set_" + r[0], s = r[1];
  e[n](s);
}
function extractPolyAnnotationSettings(e) {
  var r, n, s = extractAnnotationSettings(e);
  try {
    for (var a = __values(justPolyAnnotationSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      s.push([l, e["get_" + l]()]);
    }
  } catch (o) {
    r = { error: o };
  } finally {
    try {
      t && !t.done && (n = a.return) && n.call(a);
    } finally {
      if (r)
        throw r.error;
    }
  }
  return s;
}
function copyPolyAnnotationSettings(e, r) {
  var n, s;
  copyAnnotationSettings(e, r);
  try {
    for (var a = __values(justPolyAnnotationSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      r["set_" + l](e["get_" + l]());
    }
  } catch (o) {
    n = { error: o };
  } finally {
    try {
      t && !t.done && (s = a.return) && s.call(a);
    } finally {
      if (n)
        throw n.error;
    }
  }
}
(function(e) {
  __extends(r, e);
  function r(n) {
    var s = e.call(this, n) || this;
    return copyPolyAnnotationSettings(n, s), s;
  }
  return r.prototype.get_fill = function() {
    return this.fill;
  }, r.prototype.set_fill = function(n) {
    return this.fill = n, n;
  }, r.prototype.get_fillColor = function() {
    return this.fillColor;
  }, r.prototype.set_fillColor = function(n) {
    return this.fillColor = n, n;
  }, r.prototype.get_lineColor = function() {
    return this.lineColor;
  }, r.prototype.set_lineColor = function(n) {
    return this.lineColor = n, n;
  }, r.prototype.get_lineWidth = function() {
    return this.lineWidth;
  }, r.prototype.set_lineWidth = function(n) {
    return this.lineWidth = n, n;
  }, r;
})(AnnotationState);
var justPolyLineAnnotationSettingNames = [
  "lineColor",
  "lineWidth"
];
annotationSettingNames.concat(justPolyLineAnnotationSettingNames);
var polyLineAnnotationSettingTypeInfo = {
  "lineColor/string": !0,
  "lineWidth/number": !0
};
function isPolyLineAnnotationSetting(e) {
  var r = e[0] + "/" + typeof e[1];
  return r in polyLineAnnotationSettingTypeInfo || isAnnotationSetting(e);
}
function applyPolyLineAnnotationSetting(e, r) {
  var n = "set_" + r[0], s = r[1];
  e[n](s);
}
function extractPolyLineAnnotationSettings(e) {
  var r, n, s = extractAnnotationSettings(e);
  try {
    for (var a = __values(justPolyLineAnnotationSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      s.push([l, e["get_" + l]()]);
    }
  } catch (o) {
    r = { error: o };
  } finally {
    try {
      t && !t.done && (n = a.return) && n.call(a);
    } finally {
      if (r)
        throw r.error;
    }
  }
  return s;
}
function copyPolyLineAnnotationSettings(e, r) {
  var n, s;
  copyAnnotationSettings(e, r);
  try {
    for (var a = __values(justPolyLineAnnotationSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      r["set_" + l](e["get_" + l]());
    }
  } catch (o) {
    n = { error: o };
  } finally {
    try {
      t && !t.done && (s = a.return) && s.call(a);
    } finally {
      if (n)
        throw n.error;
    }
  }
}
(function(e) {
  __extends(r, e);
  function r(n) {
    var s = e.call(this, n) || this;
    return copyPolyLineAnnotationSettings(n, s), s;
  }
  return r.prototype.get_lineColor = function() {
    return this.lineColor;
  }, r.prototype.set_lineColor = function(n) {
    return this.lineColor = n, n;
  }, r.prototype.get_lineWidth = function() {
    return this.lineWidth;
  }, r.prototype.set_lineWidth = function(n) {
    return this.lineWidth = n, n;
  }, r;
})(AnnotationState);
var justVoTableLayerSettingNames = [
  "altColumn",
  "altType",
  "altUnit",
  "autoUpdate",
  "beginRange",
  "cartesianCustomScale",
  "cartesianScale",
  "colorMapColumn",
  "coordinatesType",
  "dataSourceUrl",
  "decay",
  "dynamicData",
  "endDateColumn",
  "endRange",
  "hyperlinkColumn",
  "hyperlinkFormat",
  "latColumn",
  "lngColumn",
  "markerColumn",
  "markerIndex",
  "markerScale",
  "nameColumn",
  "plotType",
  "pointScaleType",
  "raUnits",
  "scaleFactor",
  "showFarSide",
  "sizeColumn",
  "startDateColumn",
  "timeSeries",
  "xAxisColumn",
  "xAxisReverse",
  "yAxisColumn",
  "yAxisReverse",
  "zAxisColumn",
  "zAxisReverse"
];
layerSettingNames.concat(justVoTableLayerSettingNames);
function copyVoTableLayerSettings(e, r) {
  var n, s;
  copyLayerSettings(e, r);
  try {
    for (var a = __values(justVoTableLayerSettingNames), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      r["set_" + l](e["get_" + l]());
    }
  } catch (o) {
    n = { error: o };
  } finally {
    try {
      t && !t.done && (s = a.return) && s.call(a);
    } finally {
      if (n)
        throw n.error;
    }
  }
}
(function(e) {
  __extends(r, e);
  function r(n) {
    var s = (
      // Here we redundantly copy the generic Layer settings, but TypeScript
      // requires the super() call. Oh well.
      e.call(this, n) || this
    );
    return copyVoTableLayerSettings(n, s), s;
  }
  return r.prototype.get_altColumn = function() {
    return this.altColumn;
  }, r.prototype.set_altColumn = function(n) {
    return this.altColumn = n, n;
  }, r.prototype.get_altType = function() {
    return this.altType;
  }, r.prototype.set_altType = function(n) {
    return this.altType = n, n;
  }, r.prototype.get_altUnit = function() {
    return this.altUnit;
  }, r.prototype.set_altUnit = function(n) {
    return this.altUnit = n, n;
  }, r.prototype.get_autoUpdate = function() {
    return this.autoUpdate;
  }, r.prototype.set_autoUpdate = function(n) {
    return this.autoUpdate = n, n;
  }, r.prototype.get_beginRange = function() {
    return this.beginRange;
  }, r.prototype.set_beginRange = function(n) {
    return this.beginRange = n, n;
  }, r.prototype.get_cartesianCustomScale = function() {
    return this.cartesianCustomScale;
  }, r.prototype.set_cartesianCustomScale = function(n) {
    return this.cartesianCustomScale = n, n;
  }, r.prototype.get_cartesianScale = function() {
    return this.cartesianScale;
  }, r.prototype.set_cartesianScale = function(n) {
    return this.cartesianScale = n, n;
  }, r.prototype.get_colorMapColumn = function() {
    return this.colorMapColumn;
  }, r.prototype.set_colorMapColumn = function(n) {
    return this.colorMapColumn = n, n;
  }, r.prototype.get_coordinatesType = function() {
    return this.coordinatesType;
  }, r.prototype.set_coordinatesType = function(n) {
    return this.coordinatesType = n, n;
  }, r.prototype.get_dataSourceUrl = function() {
    return this.dataSourceUrl;
  }, r.prototype.set_dataSourceUrl = function(n) {
    return this.dataSourceUrl = n, n;
  }, r.prototype.get_decay = function() {
    return this.decay;
  }, r.prototype.set_decay = function(n) {
    return this.decay = n, n;
  }, r.prototype.get_dynamicData = function() {
    return this.dynamicData;
  }, r.prototype.set_dynamicData = function(n) {
    return this.dynamicData = n, n;
  }, r.prototype.get_endDateColumn = function() {
    return this.endDateColumn;
  }, r.prototype.set_endDateColumn = function(n) {
    return this.endDateColumn = n, n;
  }, r.prototype.get_endRange = function() {
    return this.endRange;
  }, r.prototype.set_endRange = function(n) {
    return this.endRange = n, n;
  }, r.prototype.get_hyperlinkColumn = function() {
    return this.hyperlinkColumn;
  }, r.prototype.set_hyperlinkColumn = function(n) {
    return this.hyperlinkColumn = n, n;
  }, r.prototype.get_hyperlinkFormat = function() {
    return this.hyperlinkFormat;
  }, r.prototype.set_hyperlinkFormat = function(n) {
    return this.hyperlinkFormat = n, n;
  }, r.prototype.get_latColumn = function() {
    return this.latColumn;
  }, r.prototype.set_latColumn = function(n) {
    return this.latColumn = n, n;
  }, r.prototype.get_lngColumn = function() {
    return this.lngColumn;
  }, r.prototype.set_lngColumn = function(n) {
    return this.lngColumn = n, n;
  }, r.prototype.get_markerColumn = function() {
    return this.markerColumn;
  }, r.prototype.set_markerColumn = function(n) {
    return this.markerColumn = n, n;
  }, r.prototype.get_markerIndex = function() {
    return this.markerIndex;
  }, r.prototype.set_markerIndex = function(n) {
    return this.markerIndex = n, n;
  }, r.prototype.get_markerScale = function() {
    return this.markerScale;
  }, r.prototype.set_markerScale = function(n) {
    return this.markerScale = n, n;
  }, r.prototype.get_nameColumn = function() {
    return this.nameColumn;
  }, r.prototype.set_nameColumn = function(n) {
    return this.nameColumn = n, n;
  }, r.prototype.get_plotType = function() {
    return this.plotType;
  }, r.prototype.set_plotType = function(n) {
    return this.plotType = n, n;
  }, r.prototype.get_pointScaleType = function() {
    return this.pointScaleType;
  }, r.prototype.set_pointScaleType = function(n) {
    return this.pointScaleType = n, n;
  }, r.prototype.get_raUnits = function() {
    return this.raUnits;
  }, r.prototype.set_raUnits = function(n) {
    return this.raUnits = n, n;
  }, r.prototype.get_scaleFactor = function() {
    return this.scaleFactor;
  }, r.prototype.set_scaleFactor = function(n) {
    return this.scaleFactor = n, n;
  }, r.prototype.get_showFarSide = function() {
    return this.showFarSide;
  }, r.prototype.set_showFarSide = function(n) {
    return this.showFarSide = n, n;
  }, r.prototype.get_sizeColumn = function() {
    return this.sizeColumn;
  }, r.prototype.set_sizeColumn = function(n) {
    return this.sizeColumn = n, n;
  }, r.prototype.get_startDateColumn = function() {
    return this.startDateColumn;
  }, r.prototype.set_startDateColumn = function(n) {
    return this.startDateColumn = n, n;
  }, r.prototype.get_timeSeries = function() {
    return this.timeSeries;
  }, r.prototype.set_timeSeries = function(n) {
    return this.timeSeries = n, n;
  }, r.prototype.get_xAxisColumn = function() {
    return this.xAxisColumn;
  }, r.prototype.set_xAxisColumn = function(n) {
    return this.xAxisColumn = n, n;
  }, r.prototype.get_xAxisReverse = function() {
    return this.xAxisReverse;
  }, r.prototype.set_xAxisReverse = function(n) {
    return this.xAxisReverse = n, n;
  }, r.prototype.get_yAxisColumn = function() {
    return this.yAxisColumn;
  }, r.prototype.set_yAxisColumn = function(n) {
    return this.yAxisColumn = n, n;
  }, r.prototype.get_yAxisReverse = function() {
    return this.yAxisReverse;
  }, r.prototype.set_yAxisReverse = function(n) {
    return this.yAxisReverse = n, n;
  }, r.prototype.get_zAxisColumn = function() {
    return this.zAxisColumn;
  }, r.prototype.set_zAxisColumn = function(n) {
    return this.zAxisColumn = n, n;
  }, r.prototype.get_zAxisReverse = function() {
    return this.zAxisReverse;
  }, r.prototype.set_zAxisReverse = function(n) {
    return this.zAxisReverse = n, n;
  }, r;
})(LayerState);
function isAddLinePointMessage(e) {
  return typeof e.event == "string" && e.event == "line_add_point" && typeof e.id == "string" && typeof e.ra == "number" && typeof e.dec == "number";
}
function isAddPolygonPointMessage(e) {
  return typeof e.event == "string" && e.event == "polygon_add_point" && typeof e.id == "string" && typeof e.ra == "number" && typeof e.dec == "number";
}
function isCenterOnCoordinatesMessage(e) {
  return typeof e.event == "string" && e.event == "center_on_coordinates" && typeof e.ra == "number" && typeof e.dec == "number" && typeof e.fov == "number" && typeof e.instant == "boolean" && (e.roll === void 0 || typeof e.roll == "number");
}
function isClearAnnotationsMessage(e) {
  return typeof e.event == "string" && e.event == "clear_annotations";
}
function isCreateAnnotationMessage(e) {
  return typeof e.event == "string" && e.event == "annotation_create" && typeof e.shape == "string" && (e.shape == "circle" || e.shape == "line" || e.shape == "polygon") && typeof e.id == "string";
}
function isCreateImageSetLayerMessage(e) {
  return typeof e.event == "string" && e.event == "image_layer_create" && typeof e.id == "string" && typeof e.url == "string" && (e.mode == "autodetect" || e.mode == "fits" || e.mode == "preloaded") && (e.goto === void 0 || typeof e.goto == "boolean") && (e.name === void 0 || typeof e.name == "string");
}
function isCreateFitsLayerMessage(e) {
  return typeof e.event == "string" && e.event == "image_layer_create" && typeof e.id == "string" && typeof e.url == "string" && typeof e.mode > "u";
}
function isSetLayerOrderMessage(e) {
  return typeof e.event == "string" && e.event == "image_layer_order" && typeof e.id == "string" && typeof e.version == "number" && typeof e.order == "number";
}
function isCreateTableLayerMessage(e) {
  return typeof e.event == "string" && e.event == "table_layer_create" && typeof e.id == "string" && typeof e.table == "string" && typeof e.frame == "string";
}
function isLoadImageCollectionMessage(e) {
  return typeof e.event == "string" && e.event == "load_image_collection" && typeof e.url == "string" && (e.loadChildFolders === void 0 || typeof e.loadChildFolders == "boolean") && (e.threadId === void 0 || typeof e.threadId == "string");
}
function isLoadImageCollectionCompletedMessage(e) {
  return typeof e.event == "string" && e.event == "load_image_collection_completed" && typeof e.url == "string" && (e.threadId === void 0 || typeof e.threadId == "string");
}
function isLoadTourMessage(e) {
  return typeof e.event == "string" && e.event == "load_tour" && typeof e.url == "string";
}
function isModifyAnnotationMessage(e) {
  return typeof e.event == "string" && e.event == "annotation_set" && typeof e.id == "string" && typeof e.setting == "string" && typeof e.value < "u";
}
function isModifyFitsLayerMessage(e) {
  return typeof e.event == "string" && e.event == "image_layer_set" && typeof e.id == "string" && typeof e.setting == "string" && typeof e.value < "u";
}
function isModifySettingMessage(e) {
  return typeof e.event == "string" && e.event == "setting_set" && typeof e.setting == "string" && typeof e.value < "u";
}
function isModifyTableLayerMessage(e) {
  return typeof e.event == "string" && e.event == "table_layer_set" && typeof e.id == "string" && typeof e.setting == "string" && typeof e.value < "u";
}
function isPauseTimeMessage(e) {
  return typeof e.event == "string" && e.event == "pause_time";
}
function isPauseTourMessage(e) {
  return typeof e.event == "string" && e.event == "pause_tour";
}
function isRemoveAnnotationMessage(e) {
  return typeof e.event == "string" && e.event == "remove_annotation" && typeof e.id == "string";
}
function isRemoveImageSetLayerMessage(e) {
  return typeof e.event == "string" && e.event == "image_layer_remove" && typeof e.id == "string";
}
function isRemoveTableLayerMessage(e) {
  return typeof e.event == "string" && e.event == "table_layer_remove" && typeof e.id == "string";
}
function isResumeTimeMessage(e) {
  return typeof e.event == "string" && e.event == "resume_time" && typeof e.rate == "number";
}
function isResumeTourMessage(e) {
  return typeof e.event == "string" && e.event == "resume_tour";
}
function isSetBackgroundByNameMessage(e) {
  return typeof e.event == "string" && e.event == "set_background_by_name" && typeof e.name == "string";
}
function isSetCircleCenterMessage(e) {
  return typeof e.event == "string" && e.event == "circle_set_center" && typeof e.id == "string" && typeof e.ra == "number" && typeof e.dec == "number";
}
function isSetDatetimeMessage(e) {
  return typeof e.event == "string" && e.event == "set_datetime" && typeof e.isot == "string";
}
function isSetFitsLayerColormapMessage(e) {
  return typeof e.event == "string" && e.event == "image_layer_cmap" && typeof e.id == "string" && typeof e.version == "number" && typeof e.cmap == "string";
}
function isSetForegroundByNameMessage(e) {
  return typeof e.event == "string" && e.event == "set_foreground_by_name" && typeof e.name == "string";
}
function isSetForegroundOpacityMessage(e) {
  return typeof e.event == "string" && e.event == "set_foreground_opacity" && typeof e.value == "number";
}
function isSetViewerModeMessage(e) {
  return typeof e.event == "string" && e.event == "set_viewer_mode" && typeof e.mode == "string";
}
function isStretchFitsLayerMessage(e) {
  return typeof e.event == "string" && e.event == "image_layer_stretch" && typeof e.id == "string" && typeof e.version == "number" && typeof e.stretch == "number" && typeof e.vmin == "number" && typeof e.vmax == "number";
}
function isTrackObjectMessage(e) {
  return typeof e.event == "string" && e.event == "track_object" && typeof e.code == "number";
}
function isUpdateTableLayerMessage(e) {
  return typeof e.event == "string" && e.event == "table_layer_update" && typeof e.id == "string" && typeof e.table == "string";
}
var pywwtSpreadSheetLayerSettingTypeInfo = {
  "altColumn/string": !0,
  "altColumn/number": !0,
  "altType/string": !0,
  "altUnit/string": !0,
  "astronomical/boolean": !0,
  "barChartBitmask/number": !0,
  "beginRange/Date": !0,
  "cartesianCustomScale/number": !0,
  "cartesianScale/string": !0,
  "color/string": !0,
  "colorMapColumn/string": !0,
  "colorMapColumn/number": !0,
  "colorMapperName/string": !0,
  "coordinatesType/string": !0,
  "decay/number": !0,
  "dynamicColor/boolean": !0,
  "dynamicData/boolean": !0,
  "enabled/boolean": !0,
  "endDateColumn/string": !0,
  "endDateColumn/number": !0,
  "endRange/Date": !0,
  "fadeSpan/number": !0,
  "geometryColumn/string": !0,
  "geometryColumn/number": !0,
  "hyperlinkColumn/string": !0,
  "hyperlinkColumn/number": !0,
  "hyperlinkFormat/string": !0,
  "latColumn/string": !0,
  "latColumn/number": !0,
  "lngColumn/string": !0,
  "lngColumn/number": !0,
  "markerColumn/string": !0,
  "markerColumn/number": !0,
  "markerIndex/number": !0,
  "markerScale/string": !0,
  "name/string": !0,
  "nameColumn/string": !0,
  "nameColumn/number": !0,
  "normalizeColorMap/boolean": !0,
  "normalizeColorMapMax/number": !0,
  "normalizeColorMapMin/number": !0,
  "normalizeSize/boolean": !0,
  "normalizeSizeClip/boolean": !0,
  "normalizeSizeMax/number": !0,
  "normalizeSizeMin/number": !0,
  "opacity/number": !0,
  "opened/boolean": !0,
  "plotType/string": !0,
  "pointScaleType/number": !0,
  "raUnits/string": !0,
  "referenceFrame/string": !0,
  "scaleFactor/number": !0,
  "showFarSide/boolean": !0,
  "sizeColumn/string": !0,
  "sizeColumn/number": !0,
  "startDateColumn/string": !0,
  "startDateColumn/number": !0,
  "timeSeries/boolean": !0,
  "version/number": !0,
  "xAxisColumn/string": !0,
  "xAxisColumn/number": !0,
  "xAxisReverse/boolean": !0,
  "yAxisColumn/string": !0,
  "yAxisColumn/number": !0,
  "yAxisReverse/boolean": !0,
  "zAxisColumn/string": !0,
  "zAxisColumn/number": !0,
  "zAxisReverse/boolean": !0
};
function isPywwtSpreadSheetLayerSetting(e) {
  var r = e[0] + "/" + typeof e[1];
  return r in pywwtSpreadSheetLayerSettingTypeInfo;
}
function isLoadHipsCatalogMessage(e) {
  return e.event === "layer_hipscat_load" && typeof e.tableId == "string" && typeof e.name == "string" && (typeof e.threadId > "u" || typeof e.threadId == "string");
}
function isLoadHipsCatalogCompletedMessage(e) {
  return e.event == "layer_hipscat_load_completed" && typeof e.threadId == "string" && typeof e.spreadsheetInfo == "object";
}
function isGetHipsCatalogDataInViewMessage(e) {
  return e.event === "layer_hipscat_datainview" && typeof e.threadId == "string" && typeof e.tableId == "string" && typeof e.limit == "boolean";
}
function isMultiModifyTableLayerMessage(e) {
  return e.event === "table_layer_set_multi" && typeof e.id == "string" && typeof e.settings == "object" && typeof e.values == "object";
}
function isMultiModifyFitsLayerMessage(e) {
  return e.event === "image_layer_set_multi" && typeof e.id == "string" && typeof e.settings == "object" && typeof e.values == "object";
}
function isMultiModifyAnnotationMessage(e) {
  return e.event === "annotation_set_multi" && typeof e.id == "string" && typeof e.settings == "object" && typeof e.values == "object";
}
var ImageSetTypes = ["earth", "planet", "sky", "panorama", "solarSystem", "sandbox"];
function isAddSourceMessage(e) {
  return e.type === "add_source" && typeof e.source == "object";
}
function isModifySelectabilityMessage(e) {
  return e.type === "modify_selectability" && typeof e.id == "string" && typeof e.selectable == "boolean";
}
function isModifyAllSelectabilityMessage(e) {
  return e.type === "modify_all_selectability" && typeof e.selectable == "boolean";
}
function isGenericSetting(e) {
  return Object.prototype.toString.call(e) === "[object Array]" && e.length == 2 && typeof e[0] == "string";
}
var appSettingTypeInfo = {
  "hideAllChrome/boolean": !0,
  "selectionProximity/number": 4
};
function isAppSetting(e) {
  var r = e[0] + "/" + typeof e[1];
  return r in appSettingTypeInfo;
}
function maybeAsModifiedAppSettings(e) {
  var r, n;
  if (e.event !== "modify_settings" || e.target !== "app" || Object.prototype.toString.call(e.settings) !== "[object Array]")
    return null;
  var s = [];
  try {
    for (var a = __values(e.settings), t = a.next(); !t.done; t = a.next()) {
      var l = t.value;
      isGenericSetting(l) && isAppSetting(l) && s.push(l);
    }
  } catch (o) {
    r = { error: o };
  } finally {
    try {
      t && !t.done && (n = a.return) && n.call(a);
    } finally {
      if (r)
        throw r.error;
    }
  }
  return s;
}
function isGetViewAsTourMessage(e) {
  return e.type === "get_view_as_tour" && typeof e.threadId == "string";
}
function isPingPongMessage(e) {
  return typeof e.type == "string" && e.type == "wwt_ping_pong" && typeof e.threadId == "string" && (e.sessionId === void 0 || typeof e.sessionId == "string");
}
const researchAppEngineSettingTypeInfo = {
  "altAzGridColor/string": !0,
  "eclipticColor/string": !0,
  "eclipticGridColor/string": !0,
  "equatorialGridColor/string": !0,
  "galacticGridColor/string": !0,
  "precessionChartColor/string": !0
};
function isResearchAppEngineSetting(e) {
  return isBaseEngineSetting(e) ? !0 : e[0] + "/" + typeof e[1] in researchAppEngineSettingTypeInfo;
}
function colValToIndex(e, r) {
  return typeof r == "number" ? r : e.get_header().indexOf(r);
}
const typedAltTypes = AltTypes, typedAltUnits = AltUnits, typedCoordinatesType = CoordinatesType, typedMarkerScales = MarkerScales, typedPlotTypes = PlotTypes, typedRAUnits = RAUnits;
function enumNameToValue(e, r, n) {
  const s = r[n];
  return s === void 0 ? null : [e, s];
}
function enumValueToName(e, r, n) {
  for (const [s, a] of Object.entries(r))
    if (a === n)
      return [e, s];
  return null;
}
function convertPywwtSpreadSheetLayerSetting(e, r) {
  return e[0] == "altColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "altType" ? enumNameToValue(e[0], typedAltTypes, e[1]) : e[0] == "altUnit" || e[0] == "cartesianScale" ? enumNameToValue(e[0], typedAltUnits, e[1]) : e[0] == "color" ? [e[0], srcExports.Color.fromHex(e[1])] : e[0] == "colorMapColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "coordinatesType" ? enumNameToValue(e[0], typedCoordinatesType, e[1]) : e[0] == "endDateColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "geometryColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "hyperlinkColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "latColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "lngColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "markerColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "markerScale" ? enumNameToValue(e[0], typedMarkerScales, e[1]) : e[0] == "nameColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "plotType" ? enumNameToValue(e[0], typedPlotTypes, e[1]) : e[0] == "pointScaleType" ? e[1] in PointScaleTypes ? [e[0], e[1]] : null : e[0] == "raUnits" ? enumNameToValue(e[0], typedRAUnits, e[1]) : e[0] == "sizeColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "startDateColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "xAxisColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "yAxisColumn" ? [e[0], colValToIndex(r, e[1])] : e[0] == "zAxisColumn" ? [e[0], colValToIndex(r, e[1])] : e;
}
function convertSpreadSheetLayerSetting(e) {
  return e[0] == "altType" ? enumValueToName(e[0], typedAltTypes, e[1]) : e[0] == "altUnit" || e[0] == "cartesianScale" ? enumValueToName(e[0], typedAltUnits, e[1]) : e[0] == "color" ? [e[0], e[1].toString()] : e[0] == "coordinatesType" ? enumValueToName(e[0], typedCoordinatesType, e[1]) : e[0] == "markerScale" ? enumValueToName(e[0], typedMarkerScales, e[1]) : e[0] == "plotType" ? enumValueToName(e[0], typedPlotTypes, e[1]) : e[0] == "raUnits" ? enumValueToName(e[0], typedRAUnits, e[1]) : e;
}
function convertEngineSetting(e) {
  return e[0] == "altAzGridColor" ? [e[0], srcExports.Color.load(e[1])] : e[0] == "eclipticColor" ? [e[0], srcExports.Color.load(e[1])] : e[0] == "eclipticGridColor" ? [e[0], srcExports.Color.load(e[1])] : e[0] == "equatorialGridColor" ? [e[0], srcExports.Color.load(e[1])] : e[0] == "galacticGridColor" ? [e[0], srcExports.Color.load(e[1])] : e[0] == "precessionChartColor" ? [e[0], srcExports.Color.load(e[1])] : e;
}
const D2R = Math.PI / 180, R2D$1 = 180 / Math.PI;
class ImageSetLayerMessageHandler {
  constructor(r) {
    ar(this, "owner");
    ar(this, "created", !1);
    ar(this, "internalId", null);
    ar(this, "colormapVersion", -1);
    ar(this, "stretchVersion", -1);
    ar(this, "orderVersion", -1);
    ar(this, "queuedStretch", null);
    ar(this, "queuedColormap", null);
    ar(this, "queuedSettings", []);
    ar(this, "queuedRemoval", null);
    ar(this, "queuedOrder", null);
    this.owner = r;
  }
  handleCreateMessage(r) {
    if (this.created)
      return;
    const n = r.mode || "autodetect", s = r.goto == null ? !0 : r.goto, a = r.name == null ? r.id : r.name;
    this.owner.addImageSetLayer({
      url: r.url,
      mode: n,
      name: a,
      goto: s
    }).then((t) => this.layerInitialized(t)), this.created = !0;
  }
  layerInitialized(r) {
    this.internalId = r.id.toString(), this.queuedStretch !== null && (this.handleStretchMessage(this.queuedStretch), this.queuedStretch = null), this.queuedColormap !== null && (this.handleSetColormapMessage(this.queuedColormap), this.queuedColormap = null), this.owner.applyFitsLayerSettings({
      id: this.internalId,
      settings: this.queuedSettings
    }), this.queuedSettings = [], this.queuedRemoval !== null && (this.handleRemoveMessage(this.queuedRemoval), this.queuedRemoval = null);
  }
  handleSetLayerOrderMessage(r) {
    this.internalId === null ? (this.queuedOrder === null || r.version > this.queuedOrder.version) && (this.queuedOrder = r) : r.version > this.orderVersion && (this.owner.setImageSetLayerOrder({
      id: this.internalId,
      order: r.order
    }), this.orderVersion = r.version);
  }
  handleStretchMessage(r) {
    this.internalId === null ? (this.queuedStretch === null || r.version > this.queuedStretch.version) && (this.queuedStretch = r) : r.version > this.stretchVersion && (this.owner.stretchFitsLayer({
      id: this.internalId,
      stretch: r.stretch,
      vmin: r.vmin,
      vmax: r.vmax
    }), this.stretchVersion = r.version);
  }
  handleSetColormapMessage(r) {
    this.internalId === null ? (this.queuedColormap === null || r.version > this.queuedColormap.version) && (this.queuedColormap = r) : r.version > this.colormapVersion && (this.owner.setFitsLayerColormap({
      id: this.internalId,
      name: r.cmap
    }), this.colormapVersion = r.version);
  }
  handleModifyMessage(r) {
    const n = [r.setting, r.value];
    isImageSetLayerSetting(n) && (this.internalId === null ? this.queuedSettings.push(n) : this.owner.applyFitsLayerSettings({
      id: this.internalId,
      settings: [n]
    }));
  }
  handleMultiModifyMessage(r) {
    if (!isMultiModifyFitsLayerMessage(r) || r.settings.length !== r.values.length)
      return;
    const n = [];
    for (const [s, a] of r.settings.entries()) {
      const t = [a, r.values[s]];
      isImageSetLayerSetting(t) && n.push(t);
    }
    this.internalId === null ? n.forEach((s) => this.queuedSettings.push(s)) : this.owner.applyFitsLayerSettings({
      id: this.internalId,
      settings: n
    });
  }
  handleRemoveMessage(r) {
    this.internalId === null ? this.queuedRemoval === null && (this.queuedRemoval = r) : (this.owner.deleteLayer(this.internalId), this.internalId = null, this.created = !1);
  }
}
class TableLayerMessageHandler {
  constructor(r) {
    ar(this, "owner");
    ar(this, "created", !1);
    ar(this, "isHips", !1);
    ar(this, "internalId", null);
    ar(this, "layer", null);
    // hack for settings
    ar(this, "imageset", null);
    // hack for HiPS catalogs
    ar(this, "queuedUpdate", null);
    ar(this, "queuedSettings", []);
    ar(this, "queuedRemoval", null);
    ar(this, "queuedSelectability", null);
    this.owner = r;
  }
  handleCreateMessage(r) {
    if (this.created)
      return;
    const n = atob(r.table);
    this.owner.createTableLayer({
      name: r.id,
      referenceFrame: r.frame,
      dataCsv: n
    }).then((s) => {
      this.layerInitialized(s), this.owner.addResearchAppTableLayer(
        new index_umdExports.SpreadSheetLayerInfo(
          s.id.toString(),
          s.get_referenceFrame(),
          s.get_name()
        )
      );
    }), this.created = !0;
  }
  setupHipsCatalog(r, n) {
    this.created = !0, this.isHips = !0, this.imageset = r, this.layerInitialized(n);
  }
  layerInitialized(r) {
    this.internalId = r.id.toString(), this.layer = r, this.queuedUpdate !== null && (this.handleUpdateMessage(this.queuedUpdate), this.queuedUpdate = null);
    const n = [];
    for (const s of this.queuedSettings) {
      const a = convertPywwtSpreadSheetLayerSetting(s, r);
      a !== null && n.push(a);
    }
    this.owner.applyTableLayerSettings({
      id: this.internalId,
      settings: n
    }), this.queuedSettings = [], this.queuedRemoval !== null && (this.handleRemoveMessage(this.queuedRemoval), this.queuedRemoval = null), this.queuedSelectability !== null && (this.handleSelectabilityMessage(this.queuedSelectability), this.queuedSelectability = null);
  }
  handleUpdateMessage(r) {
    this.internalId === null ? this.queuedUpdate = r : this.isHips || this.owner.updateTableLayer({
      id: this.internalId,
      dataCsv: atob(r.table)
    });
  }
  handleModifyMessage(r) {
    const n = [r.setting, r.value];
    if (isPywwtSpreadSheetLayerSetting(n))
      if (this.layer === null || this.internalId === null)
        this.queuedSettings.push(n);
      else {
        const s = convertPywwtSpreadSheetLayerSetting(n, this.layer);
        s !== null && this.owner.applyTableLayerSettings({
          id: this.internalId,
          settings: [s]
        });
      }
  }
  handleMultiModifyMessage(r) {
    if (!isMultiModifyTableLayerMessage(r) || r.settings.length !== r.values.length)
      return;
    const n = this.owner.spreadSheetLayerById(r.id);
    if (n) {
      const s = [];
      for (const [a, t] of r.settings.entries()) {
        const l = [t, r.values[a]];
        isPywwtSpreadSheetLayerSetting(l) && s.push(l);
      }
      if (this.internalId === null)
        s.forEach((a) => this.queuedSettings.push(a));
      else {
        const a = s.flatMap((t) => {
          const l = convertPywwtSpreadSheetLayerSetting(t, n);
          return l ? [l] : [];
        });
        this.owner.applyTableLayerSettings({
          id: this.internalId,
          settings: a
        });
      }
    }
  }
  async handleGetHipsDataInViewMessage(r) {
    return this.imageset === null || this.layer === null || this.internalId === null || !this.isHips ? null : this.owner.getCatalogHipsDataInView({
      imageset: this.imageset,
      limit: r.limit
    }).then((n) => ({
      event: "layer_hipscat_datainview_reply",
      threadId: r.threadId,
      data: n.table,
      aborted: n.aborted
    }));
  }
  handleRemoveMessage(r) {
    if (this.internalId === null)
      this.queuedRemoval === null && (this.queuedRemoval = r);
    else if (this.isHips && this.imageset !== null) {
      const n = this.imageset.get_name();
      for (const s of this.owner.curAvailableCatalogs)
        s.name == n && (this.owner.removeResearchAppTableLayer(s), this.owner.removeCatalogHipsByName(n));
    } else {
      if (this.owner.deleteLayer(this.internalId), this.layer !== null) {
        const n = new index_umdExports.SpreadSheetLayerInfo(
          this.layer.id.toString(),
          this.layer.get_referenceFrame(),
          this.layer.get_name()
        );
        this.owner.removeResearchAppTableLayer(n);
      }
      this.internalId = null, this.created = !1;
    }
  }
  handleSelectabilityMessage(r) {
    if (this.internalId === null)
      this.queuedSelectability === null && (this.queuedSelectability = r);
    else {
      const n = this.owner.spreadsheetLayers.find((s) => s.name === r.id);
      n !== void 0 && this.owner.setResearchAppTableLayerSelectability({
        layer: n,
        selectable: r.selectable
      });
    }
  }
}
class AnnotationMessageHandler {
  constructor(r, n, s) {
    ar(this, "owner");
    ar(this, "ann");
    this.owner = r, this.ann = n, n.set_id(s), r.addAnnotation(n);
  }
  static tryCreate(r, n) {
    if (n.shape == "circle") {
      const s = new srcExports.Circle();
      return s.set_fill(!1), s.set_skyRelative(!0), s.setCenter(r.wwtRARad * R2D$1, r.wwtDecRad * R2D$1), new AnnotationMessageHandler(r, s, n.id);
    } else if (n.shape == "polygon") {
      const s = new srcExports.Poly();
      return s.set_fill(!1), new AnnotationMessageHandler(r, s, n.id);
    } else if (n.shape == "line")
      return new AnnotationMessageHandler(r, new srcExports.PolyLine(), n.id);
    return null;
  }
  handleModifyAnnotationMessage(r) {
    const n = [r.setting, r.value];
    this.ann instanceof srcExports.Circle && isCircleAnnotationSetting(n) ? applyCircleAnnotationSetting(this.ann, n) : this.ann instanceof srcExports.Poly && isPolyAnnotationSetting(n) ? applyPolyAnnotationSetting(this.ann, n) : this.ann instanceof srcExports.PolyLine && isPolyLineAnnotationSetting(n) && applyPolyLineAnnotationSetting(this.ann, n);
  }
  handleMultiModifyAnnotationMessage(r) {
    for (const [n, s] of r.settings.entries()) {
      const a = [s, r.values[n]];
      this.ann instanceof srcExports.Circle && isCircleAnnotationSetting(a) ? applyCircleAnnotationSetting(this.ann, a) : this.ann instanceof srcExports.Poly && isPolyAnnotationSetting(a) ? applyPolyAnnotationSetting(this.ann, a) : this.ann instanceof srcExports.PolyLine && isPolyLineAnnotationSetting(a) && applyPolyLineAnnotationSetting(this.ann, a);
    }
  }
  handleRemoveAnnotationMessage(r) {
    this.owner.removeAnnotation(this.ann);
  }
  handleSetCircleCenterMessage(r) {
    this.ann instanceof srcExports.Circle && this.ann.setCenter(r.ra, r.dec);
  }
  handleAddLinePointMessage(r) {
    this.ann instanceof srcExports.PolyLine && this.ann.addPoint(r.ra, r.dec);
  }
  handleAddPolygonPointMessage(r) {
    this.ann instanceof srcExports.Poly && this.ann.addPoint(r.ra, r.dec);
  }
  annotation() {
    return this.ann;
  }
}
class KeyPressInfo {
  constructor(r, n) {
    ar(this, "code");
    ar(this, "ctrl");
    ar(this, "alt");
    ar(this, "shift");
    ar(this, "meta");
    this.code = r, this.ctrl = (n == null ? void 0 : n.ctrl) ?? !1, this.alt = (n == null ? void 0 : n.alt) ?? !1, this.shift = (n == null ? void 0 : n.shift) ?? !1, this.meta = (n == null ? void 0 : n.meta) ?? !1;
  }
  matches(r) {
    return r.code === this.code && r.ctrlKey === this.ctrl && r.altKey === this.alt && r.shiftKey === this.shift && r.metaKey === this.meta;
  }
}
class KeyboardControlSettings {
  constructor({
    zoomIn: r = [new KeyPressInfo("KeyZ"), new KeyPressInfo("PageUp")],
    zoomOut: n = [new KeyPressInfo("KeyX"), new KeyPressInfo("PageDown")],
    moveUp: s = [new KeyPressInfo("KeyI"), new KeyPressInfo("ArrowUp")],
    moveDown: a = [new KeyPressInfo("KeyK"), new KeyPressInfo("ArrowDown")],
    moveLeft: t = [new KeyPressInfo("KeyJ"), new KeyPressInfo("ArrowLeft")],
    moveRight: l = [new KeyPressInfo("KeyL"), new KeyPressInfo("ArrowRight")],
    tiltUp: o = [
      new KeyPressInfo("KeyI", { alt: !0 }),
      new KeyPressInfo("ArrowUp", { alt: !0 })
    ],
    tiltDown: c = [
      new KeyPressInfo("KeyK", { alt: !0 }),
      new KeyPressInfo("ArrowDown", { alt: !0 })
    ],
    tiltLeft: _ = [
      new KeyPressInfo("KeyJ", { alt: !0 }),
      new KeyPressInfo("ArrowLeft", { alt: !0 })
    ],
    tiltRight: u = [
      new KeyPressInfo("KeyL", { alt: !0 }),
      new KeyPressInfo("ArrowRight", { alt: !0 })
    ],
    bigMoveUp: y = [
      new KeyPressInfo("KeyI", { shift: !0 }),
      new KeyPressInfo("ArrowUp", { shift: !0 })
    ],
    bigMoveDown: g = [
      new KeyPressInfo("KeyK", { shift: !0 }),
      new KeyPressInfo("ArrowDown", { shift: !0 })
    ],
    bigMoveLeft: Ee = [
      new KeyPressInfo("KeyJ", { shift: !0 }),
      new KeyPressInfo("ArrowLeft", { shift: !0 })
    ],
    bigMoveRight: Ve = [
      new KeyPressInfo("KeyL", { shift: !0 }),
      new KeyPressInfo("ArrowRight", { shift: !0 })
    ],
    moveAmount: Me = 20,
    tiltAmount: B = 20,
    bigMoveFactor: Pe = 6
  }) {
    ar(this, "zoomIn");
    ar(this, "zoomOut");
    ar(this, "moveUp");
    ar(this, "moveDown");
    ar(this, "moveLeft");
    ar(this, "moveRight");
    ar(this, "tiltUp");
    ar(this, "tiltDown");
    ar(this, "tiltLeft");
    ar(this, "tiltRight");
    ar(this, "bigMoveUp");
    ar(this, "bigMoveDown");
    ar(this, "bigMoveLeft");
    ar(this, "bigMoveRight");
    ar(this, "moveAmount");
    ar(this, "tiltAmount");
    ar(this, "bigMoveFactor");
    // This is to make sure that we can't make a listener for an action type that doesn't exist
    ar(this, "actionTypes", [
      "zoomIn",
      "zoomOut",
      "moveUp",
      "moveDown",
      "moveLeft",
      "moveRight",
      "tiltUp",
      "tiltDown",
      "tiltLeft",
      "tiltRight",
      "bigMoveUp",
      "bigMoveDown",
      "bigMoveLeft",
      "bigMoveRight"
    ]);
    this.zoomIn = r, this.zoomOut = n, this.moveUp = s, this.moveDown = a, this.moveLeft = t, this.moveRight = l, this.tiltUp = o, this.tiltDown = c, this.tiltLeft = _, this.tiltRight = u, this.bigMoveUp = y, this.bigMoveDown = g, this.bigMoveLeft = Ee, this.bigMoveRight = Ve, this.moveAmount = Me, this.tiltAmount = B, this.bigMoveFactor = Pe;
  }
  makeListener(r, n) {
    return (s) => {
      for (const a of this[r])
        a.matches(s) && n();
    };
  }
}
function eventSourceAsWindow(e) {
  return !(e.source instanceof MessagePort) && (typeof ServiceWorker > "u" || !(e.source instanceof ServiceWorker)) ? e.source : null;
}
const App$1 = /* @__PURE__ */ defineComponent({
  extends: index_umdExports.WWTAwareComponent,
  props: {
    allowedOrigin: { type: String, default: null },
    kcs: { type: KeyboardControlSettings, default: new KeyboardControlSettings({}) }
  },
  data() {
    return {
      show: !1,
      defaultColor: srcExports.Color.fromArgb(1, 255, 255, 255),
      wwtComponentNamespace: wwtEngineNamespace,
      currentTool: null,
      lastClosePt: null,
      lastSelectedSource: null,
      selectionProximity: 4,
      hideAllChrome: !1,
      hipsUrl: `${window.location.protocol}//www.worldwidetelescope.org/wwtweb/catalog.aspx?W=hips`,
      // Temporary
      isPointerMoving: !1,
      messageQueue: [],
      pointerMoveThreshold: 6,
      pointerStartPosition: null,
      updateIntervalId: null,
      messageHandlers: /* @__PURE__ */ new Map(),
      fitsLayers: /* @__PURE__ */ new Map(),
      tableLayers: /* @__PURE__ */ new Map(),
      annotations: /* @__PURE__ */ new Map(),
      newSourceName: /* @__PURE__ */ function() {
        let e = 0;
        return function() {
          return e += 1, `Source ${e}`;
        };
      }(),
      statusMessageSessionId: "default",
      lastUpdatedRA: 0,
      lastUpdatedDec: 0,
      lastUpdatedFov: 1,
      lastUpdatedRoll: 0,
      lastUpdatedClockRate: 1,
      lastUpdatedTimestamp: 0,
      // `Date.now()` value
      fullscreenModeActive: !1,
      wtmlCollectionUrl: "",
      loadedWtmlUrls: []
    };
  },
  computed: {
    ...mapState(researchAppStore, [
      "catalogNameMappings",
      "hipsCatalogs",
      "selectableTableLayers",
      "sources",
      "visibleTableLayers"
    ]),
    ...mapState(researchAppStore, {
      appTableLayers: (e) => e.tableLayers,
      spreadsheetLayers: (e) => e.tableLayers()
    }),
    curAvailableImageryData() {
      return this.wwtAvailableImagesets == null ? [] : this.wwtAvailableImagesets.filter(
        (e) => e.type == this.wwtRenderType && e.extension == ".fits"
      );
    },
    fullscreenAvailable() {
      return screenfullExports.isEnabled;
    },
    curAvailableImagesets() {
      return this.wwtAvailableImagesets == null ? [] : this.wwtAvailableImagesets.filter(
        (e) => e.type == this.wwtRenderType && !e.extension.includes("tsv")
      );
    },
    curAvailableCatalogs() {
      return this.wwtAvailableImagesets == null ? [] : this.wwtAvailableImagesets.filter(
        (e) => e.type == this.wwtRenderType && e.extension.includes("tsv")
      );
    },
    curBackgroundImagesetName: {
      get() {
        return this.wwtBackgroundImageset == null ? "" : this.wwtBackgroundImageset.get_name();
      },
      set(e) {
        this.setBackgroundImageByName(e);
      }
    },
    foregroundOpacity: {
      get() {
        return this.wwtForegroundOpacity;
      },
      set(e) {
        this.setForegroundOpacity(e);
      }
    },
    // "Tools" menu
    showCrossfader() {
      return this.wwtIsTourPlaying || this.wwtForegroundImageset == null || this.wwtForegroundImageset === void 0 ? !1 : this.wwtForegroundImageset != this.wwtBackgroundImageset;
    },
    showAddImageryTool() {
      return !this.wwtIsTourPlaying;
    },
    showBackgroundChooser() {
      return !this.wwtIsTourPlaying;
    },
    showCatalogTool() {
      return !this.wwtIsTourPlaying;
    },
    showCatalogChooser() {
      return this.currentTool == "choose-catalog";
    },
    showCollectionLoader() {
      return !this.wwtIsTourPlaying;
    },
    haveImagery() {
      return this.activeImagesetLayerStates.length > 0;
    },
    haveTableLayers() {
      return this.spreadsheetLayers.length > 0;
    },
    haveSources() {
      return this.sources.length > 0;
    },
    showToolMenu() {
      return this.showCrossfader || this.showBackgroundChooser;
    },
    coordText() {
      return this.wwtRenderType == ImageSetType.sky ? `${fmtHours(this.wwtRARad)} ${fmtDegLat(this.wwtDecRad)}` : `${fmtDegLon(this.wwtRARad)} ${fmtDegLat(this.wwtDecRad)}`;
    }
  },
  methods: {
    ...mapActions(researchAppStore, [
      "addResearchAppTableLayer",
      "addSource",
      "removeResearchAppTableLayer",
      "setResearchAppTableLayerSelectability"
    ]),
    onReady() {
      const e = {
        type: "wwt_ready",
        sessionId: this.statusMessageSessionId
      };
      window.postMessage(e, this.allowedOrigin);
    },
    parseFloatParam(e, r) {
      return typeof e == "string" && parseFloat(e) || r;
    },
    encodeObjectBase64(e) {
      return buffer.Buffer.from(JSON.stringify(e)).toString("base64");
    },
    decodeObjectBase64(e) {
      try {
        return JSON.parse(buffer.Buffer.from(e, "base64").toString());
      } catch (r) {
        return console.warn(`Error parsing messages: ${r}`), {};
      }
    },
    /** NOTE: Currently, both pywwtSpreadSheetLayerSetting and SpreadSheetLayerSetting
     * expect dates as `Date` objects. However, these are serialized as strings
     * and thus we need to deserialize.
     */
    adjustSettingsForImport(e, r) {
      for (let n = 0; n < e.length; n++) {
        const s = e[n], a = r[n];
        (s === "beginRange" || s === "endRange") && typeof a == "string" && (r[n] = new Date(a));
      }
    },
    getQueryScript(e) {
      return e ? new URLSearchParams(e.search).get("script") : null;
    },
    handleQueryScript(e) {
      const n = e.split(",").map((Ee) => this.decodeObjectBase64(Ee)).filter((Ee) => "event" in Ee || "type" in Ee);
      n.forEach((Ee) => {
        isModifyTableLayerMessage(Ee) ? this.adjustSettingsForImport([Ee.setting], [Ee.value]) : isMultiModifyTableLayerMessage(Ee) && this.adjustSettingsForImport(Ee.settings, Ee.values);
      });
      const s = {
        table_layer_create: [
          "table_layer_set",
          "table_layer_set_multi",
          "table_layer_remove",
          "table_layer_update",
          "add_source"
        ],
        load_image_collection: [
          "set_background_by_name",
          "set_foreground_by_name",
          "image_layer_create",
          "layer_hipscat_load"
        ],
        image_layer_create: [
          "image_layer_set",
          "image_layer_set_multi",
          "image_layer_stretch"
        ],
        set_foreground_by_name: ["set_foreground_opacity"],
        layer_hipscat_load: [
          "layer_hipscat_datainview",
          "table_layer_set",
          "table_layer_set_multi",
          "table_layer_update",
          "add_source"
        ],
        annotation_create: ["annotation_set", "annotation_set_multi"]
      }, a = {
        load_image_collection: [
          "load_image_collection_completed",
          (Ee, Ve) => isLoadImageCollectionMessage(Ee) && isLoadImageCollectionCompletedMessage(Ve) ? Ee.url === Ve.url : !1
        ],
        layer_hipscat_load: [
          "layer_hipscat_load_completed",
          (Ee, Ve) => {
            if (!(isLoadHipsCatalogMessage(Ee) && isLoadHipsCatalogCompletedMessage(Ve)))
              return !1;
            for (const [Me, B] of Ve.spreadsheetInfo.settings)
              if (Me === "name")
                return Ee.name === B;
            return !1;
          }
        ]
      }, t = (Ee) => Ee.event || Ee.type || "", l = n.map(t), o = [], c = {};
      l.forEach((Ee) => {
        const Ve = [];
        for (const [Me, B] of Object.entries(s))
          B && B.includes(Ee) && Ve.push(Me);
        c[Ee] = Ve;
      });
      const _ = (Ee) => {
        const Ve = c[Ee];
        return Ve === void 0 ? !0 : Ve.every(
          (Me) => !l.includes(Me) || o.includes(Me)
        );
      }, u = (Ee) => {
        const Ve = c[Ee];
        return Ve === void 0 || Ve.length === 0 || Ve.every((Me) => !l.includes(Me));
      }, y = l.filter(u), g = (Ee) => {
        const Ve = n.filter((k) => t(k) === Ee);
        this.messageQueue = this.messageQueue.concat(Ve);
        const Me = s[Ee], B = a[Ee];
        if (!Me)
          return;
        const Pe = Me.filter(
          (k) => l.indexOf(k) >= 0
        );
        if (B) {
          const [k, b] = B, Le = (xe) => (Ve.filter(
            (Se) => b(Se, xe)
          ).forEach((Se) => {
            Ve.splice(Ve.indexOf(Se), 1);
          }), Ve.length === 0 && (this.messageHandlers.delete(k), o.push(Ee), Pe.filter(_).forEach(g)), !0);
          this.messageHandlers.set(k, Le);
        } else
          o.push(Ee), Pe.filter(_).forEach(g);
      };
      y.forEach(g);
    },
    stateAsUrl() {
      const e = {
        event: "center_on_coordinates",
        ra: this.wwtRARad * R2D$1,
        dec: this.wwtDecRad * R2D$1,
        fov: this.wwtZoomDeg / 6,
        roll: this.wwtRollRad * R2D$1,
        instant: !0
      };
      let r = null;
      if (this.wwtBackgroundImageset !== null) {
        let b = this.wwtBackgroundImageset.get_name();
        b === "DSS" && (b = "Digitized Sky Survey (Color)"), r = {
          event: "set_background_by_name",
          name: b
        };
      }
      let n = null;
      this.wwtForegroundImageset !== null && (n = {
        event: "set_foreground_by_name",
        name: this.wwtForegroundImageset.get_name()
      });
      const s = srcExports.Guid.create(), a = this.hipsCatalogs(), t = [], l = [];
      a.forEach((b) => {
        const Le = this.layerForHipsCatalog(b.name);
        if (Le !== null) {
          const xe = Le.id.toString();
          t.push({
            event: "layer_hipscat_load",
            threadId: s,
            // We need this to get a response
            tableId: xe,
            name: b.name
          });
          const ze = this.wwtSpreadSheetLayers[xe], Te = extractSpreadSheetLayerSettings(ze).flatMap((D) => {
            const ke = convertSpreadSheetLayerSetting(D);
            return ke ? [ke] : [];
          });
          l.push({
            event: "table_layer_set_multi",
            id: xe,
            settings: Te.map((D) => D[0]),
            values: Te.map((D) => D[1])
          });
        }
      });
      const o = this.loadedWtmlUrls.map((b) => ({
        event: "load_image_collection",
        url: b,
        loadChildFolders: !0
      })), c = [], _ = [], u = [];
      this.activeImagesetLayerStates.forEach((b) => {
        const Le = b.getGuid(), xe = this.imagesetForLayer(Le);
        if (xe !== null) {
          c.push({
            event: "image_layer_create",
            id: xe.get_name(),
            url: xe.get_url(),
            mode: "preloaded",
            goto: !1
          });
          const ze = this.wwtImagesetLayers[Le], Se = extractImageSetLayerSettings(ze.settings);
          _.push({
            event: "image_layer_set_multi",
            id: xe.get_name(),
            settings: Se.map((Te) => Te[0]),
            values: Se.map((Te) => Te[1])
          }), u.push({
            event: "image_layer_stretch",
            id: xe.get_name(),
            version: 1,
            // Don't think that this should matter - we're only sending one per layer
            stretch: ze.scaleType,
            vmin: ze.vmin,
            vmax: ze.vmax
          });
        }
      });
      const y = this.sources.map(
        (b) => ({
          type: "add_source",
          source: this.prepareForMessaging(b)
        })
      ), g = [], Ee = [];
      for (const [b, Le] of this.annotations) {
        const xe = Le.annotation();
        let ze;
        if (xe instanceof srcExports.Circle ? ze = "circle" : xe instanceof srcExports.Poly ? ze = "polygon" : xe instanceof srcExports.PolyLine && (ze = "line"), ze == null)
          continue;
        g.push({
          event: "annotation_create",
          shape: ze,
          id: b
        });
        let Se = [];
        ze === "circle" ? Se = extractCircleAnnotationSettings(xe) : ze === "polygon" ? Se = extractPolyAnnotationSettings(xe) : ze === "line" && (Se = extractPolyLineAnnotationSettings(
          xe
        )), Ee.push({
          event: "annotation_set_multi",
          id: b,
          settings: Se.map((Te) => Te[0]),
          values: Se.map((Te) => Te[1])
        });
      }
      const Pe = {
        script: [
          e,
          r,
          n,
          ...t,
          ...l,
          ...o,
          ...c,
          ..._,
          ...u,
          ...y,
          ...g,
          ...Ee
        ].flatMap((b) => b ? [this.encodeObjectBase64(b)] : []).join(",")
      }, k = new URL(window.location.href);
      return k.search = new URLSearchParams(Pe).toString(), k.toString();
    },
    copyStateURL() {
      navigator.clipboard.writeText(this.stateAsUrl()).then(
        () => this.$notify({
          group: "copy-url",
          type: "success",
          text: "URL successfully copied"
        })
      ).catch(
        (e) => this.$notify({
          group: "copy-url",
          type: "error",
          text: "Failed to copy URL"
        })
      );
    },
    // Incoming message handling
    initializeHandlers() {
      this.messageHandlers.set(
        "load_image_collection",
        this.handleLoadImageCollection
      ), this.messageHandlers.set(
        "set_background_by_name",
        this.handleSetBackgroundByName
      ), this.messageHandlers.set(
        "set_foreground_by_name",
        this.handleSetForegroundByName
      ), this.messageHandlers.set(
        "set_foreground_opacity",
        this.handleSetForegroundOpacity
      ), this.messageHandlers.set("set_viewer_mode", this.handleSetViewerMode), this.messageHandlers.set(
        "center_on_coordinates",
        this.handleCenterOnCoordinates
      ), this.messageHandlers.set("track_object", this.handleTrackObject), this.messageHandlers.set("set_datetime", this.handleSetDatetime), this.messageHandlers.set("pause_time", this.handlePauseTime), this.messageHandlers.set("resume_time", this.handleResumeTime), this.messageHandlers.set("modify_settings", this.handleModifySettings), this.messageHandlers.set("setting_set", this.handleModifyEngineSetting), this.messageHandlers.set(
        "image_layer_create",
        this.handleCreateImageSetLayer
      ), this.messageHandlers.set("image_layer_order", this.handleSetLayerOrder), this.messageHandlers.set(
        "image_layer_stretch",
        this.handleStretchFitsLayer
      ), this.messageHandlers.set(
        "image_layer_cmap",
        this.handleSetFitsLayerColormap
      ), this.messageHandlers.set("image_layer_set", this.handleModifyFitsLayer), this.messageHandlers.set(
        "image_layer_set_multi",
        this.handleMultiModifyFitsLayer
      ), this.messageHandlers.set(
        "image_layer_remove",
        this.handleRemoveImageSetLayer
      ), this.messageHandlers.set("table_layer_create", this.handleCreateTableLayer), this.messageHandlers.set("table_layer_update", this.handleUpdateTableLayer), this.messageHandlers.set("table_layer_set", this.handleModifyTableLayer), this.messageHandlers.set("table_layer_remove", this.handleRemoveTableLayer), this.messageHandlers.set(
        "table_layer_set_multi",
        this.handleMultiModifyTableLayer
      ), this.messageHandlers.set("layer_hipscat_load", this.handleLoadHipsCatalog), this.messageHandlers.set(
        "layer_hipscat_datainview",
        this.handleGetHipsCatalogDataInView
      ), this.messageHandlers.set("annotation_create", this.handleCreateAnnotation), this.messageHandlers.set("annotation_set", this.handleModifyAnnotation), this.messageHandlers.set(
        "annotation_set_multi",
        this.handleMultiModifyAnnotation
      ), this.messageHandlers.set("circle_set_center", this.handleSetCircleCenter), this.messageHandlers.set("line_add_point", this.handleAddLinePoint), this.messageHandlers.set("polygon_add_point", this.handleAddPolygonPoint), this.messageHandlers.set("remove_annotation", this.handleRemoveAnnotation), this.messageHandlers.set("clear_annotations", this.handleClearAnnotations), this.messageHandlers.set("load_tour", this.handleLoadTour), this.messageHandlers.set("pause_tour", this.handlePauseTour), this.messageHandlers.set("resume_tour", this.handleResumeTour), this.messageHandlers.set("get_view_as_tour", this.handleGetViewAsTour), this.messageHandlers.set("add_source", this.handleAddSource), this.messageHandlers.set(
        "modify_selectability",
        this.handleModifySelectability
      ), this.messageHandlers.set(
        "modify_all_selectability",
        this.handleModifyAllSelectability
      ), this.messageHandlers.set("clear_tile_cache", this.handleClearTileCache), this.messageHandlers.set("wwt_view_state", this.ignoreMessage);
    },
    onMessage(e) {
      const r = String(e.type || e.event), n = this.messageHandlers.get(r);
      n !== void 0 && n(e);
    },
    ignoreMessage(e) {
      return !0;
    },
    // Various message handlers that don't comfortably fit elsewhere:
    handleLoadImageCollection(e) {
      return isLoadImageCollectionMessage(e) ? (this.loadImageCollection({
        url: e.url,
        loadChildFolders: e.loadChildFolders
      }).then(() => {
        if (this.$options.statusMessageDestination != null && this.allowedOrigin != null) {
          const r = {
            event: "load_image_collection_completed",
            threadId: e.threadId,
            url: e.url
          };
          this.$options.statusMessageDestination.postMessage(
            r,
            this.allowedOrigin
          );
        }
        this.loadedWtmlUrls.push(e.url);
      }), !0) : !1;
    },
    handleCenterOnCoordinates(e) {
      if (!isCenterOnCoordinatesMessage(e))
        return !1;
      const r = e.roll == null ? void 0 : e.roll * D2R;
      return this.gotoRADecZoom({
        raRad: e.ra * D2R,
        decRad: e.dec * D2R,
        zoomDeg: e.fov * 6,
        instant: e.instant,
        rollRad: r
      }), !0;
    },
    handleModifyEngineSetting(e) {
      if (!isModifySettingMessage(e))
        return !1;
      const r = [e.setting, e.value];
      if (!isResearchAppEngineSetting(r))
        return !1;
      const n = convertEngineSetting(r);
      return this.applySetting(n), !0;
    },
    handleSetDatetime(e) {
      return isSetDatetimeMessage(e) ? (this.setTime((void 0)(e.isot).toDate()), !0) : !1;
    },
    handlePauseTime(e) {
      return isPauseTimeMessage(e) ? (this.setClockSync(!1), !0) : !1;
    },
    handleResumeTime(e) {
      return isResumeTimeMessage(e) ? (this.setClockSync(!0), this.setClockRate(e.rate), !0) : !1;
    },
    handleTrackObject(e) {
      return isTrackObjectMessage(e) ? (e.code in SolarSystemObjects && this.setTrackedObject(e.code), !0) : !1;
    },
    handleModifySettings(e) {
      const r = maybeAsModifiedAppSettings(e);
      if (r !== null) {
        for (const n of r)
          n[0] == "hideAllChrome" && (this.hideAllChrome = n[1]), n[0] == "selectionProximity" && (this.selectionProximity = n[1]);
        return !0;
      }
      return !1;
    },
    wwtOnPointerMove(e) {
      if (e.buttons == 1) {
        const r = {
          type: "wwt_pointer_move",
          clientX: e.clientX,
          clientY: e.clientY,
          sessionId: this.statusMessageSessionId
        };
        this.$options.statusMessageDestination != null && this.allowedOrigin != null && this.$options.statusMessageDestination.postMessage(r, this.allowedOrigin);
      }
      !this.isPointerMoving && this.pointerStartPosition !== null && Math.sqrt((e.pageX - this.pointerStartPosition.x) ** 2 + (e.pageY - this.pointerStartPosition.y) ** 2) > this.pointerMoveThreshold && (this.isPointerMoving = !0), this.spreadsheetLayers.length != 0 && this.updateLastClosePoint(e);
    },
    updateLastClosePoint(e) {
      const r = { x: e.offsetX, y: e.offsetY }, n = this.closestInView(r, this.selectionProximity);
      if (n == null && this.lastClosePt == null)
        return;
      (n == null || this.lastClosePt == null || this.lastClosePt.ra != n.ra || this.lastClosePt.dec != n.dec) && (this.lastClosePt = n);
    },
    wwtOnPointerDown(e) {
      this.isPointerMoving = !1, this.pointerStartPosition = { x: e.pageX, y: e.pageY };
    },
    wwtOnPointerUp(e) {
      const r = {
        type: "wwt_pointer_up",
        clientX: e.clientX,
        clientY: e.clientY,
        sessionId: this.statusMessageSessionId
      };
      if (this.$options.statusMessageDestination != null && this.allowedOrigin != null && this.$options.statusMessageDestination.postMessage(r, this.allowedOrigin), !this.isPointerMoving && (this.updateLastClosePoint(e), this.lastClosePt !== null)) {
        const n = this.sourceCreator(this.lastClosePt);
        this.addSource(n), this.lastSelectedSource = n;
      }
      this.pointerStartPosition = null, this.isPointerMoving = !1;
    },
    nameForSource(e, r) {
      for (const [n, [s, a]] of Object.entries(this.catalogNameMappings))
        if (s in e && r === n)
          return `${a}: ${e[s]}`;
      return this.newSourceName();
    },
    sourceCreator(e) {
      const r = {};
      for (let n = 0; n < e.values.length; n++)
        r[e.colNames[n]] = e.values[n];
      return {
        ra: e.ra,
        dec: e.dec,
        catalogLayer: e.catalogLayer,
        layerData: r,
        name: this.nameForSource(r, e.catalogLayer.name)
      };
    },
    // ImageSet layers, including FITS layers:
    getFitsLayerHandler(e) {
      let r = this.fitsLayers.get(e.id);
      return r === void 0 && (r = new ImageSetLayerMessageHandler(this), this.fitsLayers.set(e.id, r)), r;
    },
    handleCreateImageSetLayer(e) {
      if (isCreateFitsLayerMessage(e)) {
        const r = {
          event: e.event,
          url: e.url,
          id: e.id,
          mode: "fits"
        };
        return this.getFitsLayerHandler(r).handleCreateMessage(
          r
        ), !0;
      }
      return isCreateImageSetLayerMessage(e) ? (this.getFitsLayerHandler(e).handleCreateMessage(e), !0) : !1;
    },
    handleSetLayerOrder(e) {
      return isSetLayerOrderMessage(e) ? (this.getFitsLayerHandler(e).handleSetLayerOrderMessage(e), !0) : !1;
    },
    handleStretchFitsLayer(e) {
      return isStretchFitsLayerMessage(e) ? (this.getFitsLayerHandler(e).handleStretchMessage(e), !0) : !1;
    },
    handleSetFitsLayerColormap(e) {
      return isSetFitsLayerColormapMessage(e) ? (this.getFitsLayerHandler(e).handleSetColormapMessage(e), !0) : !1;
    },
    handleModifyFitsLayer(e) {
      return isModifyFitsLayerMessage(e) ? (this.getFitsLayerHandler(e).handleModifyMessage(e), !0) : !1;
    },
    handleMultiModifyFitsLayer(e) {
      return isMultiModifyFitsLayerMessage(e) ? (this.getFitsLayerHandler(e).handleMultiModifyMessage(e), !0) : !1;
    },
    handleMultiModifyTableLayer(e) {
      return isMultiModifyTableLayerMessage(e) ? (this.getTableLayerHandler(e).handleMultiModifyMessage(e), !0) : !1;
    },
    handleRemoveImageSetLayer(e) {
      return isRemoveImageSetLayerMessage(e) ? (this.getFitsLayerHandler(e).handleRemoveMessage(e), !0) : !1;
    },
    // Table layers:
    getTableLayerHandler(e) {
      let r = this.tableLayers.get(e.id);
      return r === void 0 && (r = new TableLayerMessageHandler(this), this.tableLayers.set(e.id, r)), r;
    },
    handleCreateTableLayer(e) {
      return isCreateTableLayerMessage(e) ? (this.getTableLayerHandler(e).handleCreateMessage(e), !0) : !1;
    },
    handleUpdateTableLayer(e) {
      return isUpdateTableLayerMessage(e) ? (this.getTableLayerHandler(e).handleUpdateMessage(e), !0) : !1;
    },
    handleModifyTableLayer(e) {
      return isModifyTableLayerMessage(e) ? (this.getTableLayerHandler(e).handleModifyMessage(e), !0) : !1;
    },
    handleRemoveTableLayer(e) {
      return isRemoveTableLayerMessage(e) ? (this.getTableLayerHandler(e).handleRemoveMessage(e), !0) : !1;
    },
    // Annotations:
    createAnnotationHandler(e) {
      const r = AnnotationMessageHandler.tryCreate(this, e);
      r !== null && this.annotations.set(e.id, r);
    },
    lookupAnnotationHandler(e) {
      return this.annotations.get(e.id);
    },
    handleCreateAnnotation(e) {
      return isCreateAnnotationMessage(e) ? (this.createAnnotationHandler(e), !0) : !1;
    },
    handleModifyAnnotation(e) {
      if (!isModifyAnnotationMessage(e))
        return !1;
      const r = this.lookupAnnotationHandler(e);
      return r !== void 0 && r.handleModifyAnnotationMessage(e), !0;
    },
    handleMultiModifyAnnotation(e) {
      if (!isMultiModifyAnnotationMessage(e))
        return !1;
      const r = this.lookupAnnotationHandler(e);
      return r !== void 0 && r.handleMultiModifyAnnotationMessage(e), !0;
    },
    handleSetCircleCenter(e) {
      if (!isSetCircleCenterMessage(e))
        return !1;
      const r = this.lookupAnnotationHandler(e);
      return r !== void 0 && r.handleSetCircleCenterMessage(e), !0;
    },
    handleAddLinePoint(e) {
      if (!isAddLinePointMessage(e))
        return !1;
      const r = this.lookupAnnotationHandler(e);
      return r !== void 0 && r.handleAddLinePointMessage(e), !0;
    },
    handleAddPolygonPoint(e) {
      if (!isAddPolygonPointMessage(e))
        return !1;
      const r = this.lookupAnnotationHandler(e);
      return r !== void 0 && r.handleAddPolygonPointMessage(e), !0;
    },
    handleRemoveAnnotation(e) {
      if (!isRemoveAnnotationMessage(e))
        return !1;
      const r = this.lookupAnnotationHandler(e);
      return r !== void 0 && r.handleRemoveAnnotationMessage(e), this.annotations.delete(e.id), !0;
    },
    handleClearAnnotations(e) {
      return isClearAnnotationsMessage(e) ? (this.clearAnnotations(), !0) : !1;
    },
    // Tours:
    handleLoadTour(e) {
      return isLoadTourMessage(e) ? (this.loadTour({
        url: e.url,
        play: !0
      }), !0) : !1;
    },
    handlePauseTour(e) {
      return isPauseTourMessage(e) ? (this.toggleTourPlayPauseState(), !0) : !1;
    },
    handleResumeTour(e) {
      return isResumeTourMessage(e) ? (this.toggleTourPlayPauseState(), !0) : !1;
    },
    handleGetViewAsTour(e) {
      return isGetViewAsTourMessage(e) ? (this.viewAsTourXml("tour").then((r) => {
        if (r !== null) {
          const n = {
            type: "get_view_as_tour_reply",
            threadId: e.threadId,
            tourXml: r
          };
          this.$options.statusMessageDestination !== null && this.allowedOrigin !== null && this.$options.statusMessageDestination.postMessage(n, this.allowedOrigin);
        }
      }), !0) : !1;
    },
    // Outgoing messages
    maybeUpdateStatus() {
      if (this.$options.statusMessageDestination === null || this.allowedOrigin === null)
        return;
      const e = this.wwtRARad, r = this.wwtDecRad, n = this.wwtZoomDeg / 6, s = this.wwtRollRad * R2D$1, a = this.wwtClockRate;
      if (!(e != this.lastUpdatedRA || r != this.lastUpdatedDec || n != this.lastUpdatedFov || s != this.lastUpdatedRoll || a != this.lastUpdatedClockRate || Date.now() - this.lastUpdatedTimestamp > 6e4))
        return;
      const l = {
        type: "wwt_view_state",
        sessionId: this.statusMessageSessionId,
        raRad: e,
        decRad: r,
        fovDeg: n,
        rollDeg: s,
        engineClockISOT: this.wwtCurrentTime.toISOString(),
        systemClockISOT: (/* @__PURE__ */ new Date()).toISOString(),
        engineClockRateFactor: a
      };
      this.$options.statusMessageDestination.postMessage(l, this.allowedOrigin), this.lastUpdatedRA = e, this.lastUpdatedDec = r, this.lastUpdatedFov = n, this.lastUpdatedRoll = s, this.lastUpdatedClockRate = a, this.lastUpdatedTimestamp = Date.now();
    },
    // Fullscreening
    toggleFullscreen() {
      screenfullExports.isEnabled && screenfullExports.toggle();
    },
    onFullscreenEvent() {
      screenfullExports.isEnabled && (this.fullscreenModeActive = screenfullExports.isFullscreen);
    },
    // Background / foreground imagesets
    handleSetBackgroundByName(e) {
      return isSetBackgroundByNameMessage(e) ? (this.setBackgroundImageByName(e.name), !0) : !1;
    },
    handleSetForegroundByName(e) {
      return isSetForegroundByNameMessage(e) ? (this.setForegroundImageByName(e.name), !0) : !1;
    },
    handleSetForegroundOpacity(e) {
      return isSetForegroundOpacityMessage(e) ? (this.setForegroundOpacity(e.value), !0) : !1;
    },
    handleSetViewerMode(e) {
      return isSetViewerModeMessage(e) ? (this.setBackgroundImageByName(e.mode), this.setForegroundImageByName(e.mode), !0) : !1;
    },
    // HiPS catalogs (see also the table layer support)
    addHips(e) {
      return this.addCatalogHipsByName({ name: e.name }).then((r) => {
        const n = r.get_hipsProperties();
        if (n !== null) {
          const s = n.get_catalogSpreadSheetLayer().id.toString();
          this.applyTableLayerSettings({
            id: s,
            settings: [
              ["color", this.defaultColor],
              ["opacity", this.defaultColor.a]
            ]
          }), e.id = s, this.addResearchAppTableLayer(e);
        }
        return r;
      });
    },
    prepareForMessaging(e) {
      let r;
      const n = e.catalogLayer;
      n instanceof index_umdExports.ImagesetInfo ? r = {
        ...n,
        type: ImageSetTypes[n.type]
      } : r = n;
      const s = isProxy(e) ? toRaw(e) : e, a = isProxy(r) ? toRaw(r) : r;
      return {
        ...s,
        catalogLayer: a
      };
    },
    // A client has requested that we load a HiPS catalog. Once it's loaded we
    // reply to the client with the details of the catalog-as-spreadsheet-layer,
    // so that it can know what the catalog's characteristics are.
    handleLoadHipsCatalog(e) {
      if (!isLoadHipsCatalogMessage(e))
        return !1;
      for (const r of this.curAvailableCatalogs)
        if (r.name == e.name) {
          this.addHips(r).then((n) => {
            const s = n.get_hipsProperties();
            if (s === null)
              throw new Error("internal consistency failure");
            const a = s.get_catalogSpreadSheetLayer();
            let t = this.tableLayers.get(e.tableId);
            if (t === void 0 && (t = new TableLayerMessageHandler(this), this.tableLayers.set(e.tableId, t)), t.setupHipsCatalog(n, a), e.threadId === void 0 || this.$options.statusMessageDestination === null || this.allowedOrigin === null)
              return;
            const l = extractSpreadSheetLayerSettings(a), o = [];
            for (const u of l) {
              const y = convertSpreadSheetLayerSetting(u);
              y !== null && o.push(y);
            }
            const c = {
              header: a.get_header(),
              settings: o
            }, _ = {
              event: "layer_hipscat_load_completed",
              threadId: e.threadId,
              spreadsheetInfo: c
            };
            this.$options.statusMessageDestination.postMessage(_, this.allowedOrigin);
          });
          break;
        }
      return !0;
    },
    handleGetHipsCatalogDataInView(e) {
      if (!isGetHipsCatalogDataInViewMessage(e))
        return !1;
      const r = this.tableLayers.get(e.tableId);
      return r !== void 0 && r.handleGetHipsDataInViewMessage(e).then((n) => {
        n !== null && this.$options.statusMessageDestination !== null && this.allowedOrigin !== null && this.$options.statusMessageDestination.postMessage(
          n,
          this.allowedOrigin
        );
      }), !0;
    },
    isMessageSpreadsheetLayer(e) {
      return "referenceFrame" in e;
    },
    isMessageImagesetInfo(e) {
      return "url" in e;
    },
    deserializeSource(e) {
      const r = e.catalogLayer;
      let n = this.appTableLayers().find(
        (s) => s.name === r.name
      );
      return n === void 0 && (this.isMessageSpreadsheetLayer(r) ? n = new index_umdExports.SpreadSheetLayerInfo(
        r.id,
        r.referenceFrame,
        r.name
      ) : n = new index_umdExports.ImagesetInfo(
        r.url,
        r.name,
        ImageSetType[r.type],
        r.description,
        r.extension
      )), {
        ...e,
        catalogLayer: n
      };
    },
    handleAddSource(e) {
      if (!isAddSourceMessage(e))
        return !1;
      const r = this.deserializeSource(e.source);
      return this.addSource(r), !0;
    },
    handleModifySelectability(e) {
      if (!isModifySelectabilityMessage(e))
        return !1;
      const r = this.tableLayers.get(e.id);
      return r !== void 0 && r.handleSelectabilityMessage(e), !0;
    },
    handleModifyAllSelectability(e) {
      return isModifyAllSelectabilityMessage(e) ? (this.spreadsheetLayers.forEach(
        (r) => this.setResearchAppTableLayerSelectability({
          layer: r,
          selectable: e.selectable
        })
      ), !0) : !1;
    },
    selectTool(e) {
      this.currentTool == e ? this.currentTool = null : this.currentTool = e;
    },
    // Add Imagery As Layer tool
    addImagery(e) {
      console.log(e);
      const r = {
        event: "image_layer_create",
        url: e.url,
        id: e.name,
        mode: "preloaded"
      };
      this.getFitsLayerHandler(r).handleCreateMessage(r);
    },
    // Load WTML Collection tool
    loadWtml(e) {
      this.loadImageCollection({
        url: e,
        loadChildFolders: !0
      }).then((r) => {
        this.$notify({
          group: "load-collection",
          type: "success",
          text: "WTML collection successfully loaded"
        }), this.loadedWtmlUrls.push(e);
      });
    },
    submitWtmlCollectionUrl() {
      this.wtmlCollectionUrl && (this.loadWtml(this.wtmlCollectionUrl), this.wtmlCollectionUrl = "");
    },
    doZoom(e) {
      e ? this.zoom(1 / 1.3) : this.zoom(1.3);
    },
    doMove(e, r) {
      this.move({ x: e, y: r });
    },
    doTilt(e, r) {
      this.tilt({ x: e, y: r });
    },
    // For filtering imagesets
    filterImagesets(e, r) {
      return e.filter(
        (n) => n.name.toLowerCase().includes(r) || n.description.toLowerCase().includes(r)
      );
    },
    filterCatalogs(e, r) {
      return e.filter(
        (n) => n.name.toLowerCase().includes(r) || n.description.toLowerCase().includes(r)
      );
    },
    closestInView(e, r) {
      let n = 1 / 0, s = null;
      const a = `\r
`, t = "	", l = this.findRADecForScreenPoint(e), o = { ra: D2R * l.ra, dec: D2R * l.dec };
      for (const c of this.selectableTableLayers()) {
        const _ = this.spreadSheetLayer(c);
        if (_ == null)
          continue;
        const y = _.getTableDataInView().split(a), g = y.shift();
        if (!g)
          return null;
        const Ee = g.split(t), Ve = _.get_lngColumn(), Me = _.get_latColumn();
        for (const B of y) {
          const Pe = B.split(t), k = D2R * Number(Pe[Ve]), b = D2R * Number(Pe[Me]), Le = { ra: k, dec: b }, xe = distance(o.ra, o.dec, Le.ra, Le.dec);
          xe < n && (s = {
            ra: k,
            dec: b,
            colNames: Ee,
            values: Pe,
            catalogLayer: c
          }, n = xe);
        }
      }
      if (s !== null) {
        const c = { ra: s.ra * R2D$1, dec: s.dec * R2D$1 }, _ = this.findScreenPointForRADec(c), u = Math.sqrt((e.x - _.x) ** 2 + (e.y - _.y) ** 2);
        if (!r || u < r)
          return s;
      }
      return null;
    }
  },
  // Lifecycle management
  created() {
    this.$options.statusMessageDestination = null, this.initializeHandlers();
  },
  mounted() {
    screenfullExports.isEnabled && screenfullExports.on("change", this.onFullscreenEvent), this.waitForReady().then(() => {
      const e = this.getQueryScript(window.location);
      e !== null && (this.$options.statusMessageDestination = window), this.loadImageCollection({
        url: this.hipsUrl,
        loadChildFolders: !0
      }).catch((n) => {
        console.error(n);
      }).finally(() => {
        e !== null && this.handleQueryScript(e);
      }), window.addEventListener(
        "message",
        (n) => {
          const s = eventSourceAsWindow(n);
          if (this.allowedOrigin !== null && n.origin == this.allowedOrigin) {
            this.$options.statusMessageDestination === null && s !== null && (this.$options.statusMessageDestination = s, this.updateIntervalId = window.setInterval(
              () => this.maybeUpdateStatus(),
              200
            ));
            const a = n.data;
            isPingPongMessage(a) ? s !== null ? (a.sessionId !== void 0 && (this.statusMessageSessionId = a.sessionId), s.postMessage(a, n.origin)) : n.source instanceof Window || n.source !== null && n.source.postMessage(a) : this.onMessage(a);
          }
        },
        !1
      );
      const r = this.$refs.root;
      r.addEventListener(
        "keydown",
        this.kcs.makeListener("zoomIn", () => this.doZoom(!0))
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener("zoomOut", () => this.doZoom(!1))
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "moveUp",
          () => this.doMove(0, this.kcs.moveAmount)
        )
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "moveDown",
          () => this.doMove(0, -this.kcs.moveAmount)
        )
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "moveLeft",
          () => this.doMove(this.kcs.moveAmount, 0)
        )
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "moveRight",
          () => this.doMove(-this.kcs.moveAmount, 0)
        )
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "tiltLeft",
          () => this.doTilt(this.kcs.tiltAmount, 0)
        )
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "tiltRight",
          () => this.doTilt(-this.kcs.tiltAmount, 0)
        )
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "tiltUp",
          () => this.doTilt(0, this.kcs.tiltAmount)
        )
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "tiltDown",
          () => this.doTilt(0, -this.kcs.tiltAmount)
        )
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "bigMoveUp",
          () => this.doMove(0, this.kcs.bigMoveFactor * this.kcs.moveAmount)
        )
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "bigMoveDown",
          () => this.doMove(0, this.kcs.bigMoveFactor * -this.kcs.moveAmount)
        )
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "bigMoveLeft",
          () => this.doMove(this.kcs.bigMoveFactor * this.kcs.moveAmount, 0)
        )
      ), r.addEventListener(
        "keydown",
        this.kcs.makeListener(
          "bigMoveRight",
          () => this.doMove(this.kcs.bigMoveFactor * -this.kcs.moveAmount, 0)
        )
      );
    }).then(() => {
      this.onReady();
    }), setTimeout(() => {
      this.show = !0;
    }, 1e3);
  },
  unmounted() {
    screenfullExports.isEnabled && screenfullExports.off("change", this.onFullscreenEvent), this.updateIntervalId !== null && (window.clearInterval(this.updateIntervalId), this.updateIntervalId = null);
  },
  watch: {
    messageQueue(e) {
      for (; e.length > 0; ) {
        const r = e.shift();
        this.onMessage(r);
      }
    },
    wwtClockDiscontinuities(e) {
      this.lastUpdatedTimestamp = 0;
    },
    curAvailableCatalogs(e) {
      if (this.$options.statusMessageDestination === null || this.allowedOrigin === null)
        return;
      const r = {
        type: "wwt_application_state",
        sessionId: this.statusMessageSessionId,
        hipsCatalogNames: e.map((n) => n.name)
      };
      this.$options.statusMessageDestination.postMessage(r, this.allowedOrigin);
    },
    lastSelectedSource(e) {
      if (this.$options.statusMessageDestination === null || this.allowedOrigin === null)
        return;
      const r = {
        type: "wwt_selection_state",
        sessionId: this.statusMessageSessionId,
        mostRecentSource: this.prepareForMessaging(e)
      };
      this.$options.statusMessageDestination.postMessage(r, this.allowedOrigin);
    },
    sources: {
      handler(e) {
        if (this.$options.statusMessageDestination === null || this.allowedOrigin === null)
          return;
        const r = {
          type: "wwt_selection_state",
          sessionId: this.statusMessageSessionId,
          selectedSources: e.map(
            (n) => this.prepareForMessaging(n)
          )
        };
        this.$options.statusMessageDestination.postMessage(r, this.allowedOrigin);
      },
      deep: !0
    }
  },
  // we need to declare this variable specially to make sure that Vue doesn't
  // try to make it reactive, which would cause it to try to read fields that
  // are prohibited in cross-origin situations:
  statusMessageDestination: null
}), _hoisted_1$3 = {
  key: 0,
  id: "app",
  ref: "root",
  tabindex: "0"
}, _hoisted_2$3 = { id: "ui-elements" }, _hoisted_3$3 = {
  class: "element-box",
  id: "display-panel-box"
}, _hoisted_4$3 = { id: "overlays" }, _hoisted_5$3 = {
  key: 0,
  id: "imagery-container"
}, _hoisted_6$3 = /* @__PURE__ */ createBaseVNode("div", { class: "display-section-header" }, [
  /* @__PURE__ */ createBaseVNode("label", null, "Imagery")
], -1), _hoisted_7$3 = {
  key: 1,
  id: "spreadsheets-container"
}, _hoisted_8$3 = /* @__PURE__ */ createBaseVNode("div", { class: "display-section-header" }, [
  /* @__PURE__ */ createBaseVNode("label", null, "Data Tables")
], -1), _hoisted_9$3 = {
  key: 2,
  id: "sources-container"
}, _hoisted_10$3 = /* @__PURE__ */ createBaseVNode("div", { class: "display-section-header" }, [
  /* @__PURE__ */ createBaseVNode("label", null, "Sources")
], -1), _hoisted_11$3 = {
  key: 0,
  class: "element-box",
  id: "tools-box"
}, _hoisted_12$3 = { class: "tool-container" }, _hoisted_13$2 = /* @__PURE__ */ createBaseVNode("span", null, "Foreground opacity:", -1), _hoisted_14$2 = {
  key: 1,
  id: "bg-select-container",
  class: "item-select-container"
}, _hoisted_15$1 = /* @__PURE__ */ createBaseVNode("span", {
  id: "bg-select-title",
  class: "item-select-title"
}, "Background imagery:", -1), _hoisted_16 = { class: "item-option" }, _hoisted_17 = { class: "ellipsize" }, _hoisted_18 = { class: "ellipsize" }, _hoisted_19 = { class: "ellipsize" }, _hoisted_20 = {
  key: 2,
  class: "item-select-container"
}, _hoisted_21 = /* @__PURE__ */ createBaseVNode("span", { class: "item-select-title" }, "Add imagery layer:", -1), _hoisted_22 = { class: "item-option" }, _hoisted_23 = { class: "ellipsize" }, _hoisted_24 = { class: "ellipsize" }, _hoisted_25 = { class: "ellipsize" }, _hoisted_26 = { key: 1 }, _hoisted_27 = {
  key: 3,
  id: "catalog-select-container-tool",
  class: "item-select-container"
}, _hoisted_28 = /* @__PURE__ */ createBaseVNode("span", { class: "item-select-title" }, "Add catalog:", -1), _hoisted_29 = { class: "item-option" }, _hoisted_30 = { class: "ellipsize" }, _hoisted_31 = { class: "ellipsize" }, _hoisted_32 = /* @__PURE__ */ createBaseVNode("div", null, null, -1), _hoisted_33 = {
  key: 4,
  class: "load-collection-container"
}, _hoisted_34 = /* @__PURE__ */ createBaseVNode("div", { class: "load-collection-label" }, [
  /* @__PURE__ */ createTextVNode(" Load "),
  /* @__PURE__ */ createBaseVNode("a", {
    href: "https://docs.worldwidetelescope.org/data-guide/1/data-file-formats/collections/",
    target: "_blank"
  }, "WTML"),
  /* @__PURE__ */ createTextVNode(" data collection: ")
], -1), _hoisted_35 = { class: "load-collection-row" }, _hoisted_36 = /* @__PURE__ */ createBaseVNode("label", null, "URL:", -1), _hoisted_37 = {
  key: 5,
  class: "save-state-container"
}, _hoisted_38 = /* @__PURE__ */ createBaseVNode("label", { class: "save-state-title" }, "The current view can be restored using:", -1), _hoisted_39 = { class: "save-state-content" }, _hoisted_40 = { class: "save-state-url" }, _hoisted_41 = {
  class: "element-box",
  id: "controls-box"
}, _hoisted_42 = {
  class: "tooltip-content tool-menu",
  tabindex: "-1"
}, _hoisted_43 = ["onClick"], _hoisted_44 = ["onClick"], _hoisted_45 = ["onClick"], _hoisted_46 = ["onClick"], _hoisted_47 = ["onClick"], _hoisted_48 = /* @__PURE__ */ createBaseVNode("a", { href: "https://discussions.apple.com/thread/8655829" }, "enable WebGL 2.0", -1);
function _sfc_render$4(e, r, n, s, a, t) {
  const l = resolveComponent("WorldWideTelescope"), o = resolveComponent("imageset-item"), c = resolveComponent("spreadsheet-item"), _ = resolveComponent("source-item"), u = resolveComponent("v-select"), y = resolveComponent("font-awesome-icon"), g = resolveComponent("Popper"), Ee = resolveComponent("notifications");
  return e.show ? (openBlock(), createElementBlock("div", _hoisted_1$3, [
    createVNode(l, {
      "wwt-namespace": e.wwtComponentNamespace,
      class: normalizeClass(["wwt", { pointer: e.lastClosePt !== null }]),
      onPointermove: e.wwtOnPointerMove,
      onPointerup: e.wwtOnPointerUp,
      onPointerdown: e.wwtOnPointerDown
    }, null, 8, ["wwt-namespace", "class", "onPointermove", "onPointerup", "onPointerdown"]),
    createBaseVNode("div", _hoisted_2$3, [
      createBaseVNode("div", _hoisted_3$3, [
        e.hideAllChrome ? createCommentVNode("", !0) : (openBlock(), createElementBlock("div", {
          key: 0,
          id: "display-panel",
          onKeydown: r[0] || (r[0] = withModifiers(() => {
          }, ["stop"]))
        }, [
          createVNode(Transition, { name: "catalog-transition" }, {
            default: withCtx(() => [
              createBaseVNode("div", _hoisted_4$3, [
                createBaseVNode("p", null, toDisplayString(e.coordText), 1)
              ])
            ]),
            _: 1
          }),
          e.haveImagery ? (openBlock(), createElementBlock("div", _hoisted_5$3, [
            _hoisted_6$3,
            (openBlock(!0), createElementBlock(Fragment, null, renderList(e.activeImagesetLayerStates, (Ve) => (openBlock(), createBlock(o, {
              key: Ve.guidText,
              imageset: Ve
            }, null, 8, ["imageset"]))), 128))
          ])) : createCommentVNode("", !0),
          e.haveTableLayers ? (openBlock(), createElementBlock("div", _hoisted_7$3, [
            _hoisted_8$3,
            (openBlock(!0), createElementBlock(Fragment, null, renderList(e.spreadsheetLayers, (Ve) => (openBlock(), createBlock(c, {
              key: Ve.name,
              layer: Ve,
              defaultColor: e.defaultColor
            }, null, 8, ["layer", "defaultColor"]))), 128))
          ])) : createCommentVNode("", !0),
          e.haveSources ? (openBlock(), createElementBlock("div", _hoisted_9$3, [
            _hoisted_10$3,
            (openBlock(!0), createElementBlock(Fragment, null, renderList(e.sources, (Ve) => (openBlock(), createBlock(_, {
              key: Ve.name,
              source: Ve
            }, null, 8, ["source"]))), 128))
          ])) : createCommentVNode("", !0)
        ], 32))
      ]),
      e.hideAllChrome ? createCommentVNode("", !0) : (openBlock(), createElementBlock("div", _hoisted_11$3, [
        e.hideAllChrome ? createCommentVNode("", !0) : (openBlock(), createElementBlock("div", {
          key: 0,
          id: "tools",
          onKeydown: r[5] || (r[5] = withModifiers(() => {
          }, ["stop"]))
        }, [
          createBaseVNode("div", _hoisted_12$3, [
            e.currentTool == "crossfade" ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
              _hoisted_13$2,
              withDirectives(createBaseVNode("input", {
                class: "opacity-range",
                type: "range",
                "onUpdate:modelValue": r[1] || (r[1] = (Ve) => e.foregroundOpacity = Ve)
              }, null, 512), [
                [vModelText, e.foregroundOpacity]
              ])
            ], 64)) : e.currentTool == "choose-background" ? (openBlock(), createElementBlock("div", _hoisted_14$2, [
              _hoisted_15$1,
              createVNode(u, {
                modelValue: e.curBackgroundImagesetName,
                "onUpdate:modelValue": r[2] || (r[2] = (Ve) => e.curBackgroundImagesetName = Ve),
                id: "bg-select",
                class: "item-selector",
                searchable: !0,
                clearable: !1,
                options: e.curAvailableImagesets,
                filter: e.filterImagesets,
                "close-on-select": !0,
                reduce: (Ve) => Ve.name,
                getOptionKey: JSON.stringify,
                label: "name",
                placeholder: "Background"
              }, {
                option: withCtx((Ve) => [
                  createBaseVNode("div", _hoisted_16, [
                    createBaseVNode("h4", _hoisted_17, toDisplayString(Ve.name), 1),
                    createBaseVNode("p", _hoisted_18, [
                      createBaseVNode("em", null, toDisplayString(Ve.description), 1)
                    ])
                  ])
                ]),
                "selected-option": withCtx((Ve) => [
                  createBaseVNode("div", _hoisted_19, toDisplayString(Ve.name), 1)
                ]),
                _: 1
              }, 8, ["modelValue", "options", "filter", "reduce", "getOptionKey"])
            ])) : e.currentTool == "add-imagery-layer" ? (openBlock(), createElementBlock("div", _hoisted_20, [
              _hoisted_21,
              createVNode(u, {
                class: "item-selector",
                searchable: !0,
                clearable: !1,
                options: e.curAvailableImageryData,
                filter: e.filterImagesets,
                getOptionKey: JSON.stringify,
                "onUpdate:modelValue": e.addImagery,
                label: "name",
                placeholder: ""
              }, {
                option: withCtx((Ve) => [
                  createBaseVNode("div", _hoisted_22, [
                    createBaseVNode("h4", _hoisted_23, toDisplayString(Ve.name), 1),
                    createBaseVNode("p", _hoisted_24, [
                      createBaseVNode("em", null, toDisplayString(Ve.description), 1)
                    ])
                  ])
                ]),
                "selected-option": withCtx((Ve) => [
                  createBaseVNode("div", _hoisted_25, toDisplayString(Ve.name), 1)
                ]),
                "no-options": withCtx(({ search: Ve, searching: Me }) => [
                  Me ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
                    createTextVNode(" No datasets matching "),
                    createBaseVNode("em", null, toDisplayString(Ve), 1),
                    createTextVNode(". ")
                  ], 64)) : (openBlock(), createElementBlock("em", _hoisted_26, "No datasets available. Load a WTML collection?"))
                ]),
                _: 1
              }, 8, ["options", "filter", "getOptionKey", "onUpdate:modelValue"])
            ])) : e.showCatalogChooser ? (openBlock(), createElementBlock("div", _hoisted_27, [
              _hoisted_28,
              createVNode(u, {
                id: "catalog-select-tool",
                class: "item-selector",
                searchable: !0,
                clearable: !1,
                options: e.curAvailableCatalogs,
                filter: e.filterCatalogs,
                "onUpdate:modelValue": e.addHips,
                label: "name",
                placeholder: ""
              }, {
                option: withCtx((Ve) => [
                  createBaseVNode("div", _hoisted_29, [
                    createBaseVNode("h4", _hoisted_30, toDisplayString(Ve.name), 1),
                    createBaseVNode("p", _hoisted_31, [
                      createBaseVNode("em", null, toDisplayString(Ve.description), 1)
                    ])
                  ])
                ]),
                "selected-option-container": withCtx(({}) => [
                  _hoisted_32
                ]),
                _: 1
              }, 8, ["options", "filter", "onUpdate:modelValue"])
            ])) : e.currentTool == "load-collection" ? (openBlock(), createElementBlock("div", _hoisted_33, [
              _hoisted_34,
              createBaseVNode("div", _hoisted_35, [
                _hoisted_36,
                withDirectives(createBaseVNode("input", {
                  type: "url",
                  "onUpdate:modelValue": r[3] || (r[3] = (Ve) => e.wtmlCollectionUrl = Ve),
                  onKeyup: r[4] || (r[4] = withKeys((...Ve) => e.submitWtmlCollectionUrl && e.submitWtmlCollectionUrl(...Ve), ["enter"]))
                }, null, 544), [
                  [vModelText, e.wtmlCollectionUrl]
                ]),
                createVNode(y, {
                  icon: "arrow-circle-right",
                  size: "lg",
                  class: "load-collection-icon",
                  onKeyup: withKeys(e.submitWtmlCollectionUrl, ["enter"]),
                  onClick: e.submitWtmlCollectionUrl,
                  tabindex: "0"
                }, null, 8, ["onKeyup", "onClick"])
              ])
            ])) : e.currentTool == "save-state" ? (openBlock(), createElementBlock("div", _hoisted_37, [
              _hoisted_38,
              createBaseVNode("div", _hoisted_39, [
                createBaseVNode("span", _hoisted_40, toDisplayString(this.stateAsUrl()), 1),
                createVNode(y, {
                  icon: "copy",
                  size: "lg",
                  class: "pointer",
                  onClick: e.copyStateURL,
                  onKeyup: withKeys(e.copyStateURL, ["enter"]),
                  tabindex: "0"
                }, null, 8, ["onClick", "onKeyup"])
              ])
            ])) : createCommentVNode("", !0)
          ])
        ], 32))
      ])),
      createBaseVNode("div", _hoisted_41, [
        e.hideAllChrome ? createCommentVNode("", !0) : (openBlock(), createElementBlock("ul", {
          key: 0,
          id: "controls",
          onKeydown: r[12] || (r[12] = withModifiers(() => {
          }, ["stop"]))
        }, [
          withDirectives(createBaseVNode("li", null, [
            createVNode(g, {
              placement: "left",
              arrow: !0,
              interactive: !0
            }, {
              content: withCtx((Ve) => [
                createBaseVNode("ul", _hoisted_42, [
                  withDirectives(createBaseVNode("li", null, [
                    createBaseVNode("a", {
                      href: "#",
                      onClick: (Me) => {
                        e.selectTool("choose-background"), Ve.close();
                      },
                      tabindex: "0"
                    }, [
                      createVNode(y, { icon: "mountain" }),
                      createTextVNode(" Choose background")
                    ], 8, _hoisted_43)
                  ], 512), [
                    [vShow, e.showBackgroundChooser]
                  ]),
                  withDirectives(createBaseVNode("li", null, [
                    createBaseVNode("a", {
                      href: "#",
                      onClick: (Me) => {
                        e.selectTool("add-imagery-layer"), Ve.close();
                      },
                      tabindex: "0"
                    }, [
                      createVNode(y, { icon: "image" }),
                      createTextVNode(" Add imagery as layer")
                    ], 8, _hoisted_44)
                  ], 512), [
                    [vShow, e.showAddImageryTool]
                  ]),
                  withDirectives(createBaseVNode("li", null, [
                    createBaseVNode("a", {
                      href: "#",
                      onClick: (Me) => {
                        e.selectTool("choose-catalog"), Ve.close();
                      },
                      tabindex: "0"
                    }, [
                      createVNode(y, { icon: "map-marked-alt" }),
                      createTextVNode(" Add HiPS catalogs")
                    ], 8, _hoisted_45)
                  ], 512), [
                    [vShow, e.showCatalogTool]
                  ]),
                  withDirectives(createBaseVNode("li", null, [
                    createBaseVNode("a", {
                      href: "#",
                      onClick: (Me) => {
                        e.selectTool("load-collection"), Ve.close();
                      },
                      tabindex: "0"
                    }, [
                      createVNode(y, { icon: "photo-video" }),
                      createTextVNode(" Load WTML collection")
                    ], 8, _hoisted_46)
                  ], 512), [
                    [vShow, e.showCollectionLoader]
                  ]),
                  createBaseVNode("li", null, [
                    createBaseVNode("a", {
                      href: "#",
                      onClick: (Me) => {
                        e.selectTool("save-state"), Ve.close();
                      },
                      tabindex: "0"
                    }, [
                      createVNode(y, { icon: "save" }),
                      createTextVNode(" Create link to current view")
                    ], 8, _hoisted_47)
                  ])
                ])
              ]),
              default: withCtx(() => [
                createVNode(y, {
                  class: "tooltip-target tooltip-icon",
                  icon: "sliders-h",
                  size: "lg",
                  tabindex: "0"
                })
              ]),
              _: 1
            })
          ], 512), [
            [vShow, e.showToolMenu]
          ]),
          withDirectives(createBaseVNode("li", null, [
            createVNode(y, {
              icon: "search-plus",
              size: "lg",
              class: "tooltip-icon",
              onKeyup: r[6] || (r[6] = withKeys((Ve) => e.doZoom(!0), ["enter"])),
              onClick: r[7] || (r[7] = (Ve) => e.doZoom(!0)),
              tabindex: "0"
            })
          ], 512), [
            [vShow, !e.wwtIsTourPlaying]
          ]),
          withDirectives(createBaseVNode("li", null, [
            createVNode(y, {
              icon: "search-minus",
              size: "lg",
              class: "tooltip-icon",
              onKeyup: r[8] || (r[8] = withKeys((Ve) => e.doZoom(!1), ["enter"])),
              onClick: r[9] || (r[9] = (Ve) => e.doZoom(!1)),
              tabindex: "0"
            })
          ], 512), [
            [vShow, !e.wwtIsTourPlaying]
          ]),
          withDirectives(createBaseVNode("li", null, [
            createVNode(y, {
              icon: e.fullscreenModeActive ? "compress" : "expand",
              size: "lg",
              class: "nudgeright1 tooltip-icon",
              onKeyup: r[10] || (r[10] = withKeys((Ve) => e.toggleFullscreen(), ["enter"])),
              onClick: r[11] || (r[11] = (Ve) => e.toggleFullscreen()),
              tabindex: "0"
            }, null, 8, ["icon"])
          ], 512), [
            [vShow, e.fullscreenAvailable]
          ])
        ], 32))
      ])
    ]),
    createVNode(Ee, {
      group: "load-collection",
      position: "top right"
    }),
    createVNode(Ee, {
      group: "copy-url",
      position: "top right"
    }),
    e.hideAllChrome ? createCommentVNode("", !0) : withDirectives((openBlock(), createElementBlock("div", {
      key: 0,
      id: "webgl2-popup",
      onKeydown: r[13] || (r[13] = withModifiers(() => {
      }, ["stop"]))
    }, [
      createTextVNode(" To get the full WWT experience, consider using the latest version of Chrome, Firefox or Edge. In case you would like to use Safari, we recommend that you "),
      _hoisted_48,
      createTextVNode(". ")
    ], 544)), [
      [vShow, e.wwtShowWebGl2Warning]
    ])
  ], 512)) : createCommentVNode("", !0);
}
const App = /* @__PURE__ */ _export_sfc(App$1, [["render", _sfc_render$4]]), uiColorMaps = [
  { wwt: "viridis", desc: "Viridis" },
  { wwt: "plasma", desc: "Plasma" },
  { wwt: "inferno", desc: "Inferno" },
  { wwt: "magma", desc: "Magma" },
  { wwt: "cividis", desc: "Cividis" },
  { wwt: "rdylbu", desc: "Thermal (Red-Yellow-Blue)" },
  { wwt: "gray", desc: "Black-to-White" },
  { wwt: "greys", desc: "White-to-Black" },
  { wwt: "purples", desc: "White-to-Purple" },
  { wwt: "blues", desc: "White-to-Blue" },
  { wwt: "greens", desc: "White-to-Green" },
  { wwt: "oranges", desc: "White-to-Orange" },
  { wwt: "reds", desc: "White-to-Red" }
], uiScaleTypes = [
  { wwt: ScaleTypes.linear, desc: "Linear" },
  { wwt: ScaleTypes.log, desc: "Logarithmic" },
  { wwt: ScaleTypes.squareRoot, desc: "Square Root" },
  { wwt: ScaleTypes.power, desc: "Exponential" }
  // Not fully implemented ... I think ...?
  //{ wwt: ScaleTypes.histogramEqualization, desc: "Hist-Eq" },
], _sfc_main$3 = /* @__PURE__ */ defineComponent({
  props: {
    imageset: { type: index_umdExports.ImageSetLayerState, required: !0 }
  },
  data() {
    return {
      uiColorMaps,
      uiScaleTypes,
      hasFocus: !1,
      isSelected: !1
    };
  },
  computed: {
    ...mapState(index_umdExports.engineStore, ["imagesetForLayer"]),
    ...mapState(index_umdExports.engineStore, {
      wwtZoomDeg: "zoomDeg"
    }),
    twoWayOpacity: {
      get() {
        return this.imageset.settings.opacity;
      },
      set(e) {
        this.applySettings([["opacity", e]]);
      }
    },
    twoWayColorMapperName: {
      get() {
        return this.imageset.settings.colorMapperName;
      },
      set(e) {
        this.applySettings([["colorMapperName", e]]);
      }
    },
    twoWayScaleType: {
      get() {
        return this.imageset.scaleType;
      },
      set(e) {
        const r = {
          id: this.imageset.getGuid(),
          vmin: this.imageset.vmin,
          vmax: this.imageset.vmax,
          stretch: e
        };
        this.stretchFitsLayer(r);
      }
    },
    twoWayVMax: {
      get() {
        return this.imageset.vmax;
      },
      set(e) {
        const r = {
          id: this.imageset.getGuid(),
          vmin: this.imageset.vmin,
          vmax: e,
          stretch: this.imageset.scaleType
        };
        this.stretchFitsLayer(r);
      }
    },
    twoWayVMaxText: {
      get() {
        return "" + this.twoWayVMax;
      },
      set(e) {
        const r = Number(e);
        isFinite(r) && (this.twoWayVMax = r);
      }
    },
    twoWayVMin: {
      get() {
        return this.imageset.vmin;
      },
      set(e) {
        const r = {
          id: this.imageset.getGuid(),
          vmin: e,
          vmax: this.imageset.vmax,
          stretch: this.imageset.scaleType
        };
        this.stretchFitsLayer(r);
      }
    },
    twoWayVMinText: {
      get() {
        return "" + this.twoWayVMin;
      },
      set(e) {
        const r = Number(e);
        isFinite(r) && (this.twoWayVMin = r);
      }
    }
  },
  methods: {
    ...mapActions(index_umdExports.engineStore, [
      "applyFitsLayerSettings",
      "gotoRADecZoom",
      "deleteLayer",
      "stretchFitsLayer"
    ]),
    applySettings(e) {
      this.applyFitsLayerSettings({
        id: this.imageset.getGuid(),
        settings: e
      });
    },
    handleDelete() {
      this.deleteLayer(this.imageset.getGuid());
    },
    handleGoto() {
      const e = this.imagesetForLayer(this.imageset.getGuid());
      if (e !== null) {
        let r = this.wwtZoomDeg;
        const n = e.get_wcsImage(), s = 1.7;
        e.get_projection() == ProjectionType.skyImage ? n !== null && (r = e.get_baseTileDegrees() * n.get_sizeY() * 6 * s) : r = e.get_baseTileDegrees() * 6 * s, this.wwtZoomDeg < r && (r = this.wwtZoomDeg), this.gotoRADecZoom({
          zoomDeg: r,
          raRad: e.get_centerX() * D2R$1,
          decRad: e.get_centerY() * D2R$1,
          instant: !1
        });
      }
    },
    handleVisibility() {
      this.applySettings([["enabled", !this.imageset.settings.enabled]]);
    },
    handleCutoffInteract(e) {
      let r = 0, n = 0, s = e ? this.imageset.vmax : this.imageset.vmin;
      const a = () => {
        const c = e ? this.twoWayVMin : this.twoWayVMax, u = Math.abs(c - s) * Math.pow(10, -1 - n), y = s + u * r;
        Number.isFinite(y) && (e ? this.twoWayVMax = y : this.twoWayVMin = y);
      }, t = (c) => {
        const _ = window.innerWidth, u = window.innerHeight;
        r = 2 * c.clientX / _ - 1, n = 2 * c.clientY / u - 1, a();
      }, l = (c) => {
        c.code == "Space" && (e ? s = this.twoWayVMax : s = this.twoWayVMin, a());
      }, o = (c) => {
        document.documentElement.classList.remove("pointer-tracking"), document.removeEventListener("pointermove", t, { capture: !0 }), document.removeEventListener("pointerup", o, { capture: !0 }), document.removeEventListener("pointercancel", o, { capture: !0 }), document.removeEventListener("keydown", l, { capture: !0 });
      };
      document.addEventListener("pointermove", t, { capture: !0 }), document.addEventListener("pointerup", o, { capture: !0 }), document.addEventListener("pointercancel", o, { capture: !0 }), document.addEventListener("keydown", l, { capture: !0 }), document.documentElement.classList.add("pointer-tracking");
    }
  }
}), _withScopeId$2 = (e) => (pushScopeId("data-v-740e0ddb"), e = e(), popScopeId(), e), _hoisted_1$2 = { id: "main-container" }, _hoisted_2$2 = {
  key: 0,
  class: "detail-container"
}, _hoisted_3$2 = { class: "detail-row" }, _hoisted_4$2 = /* @__PURE__ */ _withScopeId$2(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "Opacity:", -1)), _hoisted_5$2 = { class: "detail-row" }, _hoisted_6$2 = /* @__PURE__ */ _withScopeId$2(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "Colormap:", -1)), _hoisted_7$2 = ["value"], _hoisted_8$2 = { class: "detail-row" }, _hoisted_9$2 = /* @__PURE__ */ _withScopeId$2(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "Stretch:", -1)), _hoisted_10$2 = ["value"], _hoisted_11$2 = { class: "detail-row" }, _hoisted_12$2 = /* @__PURE__ */ _withScopeId$2(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt cutoff" }, "Low cutoff:", -1)), _hoisted_13$1 = { class: "detail-row" }, _hoisted_14$1 = /* @__PURE__ */ _withScopeId$2(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt cutoff" }, "High cutoff:", -1));
function _sfc_render$3(e, r, n, s, a, t) {
  const l = resolveComponent("font-awesome-icon"), o = resolveComponent("vue-slider"), c = resolveComponent("transition-expand"), _ = resolveDirective("hide");
  return openBlock(), createElementBlock("div", {
    id: "root-container",
    onMouseenter: r[11] || (r[11] = (u) => e.hasFocus = !0),
    onMouseleave: r[12] || (r[12] = (u) => e.hasFocus = !1),
    onFocus: r[13] || (r[13] = (u) => e.hasFocus = !0),
    onBlur: r[14] || (r[14] = (u) => e.hasFocus = !1)
  }, [
    createBaseVNode("div", _hoisted_1$2, [
      createBaseVNode("label", {
        focusable: "false",
        id: "name-label",
        class: "ellipsize",
        onClick: r[0] || (r[0] = (u) => e.isSelected = !e.isSelected),
        onKeyup: r[1] || (r[1] = withKeys((u) => e.isSelected = !e.isSelected, ["enter"]))
      }, toDisplayString(e.imageset.settings.name), 33),
      withDirectives(createVNode(l, {
        class: "icon-button",
        icon: "map-marker-alt",
        onClick: e.handleGoto
      }, null, 8, ["onClick"]), [
        [_, !e.hasFocus]
      ]),
      withDirectives(createVNode(l, {
        class: "icon-button",
        icon: e.imageset.settings.enabled ? "eye" : "eye-slash",
        onClick: e.handleVisibility
      }, null, 8, ["icon", "onClick"]), [
        [_, !e.hasFocus]
      ]),
      withDirectives(createVNode(l, {
        class: "icon-button",
        icon: "times",
        onClick: e.handleDelete
      }, null, 8, ["onClick"]), [
        [_, !e.hasFocus]
      ])
    ]),
    createVNode(c, null, {
      default: withCtx(() => [
        e.isSelected ? (openBlock(), createElementBlock("div", _hoisted_2$2, [
          createBaseVNode("div", _hoisted_3$2, [
            _hoisted_4$2,
            createVNode(o, {
              class: "scrubber",
              modelValue: e.twoWayOpacity,
              "onUpdate:modelValue": r[2] || (r[2] = (u) => e.twoWayOpacity = u),
              max: 1,
              duration: 0,
              interval: 0.01,
              contained: !0,
              "hide-label": !0,
              "use-keyboard": !0
            }, null, 8, ["modelValue"])
          ]),
          createBaseVNode("div", _hoisted_5$2, [
            _hoisted_6$2,
            withDirectives(createBaseVNode("select", {
              "onUpdate:modelValue": r[3] || (r[3] = (u) => e.twoWayColorMapperName = u)
            }, [
              (openBlock(!0), createElementBlock(Fragment, null, renderList(e.uiColorMaps, (u) => (openBlock(), createElementBlock("option", {
                value: u.wwt,
                key: u.desc
              }, toDisplayString(u.desc), 9, _hoisted_7$2))), 128))
            ], 512), [
              [vModelSelect, e.twoWayColorMapperName]
            ])
          ]),
          createBaseVNode("div", _hoisted_8$2, [
            _hoisted_9$2,
            withDirectives(createBaseVNode("select", {
              "onUpdate:modelValue": r[4] || (r[4] = (u) => e.twoWayScaleType = u)
            }, [
              (openBlock(!0), createElementBlock(Fragment, null, renderList(e.uiScaleTypes, (u) => (openBlock(), createElementBlock("option", {
                value: u.wwt,
                key: u.desc
              }, toDisplayString(u.desc), 9, _hoisted_10$2))), 128))
            ], 512), [
              [vModelSelect, e.twoWayScaleType]
            ])
          ]),
          createBaseVNode("div", _hoisted_11$2, [
            _hoisted_12$2,
            withDirectives(createBaseVNode("input", {
              type: "text",
              class: "detail-input",
              "onUpdate:modelValue": r[5] || (r[5] = (u) => e.twoWayVMinText = u)
            }, null, 512), [
              [
                vModelText,
                e.twoWayVMinText,
                void 0,
                { lazy: !0 }
              ]
            ]),
            createVNode(l, {
              class: "icon-button",
              icon: "crosshairs",
              size: "lg",
              onClick: r[6] || (r[6] = (u) => e.handleCutoffInteract(!1)),
              onKeyup: r[7] || (r[7] = withKeys((u) => e.handleCutoffInteract(!1), ["enter"]))
            })
          ]),
          createBaseVNode("div", _hoisted_13$1, [
            _hoisted_14$1,
            withDirectives(createBaseVNode("input", {
              type: "text",
              class: "detail-input",
              "onUpdate:modelValue": r[8] || (r[8] = (u) => e.twoWayVMaxText = u)
            }, null, 512), [
              [
                vModelText,
                e.twoWayVMaxText,
                void 0,
                { lazy: !0 }
              ]
            ]),
            createVNode(l, {
              class: "icon-button",
              icon: "crosshairs",
              size: "lg",
              onClick: r[9] || (r[9] = (u) => e.handleCutoffInteract(!0)),
              onKeyup: r[10] || (r[10] = withKeys((u) => e.handleCutoffInteract(!0), ["enter"]))
            })
          ])
        ])) : createCommentVNode("", !0)
      ]),
      _: 1
    })
  ], 32);
}
const ImagesetItem = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["render", _sfc_render$3], ["__scopeId", "data-v-740e0ddb"]]), R2D = 180 / Math.PI, _sfc_main$2 = /* @__PURE__ */ defineComponent({
  props: {
    source: { type: Object, required: !0 }
  },
  data() {
    return {
      hasFocus: !1,
      isSelected: !1,
      editing: !1
    };
  },
  computed: {
    ...mapState(index_umdExports.engineStore, {
      wwtDegZoom: "zoomDeg"
    }),
    raStr() {
      return fmtHours(this.source.ra);
    },
    decStr() {
      return fmtDegLat(this.source.dec);
    },
    searchRadius() {
      return Math.max(2 * this.wwtDegZoom / 360, 1 / 6);
    },
    sourceName: {
      get() {
        return this.source.name;
      },
      set(e) {
        this.source.name = e;
      }
    },
    simbadCoordinatesURL() {
      const e = "http://simbad.u-strasbg.fr/simbad/sim-coo?", r = {
        "output.format": "HTML",
        Coord: `${this.source.ra * R2D} ${this.source.dec * R2D}`,
        Radius: String(this.searchRadius),
        "Radius.unit": "arcmin"
      };
      return e + new URLSearchParams(r).toString();
    },
    nedCoordinatesURL() {
      const e = fmtHours(this.source.ra, "h", "m") + "s", r = fmtDegLat(this.source.dec, "d", "m") + "s", n = "https://ned.ipac.caltech.edu/conesearch?", s = {
        in_csys: "Equatorial",
        in_equinox: "J2000",
        coordinates: `${e} ${r}`,
        radius: String(this.searchRadius),
        hconst: "67.8",
        omegam: "0.308",
        omegav: "0.692",
        wmap: "4",
        corr_z: "1",
        z_constraint: "Unconstrained",
        z_unit: "z",
        ot_include: "ANY",
        nmp_op: "ANY",
        search_type: "Near Position Search",
        out_csys: "Same as Input",
        obj_sort: "Distance to search center"
      };
      return n + new URLSearchParams(s).toString();
    }
  },
  methods: {
    ...mapActions(index_umdExports.engineStore, ["gotoRADecZoom"]),
    ...mapActions(researchAppStore, ["removeSource"]),
    handleDelete() {
      this.removeSource(this.source);
    },
    handleMarkerClick() {
      this.gotoRADecZoom({
        zoomDeg: this.source.zoomDeg ?? this.wwtDegZoom,
        raRad: this.source.ra,
        decRad: this.source.dec,
        instant: !1
      }).catch((e) => console.log(e));
    },
    handleEditClick() {
      this.editing = !this.editing;
    }
  },
  watch: {
    editing(e, r) {
      const n = this.$el.getElementsByClassName(
        "name-input"
      )[0];
      e ? n.value = this.sourceName : this.sourceName = n.value;
    }
  }
}), _withScopeId$1 = (e) => (pushScopeId("data-v-1f3ab2e0"), e = e(), popScopeId(), e), _hoisted_1$1 = { id: "main-container" }, _hoisted_2$1 = {
  key: 0,
  class: "detail-container"
}, _hoisted_3$1 = { class: "detail-row" }, _hoisted_4$1 = /* @__PURE__ */ _withScopeId$1(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "RA:", -1)), _hoisted_5$1 = { class: "detail-row" }, _hoisted_6$1 = /* @__PURE__ */ _withScopeId$1(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "Dec:", -1)), _hoisted_7$1 = { class: "detail-row" }, _hoisted_8$1 = /* @__PURE__ */ _withScopeId$1(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "Table:", -1)), _hoisted_9$1 = { class: "detail-row" }, _hoisted_10$1 = /* @__PURE__ */ _withScopeId$1(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "Query Coordinates:", -1)), _hoisted_11$1 = ["href"], _hoisted_12$1 = ["href"];
function _sfc_render$2(e, r, n, s, a, t) {
  const l = resolveComponent("font-awesome-icon"), o = resolveComponent("transition-expand"), c = resolveDirective("hide");
  return openBlock(), createElementBlock("div", {
    id: "root-container",
    onMouseenter: r[3] || (r[3] = (_) => e.hasFocus = !0),
    onMouseleave: r[4] || (r[4] = (_) => e.hasFocus = !1),
    onFocus: r[5] || (r[5] = (_) => e.hasFocus = !0),
    onBlur: r[6] || (r[6] = (_) => e.hasFocus = !1)
  }, [
    createBaseVNode("div", _hoisted_1$1, [
      withDirectives(createBaseVNode("label", {
        focusable: "false",
        id: "name-label",
        class: "ellipsize",
        onClick: r[0] || (r[0] = (_) => e.isSelected = !e.isSelected),
        onKeyup: r[1] || (r[1] = withKeys((_) => e.isSelected = !e.isSelected, ["enter"]))
      }, toDisplayString(e.source.name), 545), [
        [vShow, !e.editing]
      ]),
      withDirectives(createBaseVNode("input", {
        class: "name-input",
        onBlur: r[2] || (r[2] = (_) => e.editing = !1)
      }, null, 544), [
        [vShow, e.editing]
      ]),
      withDirectives(createVNode(l, {
        class: normalizeClass(["icon-button", { "icon-active": e.editing }]),
        icon: "pencil-alt",
        onClick: e.handleEditClick
      }, null, 8, ["class", "onClick"]), [
        [c, !e.hasFocus]
      ]),
      withDirectives(createVNode(l, {
        class: "icon-button",
        icon: "map-marker-alt",
        onClick: e.handleMarkerClick
      }, null, 8, ["onClick"]), [
        [c, !e.hasFocus]
      ]),
      withDirectives(createVNode(l, {
        class: "icon-button",
        icon: "times",
        onClick: e.handleDelete
      }, null, 8, ["onClick"]), [
        [c, !e.hasFocus]
      ])
    ]),
    createVNode(o, null, {
      default: withCtx(() => [
        e.isSelected ? (openBlock(), createElementBlock("div", _hoisted_2$1, [
          createBaseVNode("div", _hoisted_3$1, [
            _hoisted_4$1,
            createBaseVNode("span", null, toDisplayString(e.raStr), 1)
          ]),
          createBaseVNode("div", _hoisted_5$1, [
            _hoisted_6$1,
            createBaseVNode("span", null, toDisplayString(e.decStr), 1)
          ]),
          createBaseVNode("div", _hoisted_7$1, [
            _hoisted_8$1,
            createBaseVNode("span", null, toDisplayString(e.source.catalogLayer.name), 1)
          ]),
          createBaseVNode("div", _hoisted_9$1, [
            _hoisted_10$1,
            createBaseVNode("a", {
              href: e.simbadCoordinatesURL,
              target: "_blank",
              rel: "noopener noreferrer"
            }, "SIMBAD", 8, _hoisted_11$1),
            createTextVNode(" | "),
            createBaseVNode("a", {
              href: e.nedCoordinatesURL,
              target: "_blank",
              rel: "noopener noreferrer"
            }, "NED", 8, _hoisted_12$1)
          ])
        ])) : createCommentVNode("", !0)
      ]),
      _: 1
    })
  ], 32);
}
const SourceItem = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["render", _sfc_render$2], ["__scopeId", "data-v-1f3ab2e0"]]), uiPlotTypes = [
  { wwt: PlotTypes.gaussian, desc: "Gaussian" },
  { wwt: PlotTypes.circle, desc: "Circle" },
  { wwt: PlotTypes.pushPin, desc: "Push-pin" },
  { wwt: PlotTypes.point, desc: "Point" },
  { wwt: PlotTypes.square, desc: "Square" }
  // "custom": handled same as push-pin in the engine
], _sfc_main$1 = /* @__PURE__ */ defineComponent({
  props: {
    layer: { type: Object, required: !0 },
    defaultColor: { default: srcExports.Color.fromArgb(1, 255, 255, 255), required: !1 }
  },
  data() {
    return {
      uiPlotTypes,
      editing: !1,
      hasFocus: !1,
      isSelected: !1,
      isLayerHips: !1
    };
  },
  computed: {
    ...mapState(researchAppStore, ["researchAppTableLayerVisibility"]),
    ...mapState(index_umdExports.engineStore, ["spreadsheetState"]),
    visible() {
      return this.researchAppTableLayerVisibility(this.layer);
    },
    layerId() {
      return this.layer.id ?? "";
    },
    layerState() {
      return this.spreadsheetState(this.layer);
    },
    color: {
      get() {
        const e = this.layerState;
        return e !== null ? e.get_color() : this.defaultColor;
      },
      set(e) {
        this.applySettings([
          ["color", e],
          ["opacity", e.a]
        ]);
      }
    },
    colorString() {
      return `rgba(${this.color.r}, ${this.color.g}, ${this.color.b}, ${this.color.a})`;
    },
    enabled() {
      const e = this.layerState;
      return e !== null ? e.get_enabled() : !0;
    },
    plotType: {
      get() {
        const e = this.layerState;
        return e !== null ? e.get_plotType() : PlotTypes.gaussian;
      },
      set(e) {
        this.applySettings([["plotType", e]]);
      }
    },
    scaleFactorDb: {
      get() {
        const e = this.layerState;
        return e !== null ? 10 * Math.log10(e.get_scaleFactor()) : 0;
      },
      set(e) {
        this.applySettings([["scaleFactor", Math.pow(10, 0.1 * e)]]);
      }
    },
    scaleFactorDbText: {
      // I can't find a customizable Vue numeric input that has good TypeScript
      // support, so we just hand-roll the processing to give nice textual
      // presentation.
      get() {
        return this.scaleFactorDb == 0 ? "0.00" : this.scaleFactorDb < 0 ? this.scaleFactorDb.toFixed(2) : "+" + this.scaleFactorDb.toFixed(2);
      },
      set(e) {
        const r = Number(e);
        isFinite(r) && (this.scaleFactorDb = r);
      }
    }
  },
  methods: {
    ...mapActions(index_umdExports.engineStore, [
      "applyTableLayerSettings",
      "deleteLayer",
      "removeCatalogHipsByName"
    ]),
    ...mapActions(researchAppStore, [
      "removeResearchAppTableLayer",
      "setResearchAppTableLayerVisibility"
    ]),
    applySettings(e) {
      this.applyTableLayerSettings({
        id: this.layerId,
        settings: e
      });
    },
    handleDelete() {
      this.removeResearchAppTableLayer(this.layer), this.layer instanceof index_umdExports.ImagesetInfo ? this.removeCatalogHipsByName(this.layer.name) : this.deleteLayer(this.layer.id);
    },
    handleToggle() {
      this.setResearchAppTableLayerVisibility({
        layer: this.layer,
        visible: !this.visible
      });
    },
    handleColorChange(e) {
      const r = e.rgba;
      this.color = srcExports.Color.fromArgb(r.a, r.r, r.g, r.b);
    },
    handleEditClick() {
      this.editing = !this.editing;
    },
    doAdjustSize(e) {
      e ? this.scaleFactorDb += 0.5 : this.scaleFactorDb -= 0.5;
    }
  },
  mounted() {
    this.isLayerHips = this.layer instanceof index_umdExports.ImagesetInfo;
  },
  watch: {
    visible(e) {
      this.applySettings([["enabled", e]]);
    },
    enabled(e) {
      this.setResearchAppTableLayerVisibility({
        layer: this.layer,
        visible: e
      });
    },
    editing(e) {
      const r = this.$el.getElementsByClassName(
        "name-input"
      )[0];
      e ? r.value = this.layer.name : this.layer.name = r.value;
    }
  }
}), _withScopeId = (e) => (pushScopeId("data-v-bf7403e6"), e = e(), popScopeId(), e), _hoisted_1 = { id: "main-container" }, _hoisted_2 = {
  key: 0,
  class: "detail-container"
}, _hoisted_3 = {
  key: 0,
  class: "detail-row"
}, _hoisted_4 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "URL:", -1)), _hoisted_5 = { class: "ellipsize" }, _hoisted_6 = {
  key: 1,
  class: "detail-row"
}, _hoisted_7 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "Description:", -1)), _hoisted_8 = { class: "detail-row" }, _hoisted_9 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "Color:", -1)), _hoisted_10 = { class: "detail-row" }, _hoisted_11 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "Marker:", -1)), _hoisted_12 = ["value"], _hoisted_13 = { class: "detail-row" }, _hoisted_14 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ createBaseVNode("span", { class: "prompt" }, "Size adjust:", -1)), _hoisted_15 = { class: "flex-row" };
function _sfc_render$1(e, r, n, s, a, t) {
  const l = resolveComponent("font-awesome-icon"), o = resolveComponent("color-picker"), c = resolveComponent("Popper"), _ = resolveComponent("transition-expand"), u = resolveDirective("hide");
  return openBlock(), createElementBlock("div", {
    id: "root-container",
    onMouseenter: r[9] || (r[9] = (y) => e.hasFocus = !0),
    onMouseleave: r[10] || (r[10] = (y) => e.hasFocus = !1),
    onFocus: r[11] || (r[11] = (y) => e.hasFocus = !0),
    onBlur: r[12] || (r[12] = (y) => e.hasFocus = !1)
  }, [
    createBaseVNode("div", _hoisted_1, [
      withDirectives(createBaseVNode("label", {
        focusable: "false",
        id: "name-label",
        class: "ellipsize",
        onClick: r[0] || (r[0] = (y) => e.isSelected = !e.isSelected),
        onKeyup: r[1] || (r[1] = withKeys((y) => e.isSelected = !e.isSelected, ["enter"]))
      }, toDisplayString(e.layer.name), 545), [
        [vShow, !e.editing]
      ]),
      withDirectives(createBaseVNode("input", {
        class: "name-input",
        onBlur: r[2] || (r[2] = (y) => e.editing = !1)
      }, null, 544), [
        [vShow, e.editing]
      ]),
      e.isLayerHips ? createCommentVNode("", !0) : withDirectives((openBlock(), createBlock(l, {
        key: 0,
        onClick: e.handleEditClick,
        class: normalizeClass(["icon-button", { "icon-active": e.editing }]),
        icon: "pencil-alt"
      }, null, 8, ["onClick", "class"])), [
        [u, !e.hasFocus]
      ]),
      withDirectives(createVNode(l, {
        class: "icon-button",
        icon: e.visible ? "eye" : "eye-slash",
        onClick: e.handleToggle
      }, null, 8, ["icon", "onClick"]), [
        [u, !e.hasFocus]
      ]),
      withDirectives(createVNode(l, {
        class: "icon-button",
        icon: "times",
        onClick: e.handleDelete
      }, null, 8, ["onClick"]), [
        [u, !e.hasFocus]
      ])
    ]),
    createVNode(_, null, {
      default: withCtx(() => [
        e.isSelected ? (openBlock(), createElementBlock("div", _hoisted_2, [
          e.isLayerHips ? (openBlock(), createElementBlock("div", _hoisted_3, [
            _hoisted_4,
            createBaseVNode("span", _hoisted_5, toDisplayString(e.layer.url), 1)
          ])) : createCommentVNode("", !0),
          e.isLayerHips && e.layer.description.length > 0 ? (openBlock(), createElementBlock("div", _hoisted_6, [
            _hoisted_7,
            createBaseVNode("span", null, toDisplayString(e.layer.description), 1)
          ])) : createCommentVNode("", !0),
          createBaseVNode("div", _hoisted_8, [
            _hoisted_9,
            createVNode(c, {
              arrow: !0,
              placement: "right"
            }, {
              content: withCtx(() => [
                createVNode(o, {
                  class: "app-color-picker",
                  theme: "dark",
                  color: e.colorString,
                  "colors-default": [],
                  onChangeColor: e.handleColorChange
                }, null, 8, ["color", "onChangeColor"])
              ]),
              default: withCtx(() => [
                createVNode(l, {
                  class: "color-picker-icon",
                  icon: "circle",
                  size: "lg",
                  style: normalizeStyle({
                    color: `rgba(${e.color.r}, ${e.color.g}, ${e.color.b}, ${e.color.a})`
                  })
                }, null, 8, ["style"])
              ]),
              _: 1
            })
          ]),
          createBaseVNode("div", _hoisted_10, [
            _hoisted_11,
            withDirectives(createBaseVNode("select", {
              "onUpdate:modelValue": r[3] || (r[3] = (y) => e.plotType = y)
            }, [
              (openBlock(!0), createElementBlock(Fragment, null, renderList(e.uiPlotTypes, (y) => (openBlock(), createElementBlock("option", {
                value: y.wwt,
                key: y.desc
              }, toDisplayString(y.desc), 9, _hoisted_12))), 128))
            ], 512), [
              [vModelSelect, e.plotType]
            ])
          ]),
          createBaseVNode("div", _hoisted_13, [
            _hoisted_14,
            createBaseVNode("div", _hoisted_15, [
              createVNode(l, {
                class: "icon-button",
                size: "lg",
                icon: "minus-circle",
                onKeyup: r[4] || (r[4] = withKeys((y) => e.doAdjustSize(!1), ["enter"])),
                onClick: r[5] || (r[5] = (y) => e.doAdjustSize(!1)),
                tabindex: "0"
              }),
              withDirectives(createBaseVNode("input", {
                type: "text",
                class: "scale-factor-input",
                "onUpdate:modelValue": r[6] || (r[6] = (y) => e.scaleFactorDbText = y)
              }, null, 512), [
                [
                  vModelText,
                  e.scaleFactorDbText,
                  void 0,
                  { lazy: !0 }
                ]
              ]),
              createVNode(l, {
                class: "icon-button",
                size: "lg",
                icon: "plus-circle",
                onKeyup: r[7] || (r[7] = withKeys((y) => e.doAdjustSize(!0), ["enter"])),
                onClick: r[8] || (r[8] = (y) => e.doAdjustSize(!0)),
                tabindex: "0"
              })
            ])
          ])
        ])) : createCommentVNode("", !0)
      ]),
      _: 1
    })
  ], 32);
}
const SpreadsheetItem = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["render", _sfc_render$1], ["__scopeId", "data-v-bf7403e6"]]), _sfc_main = /* @__PURE__ */ defineComponent({
  name: "TransitionExpand",
  emits: ["enter", "after-enter", "leave"],
  methods: {
    enter(e) {
      const r = getComputedStyle(e).width;
      e.style.width = r, e.style.position = "absolute", e.style.visibility = "hidden", e.style.height = "auto";
      const n = getComputedStyle(e).height;
      e.style.width = "", e.style.position = "", e.style.visibility = "visible", e.style.height = "0px", getComputedStyle(e).height, requestAnimationFrame(() => {
        e.style.height = n;
      }), this.$emit("enter");
    },
    afterEnter(e) {
      e.style.height = "auto", this.$emit("after-enter");
    },
    leave(e) {
      const r = getComputedStyle(e).height;
      e.style.height = r, getComputedStyle(e).height, requestAnimationFrame(() => {
        e.style.height = "0";
      }), this.$emit("leave");
    }
  }
});
function _sfc_render(e, r, n, s, a, t) {
  return openBlock(), createBlock(Transition, {
    name: "expand",
    onEnter: e.enter,
    onAfterEnter: e.afterEnter,
    onLeave: e.leave
  }, {
    default: withCtx(() => [
      renderSlot(e.$slots, "default", {}, void 0, !0)
    ]),
    _: 3
  }, 8, ["onEnter", "onAfterEnter", "onLeave"]);
}
const TransitionExpand = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__scopeId", "data-v-76a5a04c"]]);
function createRender(e) {
  return ({ model: r, el: n }) => {
    let s = document.createElement("div");
    s.setAttribute("id", "app-wrapper"), s.style.setProperty("height", "400px", ""), s.style.setProperty("width", "100%", ""), s.style.setProperty("border", "none", ""), n.appendChild(s);
    let a = e.mount(s);
    return window.vm = a, a.layers = {}, r.on("msg:custom", (t) => {
      let l = null, o = null, c = null;
      switch (t.event) {
        case "center_on_coordinates":
          console.log(isCenterOnCoordinatesMessage(t)), window.postMessage(t);
          break;
        case "table_layer_create":
          window.postMessage(t);
          break;
        case "table_layer_update":
          window.postMessage(t);
          break;
        case "table_layer_set":
          [l, o] = Object.entries(a.wwtSpreadSheetLayers).filter(([y, g]) => g.name === t.id).at(0), c = a.spreadSheetLayerById(l);
          let _ = t.setting, u = null;
          _.indexOf("Column") >= 0 ? u = c.get__table().header.indexOf(t.value) : _ == "color" ? u = srcExports.Color.fromHex(t.value).toFormat() : _ == "colorMapper" ? u = srcExports.ColorMapContainer.fromArgbList(t.value) : _ == "altUnit" ? u = srcExports.AltUnits[t.value] : _ == "raUnits" ? u = srcExports.RAUnits[t.value] : _ == "altType" ? u = srcExports.AltTypes[t.value || "altitude"] : _ == "plotType" ? u = srcExports.PlotTypes[t.value] : _ == "markerScale" ? u = srcExports.MarkerScales[t.value] : _ == "coordinatesType" ? u = srcExports.CoordinatesTypes[t.value] : _ == "cartesianScale" ? u = srcExports.AltUnits[t.value] : u = t.value, t.value = u, window.postMessage(t);
          break;
        case "table_layer_remove":
          c = a.layers[t.id], window.postMessage(t);
          break;
        case "load_image_collection":
          window.postMessage(t);
          break;
        case "set_foreground_by_name":
          window.postMessage(t);
          break;
        case "set_background_by_name":
          window.postMessage(t);
          break;
        case "set_foreground_opacity":
          window.postMessage(t);
          break;
        case "modify_settings":
          window.postMessage(t);
          break;
        default:
          console.log(`Received uncaught custom message of type ${t.event}.`);
      }
    }), window.addEventListener(
      "message",
      (t) => {
        r.send(t.data);
      },
      !1
    ), () => e.unmount();
  };
}
library$1.add(faAdjust);
library$1.add(faArrowCircleRight);
library$1.add(faChevronDown);
library$1.add(faChevronUp);
library$1.add(faCircle);
library$1.add(faCompress);
library$1.add(faCrosshairs);
library$1.add(faExpand);
library$1.add(faEye);
library$1.add(faEyeSlash);
library$1.add(faImage);
library$1.add(faMapMarkedAlt);
library$1.add(faMapMarkerAlt);
library$1.add(faMinusCircle);
library$1.add(faMountain);
library$1.add(faPencilAlt);
library$1.add(faPhotoVideo);
library$1.add(faPlus);
library$1.add(faPlusCircle);
library$1.add(faSearchMinus);
library$1.add(faSearchPlus);
library$1.add(faSlidersH);
library$1.add(faTimes);
library$1.add(faWindowClose);
library$1.add(faSave);
library$1.add(faCopy);
const update = (e, r) => e.style.visibility = r.value ? "hidden" : "", queryParams = new URLSearchParams(window.location.search);
let allowedOrigin = queryParams.get("origin");
const messages = queryParams.get("script");
messages !== null ? (allowedOrigin = window.location.origin, console.log("WWT embed: incoming messages allowed from current origin in order to restore state")) : allowedOrigin === null && (console.log("WWT embed: no 'origin' given; forcing local origin to allow incoming messages."), allowedOrigin = window.location.origin);
const app = createApp(App, {
  wwtNamespace: wwtEngineNamespace,
  allowedOrigin
});
app.use(at);
app.use(index_umdExports.wwtPinia);
app.directive(
  /**
  * Hides an HTML element, keeping the space it would have used if it were visible (css: Visibility)
  */
  "hide",
  {
    // Run on initialisation (first render) of the directive on the element
    beforeMount(e, r, n, s) {
      update(e, r);
    },
    // Run on subsequent updates to the value supplied to the directive
    updated(e, r, n, s) {
      update(e, r);
    }
  }
);
app.component("WorldWideTelescope", UniqueWWTComponent);
app.component("Popper", entry_esm);
app.component("font-awesome-icon", FontAwesomeIcon);
app.component("color-picker", script$7);
app.component("v-select", Ce);
app.component("vue-slider", VueSlider);
app.component("spreadsheet-item", SpreadsheetItem);
app.component("imageset-item", ImagesetItem);
app.component("source-item", SourceItem);
app.component("transition-expand", TransitionExpand);
const render = createRender(app);
export {
  render
};
