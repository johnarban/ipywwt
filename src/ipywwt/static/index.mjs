function _mergeNamespaces(n, d) {
  for (var g = 0; g < d.length; g++) {
    const v = d[g];
    if (typeof v != "string" && !Array.isArray(v)) {
      for (const C in v)
        if (C !== "default" && !(C in n)) {
          const M = Object.getOwnPropertyDescriptor(v, C);
          M && Object.defineProperty(n, C, M.get ? M : {
            enumerable: !0,
            get: () => v[C]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: "Module" }));
}
var extendStatics = function(n, d) {
  return extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(g, v) {
    g.__proto__ = v;
  } || function(g, v) {
    for (var C in v)
      Object.prototype.hasOwnProperty.call(v, C) && (g[C] = v[C]);
  }, extendStatics(n, d);
};
function __extends(n, d) {
  if (typeof d != "function" && d !== null)
    throw new TypeError("Class extends value " + String(d) + " is not a constructor or null");
  extendStatics(n, d);
  function g() {
    this.constructor = n;
  }
  n.prototype = d === null ? Object.create(d) : (g.prototype = d.prototype, new g());
}
function __awaiter(n, d, g, v) {
  function C(M) {
    return M instanceof g ? M : new g(function($) {
      $(M);
    });
  }
  return new (g || (g = Promise))(function(M, $) {
    function N(X) {
      try {
        E(v.next(X));
      } catch (Pt) {
        $(Pt);
      }
    }
    function et(X) {
      try {
        E(v.throw(X));
      } catch (Pt) {
        $(Pt);
      }
    }
    function E(X) {
      X.done ? M(X.value) : C(X.value).then(N, et);
    }
    E((v = v.apply(n, d || [])).next());
  });
}
function __generator(n, d) {
  var g = { label: 0, sent: function() {
    if (M[0] & 1)
      throw M[1];
    return M[1];
  }, trys: [], ops: [] }, v, C, M, $;
  return $ = { next: N(0), throw: N(1), return: N(2) }, typeof Symbol == "function" && ($[Symbol.iterator] = function() {
    return this;
  }), $;
  function N(E) {
    return function(X) {
      return et([E, X]);
    };
  }
  function et(E) {
    if (v)
      throw new TypeError("Generator is already executing.");
    for (; $ && ($ = 0, E[0] && (g = 0)), g; )
      try {
        if (v = 1, C && (M = E[0] & 2 ? C.return : E[0] ? C.throw || ((M = C.return) && M.call(C), 0) : C.next) && !(M = M.call(C, E[1])).done)
          return M;
        switch (C = 0, M && (E = [E[0] & 2, M.value]), E[0]) {
          case 0:
          case 1:
            M = E;
            break;
          case 4:
            return g.label++, { value: E[1], done: !1 };
          case 5:
            g.label++, C = E[1], E = [0];
            continue;
          case 7:
            E = g.ops.pop(), g.trys.pop();
            continue;
          default:
            if (M = g.trys, !(M = M.length > 0 && M[M.length - 1]) && (E[0] === 6 || E[0] === 2)) {
              g = 0;
              continue;
            }
            if (E[0] === 3 && (!M || E[1] > M[0] && E[1] < M[3])) {
              g.label = E[1];
              break;
            }
            if (E[0] === 6 && g.label < M[1]) {
              g.label = M[1], M = E;
              break;
            }
            if (M && g.label < M[2]) {
              g.label = M[2], g.ops.push(E);
              break;
            }
            M[2] && g.ops.pop(), g.trys.pop();
            continue;
        }
        E = d.call(n, g);
      } catch (X) {
        E = [6, X], C = 0;
      } finally {
        v = M = 0;
      }
    if (E[0] & 5)
      throw E[1];
    return { value: E[0] ? E[1] : void 0, done: !0 };
  }
}
function __values(n) {
  var d = typeof Symbol == "function" && Symbol.iterator, g = d && n[d], v = 0;
  if (g)
    return g.call(n);
  if (n && typeof n.length == "number")
    return {
      next: function() {
        return n && v >= n.length && (n = void 0), { value: n && n[v++], done: !n };
      }
    };
  throw new TypeError(d ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
var PI = 3.14159265358979, R2D = 180 / PI, R2H = 12 / PI, D2H = 12 / 180, AltTypes;
(function(n) {
  n[n.depth = 0] = "depth", n[n.altitude = 1] = "altitude", n[n.distance = 2] = "distance", n[n.seaLevel = 3] = "seaLevel", n[n.terrain = 4] = "terrain";
})(AltTypes || (AltTypes = {}));
var AltUnits;
(function(n) {
  n[n.meters = 1] = "meters", n[n.feet = 2] = "feet", n[n.inches = 3] = "inches", n[n.miles = 4] = "miles", n[n.kilometers = 5] = "kilometers", n[n.astronomicalUnits = 6] = "astronomicalUnits", n[n.lightYears = 7] = "lightYears", n[n.parsecs = 8] = "parsecs", n[n.megaParsecs = 9] = "megaParsecs", n[n.custom = 10] = "custom";
})(AltUnits || (AltUnits = {}));
var BandPass;
(function(n) {
  n[n.gamma = 0] = "gamma", n[n.xRay = 1] = "xRay", n[n.ultraviolet = 2] = "ultraviolet", n[n.visible = 3] = "visible", n[n.hydrogenAlpha = 4] = "hydrogenAlpha", n[n.IR = 4] = "IR", n[n.microwave = 5] = "microwave", n[n.radio = 6] = "radio", n[n.visibleNight = 6] = "visibleNight";
})(BandPass || (BandPass = {}));
var Classification;
(function(n) {
  n[n.star = 1] = "star", n[n.supernova = 2] = "supernova", n[n.blackHole = 4] = "blackHole", n[n.neutronStar = 8] = "neutronStar", n[n.doubleStar = 16] = "doubleStar", n[n.multipleStars = 32] = "multipleStars", n[n.asterism = 64] = "asterism", n[n.constellation = 128] = "constellation", n[n.openCluster = 256] = "openCluster", n[n.globularCluster = 512] = "globularCluster", n[n.nebulousCluster = 1024] = "nebulousCluster", n[n.nebula = 2048] = "nebula", n[n.emissionNebula = 4096] = "emissionNebula", n[n.planetaryNebula = 8192] = "planetaryNebula", n[n.reflectionNebula = 16384] = "reflectionNebula", n[n.darkNebula = 32768] = "darkNebula", n[n.giantMolecularCloud = 65536] = "giantMolecularCloud", n[n.supernovaRemnant = 131072] = "supernovaRemnant", n[n.interstellarDust = 262144] = "interstellarDust", n[n.quasar = 524288] = "quasar", n[n.galaxy = 1048576] = "galaxy", n[n.spiralGalaxy = 2097152] = "spiralGalaxy", n[n.irregularGalaxy = 4194304] = "irregularGalaxy", n[n.ellipticalGalaxy = 8388608] = "ellipticalGalaxy", n[n.knot = 16777216] = "knot", n[n.plateDefect = 33554432] = "plateDefect", n[n.clusterOfGalaxies = 67108864] = "clusterOfGalaxies", n[n.otherNGC = 134217728] = "otherNGC", n[n.unidentified = 268435456] = "unidentified", n[n.solarSystem = 536870912] = "solarSystem", n[n.unfiltered = 1073741823] = "unfiltered", n[n.stellar = 63] = "stellar", n[n.stellarGroupings = 2032] = "stellarGroupings", n[n.nebulae = 523264] = "nebulae", n[n.galactic = 133693440] = "galactic", n[n.other = 436207616] = "other";
})(Classification || (Classification = {}));
var CoordinatesType;
(function(n) {
  n[n.spherical = 0] = "spherical", n[n.rectangular = 1] = "rectangular", n[n.orbital = 2] = "orbital";
})(CoordinatesType || (CoordinatesType = {}));
var DataTypes;
(function(n) {
  n[n.byteT = 0] = "byteT", n[n.int16T = 1] = "int16T", n[n.int32T = 2] = "int32T", n[n.floatT = 3] = "floatT", n[n.doubleT = 4] = "doubleT", n[n.none = 5] = "none";
})(DataTypes || (DataTypes = {}));
var FadeType;
(function(n) {
  n[n.fadeIn = 1] = "fadeIn", n[n.fadeOut = 2] = "fadeOut", n[n.both = 3] = "both", n[n.none = 4] = "none";
})(FadeType || (FadeType = {}));
var FolderGroup;
(function(n) {
  n[n.explorer = 0] = "explorer", n[n.tour = 1] = "tour", n[n.search = 2] = "search", n[n.constellation = 3] = "constellation", n[n.view = 4] = "view", n[n.goTo = 5] = "goTo", n[n.community = 6] = "community", n[n.context = 7] = "context", n[n.voTable = 8] = "voTable", n[n.imageStack = 9] = "imageStack";
})(FolderGroup || (FolderGroup = {}));
var FolderRefreshType;
(function(n) {
  n[n.interval = 0] = "interval", n[n.conditionalGet = 1] = "conditionalGet", n[n.viewChange = 2] = "viewChange";
})(FolderRefreshType || (FolderRefreshType = {}));
var FolderType;
(function(n) {
  n[n.earth = 0] = "earth", n[n.planet = 1] = "planet", n[n.sky = 2] = "sky", n[n.panorama = 3] = "panorama";
})(FolderType || (FolderType = {}));
var ImageSetType;
(function(n) {
  n[n.earth = 0] = "earth", n[n.planet = 1] = "planet", n[n.sky = 2] = "sky", n[n.panorama = 3] = "panorama", n[n.solarSystem = 4] = "solarSystem", n[n.sandbox = 5] = "sandbox";
})(ImageSetType || (ImageSetType = {}));
var MarkerScales;
(function(n) {
  n[n.screen = 0] = "screen", n[n.world = 1] = "world";
})(MarkerScales || (MarkerScales = {}));
var PlotTypes;
(function(n) {
  n[n.gaussian = 0] = "gaussian", n[n.point = 1] = "point", n[n.circle = 2] = "circle", n[n.square = 3] = "square", n[n.pushPin = 4] = "pushPin", n[n.custom = 5] = "custom";
})(PlotTypes || (PlotTypes = {}));
var PointScaleTypes;
(function(n) {
  n[n.linear = 0] = "linear", n[n.power = 1] = "power", n[n.log = 2] = "log", n[n.constant = 3] = "constant", n[n.stellarMagnitude = 4] = "stellarMagnitude";
})(PointScaleTypes || (PointScaleTypes = {}));
var ProjectionType;
(function(n) {
  n[n.mercator = 0] = "mercator", n[n.equirectangular = 1] = "equirectangular", n[n.tangent = 2] = "tangent", n[n.tan = 2] = "tan", n[n.toast = 3] = "toast", n[n.spherical = 4] = "spherical", n[n.skyImage = 5] = "skyImage", n[n.plotted = 6] = "plotted";
})(ProjectionType || (ProjectionType = {}));
var RAUnits;
(function(n) {
  n[n.hours = 0] = "hours", n[n.degrees = 1] = "degrees";
})(RAUnits || (RAUnits = {}));
var ReferenceFrames;
(function(n) {
  n[n.sky = 0] = "sky", n[n.ecliptic = 1] = "ecliptic", n[n.galactic = 2] = "galactic", n[n.sun = 3] = "sun", n[n.mercury = 4] = "mercury", n[n.venus = 5] = "venus", n[n.earth = 6] = "earth", n[n.mars = 7] = "mars", n[n.jupiter = 8] = "jupiter", n[n.saturn = 9] = "saturn", n[n.uranus = 10] = "uranus", n[n.neptune = 11] = "neptune", n[n.pluto = 12] = "pluto", n[n.moon = 13] = "moon", n[n.io = 14] = "io", n[n.europa = 15] = "europa", n[n.ganymede = 16] = "ganymede", n[n.callisto = 17] = "callisto", n[n.custom = 18] = "custom", n[n.identity = 19] = "identity", n[n.sandbox = 20] = "sandbox";
})(ReferenceFrames || (ReferenceFrames = {}));
var ReferenceFrameTypes;
(function(n) {
  n[n.fixedSherical = 0] = "fixedSherical", n[n.orbital = 1] = "orbital", n[n.trajectory = 2] = "trajectory", n[n.synodic = 3] = "synodic";
})(ReferenceFrameTypes || (ReferenceFrameTypes = {}));
var ScaleTypes;
(function(n) {
  n[n.linear = 0] = "linear", n[n.log = 1] = "log", n[n.power = 2] = "power", n[n.squareRoot = 3] = "squareRoot", n[n.histogramEqualization = 4] = "histogramEqualization";
})(ScaleTypes || (ScaleTypes = {}));
var SolarSystemObjects;
(function(n) {
  n[n.sun = 0] = "sun", n[n.mercury = 1] = "mercury", n[n.venus = 2] = "venus", n[n.mars = 3] = "mars", n[n.jupiter = 4] = "jupiter", n[n.saturn = 5] = "saturn", n[n.uranus = 6] = "uranus", n[n.neptune = 7] = "neptune", n[n.pluto = 8] = "pluto", n[n.moon = 9] = "moon", n[n.io = 10] = "io", n[n.europa = 11] = "europa", n[n.ganymede = 12] = "ganymede", n[n.callisto = 13] = "callisto", n[n.ioShadow = 14] = "ioShadow", n[n.europaShadow = 15] = "europaShadow", n[n.ganymedeShadow = 16] = "ganymedeShadow", n[n.callistoShadow = 17] = "callistoShadow", n[n.sunEclipsed = 18] = "sunEclipsed", n[n.earth = 19] = "earth", n[n.custom = 20] = "custom", n[n.undefined = 65536] = "undefined";
})(SolarSystemObjects || (SolarSystemObjects = {}));
var commonjsGlobal = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, srcExports = {}, src = {
  get exports() {
    return srcExports;
  },
  set exports(n) {
    srcExports = n;
  }
};
(function(module) {
  (function(n, d) {
    module.exports ? module.exports = d() : n.wwtlib = d();
  })(typeof self < "u" ? self : commonjsGlobal, function() {
    /*! Script# Runtime
     * Designed and licensed for use and distribution with Script#-generated scripts.
     * Copyright (c) 2012, Nikhil Kothari, and the Script# Project.
     * More information at http://scriptsharp.com
     */
    function _ss() {
      function _nop() {
      }
      function isValue(n) {
        return n != null;
      }
      function _value(n) {
        for (var d = 2, g = n.length; d < g; d++)
          if (isValue(n[d]))
            return n[d];
        return null;
      }
      function value(n, d) {
        return isValue(n) ? n : isValue(d) ? d : _value(arguments);
      }
      function extend(n, d) {
        for (var g in d)
          n[g] = d[g];
        return n;
      }
      function parseBoolean(n) {
        return n.toLowerCase() == "true";
      }
      function parseRegExp(n) {
        if (n[0] == "/") {
          var d = n.lastIndexOf("/");
          if (d > 1) {
            var g = n.substring(1, d), v = n.substr(d + 1);
            return new RegExp(g, v);
          }
        }
        return null;
      }
      function parseNumber(n) {
        return !n || !n.length ? 0 : n.indexOf(".") >= 0 || n.indexOf("e") >= 0 || endsWith(n, "f") || endsWith(n, "F") ? parseFloat(n) : parseInt(n, 10);
      }
      function parseDate(n) {
        var d = Date.parse(n);
        return isNaN(d) ? void 0 : new Date(d);
      }
      function truncate(n) {
        return n >= 0 ? Math.floor(n) : Math.ceil(n);
      }
      function now() {
        return new Date();
      }
      function today() {
        var n = new Date();
        return new Date(n.getFullYear(), n.getMonth(), n.getDate());
      }
      function compareDates(n, d) {
        return n === d ? !0 : isValue(n) && isValue(d) ? n.getTime() == d.getTime() : !1;
      }
      function _popStackFrame(n) {
        if (!(!isValue(n.stack) || !isValue(n.fileName) || !isValue(n.lineNumber))) {
          for (var d = n.stack.split(`
`), g = d[0], v = n.fileName + ":" + n.lineNumber; isValue(g) && g.indexOf(v) === -1; )
            d.shift(), g = d[0];
          var C = d[1];
          if (isValue(C)) {
            var M = C.match(/@(.*):(\d+)$/);
            isValue(M) && (d.shift(), n.stack = d.join(`
`), n.fileName = M[1], n.lineNumber = parseInt(M[2], 10));
          }
        }
      }
      function error(n, d, g) {
        var v = new Error(n);
        if (d)
          for (var C in d)
            v[C] = d[C];
        return g && (v.innerException = g), _popStackFrame(v), v;
      }
      function fail(message) {
        console.assert(!1, message), commonjsGlobal.navigator && eval("debugger;");
      }
      function toArray(n) {
        return n ? typeof n == "string" ? JSON.parse("(" + n + ")") : Array.prototype.slice.call(n) : null;
      }
      function removeItem(n, d) {
        var g = n.indexOf(d);
        return g >= 0 ? (n.splice(g, 1), !0) : !1;
      }
      function clearKeys(n) {
        for (var d in n)
          delete n[d];
      }
      function keyExists(n, d) {
        return n[d] !== void 0;
      }
      function keys(n) {
        if (Object.keys)
          return Object.keys(n);
        var d = [];
        for (var g in n)
          d.push(g);
        return d;
      }
      function keyCount(n) {
        return keys(n).length;
      }
      function Enumerator(n, d) {
        var g = -1, v = d ? d.length : n.length, C = d ? function() {
          return { key: d[g], value: n[d[g]] };
        } : function() {
          return n[g];
        };
        this.current = null, this.moveNext = function() {
          return g++, this.current = C(), g < v;
        }, this.reset = function() {
          g = -1, this.current = null;
        };
      }
      var _nopEnumerator = {
        current: null,
        moveNext: function() {
          return !1;
        },
        reset: _nop
      };
      function enumerate(n) {
        return isValue(n) ? n.getEnumerator ? n.getEnumerator() : n.length !== void 0 ? new Enumerator(n) : new Enumerator(n, keys(n)) : _nopEnumerator;
      }
      function Stack() {
        this.count = 0, this._items = [];
      }
      var Stack$ = {
        clear: function() {
          this._items.length = 0, this.count = 0;
        },
        contains: function(n) {
          for (var d = this.count - 1; d >= 0; d--)
            if (this._items[d] === n)
              return !0;
          return !1;
        },
        getEnumerator: function() {
          return new Enumerator(this._items.reverse());
        },
        peek: function() {
          return this._items[this.count - 1];
        },
        push: function(n) {
          this._items.push(n), this.count++;
        },
        pop: function() {
          if (this.count)
            return this.count--, this._items.pop();
        }
      };
      function Queue() {
        this.count = 0, this._items = [], this._offset = 0;
      }
      function _cleanQueue(n) {
        n._items = n._items.slice(n._offset), n._offset = 0;
      }
      var Queue$ = {
        clear: function() {
          this._items.length = 0, this._offset = 0, this.count = 0;
        },
        contains: function(n) {
          for (var d = this._offset, g = this._items.length; d <= g; d++)
            if (this._items[d] === n)
              return !0;
          return !1;
        },
        dequeue: function() {
          if (this.count) {
            var n = this._items[this._offset];
            return ++this._offset * 2 >= this._items.length && _cleanQueue(this), this.count--, n;
          }
        },
        enqueue: function(n) {
          this._items.push(n), this.count++;
        },
        getEnumerator: function() {
          return this._offset != 0 && _cleanQueue(this), new Enumerator(this._items);
        },
        peek: function() {
          return this._items.length ? this._items[this._offset] : void 0;
        }
      };
      function string(n, d) {
        return typeof d == "number" ? d > 1 ? new Array(d + 1).join(n) : n : Array.prototype.join.call(arguments, "");
      }
      function emptyString(n) {
        return !n || !n.length;
      }
      function whitespace(n) {
        return emptyString(n) || !n.replace(/^\s*/, "").length;
      }
      function compareStrings(n, d, g) {
        return n = n || "", d = d || "", g && (n = n.toUpperCase(), d = d.toUpperCase()), n === d ? 0 : n < d ? -1 : 1;
      }
      var _formatPlaceHolderRE = /(\{[^\}^\{]+\})/g, _formatters = {};
      function format(n) {
        var d = neutralCulture, g = n, v = Array.prototype.slice.call(arguments, 1);
        return n.constructor != String && (d = n, g = v[0], v = v.slice(1)), g.replace(
          _formatPlaceHolderRE,
          function(C, M) {
            var $ = parseInt(M.substr(1), 10), N = v[$];
            if (!isValue(N))
              return "";
            var et = _formatters[typeName(N)];
            if (et) {
              var E = "", X = M.indexOf(":");
              if (X > 0 && (E = M.substring(X + 1, M.length - 1)), E && E != "i")
                return et(N, E, d);
            }
            return d == neutralCulture ? N.toString() : N.toLocaleString();
          }
        );
      }
      function trim(n, d) {
        if (d || !String.prototype.trim) {
          d = d ? d.join("") : null;
          var g = d ? new RegExp("^[" + d + "]+|[" + d + "]+$", "g") : /^\s+|\s+$/g;
          return n.replace(g, "");
        }
        return n.trim();
      }
      function trimStart(n, d) {
        var g = d ? new RegExp("^[" + d.join("") + "]+") : /^\s+/;
        return n.replace(g, "");
      }
      function trimEnd(n, d) {
        var g = d ? new RegExp("[" + d.join("") + "]+$") : /\s+$/;
        return n.replace(g, "");
      }
      function startsWith(n, d) {
        return emptyString(d) ? !0 : emptyString(n) || d.length > n.length ? !1 : n.substr(0, d.length) == d;
      }
      function endsWith(n, d) {
        return emptyString(d) ? !0 : emptyString(n) || d.length > n.length ? !1 : n.substr(-d.length) == d;
      }
      function padLeft(n, d, g) {
        return n.length < d ? string(g || " ", d - n.length) + n : n;
      }
      function padRight(n, d, g) {
        return n.length < d ? n + string(g || " ", d - n.length) : n;
      }
      function removeString(n, d, g) {
        return !g || d + g > n.length ? n.substr(0, d) : n.substr(0, d) + n.substr(d + g);
      }
      function insertString(n, d, g) {
        return g ? d ? n.substr(0, d) + g + n.substr(d) : g + n : n;
      }
      function replaceString(n, d, g) {
        return n.split(d).join(g || "");
      }
      function _bindList(n) {
        var d = function() {
          for (var g = arguments, v = null, C = 0, M = n.length; C < M; C++)
            v = g.length ? n[C].apply(null, g) : n[C].call(null);
          return v;
        };
        return d._fnList = n, d;
      }
      function bind(n, d) {
        if (!d)
          return n;
        var g = null;
        n = typeof n == "string" ? d[g = n] : n;
        var v = g ? d.$$b || (d.$$b = {}) : null, C = v ? v[g] : null;
        return C || (C = function() {
          return n.apply(d, arguments);
        }, v && (v[g] = C)), C;
      }
      function bindAdd(n, d) {
        if (!n)
          return d;
        if (!d)
          return n;
        var g = [].concat(n._fnList || n, d);
        return _bindList(g);
      }
      function bindSub(n, d) {
        if (!n)
          return null;
        if (!d)
          return n;
        var g = n._fnList || [n], v = g.indexOf(d);
        return v >= 0 ? g.length == 1 ? null : (g = v ? g.slice(0, v).concat(g.slice(v + 1)) : g.slice(1), _bindList(g)) : n;
      }
      function bindExport(n, d, g, v) {
        g = g || "__" + new Date().valueOf(), v = v || commonjsGlobal;
        var C = {
          name: g,
          detach: function() {
            v[g] = _nop;
          },
          dispose: function() {
            try {
              delete v[g];
            } catch {
              v[g] = void 0;
            }
          }
        };
        return v[g] = d ? n : function() {
          return C.dispose(), n.apply(null, arguments);
        }, C;
      }
      function EventArgs() {
      }
      EventArgs.Empty = new EventArgs();
      function CancelEventArgs() {
        this.cancel = !1;
      }
      function IDisposable() {
      }
      function IEnumerable() {
      }
      function IEnumerator() {
      }
      function IObserver() {
      }
      function IApplication() {
      }
      function IContainer() {
      }
      function IObjectFactory() {
      }
      function IEventManager() {
      }
      function IInitializable() {
      }
      function StringBuilder(n) {
        this._parts = isValue(n) && n !== "" ? [n] : [], this.isEmpty = this._parts.length == 0;
      }
      var StringBuilder$ = {
        append: function(n) {
          return isValue(n) && n !== "" && (this._parts.push(n), this.isEmpty = !1), this;
        },
        appendLine: function(n) {
          return this.append(n), this.append(`\r
`), this.isEmpty = !1, this;
        },
        clear: function() {
          this._parts = [], this.isEmpty = !0;
        },
        toString: function(n) {
          return this._parts.join(n || "");
        }
      }, _observerStack = [], _observerRegistration = {
        dispose: function() {
          _observerStack.pop();
        }
      };
      function _captureObservers(n) {
        var d = _observerStack, g = d.length;
        if (g) {
          n = n || [];
          for (var v = 0; v < g; v++) {
            var C = d[v];
            n.indexOf(C) < 0 && n.push(C);
          }
          return n;
        }
        return null;
      }
      function _invalidateObservers(n) {
        for (var d = 0, g = n.length; d < g; d++)
          n[d].invalidateObserver();
      }
      function Observable(n) {
        this._v = n, this._observers = null;
      }
      var Observable$ = {
        getValue: function() {
          return this._observers = _captureObservers(this._observers), this._v;
        },
        setValue: function(n) {
          if (this._v !== n) {
            this._v = n;
            var d = this._observers;
            d && (this._observers = null, _invalidateObservers(d));
          }
        }
      };
      Observable.registerObserver = function(n) {
        return _observerStack.push(n), _observerRegistration;
      };
      function ObservableCollection(n) {
        this._items = n || [], this._observers = null;
      }
      var ObservableCollection$ = {
        get_item: function(n) {
          return this._observers = _captureObservers(this._observers), this._items[n];
        },
        set_item: function(n, d) {
          this._items[n] = d, this._updated();
        },
        get_length: function() {
          return this._observers = _captureObservers(this._observers), this._items.length;
        },
        add: function(n) {
          this._items.push(n), this._updated();
        },
        clear: function() {
          this._items.clear(), this._updated();
        },
        contains: function(n) {
          return this._items.indexOf(n) >= 0;
        },
        getEnumerator: function() {
          return this._observers = _captureObservers(this._observers), this._items.getEnumerator();
        },
        indexOf: function(n) {
          return this._items.indexOf(n);
        },
        insert: function(n, d) {
          this._items.insert(n, d), this._updated();
        },
        remove: function(n) {
          return this._items.remove(n) ? (this._updated(), !0) : !1;
        },
        removeAt: function(n) {
          this._items.splice(n, 1), this._updated();
        },
        toArray: function() {
          return this._items;
        },
        _updated: function() {
          var n = this._observers;
          n && (this._observers = null, _invalidateObservers(n));
        }
      };
      function Task(n) {
        this._continuations = n !== void 0 ? (this.status = "done", null) : (this.status = "pending", []), this.result = n, this.error = null;
      }
      var Task$ = {
        get_completed: function() {
          return this.status != "pending";
        },
        changeWith: function(n) {
          var d = new Task();
          return this.continueWith(function(g) {
            var v = g.error, C;
            if (!v)
              try {
                C = n(g);
              } catch (M) {
                v = M;
              }
            _updateTask(d, C, v);
          }), d;
        },
        continueWith: function(n) {
          if (this._continuations)
            this._continuations.push(n);
          else {
            var d = this;
            setTimeout(function() {
              n(d);
            }, 0);
          }
          return this;
        },
        done: function(n) {
          return this.continueWith(function(d) {
            d.status == "done" && n(d.result);
          });
        },
        fail: function(n) {
          return this.continueWith(function(d) {
            d.status == "failed" && n(d.error);
          });
        },
        then: function(n, d) {
          return this.continueWith(function(g) {
            g.status == "done" ? n(g.result) : d(g.error);
          });
        }
      };
      function _updateTask(n, d, g) {
        if (n.status == "pending") {
          g ? (n.error = g, n.status = "failed") : (n.result = d, n.status = "done");
          var v = n._continuations;
          n._continuations = null;
          for (var C = 0, M = v.length; C < M; C++)
            v[C](n);
        }
      }
      function _joinTasks(n, d) {
        n = toArray(n);
        var g = n.length, v = 0;
        g > 1 && typeof n[0] == "number" && (v = n[0], n = n.slice(1), g--), Array.isArray(n[0]) && (n = n[0], g = n.length);
        var C = new Task(), M = 0;
        function $(E) {
          C.status == "pending" && (M++, d ? _updateTask(C, E) : M == g && _updateTask(C, !0));
        }
        function N() {
          C.status == "pending" && (d ? _updateTask(C, null) : _updateTask(C, !1));
        }
        v != 0 && setTimeout(N, v);
        for (var et = 0; et < g; et++)
          n[et].continueWith($);
        return C;
      }
      Task.all = function() {
        return _joinTasks(arguments, !1);
      }, Task.any = function() {
        return _joinTasks(arguments, !0);
      }, Task.delay = function(n) {
        var d = new Task();
        return setTimeout(function() {
          _updateTask(d, !0);
        }, n), d;
      };
      function deferred(n) {
        var d = new Task(n);
        return {
          task: d,
          resolve: function(g) {
            _updateTask(d, g);
          },
          reject: function(g) {
            _updateTask(d, null, g || new Error());
          }
        };
      }
      var neutralCulture = {
        name: "",
        // numberFormat
        nf: {
          nan: "NaN",
          // naNSymbol
          neg: "-",
          // negativeSign
          pos: "+",
          // positiveSign
          negInf: "-Infinity",
          // negativeInfinityText
          posInf: "Infinity",
          // positiveInfinityText
          gw: [3],
          // numberGroupSizes
          dd: 2,
          // numberDecimalDigits
          ds: ".",
          // numberDecimalSeparator
          gs: ",",
          // numberGroupSeparator
          per: "%",
          // percentSymbol
          perGW: [3],
          // percentGroupSizes
          perDD: 2,
          // percentDecimalDigits
          perDS: ".",
          // percentDecimalSeparator
          perGS: ",",
          // percentGroupSeparator
          perPP: "{0} %",
          // percentPositivePattern
          perNP: "-{0} %",
          // percentNegativePattern
          cur: "$",
          // currencySymbol
          curGW: [3],
          // currencyGroupSizes
          curDD: 2,
          // currencyDecimalDigits
          curDS: ".",
          // currencyDecimalSeparator
          curGS: ",",
          // currencyGroupSeparator
          curNP: "(${0})",
          // currencyNegativePattern
          curPP: "${0}"
          // currencyPositivePattern
        },
        // dateFormat
        dtf: {
          am: "AM",
          // amDesignator
          pm: "PM",
          // pmDesignator
          ds: "/",
          // dateSeparator
          ts: ":",
          // timeSeparator
          gmt: "ddd, dd MMM yyyy HH:mm:ss 'GMT'",
          // gmtDateTimePattern
          uni: "yyyy-MM-dd HH:mm:ssZ",
          // universalDateTimePattern
          sort: "yyyy-MM-ddTHH:mm:ss",
          // sortableDateTimePattern
          dt: "dddd, MMMM dd, yyyy h:mm:ss tt",
          // dateTimePattern
          ld: "dddd, MMMM dd, yyyy",
          // longDatePattern
          sd: "M/d/yyyy",
          // shortDatePattern
          lt: "h:mm:ss tt",
          // longTimePattern
          st: "h:mm tt",
          // shortTimePattern
          day0: 0,
          // firstDayOfWeek
          day: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          // dayNames
          sday: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          // shortDayNames
          mday: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          // minimizedDayNames
          mon: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
            ""
          ],
          // monthNames
          smon: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
            ""
          ]
          // shortMonthNames
        }
      }, currentCulture = { name: "en-us", dtf: neutralCulture.dtf, nf: neutralCulture.nf };
      function _commaFormatNumber(n, d, g, v) {
        var C = null, M = n.indexOf(g);
        M > 0 && (C = n.substr(M), n = n.substr(0, M));
        var $ = n.startsWith("-");
        $ && (n = n.substr(1));
        var N = 0, et = d[N];
        if (n.length < et)
          return C ? n + C : n;
        for (var E = n.length, X = "", Pt = !1; !Pt; ) {
          var wt = et, gt = E - wt;
          if (gt < 0 && (et += gt, wt += gt, gt = 0, Pt = !0), !wt)
            break;
          var Ot = n.substr(gt, wt);
          X.length ? X = Ot + v + X : X = Ot, E -= wt, N < d.length - 1 && (N++, et = d[N]);
        }
        return $ && (X = "-" + X), C ? X + C : X;
      }
      _formatters.Number = function(n, d, g) {
        var v = g.nf, C = "", M = -1;
        d.length > 1 && (M = parseInt(d.substr(1)));
        var $ = d.charAt(0);
        switch ($) {
          case "d":
          case "D":
            C = parseInt(Math.abs(n)).toString(), M != -1 && (C = padLeft(C, M, "0")), n < 0 && (C = "-" + C);
            break;
          case "x":
          case "X":
            C = parseInt(Math.abs(n)).toString(16), $ == "X" && (C = C.toUpperCase()), M != -1 && (C = padLeft(C, M, "0"));
            break;
          case "e":
          case "E":
            M == -1 ? C = n.toExponential() : C = n.toExponential(M), $ == "E" && (C = C.toUpperCase());
            break;
          case "f":
          case "F":
          case "n":
          case "N":
            if (M == -1 && (M = v.dd), C = n.toFixed(M).toString(), M && v.ds != ".") {
              var N = C.indexOf(".");
              C = C.substr(0, N) + v.ds + C.substr(N + 1);
            }
            ($ == "n" || $ == "N") && (C = _commaFormatNumber(C, v.gw, v.ds, v.gs));
            break;
          case "c":
          case "C":
            if (M == -1 && (M = v.curDD), C = Math.abs(n).toFixed(M).toString(), M && v.curDS != ".") {
              var N = C.indexOf(".");
              C = C.substr(0, N) + v.curDS + C.substr(N + 1);
            }
            C = _commaFormatNumber(C, v.curGW, v.curDS, v.curGS), n < 0 ? C = String.format(g, v.curNP, C) : C = String.format(g, v.curPP, C);
            break;
          case "p":
          case "P":
            if (M == -1 && (M = v.perDD), C = (Math.abs(n) * 100).toFixed(M).toString(), M && v.perDS != ".") {
              var N = C.indexOf(".");
              C = C.substr(0, N) + v.perDS + C.substr(N + 1);
            }
            C = _commaFormatNumber(C, v.perGW, v.perDS, v.perGS), n < 0 ? C = String.format(g, v.perNP, C) : C = String.format(g, v.perPP, C);
            break;
        }
        return C;
      };
      var _dateFormatRE = /'.*?[^\\]'|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z/g;
      _formatters.Date = function(n, d, g) {
        if (d == "iso")
          return n.toISOString();
        if (d.charAt(0) == "i") {
          var v = "String";
          switch (d) {
            case "id":
              v = "DateString";
              break;
            case "it":
              v = "TimeString";
              break;
          }
          return g == neutralCulture ? n["to" + v]() : n["toLocale" + v]();
        }
        var C = g.dtf;
        if (d.length == 1)
          switch (d) {
            case "f":
              d = C.ld + " " + C.st;
              break;
            case "F":
              d = C.dt;
              break;
            case "d":
              d = C.sd;
              break;
            case "D":
              d = C.ld;
              break;
            case "t":
              d = C.st;
              break;
            case "T":
              d = C.lt;
              break;
            case "g":
              d = C.sd + " " + C.st;
              break;
            case "G":
              d = C.sd + " " + C.lt;
              break;
            case "R":
            case "r":
              C = neutralCulture.dtf, d = C.gmt;
              break;
            case "u":
              d = C.uni;
              break;
            case "U":
              d = C.dt, n = new Date(
                n.getUTCFullYear(),
                n.getUTCMonth(),
                n.getUTCDate(),
                n.getUTCHours(),
                n.getUTCMinutes(),
                n.getUTCSeconds(),
                n.getUTCMilliseconds()
              );
              break;
            case "s":
              d = C.sort;
              break;
          }
        d.charAt(0) == "%" && (d = d.substr(1));
        var M = new StringBuilder();
        for (_dateFormatRE.lastIndex = 0; ; ) {
          var $ = _dateFormatRE.lastIndex, N = _dateFormatRE.exec(d);
          if (M.append(d.slice($, N ? N.index : d.length)), !N)
            break;
          var et = N[0], E = et;
          switch (et) {
            case "dddd":
              E = C.day[n.getDay()];
              break;
            case "ddd":
              E = C.sday[n.getDay()];
              break;
            case "dd":
              E = padLeft(n.getDate().toString(), 2, "0");
              break;
            case "d":
              E = n.getDate();
              break;
            case "MMMM":
              E = C.mon[n.getMonth()];
              break;
            case "MMM":
              E = C.smon[n.getMonth()];
              break;
            case "MM":
              E = padLeft((n.getMonth() + 1).toString(), 2, "0");
              break;
            case "M":
              E = n.getMonth() + 1;
              break;
            case "yyyy":
              E = n.getFullYear();
              break;
            case "yy":
              E = padLeft((n.getFullYear() % 100).toString(), 2, "0");
              break;
            case "y":
              E = n.getFullYear() % 100;
              break;
            case "h":
            case "hh":
              E = n.getHours() % 12, E ? et == "hh" && (E = padLeft(E.toString(), 2, "0")) : E = "12";
              break;
            case "HH":
              E = padLeft(n.getHours().toString(), 2, "0");
              break;
            case "H":
              E = n.getHours();
              break;
            case "mm":
              E = padLeft(n.getMinutes().toString(), 2, "0");
              break;
            case "m":
              E = n.getMinutes();
              break;
            case "ss":
              E = padLeft(n.getSeconds().toString(), 2, "0");
              break;
            case "s":
              E = n.getSeconds();
              break;
            case "t":
            case "tt":
              E = n.getHours() < 12 ? C.am : C.pm, et == "t" && (E = E.charAt(0));
              break;
            case "fff":
              E = padLeft(n.getMilliseconds().toString(), 3, "0");
              break;
            case "ff":
              E = padLeft(n.getMilliseconds().toString(), 3).substr(0, 2);
              break;
            case "f":
              E = padLeft(n.getMilliseconds().toString(), 3).charAt(0);
              break;
            case "z":
              E = n.getTimezoneOffset() / 60, E = (E >= 0 ? "-" : "+") + Math.floor(Math.abs(E));
              break;
            case "zz":
            case "zzz":
              E = n.getTimezoneOffset() / 60, E = (E >= 0 ? "-" : "+") + padLeft(Math.floor(Math.abs(E)).toString(), 2, "0"), et == "zzz" && (E += C.ts + padLeft(Math.abs(n.getTimezoneOffset() % 60).toString(), 2, "0"));
              break;
            default:
              E.charAt(0) == "'" && (E = E.substr(1, E.length - 2).replace(/\\'/g, "'"));
              break;
          }
          M.append(E);
        }
        return M.toString();
      };
      var _modules = {}, _classMarker = "class", _interfaceMarker = "interface";
      function createType(n, d, g) {
        if (Array.isArray(d)) {
          var v = d[0];
          if (d.length >= 2) {
            var C = d[2];
            if (C) {
              var M = function() {
              };
              M.prototype = C.prototype, v.prototype = new M(), v.prototype.constructor = v;
            }
            d[1] && extend(v.prototype, d[1]), v.$base = C || Object, v.$interfaces = d.slice(3), v.$type = _classMarker;
          } else
            v.$type = _interfaceMarker;
          return v.$name = n, g[n] = v;
        }
        return d;
      }
      function isClass(n) {
        return n.$type == _classMarker;
      }
      function isInterface(n) {
        return n.$type == _interfaceMarker;
      }
      function typeOf(n) {
        var d;
        try {
          d = n.constructor;
        } catch {
        }
        return d || Object;
      }
      function type(n) {
        var d = n.indexOf("."), g = d > 0 ? _modules[n.substr(0, d)] : commonjsGlobal, v = d > 0 ? n.substr(d + 1) : n;
        return g ? g[v] : null;
      }
      var _typeNames = [
        Number,
        "Number",
        String,
        "String",
        Boolean,
        "Boolean",
        Array,
        "Array",
        Date,
        "Date",
        RegExp,
        "RegExp",
        Function,
        "Function"
      ];
      function typeName(n) {
        if (n instanceof Function || (n = n.constructor), n.$name)
          return n.$name;
        if (n.name)
          return n.name;
        for (var d = 0, g = _typeNames.length; d < g; d += 2)
          if (n == _typeNames[d])
            return _typeNames[d + 1];
        return "Object";
      }
      function canAssign(n, d) {
        if (n == Object || n == d)
          return !0;
        if (n.$type == _classMarker)
          for (var g = d.$base; g; ) {
            if (n == g)
              return !0;
            g = g.$base;
          }
        else if (n.$type == _interfaceMarker)
          for (var g = d; g; ) {
            var v = g.$interfaces;
            if (v && v.indexOf(n) >= 0)
              return !0;
            g = g.$base;
          }
        return !1;
      }
      function instanceOf(n, d) {
        if (!isValue(d))
          return !1;
        if (n == Object || d instanceof n)
          return !0;
        var g = typeOf(d);
        return canAssign(n, g);
      }
      function canCast(n, d) {
        return instanceOf(d, n);
      }
      function safeCast(n, d) {
        return instanceOf(d, n) ? n : null;
      }
      function ss_module(n, d, g) {
        var v = _modules[n] = { $name: n };
        if (d)
          for (var C in d)
            createType(C, d[C], v);
        var M = {};
        if (g)
          for (var C in g)
            M[C] = createType(C, g[C], v);
        return M;
      }
      return extend(ss_module("ss", null, {
        IDisposable: [IDisposable],
        IEnumerable: [IEnumerable],
        IEnumerator: [IEnumerator],
        IObserver: [IObserver],
        IApplication: [IApplication],
        IContainer: [IContainer],
        IObjectFactory: [IObjectFactory],
        IEventManager: [IEventManager],
        IInitializable: [IInitializable],
        EventArgs: [EventArgs, {}],
        CancelEventArgs: [CancelEventArgs, {}, EventArgs],
        StringBuilder: [StringBuilder, StringBuilder$],
        Stack: [Stack, Stack$],
        Queue: [Queue, Queue$],
        Observable: [Observable, Observable$],
        ObservableCollection: [ObservableCollection, ObservableCollection$, null, IEnumerable],
        Task: [Task, Task$]
      }), {
        version: "0.8",
        isValue,
        value,
        extend,
        keys,
        keyCount,
        keyExists,
        clearKeys,
        enumerate,
        array: toArray,
        remove: removeItem,
        boolean: parseBoolean,
        regexp: parseRegExp,
        number: parseNumber,
        date: parseDate,
        truncate,
        now,
        today,
        compareDates,
        error,
        string,
        emptyString,
        whitespace,
        format,
        compareStrings,
        startsWith,
        endsWith,
        padLeft,
        padRight,
        trim,
        trimStart,
        trimEnd,
        insertString,
        removeString,
        replaceString,
        bind,
        bindAdd,
        bindSub,
        bindExport,
        deferred,
        module: ss_module,
        modules: _modules,
        isClass,
        isInterface,
        typeOf,
        type,
        typeName,
        canCast,
        safeCast,
        canAssign,
        instanceOf,
        culture: {
          neutral: neutralCulture,
          current: currentCulture
        },
        fail
      });
    }
    var ss = _ss(), _exports_object = null;
    function define(n, d, g) {
      _exports_object = g(ss), _exports_object.ss = ss, _exports_object.Enums._wwtlib = _exports_object;
    }
    return define("wwtlib", ["ss"], function(n) {
      var d = {
        SUNDAY: 0,
        MONDAY: 1,
        TUESDAY: 2,
        WEDNESDAY: 3,
        THURSDAY: 4,
        FRIDAY: 5,
        SATURDAY: 6
      }, g = {
        SUN: 0,
        MERCURY: 1,
        VENUS: 2,
        MARS: 3,
        JUPITER: 4,
        SATURN: 5,
        URANUS: 6,
        NEPTUNE: 7,
        PLUTO: 8
      }, v = {
        linear: 0,
        log: 1,
        power: 2,
        squareRoot: 3,
        histogramEqualization: 4
      }, C = {
        asIfAbsolute: 0,
        originRelative: 1
      }, M = {
        sun: 0,
        mercury: 1,
        venus: 2,
        mars: 3,
        jupiter: 4,
        saturn: 5,
        uranus: 6,
        neptune: 7,
        pluto: 8,
        moon: 9,
        io: 10,
        europa: 11,
        ganymede: 12,
        callisto: 13,
        ioShadow: 14,
        europaShadow: 15,
        ganymedeShadow: 16,
        callistoShadow: 17,
        sunEclipsed: 18,
        earth: 19,
        custom: 20,
        undefined: 65536
      }, $ = {
        linear: 0,
        easeIn: 1,
        easeOut: 2,
        easeInOut: 3,
        exponential: 4,
        defaultV: 5
      }, N = {
        move: 0,
        line: 1,
        dash: 2,
        start: 3
      }, et = {
        slash: 0,
        backslash: 1,
        top: 2
      }, E = {
        explorer: 0,
        tour: 1,
        search: 2,
        constellation: 3,
        view: 4,
        goTo: 5,
        community: 6,
        context: 7,
        voTable: 8,
        imageStack: 9
      }, X = {
        interval: 0,
        conditionalGet: 1,
        viewChange: 2
      }, Pt = {
        earth: 0,
        planet: 1,
        sky: 2,
        panorama: 3
      }, wt = {
        small: 0,
        big: 1
      }, gt = {
        none: 0,
        counterClockwise: 2,
        clockwise: 1
      }, Ot = {
        linear: 0,
        power: 1,
        log: 2,
        constant: 3,
        stellarMagnitude: 4
      }, qt = {
        mercator: 0,
        equirectangular: 1,
        tangent: 2,
        tan: 2,
        toast: 3,
        spherical: 4,
        skyImage: 5,
        plotted: 6,
        healpix: 7
      }, de = {
        earth: 0,
        planet: 1,
        sky: 2,
        panorama: 3,
        solarSystem: 4,
        sandbox: 5
      }, Jt = {
        gamma: 0,
        xRay: 1,
        ultraviolet: 2,
        visible: 3,
        hydrogenAlpha: 4,
        IR: 4,
        microwave: 5,
        radio: 6,
        visibleNight: 6
      }, De = {
        star: 1,
        supernova: 2,
        blackHole: 4,
        neutronStar: 8,
        doubleStar: 16,
        multipleStars: 32,
        asterism: 64,
        constellation: 128,
        openCluster: 256,
        globularCluster: 512,
        nebulousCluster: 1024,
        nebula: 2048,
        emissionNebula: 4096,
        planetaryNebula: 8192,
        reflectionNebula: 16384,
        darkNebula: 32768,
        giantMolecularCloud: 65536,
        supernovaRemnant: 131072,
        interstellarDust: 262144,
        quasar: 524288,
        galaxy: 1048576,
        spiralGalaxy: 2097152,
        irregularGalaxy: 4194304,
        ellipticalGalaxy: 8388608,
        knot: 16777216,
        plateDefect: 33554432,
        clusterOfGalaxies: 67108864,
        otherNGC: 134217728,
        unidentified: 268435456,
        solarSystem: 536870912,
        unfiltered: 1073741823,
        stellar: 63,
        stellarGroupings: 2032,
        nebulae: 523264,
        galactic: 133693440,
        other: 436207616
      }, Be = {
        byteT: 0,
        int16T: 1,
        int32T: 2,
        floatT: 3,
        doubleT: 4,
        none: 5
      }, he = {
        meters: 1,
        feet: 2,
        inches: 3,
        miles: 4,
        kilometers: 5,
        astronomicalUnits: 6,
        lightYears: 7,
        parsecs: 8,
        megaParsecs: 9,
        custom: 10
      }, Rt = {
        fadeIn: 1,
        fadeOut: 2,
        both: 3,
        none: 4
      }, Pe = {
        sky: 0,
        ecliptic: 1,
        galactic: 2,
        sun: 3,
        mercury: 4,
        venus: 5,
        earth: 6,
        mars: 7,
        jupiter: 8,
        saturn: 9,
        uranus: 10,
        neptune: 11,
        pluto: 12,
        moon: 13,
        io: 14,
        europa: 15,
        ganymede: 16,
        callisto: 17,
        custom: 18,
        identity: 19,
        sandbox: 20
      }, ke = {
        fixedSherical: 0,
        orbital: 1,
        trajectory: 2,
        synodic: 3
      }, ce = {
        spherical: 0,
        rectangular: 1,
        orbital: 2
      }, Ne = {
        depth: 0,
        altitude: 1,
        distance: 2,
        seaLevel: 3,
        terrain: 4
      }, ii = {
        same_For_All: 0
      }, ge = {
        same_For_All: 0,
        group_by_Values: 2,
        per_Column_Literal: 3
      }, Xi = {
        gaussian: 0,
        point: 1,
        circle: 2,
        square: 3,
        pushPin: 4,
        custom: 5
      }, rn = {
        screen: 0,
        world: 1
      }, nn = {
        hours: 0,
        degrees: 1
      }, Un = {
        voBoolean: 1,
        voBit: 2,
        voUnsignedByte: 3,
        voShort: 4,
        voInt: 5,
        voLong: 6,
        voChar: 7,
        voUnicodeChar: 8,
        voFloat: 9,
        voDouble: 10,
        voFloatComplex: 11,
        voDoubleComplex: 12,
        voUndefined: 13
      }, Gn = {
        center: 0,
        left: 1
      }, an = {
        empty: 0,
        equatorialGrid: 1,
        equatorialGridText: 2,
        galacticGrid: 3,
        galacticGridText: 4,
        eclipticGrid: 5,
        eclipticGridText: 6,
        eclipticOverview: 7,
        eclipticOverviewText: 8,
        precessionChart: 9,
        altAzGrid: 10,
        altAzGridText: 11,
        constellationFigures: 12,
        constellationBoundaries: 13,
        constellationFocusedOnly: 14,
        constellationNames: 15,
        constellationPictures: 16,
        fadeToBlack: 17,
        fadeToLogo: 18,
        fadeToGradient: 19,
        screenBroadcast: 20,
        fadeRemoteOnly: 21,
        skyGrids: 22,
        constellations: 23,
        solarSystemStars: 24,
        solarSystemMilkyWay: 25,
        solarSystemCosmos: 26,
        solarSystemOrbits: 27,
        solarSystemPlanets: 28,
        solarSystemAsteroids: 29,
        solarSystemLighting: 30,
        solarSystemMinorOrbits: 31,
        showEarthCloudLayer: 32,
        showElevationModel: 33,
        showAtmosphere: 34,
        multiResSolarSystemBodies: 35,
        auroraBorialis: 36,
        earthCutAway: 37,
        showSolarSystem: 38,
        clouds8k: 39,
        filedOfView: 40,
        showISSModel: 41,
        solarSystemCMB: 42,
        mpcZone1: 43,
        mpcZone2: 44,
        mpcZone3: 45,
        mpcZone4: 46,
        mpcZone5: 47,
        mpcZone6: 48,
        mpcZone7: 49,
        orbitFilters: 50
      }, sn = {
        sky: 0,
        screen: 1
      }, js = {
        music: 0,
        voice: 1
      }, Ks = {
        circle: 0,
        rectagle: 1,
        star: 2,
        donut: 3,
        arrow: 4,
        line: 5,
        openRectagle: 6
      }, Js = {
        loop: 0,
        upDown: 1,
        down: 2,
        upDownOnce: 3,
        once: 4,
        begin: 5,
        end: 6
      }, Ws = {
        topLeft: 0,
        top: 1,
        topRight: 2,
        right: 3,
        bottomRight: 4,
        bottom: 5,
        bottomLeft: 6,
        left: 7,
        rotate: 8,
        move: 9,
        center: 10,
        none: 11
      }, Qs = {
        none: 0,
        tight: 1,
        small: 2,
        medium: 3,
        large: 4
      }, to = {
        beginner: 0,
        intermediate: 1,
        advanced: 2,
        educator: 3,
        professional: 4
      }, eo = {
        slew: 0,
        crossFade: 1,
        crossCut: 2,
        fadeOutIn: 3,
        fadeIn: 4,
        fadeOut: 5
      }, io = {
        modifiers: -65536,
        none: 0,
        lButton: 1,
        rButton: 2,
        cancel: 3,
        mButton: 4,
        xButton1: 5,
        xButton2: 6,
        back: 8,
        tab: 9,
        lineFeed: 10,
        clearKey: 12,
        returnKey: 13,
        enter: 13,
        shiftKey: 16,
        controlKey: 17,
        menu: 18,
        pause: 19,
        capital: 20,
        capsLock: 20,
        kanaMode: 21,
        hanguelMode: 21,
        hangulMode: 21,
        junjaMode: 23,
        finalMode: 24,
        hanjaMode: 25,
        kanjiMode: 25,
        escape: 27,
        imeConvert: 28,
        imeNonconvert: 29,
        imeAccept: 30,
        imeAceept: 30,
        imeModeChange: 31,
        space: 32,
        prior: 33,
        pageUp: 33,
        next: 34,
        pageDown: 34,
        end: 35,
        home: 36,
        left: 37,
        up: 38,
        right: 39,
        down: 40,
        select: 41,
        print: 42,
        execute: 43,
        snapshot: 44,
        printScreen: 44,
        insertKey: 45,
        deleteKey: 46,
        help: 47,
        d0: 48,
        d1: 49,
        d2: 50,
        d3: 51,
        d4: 52,
        d5: 53,
        d6: 54,
        d7: 55,
        d8: 56,
        d9: 57,
        a: 65,
        b: 66,
        c: 67,
        d: 68,
        e: 69,
        f: 70,
        g: 71,
        h: 72,
        i: 73,
        j: 74,
        k: 75,
        l: 76,
        m: 77,
        n: 78,
        o: 79,
        p: 80,
        q: 81,
        r: 82,
        s: 83,
        t: 84,
        u: 85,
        v: 86,
        w: 87,
        x: 88,
        y: 89,
        z: 90,
        lWin: 91,
        rWin: 92,
        apps: 93,
        sleep: 95,
        numPad0: 96,
        numPad1: 97,
        numPad2: 98,
        numPad3: 99,
        numPad4: 100,
        numPad5: 101,
        numPad6: 102,
        numPad7: 103,
        numPad8: 104,
        numPad9: 105,
        multiply: 106,
        add: 107,
        separator: 108,
        subtract: 109,
        decimal: 110,
        divide: 111,
        f1: 112,
        f2: 113,
        f3: 114,
        f4: 115,
        f5: 116,
        f6: 117,
        f7: 118,
        f8: 119,
        f9: 120,
        f10: 121,
        f11: 122,
        f12: 123,
        f13: 124,
        f14: 125,
        f15: 126,
        f16: 127,
        f17: 128,
        f18: 129,
        f19: 130,
        f20: 131,
        f21: 132,
        f22: 133,
        f23: 134,
        f24: 135,
        numLock: 144,
        scroll: 145,
        lShiftKey: 160,
        rShiftKey: 161,
        lControlKey: 162,
        rControlKey: 163,
        lMenu: 164,
        rMenu: 165,
        browserBack: 166,
        browserForward: 167,
        browserRefresh: 168,
        browserStop: 169,
        browserSearch: 170,
        browserFavorites: 171,
        browserHome: 172,
        volumeMute: 173,
        volumeDown: 174,
        volumeUp: 175,
        mediaNextTrack: 176,
        mediaPreviousTrack: 177,
        mediaStop: 178,
        mediaPlayPause: 179,
        launchMail: 180,
        selectMedia: 181,
        launchApplication1: 182,
        launchApplication2: 183,
        oemSemicolon: 186,
        oem1: 186,
        oemplus: 187,
        oemcomma: 188,
        oemMinus: 189,
        oemPeriod: 190,
        oemQuestion: 191,
        oem2: 191,
        oemtilde: 192,
        oem3: 192,
        oemOpenBrackets: 219,
        oem4: 219,
        oemPipe: 220,
        oem5: 220,
        oemCloseBrackets: 221,
        oem6: 221,
        oemQuotes: 222,
        oem7: 222,
        oem8: 223,
        oemBackslash: 226,
        oem102: 226,
        processKey: 229,
        packet: 231,
        attn: 246,
        crsel: 247,
        exsel: 248,
        eraseEof: 249,
        play: 250,
        zoom: 251,
        noName: 252,
        pa1: 253,
        oemClear: 254,
        keyCode: 65535,
        shift: 65536,
        control: 131072,
        alt: 262144
      }, ro = {
        OK: 1
      }, no = {
        indented: 1
      }, ao = {
        pending: 0,
        received: 1,
        error: 2
      };
      function so() {
      }
      function on() {
      }
      function Ja() {
      }
      function ln() {
      }
      function fa() {
      }
      function oo() {
      }
      function ga() {
      }
      function Cn() {
      }
      function lo() {
      }
      function w() {
      }
      function un() {
      }
      un.earthVelocity = function(t) {
        for (var e = (t - 2451545) / 36525, r = 3.1761467 + 1021.3285546 * e, a = 1.7534703 + 628.3075849 * e, s = 6.2034809 + 334.0612431 * e, l = 0.5995465 + 52.9690965 * e, h = 0.8740168 + 21.3299095 * e, u = 5.4812939 + 7.4781599 * e, _ = 5.3118863 + 3.8133036 * e, m = 3.8103444 + 8399.6847337 * e, p = 5.1984667 + 7771.3771486 * e, b = 2.3555559 + 8328.6914289 * e, S = 1.6279052 + 8433.4661601 * e, x = new Pi(), k = w.g_ACft.length, P = 0; P < k; P++) {
          var I = w.g_ACft[P].l2 * r + w.g_ACft[P].l3 * a + w.g_ACft[P].l4 * s + w.g_ACft[P].l5 * l + w.g_ACft[P].l6 * h + w.g_ACft[P].l7 * u + w.g_ACft[P].l8 * _ + w.g_ACft[P].ldash * m + w.g_ACft[P].d * p + w.g_ACft[P].mdash * b + w.g_ACft[P].f * S;
          x.x += (w.g_ACft[P].xsin + w.g_ACft[P].xsint * e) * Math.sin(I), x.x += (w.g_ACft[P].xcos + w.g_ACft[P].xcost * e) * Math.cos(I), x.y += (w.g_ACft[P].ysin + w.g_ACft[P].ysint * e) * Math.sin(I), x.y += (w.g_ACft[P].ycos + w.g_ACft[P].ycost * e) * Math.cos(I), x.z += (w.g_ACft[P].zsin + w.g_ACft[P].zsint * e) * Math.sin(I), x.z += (w.g_ACft[P].zcos + w.g_ACft[P].zcost * e) * Math.cos(I);
        }
        return x;
      }, un.eclipticAberration = function(t, e, r) {
        var a = new pi(), s = (r - 2451545) / 36525, l = s * s, h = 0.016708634 - 42037e-9 * s - 1267e-10 * l, u = 102.93735 + 1.71946 * s + 46e-5 * l, _ = 20.49552, m = Ce.geometricEclipticLongitude(r);
        return u = y.d2R(u), t = y.d2R(t), e = y.d2R(e), m = y.d2R(m), a.x = (-_ * Math.cos(m - t) + h * _ * Math.cos(u - t)) / Math.cos(e) / 3600, a.y = -_ * Math.sin(e) * (Math.sin(m - t) - h * Math.sin(u - t)) / 3600, a;
      }, un.equatorialAberration = function(t, e, r) {
        t = y.d2R(t * 15), e = y.d2R(e);
        var a = Math.cos(t), s = Math.sin(t), l = Math.cos(e), h = Math.sin(e), u = un.earthVelocity(r), _ = new pi();
        return _.x = y.r2H((u.y * a - u.x * s) / (17314463350 * l)), _.y = y.r2D(-(((u.x * a + u.y * s) * h - u.z * l) / 17314463350)), _;
      };
      var uo = {};
      function Se(t, e, r, a, s, l, h, u, _, m, p, b, S, x, k, P, I, D, G, U, Y, j, K) {
        this.l2 = 0, this.l3 = 0, this.l4 = 0, this.l5 = 0, this.l6 = 0, this.l7 = 0, this.l8 = 0, this.ldash = 0, this.d = 0, this.mdash = 0, this.f = 0, this.xsin = 0, this.xsint = 0, this.xcos = 0, this.xcost = 0, this.ysin = 0, this.ysint = 0, this.ycos = 0, this.ycost = 0, this.zsin = 0, this.zsint = 0, this.zcos = 0, this.zcost = 0, this.l2 = t, this.l3 = e, this.l4 = r, this.l5 = a, this.l6 = s, this.l7 = l, this.l8 = h, this.ldash = u, this.d = _, this.mdash = m, this.f = p, this.xsin = b, this.xsint = S, this.xcos = x, this.xcost = k, this.ysin = P, this.ysint = I, this.ycos = D, this.ycost = G, this.zsin = U, this.zsint = Y, this.zcos = j, this.zcost = K;
      }
      var ho = {};
      function Hn() {
      }
      Hn.separation = function(t, e, r, a) {
        e = y.d2R(e), a = y.d2R(a), t = y.h2R(t), r = y.h2R(r);
        var s = Math.cos(e) * Math.sin(a) - Math.sin(e) * Math.cos(a) * Math.cos(r - t), l = Math.cos(a) * Math.sin(r - t), h = Math.sin(e) * Math.sin(a) + Math.cos(e) * Math.cos(a) * Math.cos(r - t), u = Math.atan2(Math.sqrt(s * s + l * l), h);
        return u = y.r2D(u), u < 0 && (u += 180), u;
      }, Hn.positionAngle = function(t, e, r, a) {
        var s, l, h, u;
        l = y.d2R(e), u = y.d2R(a), s = y.h2R(t), h = y.h2R(r);
        var _ = s - h, m = Math.cos(u) * Math.tan(l) - Math.sin(u) * Math.cos(_), p = Math.sin(_), b = Math.atan2(p, m);
        return b = y.r2D(b), b;
      }, Hn.distanceFromGreatArc = function(t, e, r, a, s, l) {
        e = y.d2R(e), a = y.d2R(a), l = y.d2R(l), t = y.h2R(t), r = y.h2R(r), s = y.h2R(s);
        var h = Math.cos(e) * Math.cos(t), u = Math.cos(a) * Math.cos(r), _ = Math.cos(e) * Math.sin(t), m = Math.cos(a) * Math.sin(r), p = Math.sin(e), b = Math.sin(a), S = _ * b - p * m, x = p * u - h * b, k = h * m - _ * u, P = Math.tan(s), I = Math.tan(l) / Math.cos(s), D = Math.asin((S + x * P + k * I) / (Math.sqrt(S * S + x * x + k * k) * Math.sqrt(1 + P * P + I * I)));
        return D = y.r2D(D), D < 0 && (D = Math.abs(D)), D;
      };
      var co = {};
      function pi() {
        this.x = 0, this.y = 0, this.x = 0, this.y = 0;
      }
      pi.create = function(t, e) {
        var r = new pi();
        return r.x = t, r.y = e, r;
      };
      var _o = {};
      function Pi() {
        this.x = 0, this.y = 0, this.z = 0, this.x = 0, this.y = 0, this.z = 0;
      }
      Pi.create = function(t, e, r) {
        var a = new Pi();
        return a.x = t, a.y = e, a.z = r, a;
      };
      var fo = {};
      function y() {
      }
      y.eq2Ec = function(t, e, r) {
        t = y.h2R(t), e = y.d2R(e), r = y.d2R(r);
        var a = new pi();
        return a.x = y.r2D(Math.atan2(Math.sin(t) * Math.cos(r) + Math.tan(e) * Math.sin(r), Math.cos(t))), a.x < 0 && (a.x += 360), a.y = y.r2D(Math.asin(Math.sin(e) * Math.cos(r) - Math.cos(e) * Math.sin(r) * Math.sin(t))), a;
      }, y.ec2Eq = function(t, e, r) {
        t = y.d2R(t), e = y.d2R(e), r = y.d2R(r);
        var a = new pi();
        return a.x = y.r2H(Math.atan2(Math.sin(t) * Math.cos(r) - Math.tan(e) * Math.sin(r), Math.cos(t))), a.x < 0 && (a.x += 24), a.y = y.r2D(Math.asin(Math.sin(e) * Math.cos(r) + Math.cos(e) * Math.sin(r) * Math.sin(t))), a;
      }, y.eq2H = function(t, e, r) {
        t = y.h2R(t), e = y.d2R(e), r = y.d2R(r);
        var a = new pi();
        return a.x = y.r2D(Math.atan2(Math.sin(t), Math.cos(t) * Math.sin(r) - Math.tan(e) * Math.cos(r))), a.x < 0 && (a.x += 360), a.y = y.r2D(Math.asin(Math.sin(r) * Math.sin(e) + Math.cos(r) * Math.cos(e) * Math.cos(t))), a;
      }, y.h2Eq = function(t, e, r) {
        t = y.d2R(t), e = y.d2R(e), r = y.d2R(r);
        var a = new pi();
        return a.x = y.r2H(Math.atan2(Math.sin(t), Math.cos(t) * Math.sin(r) + Math.tan(e) * Math.cos(r))), a.x < 0 && (a.x += 24), a.y = y.r2D(Math.asin(Math.sin(r) * Math.sin(e) - Math.cos(r) * Math.cos(e) * Math.cos(t))), a;
      }, y.eq2G = function(t, e) {
        t = 192.25 - y.h2D(t), t = y.d2R(t), e = y.d2R(e);
        var r = new pi();
        return r.x = y.r2D(Math.atan2(Math.sin(t), Math.cos(t) * Math.sin(y.d2R(27.4)) - Math.tan(e) * Math.cos(y.d2R(27.4)))), r.x = 303 - r.x, r.x >= 360 && (r.x -= 360), r.y = y.r2D(Math.asin(Math.sin(e) * Math.sin(y.d2R(27.4)) + Math.cos(e) * Math.cos(y.d2R(27.4)) * Math.cos(t))), r;
      }, y.g2Eq = function(t, e) {
        t -= 123, t = y.d2R(t), e = y.d2R(e);
        var r = new pi();
        return r.x = y.r2D(Math.atan2(Math.sin(t), Math.cos(t) * Math.sin(y.d2R(27.4)) - Math.tan(e) * Math.cos(y.d2R(27.4)))), r.x += 12.25, r.x < 0 && (r.x += 360), r.x = y.d2H(r.x), r.y = y.r2D(Math.asin(Math.sin(e) * Math.sin(y.d2R(27.4)) + Math.cos(e) * Math.cos(y.d2R(27.4)) * Math.cos(t))), r;
      }, y.d2R = function(t) {
        return t * 0.0174532925199433;
      }, y.r2D = function(t) {
        return t * 57.2957795130823;
      }, y.r2H = function(t) {
        return t * 3.81971863420549;
      }, y.h2R = function(t) {
        return t * 0.261799387799149;
      }, y.h2D = function(t) {
        return t * 15;
      }, y.d2H = function(t) {
        return t / 15;
      }, y.PI = function() {
        return 3.14159265358979;
      }, y.m360 = function(t) {
        return t - Math.floor(t / 360) * 360;
      }, y.m24 = function(t) {
        return t - Math.floor(t / 24) * 24;
      }, y.dmS2D = function(t, e, r) {
        return y.dmS2Dp(t, e, r, !0);
      }, y.dmS2Dp = function(t, e, r, a) {
        return a || (console.assert(t >= 0), console.assert(e >= 0), console.assert(r >= 0)), a ? t + e / 60 + r / 3600 : -t - e / 60 - r / 3600;
      };
      var go = {};
      function da() {
        this.year = 0, this.month = 0, this.day = 0, this.year = 0, this.month = 0, this.day = 0;
      }
      da.create = function(t, e, r) {
        var a = new da();
        return a.year = t, a.month = e, a.day = r, a;
      };
      var mo = {};
      function Ve() {
        this.m_dblJulian = 0, this.m_bGregorianCalendar = !1, this.m_dblJulian = 0, this.m_bGregorianCalendar = !1;
      }
      Ve.create = function(t, e, r, a) {
        var s = new Ve();
        return s.set(t, e, r, 0, 0, 0, a), s;
      }, Ve.createHMS = function(t, e, r, a, s, l, h) {
        var u = new Ve();
        return u.set(t, e, r, a, s, l, h), u;
      }, Ve.createJD = function(t, e) {
        var r = new Ve();
        return r.setJD(t, e), r;
      }, Ve.dateToJD = function(t, e, r, a) {
        var s = t, l = e;
        l < 3 && (s = s - 1, l = l + 12);
        var h = 0, u = 0;
        return a && (h = n.truncate(s / 100), u = 2 - h + n.truncate(h / 4)), n.truncate(365.25 * (s + 4716)) + n.truncate(30.6001 * (l + 1)) + r + u - 1524.5;
      }, Ve.isLeap = function(t, e) {
        return e ? t % 100 ? !(t % 4) : !(t % 400) : !(t % 4);
      }, Ve.afterPapalReform = function(t, e, r) {
        return t > 1582 || t === 1582 && e > 10 || t === 1582 && e === 10 && r >= 15;
      }, Ve.afterPapalReformJD = function(t) {
        return t >= 22991605e-1;
      }, Ve.dayOfYearJD = function(t, e, r) {
        return t - Ve.dateToJD(e, 1, 1, r) + 1;
      }, Ve.daysInMonthForMonth = function(t, e) {
        console.assert(t >= 1 && t <= 12);
        var r = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 0];
        return e && r[1]++, r[t - 1];
      }, Ve.INT = function(t) {
        return t >= 0 ? n.truncate(t) : n.truncate(t - 1);
      };
      var po = {
        julian: function() {
          return this.m_dblJulian;
        },
        day: function() {
          var t = this.get();
          return n.truncate(t[2]);
        },
        month: function() {
          var t = this.get();
          return n.truncate(t[1]);
        },
        year: function() {
          var t = this.get();
          return n.truncate(t[0]);
        },
        hour: function() {
          var t = this.get();
          return n.truncate(t[3]);
        },
        minute: function() {
          var t = this.get();
          return n.truncate(t[4]);
        },
        second: function() {
          var t = this.get();
          return n.truncate(t[5]);
        },
        set: function(t, e, r, a, s, l, h) {
          var u = r + a / 24 + s / 1440 + l / 86400;
          this.setJD(Ve.dateToJD(t, e, u, h), h);
        },
        setJD: function(t, e) {
          this.m_dblJulian = t, this.setInGregorianCalendar(e);
        },
        setInGregorianCalendar: function(t) {
          var e = this.m_dblJulian >= 22991605e-1;
          this.m_bGregorianCalendar = t && e;
        },
        get: function() {
          var t, e, r, a, s, l, h = this.m_dblJulian + 0.5, u = Math.floor(h), _ = h - u, m = n.truncate(u), p;
          if (this.m_bGregorianCalendar) {
            var b = n.truncate((m - 186721625e-2) / 36524.25);
            p = m + 1 + b - n.truncate(b / 4);
          } else
            p = m;
          var S = p + 1524, x = n.truncate((S - 122.1) / 365.25), k = n.truncate(365.25 * x), P = n.truncate((S - k) / 30.6001), I = S - k - n.truncate(30.6001 * P) + _;
          return r = n.truncate(I), P < 14 ? e = P - 1 : e = P - 13, e > 2 ? t = x - 4716 : t = x - 4715, u = Math.floor(I), _ = I - u, a = n.truncate(_ * 24), s = n.truncate((_ - a / 24) * 1440), l = (_ - a / 24 - s / 1440) * 86400, [t, e, r, a, s, l];
        },
        dayOfWeek: function() {
          return n.truncate(this.m_dblJulian + 1.5) % 7;
        },
        dayOfYear: function() {
          var t = n.truncate(this.get()[0]);
          return Ve.dayOfYearJD(this.m_dblJulian, t, Ve.afterPapalReform(t, 1, 1));
        },
        daysInMonth: function() {
          var t = this.get(), e = n.truncate(t[0]), r = n.truncate(t[1]);
          return Ve.daysInMonthForMonth(r, Ve.isLeap(e, this.m_bGregorianCalendar));
        },
        daysInYear: function() {
          var t = this.get(), e = n.truncate(t[0]);
          return Ve.isLeap(e, this.m_bGregorianCalendar) ? 366 : 365;
        },
        leap: function() {
          return Ve.isLeap(this.year(), this.m_bGregorianCalendar);
        },
        inGregorianCalendar: function() {
          return this.m_bGregorianCalendar;
        },
        fractionalYear: function() {
          var t = this.get(), e = n.truncate(t[0]);
          n.truncate(t[1]), n.truncate(t[2]), n.truncate(t[3]), n.truncate(t[4]), t[5];
          var r;
          return Ve.isLeap(e, this.m_bGregorianCalendar) ? r = 366 : r = 365, e + (this.m_dblJulian - Ve.dateToJD(e, 1, 1, Ve.afterPapalReform(e, 1, 1))) / r;
        }
      };
      function ma() {
      }
      ma.deltaT = function(t) {
        var e = Ve.createJD(t, Ve.afterPapalReformJD(t)), r = e.fractionalYear(), a = (r - 2e3) / 100, s;
        if (r < 948)
          s = 2177 + 497 * a + 44.1 * a * a;
        else if (r < 1620)
          s = 102 + 102 * a + 25.3 * a * a;
        else if (r < 1998) {
          var l = n.truncate((r - 1620) / 2);
          console.assert(l < w.deltaTTable.length), r = r / 2 - l - 810, s = w.deltaTTable[l] + (w.deltaTTable[l + 1] - w.deltaTTable[l]) * r;
        } else if (r <= 2e3) {
          var h = w.deltaTTable.length;
          s = w.deltaTTable[h - 1];
        } else
          r < 2100 ? s = 102 + 102 * a + 25.3 * a * a + 0.37 * (r - 2100) : s = 102 + 102 * a + 25.3 * a * a;
        return s;
      };
      var vo = {};
      function pe() {
      }
      pe.eclipticLongitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = s * e, h = w.g_L0EarthCoefficients.length, u = 0, _;
        for (_ = 0; _ < h; _++)
          u += w.g_L0EarthCoefficients[_].a * Math.cos(w.g_L0EarthCoefficients[_].b + w.g_L0EarthCoefficients[_].c * e);
        var m = w.g_L1EarthCoefficients.length, p = 0;
        for (_ = 0; _ < m; _++)
          p += w.g_L1EarthCoefficients[_].a * Math.cos(w.g_L1EarthCoefficients[_].b + w.g_L1EarthCoefficients[_].c * e);
        var b = w.g_L2EarthCoefficients.length, S = 0;
        for (_ = 0; _ < b; _++)
          S += w.g_L2EarthCoefficients[_].a * Math.cos(w.g_L2EarthCoefficients[_].b + w.g_L2EarthCoefficients[_].c * e);
        var x = w.g_L3EarthCoefficients.length, k = 0;
        for (_ = 0; _ < x; _++)
          k += w.g_L3EarthCoefficients[_].a * Math.cos(w.g_L3EarthCoefficients[_].b + w.g_L3EarthCoefficients[_].c * e);
        var P = w.g_L4EarthCoefficients.length, I = 0;
        for (_ = 0; _ < P; _++)
          I += w.g_L4EarthCoefficients[_].a * Math.cos(w.g_L4EarthCoefficients[_].b + w.g_L4EarthCoefficients[_].c * e);
        var D = w.g_L5EarthCoefficients.length, G = 0;
        for (_ = 0; _ < D; _++)
          G += w.g_L5EarthCoefficients[_].a * Math.cos(w.g_L5EarthCoefficients[_].b + w.g_L5EarthCoefficients[_].c * e);
        var U = (u + p * e + S * r + k * a + I * s + G * l) / 1e8;
        return U = y.m360(y.r2D(U)), U;
      }, pe.eclipticLatitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_B0EarthCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_B0EarthCoefficients[u].a * Math.cos(w.g_B0EarthCoefficients[u].b + w.g_B0EarthCoefficients[u].c * e);
        var _ = w.g_B1EarthCoefficients.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_B1EarthCoefficients[u].a * Math.cos(w.g_B1EarthCoefficients[u].b + w.g_B1EarthCoefficients[u].c * e);
        var p = w.g_B2EarthCoefficients.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_B2EarthCoefficients[u].a * Math.cos(w.g_B2EarthCoefficients[u].b + w.g_B2EarthCoefficients[u].c * e);
        var S = w.g_B3EarthCoefficients.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_B3EarthCoefficients[u].a * Math.cos(w.g_B3EarthCoefficients[u].b + w.g_B3EarthCoefficients[u].c * e);
        var k = w.g_B4EarthCoefficients.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_B4EarthCoefficients[u].a * Math.cos(w.g_B4EarthCoefficients[u].b + w.g_B4EarthCoefficients[u].c * e);
        var I = (h + m * e + b * r + x * a + P * s) / 1e8;
        return I = y.r2D(I), I;
      }, pe.radiusVector = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_R0EarthCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_R0EarthCoefficients[u].a * Math.cos(w.g_R0EarthCoefficients[u].b + w.g_R0EarthCoefficients[u].c * e);
        var _ = w.g_R1EarthCoefficients.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_R1EarthCoefficients[u].a * Math.cos(w.g_R1EarthCoefficients[u].b + w.g_R1EarthCoefficients[u].c * e);
        var p = w.g_R2EarthCoefficients.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_R2EarthCoefficients[u].a * Math.cos(w.g_R2EarthCoefficients[u].b + w.g_R2EarthCoefficients[u].c * e);
        var S = w.g_R3EarthCoefficients.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_R3EarthCoefficients[u].a * Math.cos(w.g_R3EarthCoefficients[u].b + w.g_R3EarthCoefficients[u].c * e);
        var k = w.g_R4EarthCoefficients.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_R4EarthCoefficients[u].a * Math.cos(w.g_R4EarthCoefficients[u].b + w.g_R4EarthCoefficients[u].c * e);
        return (h + m * e + b * r + x * a + P * s) / 1e8;
      }, pe.sunMeanAnomaly = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(357.5291092 + 35999.0502909 * e - 1536e-7 * r + a / 2449e4);
      }, pe.eccentricity = function(t) {
        var e = (t - 2451545) / 36525, r = e * e;
        return 1 - 2516e-6 * e - 74e-7 * r;
      }, pe.eclipticLongitudeJ2000 = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_L0EarthCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_L0EarthCoefficients[u].a * Math.cos(w.g_L0EarthCoefficients[u].b + w.g_L0EarthCoefficients[u].c * e);
        var _ = w.g_L1EarthCoefficientsJ2000.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_L1EarthCoefficientsJ2000[u].a * Math.cos(w.g_L1EarthCoefficientsJ2000[u].b + w.g_L1EarthCoefficientsJ2000[u].c * e);
        var p = w.g_L2EarthCoefficientsJ2000.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_L2EarthCoefficientsJ2000[u].a * Math.cos(w.g_L2EarthCoefficientsJ2000[u].b + w.g_L2EarthCoefficientsJ2000[u].c * e);
        var S = w.g_L3EarthCoefficientsJ2000.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_L3EarthCoefficientsJ2000[u].a * Math.cos(w.g_L3EarthCoefficientsJ2000[u].b + w.g_L3EarthCoefficientsJ2000[u].c * e);
        var k = w.g_L4EarthCoefficientsJ2000.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_L4EarthCoefficientsJ2000[u].a * Math.cos(w.g_L4EarthCoefficientsJ2000[u].b + w.g_L4EarthCoefficientsJ2000[u].c * e);
        var I = (h + m * e + b * r + x * a + P * s) / 1e8;
        return I = y.m360(y.r2D(I)), I;
      }, pe.eclipticLatitudeJ2000 = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_B0EarthCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_B0EarthCoefficients[u].a * Math.cos(w.g_B0EarthCoefficients[u].b + w.g_B0EarthCoefficients[u].c * e);
        var _ = w.g_B1EarthCoefficientsJ2000.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_B1EarthCoefficientsJ2000[u].a * Math.cos(w.g_B1EarthCoefficientsJ2000[u].b + w.g_B1EarthCoefficientsJ2000[u].c * e);
        var p = w.g_B2EarthCoefficientsJ2000.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_B2EarthCoefficientsJ2000[u].a * Math.cos(w.g_B2EarthCoefficientsJ2000[u].b + w.g_B2EarthCoefficientsJ2000[u].c * e);
        var S = w.g_B3EarthCoefficientsJ2000.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_B3EarthCoefficientsJ2000[u].a * Math.cos(w.g_B3EarthCoefficientsJ2000[u].b + w.g_B3EarthCoefficientsJ2000[u].c * e);
        var k = w.g_B4EarthCoefficientsJ2000.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_B4EarthCoefficientsJ2000[u].a * Math.cos(w.g_B4EarthCoefficientsJ2000[u].b + w.g_B4EarthCoefficientsJ2000[u].c * e);
        var I = (h + m * e + b * r + x * a + P * s) / 1e8;
        return I = y.r2D(I), I;
      };
      var wo = {};
      function o(t, e, r) {
        this.a = 0, this.b = 0, this.c = 0, this.a = t, this.b = e, this.c = r;
      }
      var bo = {};
      function pa() {
        this.i = 0, this.w = 0, this.omega = 0, this.i = 0, this.w = 0, this.omega = 0;
      }
      var yo = {};
      function va() {
      }
      va.calculate = function(t, e, r, a, s) {
        var l = (a - 2451545) / 36525, h = l * l, u = (s - a) / 36525, _ = u * u, m = _ * u, p = y.d2R(t), b = y.d2R(r), S = (47.0029 - 0.06603 * l + 598e-6 * h) * u + (-0.03302 + 598e-6 * l) * _ + 6e-5 * m;
        S = y.d2R(y.dmS2D(0, 0, S));
        var x = 174.876384 * 3600 + 3289.4789 * l + 0.60622 * h - (869.8089 + 0.50491 * l) * u + 0.03536 * _;
        x = y.d2R(y.dmS2D(0, 0, x));
        var k = (5029.0966 + 2.22226 * l - 42e-6 * h) * u + (1.11113 - 42e-6 * l) * _ - 6e-6 * m;
        k = y.d2R(y.dmS2D(0, 0, k));
        var P = Math.sin(p), I = Math.cos(p), D = Math.sin(b - x), G = Math.cos(b - x), U = Math.sin(S), Y = Math.cos(S), j = P * D, K = -U * I + Y * P * G, Q = Math.asin(Math.sqrt(j * j + K * K)), J = new pa();
        J.i = y.r2D(Q);
        var nt = I * Y + P * U * G;
        nt < 0 && (J.i = 180 - J.i);
        var W = x + k;
        J.omega = y.m360(y.r2D(Math.atan2(j, K) + W)), j = -U * D, K = P * Y - I * U * G;
        var ct = y.r2D(Math.atan2(j, K));
        return J.w = y.m360(e + ct), J;
      }, va.fK4B1950ToFK5J2000 = function(t, e, r) {
        var a = y.d2R(5.19856209), s = y.d2R(651966e-8), l = y.d2R(t), h = y.d2R(r), u = Math.sin(l), _ = Math.cos(l), m = Math.cos(s), p = Math.sin(s), b = a + h, S = Math.cos(b), x = Math.sin(b), k = p * x, P = u * m + _ * p * S, I = new pa();
        I.i = y.r2D(Math.asin(Math.sqrt(k * k + P * P)));
        var D = _ * m - u * p * S;
        return D < 0 && (I.i = 180 - I.i), I.w = y.m360(e + y.r2D(Math.atan2(k, P))), I.omega = y.m360(y.r2D(Math.atan2(u * x, _ * p + u * m * S)) - 4.50001688), I;
      };
      var So = {};
      function Ct() {
      }
      Ct.mercuryMeanLongitude = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(252.250906 + 149474.0722491 * e + 3035e-7 * r + 18e-9 * a);
      }, Ct.mercurySemimajorAxis = function(t) {
        return 0.38709831;
      }, Ct.mercuryEccentricity = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return 0.20563175 + 20407e-9 * e - 283e-10 * r - 18e-11 * a;
      }, Ct.mercuryInclination = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(7.004986 + 18215e-7 * e - 181e-7 * r + 56e-9 * a);
      }, Ct.mercuryLongitudeAscendingNode = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(48.330893 + 1.1861883 * e + 17542e-8 * r + 215e-9 * a);
      }, Ct.mercuryLongitudePerihelion = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(77.456119 + 1.5564776 * e + 29544e-8 * r + 9e-9 * a);
      }, Ct.venusMeanLongitude = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(181.979801 + 58519.2130302 * e + 31014e-8 * r + 15e-9 * a);
      }, Ct.venusSemimajorAxis = function(t) {
        return 0.72332982;
      }, Ct.venusEccentricity = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return 677192e-8 - 47765e-9 * e + 981e-10 * r + 46e-11 * a;
      }, Ct.venusInclination = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(3.394662 + 10037e-7 * e - 88e-8 * r - 7e-9 * a);
      }, Ct.venusLongitudeAscendingNode = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(76.67992 + 0.9011206 * e + 40618e-8 * r - 93e-9 * a);
      }, Ct.venusLongitudePerihelion = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(131.563703 + 1.4022288 * e - 107618e-8 * r - 5678e-9 * a);
      }, Ct.earthMeanLongitude = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(100.466457 + 36000.7698278 * e + 30322e-8 * r + 2e-8 * a);
      }, Ct.earthSemimajorAxis = function(t) {
        return 1.000001018;
      }, Ct.earthEccentricity = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return 0.01670863 - 42037e-9 * e - 1267e-10 * r + 14e-11 * a;
      }, Ct.earthInclination = function(t) {
        return 0;
      }, Ct.earthLongitudePerihelion = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(102.937348 + 1.17195366 * e + 45688e-8 * r - 18e-9 * a);
      }, Ct.marsMeanLongitude = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(355.433 + 19141.6964471 * e + 31052e-8 * r + 16e-9 * a);
      }, Ct.marsSemimajorAxis = function(t) {
        return 1.523679342;
      }, Ct.marsEccentricity = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return 0.09340065 + 90484e-9 * e - 806e-10 * r - 25e-11 * a;
      }, Ct.marsInclination = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(1.849726 - 6011e-7 * e + 1276e-8 * r - 7e-9 * a);
      }, Ct.marsLongitudeAscendingNode = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(49.588093 + 0.7720959 * e + 1557e-8 * r + 2267e-9 * a);
      }, Ct.marsLongitudePerihelion = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(336.060234 + 1.8410449 * e + 13477e-8 * r + 536e-9 * a);
      }, Ct.jupiterMeanLongitude = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(34.351519 + 3036.3027748 * e + 2233e-7 * r + 37e-9 * a);
      }, Ct.jupiterSemimajorAxis = function(t) {
        var e = (t - 2451545) / 36525;
        return 5.202603209 + 1913e-10 * e;
      }, Ct.jupiterEccentricity = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return 0.04849793 + 163225e-9 * e - 4714e-10 * r - 201e-11 * a;
      }, Ct.jupiterInclination = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(1.303267 - 54965e-7 * e + 466e-8 * r - 2e-9 * a);
      }, Ct.jupiterLongitudeAscendingNode = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(100.464407 + 1.0209774 * e + 40315e-8 * r + 404e-9 * a);
      }, Ct.jupiterLongitudePerihelion = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(14.331207 + 1.6126352 * e + 103042e-8 * r - 4464e-9 * a);
      }, Ct.saturnMeanLongitude = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(50.077444 + 1223.5110686 * e + 51908e-8 * r - 3e-8 * a);
      }, Ct.saturnSemimajorAxis = function(t) {
        var e = (t - 2451545) / 36525, r = e * e;
        return 9.554909192 - 2139e-9 * e + 4e-9 * r;
      }, Ct.saturnEccentricity = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return 0.05554814 - 3446641e-10 * e - 6436e-10 * r + 34e-10 * a;
      }, Ct.saturnInclination = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(2.488879 - 37362e-7 * e - 1519e-8 * r + 87e-9 * a);
      }, Ct.saturnLongitudeAscendingNode = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(113.665503 + 0.877088 * e - 12176e-8 * r - 2249e-9 * a);
      }, Ct.saturnLongitudePerihelion = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(93.057237 + 1.19637613 * e + 83753e-8 * r + 4928e-9 * a);
      }, Ct.uranusMeanLongitude = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(314.055005 + 429.8640561 * e + 3039e-7 * r + 26e-9 * a);
      }, Ct.uranusSemimajorAxis = function(t) {
        var e = (t - 2451545) / 36525, r = e * e;
        return 19.218446062 - 372e-10 * e + 98e-11 * r;
      }, Ct.uranusEccentricity = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return 0.04638122 - 27293e-9 * e + 789e-10 * r + 24e-11 * a;
      }, Ct.uranusInclination = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(0.773197 + 7744e-7 * e + 3749e-8 * r - 92e-9 * a);
      }, Ct.uranusLongitudeAscendingNode = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(74.005957 + 0.5211278 * e + 133947e-8 * r + 18484e-9 * a);
      }, Ct.uranusLongitudePerihelion = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(173.005291 + 1.486379 * e + 21406e-8 * r + 434e-9 * a);
      }, Ct.neptuneMeanLongitude = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(304.348665 + 219.8833092 * e + 30882e-8 * r + 18e-9 * a);
      }, Ct.neptuneSemimajorAxis = function(t) {
        var e = (t - 2451545) / 36525, r = e * e;
        return 30.110386869 - 1663e-10 * e + 69e-11 * r;
      }, Ct.neptuneEccentricity = function(t) {
        var e = (t - 2451545) / 36525, r = e * e * e;
        return 945575e-8 + 6033e-9 * e - 5e-11 * r;
      }, Ct.neptuneInclination = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(1.769953 - 93082e-7 * e - 708e-8 * r + 27e-9 * a);
      }, Ct.neptuneLongitudeAscendingNode = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(131.784057 + 1.1022039 * e + 25952e-8 * r - 637e-9 * a);
      }, Ct.neptuneLongitudePerihelion = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(48.120276 + 1.4262957 * e + 38434e-8 * r + 2e-8 * a);
      }, Ct.mercuryMeanLongitudeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(252.250906 + 149472.6746358 * e - 536e-8 * r + 2e-9 * a);
      }, Ct.mercuryInclinationJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(7.004986 - 59516e-7 * e + 8e-7 * r + 43e-9 * a);
      }, Ct.mercuryLongitudeAscendingNodeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(48.330893 - 0.1254227 * e - 8833e-8 * r - 2e-7 * a);
      }, Ct.mercuryLongitudePerihelionJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(77.456119 + 0.1588643 * e - 1342e-8 * r - 7e-9 * a);
      }, Ct.venusMeanLongitudeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(181.979801 + 58517.815676 * e + 165e-8 * r - 2e-9 * a);
      }, Ct.venusInclinationJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(3.394662 - 8568e-7 * e - 3244e-8 * r + 9e-9 * a);
      }, Ct.venusLongitudeAscendingNodeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(76.67992 - 0.2780134 * e - 14257e-8 * r - 164e-9 * a);
      }, Ct.venusLongitudePerihelionJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(131.563703 + 48746e-7 * e - 138467e-8 * r - 5695e-9 * a);
      }, Ct.earthMeanLongitudeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(100.466457 + 35999.3728565 * e - 568e-8 * r - 1e-9 * a);
      }, Ct.earthInclinationJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return 0.0130548 * e - 931e-8 * r - 34e-9 * a;
      }, Ct.earthLongitudeAscendingNodeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(174.873176 - 0.241098 * e + 4262e-8 * r + 1e-9 * a);
      }, Ct.earthLongitudePerihelionJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(102.937348 + 0.3225654 * e + 14799e-8 * r - 39e-9 * a);
      }, Ct.marsMeanLongitudeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(355.433 + 19140.2993039 * e + 262e-8 * r - 3e-9 * a);
      }, Ct.marsInclinationJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(1.849726 - 81477e-7 * e - 2255e-8 * r - 29e-9 * a);
      }, Ct.marsLongitudeAscendingNodeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(49.588093 - 0.295025 * e - 64048e-8 * r - 1964e-9 * a);
      }, Ct.marsLongitudePerihelionJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(336.060234 + 0.4439016 * e - 17313e-8 * r + 518e-9 * a);
      }, Ct.jupiterMeanLongitudeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(34.351519 + 3034.9056606 * e - 8501e-8 * r + 16e-9 * a);
      }, Ct.jupiterInclinationJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(1.303267 - 19877e-7 * e + 332e-7 * r + 97e-9 * a);
      }, Ct.jupiterLongitudeAscendingNodeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(100.464407 + 0.1767232 * e + 907e-6 * r - 7272e-9 * a);
      }, Ct.jupiterLongitudePerihelionJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(14.331207 + 0.2155209 * e + 72211e-8 * r - 4485e-9 * a);
      }, Ct.saturnMeanLongitudeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(50.077444 + 1222.1138488 * e + 21004e-8 * r - 46e-9 * a);
      }, Ct.saturnInclinationJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(2.488879 + 25514e-7 * e - 4906e-8 * r + 17e-9 * a);
      }, Ct.saturnLongitudeAscendingNodeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(113.665503 - 0.2566722 * e - 18399e-8 * r + 48e-8 * a);
      }, Ct.saturnLongitudePerihelionJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(93.057237 + 0.5665415 * e + 5285e-7 * r + 4912e-9 * a);
      }, Ct.uranusMeanLongitudeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(314.055005 + 428.4669983 * e - 486e-8 * r + 6e-9 * a);
      }, Ct.uranusInclinationJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(0.773197 - 16869e-7 * e + 349e-8 * r + 16e-9 * a);
      }, Ct.uranusLongitudeAscendingNodeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(74.005957 + 0.0741431 * e + 40539e-8 * r + 119e-9 * a);
      }, Ct.uranusLongitudePerihelionJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(173.005291 + 0.0893212 * e - 947e-7 * r + 414e-9 * a);
      }, Ct.neptuneMeanLongitudeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(304.348665 + 218.4862002 * e + 59e-8 * r - 2e-9 * a);
      }, Ct.neptuneInclinationJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e;
        return y.m360(1.769953 + 2256e-7 * e + 23e-8 * r);
      }, Ct.neptuneLongitudeAscendingNodeJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e;
        return y.m360(131.784057 - 61651e-7 * e - 219e-8 * r - 78e-9 * a);
      }, Ct.neptuneLongitudePerihelionJ2000 = function(t) {
        var e = (t - 2451545) / 36525, r = e * e;
        return y.m360(48.120276 + 0.0291866 * e + 761e-7 * r);
      };
      var Co = {};
      function Mn() {
        this.a = 0, this.e = 0, this.i = 0, this.w = 0, this.omega = 0, this.jdEquinox = 0, this.t = 0, this.n = 0, this.meanAnnomolyOut = 0, this.a = 0, this.e = 0, this.i = 0, this.w = 0, this.omega = 0, this.jdEquinox = 0, this.t = 0;
      }
      Mn._create = function(t) {
        var e = new Mn();
        return e.a = t.readSingle(), e.e = t.readSingle(), e.i = t.readSingle(), e.w = t.readSingle(), e.omega = t.readSingle(), e.jdEquinox = t.readSingle(), e.t = t.readSingle(), e;
      };
      var Mo = {};
      function wa() {
        this.apparentGeocentricLongitude = 0, this.apparentGeocentricLatitude = 0, this.apparentGeocentricDistance = 0, this.apparentLightTime = 0, this.apparentGeocentricRA = 0, this.apparentGeocentricDeclination = 0, this.apparentGeocentricLongitude = 0, this.apparentGeocentricLatitude = 0, this.apparentGeocentricDistance = 0, this.apparentLightTime = 0, this.apparentGeocentricRA = 0, this.apparentGeocentricDeclination = 0;
      }
      var To = {};
      function Wa() {
        this.heliocentricRectangularEquatorial = new Pi(), this.heliocentricRectangularEcliptical = new Pi(), this.heliocentricEclipticLongitude = 0, this.heliocentricEclipticLatitude = 0, this.trueGeocentricRA = 0, this.trueGeocentricDeclination = 0, this.trueGeocentricDistance = 0, this.trueGeocentricLightTime = 0, this.astrometricGeocenticRA = 0, this.astrometricGeocentricDeclination = 0, this.astrometricGeocentricDistance = 0, this.astrometricGeocentricLightTime = 0, this.elongation = 0, this.phaseAngle = 0, this.heliocentricEclipticLongitude = 0, this.heliocentricEclipticLatitude = 0, this.trueGeocentricRA = 0, this.trueGeocentricDeclination = 0, this.trueGeocentricDistance = 0, this.trueGeocentricLightTime = 0, this.astrometricGeocenticRA = 0, this.astrometricGeocentricDeclination = 0, this.astrometricGeocentricDistance = 0, this.astrometricGeocentricLightTime = 0, this.elongation = 0, this.phaseAngle = 0;
      }
      var xo = {};
      function Fe() {
      }
      Fe.distanceToLightTime = function(t) {
        return t * 0.0057755183;
      }, Fe.calculate = function(t, e) {
        var r = new wa(), a = t, s = 0, l = 0, h = 0, u = 0;
        e && (s = pe.eclipticLongitude(a), l = pe.eclipticLatitude(a), h = pe.radiusVector(a), s = y.d2R(s), l = y.d2R(l), u = Math.cos(l));
        for (var _ = 0, m = 0, p = 0, b, S, x, k, P, I, D, G = !0, U = !0, Y = 0, j = 0, K = 0; G; ) {
          switch (e) {
            case 0:
              _ = Ce.geometricEclipticLongitude(a), m = Ce.geometricEclipticLatitude(a), p = pe.radiusVector(a);
              break;
            case 1:
              _ = sr.eclipticLongitude(a), m = sr.eclipticLatitude(a), p = sr.radiusVector(a);
              break;
            case 2:
              _ = hr.eclipticLongitude(a), m = hr.eclipticLatitude(a), p = hr.radiusVector(a);
              break;
            case 3:
              _ = qi.eclipticLongitude(a), m = qi.eclipticLatitude(a), p = qi.radiusVector(a);
              break;
            case 4:
              _ = ai.eclipticLongitude(a), m = ai.eclipticLatitude(a), p = ai.radiusVector(a);
              break;
            case 5:
              _ = Yi.eclipticLongitude(a), m = Yi.eclipticLatitude(a), p = Yi.radiusVector(a);
              break;
            case 6:
              _ = ur.eclipticLongitude(a), m = ur.eclipticLatitude(a), p = ur.radiusVector(a);
              break;
            case 7:
              _ = or.eclipticLongitude(a), m = or.eclipticLatitude(a), p = or.radiusVector(a);
              break;
            case 8:
              _ = lr.eclipticLongitude(a), m = lr.eclipticLatitude(a), p = lr.radiusVector(a);
              break;
            default:
              console.assert(!1);
              break;
          }
          if (U ? U = !1 : (G = Math.abs(_ - Y) > 1e-5 || Math.abs(m - j) > 1e-5 || Math.abs(p - K) > 1e-6, Y = _, j = m, K = p), G) {
            var Q = 0;
            e ? (b = y.d2R(_), S = y.d2R(m), x = Math.cos(S), k = Math.cos(b), P = p * x * k - h * u * Math.cos(s), I = p * x * Math.sin(b) - h * u * Math.sin(s), D = p * Math.sin(S) - h * Math.sin(l), Q = Math.sqrt(P * P + I * I + D * D)) : Q = p, a = t - Fe.distanceToLightTime(Q);
          }
        }
        b = y.d2R(_), S = y.d2R(m), x = Math.cos(S), k = Math.cos(b), P = p * x * k - h * u * Math.cos(s), I = p * x * Math.sin(b) - h * u * Math.sin(s), D = p * Math.sin(S) - h * Math.sin(l);
        var J = P * P, nt = I * I;
        r.apparentGeocentricLatitude = y.r2D(Math.atan2(D, Math.sqrt(J + nt))), r.apparentGeocentricDistance = Math.sqrt(J + nt + D * D), r.apparentGeocentricLongitude = y.m360(y.r2D(Math.atan2(I, P))), r.apparentLightTime = Fe.distanceToLightTime(r.apparentGeocentricDistance);
        var W = un.eclipticAberration(r.apparentGeocentricLongitude, r.apparentGeocentricLatitude, t);
        r.apparentGeocentricLongitude += W.x, r.apparentGeocentricLatitude += W.y;
        var ct = Ii.correctionInLongitude(r.apparentGeocentricLongitude, r.apparentGeocentricLatitude, t);
        r.apparentGeocentricLatitude += Ii.correctionInLatitude(r.apparentGeocentricLongitude, t), r.apparentGeocentricLongitude += ct;
        var rt = Ie.nutationInLongitude(t), kt = Ie.trueObliquityOfEcliptic(t);
        r.apparentGeocentricLongitude += y.dmS2D(0, 0, rt);
        var At = y.ec2Eq(r.apparentGeocentricLongitude, r.apparentGeocentricLatitude, kt);
        return r.apparentGeocentricRA = At.x, r.apparentGeocentricDeclination = At.y, r;
      }, Fe.semiMajorAxisFromPerihelionDistance = function(t, e) {
        return t / (1 - e);
      }, Fe.meanMotionFromSemiMajorAxis = function(t) {
        return 0.9856076686 / (t * Math.sqrt(t));
      }, Fe.calculateRectangularJD = function(t, e) {
        var r = t, a = y.d2R(e.omega), s = y.d2R(e.w), l = y.d2R(e.i), h = 0, u = 1, _ = Math.sin(a), m = Math.cos(a), p = Math.cos(l), b = Math.sin(l), S = m, x = _ * u, k = _ * h, P = -_ * p, I = m * p * u - b * h, D = m * p * h + b * u, G = Math.sqrt(S * S + P * P), U = Math.sqrt(x * x + I * I), Y = Math.sqrt(k * k + D * D), j = Math.atan2(S, P), K = Math.atan2(x, I), Q = Math.atan2(k, D), J = e.n * (r - e.t);
        e.meanAnnomolyOut = J;
        var nt = Or.calculate(J, e.e);
        nt = y.d2R(nt);
        var W = 2 * Math.atan(Math.sqrt((1 + e.e) / (1 - e.e)) * Math.tan(nt / 2)), ct = e.a * (1 - e.e * Math.cos(nt)), rt = ct * G * Math.sin(j + s + W), kt = ct * U * Math.sin(K + s + W), At = ct * Y * Math.sin(Q + s + W);
        return L.create(rt, At, kt);
      }, Fe.calculateRectangular = function(t, e) {
        var r = y.d2R(t.omega), a = y.d2R(t.w), s = y.d2R(t.i), l = 0, h = 1, u = Math.sin(r), _ = Math.cos(r), m = Math.cos(s), p = Math.sin(s), b = _, S = u * h, x = u * l, k = -u * m, P = _ * m * h - p * l, I = _ * m * l + p * h, D = Math.sqrt(b * b + k * k), G = Math.sqrt(S * S + P * P), U = Math.sqrt(x * x + I * I), Y = Math.atan2(b, k), j = Math.atan2(S, P), K = Math.atan2(x, I);
        t.n;
        var Q = e, J = Or.calculate(Q, t.e);
        J = y.d2R(J);
        var nt = 2 * Math.atan(Math.sqrt((1 + t.e) / (1 - t.e)) * Math.tan(J / 2)), W = t.a * (1 - t.e * Math.cos(J)), ct = W * D * Math.sin(Y + a + nt), rt = W * G * Math.sin(j + a + nt), kt = W * U * Math.sin(K + a + nt);
        return L.create(ct, kt, rt);
      }, Fe.calculateElements = function(t, e) {
        var r = Ie.meanObliquityOfEcliptic(e.jdEquinox), a = t, s = new Wa();
        r = y.d2R(r);
        for (var l = y.d2R(e.omega), h = y.d2R(e.w), u = y.d2R(e.i), _ = Math.sin(r), m = Math.cos(r), p = Math.sin(l), b = Math.cos(l), S = Math.cos(u), x = Math.sin(u), k = b, P = p * m, I = p * _, D = -p * S, G = b * S * m - x * _, U = b * S * _ + x * m, Y = Math.sqrt(k * k + D * D), j = Math.sqrt(P * P + G * G), K = Math.sqrt(I * I + U * U), Q = Math.atan2(k, D), J = Math.atan2(P, G), nt = Math.atan2(I, U), W = Fe.meanMotionFromSemiMajorAxis(e.a), ct = Ce.equatorialRectangularCoordinatesAnyEquinox(t, e.jdEquinox), rt = 0; rt < 2; rt++) {
          var kt = W * (a - e.t), At = Or.calculate(kt, e.e);
          At = y.d2R(At);
          var bt = 2 * Math.atan(Math.sqrt((1 + e.e) / (1 - e.e)) * Math.tan(At / 2)), _t = e.a * (1 - e.e * Math.cos(At)), $e = _t * Y * Math.sin(Q + h + bt), je = _t * j * Math.sin(J + h + bt), qe = _t * K * Math.sin(nt + h + bt);
          if (!rt) {
            s.heliocentricRectangularEquatorial.x = $e, s.heliocentricRectangularEquatorial.y = je, s.heliocentricRectangularEquatorial.z = qe;
            var me = l + bt, Ue = Math.cos(me), ue = Math.sin(me);
            s.heliocentricRectangularEcliptical.x = _t * (b * Ue - p * ue * S), s.heliocentricRectangularEcliptical.y = _t * (p * Ue + b * ue * S), s.heliocentricRectangularEcliptical.z = _t * x * ue, s.heliocentricEclipticLongitude = Math.atan2(je, $e), s.heliocentricEclipticLongitude = y.m24(y.r2D(s.heliocentricEclipticLongitude) / 15), s.heliocentricEclipticLatitude = Math.asin(qe / _t), s.heliocentricEclipticLatitude = y.r2D(s.heliocentricEclipticLatitude);
          }
          var oi = ct.x + $e, Xt = ct.y + je, li = ct.z + qe, Je = Math.atan2(Xt, oi);
          Je = y.r2D(Je);
          var Lt = Math.atan2(li, Math.sqrt(oi * oi + Xt * Xt));
          Lt = y.r2D(Lt);
          var yt = Math.sqrt(oi * oi + Xt * Xt + li * li);
          if (!rt)
            s.trueGeocentricRA = y.m24(Je / 15), s.trueGeocentricDeclination = Lt, s.trueGeocentricDistance = yt, s.trueGeocentricLightTime = Fe.distanceToLightTime(yt);
          else {
            s.astrometricGeocenticRA = y.m24(Je / 15), s.astrometricGeocentricDeclination = Lt, s.astrometricGeocentricDistance = yt, s.astrometricGeocentricLightTime = Fe.distanceToLightTime(yt);
            var re = Math.sqrt(ct.x * ct.x + ct.y * ct.y + ct.z * ct.z);
            s.elongation = Math.acos((re * re + yt * yt - _t * _t) / (2 * re * yt)), s.elongation = y.r2D(s.elongation), s.phaseAngle = Math.acos((_t * _t + yt * yt - re * re) / (2 * _t * yt)), s.phaseAngle = y.r2D(s.phaseAngle);
          }
          rt || (a = t - s.trueGeocentricLightTime);
        }
        return s;
      }, Fe.instantaneousVelocity = function(t, e) {
        return 42.1219 * Math.sqrt(1 / t - 1 / (2 * e));
      }, Fe.velocityAtPerihelion = function(t, e) {
        return 29.7847 / Math.sqrt(e) * Math.sqrt((1 + t) / (1 - t));
      }, Fe.velocityAtAphelion = function(t, e) {
        return 29.7847 / Math.sqrt(e) * Math.sqrt((1 - t) / (1 + t));
      }, Fe.lengthOfEllipse = function(t, e) {
        var r = e * Math.sqrt(1 - t * t);
        return y.PI() * (3 * (e + r) - Math.sqrt((e + 3 * r) * (3 * e + r)));
      }, Fe.cometMagnitude = function(t, e, r, a) {
        return t + 5 * at.log10(e) + r * at.log10(a);
      }, Fe.minorPlanetMagnitude = function(t, e, r, a, s) {
        s = y.d2R(s);
        var l = Math.exp(-3.33 * Math.pow(Math.tan(s / 2), 0.63)), h = Math.exp(-1.87 * Math.pow(Math.tan(s / 2), 1.22));
        return t + 5 * at.log10(a * e) - 2.5 * at.log10((1 - r) * l + r * h);
      };
      var Lo = {};
      function Qa() {
      }
      Qa.calculate = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = s * e, h = y.m360(280.4664567 + 360007.6982779 * e + 0.03032028 * r + a / 49931 - s / 15300 - l / 2e6), u = Ce.apparentEclipticLongitude(t), _ = Ce.apparentEclipticLatitude(t), m = Ie.trueObliquityOfEcliptic(t), p = y.ec2Eq(u, _, m);
        m = y.d2R(m);
        var b = h - 57183e-7 - p.x * 15 + y.dmS2D(0, 0, Ie.nutationInLongitude(t)) * Math.cos(m);
        return b > 180 && (b = -(360 - b)), b *= 4, b;
      };
      var Ao = {};
      function Ii() {
      }
      Ii.correctionInLongitude = function(t, e, r) {
        var a = (r - 2451545) / 36525, s = t - 1.397 * a - 31e-5 * a * a;
        s = y.d2R(s), t = y.d2R(t), e = y.d2R(e);
        var l = -0.09033 + 0.03916 * (Math.cos(s) + Math.sin(s)) * Math.tan(e);
        return y.dmS2D(0, 0, l);
      }, Ii.correctionInLatitude = function(t, e) {
        var r = (e - 2451545) / 36525, a = t - 1.397 * r - 31e-5 * r * r;
        a = y.d2R(a), t = y.d2R(t);
        var s = 0.03916 * (Math.cos(a) - Math.sin(a));
        return y.dmS2D(0, 0, s);
      }, Ii.convertVSOPToFK5J2000 = function(t) {
        var e = new Pi();
        return e.x = t.x + 44036e-11 * t.y - 190919e-12 * t.z, e.y = -479966e-12 * t.x + 0.917482137087 * t.y - 0.397776982902 * t.z, e.z = 0.397776982902 * t.y + 0.917482137087 * t.z, e;
      }, Ii.convertVSOPToFK5B1950 = function(t) {
        var e = new Pi();
        return e.x = 0.999925702634 * t.x + 0.012189716217 * t.y + 11134016e-12 * t.z, e.y = -0.011179418036 * t.x + 0.917413998946 * t.y - 0.397777041885 * t.z, e.z = -0.004859003787 * t.x + 0.397747363646 * t.y + 0.917482111428 * t.z, e;
      }, Ii.convertVSOPToFK5AnyEquinox = function(t, e) {
        var r = (e - 2451545) / 36525, a = r * r, s = a * r, l = 2306.2181 * r + 0.30188 * a + 0.017988 * s;
        l = y.d2R(y.dmS2D(0, 0, l));
        var h = 2306.2181 * r + 1.09468 * a + 0.018203 * s;
        h = y.d2R(y.dmS2D(0, 0, h));
        var u = 2004.3109 * r - 0.42665 * a - 0.041833 * s;
        u = y.d2R(y.dmS2D(0, 0, u));
        var _ = Math.cos(l), m = Math.cos(h), p = Math.cos(u), b = Math.sin(l), S = Math.sin(h), x = Math.sin(u), k = _ * m * p - b * S, P = b * m + _ * S * p, I = _ * x, D = -_ * S - b * m * p, G = _ * m - b * S * p, U = -b * x, Y = -m * x, j = -S * x, K = p, Q = new Pi();
        return Q.x = k * t.x + D * t.y + Y * t.z, Q.y = P * t.x + G * t.y + j * t.z, Q.z = I * t.x + U * t.y + K * t.z, Q;
      };
      var ko = {};
      function Tn() {
        this.meanLongitude = 0, this.trueLongitude = 0, this.tropicalLongitude = 0, this.equatorialLatitude = 0, this.r = 0, this.eclipticRectangularCoordinates = new Pi(), this.trueRectangularCoordinates = new Pi(), this.apparentRectangularCoordinates = new Pi(), this.bInTransit = !1, this.bInOccultation = !1, this.bInEclipse = !1, this.bInShadowTransit = !1, this.apparentShadowRectangularCoordinates = new Pi(), this.meanLongitude = 0, this.trueLongitude = 0, this.tropicalLongitude = 0, this.equatorialLatitude = 0, this.r = 0, this.bInTransit = !1, this.bInOccultation = !1, this.bInEclipse = !1, this.bInShadowTransit = !1;
      }
      var Io = {};
      function ba() {
        this.satellite1 = new Tn(), this.satellite2 = new Tn(), this.satellite3 = new Tn(), this.satellite4 = new Tn();
      }
      var $o = {};
      function We() {
      }
      We.calculate = function(t) {
        for (var e = Ce.geometricEclipticLongitude(t), r = y.d2R(e), a = Ce.geometricEclipticLatitude(t), s = y.d2R(a), l = pe.radiusVector(t), h = 5, u = 0, _ = Fe.distanceToLightTime(h), m = t - _, p = !0, b = 0, S = 0, x = 0, k = 0, P = 0, I = 0, D = 0, G = 0; p; )
          k = ai.eclipticLongitude(m), P = y.d2R(k), I = ai.eclipticLatitude(m), D = y.d2R(I), G = ai.radiusVector(m), b = G * Math.cos(D) * Math.cos(P) + l * Math.cos(r), S = G * Math.cos(D) * Math.sin(P) + l * Math.sin(r), x = G * Math.sin(D) + l * Math.sin(s), h = Math.sqrt(b * b + S * S + x * x), _ = Fe.distanceToLightTime(h), p = Math.abs(_ - u) > 2e-6, p && (m = t - _, u = _);
        var U = We.calculateHelper(t, r, s, l);
        We.fillInPhenomenaDetails(U.satellite1), We.fillInPhenomenaDetails(U.satellite2), We.fillInPhenomenaDetails(U.satellite3), We.fillInPhenomenaDetails(U.satellite4), m = t - _, k = ai.eclipticLongitude(m), P = y.d2R(k), I = ai.eclipticLatitude(m), D = y.d2R(I), G = ai.radiusVector(m), b = G * Math.cos(D) * Math.cos(P), S = G * Math.cos(D) * Math.sin(P), x = G * Math.sin(D), h = Math.sqrt(b * b + S * S + x * x);
        var Y = Fe.distanceToLightTime(h), j = We.calculateHelper(t + Y - _, r, s, 0);
        return We.fillInPhenomenaDetails(j.satellite1), We.fillInPhenomenaDetails(j.satellite2), We.fillInPhenomenaDetails(j.satellite3), We.fillInPhenomenaDetails(j.satellite4), U.satellite1.bInEclipse = j.satellite1.bInOccultation, U.satellite2.bInEclipse = j.satellite2.bInOccultation, U.satellite3.bInEclipse = j.satellite3.bInOccultation, U.satellite4.bInEclipse = j.satellite4.bInOccultation, U.satellite1.bInShadowTransit = j.satellite1.bInTransit, U.satellite2.bInShadowTransit = j.satellite2.bInTransit, U.satellite3.bInShadowTransit = j.satellite3.bInTransit, U.satellite4.bInShadowTransit = j.satellite4.bInTransit, U.satellite1.apparentShadowRectangularCoordinates = j.satellite1.apparentRectangularCoordinates, U.satellite2.apparentShadowRectangularCoordinates = j.satellite2.apparentRectangularCoordinates, U.satellite3.apparentShadowRectangularCoordinates = j.satellite3.apparentRectangularCoordinates, U.satellite4.apparentShadowRectangularCoordinates = j.satellite4.apparentRectangularCoordinates, U;
      }, We.calculateHelper = function(t, e, r, a) {
        for (var s = new ba(), l = 5, h = 0, u = Fe.distanceToLightTime(l), _ = 0, m = 0, p = 0, b = 0, S = 0, x = 0, k = 0, P = 0, I = t - u, D = !0; D; )
          b = ai.eclipticLongitude(I), S = y.d2R(b), x = ai.eclipticLatitude(I), k = y.d2R(x), P = ai.radiusVector(I), _ = P * Math.cos(k) * Math.cos(S) + a * Math.cos(e), m = P * Math.cos(k) * Math.sin(S) + a * Math.sin(e), p = P * Math.sin(k) + a * Math.sin(r), l = Math.sqrt(_ * _ + m * m + p * p), u = Fe.distanceToLightTime(l), D = Math.abs(u - h) > 2e-6, D && (I = t - u, h = u);
        var G = Math.atan2(m, _), U = Math.atan(p / Math.sqrt(_ * _ + m * m)), Y = t - 24430005e-1 - u, j = 106.07719 + 203.48895579 * Y, K = y.d2R(j), Q = 175.73161 + 101.374724735 * Y, J = y.d2R(Q), nt = 120.55883 + 50.317609207 * Y, W = y.d2R(nt), ct = 84.44459 + 21.571071177 * Y, rt = y.d2R(ct), kt = y.d2R(y.m360(97.0881 + 0.16138586 * Y)), At = y.d2R(y.m360(154.8663 + 0.04726307 * Y)), bt = y.d2R(y.m360(188.184 + 712734e-8 * Y)), _t = y.d2R(y.m360(335.2868 + 184e-5 * Y)), $e = 312.3346 - 0.13279386 * Y, je = y.d2R($e), qe = 100.4411 - 0.03263064 * Y, me = y.d2R(qe), Ue = 119.1942 - 717703e-8 * Y, ue = y.d2R(Ue), oi = 322.6186 - 175934e-8 * Y, Xt = y.d2R(oi), li = 0.33033 * Math.sin(y.d2R(163.679 + 10512e-7 * Y)) + 0.03439 * Math.sin(y.d2R(34.486 - 0.0161731 * Y)), Je = y.d2R(199.6766 + 0.1737919 * Y), Lt = y.d2R(316.5182 - 208e-8 * Y), yt = y.d2R(30.23756 + 0.0830925701 * Y + li), re = y.d2R(31.97853 + 0.0334597339 * Y), Vt = y.d2R(13.469942), Ui = 0.47259 * Math.sin(2 * (K - J)) + -0.03478 * Math.sin(bt - _t) + 0.01081 * Math.sin(J - 2 * W + bt) + 738e-5 * Math.sin(Je) + 713e-5 * Math.sin(J - 2 * W + At) + -674e-5 * Math.sin(kt + bt - 2 * Vt - 2 * yt) + 666e-5 * Math.sin(J - 2 * W + _t) + 445e-5 * Math.sin(K - bt) + -354e-5 * Math.sin(K - J) + -317e-5 * Math.sin(2 * Lt - 2 * Vt) + 265e-5 * Math.sin(K - _t) + -186e-5 * Math.sin(yt) + 162e-5 * Math.sin(At - bt) + 158e-5 * Math.sin(4 * (K - J)) + -155e-5 * Math.sin(K - W) + -138e-5 * Math.sin(Lt + ue - 2 * Vt - 2 * yt) + -115e-5 * Math.sin(2 * (K - 2 * J + me)) + 89e-5 * Math.sin(At - _t) + 85e-5 * Math.sin(K + bt - 2 * Vt - 2 * yt) + 83e-5 * Math.sin(me - ue) + 53e-5 * Math.sin(Lt - me), Si = 1.06476 * Math.sin(2 * (J - W)) + 0.04256 * Math.sin(K - 2 * J + bt) + 0.03581 * Math.sin(J - bt) + 0.02395 * Math.sin(K - 2 * J + _t) + 0.01984 * Math.sin(J - _t) + -0.01778 * Math.sin(Je) + 0.01654 * Math.sin(J - At) + 0.01334 * Math.sin(J - 2 * W + At) + 0.01294 * Math.sin(bt - _t) + -0.01142 * Math.sin(J - W) + -0.01057 * Math.sin(yt) + -775e-5 * Math.sin(2 * (Lt - Vt)) + 524e-5 * Math.sin(2 * (K - J)) + -46e-4 * Math.sin(K - W) + 316e-5 * Math.sin(Lt - 2 * yt + ue - 2 * Vt) + -203e-5 * Math.sin(kt + bt - 2 * Vt - 2 * yt) + 146e-5 * Math.sin(Lt - ue) + -145e-5 * Math.sin(2 * yt) + 125e-5 * Math.sin(Lt - Xt) + -115e-5 * Math.sin(K - 2 * W + bt) + -94e-5 * Math.sin(2 * (J - me)) + 86e-5 * Math.sin(2 * (K - 2 * J + me)) + -86e-5 * Math.sin(5 * re - 2 * yt + y.d2R(52.225)) + -78e-5 * Math.sin(J - rt) + -64e-5 * Math.sin(3 * W - 7 * rt + 4 * _t) + 64e-5 * Math.sin(kt - _t) + -63e-5 * Math.sin(K - 2 * W + _t) + 58e-5 * Math.sin(ue - Xt) + 56e-5 * Math.sin(2 * (Lt - Vt - yt)) + 56e-5 * Math.sin(2 * (J - rt)) + 55e-5 * Math.sin(2 * (K - W)) + 52e-5 * Math.sin(3 * W - 7 * rt + bt + 3 * _t) + -43e-5 * Math.sin(K - bt) + 41e-5 * Math.sin(5 * (J - W)) + 41e-5 * Math.sin(_t - Vt) + 32e-5 * Math.sin(me - ue) + 32e-5 * Math.sin(2 * (W - yt - Vt)), ri = 0.1649 * Math.sin(W - bt) + 0.09081 * Math.sin(W - _t) + -0.06907 * Math.sin(J - W) + 0.03784 * Math.sin(bt - _t) + 0.01846 * Math.sin(2 * (W - rt)) + -0.0134 * Math.sin(yt) + -0.01014 * Math.sin(2 * (Lt - Vt)) + 704e-5 * Math.sin(J - 2 * W + bt) + -62e-4 * Math.sin(J - 2 * W + At) + -541e-5 * Math.sin(W - rt) + 381e-5 * Math.sin(J - 2 * W + _t) + 235e-5 * Math.sin(Lt - ue) + 198e-5 * Math.sin(Lt - Xt) + 176e-5 * Math.sin(Je) + 13e-4 * Math.sin(3 * (W - rt)) + 125e-5 * Math.sin(K - W) + -119e-5 * Math.sin(5 * re - 2 * yt + y.d2R(52.225)) + 109e-5 * Math.sin(K - J) + -1e-3 * Math.sin(3 * W - 7 * rt + 4 * _t) + 91e-5 * Math.sin(ue - Xt) + 8e-4 * Math.sin(3 * W - 7 * rt + bt + 3 * _t) + -75e-5 * Math.sin(2 * J - 3 * W + bt) + 72e-5 * Math.sin(kt + bt - 2 * Vt - 2 * yt) + 69e-5 * Math.sin(_t - Vt) + -58e-5 * Math.sin(2 * W - 3 * rt + _t) + -57e-5 * Math.sin(W - 2 * rt + _t) + 56e-5 * Math.sin(W + bt - 2 * Vt - 2 * yt) + -52e-5 * Math.sin(J - 2 * W + kt) + -5e-4 * Math.sin(At - bt) + 48e-5 * Math.sin(W - 2 * rt + bt) + -45e-5 * Math.sin(2 * J - 3 * W + _t) + -41e-5 * Math.sin(At - _t) + -38e-5 * Math.sin(2 * yt) + -37e-5 * Math.sin(bt - _t + ue - Xt) + -32e-5 * Math.sin(3 * W - 7 * rt + 2 * bt + 2 * _t) + 3e-4 * Math.sin(4 * (W - rt)) + 29e-5 * Math.sin(W + _t - 2 * Vt - 2 * yt) + -28e-5 * Math.sin(ue + Lt - 2 * Vt - 2 * yt) + 26e-5 * Math.sin(W - Vt - yt) + 24e-5 * Math.sin(J - 3 * W + 2 * rt) + 21e-5 * Math.sin(W - Vt - yt) + -21e-5 * Math.sin(W - At) + 17e-5 * Math.sin(2 * (W - bt)), Ar = 0.84287 * Math.sin(rt - _t) + 0.03431 * Math.sin(_t - bt) + -0.03305 * Math.sin(2 * (Lt - Vt)) + -0.03211 * Math.sin(yt) + -0.01862 * Math.sin(rt - bt) + 0.01186 * Math.sin(Lt - Xt) + 623e-5 * Math.sin(rt + _t - 2 * yt - 2 * Vt) + 387e-5 * Math.sin(2 * (rt - _t)) + -284e-5 * Math.sin(5 * re - 2 * yt + y.d2R(52.225)) + -234e-5 * Math.sin(2 * (Lt - _t)) + -223e-5 * Math.sin(W - rt) + -208e-5 * Math.sin(rt - Vt) + 178e-5 * Math.sin(Lt + Xt - 2 * _t) + 134e-5 * Math.sin(_t - Vt) + 125e-5 * Math.sin(2 * (rt - yt - Vt)) + -117e-5 * Math.sin(2 * yt) + -112e-5 * Math.sin(2 * (W - rt)) + 107e-5 * Math.sin(3 * W - 7 * rt + 4 * _t) + 102e-5 * Math.sin(rt - yt - Vt) + 96e-5 * Math.sin(2 * rt - Lt - Xt) + 87e-5 * Math.sin(2 * (Lt - Xt)) + -85e-5 * Math.sin(3 * W - 7 * rt + bt + 3 * _t) + 85e-5 * Math.sin(W - 2 * rt + _t) + -81e-5 * Math.sin(2 * (rt - Lt)) + 71e-5 * Math.sin(rt + _t - 2 * Vt - 3 * yt) + 61e-5 * Math.sin(K - rt) + -56e-5 * Math.sin(Lt - ue) + -54e-5 * Math.sin(W - 2 * rt + bt) + 51e-5 * Math.sin(J - rt) + 42e-5 * Math.sin(2 * (Lt - yt - Vt)) + 39e-5 * Math.sin(2 * (_t - Xt)) + 36e-5 * Math.sin(Lt + Vt - _t - Xt) + 35e-5 * Math.sin(2 * re - yt + y.d2R(188.37)) + -35e-5 * Math.sin(rt - _t + 2 * Vt - 2 * Lt) + -32e-5 * Math.sin(rt + _t - 2 * Vt - yt) + 3e-4 * Math.sin(2 * re - 2 * yt + y.d2R(149.15)) + 29e-5 * Math.sin(3 * W - 7 * rt + 2 * bt + 2 * _t) + 28e-5 * Math.sin(rt - _t + 2 * Lt - 2 * Vt) + -28e-5 * Math.sin(2 * (rt - Xt)) + -27e-5 * Math.sin(bt - _t + ue - Xt) + -26e-5 * Math.sin(5 * re - 3 * yt + y.d2R(188.37)) + 25e-5 * Math.sin(Xt - ue) + -25e-5 * Math.sin(J - 3 * W + 2 * rt) + -23e-5 * Math.sin(3 * (W - rt)) + 21e-5 * Math.sin(2 * rt - 2 * Vt - 3 * yt) + -21e-5 * Math.sin(2 * W - 3 * rt + _t) + 19e-5 * Math.sin(rt - _t - yt) + -19e-5 * Math.sin(2 * rt - bt - _t) + -18e-5 * Math.sin(rt - _t + yt) + -16e-5 * Math.sin(rt + bt - 2 * Vt - 2 * yt);
        s.satellite1.meanLongitude = y.m360(j), s.satellite1.trueLongitude = y.m360(j + Ui);
        var Ri = y.d2R(s.satellite1.trueLongitude);
        s.satellite2.meanLongitude = y.m360(Q), s.satellite2.trueLongitude = y.m360(Q + Si);
        var ki = y.d2R(s.satellite2.trueLongitude);
        s.satellite3.meanLongitude = y.m360(nt), s.satellite3.trueLongitude = y.m360(nt + ri);
        var ui = y.d2R(s.satellite3.trueLongitude);
        s.satellite4.meanLongitude = y.m360(ct), s.satellite4.trueLongitude = y.m360(ct + Ar);
        var $i = y.d2R(s.satellite4.trueLongitude), Ki = Math.atan(6393e-7 * Math.sin(Ri - je) + 1825e-7 * Math.sin(Ri - me) + 329e-7 * Math.sin(Ri - ue) + -311e-7 * Math.sin(Ri - Lt) + 93e-7 * Math.sin(Ri - Xt) + 75e-7 * Math.sin(3 * Ri - 4 * J - 1.9927 * Ui + me) + 46e-7 * Math.sin(Ri + Lt - 2 * Vt - 2 * yt));
        s.satellite1.equatorialLatitude = y.r2D(Ki);
        var kr = Math.atan(81004e-7 * Math.sin(ki - me) + 4512e-7 * Math.sin(ki - ue) + -3284e-7 * Math.sin(ki - Lt) + 116e-6 * Math.sin(ki - Xt) + 272e-7 * Math.sin(K - 2 * W + 1.0146 * Si + me) + -144e-7 * Math.sin(ki - je) + 143e-7 * Math.sin(ki + Lt - 2 * Vt - 2 * yt) + 35e-7 * Math.sin(ki - Lt + yt) + -28e-7 * Math.sin(K - 2 * W + 1.0146 * Si + ue));
        s.satellite2.equatorialLatitude = y.r2D(kr);
        var zi = Math.atan(32402e-7 * Math.sin(ui - ue) + -16911e-7 * Math.sin(ui - Lt) + 6847e-7 * Math.sin(ui - Xt) + -2797e-7 * Math.sin(ui - me) + 321e-7 * Math.sin(ui + Lt - 2 * Vt - 2 * yt) + 51e-7 * Math.sin(ui - Lt + yt) + -45e-7 * Math.sin(ui - Lt - yt) + -45e-7 * Math.sin(ui + Lt - 2 * Vt) + 37e-7 * Math.sin(ui + Lt - 2 * Vt - 3 * yt) + 3e-6 * Math.sin(2 * J - 3 * ui + 4.03 * ri + me) + -21e-7 * Math.sin(2 * J - 3 * ui + 4.03 * ri + ue));
        s.satellite3.equatorialLatitude = y.r2D(zi);
        var Bi = Math.atan(-76579e-7 * Math.sin($i - Lt) + 44134e-7 * Math.sin($i - Xt) + -5112e-7 * Math.sin($i - ue) + 773e-7 * Math.sin($i + Lt - 2 * Vt - 2 * yt) + 104e-7 * Math.sin($i - Lt + yt) + -102e-7 * Math.sin($i - Lt - yt) + 88e-7 * Math.sin($i + Lt - 2 * Vt - 3 * yt) + -38e-7 * Math.sin($i + Lt - 2 * Vt - yt));
        s.satellite4.equatorialLatitude = y.r2D(Bi), s.satellite1.r = 5.90569 * (1 + (-41339e-7 * Math.cos(2 * (K - J)) + -387e-7 * Math.cos(K - bt) + -214e-7 * Math.cos(K - _t) + 17e-6 * Math.cos(K - J) + -131e-7 * Math.cos(4 * (K - J)) + 106e-7 * Math.cos(K - W) + -66e-7 * Math.cos(K + bt - 2 * Vt - 2 * yt))), s.satellite2.r = 9.39657 * (1 + (93848e-7 * Math.cos(K - J) + -3116e-7 * Math.cos(J - bt) + -1744e-7 * Math.cos(J - _t) + -1442e-7 * Math.cos(J - At) + 553e-7 * Math.cos(J - W) + 523e-7 * Math.cos(K - W) + -29e-6 * Math.cos(2 * (K - J)) + 164e-7 * Math.cos(2 * (J - me)) + 107e-7 * Math.cos(K - 2 * W + bt) + -102e-7 * Math.cos(J - kt) + -91e-7 * Math.cos(2 * (K - W)))), s.satellite3.r = 14.98832 * (1 + (-14388e-7 * Math.cos(W - bt) + -7919e-7 * Math.cos(W - _t) + 6342e-7 * Math.cos(J - W) + -1761e-7 * Math.cos(2 * (W - rt)) + 294e-7 * Math.cos(W - rt) + -156e-7 * Math.cos(3 * (W - rt)) + 156e-7 * Math.cos(K - W) + -153e-7 * Math.cos(K - J) + 7e-6 * Math.cos(2 * J - 3 * W + bt) + -51e-7 * Math.cos(W + bt - 2 * Vt - 2 * yt))), s.satellite4.r = 26.36273 * (1 + (-73546e-7 * Math.cos(rt - _t) + 1621e-7 * Math.cos(rt - bt) + 974e-7 * Math.cos(W - rt) + -543e-7 * Math.cos(rt + _t - 2 * Vt - 2 * yt) + -271e-7 * Math.cos(2 * (rt - _t)) + 182e-7 * Math.cos(rt - Vt) + 177e-7 * Math.cos(2 * (W - rt)) + -167e-7 * Math.cos(2 * rt - Lt - Xt) + 167e-7 * Math.cos(Lt - Xt) + -155e-7 * Math.cos(2 * (rt - Vt - yt)) + 142e-7 * Math.cos(2 * (rt - Lt)) + 105e-7 * Math.cos(K - rt) + 92e-7 * Math.cos(J - rt) + -89e-7 * Math.cos(rt - Vt - yt) + -62e-7 * Math.cos(rt + _t - 2 * Vt - 3 * yt) + 48e-7 * Math.cos(2 * (rt - Xt))));
        var vr = (t - 2433282423e-3) / 36525, Br = y.d2R(1.3966626 * vr + 3088e-7 * vr * vr);
        Ri += Br, s.satellite1.tropicalLongitude = y.m360(y.r2D(Ri)), ki += Br, s.satellite2.tropicalLongitude = y.m360(y.r2D(ki)), ui += Br, s.satellite3.tropicalLongitude = y.m360(y.r2D(ui)), $i += Br, s.satellite4.tropicalLongitude = y.m360(y.r2D($i)), Lt += Br;
        var wr = (t - 24150205e-1) / 36525, oa = 3.120262 + 6e-4 * wr, tn = y.d2R(oa), ja = s.satellite1.r * Math.cos(Ri - Lt) * Math.cos(Ki), la = s.satellite2.r * Math.cos(ki - Lt) * Math.cos(kr), Bn = s.satellite3.r * Math.cos(ui - Lt) * Math.cos(zi), yn = s.satellite4.r * Math.cos($i - Lt) * Math.cos(Bi), br = 0, Vn = s.satellite1.r * Math.sin(Ri - Lt) * Math.cos(Ki), yr = s.satellite2.r * Math.sin(ki - Lt) * Math.cos(kr), Sn = s.satellite3.r * Math.sin(ui - Lt) * Math.cos(zi), Ir = s.satellite4.r * Math.sin($i - Lt) * Math.cos(Bi), ua = 0, ha = s.satellite1.r * Math.sin(Ki), On = s.satellite2.r * Math.sin(kr), Ka = s.satellite3.r * Math.sin(zi), ca = s.satellite4.r * Math.sin(Bi), _a = 1, en = y.d2R(Ct.jupiterLongitudeAscendingNode(t)), Vr = y.d2R(Ct.jupiterInclination(t)), Gi = 0, $r = 0, Hi = 0, K_ = new Pi(), Ci = We.rotations(br, ua, _a, tn, Lt, Vr, en, G, U, K_);
        Gi = Ci[0], $r = Ci[1], Hi = Ci[2];
        var Ei = Math.atan2(Gi, Hi);
        Ci = We.rotations(ja, Vn, ha, tn, Lt, Vr, en, G, U, s.satellite1.eclipticRectangularCoordinates), Gi = Ci[0], $r = Ci[1], Hi = Ci[2], s.satellite1.trueRectangularCoordinates.x = Gi * Math.cos(Ei) - Hi * Math.sin(Ei), s.satellite1.trueRectangularCoordinates.y = Gi * Math.sin(Ei) + Hi * Math.cos(Ei), s.satellite1.trueRectangularCoordinates.z = $r, Ci = We.rotations(la, yr, On, tn, Lt, Vr, en, G, U, s.satellite2.eclipticRectangularCoordinates), Gi = Ci[0], $r = Ci[1], Hi = Ci[2], s.satellite2.trueRectangularCoordinates.x = Gi * Math.cos(Ei) - Hi * Math.sin(Ei), s.satellite2.trueRectangularCoordinates.y = Gi * Math.sin(Ei) + Hi * Math.cos(Ei), s.satellite2.trueRectangularCoordinates.z = $r, Ci = We.rotations(Bn, Sn, Ka, tn, Lt, Vr, en, G, U, s.satellite3.eclipticRectangularCoordinates), Gi = Ci[0], $r = Ci[1], Hi = Ci[2], s.satellite3.trueRectangularCoordinates.x = Gi * Math.cos(Ei) - Hi * Math.sin(Ei), s.satellite3.trueRectangularCoordinates.y = Gi * Math.sin(Ei) + Hi * Math.cos(Ei), s.satellite3.trueRectangularCoordinates.z = $r, Ci = We.rotations(yn, Ir, ca, tn, Lt, Vr, en, G, U, s.satellite4.eclipticRectangularCoordinates), Gi = Ci[0], $r = Ci[1], Hi = Ci[2], s.satellite4.trueRectangularCoordinates.x = Gi * Math.cos(Ei) - Hi * Math.sin(Ei), s.satellite4.trueRectangularCoordinates.y = Gi * Math.sin(Ei) + Hi * Math.cos(Ei), s.satellite4.trueRectangularCoordinates.z = $r, s.satellite1.apparentRectangularCoordinates.x = s.satellite1.trueRectangularCoordinates.x + Math.abs(s.satellite1.trueRectangularCoordinates.z) / 17295 * Math.sqrt(1 - s.satellite1.trueRectangularCoordinates.x / s.satellite1.r * (s.satellite1.trueRectangularCoordinates.x / s.satellite1.r)), s.satellite1.apparentRectangularCoordinates.y = s.satellite1.trueRectangularCoordinates.y, s.satellite1.apparentRectangularCoordinates.z = s.satellite1.trueRectangularCoordinates.z, s.satellite2.apparentRectangularCoordinates.x = s.satellite2.trueRectangularCoordinates.x + Math.abs(s.satellite2.trueRectangularCoordinates.z) / 21819 * Math.sqrt(1 - s.satellite2.trueRectangularCoordinates.x / s.satellite2.r * (s.satellite2.trueRectangularCoordinates.x / s.satellite2.r)), s.satellite2.apparentRectangularCoordinates.y = s.satellite2.trueRectangularCoordinates.y, s.satellite2.apparentRectangularCoordinates.z = s.satellite2.trueRectangularCoordinates.z, s.satellite3.apparentRectangularCoordinates.x = s.satellite3.trueRectangularCoordinates.x + Math.abs(s.satellite3.trueRectangularCoordinates.z) / 27558 * Math.sqrt(1 - s.satellite3.trueRectangularCoordinates.x / s.satellite3.r * (s.satellite3.trueRectangularCoordinates.x / s.satellite3.r)), s.satellite3.apparentRectangularCoordinates.y = s.satellite3.trueRectangularCoordinates.y, s.satellite3.apparentRectangularCoordinates.z = s.satellite3.trueRectangularCoordinates.z, s.satellite4.apparentRectangularCoordinates.x = s.satellite4.trueRectangularCoordinates.x + Math.abs(s.satellite4.trueRectangularCoordinates.z) / 36548 * Math.sqrt(1 - s.satellite4.trueRectangularCoordinates.x / s.satellite4.r * (s.satellite4.trueRectangularCoordinates.x / s.satellite4.r)), s.satellite4.apparentRectangularCoordinates.y = s.satellite4.trueRectangularCoordinates.y, s.satellite4.apparentRectangularCoordinates.z = s.satellite4.trueRectangularCoordinates.z;
        var ar = l / (l + s.satellite1.trueRectangularCoordinates.z / 2095);
        return s.satellite1.apparentRectangularCoordinates.x *= ar, s.satellite1.apparentRectangularCoordinates.y *= ar, ar = l / (l + s.satellite2.trueRectangularCoordinates.z / 2095), s.satellite2.apparentRectangularCoordinates.x *= ar, s.satellite2.apparentRectangularCoordinates.y *= ar, ar = l / (l + s.satellite3.trueRectangularCoordinates.z / 2095), s.satellite3.apparentRectangularCoordinates.x *= ar, s.satellite3.apparentRectangularCoordinates.y *= ar, ar = l / (l + s.satellite4.trueRectangularCoordinates.z / 2095), s.satellite4.apparentRectangularCoordinates.x *= ar, s.satellite4.apparentRectangularCoordinates.y *= ar, s;
      }, We.rotations = function(t, e, r, a, s, l, h, u, _, m) {
        var p, b, S, x = s - h, k = t, P = e * Math.cos(a) - r * Math.sin(a), I = e * Math.sin(a) + r * Math.cos(a), D = k * Math.cos(x) - P * Math.sin(x), G = k * Math.sin(x) + P * Math.cos(x), U = I, Y = D, j = G * Math.cos(l) - U * Math.sin(l), K = G * Math.sin(l) + U * Math.cos(l), Q = Y * Math.cos(h) - j * Math.sin(h), J = Y * Math.sin(h) + j * Math.cos(h), nt = K, W = 1 / 2095;
        m.x = Q * W, m.y = J * W, m.z = nt * W;
        var ct = Q * Math.sin(u) - J * Math.cos(u), rt = Q * Math.cos(u) + J * Math.sin(u), kt = nt;
        return p = ct, b = kt * Math.sin(_) + rt * Math.cos(_), S = kt * Math.cos(_) - rt * Math.sin(_), [p, b, S];
      }, We.fillInPhenomenaDetails = function(t) {
        var e = 1.071374 * t.apparentRectangularCoordinates.y, r = e * e + t.apparentRectangularCoordinates.x * t.apparentRectangularCoordinates.x;
        r < 1 ? t.apparentRectangularCoordinates.z < 0 ? (t.bInTransit = !0, t.bInOccultation = !1) : (t.bInTransit = !1, t.bInOccultation = !0) : (t.bInTransit = !1, t.bInOccultation = !1);
      };
      var Po = {};
      function Ji() {
      }
      Ji.rhoSinThetaPrime = function(t, e) {
        t = y.d2R(t);
        var r = Math.atan(0.99664719 * Math.tan(t));
        return 0.99664719 * Math.sin(r) + e / 6378149 * Math.sin(t);
      }, Ji.rhoCosThetaPrime = function(t, e) {
        t = y.d2R(t);
        var r = Math.atan(0.99664719 * Math.tan(t));
        return Math.cos(r) + e / 6378149 * Math.cos(t);
      }, Ji.radiusOfParallelOfLatitude = function(t) {
        t = y.d2R(t);
        var e = Math.sin(t);
        return 6378.14 * Math.cos(t) / Math.sqrt(1 - 0.0066943847614084 * e * e);
      }, Ji.radiusOfCurvature = function(t) {
        t = y.d2R(t);
        var e = Math.sin(t);
        return 6378.14 * (1 - 0.0066943847614084) / Math.pow(1 - 0.0066943847614084 * e * e, 1.5);
      }, Ji.distanceBetweenPoints = function(t, e, r, a) {
        t = y.d2R(t), r = y.d2R(r), e = y.d2R(e), a = y.d2R(a);
        var s = (t + r) / 2, l = (t - r) / 2, h = (e - a) / 2, u = Math.sin(l), _ = Math.cos(l), m = Math.cos(s), p = Math.sin(s), b = Math.sin(h), S = Math.cos(h), x = u * u * S * S + m * m * b * b, k = _ * _ * S * S + p * p * b * b, P = Math.atan(Math.sqrt(x / k)), I = Math.sqrt(x * k) / P, D = 2 * P * 6378.14, G = (3 * I - 1) / (2 * k), U = (3 * I + 1) / (2 * x), Y = 0.00335281317789691;
        return D * (1 + Y * G * p * p * _ * _ - Y * U * m * m * u * u);
      };
      var Ro = {};
      function ni() {
      }
      ni.phaseAngle = function(t, e, r) {
        return y.m360(y.r2D(Math.acos((t * t + r * r - e * e) / (2 * t * r))));
      }, ni.phaseAngle2 = function(t, e, r, a, s, l) {
        return r = y.d2R(r), a = y.d2R(a), s = y.d2R(s), y.m360(y.r2D(Math.acos((t - e * Math.cos(r) * Math.cos(a - s)) / l)));
      }, ni.phaseAngleRectangular = function(t, e, r, a, s, l) {
        a = y.d2R(a), s = y.d2R(s);
        var h = Math.cos(a);
        return y.m360(y.r2D(Math.acos((t * h * Math.cos(s) + e * h * Math.sin(s) + r * Math.sin(a)) / l)));
      }, ni.illuminatedFraction = function(t) {
        return t = y.d2R(t), (1 + Math.cos(t)) / 2;
      }, ni.illuminatedFraction2 = function(t, e, r) {
        return ((t + r) * (t + r) - e * e) / (4 * t * r);
      }, ni.mercuryMagnitudeMuller = function(t, e, r) {
        var a = r - 50;
        return 1.16 + 5 * at.log10(t * e) + 0.02838 * a + 1023e-7 * a * a;
      }, ni.venusMagnitudeMuller = function(t, e, r) {
        return -4 + 5 * at.log10(t * e) + 0.01322 * r + 4247e-10 * r * r * r;
      }, ni.marsMagnitudeMuller = function(t, e, r) {
        return -1.3 + 5 * at.log10(t * e) + 0.01486 * r;
      }, ni.jupiterMagnitudeMuller = function(t, e) {
        return -8.93 + 5 * at.log10(t * e);
      }, ni.saturnMagnitudeMuller = function(t, e, r, a) {
        a = y.d2R(a);
        var s = Math.sin(a);
        return -8.68 + 5 * at.log10(t * e) + 0.044 * Math.abs(r) - 2.6 * Math.sin(Math.abs(a)) + 1.25 * s * s;
      }, ni.uranusMagnitudeMuller = function(t, e) {
        return -6.85 + 5 * at.log10(t * e);
      }, ni.neptuneMagnitudeMuller = function(t, e) {
        return -7.05 + 5 * at.log10(t * e);
      }, ni.mercuryMagnitudeAA = function(t, e, r) {
        var a = r * r, s = a * r;
        return -0.42 + 5 * at.log10(t * e) + 0.038 * r - 273e-6 * a + 2e-6 * s;
      }, ni.venusMagnitudeAA = function(t, e, r) {
        var a = r * r, s = a * r;
        return -4.4 + 5 * at.log10(t * e) + 9e-4 * r + 239e-6 * a - 65e-8 * s;
      }, ni.marsMagnitudeAA = function(t, e, r) {
        return -1.52 + 5 * at.log10(t * e) + 0.016 * r;
      }, ni.jupiterMagnitudeAA = function(t, e, r) {
        return -9.4 + 5 * at.log10(t * e) + 5e-3 * r;
      }, ni.saturnMagnitudeAA = function(t, e, r, a) {
        a = y.d2R(a);
        var s = Math.sin(a);
        return -8.88 + 5 * at.log10(t * e) + 0.044 * Math.abs(r) - 2.6 * Math.sin(Math.abs(a)) + 1.25 * s * s;
      }, ni.uranusMagnitudeAA = function(t, e) {
        return -7.19 + 5 * at.log10(t * e);
      }, ni.neptuneMagnitudeAA = function(t, e) {
        return -6.87 + 5 * at.log10(t * e);
      }, ni.plutoMagnitudeAA = function(t, e) {
        return -1 + 5 * at.log10(t * e);
      };
      var Eo = {};
      function Vi() {
      }
      Vi.interpolate = function(t, e, r, a) {
        var s = r - e, l = a - r, h = e + a - 2 * r;
        return r + t / 2 * (s + l + t * h);
      }, Vi.interpolate2 = function(t, e, r, a, s, l) {
        var h = r - e, u = a - r, _ = s - a, m = l - s, p = u - h, b = _ - u, S = m - _, x = b - p, k = S - b, P = k - x, I = t * t, D = I * t, G = D * t;
        return a + t * ((u + _) / 2 - (x + k) / 12) + I * (b / 2 - P / 24) + D * ((x + k) / 12) + G * (P / 24);
      }, Vi.interpolateToHalves = function(t, e, r, a) {
        return (9 * (e + r) - t - a) / 16;
      }, Vi.lagrangeInterpolate = function(t, e, r, a) {
        for (var s = 0, l = 1; l <= e; l++) {
          for (var h = 1, u = 1; u <= e; u++)
            u !== l && (h = h * (t - r[u - 1]) / (r[l - 1] - r[u - 1]));
          s += h * a[l - 1];
        }
        return s;
      }, Vi.zero = function(t, e, r) {
        for (var a = e - t, s = r - e, l = t + r - 2 * e, h = !0, u = 0, _ = u; h; )
          _ = -2 * e / (a + s + l * u), h = Math.abs(_ - u) > 1e-12, h && (u = _);
        return _;
      }, Vi.zeroB = function(t, e, r, a, s) {
        for (var l = e - t, h = r - e, u = a - r, _ = s - a, m = h - l, p = u - h, b = _ - u, S = p - m, x = b - p, k = x - S, P = !0, I = 0, D = I; P; ) {
          var G = I * I, U = G * I, Y = U * I;
          D = (-24 * r + G * (k - 12 * p) - 2 * U * (S + x) - Y * k) / (2 * (6 * h + 6 * u - S - x)), P = Math.abs(D - I) > 1e-12, P && (I = D);
        }
        return D;
      }, Vi.zero2 = function(t, e, r) {
        for (var a = e - t, s = r - e, l = t + r - 2 * e, h = !0, u = 0, _ = u; h; ) {
          var m = -(2 * e + u * (a + s + l * u)) / (a + s + 2 * l * u);
          _ = u + m, h = Math.abs(m) > 1e-12, h && (u = _);
        }
        return _;
      }, Vi.zero2B = function(t, e, r, a, s) {
        for (var l = e - t, h = r - e, u = a - r, _ = s - a, m = h - l, p = u - h, b = _ - u, S = p - m, x = b - p, k = x - S, P = k / 24, I = (S + x) / 12, D = p / 2 - P, G = (h + u) / 2 - I, U = !0, Y = 0, j = Y; U; ) {
          var K = Y * Y, Q = K * Y, J = Q * Y, nt = -(P * J + I * Q + D * K + G * Y + r) / (4 * P * Q + 3 * I * K + 2 * D * Y + G);
          j = Y + nt, U = Math.abs(nt) > 1e-12, U && (Y = j);
        }
        return j;
      };
      var Do = {};
      function ai() {
      }
      ai.eclipticLongitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = s * e, h = w.g_L0JupiterCoefficients.length, u = 0, _;
        for (_ = 0; _ < h; _++)
          u += w.g_L0JupiterCoefficients[_].a * Math.cos(w.g_L0JupiterCoefficients[_].b + w.g_L0JupiterCoefficients[_].c * e);
        var m = w.g_L1JupiterCoefficients.length, p = 0;
        for (_ = 0; _ < m; _++)
          p += w.g_L1JupiterCoefficients[_].a * Math.cos(w.g_L1JupiterCoefficients[_].b + w.g_L1JupiterCoefficients[_].c * e);
        var b = w.g_L2JupiterCoefficients.length, S = 0;
        for (_ = 0; _ < b; _++)
          S += w.g_L2JupiterCoefficients[_].a * Math.cos(w.g_L2JupiterCoefficients[_].b + w.g_L2JupiterCoefficients[_].c * e);
        var x = w.g_L3JupiterCoefficients.length, k = 0;
        for (_ = 0; _ < x; _++)
          k += w.g_L3JupiterCoefficients[_].a * Math.cos(w.g_L3JupiterCoefficients[_].b + w.g_L3JupiterCoefficients[_].c * e);
        var P = w.g_L4JupiterCoefficients.length, I = 0;
        for (_ = 0; _ < P; _++)
          I += w.g_L4JupiterCoefficients[_].a * Math.cos(w.g_L4JupiterCoefficients[_].b + w.g_L4JupiterCoefficients[_].c * e);
        var D = w.g_L5JupiterCoefficients.length, G = 0;
        for (_ = 0; _ < D; _++)
          G += w.g_L5JupiterCoefficients[_].a * Math.cos(w.g_L5JupiterCoefficients[_].b + w.g_L5JupiterCoefficients[_].c * e);
        var U = (u + p * e + S * r + k * a + I * s + G * l) / 1e8;
        return U = y.m360(y.r2D(U)), U;
      }, ai.eclipticLatitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = s * e, h = w.g_B0JupiterCoefficients.length, u = 0, _;
        for (_ = 0; _ < h; _++)
          u += w.g_B0JupiterCoefficients[_].a * Math.cos(w.g_B0JupiterCoefficients[_].b + w.g_B0JupiterCoefficients[_].c * e);
        var m = w.g_B1JupiterCoefficients.length, p = 0;
        for (_ = 0; _ < m; _++)
          p += w.g_B1JupiterCoefficients[_].a * Math.cos(w.g_B1JupiterCoefficients[_].b + w.g_B1JupiterCoefficients[_].c * e);
        var b = w.g_B2JupiterCoefficients.length, S = 0;
        for (_ = 0; _ < b; _++)
          S += w.g_B2JupiterCoefficients[_].a * Math.cos(w.g_B2JupiterCoefficients[_].b + w.g_B2JupiterCoefficients[_].c * e);
        var x = w.g_B3JupiterCoefficients.length, k = 0;
        for (_ = 0; _ < x; _++)
          k += w.g_B3JupiterCoefficients[_].a * Math.cos(w.g_B3JupiterCoefficients[_].b + w.g_B3JupiterCoefficients[_].c * e);
        var P = w.g_B4JupiterCoefficients.length, I = 0;
        for (_ = 0; _ < P; _++)
          I += w.g_B4JupiterCoefficients[_].a * Math.cos(w.g_B4JupiterCoefficients[_].b + w.g_B4JupiterCoefficients[_].c * e);
        var D = w.g_B5JupiterCoefficients.length, G = 0;
        for (_ = 0; _ < D; _++)
          G += w.g_B5JupiterCoefficients[_].a * Math.cos(w.g_B5JupiterCoefficients[_].b + w.g_B5JupiterCoefficients[_].c * e);
        var U = (u + p * e + S * r + k * a + I * s + G * l) / 1e8;
        return U = y.r2D(U), U;
      }, ai.radiusVector = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = s * e, h = w.g_R0JupiterCoefficients.length, u = 0, _;
        for (_ = 0; _ < h; _++)
          u += w.g_R0JupiterCoefficients[_].a * Math.cos(w.g_R0JupiterCoefficients[_].b + w.g_R0JupiterCoefficients[_].c * e);
        var m = w.g_R1JupiterCoefficients.length, p = 0;
        for (_ = 0; _ < m; _++)
          p += w.g_R1JupiterCoefficients[_].a * Math.cos(w.g_R1JupiterCoefficients[_].b + w.g_R1JupiterCoefficients[_].c * e);
        var b = w.g_R2JupiterCoefficients.length, S = 0;
        for (_ = 0; _ < b; _++)
          S += w.g_R2JupiterCoefficients[_].a * Math.cos(w.g_R2JupiterCoefficients[_].b + w.g_R2JupiterCoefficients[_].c * e);
        var x = w.g_R3JupiterCoefficients.length, k = 0;
        for (_ = 0; _ < x; _++)
          k += w.g_R3JupiterCoefficients[_].a * Math.cos(w.g_R3JupiterCoefficients[_].b + w.g_R3JupiterCoefficients[_].c * e);
        var P = w.g_R4JupiterCoefficients.length, I = 0;
        for (_ = 0; _ < P; _++)
          I += w.g_R4JupiterCoefficients[_].a * Math.cos(w.g_R4JupiterCoefficients[_].b + w.g_R4JupiterCoefficients[_].c * e);
        var D = w.g_R5JupiterCoefficients.length, G = 0;
        for (_ = 0; _ < D; _++)
          G += w.g_R5JupiterCoefficients[_].a * Math.cos(w.g_R5JupiterCoefficients[_].b + w.g_R5JupiterCoefficients[_].c * e);
        return (u + p * e + S * r + k * a + I * s + G * l) / 1e8;
      };
      var No = {};
      function Or() {
      }
      Or.calculate = function(t, e) {
        return Or.calculateIter(t, e, 53);
      }, Or.calculateIter = function(t, e, r) {
        t = y.d2R(t);
        var a = y.PI(), s = 1;
        t < 0 && (s = -1), t = Math.abs(t) / (2 * a), t = (t - n.truncate(t)) * 2 * a * s, t < 0 && (t += 2 * a), s = 1, t > a && (s = -1), t > a && (t = 2 * a - t);
        for (var l = a / 2, h = a / 4, u = 0; u < r; u++) {
          var _ = l - e * Math.sin(l);
          t > _ ? l += h : l -= h, h /= 2;
        }
        return y.r2D(l) * s;
      };
      var Fo = {};
      function qi() {
      }
      qi.eclipticLongitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = s * e, h = w.g_L0MarsCoefficients.length, u = 0, _;
        for (_ = 0; _ < h; _++)
          u += w.g_L0MarsCoefficients[_].a * Math.cos(w.g_L0MarsCoefficients[_].b + w.g_L0MarsCoefficients[_].c * e);
        var m = w.g_L1MarsCoefficients.length, p = 0;
        for (_ = 0; _ < m; _++)
          p += w.g_L1MarsCoefficients[_].a * Math.cos(w.g_L1MarsCoefficients[_].b + w.g_L1MarsCoefficients[_].c * e);
        var b = w.g_L2MarsCoefficients.length, S = 0;
        for (_ = 0; _ < b; _++)
          S += w.g_L2MarsCoefficients[_].a * Math.cos(w.g_L2MarsCoefficients[_].b + w.g_L2MarsCoefficients[_].c * e);
        var x = w.g_L3MarsCoefficients.length, k = 0;
        for (_ = 0; _ < x; _++)
          k += w.g_L3MarsCoefficients[_].a * Math.cos(w.g_L3MarsCoefficients[_].b + w.g_L3MarsCoefficients[_].c * e);
        var P = w.g_L4MarsCoefficients.length, I = 0;
        for (_ = 0; _ < P; _++)
          I += w.g_L4MarsCoefficients[_].a * Math.cos(w.g_L4MarsCoefficients[_].b + w.g_L4MarsCoefficients[_].c * e);
        var D = w.g_L5MarsCoefficients.length, G = 0;
        for (_ = 0; _ < D; _++)
          G += w.g_L5MarsCoefficients[_].a * Math.cos(w.g_L5MarsCoefficients[_].b + w.g_L5MarsCoefficients[_].c * e);
        var U = (u + p * e + S * r + k * a + I * s + G * l) / 1e8;
        return U = y.m360(y.r2D(U)), U;
      }, qi.eclipticLatitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_B0MarsCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_B0MarsCoefficients[u].a * Math.cos(w.g_B0MarsCoefficients[u].b + w.g_B0MarsCoefficients[u].c * e);
        var _ = w.g_B1MarsCoefficients.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_B1MarsCoefficients[u].a * Math.cos(w.g_B1MarsCoefficients[u].b + w.g_B1MarsCoefficients[u].c * e);
        var p = w.g_B2MarsCoefficients.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_B2MarsCoefficients[u].a * Math.cos(w.g_B2MarsCoefficients[u].b + w.g_B2MarsCoefficients[u].c * e);
        var S = w.g_B3MarsCoefficients.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_B3MarsCoefficients[u].a * Math.cos(w.g_B3MarsCoefficients[u].b + w.g_B3MarsCoefficients[u].c * e);
        var k = w.g_B4MarsCoefficients.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_B4MarsCoefficients[u].a * Math.cos(w.g_B4MarsCoefficients[u].b + w.g_B4MarsCoefficients[u].c * e);
        var I = (h + m * e + b * r + x * a + P * s) / 1e8;
        return I = y.r2D(I), I;
      }, qi.radiusVector = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_R0MarsCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_R0MarsCoefficients[u].a * Math.cos(w.g_R0MarsCoefficients[u].b + w.g_R0MarsCoefficients[u].c * e);
        var _ = w.g_R1MarsCoefficients.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_R1MarsCoefficients[u].a * Math.cos(w.g_R1MarsCoefficients[u].b + w.g_R1MarsCoefficients[u].c * e);
        var p = w.g_R2MarsCoefficients.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_R2MarsCoefficients[u].a * Math.cos(w.g_R2MarsCoefficients[u].b + w.g_R2MarsCoefficients[u].c * e);
        var S = w.g_R3MarsCoefficients.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_R3MarsCoefficients[u].a * Math.cos(w.g_R3MarsCoefficients[u].b + w.g_R3MarsCoefficients[u].c * e);
        var k = w.g_R4MarsCoefficients.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_R4MarsCoefficients[u].a * Math.cos(w.g_R4MarsCoefficients[u].b + w.g_R4MarsCoefficients[u].c * e);
        return (h + m * e + b * r + x * a + P * s) / 1e8;
      };
      var zo = {};
      function sr() {
      }
      sr.eclipticLongitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = s * e, h = w.g_L0MercuryCoefficients.length, u = 0, _;
        for (_ = 0; _ < h; _++)
          u += w.g_L0MercuryCoefficients[_].a * Math.cos(w.g_L0MercuryCoefficients[_].b + w.g_L0MercuryCoefficients[_].c * e);
        var m = w.g_L1MercuryCoefficients.length, p = 0;
        for (_ = 0; _ < m; _++)
          p += w.g_L1MercuryCoefficients[_].a * Math.cos(w.g_L1MercuryCoefficients[_].b + w.g_L1MercuryCoefficients[_].c * e);
        var b = w.g_L2MercuryCoefficients.length, S = 0;
        for (_ = 0; _ < b; _++)
          S += w.g_L2MercuryCoefficients[_].a * Math.cos(w.g_L2MercuryCoefficients[_].b + w.g_L2MercuryCoefficients[_].c * e);
        var x = w.g_L3MercuryCoefficients.length, k = 0;
        for (_ = 0; _ < x; _++)
          k += w.g_L3MercuryCoefficients[_].a * Math.cos(w.g_L3MercuryCoefficients[_].b + w.g_L3MercuryCoefficients[_].c * e);
        var P = w.g_L4MercuryCoefficients.length, I = 0;
        for (_ = 0; _ < P; _++)
          I += w.g_L4MercuryCoefficients[_].a * Math.cos(w.g_L4MercuryCoefficients[_].b + w.g_L4MercuryCoefficients[_].c * e);
        var D = w.g_L5MercuryCoefficients.length, G = 0;
        for (_ = 0; _ < D; _++)
          G += w.g_L5MercuryCoefficients[_].a * Math.cos(w.g_L5MercuryCoefficients[_].b + w.g_L5MercuryCoefficients[_].c * e);
        var U = (u + p * e + S * r + k * a + I * s + G * l) / 1e8;
        return U = y.m360(y.r2D(U)), U;
      }, sr.eclipticLatitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_B0MercuryCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_B0MercuryCoefficients[u].a * Math.cos(w.g_B0MercuryCoefficients[u].b + w.g_B0MercuryCoefficients[u].c * e);
        var _ = w.g_B1MercuryCoefficients.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_B1MercuryCoefficients[u].a * Math.cos(w.g_B1MercuryCoefficients[u].b + w.g_B1MercuryCoefficients[u].c * e);
        var p = w.g_B2MercuryCoefficients.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_B2MercuryCoefficients[u].a * Math.cos(w.g_B2MercuryCoefficients[u].b + w.g_B2MercuryCoefficients[u].c * e);
        var S = w.g_B3MercuryCoefficients.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_B3MercuryCoefficients[u].a * Math.cos(w.g_B3MercuryCoefficients[u].b + w.g_B3MercuryCoefficients[u].c * e);
        var k = w.g_B4MercuryCoefficients.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_B4MercuryCoefficients[u].a * Math.cos(w.g_B4MercuryCoefficients[u].b + w.g_B4MercuryCoefficients[u].c * e);
        var I = (h + m * e + b * r + x * a + P * s) / 1e8;
        return I = y.r2D(I), I;
      }, sr.radiusVector = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = w.g_R0MercuryCoefficients.length, l = 0, h;
        for (h = 0; h < s; h++)
          l += w.g_R0MercuryCoefficients[h].a * Math.cos(w.g_R0MercuryCoefficients[h].b + w.g_R0MercuryCoefficients[h].c * e);
        var u = w.g_R1MercuryCoefficients.length, _ = 0;
        for (h = 0; h < u; h++)
          _ += w.g_R1MercuryCoefficients[h].a * Math.cos(w.g_R1MercuryCoefficients[h].b + w.g_R1MercuryCoefficients[h].c * e);
        var m = w.g_R2MercuryCoefficients.length, p = 0;
        for (h = 0; h < m; h++)
          p += w.g_R2MercuryCoefficients[h].a * Math.cos(w.g_R2MercuryCoefficients[h].b + w.g_R2MercuryCoefficients[h].c * e);
        var b = w.g_R3MercuryCoefficients.length, S = 0;
        for (h = 0; h < b; h++)
          S += w.g_R3MercuryCoefficients[h].a * Math.cos(w.g_R3MercuryCoefficients[h].b + w.g_R3MercuryCoefficients[h].c * e);
        return (l + _ * e + p * r + S * a) / 1e8;
      };
      var Bo = {};
      function Re() {
      }
      Re.meanLongitude = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e, s = a * e;
        return y.m360(218.3164477 + 481267.88123421 * e - 15786e-7 * r + a / 538841 - s / 65194e3);
      }, Re.meanElongation = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e, s = a * e;
        return y.m360(297.8501921 + 445267.1114034 * e - 18819e-7 * r + a / 545868 - s / 113065e3);
      }, Re.meanAnomaly = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e, s = a * e;
        return y.m360(134.9633964 + 477198.8675055 * e + 87414e-7 * r + a / 69699 - s / 14712e3);
      }, Re.argumentOfLatitude = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e, s = a * e;
        return y.m360(93.272095 + 483202.0175233 * e - 36539e-7 * r - a / 3526e3 + s / 86331e4);
      }, Re.meanLongitudeAscendingNode = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e, s = a * e;
        return y.m360(125.0445479 - 1934.1362891 * e + 20754e-7 * r + a / 467441 - s / 60616e3);
      }, Re.meanLongitudePerigee = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e, s = a * e;
        return y.m360(83.3532465 + 4069.0137287 * e - 0.01032 * r - a / 80053 + s / 18999e3);
      }, Re.trueLongitudeAscendingNode = function(t) {
        var e = Re.meanLongitudeAscendingNode(t), r = Re.meanElongation(t);
        r = y.d2R(r);
        var a = pe.sunMeanAnomaly(t);
        a = y.d2R(a);
        var s = Re.meanAnomaly(t);
        s = y.d2R(s);
        var l = Re.argumentOfLatitude(t);
        return l = y.d2R(l), e -= 1.4979 * Math.sin(2 * (r - l)), e -= 0.15 * Math.sin(a), e -= 0.1226 * Math.sin(2 * r), e += 0.1176 * Math.sin(2 * l), e -= 0.0801 * Math.sin(2 * (s - l)), y.m360(e);
      }, Re.eclipticLongitude = function(t) {
        var e = Re.meanLongitude(t), r = e;
        e = y.d2R(e);
        var a = Re.meanElongation(t);
        a = y.d2R(a);
        var s = pe.sunMeanAnomaly(t);
        s = y.d2R(s);
        var l = Re.meanAnomaly(t);
        l = y.d2R(l);
        var h = Re.argumentOfLatitude(t);
        h = y.d2R(h);
        var u = pe.eccentricity(t), _ = (t - 2451545) / 36525, m = y.m360(119.75 + 131.849 * _);
        m = y.d2R(m);
        var p = y.m360(53.09 + 479264.29 * _);
        p = y.d2R(p);
        var b = y.m360(313.45 + 481266.484 * _);
        b = y.d2R(b);
        var S = w.g_MoonCoefficients1.length;
        console.assert(w.g_MoonCoefficients2.length === S);
        for (var x = 0, k = 0; k < S; k++) {
          var P = w.g_MoonCoefficients2[k].a * Math.sin(w.g_MoonCoefficients1[k].d * a + w.g_MoonCoefficients1[k].m * s + w.g_MoonCoefficients1[k].mdash * l + w.g_MoonCoefficients1[k].f * h);
          w.g_MoonCoefficients1[k].m && (P *= u), x += P;
        }
        x += 3958 * Math.sin(m), x += 1962 * Math.sin(e - h), x += 318 * Math.sin(p);
        var I = Ie.nutationInLongitude(t);
        return y.m360(r + x / 1e6 + I / 3600);
      }, Re.eclipticLatitude = function(t) {
        var e = Re.meanLongitude(t);
        e = y.d2R(e);
        var r = Re.meanElongation(t);
        r = y.d2R(r);
        var a = pe.sunMeanAnomaly(t);
        a = y.d2R(a);
        var s = Re.meanAnomaly(t);
        s = y.d2R(s);
        var l = Re.argumentOfLatitude(t);
        l = y.d2R(l);
        var h = pe.eccentricity(t), u = (t - 2451545) / 36525, _ = y.m360(119.75 + 131.849 * u);
        _ = y.d2R(_);
        var m = y.m360(53.09 + 479264.29 * u);
        m = y.d2R(m);
        var p = y.m360(313.45 + 481266.484 * u);
        p = y.d2R(p);
        var b = w.g_MoonCoefficients3.length;
        console.assert(w.g_MoonCoefficients4.length === b);
        for (var S = 0, x = 0; x < b; x++) {
          var k = w.g_MoonCoefficients4[x] * Math.sin(w.g_MoonCoefficients3[x].d * r + w.g_MoonCoefficients3[x].m * a + w.g_MoonCoefficients3[x].mdash * s + w.g_MoonCoefficients3[x].f * l);
          w.g_MoonCoefficients3[x].m && (k *= h), S += k;
        }
        return S -= 2235 * Math.sin(e), S += 382 * Math.sin(p), S += 175 * Math.sin(_ - l), S += 175 * Math.sin(_ + l), S += 127 * Math.sin(e - s), S -= 115 * Math.sin(e + s), S / 1e6;
      }, Re.radiusVector = function(t) {
        var e = Re.meanLongitude(t);
        e = y.d2R(e);
        var r = Re.meanElongation(t);
        r = y.d2R(r);
        var a = pe.sunMeanAnomaly(t);
        a = y.d2R(a);
        var s = Re.meanAnomaly(t);
        s = y.d2R(s);
        var l = Re.argumentOfLatitude(t);
        l = y.d2R(l);
        var h = pe.eccentricity(t), u = (t - 2451545) / 36525, _ = y.m360(119.75 + 131.849 * u);
        _ = y.d2R(_);
        var m = y.m360(53.09 + 479264.29 * u);
        m = y.d2R(m);
        var p = y.m360(313.45 + 481266.484 * u);
        p = y.d2R(p);
        var b = w.g_MoonCoefficients1.length;
        console.assert(w.g_MoonCoefficients2.length === b);
        for (var S = 0, x = 0; x < b; x++) {
          var k = w.g_MoonCoefficients2[x].b * Math.cos(w.g_MoonCoefficients1[x].d * r + w.g_MoonCoefficients1[x].m * a + w.g_MoonCoefficients1[x].mdash * s + w.g_MoonCoefficients1[x].f * l);
          w.g_MoonCoefficients1[x].m && (k *= h), S += k;
        }
        return 385000.56 + S / 1e3;
      }, Re.radiusVectorToHorizontalParallax = function(t) {
        return y.r2D(Math.asin(6378.14 / t));
      }, Re.horizontalParallaxToRadiusVector = function(t) {
        return 6378.14 / Math.sin(y.d2R(t));
      };
      var Vo = {};
      function ut(t, e, r, a) {
        this.d = 0, this.m = 0, this.mdash = 0, this.f = 0, this.d = t, this.m = e, this.mdash = r, this.f = a;
      }
      var Oo = {};
      function zt(t, e) {
        this.a = 0, this.b = 0, this.a = t, this.b = e;
      }
      var Uo = {};
      function hn() {
      }
      hn.geocentricElongation = function(t, e, r, a) {
        return t = y.d2R(t * 15), r = y.d2R(r * 15), e = y.d2R(e), a = y.d2R(a), y.r2D(Math.acos(Math.sin(a) * Math.sin(e) + Math.cos(a) * Math.cos(e) * Math.cos(r - t)));
      }, hn.phaseAngle = function(t, e, r) {
        return t = y.d2R(t), y.m360(y.r2D(Math.atan2(r * Math.sin(t), e - r * Math.cos(t))));
      }, hn.illuminatedFraction = function(t) {
        return t = y.d2R(t), (1 + Math.cos(t)) / 2;
      }, hn.positionAngle = function(t, e, r, a) {
        return t = y.h2R(t), r = y.h2R(r), e = y.d2R(e), a = y.d2R(a), y.m360(y.r2D(Math.atan2(Math.cos(e) * Math.sin(t - r), Math.sin(e) * Math.cos(a) - Math.cos(e) * Math.sin(a) * Math.cos(t - r))));
      };
      var Go = {};
      function ya() {
      }
      ya.k = function(t) {
        return 13.4223 * (t - 2000.05);
      }, ya.passageThroNode = function(t) {
        var e = t / 1342.23, r = e * e, a = r * e, s = a * e, l = y.m360(183.638 + 331.73735682 * t + 14852e-7 * r + 209e-8 * a - 1e-8 * s), h = y.m360(17.4006 + 26.8203725 * t + 1186e-7 * r + 6e-8 * a), u = y.m360(38.3776 + 355.52747313 * t + 0.0123499 * r + 14627e-9 * a - 69e-9 * s), _ = y.m360(123.9767 - 1.44098956 * t + 20608e-7 * r + 214e-8 * a - 16e-9 * s), m = y.m360(299.75 + 132.85 * e - 9173e-6 * r), p = y.m360(_ + 272.75 - 2.3 * e), b = 1 - 2516e-6 * e - 74e-7 * r;
        l = y.d2R(l);
        var S = 2 * l, x = S * S;
        h = y.d2R(h), u = y.d2R(u);
        var k = 2 * u;
        _ = y.d2R(_), m = y.d2R(m), p = y.d2R(p);
        var P = 24515651619e-4 + 27.212220817 * t + 2762e-7 * r + 21e-9 * a - 88e-12 * s - 0.4721 * Math.sin(u) - 0.1649 * Math.sin(S) - 0.0868 * Math.sin(S - u) + 84e-4 * Math.sin(S + u) - b * 83e-4 * Math.sin(S - h) - b * 39e-4 * Math.sin(S - h - u) + 34e-4 * Math.sin(k) - 31e-4 * Math.sin(S - k) + b * 3e-3 * Math.sin(S + h) + b * 28e-4 * Math.sin(h - u) + b * 26e-4 * Math.sin(h) + 25e-4 * Math.sin(x) + 24e-4 * Math.sin(l) + b * 22e-4 * Math.sin(h + u) + 17e-4 * Math.sin(_) + 14e-4 * Math.sin(x - u) + b * 5e-4 * Math.sin(S + h - u) + b * 4e-4 * Math.sin(S - h + u) - b * 3e-4 * Math.sin(S - h * h) + b * 3e-4 * Math.sin(x - h) + 3e-4 * Math.sin(m) + 3e-4 * Math.sin(p);
        return P;
      };
      var Ho = {};
      function Wi() {
      }
      Wi.k = function(t) {
        return 13.2555 * (t - 1999.97);
      }, Wi.meanPerigee = function(t) {
        var e = t / 1325.55, r = e * e, a = r * e, s = a * e;
        return 24515346698e-4 + 27.55454989 * t - 6691e-7 * r - 1098e-9 * a + 52e-10 * s;
      }, Wi.meanApogee = function(t) {
        return Wi.meanPerigee(t);
      }, Wi.truePerigee = function(t) {
        var e = Wi.meanPerigee(t), r = t / 1325.55, a = r * r, s = a * r, l = s * r, h = y.m360(171.9179 + 335.9106046 * t - 0.0100383 * a - 1156e-8 * s + 55e-9 * l);
        h = y.d2R(h);
        var u = y.m360(347.3477 + 27.1577721 * t - 813e-6 * a - 1e-6 * s);
        u = y.d2R(u);
        var _ = y.m360(316.6109 + 364.5287911 * t - 0.0125053 * a - 148e-7 * s);
        _ = y.d2R(_);
        for (var m = w.g_MoonPerigeeApogeeCoefficients1.length, p = 0, b = 0; b < m; b++)
          p += w.g_MoonPerigeeApogeeCoefficients1[b].c * Math.sin(h * w.g_MoonPerigeeApogeeCoefficients1[b].d + u * w.g_MoonPerigeeApogeeCoefficients1[b].m + _ * w.g_MoonPerigeeApogeeCoefficients1[b].f + r * w.g_MoonPerigeeApogeeCoefficients1[b].t);
        return e + p;
      }, Wi.trueApogee = function(t) {
        var e = Wi.meanApogee(t), r = t / 1325.55, a = r * r, s = a * r, l = s * r, h = y.m360(171.9179 + 335.9106046 * t - 0.0100383 * a - 1156e-8 * s + 55e-9 * l);
        h = y.d2R(h);
        var u = y.m360(347.3477 + 27.1577721 * t - 813e-6 * a - 1e-6 * s);
        u = y.d2R(u);
        var _ = y.m360(316.6109 + 364.5287911 * t - 0.0125053 * a - 148e-7 * s);
        _ = y.d2R(_);
        for (var m = w.g_MoonPerigeeApogeeCoefficients2.length, p = 0, b = 0; b < m; b++)
          p += (w.g_MoonPerigeeApogeeCoefficients2[b].c + r * w.g_MoonPerigeeApogeeCoefficients2[b].t) * Math.sin(h * w.g_MoonPerigeeApogeeCoefficients2[b].d + u * w.g_MoonPerigeeApogeeCoefficients2[b].m + _ * w.g_MoonPerigeeApogeeCoefficients2[b].f);
        return e + p;
      }, Wi.perigeeParallax = function(t) {
        var e = t / 1325.55, r = e * e, a = r * e, s = a * e, l = y.m360(171.9179 + 335.9106046 * t - 0.0100383 * r - 1156e-8 * a + 55e-9 * s);
        l = y.d2R(l);
        var h = y.m360(347.3477 + 27.1577721 * t - 813e-6 * r - 1e-6 * a);
        h = y.d2R(h);
        var u = y.m360(316.6109 + 364.5287911 * t - 0.0125053 * r - 148e-7 * a);
        u = y.d2R(u);
        for (var _ = w.g_MoonPerigeeApogeeCoefficients3.length, m = 3629.215, p = 0; p < _; p++)
          m += (w.g_MoonPerigeeApogeeCoefficients3[p].c + e * w.g_MoonPerigeeApogeeCoefficients3[p].t) * Math.cos(l * w.g_MoonPerigeeApogeeCoefficients3[p].d + h * w.g_MoonPerigeeApogeeCoefficients3[p].m + u * w.g_MoonPerigeeApogeeCoefficients3[p].f);
        return m / 3600;
      }, Wi.apogeeParallax = function(t) {
        var e = t / 1325.55, r = e * e, a = r * e, s = a * e, l = y.m360(171.9179 + 335.9106046 * t - 0.0100383 * r - 1156e-8 * a + 55e-9 * s);
        l = y.d2R(l);
        var h = y.m360(347.3477 + 27.1577721 * t - 813e-6 * r - 1e-6 * a);
        h = y.d2R(h);
        var u = y.m360(316.6109 + 364.5287911 * t - 0.0125053 * r - 148e-7 * a);
        u = y.d2R(u);
        for (var _ = w.g_MoonPerigeeApogeeCoefficients4.length, m = 3245.251, p = 0; p < _; p++)
          m += (w.g_MoonPerigeeApogeeCoefficients4[p].c + e * w.g_MoonPerigeeApogeeCoefficients4[p].t) * Math.cos(l * w.g_MoonPerigeeApogeeCoefficients4[p].d + h * w.g_MoonPerigeeApogeeCoefficients4[p].m + u * w.g_MoonPerigeeApogeeCoefficients4[p].f);
        return m / 3600;
      };
      var Xo = {};
      function it(t, e, r, a, s) {
        this.d = 0, this.m = 0, this.f = 0, this.c = 0, this.t = 0, this.d = t, this.m = e, this.f = r, this.c = a, this.t = s;
      }
      var qo = {};
      function xn() {
      }
      xn.k = function(t) {
        return 12.3685 * (t - 2e3);
      }, xn.meanPhase = function(t) {
        var e = t / 1236.85, r = e * e, a = r * e, s = a * e;
        return 245155009766e-5 + 29.530588861 * t + 15437e-8 * r - 15e-8 * a + 73e-11 * s;
      }, xn.truePhase = function(t) {
        var e = xn.meanPhase(t), r = t / 1236.85, a = r * r, s = a * r, l = s * r, h = 1 - 2516e-6 * r - 74e-7 * a, u = h * h, _ = y.m360(2.5534 + 29.1053567 * t - 14e-7 * a - 11e-8 * s);
        _ = y.d2R(_);
        var m = y.m360(201.5643 + 385.81693528 * t + 0.0107582 * a + 1238e-8 * s - 58e-9 * l);
        m = y.d2R(m);
        var p = y.m360(160.7108 + 390.67050284 * t - 16118e-7 * a - 227e-8 * s + 1e-8 * l);
        p = y.d2R(p);
        var b = y.m360(124.7746 - 1.56375588 * t + 20672e-7 * a + 215e-8 * s);
        b = y.d2R(b);
        var S = y.m360(299.77 + 0.107408 * t - 9173e-6 * a);
        S = y.d2R(S);
        var x = y.m360(251.88 + 0.016321 * t);
        x = y.d2R(x);
        var k = y.m360(251.83 + 26.651886 * t);
        k = y.d2R(k);
        var P = y.m360(349.42 + 36.412478 * t);
        P = y.d2R(P);
        var I = y.m360(84.66 + 18.206239 * t);
        I = y.d2R(I);
        var D = y.m360(141.74 + 53.303771 * t);
        D = y.d2R(D);
        var G = y.m360(207.14 + 2.453732 * t);
        G = y.d2R(G);
        var U = y.m360(154.84 + 7.30686 * t);
        U = y.d2R(U);
        var Y = y.m360(34.52 + 27.261239 * t);
        Y = y.d2R(Y);
        var j = y.m360(207.19 + 0.121824 * t);
        j = y.d2R(j);
        var K = y.m360(291.34 + 1.844379 * t);
        K = y.d2R(K);
        var Q = y.m360(161.72 + 24.198154 * t);
        Q = y.d2R(Q);
        var J = y.m360(239.56 + 25.513099 * t);
        J = y.d2R(J);
        var nt = y.m360(331.55 + 3.592518 * t);
        nt = y.d2R(nt);
        var W = Math.floor(t), ct = t - W;
        if (ct < 0 && (ct = 1 + ct), ct)
          if (ct === 0.25 || ct === 0.75) {
            var rt = -0.62801 * Math.sin(m) + 0.17172 * h * Math.sin(_) + -0.01183 * h * Math.sin(m + _) + 862e-5 * Math.sin(2 * m) + 804e-5 * Math.sin(2 * p) + 454e-5 * h * Math.sin(m - _) + 204e-5 * u * Math.sin(2 * _) + -18e-4 * Math.sin(m - 2 * p) + -7e-4 * Math.sin(m + 2 * p) + -4e-4 * Math.sin(3 * m) + -34e-5 * h * Math.sin(2 * m - _) + 32e-5 * h * Math.sin(_ + 2 * p) + 32e-5 * h * Math.sin(_ - 2 * p) + -28e-5 * u * Math.sin(m + 2 * _) + 27e-5 * h * Math.sin(2 * m + _) + -17e-5 * Math.sin(b) + -5e-5 * Math.sin(m - _ - 2 * p) + 4e-5 * Math.sin(2 * m + 2 * p) + -4e-5 * Math.sin(m + _ + 2 * p) + 4e-5 * Math.sin(m - 2 * _) + 3e-5 * Math.sin(m + _ - 2 * p) + 3e-5 * Math.sin(3 * _) + 2e-5 * Math.sin(2 * m - 2 * p) + 2e-5 * Math.sin(m - _ + 2 * p) + -2e-5 * Math.sin(3 * m + _);
            e += rt;
            var kt = 306e-5 - 38e-5 * h * Math.cos(_) + 26e-5 * Math.cos(m) - 2e-5 * Math.cos(m - _) + 2e-5 * Math.cos(m + _) + 2e-5 * Math.cos(2 * p);
            ct === 0.25 ? e += kt : e -= kt;
          } else if (ct === 0.5) {
            var rt = -0.40614 * Math.sin(m) + 0.17302 * h * Math.sin(_) + 0.01614 * Math.sin(2 * m) + 0.01043 * Math.sin(2 * p) + 734e-5 * h * Math.sin(m - _) + -514e-5 * h * Math.sin(m + _) + 209e-5 * u * Math.sin(2 * _) + -111e-5 * Math.sin(m - 2 * p) + -57e-5 * Math.sin(m + 2 * p) + 56e-5 * h * Math.sin(2 * m + _) + -42e-5 * Math.sin(3 * m) + 42e-5 * h * Math.sin(_ + 2 * p) + 38e-5 * h * Math.sin(_ - 2 * p) + -24e-5 * h * Math.sin(2 * m - _) + -17e-5 * Math.sin(b) + -7e-5 * Math.sin(m + 2 * _) + 4e-5 * Math.sin(2 * m - 2 * p) + 4e-5 * Math.sin(3 * _) + 3e-5 * Math.sin(m + _ - 2 * p) + 3e-5 * Math.sin(2 * m + 2 * p) + -3e-5 * Math.sin(m + _ + 2 * p) + 3e-5 * Math.sin(m - _ + 2 * p) + -2e-5 * Math.sin(m - _ - 2 * p) + -2e-5 * Math.sin(3 * m + _) + 2e-5 * Math.sin(4 * m);
            e += rt;
          } else
            console.assert(!1);
        else {
          var rt = -0.4072 * Math.sin(m) + 0.17241 * h * Math.sin(_) + 0.01608 * Math.sin(2 * m) + 0.01039 * Math.sin(2 * p) + 739e-5 * h * Math.sin(m - _) + -514e-5 * h * Math.sin(m + _) + 208e-5 * u * Math.sin(2 * _) + -111e-5 * Math.sin(m - 2 * p) + -57e-5 * Math.sin(m + 2 * p) + 56e-5 * h * Math.sin(2 * m + _) + -42e-5 * Math.sin(3 * m) + 42e-5 * h * Math.sin(_ + 2 * p) + 38e-5 * h * Math.sin(_ - 2 * p) + -24e-5 * h * Math.sin(2 * m - _) + -17e-5 * Math.sin(b) + -7e-5 * Math.sin(m + 2 * _) + 4e-5 * Math.sin(2 * m - 2 * p) + 4e-5 * Math.sin(3 * _) + 3e-5 * Math.sin(m + _ - 2 * p) + 3e-5 * Math.sin(2 * m + 2 * p) + -3e-5 * Math.sin(m + _ + 2 * p) + 3e-5 * Math.sin(m - _ + 2 * p) + -2e-5 * Math.sin(m - _ - 2 * p) + -2e-5 * Math.sin(3 * m + _) + 2e-5 * Math.sin(4 * m);
          e += rt;
        }
        var At = 325e-6 * Math.sin(S) + 165e-6 * Math.sin(x) + 164e-6 * Math.sin(k) + 126e-6 * Math.sin(P) + 11e-5 * Math.sin(I) + 62e-6 * Math.sin(D) + 6e-5 * Math.sin(G) + 56e-6 * Math.sin(U) + 47e-6 * Math.sin(Y) + 42e-6 * Math.sin(j) + 4e-5 * Math.sin(K) + 37e-6 * Math.sin(Q) + 35e-6 * Math.sin(J) + 23e-6 * Math.sin(nt);
        return e += At, e;
      };
      var Yo = {};
      function or() {
      }
      or.eclipticLongitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_L0NC.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_L0NC[u].a * Math.cos(w.g_L0NC[u].b + w.g_L0NC[u].c * e);
        var _ = w.g_L1NC.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_L1NC[u].a * Math.cos(w.g_L1NC[u].b + w.g_L1NC[u].c * e);
        var p = w.g_L2NC.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_L2NC[u].a * Math.cos(w.g_L2NC[u].b + w.g_L2NC[u].c * e);
        var S = w.g_L3NC.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_L3NC[u].a * Math.cos(w.g_L3NC[u].b + w.g_L3NC[u].c * e);
        var k = w.g_L4NC.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_L4NC[u].a * Math.cos(w.g_L4NC[u].b + w.g_L4NC[u].c * e);
        var I = (h + m * e + b * r + x * a + P * s) / 1e8;
        return I = y.m360(y.r2D(I)), I;
      }, or.eclipticLatitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_B0NC.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_B0NC[u].a * Math.cos(w.g_B0NC[u].b + w.g_B0NC[u].c * e);
        var _ = w.g_B1NC.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_B1NC[u].a * Math.cos(w.g_B1NC[u].b + w.g_B1NC[u].c * e);
        var p = w.g_B2NC.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_B2NC[u].a * Math.cos(w.g_B2NC[u].b + w.g_B2NC[u].c * e);
        var S = w.g_B3NC.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_B3NC[u].a * Math.cos(w.g_B3NC[u].b + w.g_B3NC[u].c * e);
        var k = w.g_B4NC.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_B4NC[u].a * Math.cos(w.g_B4NC[u].b + w.g_B4NC[u].c * e);
        var I = (h + m * e + b * r + x * a + P * s) / 1e8;
        return I = y.r2D(I), I;
      }, or.radiusVector = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = w.g_R0NC.length, l = 0, h;
        for (h = 0; h < s; h++)
          l += w.g_R0NC[h].a * Math.cos(w.g_R0NC[h].b + w.g_R0NC[h].c * e);
        var u = w.g_R1NC.length, _ = 0;
        for (h = 0; h < u; h++)
          _ += w.g_R1NC[h].a * Math.cos(w.g_R1NC[h].b + w.g_R1NC[h].c * e);
        var m = w.g_R2NC.length, p = 0;
        for (h = 0; h < m; h++)
          p += w.g_R2NC[h].a * Math.cos(w.g_R2NC[h].b + w.g_R2NC[h].c * e);
        var b = w.g_R3NC.length, S = 0;
        for (h = 0; h < b; h++)
          S += w.g_R3NC[h].a * Math.cos(w.g_R3NC[h].b + w.g_R3NC[h].c * e);
        return (l + _ * e + p * r + S * a) / 1e8;
      };
      var Zo = {};
      function Ie() {
      }
      Ie.nutationInLongitude = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e, s = 297.85036 + 445267.11148 * e - 19142e-7 * r + a / 189474;
        s = y.m360(s);
        var l = 357.52772 + 35999.05034 * e - 1603e-7 * r - a / 3e5;
        l = y.m360(l);
        var h = 134.96298 + 477198.867398 * e + 86972e-7 * r + a / 56250;
        h = y.m360(h);
        var u = 93.27191 + 483202.017538 * e - 36825e-7 * r + a / 327270;
        u = y.m360(u);
        var _ = 125.04452 - 1934.136261 * e + 20708e-7 * r + a / 45e4;
        _ = y.m360(_);
        for (var m = w.g_NuC.length, p = 0, b = 0; b < m; b++) {
          var S = w.g_NuC[b].d * s + w.g_NuC[b].m * l + w.g_NuC[b].mprime * h + w.g_NuC[b].f * u + w.g_NuC[b].omega * _, x = y.d2R(S);
          p += (w.g_NuC[b].sincoeff1 + w.g_NuC[b].sincoeff2 * e) * Math.sin(x) * 1e-4;
        }
        return p;
      }, Ie.nutationInObliquity = function(t) {
        var e = (t - 2451545) / 36525, r = e * e, a = r * e, s = 297.85036 + 445267.11148 * e - 19142e-7 * r + a / 189474;
        s = y.m360(s);
        var l = 357.52772 + 35999.05034 * e - 1603e-7 * r - a / 3e5;
        l = y.m360(l);
        var h = 134.96298 + 477198.867398 * e + 86972e-7 * r + a / 56250;
        h = y.m360(h);
        var u = 93.27191 + 483202.017538 * e - 36825e-7 * r + a / 327270;
        u = y.m360(u);
        var _ = 125.04452 - 1934.136261 * e + 20708e-7 * r + a / 45e4;
        _ = y.m360(_);
        for (var m = w.g_NuC.length, p = 0, b = 0; b < m; b++) {
          var S = w.g_NuC[b].d * s + w.g_NuC[b].m * l + w.g_NuC[b].mprime * h + w.g_NuC[b].f * u + w.g_NuC[b].omega * _, x = y.d2R(S);
          p += (w.g_NuC[b].coscoeff1 + w.g_NuC[b].coscoeff2 * e) * Math.cos(x) * 1e-4;
        }
        return p;
      }, Ie.nutationInRightAscension = function(t, e, r, a, s) {
        return t = y.h2R(t), e = y.d2R(e), r = y.d2R(r), (Math.cos(r) + Math.sin(r) * Math.sin(t) * Math.tan(e)) * a - Math.cos(t) * Math.tan(e) * s;
      }, Ie.nutationInDeclination = function(t, e, r, a, s) {
        return t = y.h2R(t), e = y.d2R(e), r = y.d2R(r), Math.sin(r) * Math.cos(t) * a + Math.sin(t) * s;
      }, Ie.meanObliquityOfEcliptic = function(t) {
        var e = (t - 2451545) / 3652500, r = e * e, a = r * e, s = a * e, l = s * e, h = l * e, u = h * e, _ = u * e, m = _ * e, p = m * e;
        return y.dmS2D(23, 26, 21.448) - y.dmS2D(0, 0, 4680.93) * e - y.dmS2D(0, 0, 1.55) * r + y.dmS2D(0, 0, 1999.25) * a - y.dmS2D(0, 0, 51.38) * s - y.dmS2D(0, 0, 249.67) * l - y.dmS2D(0, 0, 39.05) * h + y.dmS2D(0, 0, 7.12) * u + y.dmS2D(0, 0, 27.87) * _ + y.dmS2D(0, 0, 5.79) * m + y.dmS2D(0, 0, 2.45) * p;
      }, Ie.trueObliquityOfEcliptic = function(t) {
        return Ie.meanObliquityOfEcliptic(t) + y.dmS2D(0, 0, Ie.nutationInObliquity(t));
      };
      var jo = {};
      function Nt(t, e, r, a, s, l, h, u, _) {
        this.d = 0, this.m = 0, this.mprime = 0, this.f = 0, this.omega = 0, this.sincoeff1 = 0, this.sincoeff2 = 0, this.coscoeff1 = 0, this.coscoeff2 = 0, this.d = t, this.m = e, this.mprime = r, this.f = a, this.omega = s, this.sincoeff1 = l, this.sincoeff2 = h, this.coscoeff1 = u, this.coscoeff2 = _;
      }
      var Ko = {};
      function ts() {
        this.lambda = 0, this.beta = 0, this.semidiameter = 0, this.lambda = 0, this.beta = 0, this.semidiameter = 0;
      }
      var Jo = {};
      function Sr() {
      }
      Sr.equatorial2TopocentricDelta = function(t, e, r, a, s, l, h) {
        var u = Ji.rhoSinThetaPrime(s, l), _ = Ji.rhoCosThetaPrime(s, l), m = Pr.apparentGreenwichSiderealTime(h);
        e = y.d2R(e);
        var p = Math.cos(e), b = Math.asin(w.g_AAParallax_C1 / r), S = y.h2R(m - a / 15 - t), x = Math.cos(S), k = Math.sin(S), P = new pi();
        return P.x = y.r2H(-b * _ * k / p), P.y = y.r2D(-b * (u * p - _ * x * Math.sin(e))), P;
      }, Sr.equatorial2Topocentric = function(t, e, r, a, s, l, h) {
        var u = Ji.rhoSinThetaPrime(s, l), _ = Ji.rhoCosThetaPrime(s, l), m = Pr.apparentGreenwichSiderealTime(h);
        e = y.d2R(e);
        var p = Math.cos(e), b = Math.asin(w.g_AAParallax_C1 / r), S = Math.sin(b), x = y.h2R(m - a / 15 - t), k = Math.cos(x), P = Math.sin(x), I = Math.atan2(-_ * S * P, p - _ * S * k), D = new pi();
        return D.x = y.m24(t + y.r2H(I)), D.y = y.r2D(Math.atan2((Math.sin(e) - u * S) * Math.cos(I), p - _ * S * k)), D;
      }, Sr.ecliptic2Topocentric = function(t, e, r, a, s, l, h, u, _) {
        var m = Ji.rhoSinThetaPrime(h, u), p = Ji.rhoCosThetaPrime(h, u);
        t = y.d2R(t), e = y.d2R(e), s = y.d2R(s), l = y.d2R(l), h = y.d2R(h), r = y.d2R(r);
        var b = Math.sin(s), S = Math.cos(s), x = Math.cos(e), k = Math.sin(e), P = Pr.apparentGreenwichSiderealTime(_);
        P = y.h2R(P);
        var I = Math.sin(P), D = Math.asin(w.g_AAParallax_C1 / a), G = Math.sin(D), U = Math.cos(t) * x - p * G * Math.cos(P), Y = new ts();
        Y.lambda = Math.atan2(Math.sin(t) * x - G * (m * b + p * S * I), U);
        var j = Math.cos(Y.lambda);
        return Y.beta = Math.atan(j * (k - G * (m * S - p * b * I)) / U), Y.semidiameter = Math.asin(j * Math.cos(Y.beta) * Math.sin(r) / U), Y.semidiameter = y.r2D(Y.semidiameter), Y.lambda = y.m360(y.r2D(Y.lambda)), Y.beta = y.r2D(Y.beta), Y;
      }, Sr.parallaxToDistance = function(t) {
        return w.g_AAParallax_C1 / Math.sin(y.d2R(t));
      }, Sr.distanceToParallax = function(t) {
        var e = Math.asin(w.g_AAParallax_C1 / t);
        return y.r2D(e);
      };
      var Wo = {};
      function Sa() {
        this.DE = 0, this.DS = 0, this.geometricw1 = 0, this.geometricw2 = 0, this.apparentw1 = 0, this.apparentw2 = 0, this.p = 0, this.DE = 0, this.DS = 0, this.geometricw1 = 0, this.geometricw2 = 0, this.apparentw1 = 0, this.apparentw2 = 0, this.p = 0;
      }
      var Qo = {};
      function Ca() {
      }
      Ca.calculate = function(t) {
        var e = new Sa(), r = t - 24332825e-1, a = r / 36525, s = 268 + 0.1061 * a, l = y.d2R(s), h = 64.5 - 0.0164 * a, u = y.d2R(h), _ = y.m360(17.71 + 877.90003539 * r), m = y.m360(16.838 + 870.27003539 * r), p = pe.eclipticLongitude(t), b = y.d2R(p), S = pe.eclipticLatitude(t), x = y.d2R(S), k = pe.radiusVector(t), P = ai.eclipticLongitude(t), I = y.d2R(P), D = ai.eclipticLatitude(t), G = y.d2R(D), U = ai.radiusVector(t), Y = U * Math.cos(G) * Math.cos(I) - k * Math.cos(b), j = U * Math.cos(G) * Math.sin(I) - k * Math.sin(b), K = U * Math.sin(G) - k * Math.sin(x), Q = Math.sqrt(Y * Y + j * j + K * K);
        P -= 0.01299 * Q / (U * U), I = y.d2R(P), Y = U * Math.cos(G) * Math.cos(I) - k * Math.cos(b), j = U * Math.cos(G) * Math.sin(I) - k * Math.sin(b), K = U * Math.sin(G) - k * Math.sin(x), Q = Math.sqrt(Y * Y + j * j + K * K);
        var J = Ie.meanObliquityOfEcliptic(t), nt = y.d2R(J), W = Math.atan2(Math.cos(nt) * Math.sin(I) - Math.sin(nt) * Math.tan(G), Math.cos(I)), ct = Math.asin(Math.cos(nt) * Math.sin(G) + Math.sin(nt) * Math.cos(G) * Math.sin(I));
        e.DS = y.r2D(Math.asin(-Math.sin(u) * Math.sin(ct) - Math.cos(u) * Math.cos(ct) * Math.cos(l - W)));
        var rt = j * Math.cos(nt) - K * Math.sin(nt), kt = j * Math.sin(nt) + K * Math.cos(nt), At = Math.atan2(rt, Y), bt = y.r2D(At), _t = Math.atan2(kt, Math.sqrt(Y * Y + rt * rt)), $e = y.r2D(_t), je = Math.atan2(Math.sin(u) * Math.cos(_t) * Math.cos(l - At) - Math.sin(_t) * Math.cos(u), Math.cos(_t) * Math.sin(l - At));
        e.DE = y.r2D(Math.asin(-Math.sin(u) * Math.sin(_t) - Math.cos(u) * Math.cos(_t) * Math.cos(l - At))), e.geometricw1 = y.m360(_ - y.r2D(je) - 5.07033 * Q), e.geometricw2 = y.m360(m - y.r2D(je) - 5.02626 * Q);
        var qe = 57.2958 * (2 * U * Q + k * k - U * U - Q * Q) / (4 * U * Q);
        Math.sin(I - b) > 0 ? (e.apparentw1 = y.m360(e.geometricw1 + qe), e.apparentw2 = y.m360(e.geometricw2 + qe)) : (e.apparentw1 = y.m360(e.geometricw1 - qe), e.apparentw2 = y.m360(e.geometricw2 - qe));
        var me = Ie.nutationInLongitude(t), Ue = Ie.nutationInObliquity(t);
        J += Ue / 3600, nt = y.d2R(J), bt += 5693e-6 * (Math.cos(At) * Math.cos(b) * Math.cos(nt) + Math.sin(At) * Math.sin(b)) / Math.cos(_t), bt = y.m360(bt), At = y.d2R(bt), $e += 5693e-6 * (Math.cos(b) * Math.cos(nt) * (Math.tan(nt) * Math.cos(_t) - Math.sin(At) * Math.sin(_t)) + Math.cos(At) * Math.sin(_t) * Math.sin(b)), _t = y.d2R($e);
        var ue = Ie.nutationInRightAscension(bt / 15, $e, J, me, Ue), oi = bt + ue / 3600, Xt = y.d2R(oi), li = Ie.nutationInDeclination(bt / 15, $e, J, me, Ue), Je = $e + li / 3600, Lt = y.d2R(Je);
        ue = Ie.nutationInRightAscension(s / 15, h, J, me, Ue);
        var yt = s + ue / 3600, re = y.d2R(yt);
        li = Ie.nutationInDeclination(s / 15, h, J, me, Ue);
        var Vt = h + li / 3600, Ui = y.d2R(Vt);
        return e.p = y.m360(y.r2D(Math.atan2(Math.cos(Ui) * Math.sin(re - Xt), Math.sin(Ui) * Math.cos(Lt) - Math.cos(Ui) * Math.sin(Lt) * Math.cos(re - Xt)))), e;
      };
      var tl = {};
      function es() {
        this.DE = 0, this.DS = 0, this.w = 0, this.p = 0, this.x = 0, this.k = 0, this.q = 0, this.d = 0, this.DE = 0, this.DS = 0, this.w = 0, this.p = 0, this.x = 0, this.k = 0, this.q = 0, this.d = 0;
      }
      var el = {};
      function is() {
      }
      is.calculate = function(t) {
        for (var e = new es(), r = (t - 2451545) / 36525, a = 352.9065 + 1.1733 * r, s = y.d2R(a), l = 63.2818 - 394e-5 * r, h = y.d2R(l), u = pe.eclipticLongitude(t), _ = y.d2R(u), m = pe.eclipticLatitude(t), p = y.d2R(m), b = pe.radiusVector(t), S = 0, x = 0, k = 0, P = 0, I = 0, D = !0, G = 0, U = 0, Y = 0, j = 0, K = 0, Q = 0; D; ) {
          var J = t - x;
          U = qi.eclipticLongitude(J), Y = y.d2R(U), j = qi.eclipticLatitude(J), K = y.d2R(j), Q = qi.radiusVector(J), k = Q * Math.cos(K) * Math.cos(Y) - b * Math.cos(_), P = Q * Math.cos(K) * Math.sin(Y) - b * Math.sin(_), I = Q * Math.sin(K) - b * Math.sin(p), G = Math.sqrt(k * k + P * P + I * I), x = Fe.distanceToLightTime(G), D = Math.abs(x - S) > 2e-6, D && (S = x);
        }
        var nt = Math.atan2(P, k), W = y.r2D(nt), ct = Math.atan2(I, Math.sqrt(k * k + P * P)), rt = y.r2D(ct);
        e.DE = y.r2D(Math.asin(-Math.sin(h) * Math.sin(ct) - Math.cos(h) * Math.cos(ct) * Math.cos(s - nt)));
        var kt = 49.5581 + 0.7721 * r, At = y.d2R(kt), bt = U - 697e-5 / Q, _t = y.d2R(bt), $e = j - 225e-6 * (Math.cos(Y - At) / Q), je = y.d2R($e);
        e.DS = y.r2D(Math.asin(-Math.sin(h) * Math.sin(je) - Math.cos(h) * Math.cos(je) * Math.cos(s - _t)));
        var qe = y.m360(11.504 + 350.89200025 * (t - x - 24332825e-1)), me = Ie.meanObliquityOfEcliptic(t), Ue = y.d2R(me), ue = y.ec2Eq(a, l, me), oi = y.h2R(ue.x), Xt = y.d2R(ue.y), li = P * Math.cos(Ue) - I * Math.sin(Ue), Je = P * Math.sin(Ue) + I * Math.cos(Ue), Lt = Math.atan2(li, k), yt = y.r2H(Lt), re = Math.atan2(Je, Math.sqrt(k * k + li * li)), Vt = y.r2D(re), Ui = Math.atan2(Math.sin(Xt) * Math.cos(re) * Math.cos(oi - Lt) - Math.sin(re) * Math.cos(Xt), Math.cos(re) * Math.sin(oi - Lt));
        e.w = y.m360(qe - y.r2D(Ui));
        var Si = Ie.nutationInLongitude(t), ri = Ie.nutationInObliquity(t);
        W += 5693e-6 * Math.cos(_ - nt) / Math.cos(ct), rt += 5693e-6 * Math.sin(_ - nt) * Math.sin(ct), a += Si / 3600, s = y.d2R(a), W += Si / 3600, nt = y.d2R(W), me += ri / 3600, Ue = y.d2R(Ue);
        var Ar = y.ec2Eq(a, l, me), Ri = y.h2R(Ar.x), ki = y.d2R(Ar.y), ui = y.ec2Eq(W, rt, me), $i = y.h2R(ui.x), Ki = y.d2R(ui.y);
        e.p = y.m360(y.r2D(Math.atan2(Math.cos(ki) * Math.sin(Ri - $i), Math.sin(ki) * Math.cos(Ki) - Math.cos(ki) * Math.sin(Ki) * Math.cos(Ri - $i))));
        var kr = Ce.geometricEclipticLongitude(t), zi = Ce.geometricEclipticLatitude(t), Bi = y.ec2Eq(kr, zi, me);
        return e.x = hn.positionAngle(Bi.x, Bi.y, yt, Vt), e.d = 9.36 / G, e.k = ni.illuminatedFraction2(Q, b, G), e.q = (1 - e.k) * e.d, e;
      };
      var il = {};
      function rs() {
        this.p = 0, this.b0 = 0, this.l0 = 0, this.p = 0, this.b0 = 0, this.l0 = 0;
      }
      var rl = {};
      function Ma() {
      }
      Ma.calculate = function(t) {
        var e = y.m360((t - 2398220) * 360 / 25.38), r = 7.25, a = 73.6667 + 1.3958333 * (t - 2396758) / 36525, s = pe.eclipticLongitude(t), l = pe.radiusVector(t), h = s + 180 - y.dmS2D(0, 0, 20.4898 / l), u = h + y.dmS2D(0, 0, Ie.nutationInLongitude(t)), _ = Ie.trueObliquityOfEcliptic(t);
        _ = y.d2R(_), h = y.d2R(h), u = y.d2R(u), a = y.d2R(a), r = y.d2R(r), e = y.d2R(e);
        var m = Math.atan(-Math.cos(h) * Math.tan(_)), p = Math.atan(-Math.cos(h - a) * Math.tan(r)), b = new rs();
        b.p = y.r2D(m + p), b.b0 = y.r2D(Math.asin(Math.sin(h - a) * Math.sin(r)));
        var S = Math.atan(Math.tan(h - a) * Math.cos(r));
        return b.l0 = y.m360(y.r2D(S - e)), b;
      }, Ma.timeOfStartOfRotation = function(t) {
        var e = 2398140227e-3 + 27.2752316 * t, r = y.m360(281.96 + 26.882476 * t);
        return r = y.d2R(r), e += 0.1454 * Math.sin(r) - 85e-4 * Math.sin(2 * r) - 0.0141 * Math.cos(2 * r), e;
      };
      var nl = {};
      function lr() {
      }
      lr.eclipticLongitude = function(t) {
        for (var e = (t - 2451545) / 36525, r = 34.35 + 3034.9057 * e, a = 50.08 + 1222.1138 * e, s = 238.96 + 144.96 * e, l = 0, h = w.g_PlutoArgumentCoefficients.length, u = 0; u < h; u++) {
          var _ = w.g_PlutoArgumentCoefficients[u].j * r + w.g_PlutoArgumentCoefficients[u].s * a + w.g_PlutoArgumentCoefficients[u].p * s;
          _ = y.d2R(_), l += w.g_PlutoLongitudeCoefficients[u].a * Math.sin(_) + w.g_PlutoLongitudeCoefficients[u].b * Math.cos(_);
        }
        return l = l / 1e6, l += 238.958116 + 144.96 * e, l = y.m360(l), l;
      }, lr.eclipticLatitude = function(t) {
        for (var e = (t - 2451545) / 36525, r = 34.35 + 3034.9057 * e, a = 50.08 + 1222.1138 * e, s = 238.96 + 144.96 * e, l = 0, h = w.g_PlutoArgumentCoefficients.length, u = 0; u < h; u++) {
          var _ = w.g_PlutoArgumentCoefficients[u].j * r + w.g_PlutoArgumentCoefficients[u].s * a + w.g_PlutoArgumentCoefficients[u].p * s;
          _ = y.d2R(_), l += w.g_PlutoLatitudeCoefficients[u].a * Math.sin(_) + w.g_PlutoLatitudeCoefficients[u].b * Math.cos(_);
        }
        return l = l / 1e6, l += -3.908239, l;
      }, lr.radiusVector = function(t) {
        for (var e = (t - 2451545) / 36525, r = 34.35 + 3034.9057 * e, a = 50.08 + 1222.1138 * e, s = 238.96 + 144.96 * e, l = 0, h = w.g_PlutoArgumentCoefficients.length, u = 0; u < h; u++) {
          var _ = w.g_PlutoArgumentCoefficients[u].j * r + w.g_PlutoArgumentCoefficients[u].s * a + w.g_PlutoArgumentCoefficients[u].p * s;
          _ = y.d2R(_), l += w.g_PlutoRadiusCoefficients[u].a * Math.sin(_) + w.g_PlutoRadiusCoefficients[u].b * Math.cos(_);
        }
        return l = l / 1e7, l += 40.7241346, l;
      };
      var al = {};
      function _e(t, e, r) {
        this.j = 0, this.s = 0, this.p = 0, this.j = t, this.s = e, this.p = r;
      }
      var sl = {};
      function st(t, e) {
        this.a = 0, this.b = 0, this.a = t, this.b = e;
      }
      var ol = {};
      function Ur() {
      }
      Ur.precessEquatorial = function(t, e, r, a) {
        var s = (r - 2451545) / 36525, l = s * s, h = (a - r) / 36525, u = h * h, _ = u * h;
        t = y.h2R(t), e = y.d2R(e);
        var m = (2306.2181 + 1.39656 * s - 139e-6 * l) * h + (0.30188 - 344e-7 * s) * u + 0.017988 * _;
        m = y.d2R(y.dmS2D(0, 0, m));
        var p = (2306.2181 + 1.39656 * s - 138e-6 * l) * h + (1.09468 + 66e-6 * s) * u + 0.018203 * _;
        p = y.d2R(y.dmS2D(0, 0, p));
        var b = (2004.3109 - 0.8533 * s - 217e-6 * l) * h - (0.42665 + 217e-6 * s) * u - 0.041833 * _;
        b = y.d2R(y.dmS2D(0, 0, b));
        var S = Math.cos(e) * Math.sin(t + m), x = Math.cos(b) * Math.cos(e) * Math.cos(t + m) - Math.sin(b) * Math.sin(e), k = Math.sin(b) * Math.cos(e) * Math.cos(t + m) + Math.cos(b) * Math.sin(e), P = new pi();
        return P.x = y.r2H(Math.atan2(S, x) + p), P.x < 0 && (P.x += 24), P.y = y.r2D(Math.asin(k)), P;
      }, Ur.precessEquatorialFK4 = function(t, e, r, a) {
        var s = (r - 24150203135e-4) / 36524.2199, l = (a - r) / 36524.2199, h = l * l, u = h * l;
        t = y.h2R(t), e = y.d2R(e);
        var _ = (2304.25 + 1.396 * s) * l + 0.302 * h + 0.018 * u;
        _ = y.d2R(y.dmS2D(0, 0, _));
        var m = 0.791 * h + 1e-3 * u;
        m = y.d2R(y.dmS2D(0, 0, m)), m += _;
        var p = (2004.682 - 0.853 * s) * l - 0.426 * h - 0.042 * u;
        p = y.d2R(y.dmS2D(0, 0, p));
        var b = Math.cos(e) * Math.sin(t + _), S = Math.cos(p) * Math.cos(e) * Math.cos(t + _) - Math.sin(p) * Math.sin(e), x = Math.sin(p) * Math.cos(e) * Math.cos(t + _) + Math.cos(p) * Math.sin(e), k = new pi();
        return k.x = y.r2H(Math.atan2(b, S) + m), k.x < 0 && (k.x += 24), k.y = y.r2D(Math.asin(x)), k;
      }, Ur.precessEcliptic = function(t, e, r, a) {
        var s = (r - 2451545) / 36525, l = s * s, h = (a - r) / 36525, u = h * h, _ = u * h;
        t = y.d2R(t), e = y.d2R(e);
        var m = (47.0029 - 0.06603 * s + 598e-6 * l) * h + (-0.03302 + 598e-6 * s) * u + 6e-5 * _;
        m = y.d2R(y.dmS2D(0, 0, m));
        var p = 174.876384 * 3600 + 3289.4789 * s + 0.60622 * l - (869.8089 + 0.50491 * s) * h + 0.03536 * u;
        p = y.d2R(y.dmS2D(0, 0, p));
        var b = (5029.0966 + 2.22226 * s - 42e-6 * l) * h + (1.11113 - 42e-6 * s) * u - 6e-6 * _;
        b = y.d2R(y.dmS2D(0, 0, b));
        var S = Math.cos(m) * Math.cos(e) * Math.sin(p - t) - Math.sin(m) * Math.sin(e), x = Math.cos(e) * Math.cos(p - t), k = Math.cos(m) * Math.sin(e) + Math.sin(m) * Math.cos(e) * Math.sin(p - t), P = new pi();
        return P.x = y.r2D(b + p - Math.atan2(S, x)), P.x < 0 && (P.x += 360), P.y = y.r2D(Math.asin(k)), P;
      }, Ur.equatorialPMToEcliptic = function(t, e, r, a, s, l) {
        l = y.d2R(l), t = y.h2R(t), e = y.d2R(e), r = y.d2R(r);
        var h = Math.cos(r), u = Math.sin(l), _ = new pi();
        return _.x = (s * u * Math.cos(t) + a * Math.cos(e) * (Math.cos(l) * Math.cos(e) + u * Math.sin(e) * Math.sin(t))) / (h * h), _.y = (s * (Math.cos(l) * Math.cos(e) + u * Math.sin(e) * Math.sin(t)) - a * u * Math.cos(t) * Math.cos(e)) / h, _;
      }, Ur.adjustPositionUsingUniformProperMotion = function(t, e, r, a, s) {
        var l = new pi();
        return l.x = e + a * t / 3600, l.y = r + s * t / 3600, l;
      }, Ur.adjustPositionUsingMotionInSpace = function(t, e, r, a, s, l, h) {
        e /= 977792, l /= 13751, h /= 206265, a = y.h2R(a), s = y.d2R(s);
        var u = t * Math.cos(s) * Math.cos(a), _ = t * Math.cos(s) * Math.sin(a), m = t * Math.sin(s), p = u / t * e - m * h * Math.cos(a) - _ * l, b = _ / t * e - m * h * Math.sin(a) + u * l, S = m / t * e + t * h * Math.cos(s);
        u += r * p, _ += r * b, m += r * S;
        var x = new pi();
        return x.x = y.r2H(Math.atan2(_, u)), x.x < 0 && (x.x += 24), x.y = y.r2D(Math.atan2(m, Math.sqrt(u * u + _ * _))), x;
      };
      var ll = {};
      function ns() {
        this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0, this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0;
      }
      var ul = {};
      function Ta() {
      }
      Ta.rise = function(t, e, r, a, s, l, h, u, _, m) {
        var p = new ns();
        p.bValid = !1;
        var b = Pr.apparentGreenwichSiderealTime(t);
        b *= 15;
        var S = ma.deltaT(t), x = y.d2R(s), k = y.d2R(_), P = y.d2R(m), I = (Math.sin(P) - Math.sin(k) * Math.sin(x)) / (Math.cos(k) * Math.cos(x));
        if (I > 1 || I < -1)
          return p;
        var D = Math.acos(I);
        D = y.r2D(D);
        var G = (a * 15 + u - b) / 360, U = G - D / 360, Y = G + D / 360;
        G > 1 ? G -= 1 : G < 0 && (G += 1), U > 1 ? U -= 1 : U < 0 && (U += 1), Y > 1 ? Y -= 1 : Y < 0 && (Y += 1);
        for (var j = 0; j < 2; j++) {
          var K = b + 360.985647 * U;
          K = y.m360(K);
          var Q = U + S / 86400, J = Vi.interpolate(Q, e, a, l), nt = Vi.interpolate(Q, r, s, h), W = K - u - J * 15, ct = y.eq2H(W / 15, nt, _), rt = (ct.y - m) / (360 * Math.cos(y.d2R(nt)) * Math.cos(k) * Math.sin(y.d2R(W)));
          U += rt, K = b + 360.985647 * G, K = y.m360(K), Q = G + S / 86400, J = Vi.interpolate(Q, e, a, l), W = K - u - J * 15, W < -180 && (W += 360), rt = -W / 360, G += rt, K = b + 360.985647 * Y, K = y.m360(K), Q = Y + S / 86400, J = Vi.interpolate(Q, e, a, l), nt = Vi.interpolate(Q, r, s, h), W = K - u - J * 15, ct = y.eq2H(W / 15, nt, _), rt = (ct.y - m) / (360 * Math.cos(y.d2R(nt)) * Math.cos(k) * Math.sin(y.d2R(W))), Y += rt;
        }
        return p.bValid = !0, p.rise = U * 24, p.set = Y * 24, p.transit = G * 24, p;
      };
      var hl = {};
      function Yi() {
      }
      Yi.eclipticLongitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = s * e, h = w.g_L0SaturnCoefficients.length, u = 0, _;
        for (_ = 0; _ < h; _++)
          u += w.g_L0SaturnCoefficients[_].a * Math.cos(w.g_L0SaturnCoefficients[_].b + w.g_L0SaturnCoefficients[_].c * e);
        var m = w.g_L1SaturnCoefficients.length, p = 0;
        for (_ = 0; _ < m; _++)
          p += w.g_L1SaturnCoefficients[_].a * Math.cos(w.g_L1SaturnCoefficients[_].b + w.g_L1SaturnCoefficients[_].c * e);
        var b = w.g_L2SaturnCoefficients.length, S = 0;
        for (_ = 0; _ < b; _++)
          S += w.g_L2SaturnCoefficients[_].a * Math.cos(w.g_L2SaturnCoefficients[_].b + w.g_L2SaturnCoefficients[_].c * e);
        var x = w.g_L3SaturnCoefficients.length, k = 0;
        for (_ = 0; _ < x; _++)
          k += w.g_L3SaturnCoefficients[_].a * Math.cos(w.g_L3SaturnCoefficients[_].b + w.g_L3SaturnCoefficients[_].c * e);
        var P = w.g_L4SaturnCoefficients.length, I = 0;
        for (_ = 0; _ < P; _++)
          I += w.g_L4SaturnCoefficients[_].a * Math.cos(w.g_L4SaturnCoefficients[_].b + w.g_L4SaturnCoefficients[_].c * e);
        var D = w.g_L5SaturnCoefficients.length, G = 0;
        for (_ = 0; _ < D; _++)
          G += w.g_L5SaturnCoefficients[_].a * Math.cos(w.g_L5SaturnCoefficients[_].b + w.g_L5SaturnCoefficients[_].c * e);
        var U = (u + p * e + S * r + k * a + I * s + G * l) / 1e8;
        return U = y.m360(y.r2D(U)), U;
      }, Yi.eclipticLatitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = s * e, h = w.g_B0SaturnCoefficients.length, u = 0, _;
        for (_ = 0; _ < h; _++)
          u += w.g_B0SaturnCoefficients[_].a * Math.cos(w.g_B0SaturnCoefficients[_].b + w.g_B0SaturnCoefficients[_].c * e);
        var m = w.g_B1SaturnCoefficients.length, p = 0;
        for (_ = 0; _ < m; _++)
          p += w.g_B1SaturnCoefficients[_].a * Math.cos(w.g_B1SaturnCoefficients[_].b + w.g_B1SaturnCoefficients[_].c * e);
        var b = w.g_B2SaturnCoefficients.length, S = 0;
        for (_ = 0; _ < b; _++)
          S += w.g_B2SaturnCoefficients[_].a * Math.cos(w.g_B2SaturnCoefficients[_].b + w.g_B2SaturnCoefficients[_].c * e);
        var x = w.g_B3SaturnCoefficients.length, k = 0;
        for (_ = 0; _ < x; _++)
          k += w.g_B3SaturnCoefficients[_].a * Math.cos(w.g_B3SaturnCoefficients[_].b + w.g_B3SaturnCoefficients[_].c * e);
        var P = w.g_B4SaturnCoefficients.length, I = 0;
        for (_ = 0; _ < P; _++)
          I += w.g_B4SaturnCoefficients[_].a * Math.cos(w.g_B4SaturnCoefficients[_].b + w.g_B4SaturnCoefficients[_].c * e);
        var D = w.g_B5SaturnCoefficients.length, G = 0;
        for (_ = 0; _ < D; _++)
          G += w.g_B5SaturnCoefficients[_].a * Math.cos(w.g_B5SaturnCoefficients[_].b + w.g_B5SaturnCoefficients[_].c * e);
        var U = (u + p * e + S * r + k * a + I * s + G * l) / 1e8;
        return U = y.r2D(U), U;
      }, Yi.radiusVector = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = s * e, h = w.g_R0SaturnCoefficients.length, u = 0, _;
        for (_ = 0; _ < h; _++)
          u += w.g_R0SaturnCoefficients[_].a * Math.cos(w.g_R0SaturnCoefficients[_].b + w.g_R0SaturnCoefficients[_].c * e);
        var m = w.g_R1SaturnCoefficients.length, p = 0;
        for (_ = 0; _ < m; _++)
          p += w.g_R1SaturnCoefficients[_].a * Math.cos(w.g_R1SaturnCoefficients[_].b + w.g_R1SaturnCoefficients[_].c * e);
        var b = w.g_R2SaturnCoefficients.length, S = 0;
        for (_ = 0; _ < b; _++)
          S += w.g_R2SaturnCoefficients[_].a * Math.cos(w.g_R2SaturnCoefficients[_].b + w.g_R2SaturnCoefficients[_].c * e);
        var x = w.g_R3SaturnCoefficients.length, k = 0;
        for (_ = 0; _ < x; _++)
          k += w.g_R3SaturnCoefficients[_].a * Math.cos(w.g_R3SaturnCoefficients[_].b + w.g_R3SaturnCoefficients[_].c * e);
        var P = w.g_R4SaturnCoefficients.length, I = 0;
        for (_ = 0; _ < P; _++)
          I += w.g_R4SaturnCoefficients[_].a * Math.cos(w.g_R4SaturnCoefficients[_].b + w.g_R4SaturnCoefficients[_].c * e);
        var D = w.g_R5SaturnCoefficients.length, G = 0;
        for (_ = 0; _ < D; _++)
          G += w.g_R5SaturnCoefficients[_].a * Math.cos(w.g_R5SaturnCoefficients[_].b + w.g_R5SaturnCoefficients[_].c * e);
        return (u + p * e + S * r + k * a + I * s + G * l) / 1e8;
      };
      var cl = {};
      function as() {
        this.b = 0, this.bdash = 0, this.p = 0, this.a = 0, this.b = 0, this.deltaU = 0, this.b = 0, this.bdash = 0, this.p = 0, this.a = 0, this.b = 0, this.deltaU = 0;
      }
      var _l = {};
      function os() {
      }
      os.calculate = function(t) {
        var e = new as(), r = (t - 2451545) / 36525, a = r * r, s = 28.075216 - 0.012998 * r + 4e-6 * a, l = y.d2R(s), h = 169.50847 + 1.394681 * r + 412e-6 * a, u = y.d2R(h), _ = pe.eclipticLongitude(t), m = pe.eclipticLatitude(t);
        _ += Ii.correctionInLongitude(_, m, t);
        var p = y.d2R(_);
        m += Ii.correctionInLatitude(_, t);
        for (var b = y.d2R(m), S = pe.radiusVector(t), x = 9, k = 0, P = Fe.distanceToLightTime(x), I = t - P, D = !0, G = 0, U = 0, Y = 0, j = 0, K = 0, Q = 0; D; ) {
          j = Yi.eclipticLongitude(I), K = Yi.eclipticLatitude(I), j += Ii.correctionInLongitude(j, K, I), K += Ii.correctionInLatitude(j, I);
          var J = y.d2R(j), nt = y.d2R(K);
          Q = Yi.radiusVector(I), G = Q * Math.cos(nt) * Math.cos(J) - S * Math.cos(p), U = Q * Math.cos(nt) * Math.sin(J) - S * Math.sin(p), Y = Q * Math.sin(nt) - S * Math.sin(b), x = Math.sqrt(G * G + U * U + Y * Y), P = Fe.distanceToLightTime(x), D = Math.abs(P - k) > 2e-6, D && (I = t - P, k = P);
        }
        var W = Math.atan2(U, G), ct = Math.atan2(Y, Math.sqrt(G * G + U * U));
        e.b = Math.asin(Math.sin(l) * Math.cos(ct) * Math.sin(W - u) - Math.cos(l) * Math.sin(ct)), e.a = 375.35 / x, e.b = e.a * Math.sin(Math.abs(e.b)), e.b = y.r2D(e.b);
        var rt = 113.6655 + 0.8771 * r, kt = y.d2R(rt), At = j - 0.01759 / Q, bt = y.d2R(At), _t = K - 764e-6 * Math.cos(bt - kt) / Q, $e = y.d2R(_t);
        e.bdash = y.r2D(Math.asin(Math.sin(l) * Math.cos($e) * Math.sin(bt - u) - Math.cos(l) * Math.sin($e)));
        var je = Math.atan2(Math.sin(l) * Math.sin($e) + Math.cos(l) * Math.cos($e) * Math.sin(bt - u), Math.cos($e) * Math.cos(bt - u)), qe = Math.atan2(Math.sin(l) * Math.sin(ct) + Math.cos(l) * Math.cos(ct) * Math.sin(W - u), Math.cos(ct) * Math.cos(W - u));
        e.deltaU = y.r2D(Math.abs(je - qe));
        var me = Ie.trueObliquityOfEcliptic(t), Ue = Ie.nutationInLongitude(t), ue = h - 90, oi = 90 - s;
        W += y.d2R(5693e-6 * Math.cos(p - W) / Math.cos(ct)), ct += y.d2R(5693e-6 * Math.sin(p - W) * Math.sin(ct)), W = y.r2D(W), W += Ue / 3600, W = y.m360(W), ue += Ue / 3600, ue = y.m360(ue), ct = y.r2D(ct);
        var Xt = y.ec2Eq(W, ct, me), li = y.h2R(Xt.x), Je = y.d2R(Xt.y), Lt = y.ec2Eq(ue, oi, me), yt = y.h2R(Lt.x), re = y.d2R(Lt.y);
        return e.p = y.r2D(Math.atan2(Math.cos(re) * Math.sin(yt - li), Math.sin(re) * Math.cos(Je) - Math.cos(re) * Math.sin(Je) * Math.cos(yt - li))), e;
      };
      var fl = {};
      function Pr() {
      }
      Pr.meanGreenwichSiderealTime = function(t) {
        var e = new Ve();
        e.setJD(t, Ve.afterPapalReformJD(t));
        var r = e.get(), a = n.truncate(r[0]), s = n.truncate(r[1]), l = n.truncate(r[2]), h = n.truncate(r[3]), u = n.truncate(r[4]), _ = r[5];
        e.set(a, s, l, 0, 0, 0, e.inGregorianCalendar());
        var m = e.julian(), p = (m - 2451545) / 36525, b = p * p, S = b * p, x = 100.46061837 + 36000.770053608 * p + 387933e-9 * b - S / 3871e4;
        return x += (h * 15 + u * 0.25 + _ * 0.00416666666666667) * 1.00273790935, x = y.d2H(x), y.m24(x);
      }, Pr.apparentGreenwichSiderealTime = function(t) {
        var e = Ie.meanObliquityOfEcliptic(t), r = e + Ie.nutationInObliquity(t) / 3600, a = Ie.nutationInLongitude(t), s = Pr.meanGreenwichSiderealTime(t) + a * Math.cos(y.d2R(r)) / 54e3;
        return y.m24(s);
      };
      var gl = {};
      function Ln() {
      }
      Ln.combinedMagnitude = function(t, e) {
        var r = 0.4 * (e - t);
        return e - 2.5 * at.log10(Math.pow(10, r) + 1);
      }, Ln.combinedMagnitude2 = function(t, e) {
        for (var r = 0, a = 0; a < t; a++)
          r += Math.pow(10, -0.4 * e[a]);
        return -2.5 * at.log10(r);
      }, Ln.brightnessRatio = function(t, e) {
        var r = 0.4 * (e - t);
        return Math.pow(10, r);
      }, Ln.magnitudeDifference = function(t) {
        return 2.5 * at.log10(t);
      };
      var dl = {};
      function Ce() {
      }
      Ce.geometricEclipticLongitude = function(t) {
        return y.m360(pe.eclipticLongitude(t) + 180);
      }, Ce.geometricEclipticLatitude = function(t) {
        return -pe.eclipticLatitude(t);
      }, Ce.geometricEclipticLongitudeJ2000 = function(t) {
        return y.m360(pe.eclipticLongitudeJ2000(t) + 180);
      }, Ce.geometricEclipticLatitudeJ2000 = function(t) {
        return -pe.eclipticLatitudeJ2000(t);
      }, Ce.geometricFK5EclipticLongitude = function(t) {
        var e = Ce.geometricEclipticLongitude(t), r = Ce.geometricEclipticLatitude(t);
        return e += Ii.correctionInLongitude(e, r, t), e;
      }, Ce.geometricFK5EclipticLatitude = function(t) {
        var e = Ce.geometricEclipticLongitude(t), r = Ce.geometricEclipticLatitude(t), a = Ii.correctionInLatitude(e, t);
        return r += a, r;
      }, Ce.apparentEclipticLongitude = function(t) {
        var e = Ce.geometricFK5EclipticLongitude(t);
        e += y.dmS2D(0, 0, Ie.nutationInLongitude(t));
        var r = pe.radiusVector(t);
        return e -= y.dmS2D(0, 0, 20.4898 / r), e;
      }, Ce.apparentEclipticLatitude = function(t) {
        return Ce.geometricFK5EclipticLatitude(t);
      }, Ce.eclipticRectangularCoordinatesMeanEquinox = function(t) {
        var e = y.d2R(Ce.geometricFK5EclipticLongitude(t)), r = y.d2R(Ce.geometricFK5EclipticLatitude(t)), a = pe.radiusVector(t), s = y.d2R(Ie.meanObliquityOfEcliptic(t)), l = new Pi();
        return l.x = a * Math.cos(r) * Math.cos(e), l.y = a * (Math.cos(r) * Math.sin(e) * Math.cos(s) - Math.sin(r) * Math.sin(s)), l.z = a * (Math.cos(r) * Math.sin(e) * Math.sin(s) + Math.sin(r) * Math.cos(s)), l;
      }, Ce.eclipticRectangularCoordinatesJ2000 = function(t) {
        var e = Ce.geometricEclipticLongitudeJ2000(t);
        e = y.d2R(e);
        var r = Ce.geometricEclipticLatitudeJ2000(t);
        r = y.d2R(r);
        var a = pe.radiusVector(t), s = new Pi(), l = Math.cos(r);
        return s.x = a * l * Math.cos(e), s.y = a * l * Math.sin(e), s.z = a * Math.sin(r), s;
      }, Ce.equatorialRectangularCoordinatesJ2000 = function(t) {
        var e = Ce.eclipticRectangularCoordinatesJ2000(t);
        return e = Ii.convertVSOPToFK5J2000(e), e;
      }, Ce.equatorialRectangularCoordinatesB1950 = function(t) {
        var e = Ce.eclipticRectangularCoordinatesJ2000(t);
        return e = Ii.convertVSOPToFK5B1950(e), e;
      }, Ce.equatorialRectangularCoordinatesAnyEquinox = function(t, e) {
        var r = Ce.equatorialRectangularCoordinatesJ2000(t);
        return r = Ii.convertVSOPToFK5AnyEquinox(r, e), r;
      };
      var ml = {};
      function ur() {
      }
      ur.eclipticLongitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_L0UranusCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_L0UranusCoefficients[u].a * Math.cos(w.g_L0UranusCoefficients[u].b + w.g_L0UranusCoefficients[u].c * e);
        var _ = w.g_L1UranusCoefficients.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_L1UranusCoefficients[u].a * Math.cos(w.g_L1UranusCoefficients[u].b + w.g_L1UranusCoefficients[u].c * e);
        var p = w.g_L2UranusCoefficients.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_L2UranusCoefficients[u].a * Math.cos(w.g_L2UranusCoefficients[u].b + w.g_L2UranusCoefficients[u].c * e);
        var S = w.g_L3UranusCoefficients.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_L3UranusCoefficients[u].a * Math.cos(w.g_L3UranusCoefficients[u].b + w.g_L3UranusCoefficients[u].c * e);
        var k = w.g_L4UranusCoefficients.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_L4UranusCoefficients[u].a * Math.cos(w.g_L4UranusCoefficients[u].b + w.g_L4UranusCoefficients[u].c * e);
        var I = (h + m * e + b * r + x * a + P * s) / 1e8;
        return I = y.m360(y.r2D(I)), I;
      }, ur.eclipticLatitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_B0UranusCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_B0UranusCoefficients[u].a * Math.cos(w.g_B0UranusCoefficients[u].b + w.g_B0UranusCoefficients[u].c * e);
        var _ = w.g_B1UranusCoefficients.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_B1UranusCoefficients[u].a * Math.cos(w.g_B1UranusCoefficients[u].b + w.g_B1UranusCoefficients[u].c * e);
        var p = w.g_B2UranusCoefficients.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_B2UranusCoefficients[u].a * Math.cos(w.g_B2UranusCoefficients[u].b + w.g_B2UranusCoefficients[u].c * e);
        var S = w.g_B3UranusCoefficients.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_B3UranusCoefficients[u].a * Math.cos(w.g_B3UranusCoefficients[u].b + w.g_B3UranusCoefficients[u].c * e);
        var k = w.g_B4UranusCoefficients.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_B4UranusCoefficients[u].a * Math.cos(w.g_B4UranusCoefficients[u].b + w.g_B4UranusCoefficients[u].c * e);
        var I = (h + m * e + b * r + x * a + P * s) / 1e8;
        return I = y.r2D(I), I;
      }, ur.radiusVector = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_R0UranusCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_R0UranusCoefficients[u].a * Math.cos(w.g_R0UranusCoefficients[u].b + w.g_R0UranusCoefficients[u].c * e);
        var _ = w.g_R1UranusCoefficients.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_R1UranusCoefficients[u].a * Math.cos(w.g_R1UranusCoefficients[u].b + w.g_R1UranusCoefficients[u].c * e);
        var p = w.g_R2UranusCoefficients.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_R2UranusCoefficients[u].a * Math.cos(w.g_R2UranusCoefficients[u].b + w.g_R2UranusCoefficients[u].c * e);
        var S = w.g_R3UranusCoefficients.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_R3UranusCoefficients[u].a * Math.cos(w.g_R3UranusCoefficients[u].b + w.g_R3UranusCoefficients[u].c * e);
        var k = w.g_R4UranusCoefficients.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_R4UranusCoefficients[u].a * Math.cos(w.g_R4UranusCoefficients[u].b + w.g_R4UranusCoefficients[u].c * e);
        return (h + m * e + b * r + x * a + P * s) / 1e8;
      };
      var pl = {};
      function hr() {
      }
      hr.eclipticLongitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = s * e, h = w.g_L0VenusCoefficients.length, u = 0, _;
        for (_ = 0; _ < h; _++)
          u += w.g_L0VenusCoefficients[_].a * Math.cos(w.g_L0VenusCoefficients[_].b + w.g_L0VenusCoefficients[_].c * e);
        var m = w.g_L1VenusCoefficients.length, p = 0;
        for (_ = 0; _ < m; _++)
          p += w.g_L1VenusCoefficients[_].a * Math.cos(w.g_L1VenusCoefficients[_].b + w.g_L1VenusCoefficients[_].c * e);
        var b = w.g_L2VenusCoefficients.length, S = 0;
        for (_ = 0; _ < b; _++)
          S += w.g_L2VenusCoefficients[_].a * Math.cos(w.g_L2VenusCoefficients[_].b + w.g_L2VenusCoefficients[_].c * e);
        var x = w.g_L3VenusCoefficients.length, k = 0;
        for (_ = 0; _ < x; _++)
          k += w.g_L3VenusCoefficients[_].a * Math.cos(w.g_L3VenusCoefficients[_].b + w.g_L3VenusCoefficients[_].c * e);
        var P = w.g_L4VenusCoefficients.length, I = 0;
        for (_ = 0; _ < P; _++)
          I += w.g_L4VenusCoefficients[_].a * Math.cos(w.g_L4VenusCoefficients[_].b + w.g_L4VenusCoefficients[_].c * e);
        var D = w.g_L5VenusCoefficients.length, G = 0;
        for (_ = 0; _ < D; _++)
          G += w.g_L5VenusCoefficients[_].a * Math.cos(w.g_L5VenusCoefficients[_].b + w.g_L5VenusCoefficients[_].c * e);
        var U = (u + p * e + S * r + k * a + I * s + G * l) / 1e8;
        return U = y.m360(y.r2D(U)), U;
      }, hr.eclipticLatitude = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_B0VenusCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_B0VenusCoefficients[u].a * Math.cos(w.g_B0VenusCoefficients[u].b + w.g_B0VenusCoefficients[u].c * e);
        var _ = w.g_B1VenusCoefficients.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_B1VenusCoefficients[u].a * Math.cos(w.g_B1VenusCoefficients[u].b + w.g_B1VenusCoefficients[u].c * e);
        var p = w.g_B2VenusCoefficients.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_B2VenusCoefficients[u].a * Math.cos(w.g_B2VenusCoefficients[u].b + w.g_B2VenusCoefficients[u].c * e);
        var S = w.g_B3VenusCoefficients.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_B3VenusCoefficients[u].a * Math.cos(w.g_B3VenusCoefficients[u].b + w.g_B3VenusCoefficients[u].c * e);
        var k = w.g_B4VenusCoefficients.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_B4VenusCoefficients[u].a * Math.cos(w.g_B4VenusCoefficients[u].b + w.g_B4VenusCoefficients[u].c * e);
        var I = (h + m * e + b * r + x * a + P * s) / 1e8;
        return I = y.r2D(I), I;
      }, hr.radiusVector = function(t) {
        var e = (t - 2451545) / 365250, r = e * e, a = r * e, s = a * e, l = w.g_R0VenusCoefficients.length, h = 0, u;
        for (u = 0; u < l; u++)
          h += w.g_R0VenusCoefficients[u].a * Math.cos(w.g_R0VenusCoefficients[u].b + w.g_R0VenusCoefficients[u].c * e);
        var _ = w.g_R1VenusCoefficients.length, m = 0;
        for (u = 0; u < _; u++)
          m += w.g_R1VenusCoefficients[u].a * Math.cos(w.g_R1VenusCoefficients[u].b + w.g_R1VenusCoefficients[u].c * e);
        var p = w.g_R2VenusCoefficients.length, b = 0;
        for (u = 0; u < p; u++)
          b += w.g_R2VenusCoefficients[u].a * Math.cos(w.g_R2VenusCoefficients[u].b + w.g_R2VenusCoefficients[u].c * e);
        var S = w.g_R3VenusCoefficients.length, x = 0;
        for (u = 0; u < S; u++)
          x += w.g_R3VenusCoefficients[u].a * Math.cos(w.g_R3VenusCoefficients[u].b + w.g_R3VenusCoefficients[u].c * e);
        var k = w.g_R4VenusCoefficients.length, P = 0;
        for (u = 0; u < k; u++)
          P += w.g_R4VenusCoefficients[u].a * Math.cos(w.g_R4VenusCoefficients[u].b + w.g_R4VenusCoefficients[u].c * e);
        return (h + m * e + b * r + x * a + P * s) / 1e8;
      };
      var vl = {};
      function ls() {
        this.bZero = 0, this.bScale = 1, this.containsBlanks = !1, this.blankValue = Number.MIN_VALUE, this.maxVal = Number.MIN_VALUE, this.minVal = Number.MAX_VALUE, this.upperCut = Number.MIN_VALUE, this.lowerCut = Number.MAX_VALUE, this.transparentBlack = !1, this.colorMapName = "viridis", this.scaleType = 0, this.onMainImageLoaded = null, this.mainImageLoadedEventHasFired = !1;
      }
      var wl = {
        _fireMainImageLoaded: function(t) {
          this.onMainImageLoaded != null && !this.mainImageLoadedEventHasFired && (this.mainImageLoadedEventHasFired = !0, this.onMainImageLoaded(t));
        }
      };
      function Xn(t) {
        this._properties = {}, this._catalogColumnInfo = null, this._catalogSpreadSheetLayer = new Xa(), this._downloadComplete = !1, this.dataset = t, this._datasetName = t.get_name(), this._url = t.get_url(), this._url.toLowerCase().indexOf("norder") > -1 && (this._url = this._url.substring(0, this._url.toLowerCase().indexOf("norder"))), this._url += "properties", this._download();
      }
      var bl = {
        get_properties: function() {
          return this._properties;
        },
        get_catalogSpreadSheetLayer: function() {
          return this._catalogSpreadSheetLayer;
        },
        set_catalogSpreadSheetLayer: function(t) {
          return this._catalogSpreadSheetLayer = t, t;
        },
        get_catalogColumnInfo: function() {
          return this._catalogColumnInfo;
        },
        set_catalogColumnInfo: function(t) {
          return this._catalogColumnInfo = t, t;
        },
        get_downloadComplete: function() {
          return this._downloadComplete;
        },
        _download: function() {
          this._webFile = new Ai(this._url), this._webFile.onStateChange = n.bind("_onPropertiesDownloadComplete", this), this._webFile.send();
        },
        _onPropertiesDownloadComplete: function() {
          if (this._webFile.get_state() === 1)
            if (this._parseProperties(this._webFile.getText()), n.keyExists(this.get_properties(), "dataproduct_type") && this.get_properties().dataproduct_type.toLowerCase() === "catalog")
              this._catalogColumnInfo = qr.loadFromUrl(n.replaceString(this._url, "/properties", "/metadata.xml"), n.bind("_onCatalogMetadataDownloadComplete", this));
            else {
              if (n.keyExists(this.get_properties(), "hips_data_range")) {
                var t = this.get_properties().hips_data_range;
                this.dataset.get_fitsProperties().minVal = parseFloat(t.split(" ")[0]), this.dataset.get_fitsProperties().maxVal = parseFloat(t.split(" ")[1]), this.dataset.get_fitsProperties().lowerCut = this.dataset.get_fitsProperties().minVal, this.dataset.get_fitsProperties().upperCut = this.dataset.get_fitsProperties().maxVal;
              }
              if (n.keyExists(this.get_properties(), "hips_pixel_cut")) {
                var e = this.get_properties().hips_pixel_cut;
                this.dataset.get_fitsProperties().lowerCut = parseFloat(e.split(" ")[0]), this.dataset.get_fitsProperties().upperCut = parseFloat(e.split(" ")[1]), n.keyExists(this.get_properties(), "hips_data_range") || (this.dataset.get_fitsProperties().minVal = this.dataset.get_fitsProperties().lowerCut, this.dataset.get_fitsProperties().maxVal = this.dataset.get_fitsProperties().upperCut);
              }
              this._downloadComplete = !0, this._onDownloadComplete != null && this._onDownloadComplete();
            }
        },
        _onCatalogMetadataDownloadComplete: function() {
          this._catalogSpreadSheetLayer.useHeadersFromVoTable(this._catalogColumnInfo), this._catalogSpreadSheetLayer.set_name(this._datasetName), this._catalogSpreadSheetLayer.id = di.createFrom(this._datasetName), T.addSpreadsheetLayer(this.get_catalogSpreadSheetLayer(), "Sky"), this._downloadComplete = !0, this._onDownloadComplete != null && this._onDownloadComplete();
        },
        setDownloadCompleteListener: function(t) {
          this._onDownloadComplete = t;
        },
        _parseProperties: function(t) {
          for (var e = t.split(`
`), r = n.enumerate(e); r.moveNext(); ) {
            var a = r.current;
            if (!n.whitespace(a) && !n.startsWith(a, "#")) {
              var s = a.split("=");
              if (s.length === 2) {
                var l = n.trim(s[0]), h = n.trim(s[1]);
                !n.whitespace(l) && !n.whitespace(h) && (this.get_properties()[l] = h);
              }
            }
          }
        }
      };
      function jt() {
      }
      jt._mulsign = function(t, e) {
        return jt._sign(e) * t;
      }, jt._isnan = function(t) {
        return t !== t;
      }, jt._isinf = function(t) {
        return Math.abs(t) === Number.POSITIVE_INFINITY;
      }, jt._sign = function(t) {
        return t ? t > 0 ? 1 : -1 : 0;
      }, jt._atanhelper = function(t) {
        var e = t * t, r = -188796008463073e-19;
        return r = r * e + 209850076645817e-18, r = r * e + -0.00110611831486672, r = r * e + 0.00370026744188713, r = r * e + -0.00889896195887655, r = r * e + 0.0165993297735292, r = r * e + -0.0254517624932313, r = r * e + 0.0337852580001353, r = r * e + -0.0407629191276837, r = r * e + 0.0466667150077841, r = r * e + -0.0523674852303482, r = r * e + 0.0587666392926674, r = r * e + -0.0666573579361081, r = r * e + 0.076921953831177, r = r * e + -0.090908995008245, r = r * e + 0.111111105648261, r = r * e + -0.142857142667713, r = r * e + 0.199999999996591, r = r * e + -0.333333333333311, r * e * t + t;
      }, jt._atan2k = function(t, e) {
        var r = 0;
        if (e < 0 && (e = -e, r = -2), t > e) {
          var a = e;
          e = t, t = -a, r += 1;
        }
        return jt._atanhelper(t / e) + r * (Math.PI / 2);
      }, jt.atan2 = function(t, e) {
        var r = jt._atan2k(Math.abs(t), e);
        return r = jt._mulsign(r, e), (jt._isinf(e) || !e) && (r = Math.PI / 2 - (jt._isinf(e) ? jt._sign(e) * (Math.PI / 2) : 0)), jt._isinf(t) && (r = Math.PI / 2 - (jt._isinf(e) ? jt._sign(e) * (Math.PI * 1 / 4) : 0)), t || (r = jt._sign(e) === -1 ? Math.PI : 0), jt._isnan(e) || jt._isnan(t) ? Number.NaN : jt._mulsign(r, t);
      }, jt.asin = function(t) {
        return jt._mulsign(jt._atan2k(Math.abs(t), Math.sqrt((1 + t) * (1 - t))), t);
      }, jt.acos = function(t) {
        return jt._mulsign(jt._atan2k(Math.sqrt((1 + t) * (1 - t)), Math.abs(t)), t) + (t < 0 ? Math.PI : 0);
      }, jt.atan = function(t) {
        var e = 0;
        t < 0 && (t = -t, e = 2), t > 1 && (t = 1 / t, e |= 1);
        var r = jt._atanhelper(t);
        return e & 1 && (r = 1.5707963267949 - r), e & 2 && (r = -r), r;
      }, jt._sincoshelper = function(t) {
        var e = t * t, r = -797255955009038e-32;
        return r = r * e + 281009972710863e-29, r = r * e - 764712219118159e-27, r = r * e + 160590430605665e-24, r = r * e - 250521083763502e-22, r = r * e + 275573192239199e-20, r = r * e - 198412698412696e-18, r = r * e + 0.00833333333333333, r = r * e - 0.166666666666667, e * r * t + t;
      }, jt.sin = function(t) {
        var e = t * jt._m_1_PI, r = Math.floor(e < 0 ? e - 0.5 : e + 0.5), a = 4 * r;
        return t -= a * jt._pI4_A, t -= a * jt._pI4_B, t -= a * jt._pI4_C, r & 1 && (t = -t), jt._sincoshelper(t);
      }, jt.cos = function(t) {
        var e = t * jt._m_1_PI - 0.5, r = 1 + 2 * Math.floor(e < 0 ? e - 0.5 : e + 0.5), a = 2 * r;
        return t -= a * jt._pI4_A, t -= a * jt._pI4_B, t -= a * jt._pI4_C, r & 2 || (t = -t), jt._sincoshelper(t);
      };
      var yl = {};
      function Qi() {
      }
      var Sl = {};
      function An() {
        this.ix = 0, this.iy = 0, this.face = 0;
      }
      An.create = function(t, e, r) {
        var a = new An();
        return a.ix = t, a.iy = e, a.face = r, a;
      };
      var Cl = {};
      function cr() {
      }
      cr.check = function(t, e) {
        if (!t)
          throw new Error(e);
      }, cr.isqrt = function(t) {
        var e = Math.sqrt(t + 0.5);
        return t < 1 << 50 || (e * e > t ? --e : (e + 1) * (e + 1) <= t && ++e), e;
      }, cr.cosdist_zphi = function(t, e, r, a) {
        return t * r + jt.cos(e - a) * Math.sqrt((1 - t * t) * (1 - r * r));
      }, cr.fmodulo = function(t, e) {
        if (t >= 0)
          return t < e ? t : t % e;
        var r = t % e + e;
        return r === e ? 0 : r;
      };
      var Ml = {};
      function kn() {
        this.z = 0, this.phi = 0, this.sth = 0, this.have_sth = !1;
      }
      kn.create = function(t) {
        var e = new kn(), r = 1 / t.length();
        return e.z = t.z * r, e.phi = jt.atan2(t.y, t.x), Math.abs(e.z) > 0.99 && (e.sth = Math.sqrt(t.x * t.x + t.y * t.y) * r, e.have_sth = !0), e;
      };
      var Tl = {
        toVec3: function() {
          var t;
          this.have_sth ? t = this.sth : t = Math.sqrt((1 - this.z) * (1 + this.z));
          var e = t * jt.cos(this.phi), r = t * jt.sin(this.phi);
          return L.create(e, this.z, r);
        }
      };
      function xa() {
        this.theta = 0, this.phi = 0;
      }
      xa.create = function(t, e) {
        var r = new xa();
        return r.theta = t, r.phi = e, r;
      };
      var xl = {
        normalizeTheta: function() {
          this.theta = cr.fmodulo(this.theta, 2 * Math.PI), this.theta > Math.PI && (this.phi += Math.PI, this.theta = 2 * Math.PI - this.theta);
        },
        normalize: function() {
          this.normalizeTheta(), this.phi = cr.fmodulo(this.phi, 2 * Math.PI);
        },
        toString: function() {
          var t = new n.StringBuilder();
          return t.append("ptg("), t.append(this.theta), t.append(","), t.append(this.phi), t.append(")"), t.toString();
        }
      };
      function Kt() {
        switch (this._force_https = !1, this._origin_protocol = typeof window > "u" ? "https:" : window.location.protocol, this._origin_domain = typeof window > "u" ? "" : window.location.hostname, this._force_https = this._origin_protocol === "https:", this._domain_handling = {}, this._domain_handling["worldwidetelescope.org"] = 0, this._domain_handling["www.worldwidetelescope.org"] = 0, this._domain_handling["cdn.worldwidetelescope.org"] = 0, this._domain_handling["content.worldwidetelescope.org"] = 0, this._domain_handling["beta.worldwidetelescope.org"] = 0, this._domain_handling["beta-cdn.worldwidetelescope.org"] = 0, this._domain_handling["wwtstaging.azurewebsites.net"] = 0, this._domain_handling["wwtfiles.blob.core.windows.net"] = 2, this._domain_handling["wwttiles.blob.core.windows.net"] = 2, this._domain_handling["web.wwtassets.org"] = 2, this._domain_handling["data1.wwtassets.org"] = 2, this._domain_handling.localhost = 1, this._domain_handling["127.0.0.1"] = 1, this._origin_domain) {
          case "worldwidetelescope.org":
          case "www.worldwidetelescope.org":
          case "cdn.worldwidetelescope.org":
            this._core_static_baseurl = this._origin_protocol + "//cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//worldwidetelescope.org";
            break;
          case "beta.worldwidetelescope.org":
          case "beta-cdn.worldwidetelescope.org":
            this._core_static_baseurl = this._origin_protocol + "//beta-cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//beta.worldwidetelescope.org";
            break;
          default:
            this._core_static_baseurl = this._origin_protocol + "//cdn.worldwidetelescope.org", this._core_dynamic_baseurl = this._origin_protocol + "//worldwidetelescope.org";
            break;
        }
        this._engine_asset_baseurl = this._origin_protocol + "//web.wwtassets.org/engine/assets", this._flagship_static_lcpaths = {}, this._flagship_static_lcpaths["/wwtweb/2massoct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/bingdemtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/bingdemtile2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/catalog.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/catalog2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dembath.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/demmars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/demtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dss.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/dusttoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/earthblend.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/earthmerbath.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/fixedaltitudedemtile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/g360.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galex4far.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galex4near.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/galextoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettour.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettourfile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/gettours.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/glimpse.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/halphatoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirise.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirisedem2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/hirisedem3.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/jupiter.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mandel.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mandel1.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marsdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marshirise.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/marsmoc.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/martiantile.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/martiantile2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/mipsgal.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moondem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moonoct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moontoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/moontoastdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmars.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmarsdem.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/postmarsdem2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/rasstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/sdsstoast2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/thumbnail.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tiles.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tiles2.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tilesthumb.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/twomasstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/tychooct.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/veblend.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/vlsstoast.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmap.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmsmoon.aspx"] = !0, this._flagship_static_lcpaths["/wwtweb/wmstoast.aspx"] = !0;
      }
      var Ll = {
        overrideAssetBaseurl: function(t) {
          this._engine_asset_baseurl = t;
        },
        rewrite: function(t, e) {
          var r = t.toLowerCase(), a, s;
          if (n.startsWith(r, "http://"))
            a = "http:", s = t.substring(7);
          else if (n.startsWith(r, "https://"))
            a = "https:", s = t.substring(8);
          else if (n.startsWith(r, "//"))
            a = "", s = t.substring(2);
          else {
            if (n.startsWith(r, "blob:"))
              return t;
            switch (e) {
              case 0:
              default:
                a = "", s = t;
                break;
              case 1:
                return t = new URL(t, window.location.href).toString(), this.rewrite(t, 0);
            }
          }
          if (V.singleton.freestandingMode)
            return t;
          var l, h, u = s.indexOf("/");
          u < 0 ? (l = s, h = "/") : (l = s.substring(0, u), h = s.substring(u));
          var _ = l.toLowerCase(), m = h.toLowerCase().split("?")[0];
          n.keyExists(this._domain_handling, _) || (n.startsWith(_, "localhost:") || n.startsWith(_, "127.0.0.1:") ? this._domain_handling[_] = 1 : this._domain_handling[_] = 3);
          var p = this._domain_handling[_];
          switch (p) {
            case 1:
              return t;
            case 2:
            case 3:
            default:
              return this._force_https && a !== "https:" ? "https://" + l + h : t;
            case 4:
              return a || (t = "http://" + t), t = n.replaceString(n.replaceString(encodeURIComponent(t), "%7B", "{"), "%7D", "}"), this._core_dynamic_baseurl + "/webserviceproxy.aspx?targeturl=" + t;
            case 0:
              var b = !1;
              return (n.startsWith(m, "/data/") || n.keyExists(this._flagship_static_lcpaths, m) || n.startsWith(m, "/content/") || n.startsWith(m, "/engine/assets/")) && (b = !0), b ? this._core_static_baseurl + h : this._core_dynamic_baseurl + h;
          }
        },
        activateProxy: function(t) {
          if (V.singleton.freestandingMode)
            return null;
          var e = t.toLowerCase(), r;
          n.startsWith(e, "http://") ? r = t.substring(7) : n.startsWith(e, "https://") ? r = t.substring(8) : n.startsWith(e, "//") ? r = t.substring(2) : r = t;
          var a, s = r.indexOf("/");
          s < 0 ? a = r : a = r.substring(0, s).toLowerCase(), n.keyExists(this._domain_handling, a) || (n.startsWith(a, "localhost:") || n.startsWith(a, "127.0.0.1:") ? this._domain_handling[a] = 1 : this._domain_handling[a] = 3);
          var l = this._domain_handling[a];
          return !l || l === 2 || l === 1 ? null : (this._domain_handling[a] = 4, this.rewrite(t, 0));
        },
        engineAssetUrl: function(t) {
          return n.format("{0}/{1}", this._engine_asset_baseurl, t);
        },
        coreDynamicUrl: function(t) {
          return n.format("{0}/{1}", this._core_dynamic_baseurl, t);
        },
        coreStaticUrl: function(t) {
          return n.format("{0}/{1}", this._core_static_baseurl, t);
        }
      };
      function Dt() {
        this.addedToPrimitives = !1, this.annotationDirty = !0, this._opacity = 1, this._showHoverLabel = !1;
      }
      Dt.prepBatch = function(t) {
        (Dt.pointList == null || Dt.batchDirty) && (Dt.pointList = new tr(t), Dt.lineList = new _n(), Dt.triangleFanPointList = new ds(), Dt.triangleList = new Er(), Dt.lineList.set_depthBuffered(!1), Dt.triangleList.depthBuffered = !1);
      }, Dt.drawBatch = function(t) {
        Dt.batchDirty = !1, t.gl != null && (Dt.pointList != null && Dt.pointList.draw(t, 1, !1), Dt.lineList != null && Dt.lineList.drawLines(t, 1), Dt.triangleFanPointList != null && Dt.triangleFanPointList.draw(t, 1), Dt.triangleList != null && Dt.triangleList.draw(t, 1, 0));
      }, Dt.separation = function(t, e, r, a) {
        e = e / 180 * Math.PI, a = a / 180 * Math.PI, t = t / 12 * Math.PI, r = r / 12 * Math.PI;
        var s = Math.cos(e) * Math.sin(a) - Math.sin(e) * Math.cos(a) * Math.cos(r - t), l = Math.cos(a) * Math.sin(r - t), h = Math.sin(e) * Math.sin(a) + Math.cos(e) * Math.cos(a) * Math.cos(r - t), u = Math.atan2(Math.sqrt(s * s + l * l), h);
        return u = u / Math.PI * 180, u < 0 && (u += 180), u;
      }, Dt.colorToUint = function(t) {
        return t.a << 24 | t.r << 16 | t.g << 8 | t.b;
      }, Dt.colorToUintAlpha = function(t, e) {
        return e << 24 | t.r << 16 | t.g << 8 | t.b;
      };
      var Al = {
        draw: function(t) {
        },
        get_opacity: function() {
          return this._opacity;
        },
        set_opacity: function(t) {
          return this._opacity = t, t;
        },
        get_id: function() {
          return this._id;
        },
        set_id: function(t) {
          return this._id = t, t;
        },
        get_tag: function() {
          return this._tag;
        },
        set_tag: function(t) {
          return this._tag = t, t;
        },
        get_label: function() {
          return this._label;
        },
        set_label: function(t) {
          return this._label = t, t;
        },
        get_showHoverLabel: function() {
          return this._showHoverLabel;
        },
        set_showHoverLabel: function(t) {
          return this._showHoverLabel = t, t;
        },
        hitTest: function(t, e, r, a, s) {
          return !1;
        },
        get_center: function() {
          return this.center;
        },
        set_center: function(t) {
          return this.center = t, t;
        }
      };
      function Gr(t, e, r, a, s) {
        this.RA = 0, this.dec = 0, this.distance = 0, this.shadow = !1, this.eclipsed = !1, this.RA = t, this.dec = e, this.distance = r, this.shadow = a, this.eclipsed = s;
      }
      var kl = {};
      function us(t, e, r, a, s) {
        this.bValid = !1, this.rise = 0, this.transit = 0, this.set = 0, this.bNeverRises = !1, this.bValid = t, this.rise = e, this.transit = r, this.set = a, this.bNeverRises = s;
      }
      var Il = {};
      function $t() {
      }
      $t.getPlanet = function(t, e, r, a, s) {
        var l = e;
        if (a = -a, l < 9) {
          var h = Fe.calculate(t, e), u = Sr.equatorial2Topocentric(h.apparentGeocentricRA, h.apparentGeocentricDeclination, h.apparentGeocentricDistance, a, r, s, t);
          return new Gr(u.x, u.y, h.apparentGeocentricDistance, !1, !1);
        } else if (l === 9) {
          var _ = Re.eclipticLatitude(t), m = Re.eclipticLongitude(t), p = Re.radiusVector(t) / 149598e3, b = Ie.trueObliquityOfEcliptic(t), S = y.ec2Eq(m, _, b), u = Sr.equatorial2Topocentric(S.x, S.y, p, a, r, s, t);
          return new Gr(u.x, u.y, p, !1, !1);
        } else {
          if (t !== $t._jDateLast) {
            $t._jupDetails = Fe.calculate(t, 4), $t._jupPhisical = Ca.calculate(t);
            var u = Sr.equatorial2Topocentric($t._jupDetails.apparentGeocentricRA, $t._jupDetails.apparentGeocentricDeclination, $t._jupDetails.apparentGeocentricDistance, a, r, s, t);
            $t._jupDetails.apparentGeocentricRA = u.x, $t._jupDetails.apparentGeocentricDeclination = u.y, $t._galDetails = We.calculate(t), $t._jDateLast = t;
          }
          var x = 954501e-9, k = Math.atan(0.5 * (x / $t._jupDetails.apparentGeocentricDistance)) / 3.1415927 * 180, P = k / Math.cos($t._jupDetails.apparentGeocentricDeclination / 180 * 3.1415927) / 15, I = 0, D = 0, G = 0, U = !1, Y = !1;
          switch (l) {
            case 10:
              I = $t._galDetails.satellite1.apparentRectangularCoordinates.x, D = $t._galDetails.satellite1.apparentRectangularCoordinates.y, G = $t._galDetails.satellite1.apparentRectangularCoordinates.z, Y = $t._galDetails.satellite1.bInEclipse, U = $t._galDetails.satellite1.bInShadowTransit;
              break;
            case 11:
              I = $t._galDetails.satellite2.apparentRectangularCoordinates.x, D = $t._galDetails.satellite2.apparentRectangularCoordinates.y, G = $t._galDetails.satellite2.apparentRectangularCoordinates.z, Y = $t._galDetails.satellite2.bInEclipse, U = $t._galDetails.satellite2.bInShadowTransit;
              break;
            case 12:
              I = $t._galDetails.satellite3.apparentRectangularCoordinates.x, D = $t._galDetails.satellite3.apparentRectangularCoordinates.y, G = $t._galDetails.satellite3.apparentRectangularCoordinates.z, Y = $t._galDetails.satellite3.bInEclipse, U = $t._galDetails.satellite3.bInShadowTransit;
              break;
            case 13:
              I = $t._galDetails.satellite4.apparentRectangularCoordinates.x, D = $t._galDetails.satellite4.apparentRectangularCoordinates.y, G = $t._galDetails.satellite4.apparentRectangularCoordinates.z, Y = $t._galDetails.satellite4.bInEclipse, U = $t._galDetails.satellite4.bInShadowTransit;
              break;
            case 14:
              I = $t._galDetails.satellite1.apparentShadowRectangularCoordinates.x, D = $t._galDetails.satellite1.apparentShadowRectangularCoordinates.y, G = $t._galDetails.satellite1.apparentShadowRectangularCoordinates.z * 0.9, U = $t._galDetails.satellite1.bInShadowTransit;
              break;
            case 15:
              I = $t._galDetails.satellite2.apparentShadowRectangularCoordinates.x, D = $t._galDetails.satellite2.apparentShadowRectangularCoordinates.y, G = $t._galDetails.satellite2.apparentShadowRectangularCoordinates.z * 0.9, U = $t._galDetails.satellite2.bInShadowTransit;
              break;
            case 16:
              I = $t._galDetails.satellite3.apparentShadowRectangularCoordinates.x, D = $t._galDetails.satellite3.apparentShadowRectangularCoordinates.y, G = $t._galDetails.satellite3.apparentShadowRectangularCoordinates.z * 0.9, U = $t._galDetails.satellite3.bInShadowTransit;
              break;
            case 17:
              I = $t._galDetails.satellite4.apparentShadowRectangularCoordinates.x, D = $t._galDetails.satellite4.apparentShadowRectangularCoordinates.y, G = $t._galDetails.satellite4.apparentShadowRectangularCoordinates.z * 0.9, U = $t._galDetails.satellite4.bInShadowTransit;
              break;
          }
          var j, K, Q = $t._jupPhisical.p / 180 * 3.1415927;
          return j = I * Math.cos(Q) - D * Math.sin(Q), K = I * Math.sin(Q) + D * Math.cos(Q), I = j, D = K, new Gr($t._jupDetails.apparentGeocentricRA - I * P, $t._jupDetails.apparentGeocentricDeclination + D * k, $t._jupDetails.apparentGeocentricDistance + G * x / 2, U, Y);
        }
      }, $t.getJulianDay = function(t, e, r) {
        return Ve.dateToJD(n.truncate(t), n.truncate(e), r, !0);
      }, $t.eclipticToJ2000 = function(t, e, r) {
        var a = y.ec2Eq(t, e, Ie.trueObliquityOfEcliptic(r));
        return new Gr(a.x, a.y, 0, !1, !1);
      }, $t.galacticToJ2000 = function(t, e) {
        var r = y.g2Eq(t, e);
        return new Gr(r.x, r.y, 0, !1, !1);
      }, $t.j2000ToGalactic = function(t, e) {
        var r = y.eq2G(t, e);
        return new Gr(r.x, r.y, 0, !1, !1);
      }, $t.getRiseTrinsitSet = function(t, e, r, a, s, l, h, u, _, m) {
        var p = -0.5667;
        switch (m) {
          case 0:
            p = -0.5667;
            break;
          case 1:
            p = -0.8333;
            break;
          case 2:
            p = 0.125;
            break;
        }
        var b = Ta.rise(t, a, s, l, h, u, _, r, e, p), S = !1;
        return b.bValid || (S = at.sign(e) !== at.sign(h)), new us(b.bValid, b.rise, b.transit, b.set, S);
      };
      var $l = {};
      function Cr() {
        this._state = !1, this._targetState = !1, this._delayTime = 0, this._switchedTime = new Date(1990, 0, 0, 0, 0, 0, 0), this._state = !1, this._targetState = this._state, this._delayTime = 1e3;
      }
      Cr.create = function(t, e) {
        var r = new Cr();
        return r._state = t, r._targetState = t, r._delayTime = e, r;
      };
      var Pl = {
        get_state: function() {
          if (this._targetState !== this._state) {
            var t = n.now() - this._switchedTime;
            return t > this._delayTime && (this._state = this._targetState), !0;
          }
          return this._state;
        },
        set_state: function(t) {
          return this._switchedTime = new Date(1990, 0, 0, 0, 0, 0, 0), this._state = t, this._targetState = this._state, t;
        },
        get_targetState: function() {
          return this._targetState;
        },
        set_targetState: function(t) {
          return this._targetState !== t && (this._switchedTime = n.now(), this._targetState = t), t;
        },
        get_opacity: function() {
          if (this._targetState !== this._state) {
            var t = n.now() - this._switchedTime;
            if (t > this._delayTime)
              this._state = this._targetState;
            else {
              var e = t / this._delayTime;
              return this._targetState ? e : 1 - e;
            }
          }
          return this._state ? 1 : 0;
        },
        get_delayTime: function() {
          return this._delayTime;
        },
        set_delayTime: function(t) {
          return this._delayTime = t, t;
        }
      };
      function Me() {
        this.lat = 0, this.lng = 0, this.zoom = 0, this.rotation = 0, this.angle = 0, this.raDec = !1, this.opacity = 0, this.target = 0, this.zoom = 360, this.viewTarget = new L();
      }
      Me.create = function(t, e, r, a, s, l) {
        var h = new Me();
        return h.lat = t, h.lng = e, h.zoom = r, h.rotation = a, h.angle = s, h.raDec = !1, h.opacity = l, h.viewTarget = L.create(0, 0, 0), h.target = 20, h.targetReferenceFrame = "", h;
      }, Me.logN = function(t, e) {
        return Math.log(t) / Math.log(e);
      }, Me.sinh = function(t) {
        return (Math.exp(t) - Math.exp(-t)) / 2;
      }, Me.interpolate = function(t, e, r, a, s) {
        var l = new Me(), h = Me.easeCurve(r, a), u = Math.min(1, r * 2), _ = Me.easeCurve(u, a);
        return l.angle = e.angle * h + t.angle * (1 - h), l.rotation = e.rotation * h + t.rotation * (1 - h), s ? (l.lat = e.lat * _ + t.lat * (1 - _), l.lng = e.lng * _ + t.lng * (1 - _)) : (l.lat = e.lat * h + t.lat * (1 - h), l.lng = e.lng * h + t.lng * (1 - h)), l.zoom = Math.pow(2, Me.logN(e.zoom, 2) * h + Me.logN(t.zoom, 2) * (1 - h)), l.opacity = e.opacity * h + t.opacity * (1 - h), l.viewTarget = L.lerp(t.viewTarget, e.viewTarget, h), l.targetReferenceFrame = e.targetReferenceFrame, e.target === t.target ? l.target = e.target : l.target = 20, l;
      }, Me.interpolateGreatCircle = function(t, e, r, a, s) {
        var l = new Me(), h = Me.easeCurve(r, a), u = Math.min(1, r * 2);
        Me.easeCurve(u, a), l.angle = e.angle * h + t.angle * (1 - h), l.rotation = e.rotation * h + t.rotation * (1 - h);
        var _ = R.geoTo3dDouble(t.lat, t.lng), m = R.geoTo3dDouble(e.lat, e.lng), p = L.slerp(_, m, h), b = R.cartesianToLatLng(p);
        return l.lat = b.y, l.lng = b.x, l.zoom = Math.pow(2, Me.logN(e.zoom, 2) * h + Me.logN(t.zoom, 2) * (1 - h)), l.opacity = e.opacity * h + t.opacity * (1 - h), l.viewTarget = L.lerp(t.viewTarget, e.viewTarget, h), l.targetReferenceFrame = e.targetReferenceFrame, e.target === t.target ? l.target = e.target : l.target = 20, l;
      }, Me.easeCurve = function(t, e) {
        switch (e) {
          case 0:
            return t;
          case 4:
            return Math.pow(t, 2);
          case 1:
            return (1 - t) * Me.sinh(t / (0.1085712344 * 2)) / 100 + t * t;
          case 2:
            return t * (1 - Me.sinh((1 - t) / (0.1085712344 * 2)) / 100) + (1 - t) * t;
          case 3:
            return t < 0.5 ? Me.sinh(t / 0.1085712344) / 100 : 1 - Me.sinh((1 - t) / 0.1085712344) / 100;
          default:
            return t;
        }
      };
      var Rl = {
        copy: function() {
          var t = new Me();
          return t.lat = this.lat, t.lng = this.lng, t.zoom = this.zoom, t.rotation = this.rotation, t.angle = this.angle, t.raDec = this.raDec, t.opacity = this.opacity, t.viewTarget = this.viewTarget.copy(), t.target = this.target, t.targetReferenceFrame = this.targetReferenceFrame, t;
        },
        get_RA: function() {
          return (180 - (this.lng - 180)) / 360 * 24 % 24;
        },
        set_RA: function(t) {
          return this.lng = 180 - t / 24 * 360 - 180, this.raDec = !0, t;
        },
        get_dec: function() {
          return this.lat;
        },
        set_dec: function(t) {
          return this.lat = t, t;
        },
        equals: function(t) {
          if (n.canCast(t, Me)) {
            var e = t;
            return !(Math.abs(e.angle - this.angle) > 0.01 || Math.abs(e.lat - this.lat) > e.zoom / 1e4 || Math.abs(e.get_RA() - this.get_RA()) > e.zoom / 1e3 || Math.abs(e.rotation - this.rotation) > 0.1 || Math.abs(e.zoom - this.zoom) > Math.abs(e.zoom) / 1e3);
          } else
            return !1;
        }
      };
      function B() {
        this.a = 255, this.b = 255, this.g = 255, this.r = 255, this.name = "";
      }
      B.fromArgb = function(t, e, r, a) {
        var s = new B();
        return s.a = t, s.r = e, s.g = r, s.b = a, s;
      }, B._fromArgbColor = function(t, e) {
        var r = new B();
        return r.a = t, r.r = e.r, r.g = e.g, r.b = e.b, r;
      }, B.fromName = function(t) {
        var e = B.load(t);
        return e;
      }, B.load = function(t) {
        var e = 255, r = 255, a = 255, s = 255, l = t.split(":");
        if (l.length === 5)
          e = parseInt(l[1]), r = parseInt(l[2]), a = parseInt(l[3]), s = parseInt(l[4]);
        else {
          if (l.length === 2)
            return B.fromName(l[1].toLowerCase());
          if (l.length === 1 && n.startsWith(l[0], "#"))
            return B.fromHex(l[0]);
          if (l.length === 1 && l[0].length === 8)
            return B.fromSimpleHex(l[0]);
          if (l.length === 1)
            return B._fromWindowsNamedColor(l[0]);
        }
        return B.fromArgb(e, r, a, s);
      }, B._fromWindowsNamedColor = function(t) {
        switch (t.toLowerCase()) {
          case "activeborder":
            return B.fromArgb(255, 180, 180, 180);
          case "activecaption":
            return B.fromArgb(255, 153, 180, 209);
          case "activecaptiontext":
            return B.fromArgb(255, 0, 0, 0);
          case "appworkspace":
            return B.fromArgb(255, 171, 171, 171);
          case "control":
            return B.fromArgb(255, 240, 240, 240);
          case "controldark":
            return B.fromArgb(255, 160, 160, 160);
          case "controldarkdark":
            return B.fromArgb(255, 105, 105, 105);
          case "controllight":
            return B.fromArgb(255, 227, 227, 227);
          case "controllightlight":
            return B.fromArgb(255, 255, 255, 255);
          case "controltext":
            return B.fromArgb(255, 0, 0, 0);
          case "desktop":
            return B.fromArgb(255, 255, 255, 255);
          case "graytext":
            return B.fromArgb(255, 109, 109, 109);
          case "highlight":
            return B.fromArgb(255, 51, 153, 255);
          case "highlighttext":
            return B.fromArgb(255, 255, 255, 255);
          case "hottrack":
            return B.fromArgb(255, 0, 102, 204);
          case "inactiveborder":
            return B.fromArgb(255, 244, 247, 252);
          case "inactivecaption":
            return B.fromArgb(255, 191, 205, 219);
          case "inactivecaptiontext":
            return B.fromArgb(255, 0, 0, 0);
          case "info":
            return B.fromArgb(255, 255, 255, 225);
          case "infotext":
            return B.fromArgb(255, 0, 0, 0);
          case "menu":
            return B.fromArgb(255, 240, 240, 240);
          case "menutext":
            return B.fromArgb(255, 0, 0, 0);
          case "scrollbar":
            return B.fromArgb(255, 200, 200, 200);
          case "window":
            return B.fromArgb(255, 255, 255, 255);
          case "windowframe":
            return B.fromArgb(255, 100, 100, 100);
          case "windowtext":
            return B.fromArgb(255, 0, 0, 0);
          case "transparent":
            return B.fromArgb(0, 255, 255, 255);
          case "aliceblue":
            return B.fromArgb(255, 240, 248, 255);
          case "antiquewhite":
            return B.fromArgb(255, 250, 235, 215);
          case "aqua":
            return B.fromArgb(255, 0, 255, 255);
          case "aquamarine":
            return B.fromArgb(255, 127, 255, 212);
          case "azure":
            return B.fromArgb(255, 240, 255, 255);
          case "beige":
            return B.fromArgb(255, 245, 245, 220);
          case "bisque":
            return B.fromArgb(255, 255, 228, 196);
          case "black":
            return B.fromArgb(255, 0, 0, 0);
          case "blanchedalmond":
            return B.fromArgb(255, 255, 235, 205);
          case "blue":
            return B.fromArgb(255, 0, 0, 255);
          case "blueviolet":
            return B.fromArgb(255, 138, 43, 226);
          case "brown":
            return B.fromArgb(255, 165, 42, 42);
          case "burlywood":
            return B.fromArgb(255, 222, 184, 135);
          case "cadetblue":
            return B.fromArgb(255, 95, 158, 160);
          case "chartreuse":
            return B.fromArgb(255, 127, 255, 0);
          case "chocolate":
            return B.fromArgb(255, 210, 105, 30);
          case "coral":
            return B.fromArgb(255, 255, 127, 80);
          case "cornflowerblue":
            return B.fromArgb(255, 100, 149, 237);
          case "cornsilk":
            return B.fromArgb(255, 255, 248, 220);
          case "crimson":
            return B.fromArgb(255, 220, 20, 60);
          case "cyan":
            return B.fromArgb(255, 0, 255, 255);
          case "darkblue":
            return B.fromArgb(255, 0, 0, 139);
          case "darkcyan":
            return B.fromArgb(255, 0, 139, 139);
          case "darkgoldenrod":
            return B.fromArgb(255, 184, 134, 11);
          case "darkgray":
            return B.fromArgb(255, 169, 169, 169);
          case "darkgreen":
            return B.fromArgb(255, 0, 100, 0);
          case "darkkhaki":
            return B.fromArgb(255, 189, 183, 107);
          case "darkmagenta":
            return B.fromArgb(255, 139, 0, 139);
          case "darkolivegreen":
            return B.fromArgb(255, 85, 107, 47);
          case "darkorange":
            return B.fromArgb(255, 255, 140, 0);
          case "darkorchid":
            return B.fromArgb(255, 153, 50, 204);
          case "darkred":
            return B.fromArgb(255, 139, 0, 0);
          case "darksalmon":
            return B.fromArgb(255, 233, 150, 122);
          case "darkseagreen":
            return B.fromArgb(255, 143, 188, 139);
          case "darkslateblue":
            return B.fromArgb(255, 72, 61, 139);
          case "darkslategray":
            return B.fromArgb(255, 47, 79, 79);
          case "darkturquoise":
            return B.fromArgb(255, 0, 206, 209);
          case "darkviolet":
            return B.fromArgb(255, 148, 0, 211);
          case "deeppink":
            return B.fromArgb(255, 255, 20, 147);
          case "deepskyblue":
            return B.fromArgb(255, 0, 191, 255);
          case "dimgray":
            return B.fromArgb(255, 105, 105, 105);
          case "dodgerblue":
            return B.fromArgb(255, 30, 144, 255);
          case "firebrick":
            return B.fromArgb(255, 178, 34, 34);
          case "floralwhite":
            return B.fromArgb(255, 255, 250, 240);
          case "forestgreen":
            return B.fromArgb(255, 34, 139, 34);
          case "fuchsia":
            return B.fromArgb(255, 255, 0, 255);
          case "gainsboro":
            return B.fromArgb(255, 220, 220, 220);
          case "ghostwhite":
            return B.fromArgb(255, 248, 248, 255);
          case "gold":
            return B.fromArgb(255, 255, 215, 0);
          case "goldenrod":
            return B.fromArgb(255, 218, 165, 32);
          case "gray":
            return B.fromArgb(255, 128, 128, 128);
          case "green":
            return B.fromArgb(255, 0, 128, 0);
          case "greenyellow":
            return B.fromArgb(255, 173, 255, 47);
          case "honeydew":
            return B.fromArgb(255, 240, 255, 240);
          case "hotpink":
            return B.fromArgb(255, 255, 105, 180);
          case "indianred":
            return B.fromArgb(255, 205, 92, 92);
          case "indigo":
            return B.fromArgb(255, 75, 0, 130);
          case "ivory":
            return B.fromArgb(255, 255, 255, 240);
          case "khaki":
            return B.fromArgb(255, 240, 230, 140);
          case "lavender":
            return B.fromArgb(255, 230, 230, 250);
          case "lavenderblush":
            return B.fromArgb(255, 255, 240, 245);
          case "lawngreen":
            return B.fromArgb(255, 124, 252, 0);
          case "lemonchiffon":
            return B.fromArgb(255, 255, 250, 205);
          case "lightblue":
            return B.fromArgb(255, 173, 216, 230);
          case "lightcoral":
            return B.fromArgb(255, 240, 128, 128);
          case "lightcyan":
            return B.fromArgb(255, 224, 255, 255);
          case "lightgoldenrodyellow":
            return B.fromArgb(255, 250, 250, 210);
          case "lightgray":
            return B.fromArgb(255, 211, 211, 211);
          case "lightgreen":
            return B.fromArgb(255, 144, 238, 144);
          case "lightpink":
            return B.fromArgb(255, 255, 182, 193);
          case "lightsalmon":
            return B.fromArgb(255, 255, 160, 122);
          case "lightseagreen":
            return B.fromArgb(255, 32, 178, 170);
          case "lightskyblue":
            return B.fromArgb(255, 135, 206, 250);
          case "lightslategray":
            return B.fromArgb(255, 119, 136, 153);
          case "lightsteelblue":
            return B.fromArgb(255, 176, 196, 222);
          case "lightyellow":
            return B.fromArgb(255, 255, 255, 224);
          case "lime":
            return B.fromArgb(255, 0, 255, 0);
          case "limegreen":
            return B.fromArgb(255, 50, 205, 50);
          case "linen":
            return B.fromArgb(255, 250, 240, 230);
          case "magenta":
            return B.fromArgb(255, 255, 0, 255);
          case "maroon":
            return B.fromArgb(255, 128, 0, 0);
          case "mediumaquamarine":
            return B.fromArgb(255, 102, 205, 170);
          case "mediumblue":
            return B.fromArgb(255, 0, 0, 205);
          case "mediumorchid":
            return B.fromArgb(255, 186, 85, 211);
          case "mediumpurple":
            return B.fromArgb(255, 147, 112, 219);
          case "mediumseagreen":
            return B.fromArgb(255, 60, 179, 113);
          case "mediumslateblue":
            return B.fromArgb(255, 123, 104, 238);
          case "mediumspringgreen":
            return B.fromArgb(255, 0, 250, 154);
          case "mediumturquoise":
            return B.fromArgb(255, 72, 209, 204);
          case "mediumvioletred":
            return B.fromArgb(255, 199, 21, 133);
          case "midnightblue":
            return B.fromArgb(255, 25, 25, 112);
          case "mintcream":
            return B.fromArgb(255, 245, 255, 250);
          case "mistyrose":
            return B.fromArgb(255, 255, 228, 225);
          case "moccasin":
            return B.fromArgb(255, 255, 228, 181);
          case "navajowhite":
            return B.fromArgb(255, 255, 222, 173);
          case "navy":
            return B.fromArgb(255, 0, 0, 128);
          case "oldlace":
            return B.fromArgb(255, 253, 245, 230);
          case "olive":
            return B.fromArgb(255, 128, 128, 0);
          case "olivedrab":
            return B.fromArgb(255, 107, 142, 35);
          case "orange":
            return B.fromArgb(255, 255, 165, 0);
          case "orangered":
            return B.fromArgb(255, 255, 69, 0);
          case "orchid":
            return B.fromArgb(255, 218, 112, 214);
          case "palegoldenrod":
            return B.fromArgb(255, 238, 232, 170);
          case "palegreen":
            return B.fromArgb(255, 152, 251, 152);
          case "paleturquoise":
            return B.fromArgb(255, 175, 238, 238);
          case "palevioletred":
            return B.fromArgb(255, 219, 112, 147);
          case "papayawhip":
            return B.fromArgb(255, 255, 239, 213);
          case "peachpuff":
            return B.fromArgb(255, 255, 218, 185);
          case "peru":
            return B.fromArgb(255, 205, 133, 63);
          case "pink":
            return B.fromArgb(255, 255, 192, 203);
          case "plum":
            return B.fromArgb(255, 221, 160, 221);
          case "powderblue":
            return B.fromArgb(255, 176, 224, 230);
          case "purple":
            return B.fromArgb(255, 128, 0, 128);
          case "red":
            return B.fromArgb(255, 255, 0, 0);
          case "rosybrown":
            return B.fromArgb(255, 188, 143, 143);
          case "royalblue":
            return B.fromArgb(255, 65, 105, 225);
          case "saddlebrown":
            return B.fromArgb(255, 139, 69, 19);
          case "salmon":
            return B.fromArgb(255, 250, 128, 114);
          case "sandybrown":
            return B.fromArgb(255, 244, 164, 96);
          case "seagreen":
            return B.fromArgb(255, 46, 139, 87);
          case "seashell":
            return B.fromArgb(255, 255, 245, 238);
          case "sienna":
            return B.fromArgb(255, 160, 82, 45);
          case "silver":
            return B.fromArgb(255, 192, 192, 192);
          case "skyblue":
            return B.fromArgb(255, 135, 206, 235);
          case "slateblue":
            return B.fromArgb(255, 106, 90, 205);
          case "slategray":
            return B.fromArgb(255, 112, 128, 144);
          case "snow":
            return B.fromArgb(255, 255, 250, 250);
          case "springgreen":
            return B.fromArgb(255, 0, 255, 127);
          case "steelblue":
            return B.fromArgb(255, 70, 130, 180);
          case "tan":
            return B.fromArgb(255, 210, 180, 140);
          case "teal":
            return B.fromArgb(255, 0, 128, 128);
          case "thistle":
            return B.fromArgb(255, 216, 191, 216);
          case "tomato":
            return B.fromArgb(255, 255, 99, 71);
          case "turquoise":
            return B.fromArgb(255, 64, 224, 208);
          case "violet":
            return B.fromArgb(255, 238, 130, 238);
          case "wheat":
            return B.fromArgb(255, 245, 222, 179);
          case "white":
            return B.fromArgb(255, 255, 255, 255);
          case "whitesmoke":
            return B.fromArgb(255, 245, 245, 245);
          case "yellow":
            return B.fromArgb(255, 255, 255, 0);
          case "yellowgreen":
            return B.fromArgb(255, 154, 205, 50);
          case "buttonface":
            return B.fromArgb(255, 240, 240, 240);
          case "buttonhighlight":
            return B.fromArgb(255, 255, 255, 255);
          case "buttonshadow":
            return B.fromArgb(255, 160, 160, 160);
          case "gradientactivecaption":
            return B.fromArgb(255, 185, 209, 234);
          case "gradientinactivecaption":
            return B.fromArgb(255, 215, 228, 242);
          case "menubar":
            return B.fromArgb(255, 240, 240, 240);
          case "menuhighlight":
            return B.fromArgb(255, 51, 153, 255);
        }
        return B.fromArgb(255, 255, 255, 255);
      }, B.fromHex = function(t) {
        var e = at.fromHex(t.substr(1, 2)), r = at.fromHex(t.substr(3, 2)), a = at.fromHex(t.substr(5, 2)), s = 255;
        return B.fromArgb(s, e, r, a);
      }, B.fromSimpleHex = function(t) {
        var e = at.fromHex(t.substr(0, 2)), r = at.fromHex(t.substr(2, 2)), a = at.fromHex(t.substr(4, 2)), s = at.fromHex(t.substr(6, 2));
        return B.fromArgb(e, r, a, s);
      }, B.fromInt = function(t) {
        var e = (t & 4278190080) >>> 24, r = (t & 16711680) >>> 16, a = (t & 65280) >>> 8, s = t & 255;
        return B.fromArgb(s, e, r, a);
      };
      var El = {
        toFormat: function() {
          return n.emptyString(this.name) ? n.format("rgb({0},{1},{2})", this.r.toString(), this.g.toString(), this.b.toString()) : this.name;
        },
        save: function() {
          return n.emptyString(this.name) ? n.format("{0}:{1}:{2}:{3}:{4}", 1, this.a, this.r, this.g, this.b) : n.format("{0}:{1}", 0, this.name);
        },
        toString: function() {
          return n.emptyString(this.name) ? n.format("#{0}{1}{2}", at.toHex(this.r), at.toHex(this.g), at.toHex(this.b)) : this.name;
        },
        toSimpleHex: function() {
          return n.emptyString(this.name) ? n.format("{0}{1}{2}{3}", at.toHex(this.a), at.toHex(this.r), at.toHex(this.g), at.toHex(this.b)) : this.name;
        },
        _clone: function() {
          return B.fromArgb(this.a, this.r, this.g, this.b);
        }
      };
      function ot() {
      }
      ot.get_black = function() {
        return B.fromArgb(255, 0, 0, 0);
      }, ot.get_blue = function() {
        return B.fromArgb(255, 0, 0, 255);
      }, ot.get_brown = function() {
        return B.fromArgb(255, 165, 42, 42);
      }, ot.get_cyan = function() {
        return B.fromArgb(255, 0, 255, 255);
      }, ot.get_darkGray = function() {
        return B.fromArgb(255, 169, 169, 169);
      }, ot.get_gray = function() {
        return B.fromArgb(255, 128, 128, 128);
      }, ot.get_green = function() {
        return B.fromArgb(255, 0, 255, 0);
      }, ot.get_lightGray = function() {
        return B.fromArgb(255, 211, 211, 211);
      }, ot.get_magenta = function() {
        return B.fromArgb(255, 255, 0, 255);
      }, ot.get_orange = function() {
        return B.fromArgb(255, 255, 165, 0);
      }, ot.get_purple = function() {
        return B.fromArgb(255, 128, 0, 128);
      }, ot.get_red = function() {
        return B.fromArgb(255, 255, 0, 0);
      }, ot.get_transparent = function() {
        return B.fromArgb(0, 255, 255, 255);
      }, ot.get_white = function() {
        return B.fromArgb(255, 255, 255, 255);
      }, ot.get_yellow = function() {
        return B.fromArgb(255, 255, 255, 0);
      };
      var Dl = {};
      function pt() {
        this._pointCount = 0, this._boundry = !1, this._noInterpollation = !1, this.readOnly = !1, this.radius = 1, this._drawCount = 0, this._constellationVertexBuffers = {};
      }
      pt.createBasic = function(t) {
        var e = new pt();
        e._name = t, e._url = null, e.lines = [];
        for (var r = n.enumerate(n.keys(pt.fullNames)); r.moveNext(); ) {
          var a = r.current;
          e.lines.push(new La(a));
        }
        return e;
      }, pt.create = function(t, e, r, a, s) {
        var l = new pt();
        return l._noInterpollation = a, l._boundry = r, l._name = t, l._url = e, l.getFile(), l;
      }, pt.drawConstellationNames = function(t, e, r) {
        pt._namesBatch == null && (pt.initializeConstellationNames(), pt._namesBatch == null) || pt._namesBatch.draw(t, e, r);
      }, pt.initializeConstellationNames = function() {
        if (pt.constellationCentroids != null) {
          pt._namesBatch = new Tr(z.get_active().get_constellationLabelsHeight());
          for (var t = n.enumerate(n.keys(pt.constellationCentroids)); t.moveNext(); ) {
            var e = t.current, r = pt.constellationCentroids[e], a = R.raDecTo3dAu(r.get_RA(), r.get_dec(), 1), s = L.create(0, 1, 0), l = r.get_name();
            r.get_name() === "Triangulum Australe" && (l = n.replaceString(l, " ", `
   `)), pt._namesBatch.add(new wi(a, s, l, z.get_active().get_constellationLabelsHeight(), 125e-6));
          }
        }
      }, pt.drawArtwork = function(t) {
        if (pt.artwork == null) {
          pt._artFile == null && (pt._artFile = new Mr(), pt._artFile.loadFromUrl(Kt.singleton.coreStaticUrl("wwtweb/catalog.aspx?W=hevelius"), pt._onArtReady));
          return;
        }
        pt._maxSeperation = Math.max(0.5, Math.cos(t.get_fovAngle() * 2 / 180 * Math.PI));
        for (var e = n.enumerate(pt.artwork); e.moveNext(); ) {
          var r = e.current, a = pt.pictureBlendStates[r.get_constellation()];
          if (a.set_targetState(z.get_active().get_constellationArtFilter().isSet(r.get_constellation())), a.get_state()) {
            var s = !1, l = pt.constellationCentroids[r.get_constellation()];
            if (l != null) {
              var h = R.raDecTo3d(s ? -l.get_RA() - 6 : l.get_RA(), l.get_dec());
              L.dot(t.get_viewPoint(), h) > pt._maxSeperation && t.drawImageSet(r.get_studyImageset(), 100);
            }
          }
        }
      }, pt._onArtReady = function() {
        pt._artFile.childLoadCallback(pt._loadArtList);
      }, pt._loadArtList = function() {
        pt.artwork = pt._artFile.get_places();
      }, pt.initializeConstellations = function() {
        if (pt.containment == null) {
          var t = Kt.singleton.engineAssetUrl("ConstellationNamePositions_EN.txt");
          pt._webFileConstNames = new Ai(t), pt._webFileConstNames.onStateChange = pt._loadNames, pt._webFileConstNames.send(), pt.containment = pt.create("Constellations", Kt.singleton.engineAssetUrl("constellations.txt"), !0, !0, !0);
        }
      }, pt._loadNames = function() {
        pt._webFileConstNames.get_state() === 2 ? alert(pt._webFileConstNames.get_message()) : pt._webFileConstNames.get_state() === 1 && pt._centroidsReady(pt._webFileConstNames.getText());
      }, pt._centroidsReady = function(t) {
        pt.constellationCentroids = {}, pt.fullNames = {}, pt.abbreviations = {}, pt.bitIDs = {};
        for (var e = t.split(`\r
`), r = 0, a, s = n.enumerate(e); s.moveNext(); ) {
          var l = s.current;
          a = l;
          var h = a.split(",");
          pt.fullNames[h[1]] = h[0], pt.abbreviations[h[0]] = h[1], pt.bitIDs[h[1]] = r++, pt.pictureBlendStates[h[1]] = Cr.create(!0, 1e3), pt.constellationCentroids[h[1]] = Li.create(h[0], parseFloat(h[3]), parseFloat(h[2]), 128, h[1], 2, 360);
        }
        V.set_renderNeeded(!0), Ut.buildConstellationFilters();
      }, pt.fullName = function(t) {
        return n.keyExists(pt.fullNames, t) ? pt.fullNames[t] : t;
      }, pt.abbreviation = function(t) {
        return pt.abbreviations != null && !n.emptyString(t) && n.keyExists(pt.abbreviations, t) ? pt.abbreviations[t] : t;
      };
      var Nl = {
        get_name: function() {
          return this._name;
        },
        set_name: function(t) {
          return this._name = t, t;
        },
        getFile: function() {
          this._webFile = new Ai(this._url), this._webFile.onStateChange = n.bind("fileStateChange", this), this._webFile.send();
        },
        fileStateChange: function() {
          this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && this._loadConstellationData(this._webFile.getText());
        },
        _loadConstellationData: function(t) {
          this._boundry && !this._noInterpollation && (pt.boundries = {}), this.lines = [];
          var e = null;
          try {
            for (var r = t.split(`\r
`), a, s = "", l, h, u = 0, _ = 0, m = n.enumerate(r); m.moveNext(); ) {
              var p = m.current, b = p;
              if (b.substr(11, 2) === "- " && (b = b.substr(0, 11) + " -" + b.substr(13, b.length - 13)), b.substr(11, 2) === "+ " && (b = b.substr(0, 11) + " +" + b.substr(13, b.length - 13)), h = parseFloat(b.substr(11, 10)), this._noInterpollation, l = parseFloat(b.substr(0, 10)), a = n.trim(b.substr(23, 4)), !this._boundry)
                n.trim(b.substr(28, 1)) && (_ = parseInt(b.substr(28, 1)));
              else if (this._noInterpollation && b.substr(28, 1) !== "O")
                continue;
              a !== s && (_ = 3, e = new La(a), this.lines.push(e), this._boundry && !this._noInterpollation && (pt.boundries[a] = e), s = a, u = 0), this._noInterpollation && (Math.abs(l - u) > 12 && (l = l - 24 * (l - u < 0 ? -1 : 1)), u = l);
              var S = null;
              b.length > 30 && (S = n.trim(b.substr(30))), (S == null || S !== "Empty") && e.add(l, h, _, S), this._pointCount++, _ = 1;
            }
          } catch {
          }
          V.set_renderNeeded(!0);
        },
        draw: function(t, e, r, a) {
          pt._maxSeperation = Math.max(0.6, Math.cos(t.get_fovAngle() * 2 / 180 * Math.PI)), this._drawCount = 0;
          var s = null;
          if (!(this.lines == null || pt.constellationCentroids == null)) {
            pt._constToDraw = r;
            for (var l = n.enumerate(this.lines); l.moveNext(); ) {
              var h = l.current;
              pt._constToDraw === h.get_name() && this._boundry ? s = h : (!e || !this._boundry) && this._drawSingleConstellation(t, h, 1);
            }
            s != null && this._drawSingleConstellation(t, s, 1);
          }
        },
        _drawSingleConstellation: function(t, e, r) {
          var a = pt.constellationCentroids[e.get_name()];
          if (a != null) {
            var s = R.raDecTo3d(a.get_RA(), a.get_dec());
            if (L.dot(t.get_viewPoint(), s) < pt._maxSeperation)
              return;
          }
          if (!n.keyExists(this._constellationVertexBuffers, e.get_name())) {
            var l = e.points.length, h = new fr();
            h.set_depthBuffered(!1), this._constellationVertexBuffers[e.get_name()] = h;
            for (var u = new L(), _, m = 0; m < l; m++)
              !e.points[m].pointType || !m ? u = R.raDecTo3d(e.points[m].RA, e.points[m].dec) : (_ = R.raDecTo3d(e.points[m].RA, e.points[m].dec), h.addLine(u, _), u = _);
            this._boundry && (_ = R.raDecTo3d(e.points[0].RA, e.points[0].dec), h.addLine(u, _));
          }
          var p = "red";
          this._boundry ? pt._constToDraw !== e.get_name() ? p = z.get_globalSettings().get_constellationBoundryColor() : p = z.get_globalSettings().get_constellationSelectionColor() : p = z.get_globalSettings().get_constellationFigureColor(), this._constellationVertexBuffers[e.get_name()].drawLines(t, r, B.load(p));
        },
        _drawSingleConstellationOld: function(t, e) {
          var r = pt.constellationCentroids[e.get_name()];
          if (r != null) {
            var a = R.raDecTo3d(r.get_RA(), r.get_dec());
            if (L.dot(t.get_viewPoint(), a) < pt._maxSeperation)
              return;
          }
          this._drawCount++;
          var s;
          if (this._boundry ? pt._constToDraw !== e.get_name() ? s = z.get_globalSettings().get_constellationBoundryColor() : s = z.get_globalSettings().get_constellationSelectionColor() : s = z.get_globalSettings().get_constellationFigureColor(), t.gl == null) {
            var l = t.device, h = e.points.length, u = new L();
            l.save();
            var _ = !1;
            l.beginPath(), l.strokeStyle = s, l.lineWidth = 2, l.globalAlpha = 0.25;
            for (var m = 0; m < h; m++)
              if (!e.points[m].pointType || !m)
                _ && l.stroke(), u = t.WVP.transform(R.raDecTo3d(e.points[m].RA, e.points[m].dec)), l.moveTo(u.x, u.y);
              else {
                var p = t.WVP.transform(R.raDecTo3d(e.points[m].RA, e.points[m].dec));
                l.lineTo(p.x, p.y), _ = !0;
              }
            this._boundry && l.closePath(), l.stroke(), l.restore();
          }
        },
        findConstellationForPoint: function(t, e) {
          if (e > 88.402 || this.lines == null)
            return "UMI";
          for (var r = n.enumerate(this.lines); r.moveNext(); ) {
            var a = r.current, s = a.points.length, l, h, u = !1;
            for (l = 0, h = s - 1; l < s; h = l++)
              (a.points[l].dec <= e && e < a.points[h].dec || a.points[h].dec <= e && e < a.points[l].dec) && t < (a.points[h].RA - a.points[l].RA) * (e - a.points[l].dec) / (a.points[h].dec - a.points[l].dec) + a.points[l].RA && (u = !u);
            if (u)
              return a.get_name();
          }
          return t > 0 ? this.findConstellationForPoint(t - 24, e) : e > 65.5 ? "UMI" : e < -65.5 ? "OCT" : "Error";
        }
      };
      function La(t) {
        this._name = t, this.points = [];
      }
      var Fl = {
        get_name: function() {
          return this._name;
        },
        set_name: function(t) {
          return this._name = t, t;
        },
        add: function(t, e, r, a) {
          this.points.push(new hs(t, e, r, a));
        }
      };
      function hs(t, e, r, a) {
        this.RA = 0, this.dec = 0, this.pointType = 0, this.name = null, this.RA = t, this.dec = e, this.pointType = r, this.name = a;
      }
      var zl = {
        toString: function() {
          return n.emptyString(this.name) ? R.formatDMS((this.RA / 360 * 24 + 12) % 24) + ", " + R.formatDMS(this.dec) + ", " + this.pointType.toString() : this.name + ", " + this.pointType.toString();
        }
      };
      function Ut() {
        this.bits = new Array(3), this.oldBits = new Array(3), this.blendState = Cr.create(!1, 1e3), this.internal = !1, this.settingsOwned = !1;
        for (var t = 0; t < 3; t++)
          this.bits[t] = ~this.bits[t], this.oldBits[t] = this.bits[t];
      }
      Ut.buildConstellationFilters = function() {
        var t = Ut.get_allConstellation();
        t.internal = !0, Ut.families.AllConstellation = t, Ut.families.Zodiacal = Ut.get_zodiacal(), Ut.families["Ursa Major Family"] = Ut.get_ursaMajorFamily(), Ut.families["Perseus Family"] = Ut.get_perseusFamily(), Ut.families["Hercules Family"] = Ut.get_herculesFamily(), Ut.families["Orion Family"] = Ut.get_orionFamily(), Ut.families["Heavenly Waters"] = Ut.get_heavenlyWaters(), Ut.families["Bayer Family"] = Ut.get_bayerFamily(), Ut.families["La Caille Family"] = Ut.get_laCaileFamily();
      }, Ut.saveCustomFilters = function() {
        var t = new n.StringBuilder(), e = Ut.families;
        for (var r in e) {
          var a = { key: r, value: e[r] };
          a.value.internal || (t.append(a.key), t.append(";"), t.appendLine(a.value.toString()));
        }
      }, Ut.get_allConstellation = function() {
        var t = new Ut();
        return t.setAll(!0), t;
      }, Ut.get_zodiacal = function() {
        var t = new Ut();
        return t.set("ARI", !0), t.set("TAU", !0), t.set("GEM", !0), t.set("CNC", !0), t.set("LEO", !0), t.set("VIR", !0), t.set("LIB", !0), t.set("SCO", !0), t.set("SGR", !0), t.set("CAP", !0), t.set("AQR", !0), t.set("PSC", !0), t.internal = !0, t;
      }, Ut.get_ursaMajorFamily = function() {
        var t = new Ut();
        return t.set("UMA", !0), t.set("UMI", !0), t.set("DRA", !0), t.set("CVN", !0), t.set("BOO", !0), t.set("COM", !0), t.set("CRB", !0), t.set("CAM", !0), t.set("LYN", !0), t.set("LMI", !0), t.internal = !0, t;
      }, Ut.get_perseusFamily = function() {
        var t = new Ut();
        return t.set("CAS", !0), t.set("CEP", !0), t.set("AND", !0), t.set("PER", !0), t.set("PEG", !0), t.set("CET", !0), t.set("AUR", !0), t.set("LAC", !0), t.set("TRI", !0), t.internal = !0, t;
      }, Ut.get_herculesFamily = function() {
        var t = new Ut();
        return t.set("HER", !0), t.set("SGE", !0), t.set("AQL", !0), t.set("LYR", !0), t.set("CYG", !0), t.set("VUL", !0), t.set("HYA", !0), t.set("SEX", !0), t.set("CRT", !0), t.set("CRV", !0), t.set("OPH", !0), t.set("SER1", !0), t.set("SER2", !0), t.set("SCT", !0), t.set("CEN", !0), t.set("LUP", !0), t.set("CRA", !0), t.set("ARA", !0), t.set("TRA", !0), t.set("CRU", !0), t.internal = !0, t;
      }, Ut.get_orionFamily = function() {
        var t = new Ut();
        return t.set("ORI", !0), t.set("CMA", !0), t.set("CMI", !0), t.set("MON", !0), t.set("LEP", !0), t.internal = !0, t;
      }, Ut.get_heavenlyWaters = function() {
        var t = new Ut();
        return t.set("DEL", !0), t.set("EQU", !0), t.set("ERI", !0), t.set("PSA", !0), t.set("CAR", !0), t.set("PUP", !0), t.set("VEL", !0), t.set("PYX", !0), t.set("COL", !0), t.internal = !0, t;
      }, Ut.get_bayerFamily = function() {
        var t = new Ut();
        return t.set("HYA", !0), t.set("DOR", !0), t.set("VOL", !0), t.set("APS", !0), t.set("PAV", !0), t.set("GRU", !0), t.set("PHE", !0), t.set("TUC", !0), t.set("IND", !0), t.set("CHA", !0), t.set("MUS", !0), t.internal = !0, t;
      }, Ut.get_laCaileFamily = function() {
        var t = new Ut();
        return t.set("NOR", !0), t.set("CIR", !0), t.set("TEL", !0), t.set("MIC", !0), t.set("SCL", !0), t.set("FOR", !0), t.set("CAE", !0), t.set("HOR", !0), t.set("OCT", !0), t.set("MEN", !0), t.set("RET", !0), t.set("PIC", !0), t.set("ANT", !0), t.internal = !0, t;
      }, Ut.parse = function(t) {
        var e = t.split(","), r = new Ut();
        try {
          for (var a = 0; a < 3; a++)
            r.bits[a] = parseInt(e[a]);
        } catch {
        }
        return r;
      };
      var Bl = {
        _saveBits: function() {
          for (var t = 0; t < 3; t++)
            this.oldBits[t] = this.bits[t];
        },
        _isChanged: function() {
          for (var t = 0; t < 3; t++)
            if (this.oldBits[t] !== this.bits[t])
              return !0;
          return !1;
        },
        _checkChanged: function() {
          this._isChanged() && this._fireChanged();
        },
        isEnabled: function(t) {
          var e = pt.bitIDs[t], r = e / 32;
          return e = e % 32, this.blendState.get_state() && !!(1 << e & this.bits[r]);
        },
        isSet: function(t) {
          this._saveBits();
          var e = pt.bitIDs[t], r = n.truncate(e / 32);
          return e = e % 32, !!(1 << e & this.bits[r]);
        },
        set: function(t, e) {
          this._saveBits();
          var r = pt.bitIDs[t], a = r / 32;
          r = r % 32, e ? this.bits[a] = this.bits[a] | 1 << r : this.bits[a] = this.bits[a] ^ 1 << r, this._checkChanged();
        },
        setAll: function(t) {
          this._saveBits();
          for (var e = 0; e < 89; e++) {
            var r = e / 32, a = e % 32;
            t ? this.bits[r] = this.bits[r] | 1 << a : this.bits[r] = this.bits[r] ^ 1 << a;
          }
          this._checkChanged();
        },
        setBits: function(t) {
          this._saveBits();
          for (var e = 0; e < 3; e++)
            this.bits[e] = t[e * 4] + (t[e * 4 + 1] << 8) + (t[e * 4 + 2] << 16) + (t[e * 4 + 3] << 24);
          this._checkChanged();
        },
        getBits: function() {
          for (var t = new Array(12), e = 0, r = 0; r < 3; r++)
            t[e++] = this.bits[r], t[e++] = this.bits[r] >> 8, t[e++] = this.bits[r] >> 16, t[e++] = this.bits[r] >> 24;
          return t;
        },
        cloneFilter: function(t) {
          this._saveBits();
          for (var e = 0; e < 3; e++)
            this.bits[e] = t.bits[e];
          this._checkChanged();
        },
        clone: function() {
          var t = new Ut();
          return t.cloneFilter(this), t;
        },
        combine: function(t) {
          this._saveBits();
          for (var e = 0; e < 3; e++)
            this.bits[e] = this.bits[e] | t.bits[e];
          this._checkChanged();
        },
        remove: function(t) {
          this._saveBits();
          for (var e = 0; e < 3; e++)
            this.bits[e] = this.bits[e] & ~t.bits[e];
          this._checkChanged();
        },
        _fireChanged: function() {
          this.settingsOwned;
        },
        toString: function() {
          return n.format("{0},{1},{2}", this.bits[0], this.bits[1], this.bits[2]);
        }
      };
      function dt() {
        this.tu = 0, this.tv = 0, this.position = new L();
      }
      dt.createPos = function(t, e, r) {
        var a = new dt();
        return a.tu = e * F.uvMultiple, a.tv = r * F.uvMultiple, a.position = t, a;
      }, dt.createPosRaw = function(t, e, r) {
        var a = new dt();
        return a.tu = e, a.tv = r, a.position = t, a;
      }, dt.createPosSize = function(t, e, r, a, s) {
        var l = new dt();
        return l.tu = e * a, l.tv = r * s, l.position = t, l;
      }, dt.create = function(t, e, r, a, s) {
        var l = new dt();
        return l.position = L.create(t, e, r), l.tu = a * F.uvMultiple, l.tv = s * F.uvMultiple, l;
      };
      var Vl = {
        copy: function() {
          var t = new dt();
          return t.position = L.makeCopy(this.position), t.tu = this.tu, t.tv = this.tv, t;
        },
        toString: function() {
          return n.format("{0}, {1}, {2}, {3}, {4}", this.position.x, this.position.y, this.position.z, this.tu, this.tv);
        }
      };
      function ne() {
        this.tu = 0, this.tv = 0, this.color = new B(), this.position = new L();
      }
      ne.createPos = function(t, e, r) {
        var a = new ne();
        return a.tu = e * F.uvMultiple, a.tv = r * F.uvMultiple, a.position = t, a;
      }, ne.createPosRaw = function(t, e, r) {
        var a = new ne();
        return a.tu = e, a.tv = r, a.position = t, a;
      }, ne.createPosSize = function(t, e, r, a, s) {
        var l = new ne();
        return l.tu = e * a, l.tv = r * s, l.position = t, l;
      }, ne.create = function(t, e, r, a, s) {
        var l = new dt();
        return l.position = L.create(t, e, r), l.tu = a * F.uvMultiple, l.tv = s * F.uvMultiple, l;
      };
      var Ol = {
        copy: function() {
          var t = new dt();
          return t.position = L.makeCopy(this.position), t.tu = this.tu, t.tv = this.tv, t;
        },
        toString: function() {
          return n.format("{0}, {1}, {2}, {3}, {4}", this.position.x, this.position.y, this.position.z, this.tu, this.tv);
        }
      };
      function qn(t, e) {
        this.color = new B(), this.color = e._clone(), this.position = t.copy();
      }
      var Ul = {
        copy: function() {
          var t = new qn(this.position, this.color);
          return t;
        },
        toString: function() {
          return n.format("{0}, {1}, {2}, {3}", this.position.x, this.position.y, this.position.z, this.color.toString());
        }
      };
      function cs(t, e, r, a) {
        this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0, this.tanx = 0, this.tany = 0, this.tanz = 0, this.x = t.x, this.y = t.y, this.z = t.z, this.nx = e.x, this.ny = e.y, this.nz = e.z, this.tu = r.x, this.tv = r.y, this.tanx = a.x, this.tany = a.y, this.tanz = a.z;
      }
      var Gl = {
        get_normal: function() {
          return L.create(this.nx, this.ny, this.nz);
        },
        set_normal: function(t) {
          return this.nx = t.x, this.ny = t.y, this.nz = t.z, t;
        },
        get_position: function() {
          return L.create(this.x, this.y, this.z);
        },
        set_position: function(t) {
          return this.x = t.x, this.y = t.y, this.z = t.z, t;
        },
        get_texCoord: function() {
          return lt.create(this.tu, this.tv);
        },
        set_texCoord: function(t) {
          return this.tu = t.x, this.tv = t.y, t;
        },
        get_tangent: function() {
          return L.create(this.tanx, this.tany, this.tanz);
        },
        set_tangent: function(t) {
          return this.tanx = t.x, this.tany = t.y, this.tanz = t.z, t;
        },
        toString: function() {
          return n.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, TanX={8}, TanY={9}, TanZ={10}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv, this.tanx, this.tany, this.tanz);
        }
      };
      function L() {
        this.x = 0, this.y = 0, this.z = 0;
      }
      L.create = function(t, e, r) {
        var a = new L();
        return a.x = t, a.y = e, a.z = r, a;
      }, L.makeCopy = function(t) {
        var e = new L();
        return e.x = t.x, e.y = t.y, e.z = t.z, e;
      }, L.negate = function(t) {
        return L.create(-t.x, -t.y, -t.z);
      }, L.midPoint = function(t, e) {
        var r = L.create((t.x + e.x) / 2, (t.y + e.y) / 2, (t.z + e.z) / 2);
        return r;
      }, L.midPointByLength = function(t, e) {
        var r = L.create((t.x + e.x) / 2, (t.y + e.y) / 2, (t.z + e.z) / 2);
        return r.normalize(), r.multiply(t.length()), r;
      }, L.get_empty = function() {
        return L.create(0, 0, 0);
      }, L.addVectors = function(t, e) {
        return L.create(t.x + e.x, t.y + e.y, t.z + e.z);
      }, L.cross = function(t, e) {
        return L.create(t.y * e.z - t.z * e.y, t.z * e.x - t.x * e.z, t.x * e.y - t.y * e.x);
      }, L.dot = function(t, e) {
        return t.x * e.x + t.y * e.y + t.z * e.z;
      }, L.getLength = function(t) {
        return Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z);
      }, L.getLengthSq = function(t) {
        return t.x * t.x + t.y * t.y + t.z * t.z;
      }, L.lerp = function(t, e, r) {
        return L.create(t.x * (1 - r) + e.x * r, t.y * (1 - r) + e.y * r, t.z * (1 - r) + e.z * r);
      }, L.midpoint = function(t, e) {
        var r = L.create(t.x * 0.5 + e.x * 0.5, t.y * 0.5 + e.y * 0.5, t.z * 0.5 + e.z * 0.5);
        return r.normalize(), r;
      }, L.slerp = function(t, e, r) {
        for (var a = L.dot(t, e); a < 0.98; ) {
          var s = L.midpoint(t, e);
          r > 0.5 ? (t = s, r -= 0.5, r *= 2) : (e = s, r *= 2), a = L.dot(t, e);
        }
        var l = L.lerp(t, e, r);
        return l.normalize(), l;
      }, L.multiplyScalar = function(t, e) {
        var r = t.copy();
        return r.multiply(e), r;
      }, L.scale = function(t, e) {
        var r = t;
        return r.multiply(e), r;
      }, L.subtractVectors = function(t, e) {
        var r = t.copy();
        return r.subtract(e), r;
      }, L.parse = function(t) {
        var e = new L(), r = t.split(",");
        return r.length === 3 && (e.x = parseFloat(r[0]), e.y = parseFloat(r[1]), e.z = parseFloat(r[2])), e;
      }, L._transformCoordinate = function(t, e) {
        return e.transform(t);
      };
      var Hl = {
        set: function(t, e, r) {
          this.x = t, this.y = e, this.z = r;
        },
        copy: function() {
          var t = new L();
          return t.x = this.x, t.y = this.y, t.z = this.z, t;
        },
        round: function() {
          this.x = n.truncate(this.x * 65536) / 65536, this.y = n.truncate(this.y * 65536) / 65536, this.z = n.truncate(this.z * 65536) / 65536;
        },
        add: function(t) {
          this.x += t.x, this.y += t.y, this.z += t.z;
        },
        length: function() {
          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
        },
        lengthSq: function() {
          return this.x * this.x + this.y * this.y + this.z * this.z;
        },
        multiply: function(t) {
          this.x *= t, this.y *= t, this.z *= t;
        },
        normalize: function() {
          var t = this.length();
          t && (this.x /= t, this.y /= t, this.z /= t);
        },
        rotateX: function(t) {
          var e, r;
          r = this.y * Math.cos(t) - this.z * Math.sin(t), e = this.y * Math.sin(t) + this.z * Math.cos(t), this.z = e, this.y = r;
        },
        rotateZ: function(t) {
          var e, r;
          e = this.x * Math.cos(t) - this.y * Math.sin(t), r = this.x * Math.sin(t) + this.y * Math.cos(t), this.y = r, this.x = e;
        },
        rotateY: function(t) {
          var e, r;
          e = this.z * Math.cos(t) - this.x * Math.sin(t), r = this.z * Math.sin(t) + this.x * Math.cos(t), this.x = r, this.z = e;
        },
        subtract: function(t) {
          return this.x -= t.x, this.y -= t.y, this.z -= t.z, this;
        },
        toString: function() {
          return n.format("{0}, {1}, {2}", this.x, this.y, this.z);
        },
        toSpherical: function() {
          var t, e, r = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z), a = Math.sqrt(this.x * this.x + this.z * this.z);
          return e = Math.asin(this.y / r), a ? 0 <= this.x ? t = Math.asin(this.z / a) : t = Math.PI - Math.asin(this.z / a) : t = 0, lt.create((t + Math.PI) % (2 * Math.PI), e + Math.PI / 2);
        },
        toRaDec: function() {
          var t = this.toSpherical();
          return t.x = t.x / Math.PI * 12, t.y = t.y / Math.PI * 180 - 90, t;
        },
        distanceToLine: function(t, e) {
          var r = L.subtractVectors(e, t), a = L.subtractVectors(t, this), s = L.cross(r, a), l = s.length(), h = L.subtractVectors(e, t), u = h.length();
          return l / u;
        },
        _transformByMatrics: function(t) {
          var e = t.transform(this);
          this.x = e.x, this.y = e.y, this.z = e.z;
        }
      };
      function lt() {
        this.x = 0, this.y = 0;
      }
      lt.lerp = function(t, e, r) {
        return lt.create(t.x * (1 - r) + e.x * r, t.y * (1 - r) + e.y * r);
      }, lt.cartesianToSpherical2 = function(t) {
        var e = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), r = Math.atan2(t.z, t.x), a = Math.asin(t.y / e);
        return lt.create(r / Math.PI * 180, a / Math.PI * 180);
      }, lt.average3d = function(t, e) {
        var r = R.geoTo3dDouble(t.y, t.x), a = R.geoTo3dDouble(e.y, e.x), s = L.addVectors(r, a);
        return s.multiply(0.5), s.normalize(), lt.cartesianToSpherical2(s);
      }, lt.create = function(t, e) {
        var r = new lt();
        return r.x = t, r.y = e, r;
      }, lt.subtract = function(t, e) {
        return lt.create(t.x - e.x, t.y - e.y);
      };
      var Xl = {
        distance3d: function(t) {
          var e = R.geoTo3dDouble(t.y, t.x), r = R.geoTo3dDouble(this.y, this.x), a = L.subtractVectors(e, r);
          return a.length() / Math.PI * 180;
        },
        get_length: function() {
          return Math.sqrt(this.x * this.x + this.y * this.y);
        },
        normalize: function() {
          var t = this.get_length();
          t && (this.x /= t, this.y /= t);
        },
        extend: function(t) {
          this.x = this.x * t, this.y = this.y * t;
        }
      };
      function H() {
        this._m11 = 0, this._m12 = 0, this._m13 = 0, this._m14 = 0, this._m21 = 0, this._m22 = 0, this._m23 = 0, this._m24 = 0, this._m31 = 0, this._m32 = 0, this._m33 = 0, this._m34 = 0, this._offsetX = 0, this._offsetY = 0, this._offsetZ = 0, this._m44 = 0, this._isNotKnownToBeIdentity = !1;
      }
      H.create = function(t, e, r, a, s, l, h, u, _, m, p, b, S, x, k, P) {
        var I = new H();
        return I._m11 = t, I._m12 = e, I._m13 = r, I._m14 = a, I._m21 = s, I._m22 = l, I._m23 = h, I._m24 = u, I._m31 = _, I._m32 = m, I._m33 = p, I._m34 = b, I._offsetX = S, I._offsetY = x, I._offsetZ = k, I._m44 = P, I._isNotKnownToBeIdentity = !0, I;
      }, H.get_identity = function() {
        var t = new H();
        return t.set(H._s_identity), t;
      }, H.multiplyMatrix = function(t, e) {
        return t.get__isDistinguishedIdentity() ? e : e.get__isDistinguishedIdentity() ? t : H.create(t._m11 * e._m11 + t._m12 * e._m21 + t._m13 * e._m31 + t._m14 * e._offsetX, t._m11 * e._m12 + t._m12 * e._m22 + t._m13 * e._m32 + t._m14 * e._offsetY, t._m11 * e._m13 + t._m12 * e._m23 + t._m13 * e._m33 + t._m14 * e._offsetZ, t._m11 * e._m14 + t._m12 * e._m24 + t._m13 * e._m34 + t._m14 * e._m44, t._m21 * e._m11 + t._m22 * e._m21 + t._m23 * e._m31 + t._m24 * e._offsetX, t._m21 * e._m12 + t._m22 * e._m22 + t._m23 * e._m32 + t._m24 * e._offsetY, t._m21 * e._m13 + t._m22 * e._m23 + t._m23 * e._m33 + t._m24 * e._offsetZ, t._m21 * e._m14 + t._m22 * e._m24 + t._m23 * e._m34 + t._m24 * e._m44, t._m31 * e._m11 + t._m32 * e._m21 + t._m33 * e._m31 + t._m34 * e._offsetX, t._m31 * e._m12 + t._m32 * e._m22 + t._m33 * e._m32 + t._m34 * e._offsetY, t._m31 * e._m13 + t._m32 * e._m23 + t._m33 * e._m33 + t._m34 * e._offsetZ, t._m31 * e._m14 + t._m32 * e._m24 + t._m33 * e._m34 + t._m34 * e._m44, t._offsetX * e._m11 + t._offsetY * e._m21 + t._offsetZ * e._m31 + t._m44 * e._offsetX, t._offsetX * e._m12 + t._offsetY * e._m22 + t._offsetZ * e._m32 + t._m44 * e._offsetY, t._offsetX * e._m13 + t._offsetY * e._m23 + t._offsetZ * e._m33 + t._m44 * e._offsetZ, t._offsetX * e._m14 + t._offsetY * e._m24 + t._offsetZ * e._m34 + t._m44 * e._m44);
      }, H.lookAtLH = function(t, e, r) {
        var a = L.subtractVectors(e, t);
        a.normalize();
        var s = L.cross(r, a);
        s.normalize();
        var l = L.cross(a, s), h = H.create(s.x, l.x, a.x, 0, s.y, l.y, a.y, 0, s.z, l.z, a.z, 0, -L.dot(s, t), -L.dot(l, t), -L.dot(a, t), 1);
        return h;
      }, H._createIdentity = function() {
        var t = H.create(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        return t.set__isDistinguishedIdentity(!0), t;
      }, H.equals = function(t, e) {
        return t.get__isDistinguishedIdentity() || e.get__isDistinguishedIdentity() ? t.get_isIdentity() === e.get_isIdentity() : t.get_m11() === e.get_m11() && t.get_m12() === e.get_m12() && t.get_m13() === e.get_m13() && t.get_m14() === e.get_m14() && t.get_m21() === e.get_m21() && t.get_m22() === e.get_m22() && t.get_m23() === e.get_m23() && t.get_m24() === e.get_m24() && t.get_m31() === e.get_m31() && t.get_m32() === e.get_m32() && t.get_m33() === e.get_m33() && t.get_m34() === e.get_m34() && t.get_offsetX() === e.get_offsetX() && t.get_offsetY() === e.get_offsetY() && t.get_offsetZ() === e.get_offsetZ() ? t.get_m44() === e.get_m44() : !1;
      }, H.fromMatrix2d = function(t) {
        var e = H._createIdentity();
        return e.set_m11(t.m11), e.set_m12(t.m12), e.set_m13(t.m13), e.set_m21(t.m21), e.set_m22(t.m22), e.set_m23(t.m23), e.set_m31(t.m31), e.set_m32(t.m32), e.set_m33(t.m33), e._isNotKnownToBeIdentity = !0, e;
      }, H.rotationYawPitchRoll = function(t, e, r) {
        var a = H._rotationX(e), s = H._rotationY(t), l = H._rotationZ(r);
        return H.multiplyMatrix(H.multiplyMatrix(s, a), l);
      }, H._rotationY = function(t) {
        var e = t, r = H.get_identity();
        return r._m11 = Math.cos(e), r._m22 = 1, r._m31 = Math.sin(e), r._m13 = -Math.sin(e), r._m33 = Math.cos(e), r._isNotKnownToBeIdentity = !0, r;
      }, H._rotationX = function(t) {
        var e = t, r = H.get_identity();
        return r._m11 = 1, r._m22 = Math.cos(e), r._m32 = -Math.sin(e), r._m23 = Math.sin(e), r._m33 = Math.cos(e), r._isNotKnownToBeIdentity = !0, r;
      }, H._rotationZ = function(t) {
        var e = t, r = H.get_identity();
        return r._m11 = Math.cos(e), r._m21 = -Math.sin(e), r._m12 = Math.sin(e), r._m22 = Math.cos(e), r._m33 = 1, r._isNotKnownToBeIdentity = !0, r;
      }, H._scaling = function(t, e, r) {
        var a = H.get_identity();
        return a._m11 = t, a._m22 = e, a._m33 = r, a._isNotKnownToBeIdentity = !0, a;
      }, H._translationXYZ = function(t, e, r) {
        var a = H.get_identity();
        return a.set_offsetX(t), a.set_offsetY(e), a.set_offsetZ(r), a._isNotKnownToBeIdentity = !0, a;
      }, H.perspectiveFovLH = function(t, e, r, a) {
        var s = 1 / Math.tan(t / 2), l = s / e;
        return H.create(l, 0, 0, 0, 0, s, 0, 0, 0, 0, a / (a - r), 1, 0, 0, -r * a / (a - r), 0);
      }, H.perspectiveOffCenterLH = function(t, e, r, a, s, l) {
        return H.create(2 * s / (e - t), 0, 0, 0, 0, 2 * s / (a - r), 0, 0, (t + e) / (t - e), (a + r) / (r - a), l / (l - s), 1, 0, 0, s * l / (s - l), 0);
      }, H.invertMatrix = function(t) {
        var e = t.clone();
        return e.invert(), e;
      }, H.translation = function(t) {
        return H._translationXYZ(t.x, t.y, t.z);
      }, H.getMapMatrix = function(t, e, r, a) {
        var s = 0, l = 0;
        s = -((t.get_lng() + 180 - e / 2) / 360), l = -(1 - (t.get_lat() + 90 + r / 2) / 180);
        var h = new Ge(), u = 0, _ = 0;
        return u = 360 / e, _ = 180 / r, h = Ge.multiply(h, Ge.translation(s, l)), h = Ge.multiply(h, Ge.scaling(u, _)), a && (h = Ge.multiply(h, Ge.translation(-0.5, -0.5)), h = Ge.multiply(h, Ge.rotation(a)), h = Ge.multiply(h, Ge.translation(0.5, 0.5))), H.fromMatrix2d(h);
      };
      var ql = {
        clone: function() {
          var t = new H();
          return t.set(this), t;
        },
        setIdentity: function() {
          this.set(H._s_identity);
        },
        set: function(t) {
          this._m11 = t._m11, this._m12 = t._m12, this._m13 = t._m13, this._m14 = t._m14, this._m21 = t._m21, this._m22 = t._m22, this._m23 = t._m23, this._m24 = t._m24, this._m31 = t._m31, this._m32 = t._m32, this._m33 = t._m33, this._m34 = t._m34, this._offsetX = t._offsetX, this._offsetY = t._offsetY, this._offsetZ = t._offsetZ, this._m44 = t._m44, this._isNotKnownToBeIdentity = !0;
        },
        floatArray: function() {
          var t = new Array(16);
          return t[0] = this._m11, t[1] = this._m12, t[2] = this._m13, t[3] = this._m14, t[4] = this._m21, t[5] = this._m22, t[6] = this._m23, t[7] = this._m24, t[8] = this._m31, t[9] = this._m32, t[10] = this._m33, t[11] = this._m34, t[12] = this._offsetX, t[13] = this._offsetY, t[14] = this._offsetZ, t[15] = this._m44, t;
        },
        get_isIdentity: function() {
          return this.get__isDistinguishedIdentity() ? !0 : this._m11 === 1 && !this._m12 && !this._m13 && !this._m14 && !this._m21 && this._m22 === 1 && !this._m23 && !this._m24 && !this._m31 && !this._m32 && this._m33 === 1 && !this._m34 && !this._offsetX && !this._offsetY && !this._offsetZ && this._m44 === 1 ? (this.set__isDistinguishedIdentity(!0), !0) : !1;
        },
        prepend: function(t) {
          this.set(H.multiplyMatrix(t, this));
        },
        append: function(t) {
          this._multiply(t);
        },
        scale: function(t) {
          this.get__isDistinguishedIdentity() ? this._setScaleMatrix(t) : (this._m11 *= t.x, this._m12 *= t.y, this._m13 *= t.z, this._m21 *= t.x, this._m22 *= t.y, this._m23 *= t.z, this._m31 *= t.x, this._m32 *= t.y, this._m33 *= t.z, this._offsetX *= t.x, this._offsetY *= t.y, this._offsetZ *= t.z);
        },
        scalePrepend: function(t) {
          this.get__isDistinguishedIdentity() ? this._setScaleMatrix(t) : (this._m11 *= t.x, this._m12 *= t.x, this._m13 *= t.x, this._m14 *= t.x, this._m21 *= t.y, this._m22 *= t.y, this._m23 *= t.y, this._m24 *= t.y, this._m31 *= t.z, this._m32 *= t.z, this._m33 *= t.z, this._m34 *= t.z);
        },
        scaleAt: function(t, e) {
          if (this.get__isDistinguishedIdentity())
            this._setScaleMatrixCenter(t, e);
          else {
            var r = this._m14 * e.x;
            this._m11 = r + t.x * (this._m11 - r), r = this._m14 * e.y, this._m12 = r + t.y * (this._m12 - r), r = this._m14 * e.z, this._m13 = r + t.z * (this._m13 - r), r = this._m24 * e.x, this._m21 = r + t.x * (this._m21 - r), r = this._m24 * e.y, this._m22 = r + t.y * (this._m22 - r), r = this._m24 * e.z, this._m23 = r + t.z * (this._m23 - r), r = this._m34 * e.x, this._m31 = r + t.x * (this._m31 - r), r = this._m34 * e.y, this._m32 = r + t.y * (this._m32 - r), r = this._m34 * e.z, this._m33 = r + t.z * (this._m33 - r), r = this._m44 * e.x, this._offsetX = r + t.x * (this._offsetX - r), r = this._m44 * e.y, this._offsetY = r + t.y * (this._offsetY - r), r = this._m44 * e.z, this._offsetZ = r + t.z * (this._offsetZ - r);
          }
        },
        scaleAtPrepend: function(t, e) {
          if (this.get__isDistinguishedIdentity())
            this._setScaleMatrixCenter(t, e);
          else {
            var r = e.x - e.x * t.x, a = e.y - e.y * t.y, s = e.z - e.z * t.z;
            this._offsetX += this._m11 * r + this._m21 * a + this._m31 * s, this._offsetY += this._m12 * r + this._m22 * a + this._m32 * s, this._offsetZ += this._m13 * r + this._m23 * a + this._m33 * s, this._m44 += this._m14 * r + this._m24 * a + this._m34 * s, this._m11 *= t.x, this._m12 *= t.x, this._m13 *= t.x, this._m14 *= t.x, this._m21 *= t.y, this._m22 *= t.y, this._m23 *= t.y, this._m24 *= t.y, this._m31 *= t.z, this._m32 *= t.z, this._m33 *= t.z, this._m34 *= t.z;
          }
        },
        translate: function(t) {
          this.get__isDistinguishedIdentity() ? this._setTranslationMatrix(t) : (this._m11 += this._m14 * t.x, this._m12 += this._m14 * t.y, this._m13 += this._m14 * t.z, this._m21 += this._m24 * t.x, this._m22 += this._m24 * t.y, this._m23 += this._m24 * t.z, this._m31 += this._m34 * t.x, this._m32 += this._m34 * t.y, this._m33 += this._m34 * t.z, this._offsetX += this._m44 * t.x, this._offsetY += this._m44 * t.y, this._offsetZ += this._m44 * t.z);
        },
        translatePrepend: function(t) {
          this.get__isDistinguishedIdentity() ? this._setTranslationMatrix(t) : (this._offsetX += this._m11 * t.x + this._m21 * t.y + this._m31 * t.z, this._offsetY += this._m12 * t.x + this._m22 * t.y + this._m32 * t.z, this._offsetZ += this._m13 * t.x + this._m23 * t.y + this._m33 * t.z, this._m44 += this._m14 * t.x + this._m24 * t.y + this._m34 * t.z);
        },
        transform: function(t) {
          var e = new L();
          if (!this.get__isDistinguishedIdentity()) {
            var r = t.x, a = t.y, s = t.z;
            if (e.x = r * this._m11 + a * this._m21 + s * this._m31 + this._offsetX, e.y = r * this._m12 + a * this._m22 + s * this._m32 + this._offsetY, e.z = r * this._m13 + a * this._m23 + s * this._m33 + this._offsetZ, !this.get_isAffine()) {
              var l = r * this._m14 + a * this._m24 + s * this._m34 + this._m44;
              e.x /= l, e.y /= l, e.z /= l;
            }
          }
          return e;
        },
        _transformTo: function(t, e) {
          e.x = t.x * this._m11 + t.y * this._m21 + t.z * this._m31 + this._offsetX, e.y = t.x * this._m12 + t.y * this._m22 + t.z * this._m32 + this._offsetY, e.z = t.x * this._m13 + t.y * this._m23 + t.z * this._m33 + this._offsetZ;
          var r = t.x * this._m14 + t.y * this._m24 + t.z * this._m34 + this._m44;
          e.x /= r, e.y /= r, e.z /= r;
        },
        transformArray: function(t) {
          if (t != null)
            for (var e = 0; e < t.length; e++)
              this._multiplyPoint(t[e]);
        },
        projectArrayToScreen: function(t, e) {
          if (t != null && e != null)
            for (var r = this.get_isAffine(), a = 0; a < t.length; a++) {
              var s = t[a].x, l = t[a].y, h = t[a].z;
              if (r)
                e[a].x = s * this._m11 + l * this._m21 + h * this._m31 + this._offsetX, e[a].y = s * this._m12 + l * this._m22 + h * this._m32 + this._offsetY, e[a].z = s * this._m13 + l * this._m23 + h * this._m33 + this._offsetZ;
              else {
                var u = s * this._m14 + l * this._m24 + h * this._m34 + this._m44;
                e[a].x = (s * this._m11 + l * this._m21 + h * this._m31 + this._offsetX) / u, e[a].y = (s * this._m12 + l * this._m22 + h * this._m32 + this._offsetY) / u, e[a].z = (s * this._m13 + l * this._m23 + h * this._m33 + this._offsetZ) / u;
              }
            }
        },
        projectToScreen: function(t, e, r) {
          var a = new L(), s = t.x, l = t.y, h = t.z;
          if (this.get_isAffine())
            a.x = (s * this._m11 + l * this._m21 + h * this._m31 + this._offsetX + 0.5) * e, a.y = (-(s * this._m12 + l * this._m22 + h * this._m32 + this._offsetY) + 0.5) * r, a.z = s * this._m13 + l * this._m23 + h * this._m33 + this._offsetZ;
          else {
            var u = s * this._m14 + l * this._m24 + h * this._m34 + this._m44;
            a.x = ((s * this._m11 + l * this._m21 + h * this._m31 + this._offsetX) / u + 0.5) * e, a.y = (-((s * this._m12 + l * this._m22 + h * this._m32 + this._offsetY) / u) + 0.5) * r, a.z = (s * this._m13 + l * this._m23 + h * this._m33 + this._offsetZ) / u;
          }
          return a;
        },
        get_isAffine: function() {
          return this.get__isDistinguishedIdentity() ? !0 : !this._m14 && !this._m24 && !this._m34 ? this._m44 === 1 : !1;
        },
        get_determinant: function() {
          if (this.get__isDistinguishedIdentity())
            return 1;
          if (this.get_isAffine())
            return this._getNormalizedAffineDeterminant();
          var t = this._m13 * this._m24 - this._m23 * this._m14, e = this._m13 * this._m34 - this._m33 * this._m14, r = this._m13 * this._m44 - this._offsetZ * this._m14, a = this._m23 * this._m34 - this._m33 * this._m24, s = this._m23 * this._m44 - this._offsetZ * this._m24, l = this._m33 * this._m44 - this._offsetZ * this._m34, h = this._m22 * e - this._m32 * t - this._m12 * a, u = this._m12 * s - this._m22 * r + this._offsetY * t, _ = this._m32 * r - this._offsetY * e - this._m12 * l, m = this._m22 * l - this._m32 * s + this._offsetY * a;
          return this._offsetX * h + this._m31 * u + this._m21 * _ + this._m11 * m;
        },
        get_hasInverse: function() {
          return !Zi.isZero(this.get_determinant());
        },
        invert: function() {
          this._invertCore();
        },
        transpose: function() {
          var t = new H();
          t.set(this), this._m12 = t._m21, this._m13 = t._m31, this._m14 = t._offsetX, this._m23 = t._m32, this._m24 = t._offsetY, this._m34 = t._offsetZ, this._m21 = t._m12, this._m31 = t._m13, this._offsetX = t._m14, this._m32 = t._m23, this._offsetY = t._m24, this._offsetZ = t._m34;
        },
        get_m11: function() {
          return this.get__isDistinguishedIdentity() ? 1 : this._m11;
        },
        set_m11: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m11 = t, t;
        },
        get_m12: function() {
          return this._m12;
        },
        set_m12: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m12 = t, t;
        },
        get_m13: function() {
          return this._m13;
        },
        set_m13: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m13 = t, t;
        },
        get_m14: function() {
          return this._m14;
        },
        set_m14: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m14 = t, t;
        },
        get_m21: function() {
          return this._m21;
        },
        set_m21: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m21 = t, t;
        },
        get_m22: function() {
          return this.get__isDistinguishedIdentity() ? 1 : this._m22;
        },
        set_m22: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m22 = t, t;
        },
        get_m23: function() {
          return this._m23;
        },
        set_m23: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m23 = t, t;
        },
        get_m24: function() {
          return this._m24;
        },
        set_m24: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m24 = t, t;
        },
        get_m31: function() {
          return this._m31;
        },
        set_m31: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m31 = t, t;
        },
        get_m32: function() {
          return this._m32;
        },
        set_m32: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m32 = t, t;
        },
        get_m33: function() {
          return this.get__isDistinguishedIdentity() ? 1 : this._m33;
        },
        set_m33: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m33 = t, t;
        },
        get_m34: function() {
          return this._m34;
        },
        set_m34: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m34 = t, t;
        },
        get_m41: function() {
          return this.get_offsetX();
        },
        set_m41: function(t) {
          return this.set_offsetX(t), t;
        },
        get_m42: function() {
          return this.get_offsetY();
        },
        set_m42: function(t) {
          return this.set_offsetY(t), t;
        },
        get_m43: function() {
          return this.get_offsetZ();
        },
        set_m43: function(t) {
          return this.set_offsetZ(t), t;
        },
        get_offsetX: function() {
          return this._offsetX;
        },
        set_offsetX: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetX = t, t;
        },
        get_offsetY: function() {
          return this._offsetY;
        },
        set_offsetY: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetY = t, t;
        },
        get_offsetZ: function() {
          return this._offsetZ;
        },
        set_offsetZ: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._offsetZ = t, t;
        },
        get_m44: function() {
          return this.get__isDistinguishedIdentity() ? 1 : this._m44;
        },
        set_m44: function(t) {
          return this.get__isDistinguishedIdentity() && (this.set(H._s_identity), this.set__isDistinguishedIdentity(!1)), this._m44 = t, t;
        },
        _setScaleMatrix: function(t) {
          this._m11 = t.x, this._m22 = t.y, this._m33 = t.z, this._m44 = 1, this.set__isDistinguishedIdentity(!1);
        },
        _setScaleMatrixCenter: function(t, e) {
          this._m11 = t.x, this._m22 = t.y, this._m33 = t.z, this._m44 = 1, this._offsetX = e.x - e.x * t.x, this._offsetY = e.y - e.y * t.y, this._offsetZ = e.z - e.z * t.z, this.set__isDistinguishedIdentity(!1);
        },
        _setTranslationMatrix: function(t) {
          this._m11 = this._m22 = this._m33 = this._m44 = 1, this._offsetX = t.x, this._offsetY = t.y, this._offsetZ = t.z, this.set__isDistinguishedIdentity(!1);
        },
        _multiplyPoint: function(t) {
          if (!this.get__isDistinguishedIdentity()) {
            var e = t.x, r = t.y, a = t.z;
            if (t.x = e * this._m11 + r * this._m21 + a * this._m31 + this._offsetX, t.y = e * this._m12 + r * this._m22 + a * this._m32 + this._offsetY, t.z = e * this._m13 + r * this._m23 + a * this._m33 + this._offsetZ, !this.get_isAffine()) {
              var s = e * this._m14 + r * this._m24 + a * this._m34 + this._m44;
              t.x /= s, t.y /= s, t.z /= s;
            }
          }
        },
        multiplyVector: function(t) {
          if (!this.get__isDistinguishedIdentity()) {
            var e = t.x, r = t.y, a = t.z;
            t.x = e * this._m11 + r * this._m21 + a * this._m31, t.y = e * this._m12 + r * this._m22 + a * this._m32, t.z = e * this._m13 + r * this._m23 + a * this._m33;
          }
        },
        _getNormalizedAffineDeterminant: function() {
          var t = this._m12 * this._m23 - this._m22 * this._m13, e = this._m32 * this._m13 - this._m12 * this._m33, r = this._m22 * this._m33 - this._m32 * this._m23;
          return this._m31 * t + this._m21 * e + this._m11 * r;
        },
        _normalizedAffineInvert: function() {
          var t = this._m12 * this._m23 - this._m22 * this._m13, e = this._m32 * this._m13 - this._m12 * this._m33, r = this._m22 * this._m33 - this._m32 * this._m23, a = this._m31 * t + this._m21 * e + this._m11 * r;
          if (Zi.isZero(a))
            return !1;
          var s = this._m21 * this._m13 - this._m11 * this._m23, l = this._m11 * this._m33 - this._m31 * this._m13, h = this._m31 * this._m23 - this._m21 * this._m33, u = this._m11 * this._m22 - this._m21 * this._m12, _ = this._m11 * this._m32 - this._m31 * this._m12, m = this._m11 * this._offsetY - this._offsetX * this._m12, p = this._m21 * this._m32 - this._m31 * this._m22, b = this._m21 * this._offsetY - this._offsetX * this._m22, S = this._m31 * this._offsetY - this._offsetX * this._m32, x = this._m23 * m - this._offsetZ * u - this._m13 * b, k = this._m13 * S - this._m33 * m + this._offsetZ * _, P = this._m33 * b - this._offsetZ * p - this._m23 * S, I = u, D = -_, G = p, U = 1 / a;
          return this._m11 = r * U, this._m12 = e * U, this._m13 = t * U, this._m21 = h * U, this._m22 = l * U, this._m23 = s * U, this._m31 = G * U, this._m32 = D * U, this._m33 = I * U, this._offsetX = P * U, this._offsetY = k * U, this._offsetZ = x * U, !0;
        },
        _invertCore: function() {
          if (!this.get__isDistinguishedIdentity()) {
            if (this.get_isAffine())
              return this._normalizedAffineInvert();
            var t = this._m13 * this._m24 - this._m23 * this._m14, e = this._m13 * this._m34 - this._m33 * this._m14, r = this._m13 * this._m44 - this._offsetZ * this._m14, a = this._m23 * this._m34 - this._m33 * this._m24, s = this._m23 * this._m44 - this._offsetZ * this._m24, l = this._m33 * this._m44 - this._offsetZ * this._m34, h = this._m22 * e - this._m32 * t - this._m12 * a, u = this._m12 * s - this._m22 * r + this._offsetY * t, _ = this._m32 * r - this._offsetY * e - this._m12 * l, m = this._m22 * l - this._m32 * s + this._offsetY * a, p = this._offsetX * h + this._m31 * u + this._m21 * _ + this._m11 * m;
            if (Zi.isZero(p))
              return !1;
            var b = this._m11 * a - this._m21 * e + this._m31 * t, S = this._m21 * r - this._offsetX * t - this._m11 * s, x = this._m11 * l - this._m31 * r + this._offsetX * e, k = this._m31 * s - this._offsetX * a - this._m21 * l;
            t = this._m11 * this._m22 - this._m21 * this._m12, e = this._m11 * this._m32 - this._m31 * this._m12, r = this._m11 * this._offsetY - this._offsetX * this._m12, a = this._m21 * this._m32 - this._m31 * this._m22, s = this._m21 * this._offsetY - this._offsetX * this._m22, l = this._m31 * this._offsetY - this._offsetX * this._m32;
            var P = this._m13 * a - this._m23 * e + this._m33 * t, I = this._m23 * r - this._offsetZ * t - this._m13 * s, D = this._m13 * l - this._m33 * r + this._offsetZ * e, G = this._m33 * s - this._offsetZ * a - this._m23 * l, U = this._m24 * e - this._m34 * t - this._m14 * a, Y = this._m14 * s - this._m24 * r + this._m44 * t, j = this._m34 * r - this._m44 * e - this._m14 * l, K = this._m24 * l - this._m34 * s + this._m44 * a, Q = 1 / p;
            this._m11 = m * Q, this._m12 = _ * Q, this._m13 = u * Q, this._m14 = h * Q, this._m21 = k * Q, this._m22 = x * Q, this._m23 = S * Q, this._m24 = b * Q, this._m31 = K * Q, this._m32 = j * Q, this._m33 = Y * Q, this._m34 = U * Q, this._offsetX = G * Q, this._offsetY = D * Q, this._offsetZ = I * Q, this._m44 = P * Q;
          }
          return !0;
        },
        get__isDistinguishedIdentity: function() {
          return !this._isNotKnownToBeIdentity;
        },
        set__isDistinguishedIdentity: function(t) {
          return this._isNotKnownToBeIdentity = !t, t;
        },
        _multiply: function(t) {
          this.set(H.multiplyMatrix(this, t));
        }
      };
      function Ge() {
        this.m11 = 1, this.m12 = 0, this.m13 = 0, this.m21 = 0, this.m22 = 1, this.m23 = 0, this.m31 = 0, this.m32 = 0, this.m33 = 1;
      }
      Ge.create = function(t, e, r, a, s, l, h, u, _) {
        var m = new Ge();
        return m.m11 = t, m.m12 = e, m.m13 = r, m.m21 = a, m.m22 = s, m.m23 = l, m.m31 = h, m.m32 = u, m.m33 = _, m;
      }, Ge.rotation = function(t) {
        var e = new Ge();
        return e.m11 = Math.cos(t), e.m21 = -Math.sin(t), e.m12 = Math.sin(t), e.m22 = Math.cos(t), e;
      }, Ge.translation = function(t, e) {
        var r = new Ge();
        return r.m31 = t, r.m32 = e, r;
      }, Ge.scaling = function(t, e) {
        var r = new Ge();
        return r.m11 = t, r.m22 = e, r;
      }, Ge.multiply = function(t, e) {
        return Ge.create(t.m11 * e.m11 + t.m12 * e.m21 + t.m13 * e.m31, t.m11 * e.m12 + t.m12 * e.m22 + t.m13 * e.m32, t.m11 * e.m13 + t.m12 * e.m23 + t.m13 * e.m33, t.m21 * e.m11 + t.m22 * e.m21 + t.m23 * e.m31, t.m21 * e.m12 + t.m22 * e.m22 + t.m23 * e.m32, t.m21 * e.m13 + t.m22 * e.m23 + t.m23 * e.m33, t.m31 * e.m11 + t.m32 * e.m21 + t.m33 * e.m31, t.m31 * e.m12 + t.m32 * e.m22 + t.m33 * e.m32, t.m31 * e.m13 + t.m32 * e.m23 + t.m33 * e.m33);
      }, Ge.rotateAt = function(t, e) {
        var r = Ge.translation(-e.x, -e.y), a = Ge.rotation(t), s = Ge.translation(e.x, e.y);
        return Ge.multiply(Ge.multiply(r, a), s);
      };
      var Yl = {
        _transformPoints: function(t) {
          for (var e = n.enumerate(t); e.moveNext(); ) {
            var r = e.current;
            this.multiplyPoint(r);
          }
        },
        multiplyPoint: function(t) {
          var e = t.x, r = t.y;
          t.x = e * this.m11 + r * this.m21 + this.m31, t.y = e * this.m12 + r * this.m22 + this.m32;
        }
      };
      function Zi() {
      }
      Zi.isZero = function(t) {
        return Math.abs(t) < 222044604925031e-64;
      }, Zi.isOne = function(t) {
        return Math.abs(t - 1) < 222044604925031e-64;
      }, Zi.radiansToDegrees = function(t) {
        return t * 180 / Math.PI;
      }, Zi.degreesToRadians = function(t) {
        return t * Math.PI / 180;
      }, Zi.clamp = function(t, e, r) {
        return Math.max(e, Math.min(t, r));
      };
      function _s(t, e, r, a) {
        this.a = 0, this.b = 0, this.c = 0, this.d = 0, this.a = t, this.b = e, this.c = r, this.d = a;
      }
      var Zl = {
        normalize: function() {
          var t = Math.sqrt(this.a * this.a + this.b * this.b + this.c * this.c);
          this.a /= t, this.b /= t, this.c /= t, this.d /= t;
        },
        dot: function(t) {
          return this.b * t.y + this.c * t.z + this.d * t.w + this.a * t.x;
        }
      };
      function Yn(t, e, r, a) {
        this.x = 0, this.y = 0, this.z = 0, this.w = 0, this.x = t, this.y = e, this.z = r, this.w = a;
      }
      var jl = {};
      function _r() {
        this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0, this.tu1 = 0, this.tv1 = 0;
      }
      _r.create2UV = function(t, e, r, a, s, l) {
        var h = new _r();
        return h.x = t.x, h.y = t.y, h.z = t.z, h.nx = e.x, h.ny = e.y, h.nz = e.z, h.tu = r, h.tv = a, h.tu1 = s, h.tv1 = l, h;
      }, _r.create = function(t, e, r, a) {
        var s = new _r();
        s.x = t.x, s.y = t.y, s.z = t.z, s.nx = e.x, s.ny = e.y, s.nz = e.z, s.tu = r, s.tv = a;
        var l = R.cartesianToSpherical2(e);
        return s.tu1 = (l.get_lng() + 180) / 360, s.tv1 = 1 - (l.get_lat() + 90) / 180, s;
      }, _r.createLong2UV = function(t, e, r, a, s, l, h, u, _, m) {
        var p = new _r();
        return p.x = t, p.y = e, p.z = r, p.nx = a, p.ny = s, p.nz = l, p.tu = h, p.tv = u, p.tu1 = _, p.tv1 = m, p;
      }, _r.get_strideSize = function() {
        return 40;
      };
      var Kl = {
        get_lat: function() {
          return (1 - this.tv1) * 180 - 90;
        },
        set_lat: function(t) {
          return this.tv1 = 1 - (t + 90) / 180, t;
        },
        get_lng: function() {
          return this.tu1 * 360 - 180;
        },
        set_lng: function(t) {
          return this.tu1 = (t + 180) / 360, t;
        },
        createLong: function(t, e, r, a, s, l, h, u) {
          var _ = new _r();
          _.x = t, _.y = e, _.z = r, _.nx = a, _.ny = s, _.nz = l, _.tu = h, _.tv = u;
          var m = R.cartesianToSpherical2(L.create(this.nx, this.ny, this.nz));
          return _.tu1 = (m.get_lng() + 180) / 360, _.tv1 = 1 - (m.get_lat() + 90) / 180, _;
        },
        get_normal: function() {
          return L.create(this.nx, this.ny, this.nz);
        },
        set_normal: function(t) {
          return this.nx = t.x, this.ny = t.y, this.nz = t.z, t;
        },
        get_position: function() {
          return L.create(this.x, this.y, this.y);
        },
        set_position: function(t) {
          return this.x = t.x, this.y = t.y, this.z = t.z, t;
        },
        toString: function() {
          return n.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, U1={8}, U2={9}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv, this.tu1, this.tv1);
        }
      };
      function Di() {
        this.x = 0, this.y = 0, this.z = 0, this.nx = 0, this.ny = 0, this.nz = 0, this.tu = 0, this.tv = 0;
      }
      Di.createShort = function(t, e, r, a) {
        var s = new Di();
        return s.x = t.x, s.y = t.y, s.z = t.z, s.nx = e.x, s.ny = e.y, s.nz = e.z, s.tu = r, s.tv = a, s;
      }, Di._create = function(t, e, r, a, s, l, h, u) {
        var _ = new Di();
        return _.x = t, _.y = e, _.z = r, _.nx = a, _.ny = s, _.nz = l, _.tu = h, _.tv = u, _;
      }, Di.createUV = function(t, e, r) {
        var a = new Di();
        return a.x = t.x, a.y = t.y, a.z = t.z, a.nx = e.x, a.ny = e.y, a.nz = e.z, a.tu = r.x, a.tv = r.y, a;
      };
      var Jl = {
        createLong: function(t, e, r, a, s, l, h, u) {
          var _ = new _r();
          return _.x = t, _.y = e, _.z = r, _.nx = a, _.ny = s, _.nz = l, _.tu = h, _.tv = u, _;
        },
        get_normal: function() {
          return L.create(this.nx, this.ny, this.nz);
        },
        set_normal: function(t) {
          return this.nx = t.x, this.ny = t.y, this.nz = t.z, t;
        },
        get_position: function() {
          return L.create(this.x, this.y, this.z);
        },
        set_position: function(t) {
          return this.x = t.x, this.y = t.y, this.z = t.z, t;
        },
        toString: function() {
          return n.format("X={0}, Y={1}, Z={2}, Nx={3}, Ny={4}, Nz={5}, U={6}, V={7}, U1={8}, U2={9}", this.x, this.y, this.z, this.nx, this.ny, this.nz, this.tu, this.tv);
        }
      };
      function cn() {
        this.radius = 0;
      }
      cn._create = function(t, e) {
        var r = new cn();
        return r.center = t, r.radius = e, r;
      };
      var Wl = {};
      function Rr() {
      }
      Rr.findEnclosingSphereFast = function(t) {
        for (var e = new cn(), r = t.length, a = L.zero, s = 0; s < r; ++s)
          a.add(t[s]);
        a.multiply(1 / r);
        for (var l = 0, s = 0; s < r; ++s) {
          var h = L.getLengthSq(L.subtractVectors(t[s], a));
          h > l && (l = h);
        }
        return l = Math.sqrt(l), e.center = a, e.radius = l, e;
      }, Rr.findEnclosingSphere = function(t) {
        var e = new L(), r = 0, a = t.length, s, l, h, u, _, m, p, b, S, x, k, P, I = new L(), D = new L(), G = new L(), U = new L(), Y = new L(), j = new L(), K = new L(), Q = new L();
        for (I.x = G.y = Y.z = 1e8, D.x = U.y = j.z = -1e9, s = 0; s < a; s++) {
          var J = t[s];
          J.x < I.x && (I = J), J.x > D.x && (D = J), J.y < G.y && (G = J), J.y > U.y && (U = J), J.z < Y.z && (Y = J), J.z > j.z && (j = J);
        }
        for (l = D.x - I.x, h = D.y - I.y, u = D.z - I.z, m = l * l + h * h + u * u, l = U.x - G.x, h = U.y - G.y, u = U.z - G.z, p = l * l + h * h + u * u, l = j.x - Y.x, h = j.y - Y.y, u = j.z - Y.z, b = l * l + h * h + u * u, K = I, Q = D, S = m, p > S && (S = p, K = G, Q = U), b > S && (K = Y, Q = j), e.x = (K.x + Q.x) / 2, e.y = (K.y + Q.y) / 2, e.z = (K.z + Q.z) / 2, l = Q.x - e.x, h = Q.y - e.y, u = Q.z - e.z, _ = l * l + h * h + u * u, r = Math.sqrt(_), s = 0; s < a; s++) {
          var J = t[s];
          l = J.x - e.x, h = J.y - e.y, u = J.z - e.z, k = l * l + h * h + u * u, k > _ && (x = Math.sqrt(k), r = (r + x) / 2, _ = r * r, P = x - r, e.x = (r * e.x + P * J.x) / x, e.y = (r * e.y + P * J.y) / x, e.z = (r * e.z + P * J.z) / x);
        }
        return cn._create(e, r);
      };
      var Ql = {};
      function Mr() {
        this.parent = null, this.isProxy = !1, this._versionDependent = !1, this._readOnly = !0, this._dirty = !1, this._thumbnail = null, this._proxyFolder = null, this._lastUpdate = new Date(), this._childList = [], this._itemsField = [], this._imagesets = [], this._tours = [], this._folders = [], this._places = [], this._groupField = 0, this._refreshTypeField = 0, this._refreshTypeFieldSpecified = !1, this._browseableField = !0, this._browseableFieldSpecified = !1, this._searchableField = !1, this._typeField = 0, this._communityIdField = 0, this._componentIdField = 0, this._permissionField = 0;
      }
      var tu = {
        toString: function() {
          return this._nameField;
        },
        get_versionDependent: function() {
          return this._versionDependent;
        },
        set_versionDependent: function(t) {
          this._versionDependent = t;
          for (var e = n.enumerate(this._folders); e.moveNext(); ) {
            var r = e.current;
            r.set_versionDependent(this._versionDependent);
          }
          return t;
        },
        get_readOnly: function() {
          return this._readOnly;
        },
        set_readOnly: function(t) {
          return this._readOnly = t, t;
        },
        get_dirty: function() {
          return this._dirty;
        },
        set_dirty: function(t) {
          return this._dirty = t, t;
        },
        loadFromUrlWithErrorCallback: function(t, e, r) {
          this._onError = r, this.loadFromUrl(t, e);
        },
        loadFromUrl: function(t, e) {
          this._onComplete = e, this._webFile = new Ai(Kt.singleton.rewrite(t, 1)), this._webFile.onStateChange = n.bind("_loadData", this), this._webFile.send();
        },
        _loadData: function() {
          if (this._webFile.get_state() === 2)
            console.error(this._webFile.get_message()), this._onError != null && this._onError();
          else if (this._webFile.get_state() === 1) {
            var t = at.selectSingleNode(this._webFile.getXml(), "Folder");
            if (t == null) {
              var e = this._webFile.getXml();
              e != null && (t = at.selectSingleNode(e, "Folder"));
            }
            t != null && (this._clearChildren(), this._parseXML(t)), this._onComplete != null && this._onComplete();
          }
        },
        _clearChildren: function() {
          this._folders.length = 0, this._tours.length = 0, this._places.length = 0, this.get_imagesets().length = 0;
        },
        _parseXML: function(t) {
          t.attributes.getNamedItem("Name") != null ? this._nameField = t.attributes.getNamedItem("Name").nodeValue : this._nameField = "", t.attributes.getNamedItem("Url") != null && (this._urlField = t.attributes.getNamedItem("Url").nodeValue), t.attributes.getNamedItem("Thumbnail") != null && (this._thumbnailUrlField = t.attributes.getNamedItem("Thumbnail").nodeValue);
          for (var e = n.enumerate(t.childNodes); e.moveNext(); ) {
            var r = e.current;
            switch (r.nodeName) {
              case "Folder":
                var a = new Mr();
                a.parent = this, a._parseXML(r), this._folders.push(a);
                break;
              case "Place":
                this._places.push(Li._fromXml(r));
                break;
              case "ImageSet":
                this.get_imagesets().push(He.fromXMLNode(r));
                break;
              case "Tour":
                this.get_tours().push(Rn._fromXml(r));
                break;
            }
          }
        },
        addChildFolder: function(t) {
          this._folders.push(t), this._dirty = !0;
        },
        removeChildFolder: function(t) {
          n.remove(this._folders, t), this._dirty = !0;
        },
        addChildPlace: function(t) {
          this._places.push(t), this._dirty = !0;
        },
        removeChildPlace: function(t) {
          n.remove(this._places, t), this._dirty = !0;
        },
        get_thumbnail: function() {
          return this._thumbnail;
        },
        set_thumbnail: function(t) {
          return this._thumbnail = t, t;
        },
        get_bounds: function() {
          return this._bounds;
        },
        set_bounds: function(t) {
          return this._bounds = t, t;
        },
        get_isImage: function() {
          return !1;
        },
        get_isTour: function() {
          return !1;
        },
        get_isFolder: function() {
          return !0;
        },
        get_isCloudCommunityItem: function() {
          return !!this._communityIdField || this._permissionField > 0;
        },
        refresh: function() {
          this._proxyFolder == null && (this._proxyFolder = new Mr(), this._proxyFolder.isProxy = !0, this._proxyFolder.parent = this.parent), this._proxyFolder.loadFromUrlWithErrorCallback(this._urlField, this._childReadyCallback, this._childReadyCallback), this._childReadyCallback = null;
        },
        childLoadCallback: function(t) {
          this._childReadyCallback = t, this.get_children(), this._proxyFolder == null && t();
        },
        get_children: function() {
          if (n.emptyString(this._urlField)) {
            if (this._childList.length = 0, this.parent != null) {
              var t = new Aa();
              t.parent = this.parent, this._childList.push(t);
            }
            if (this.get_folders() != null)
              for (var e = n.enumerate(this.get_folders()); e.moveNext(); ) {
                var r = e.current;
                this._childList.push(r);
              }
            if (this.get_imagesets() != null)
              for (var a = n.enumerate(this.get_imagesets()); a.moveNext(); ) {
                var s = a.current;
                this._childList.push(s);
              }
            if (this.get_places() != null)
              for (var l = n.enumerate(this.get_places()); l.moveNext(); ) {
                var h = l.current;
                this._childList.push(h);
              }
            if (this.get_tours() != null)
              for (var u = n.enumerate(this.get_tours()); u.moveNext(); ) {
                var _ = u.current;
                this._childList.push(_);
              }
            return this._childList;
          } else {
            var m = (this._lastUpdate - n.now()) / 1e3;
            return (this.get_refreshType() === 1 || this._proxyFolder == null || !this.get_refreshType() && parseInt(this._refreshIntervalField) < m) && this.refresh(), this._proxyFolder != null ? this._proxyFolder.get_children() : null;
          }
        },
        get_msrCommunityId: function() {
          return this._communityIdField;
        },
        set_msrCommunityId: function(t) {
          return this._communityIdField = t, t;
        },
        get_msrComponentId: function() {
          return this._componentIdField;
        },
        set_msrComponentId: function(t) {
          return this._componentIdField = t, t;
        },
        get_permission: function() {
          return this._permissionField;
        },
        set_permission: function(t) {
          return this._permissionField = t, t;
        },
        get_folders: function() {
          return this._folders;
        },
        set_folders: function(t) {
          return this._folders = t, t;
        },
        get_places: function() {
          return this._places;
        },
        set_places: function(t) {
          return this._places = t, t;
        },
        get_imagesets: function() {
          return this._imagesets;
        },
        set_imagesets: function(t) {
          return this._imagesets = t, t;
        },
        get_tours: function() {
          return this._tours;
        },
        set_tours: function(t) {
          return this._tours = t, t;
        },
        get_name: function() {
          return this._nameField == null ? "" : this._nameField;
        },
        set_name: function(t) {
          return this._nameField = t, t;
        },
        get_group: function() {
          return this._groupField;
        },
        set_group: function(t) {
          return this._groupField = t, t;
        },
        get_url: function() {
          return this._urlField;
        },
        set_url: function(t) {
          return this._urlField = t, t;
        },
        get_thumbnailUrl: function() {
          return n.emptyString(this._thumbnailUrlField) ? Kt.singleton.engineAssetUrl("thumb_folder.jpg") : this._thumbnailUrlField;
        },
        set_thumbnailUrl: function(t) {
          return this._thumbnailUrlField = t, t;
        },
        get_refreshType: function() {
          return this._refreshTypeField;
        },
        set_refreshType: function(t) {
          return this._refreshTypeField = t, this.set_refreshTypeSpecified(!0), t;
        },
        get_refreshTypeSpecified: function() {
          return this._refreshTypeFieldSpecified;
        },
        set_refreshTypeSpecified: function(t) {
          return this._refreshTypeFieldSpecified = t, t;
        },
        get_refreshInterval: function() {
          return this._refreshIntervalField;
        },
        set_refreshInterval: function(t) {
          return this._refreshIntervalField = t, t;
        },
        get_browseable: function() {
          return this._browseableField;
        },
        set_browseable: function(t) {
          return this._browseableField = t, this._browseableFieldSpecified = !0, t;
        },
        get_browseableSpecified: function() {
          return this._browseableFieldSpecified;
        },
        set_browseableSpecified: function(t) {
          return this._browseableFieldSpecified = t, t;
        },
        get_searchable: function() {
          return this._searchableField;
        },
        set_searchable: function(t) {
          return this._searchableField = t, t;
        },
        get_type: function() {
          return this._typeField;
        },
        set_type: function(t) {
          return this._typeField = t, t;
        },
        get_subType: function() {
          return this._subTypeField;
        },
        set_subType: function(t) {
          return this._subTypeField = t, t;
        }
      };
      function Yt() {
        this._items = [], this.top = 10, this.left = 10, this._indexTouchDown = -1, this._mouseDown = !1, this._lastX = 0, this._lastY = 0, this._ignoreClick = !1, this._thumbnailSize = 0, this._horzSpacing = 110, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 110, this._horzMultiple = 110, this._rowCount = 1, this._colCount = 6, this._dragging = !1, this._startIndex = 0, this._startOffset = 0, this._selectedItem = -1, this._hoverItem = -1, this.showAddButton = !1, this.width = 0, this.height = 0, this._addButtonHover = !1, this.imageClicked = !1;
      }
      Yt.create = function() {
        var t = new Yt();
        return t.height = 85, t.width = 1920, t.canvas = document.createElement("canvas"), t.canvas.width = t.width, t.canvas.height = t.height, t.setup(), t.loadImages(), t;
      };
      var eu = {
        setup: function() {
          this.canvas.addEventListener("click", n.bind("onClick", this), !1), this.canvas.addEventListener("dblclick", n.bind("onDoubleClick", this), !1), this.canvas.addEventListener("mousemove", n.bind("onMouseMove", this), !1), this.canvas.addEventListener("mouseup", n.bind("onMouseUp", this), !1), this.canvas.addEventListener("mousedown", n.bind("onMouseDown", this), !1), this.canvas.addEventListener("touchstart", n.bind("onTouchStart", this), !1), this.canvas.addEventListener("touchmove", n.bind("onTouchMove", this), !1), this.canvas.addEventListener("touchend", n.bind("onTouchEnd", this), !1), this.canvas.addEventListener("mouseout", n.bind("onMouseUp", this), !1);
        },
        onTouchStart: function(t) {
          var e = t;
          e.preventDefault(), this._mouseDown = !0, this._lastX = e.targetTouches[0].pageX, this._lastY = e.targetTouches[0].pageY, this._indexTouchDown = this._getItemIndexFromCursor(lt.create(e.targetTouches[0].pageX, e.targetTouches[0].pageY));
        },
        onTouchMove: function(t) {
          var e = t;
          if (e.preventDefault(), this._mouseDown) {
            if (e.targetTouches[0].pageX - this._lastX, e.targetTouches[0].pageY - this._lastY, this._mouseDown && (this._dragging = !0), this._dragging) {
              var a = Math.round((e.targetTouches[0].pageX - this._lastX + this._startOffset) / this._horzSpacing), s = Math.round(e.targetTouches[0].pageX - this._lastX + this._startOffset - a * this._horzSpacing);
              this._startOffset = s, this._startIndex -= a, this._startIndex < 0 && (this._startOffset -= this._horzSpacing * this._startIndex, this._startIndex = 0), this._lastX = e.targetTouches[0].pageX, this._lastY = e.targetTouches[0].pageY;
            } else {
              var r = this._getItemIndexFromCursor(lt.create(e.targetTouches[0].pageX, e.targetTouches[0].pageY));
              this._hoverItem !== r && (this._hoverItem = r);
            }
            this.refresh();
          }
        },
        onTouchEnd: function(t) {
          var e = t;
          e.preventDefault(), this._dragging ? (this._dragging = !1, this._ignoreClick = !0) : this._indexTouchDown > -1 && this._mouseDown && this._handleClick(this._indexTouchDown), this._startOffset = 0, this._mouseDown = !1, this.refresh();
        },
        onClick: function(t) {
          if (this._ignoreClick)
            this._ignoreClick = !1;
          else {
            var e = this._getItemIndexFromCursor(lt.create(t.offsetX, t.offsetY));
            this._handleClick(e);
          }
        },
        _handleClick: function(t) {
          var e = this;
          if (t > -1) {
            if (n.canCast(this._items[t], Li)) {
              var r = this._items[t];
              V.singleton.gotoTarget(r, !1, !1, !0);
              return;
            }
            if (n.canCast(this._items[t], He)) {
              var a = this._items[t];
              V.singleton.renderContext.set_backgroundImageset(a);
              return;
            }
            if (n.canCast(this._items[t], Rn)) {
              var s = this._items[t];
              V.singleton.playTour(s.get_tourUrl());
              return;
            }
            if (n.canCast(this._items[t], Mr)) {
              var l = this._items[t];
              this._startIndex = 0, l.childLoadCallback(function() {
                e._items = l.get_children(), e.refresh();
              });
              return;
            }
            if (n.canCast(this._items[t], Aa)) {
              var h = this._items[t];
              h.parent != null && (this._startIndex = 0, h.parent.childLoadCallback(function() {
                e._items = h.parent.get_children(), e.refresh();
              }));
              return;
            }
          }
        },
        onDoubleClick: function(t) {
          Bt.renderingOn = !Bt.renderingOn;
        },
        onGestureChange: function(t) {
          var e = t;
          this._mouseDown = !1, e.scale;
        },
        onMouseDown: function(t) {
          this._mouseDown = !0, this._lastX = Ye.offsetX(this.canvas, t), this._lastY = Ye.offsetY(this.canvas, t);
        },
        onMouseMove: function(t) {
          if (this._mouseDown && (this._dragging = !0), this._dragging) {
            var r = Math.round((Ye.offsetX(this.canvas, t) - this._lastX + this._startOffset) / this._horzSpacing), a = Math.round(Ye.offsetX(this.canvas, t) - this._lastX + this._startOffset - r * this._horzSpacing);
            this._startOffset = a, this._startIndex -= r, this._startIndex < 0 && (this._startOffset -= this._horzSpacing * this._startIndex, this._startIndex = 0), this._lastX = Ye.offsetX(this.canvas, t), this._lastY = Ye.offsetY(this.canvas, t);
          } else {
            var e = this._getItemIndexFromCursor(lt.create(Ye.offsetX(this.canvas, t), Ye.offsetY(this.canvas, t)));
            this._hoverItem !== e && (this._hoverItem = e);
          }
          this.refresh();
        },
        onMouseUp: function(t) {
          this._dragging && (this._startOffset = 0, this._dragging = !1, this._ignoreClick = !0), this._mouseDown = !1, this.refresh();
        },
        loadImages: function() {
          var t = this;
          !Yt._imagesLoaded && !Yt._downloading && (Yt._imageLoadCount = 0, Yt._imagesLoaded = !1, Yt._downloading = !0, Yt._bmpBackground = document.createElement("img"), Yt._bmpBackground.src = "images/thumbBackground.png", Yt._bmpBackground.addEventListener("load", function(e) {
            Yt._imageLoadCount++, Yt._imageLoadCount === 5 && (Yt._downloading = !1, Yt._imagesLoaded = !0, t.refresh());
          }, !1), Yt._bmpBackgroundHover = document.createElement("img"), Yt._bmpBackgroundHover.src = "images/thumbBackgroundHover.png", Yt._bmpBackgroundHover.addEventListener("load", function(e) {
            Yt._imageLoadCount++, Yt._imageLoadCount === 5 && (Yt._downloading = !1, Yt._imagesLoaded = !0, t.refresh());
          }, !1), Yt._bmpBackgroundWide = document.createElement("img"), Yt._bmpBackgroundWide.src = "images/thumbBackgroundWide.png", Yt._bmpBackgroundWide.addEventListener("load", function(e) {
            Yt._imageLoadCount++, Yt._imageLoadCount === 5 && (Yt._downloading = !1, Yt._imagesLoaded = !0, t.refresh());
          }, !1), Yt._bmpBackgroundWideHover = document.createElement("img"), Yt._bmpBackgroundWideHover.src = "images/thumbBackgroundWideHover.png", Yt._bmpBackgroundWideHover.addEventListener("load", function(e) {
            Yt._imageLoadCount++, Yt._imageLoadCount === 5 && (Yt._downloading = !1, Yt._imagesLoaded = !0, t.refresh());
          }, !1), Yt._bmpDropInsertMarker = document.createElement("img"), Yt._bmpDropInsertMarker.src = "images/dragInsertMarker.png", Yt._bmpDropInsertMarker.addEventListener("load", function(e) {
            Yt._imageLoadCount++, Yt._imageLoadCount === 5 && (Yt._downloading = !1, Yt._imagesLoaded = !0, t.refresh());
          }, !1));
        },
        get_thumbnailSize: function() {
          return this._thumbnailSize;
        },
        set_thumbnailSize: function(t) {
          switch (this._thumbnailSize = t, t) {
            case 1:
              this._horzSpacing = 180, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 180;
              break;
            case 0:
              this._horzSpacing = 110, this._vertSpacing = 75, this._thumbHeight = 65, this._thumbWidth = 110;
              break;
          }
          return this._updatePaginator(), this.refresh(), t;
        },
        refresh: function() {
          this.width !== window.innerWidth && (this.width = window.innerWidth, this.canvas.width = this.canvas.width), this.paint();
        },
        get_rowCount: function() {
          return this._rowCount;
        },
        set_rowCount: function(t) {
          return this._rowCount !== t && (this._rowCount = t, this._updatePaginator()), t;
        },
        _updatePaginator: function() {
        },
        get_colCount: function() {
          return this._colCount;
        },
        set_colCount: function(t) {
          return this._colCount !== t && (this._colCount = t, this._updatePaginator()), t;
        },
        get_itemsPerPage: function() {
          return this._rowCount * this._colCount;
        },
        get_currentPage: function() {
          return this._startIndex / this.get_itemsPerPage();
        },
        get_pageCount: function() {
          return Math.max(1, (this._items.length + this.get_itemsPerPage() - 1 + (this.showAddButton ? 1 : 0)) / this.get_itemsPerPage());
        },
        paint: function() {
          var t = this, e = this.canvas.getContext("2d");
          if (e.fillStyle = "rgb(20, 22, 31)", e.fillRect(0, 0, this.width, this.height), !!Yt._imagesLoaded) {
            var r = this.height - 10 * 2, a = this.width - 10 * 2;
            this.set_rowCount(Math.round(Math.max(r / this._thumbHeight, 1))), this.set_colCount(Math.round(Math.max(a / this._horzSpacing, 1))), this._horzMultiple = (a + 13) / this.get_colCount(), this._startIndex = Math.round(this._startIndex / this.get_itemsPerPage() * this.get_itemsPerPage());
            for (var s, l = this._startIndex, h = 0; h < this._rowCount; h++) {
              for (var u = 0; u < this._colCount; u++) {
                if (l >= this._items.length) {
                  (!this._items.length || this.showAddButton) && (s = fi.create(this.left + u * this._horzMultiple + 3 + this._startOffset, this.top + h * this._vertSpacing, this._thumbWidth - 10, 60), e.drawImage(this._thumbnailSize === 1 ? Yt._bmpBackgroundWide : Yt._bmpBackground, n.truncate(u * this._horzMultiple) + this._startOffset, h * this._vertSpacing));
                  break;
                }
                s = fi.create(this.left + u * this._horzMultiple + 3 + this._startOffset, this.top + h * this._vertSpacing, this._thumbWidth - 14, 60);
                var _ = "white";
                l === this._hoverItem || l === this._selectedItem && this._hoverItem === -1 ? (e.drawImage(this._thumbnailSize === 1 ? Yt._bmpBackgroundWideHover : Yt._bmpBackgroundHover, this.left + n.truncate(u * this._horzMultiple) + this._startOffset, this.top + h * this._vertSpacing), _ = "yellow") : e.drawImage(this._thumbnailSize === 1 ? Yt._bmpBackgroundWide : Yt._bmpBackground, this.left + n.truncate(u * this._horzMultiple) + this._startOffset, this.top + h * this._vertSpacing), this._items[l].set_bounds(fi.create(this.left + u * this._horzMultiple + this._startOffset, this.top + h * this._vertSpacing, n.truncate(this._horzMultiple), this._vertSpacing));
                try {
                  var m = this._items[l].get_thumbnail();
                  m != null ? (e.drawImage(m, this.left + u * this._horzMultiple + 2 + this._startOffset, this.top + h * this._vertSpacing + 3), e.strokeStyle = "rgb(0,0,0)", e.rect(this.left + n.truncate(u * this._horzMultiple) + 2 + this._startOffset, this.top + h * this._vertSpacing + 3, this._items[l].get_thumbnail().width, this._items[l].get_thumbnail().height)) : (this._items[l].set_thumbnail(document.createElement("img")), this._items[l].get_thumbnail().src = this._items[l].get_thumbnailUrl(), this._items[l].get_thumbnail().addEventListener("load", function(p) {
                    t.refresh();
                  }, !1));
                } catch {
                }
                e.fillStyle = _, e.strokeStyle = _, e.lineWidth = 1, e.font = "normal 8pt Arial", e.fillText(this._items[l].get_name(), s.x, s.y + s.height, s.width), l++;
              }
              if (l >= this._items.length)
                break;
            }
          }
        },
        _getItemIndexFromCursor: function(t) {
          var e = lt.create(t.x + this.left, t.y + this.top);
          this.imageClicked = !1;
          var r = -1, a = n.truncate(e.x / this._horzMultiple), s = n.truncate(e.x % this._horzMultiple);
          if (a >= this._colCount || a < 0)
            return -1;
          var l = n.truncate(e.y / this._vertSpacing), h = n.truncate(e.y % this._vertSpacing);
          return l >= this._rowCount || l < 0 || (r = this._startIndex + l * this._colCount + a, r === this._items.length ? this._addButtonHover = !0 : this._addButtonHover = !1, r > this._items.length - 1) ? -1 : (this._items[r].get_isImage() && h < 16 && s > 78 && (this.imageClicked = !0), r);
        },
        _addItems: function(t) {
          this._items = t;
        }
      };
      function Aa() {
        this.parent = null, this._bounds = new fi();
      }
      var iu = {
        get_name: function() {
          return "Up Level";
        },
        get_thumbnail: function() {
          return this._thumbnail;
        },
        set_thumbnail: function(t) {
          return this._thumbnail = t, t;
        },
        get_thumbnailUrl: function() {
          return Kt.singleton.engineAssetUrl("thumb_folderup.jpg");
        },
        set_thumbnailUrl: function(t) {
          return t;
        },
        get_bounds: function() {
          return this._bounds;
        },
        set_bounds: function(t) {
          return this._bounds = t, t;
        },
        get_isImage: function() {
          return !1;
        },
        get_isTour: function() {
          return !1;
        },
        get_isFolder: function() {
          return !1;
        },
        get_isCloudCommunityItem: function() {
          return !1;
        },
        get_readOnly: function() {
          return !1;
        },
        get_children: function() {
          return this.parent == null ? [] : this.parent.get_children();
        }
      };
      function ru(t) {
        this.buffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34963, this.buffer), F.prepDevice.bufferData(34963, t, 35044);
      }
      var nu = {};
      function fs(t) {
        this.buffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34963, this.buffer), F.prepDevice.bufferData(34963, t, 35044);
      }
      var au = {
        dispose: function() {
          F.prepDevice.bindBuffer(34963, null), F.prepDevice.deleteBuffer(this.buffer), this.buffer = null;
        }
      };
      function vi() {
      }
      var su = {
        dispose: function() {
          F.prepDevice.bindBuffer(34962, null), F.prepDevice.deleteBuffer(this.vertexBuffer), this.vertexBuffer = null;
        }
      };
      function ve(t, e) {
        this.startDate = 0, this.endDate = 0, this.startDate = t, this.endDate = e;
      }
      ve.empty = function() {
        return new ve(0, 0);
      };
      var ou = {
        copy: function() {
          return new ve(this.startDate, this.endDate);
        }
      };
      function fr() {
        this._zBuffer = !0, this._linePoints = [], this._usingLocalCenter = !1, this.sky = !0, this.aaFix = !0, this.pure2D = !1, this.viewTransform = H.get_identity(), this._lineBuffers = [], this._lineBufferCounts = [], this.useLocalCenters = !1;
      }
      var lu = {
        get_depthBuffered: function() {
          return this._zBuffer;
        },
        set_depthBuffered: function(t) {
          return this._zBuffer = t, t;
        },
        addLine: function(t, e) {
          this._linePoints.push(t), this._linePoints.push(e), this._emptyLineBuffer();
        },
        clear: function() {
          this._linePoints.length = 0, this._emptyLineBuffer();
        },
        drawLines: function(t, e, r) {
          if (!(this._linePoints.length < 2)) {
            this._initLineBuffer(t);
            var a = this._linePoints.length;
            if (t.gl == null) {
              var s = L._transformCoordinate(t.get_viewPoint(), this.viewTransform), l = t.device;
              l.save(), l.strokeStyle = r.toString(), l.lineWidth = 2, l.globalAlpha = 0.25;
              for (var h = new L(), u = new L(), _ = 0; _ < a; _ += 2)
                h = t.WVP.transform(this._linePoints[_]), u = t.WVP.transform(this._linePoints[_ + 1]), L.dot(this._linePoints[_], s) > 0.6 && (l.beginPath(), l.moveTo(h.x, h.y), l.lineTo(u.x, u.y), l.stroke());
              l.restore();
            } else
              for (var m = n.enumerate(this._lineBuffers); m.moveNext(); ) {
                var p = m.current;
                this.pure2D ? ze.use(t, p.vertexBuffer, r, this._zBuffer) : be.use(t, p.vertexBuffer, r, this._zBuffer), t.gl.drawArrays(1, 0, p.count);
              }
          }
        },
        _initLineBuffer: function(t) {
          if (t.gl != null && !this._lineBuffers.length) {
            var e = this._linePoints.length, r = null, a = null;
            if (this._localCenter = new L(), this.get_depthBuffered()) {
              for (var s = n.enumerate(this._linePoints); s.moveNext(); ) {
                var l = s.current;
                this._localCenter.add(l);
              }
              this._localCenter.x /= e, this._localCenter.y /= e, this._localCenter.z /= e;
            }
            for (var h = e, u = 0, _, m = n.enumerate(this._linePoints); m.moveNext(); ) {
              var l = m.current;
              if (u >= 1e5 || a == null) {
                r != null && r.unlock();
                var p = Math.min(1e5, h);
                h -= p, r = new Qn(p), a = r.lock(), this._lineBuffers.push(r), this._lineBufferCounts.push(p), u = 0;
              }
              this.useLocalCenters ? (_ = L.subtractVectors(l, this._localCenter), a[u] = _) : a[u] = l, u++;
            }
            r != null && r.unlock();
          }
        },
        _emptyLineBuffer: function() {
        }
      };
      function gs() {
        this._zBuffer = !0, this._linePoints = [], this._lineColors = [], this.sky = !0, this.aaFix = !0, this.viewTransform = H.get_identity(), this._lineBuffers = [], this._lineBufferCounts = [], this.useLocalCenters = !1;
      }
      var uu = {
        get_depthBuffered: function() {
          return this._zBuffer;
        },
        set_depthBuffered: function(t) {
          return this._zBuffer = t, t;
        },
        addLine: function(t, e, r, a) {
          this._linePoints.push(t), this._lineColors.push(r), this._linePoints.push(e), this._lineColors.push(a), this._emptyLineBuffer();
        },
        clear: function() {
          this._linePoints.length = 0, this._emptyLineBuffer();
        },
        drawLines: function(t, e, r) {
          if (!(this._linePoints.length < 2)) {
            this._initLineBuffer(t), this._linePoints.length;
            for (var a = n.enumerate(this._lineBuffers); a.moveNext(); ) {
              var s = a.current;
              ae.use(t, s.vertexBuffer, r), t.gl.drawArrays(1, 0, s.count);
            }
          }
        },
        _initLineBuffer: function(t) {
          if (t.gl != null && !this._lineBuffers.length) {
            var e = this._linePoints.length, r = null, a = null;
            if (this._localCenter = new L(), this.get_depthBuffered()) {
              for (var s = n.enumerate(this._linePoints); s.moveNext(); ) {
                var l = s.current;
                this._localCenter.add(l);
              }
              this._localCenter.x /= e, this._localCenter.y /= e, this._localCenter.z /= e;
            }
            for (var h = e, u = 0, _ = 0, m, p = n.enumerate(this._linePoints); p.moveNext(); ) {
              var l = p.current;
              if (_ >= 1e5 || a == null) {
                r != null && r.unlock();
                var b = Math.min(1e5, h);
                h -= b, r = new Ps(b), a = r.lock(), this._lineBuffers.push(r), this._lineBufferCounts.push(b), _ = 0;
              }
              this.useLocalCenters ? (m = L.subtractVectors(l, this._localCenter), a[_] = new qn(m, this._lineColors[u])) : a[_] = new qn(l, this._lineColors[u]), u++, _++;
            }
            r != null && r.unlock();
          }
        },
        _emptyLineBuffer: function() {
          for (var t = n.enumerate(this._lineBuffers); t.moveNext(); ) {
            var e = t.current;
            e.dispose();
          }
          this._lineBuffers.length = 0;
        }
      };
      function _n() {
        this._zBuffer = !0, this.timeSeries = !1, this.showFarSide = !0, this.sky = !1, this.decay = 0, this.useNonRotatingFrame = !1, this.jNow = 0, this._linePoints = [], this._lineColors = [], this._lineDates = [], this._usingLocalCenter = !0, this._lineBuffers = [], this._lineBufferCounts = [];
      }
      var hu = {
        get_depthBuffered: function() {
          return this._zBuffer;
        },
        set_depthBuffered: function(t) {
          return this._zBuffer = t, t;
        },
        addLine: function(t, e, r, a) {
          this._linePoints.push(t), this._linePoints.push(e), this._lineColors.push(r), this._lineDates.push(a), this._emptyLineBuffer();
        },
        addLineNoDate: function(t, e, r) {
          this._linePoints.push(t), this._linePoints.push(e), this._lineColors.push(r), this._lineDates.push(new ve(0, 0)), this._emptyLineBuffer();
        },
        clear: function() {
          this._linePoints.length = 0, this._lineColors.length = 0, this._lineDates.length = 0;
        },
        drawLines: function(t, e) {
          if (!(this._linePoints.length < 2 || e <= 0) && t.gl != null) {
            this._initLineBuffer();
            for (var r = n.enumerate(this._lineBuffers); r.moveNext(); ) {
              var a = r.current;
              Gt.use(t, a.vertexBuffer, B.fromArgb(255, 255, 255, 255), this._zBuffer, this.jNow, this.timeSeries ? this.decay : 0), t.gl.drawArrays(1, 0, a.count);
            }
          }
        },
        _initLineBuffer: function() {
          if (!this._lineBuffers.length) {
            for (var t = this._linePoints.length, e = null, r = null, a = t, s = 0, l = 0, h, u = n.enumerate(this._linePoints); u.moveNext(); ) {
              var _ = u.current;
              if (l >= 1e5 || r == null) {
                e != null && e.unlock();
                var m = Math.min(1e5, a);
                a -= m, e = new ra(m), r = e.lock(), this._lineBuffers.push(e), this._lineBufferCounts.push(m), l = 0;
              }
              var p = n.truncate(s / 2);
              h = _, r[l] = new fn(), r[l].position = h, r[l].normal = _, r[l].tu = this._lineDates[p].startDate, r[l].tv = this._lineDates[p].endDate, r[l].set_color(this._lineColors[p]), s++, l++;
            }
            e != null && e.unlock();
          }
        },
        _emptyLineBuffer: function() {
        }
      };
      function Er() {
        this._trianglePoints = [], this._triangleColors = [], this._triangleDates = [], this.timeSeries = !1, this.showFarSide = !1, this.sky = !1, this.depthBuffered = !0, this.writeZbuffer = !1, this.decay = 0, this.autoTime = !0, this.jNow = 0, this._dataToDraw = !1, this._triangleBuffers = [], this._triangleBufferCounts = [];
      }
      var cu = {
        addTriangle: function(t, e, r, a, s) {
          this._trianglePoints.push(t), this._trianglePoints.push(e), this._trianglePoints.push(r), this._triangleColors.push(a), this._triangleDates.push(s), this._emptyTriangleBuffer();
        },
        addSubdividedTriangles: function(t, e, r, a, s, l) {
          if (l--, l < 0)
            this.addTriangle(t, e, r, a, s);
          else {
            var h, u, _;
            h = L.midPointByLength(t, e), u = L.midPointByLength(e, r), _ = L.midPointByLength(r, t), this.addSubdividedTriangles(t, h, _, a, s, l), this.addSubdividedTriangles(h, u, _, a, s, l), this.addSubdividedTriangles(h, e, u, a, s, l), this.addSubdividedTriangles(u, r, _, a, s, l);
          }
        },
        addQuad: function(t, e, r, a, s, l) {
          this._trianglePoints.push(t), this._trianglePoints.push(r), this._trianglePoints.push(e), this._trianglePoints.push(e), this._trianglePoints.push(r), this._trianglePoints.push(a), this._triangleColors.push(s), this._triangleDates.push(l), this._triangleColors.push(s), this._triangleDates.push(l), this._emptyTriangleBuffer();
        },
        clear: function() {
          this._triangleColors.length = 0, this._trianglePoints.length = 0, this._triangleDates.length = 0, this._emptyTriangleBuffer();
        },
        _emptyTriangleBuffer: function() {
        },
        _initTriangleBuffer: function() {
          if (!this._triangleBuffers.length) {
            for (var t = this._trianglePoints.length, e = null, r = null, a = t, s = 0, l = 0, h = n.enumerate(this._trianglePoints); h.moveNext(); ) {
              var u = h.current;
              if (l >= 9e4 || e == null) {
                e != null && e.unlock();
                var _ = Math.min(9e4, a);
                a -= _, e = new ra(_), this._triangleBuffers.push(e), this._triangleBufferCounts.push(_), r = e.lock(), l = 0;
              }
              r[l] = new fn(), r[l].position = u, r[l].normal = u;
              var m = n.truncate(s / 3);
              r[l].set_color(this._triangleColors[m]), r[l].tu = this._triangleDates[m].startDate, r[l].tv = this._triangleDates[m].endDate, s++, l++;
            }
            e != null && e.unlock(), this._triangleColors.length = 0, this._triangleDates.length = 0, this._trianglePoints.length = 0, this._dataToDraw = !0;
          }
        },
        draw: function(t, e, r) {
          if (!(this._trianglePoints.length < 1 && !this._dataToDraw) && t.gl != null) {
            this._initTriangleBuffer();
            for (var a = n.enumerate(this._triangleBuffers); a.moveNext(); ) {
              var s = a.current;
              Gt.use(t, s.vertexBuffer, B.fromArgb(255, 255, 255, 255), this.depthBuffered, this.jNow, this.timeSeries ? this.decay : 0), t.gl.drawArrays(4, 0, s.count);
            }
          }
        }
      };
      function ds() {
        this._zBuffer = !0, this.timeSeries = !1, this.decay = 0, this.jNow = 0, this._shapes = [], this._colors = [], this._dates = [], this._buffers = [], this._bufferCounts = [];
      }
      var _u = {
        get_depthBuffered: function() {
          return this._zBuffer;
        },
        set_depthBuffered: function(t) {
          return this._zBuffer = t, t;
        },
        addShape: function(t, e, r) {
          this._shapes.push(t), this._colors.push(e), this._dates.push(r);
        },
        draw: function(t, e) {
          if (!(e <= 0) && t.gl != null) {
            this._initBuffer();
            for (var r = n.enumerate(this._buffers); r.moveNext(); ) {
              var a = r.current;
              Gt.use(t, a.vertexBuffer, B.fromArgb(255, 255, 255, 255), this._zBuffer, this.jNow, this.timeSeries ? this.decay : 0), t.gl.drawArrays(6, 0, a.count);
            }
          }
        },
        _initBuffer: function() {
          if (this._buffers.length !== this._shapes.length) {
            this._buffers.length = 0;
            for (var t = 0, e = n.enumerate(this._shapes); e.moveNext(); ) {
              var r = e.current, a = new ra(r.length), s = a.lock();
              this._buffers.push(a), this._bufferCounts.push(r.length);
              for (var l = 0, h = n.enumerate(r); h.moveNext(); ) {
                var u = h.current;
                s[l] = new fn(), s[l].position = u, s[l].tu = this._dates[t].startDate, s[l].tv = this._dates[t].endDate, s[l].set_color(this._colors[t]), l++;
              }
              t++, a != null && a.unlock();
            }
          }
        }
      };
      function tr(t) {
        this._points = [], this._colors = [], this._dates = [], this._sizes = [], this.timeSeries = !1, this.showFarSide = !1, this.sky = !1, this.depthBuffered = !0, this.decay = 0, this.scale = 1, this.autoTime = !0, this.jNow = 0, this._dataToDraw = !1, this.items = [], this._imageReady = !1, this._init = !1, this.minSize = 2, this._pointBuffers = [], this._pointBufferCounts = [], this._device = t;
      }
      var fu = {
        addPoint: function(t, e, r, a) {
          this._points.push(t), this._colors.push(e._clone()), this._dates.push(r), this._sizes.push(a), this._emptyPointBuffer();
        },
        clear: function() {
          this._colors.length = 0, this._points.length = 0, this._dates.length = 0, this._sizes.length = 0, this._emptyPointBuffer();
        },
        _emptyPointBuffer: function() {
          for (var t = n.enumerate(this._pointBuffers); t.moveNext(); ) {
            var e = t.current;
            e.dispose();
          }
          this._pointBuffers.length = 0, this._init = !1;
        },
        _initBuffer: function(t) {
          var e = this;
          if (!this._init) {
            if (t.gl == null) {
              this._starProfile = document.createElement("img"), this._starProfile.addEventListener("load", function(k) {
                e._imageReady = !0;
              }, !1), this._starProfile.src = Kt.singleton.engineAssetUrl("StarProfileAlpha.png"), this._worldList = new Array(this._points.length), this._transformedList = new Array(this._points.length);
              for (var r = 0, a = n.enumerate(this._points); a.moveNext(); ) {
                var s = a.current, l = new Oa();
                l.location = s, l.tranformed = new L(), l.size = this._sizes[r], l.color = this._colors[r], this._worldList[r] = l.location, this._transformedList[r] = l.tranformed, this.items.push(l), r++;
              }
            } else if (!this._pointBuffers.length) {
              tr.starTexture == null && (tr.starTexture = A.loadPlanetTexture(Kt.singleton.engineAssetUrl("StarProfileAlpha.png")));
              for (var h = this._points.length, u = null, _ = null, m = h, r = 0, p = 0, b = n.enumerate(this._points); b.moveNext(); ) {
                var S = b.current;
                if (p >= 1e5 || _ == null) {
                  u != null && u.unlock();
                  var x = Math.min(1e5, m);
                  m -= x, u = new $s(x), _ = u.lock(), this._pointBuffers.push(u), this._pointBufferCounts.push(x), p = 0;
                }
                _[p] = new In(), _[p].position = S, _[p].pointSize = this._sizes[r], _[p].tu = this._dates[r].startDate, _[p].tv = this._dates[r].endDate, _[p].set_color(this._colors[r]), r++, p++;
              }
              u != null && u.unlock();
            }
            this._init = !0;
          }
        },
        draw: function(t, e, r) {
          if (this._initBuffer(t), t.gl == null) {
            if (!this._imageReady)
              return;
            t.device.save(), t.WVP.projectArrayToScreen(this._worldList, this._transformedList);
            var a = t.device;
            a.globalAlpha = 0.4;
            var s = t.width, l = t.height;
            L.makeCopy(t.get_viewPoint());
            for (var h = t.get_fovScale() / 100, u = n.enumerate(this.items); u.moveNext(); ) {
              var _ = u.current;
              if (_.tranformed.z < 1) {
                var m = _.tranformed.x, p = _.tranformed.y, b = 0.1 * _.size / h, S = b / 2;
                m > -S && m < s + S && p > -S && p < l + S && (a.beginPath(), a.fillStyle = _.color.toFormat(), a.arc(m, p, b, 0, Math.PI * 2, !0), a.fill());
              }
            }
            t.device.restore();
          } else {
            var x = new L(), k = H.multiplyMatrix(t.get_world(), t.get_view());
            k.invert();
            for (var P = L._transformCoordinate(x, k), I = n.enumerate(this._pointBuffers); I.moveNext(); ) {
              var D = I.current;
              Mt.use(t, D.vertexBuffer, tr.starTexture.texture2d, B.fromArgb(255 * e, 255, 255, 255), this.depthBuffered, this.jNow, this.timeSeries ? this.decay : 0, P, this.scale * (t.height / 960), this.minSize, this.showFarSide, this.sky), t.gl.drawArrays(0, 0, D.count);
            }
          }
        },
        drawTextured: function(t, e, r) {
          this._initBuffer(t);
          var a = new L(), s = H.multiplyMatrix(t.get_world(), t.get_view());
          s.invert();
          for (var l = L._transformCoordinate(a, s), h = n.enumerate(this._pointBuffers); h.moveNext(); ) {
            var u = h.current;
            Mt.use(t, u.vertexBuffer, e, B.fromArgb(255 * r, 255, 255, 255), this.depthBuffered, this.jNow, this.decay, l, this.scale * (t.height / 960), this.minSize, this.showFarSide, this.sky), t.gl.drawArrays(0, 0, u.count);
          }
        }
      };
      function fn() {
        this.position = new L(), this.normal = new L(), this.tu = 0, this.tv = 0;
      }
      fn.create = function(t, e, r, a) {
        var s = new fn();
        return s.position = t, s.normal = e, s.tu = r, s.tv = 0, s.color = a, s;
      };
      var gu = {
        get_color: function() {
          return this.color;
        },
        set_color: function(t) {
          return this.color = t, t;
        }
      };
      function In() {
        this.pointSize = 0, this.tu = 0, this.tv = 0;
      }
      In.create = function(t, e, r, a) {
        var s = new In();
        return s.position = t, s.pointSize = e, s.tu = r, s.tv = 0, s.color = a, s;
      };
      var du = {
        get_color: function() {
          return this.color;
        },
        set_color: function(t) {
          return this.color = t, t;
        }
      };
      function be() {
      }
      be.init = function(t) {
        var e = t.gl, r = `   precision highp float;                                                          
   uniform vec4 lineColor;                                                         
                                                                                   
   void main(void) {                                                               
       gl_FragColor = lineColor;                                                   
   }                                                                               
`, a = `     attribute vec3 aVertexPosition;                                              
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
     }                                                                            
                                                                                  
`;
        be._frag = e.createShader(35632), e.shaderSource(be._frag, r), e.compileShader(be._frag), e.getShaderParameter(be._frag, 35713), be._vert = e.createShader(35633), e.shaderSource(be._vert, a), e.compileShader(be._vert), e.getShaderParameter(be._vert, 35713), be._prog = e.createProgram(), e.attachShader(be._prog, be._vert), e.attachShader(be._prog, be._frag), e.linkProgram(be._prog), e.getProgramParameter(be._prog, 35714), e.useProgram(be._prog), be.vertLoc = e.getAttribLocation(be._prog, "aVertexPosition"), be.lineColorLoc = e.getUniformLocation(be._prog, "lineColor"), be.projMatLoc = e.getUniformLocation(be._prog, "uPMatrix"), be.mvMatLoc = e.getUniformLocation(be._prog, "uMVMatrix"), e.enable(3042), e.blendFunc(770, 771), be.initialized = !0;
      }, be.use = function(t, e, r, a) {
        var s = t.gl;
        if (s != null) {
          be.initialized || be.init(t), s.useProgram(be._prog);
          var l = H.multiplyMatrix(t.get_world(), t.get_view());
          s.uniformMatrix4fv(be.mvMatLoc, !1, l.floatArray()), s.uniformMatrix4fv(be.projMatLoc, !1, t.get_projection().floatArray()), s.uniform4f(be.lineColorLoc, r.r / 255, r.g / 255, r.b / 255, 1), t.space || !a ? s.disable(2929) : s.enable(2929), s.disableVertexAttribArray(0), s.disableVertexAttribArray(1), s.disableVertexAttribArray(2), s.disableVertexAttribArray(3), s.enableVertexAttribArray(be.vertLoc), s.bindBuffer(34962, e), s.bindBuffer(34963, null), s.vertexAttribPointer(be.vertLoc, 3, 5126, !1, 0, 0), s.lineWidth(1), s.enable(3042), s.blendFunc(770, 771);
        }
      };
      var mu = {};
      function ze() {
      }
      ze.init = function(t) {
        var e = t.gl, r = `   precision highp float;                                                          
   uniform vec4 lineColor;                                                         
                                                                                   
   void main(void) {                                                               
       gl_FragColor = lineColor;                                                   
   }                                                                               
`, a = `     attribute vec3 aVertexPosition;                                              
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = vec4(aVertexPosition, 1.0);                                
     }                                                                            
                                                                                  
`;
        ze._frag = e.createShader(35632), e.shaderSource(ze._frag, r), e.compileShader(ze._frag), e.getShaderParameter(ze._frag, 35713), ze._vert = e.createShader(35633), e.shaderSource(ze._vert, a), e.compileShader(ze._vert), e.getShaderParameter(ze._vert, 35713), ze._prog = e.createProgram(), e.attachShader(ze._prog, ze._vert), e.attachShader(ze._prog, ze._frag), e.linkProgram(ze._prog), e.getProgramParameter(ze._prog, 35714), e.useProgram(ze._prog), ze.vertLoc = e.getAttribLocation(ze._prog, "aVertexPosition"), ze.lineColorLoc = e.getUniformLocation(ze._prog, "lineColor"), e.enable(3042), e.blendFunc(770, 771), ze.initialized = !0;
      }, ze.use = function(t, e, r, a) {
        var s = t.gl;
        s != null && (ze.initialized || ze.init(t), s.useProgram(ze._prog), H.multiplyMatrix(t.get_world(), t.get_view()), s.uniform4f(ze.lineColorLoc, r.r / 255, r.g / 255, r.b / 255, 1), t.space || !a ? s.disable(2929) : s.enable(2929), s.disableVertexAttribArray(0), s.disableVertexAttribArray(1), s.disableVertexAttribArray(2), s.disableVertexAttribArray(3), s.enableVertexAttribArray(ze.vertLoc), s.bindBuffer(34962, e), s.bindBuffer(34963, null), s.vertexAttribPointer(ze.vertLoc, 3, 5126, !1, 0, 0), s.lineWidth(1), s.enable(3042), s.blendFunc(770, 771));
      };
      var pu = {};
      function ae() {
      }
      ae.init = function(t) {
        var e = t.gl, r = `    precision highp float;                                                        
    uniform vec4 lineColor;                                                       
    varying lowp vec4 vColor;                                                     
                                                                                  
    void main(void) {                                                             
        gl_FragColor = lineColor * vColor;                                        
    }                                                                             
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec4 aVertexColor;                                                 
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
     varying lowp vec4 vColor;                                                    
                                                                                  
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vColor = aVertexColor;                                                   
     }                                                                            
                                                                                  
`;
        ae._frag = e.createShader(35632), e.shaderSource(ae._frag, r), e.compileShader(ae._frag), e.getShaderParameter(ae._frag, 35713), ae._vert = e.createShader(35633), e.shaderSource(ae._vert, a), e.compileShader(ae._vert), e.getShaderParameter(ae._vert, 35713), ae._prog = e.createProgram(), e.attachShader(ae._prog, ae._vert), e.attachShader(ae._prog, ae._frag), e.linkProgram(ae._prog), e.getProgramParameter(ae._prog, 35714), e.useProgram(ae._prog), ae.vertLoc = e.getAttribLocation(ae._prog, "aVertexPosition"), ae.colorLoc = e.getAttribLocation(ae._prog, "aVertexColor"), ae.lineColorLoc = e.getUniformLocation(ae._prog, "lineColor"), ae.projMatLoc = e.getUniformLocation(ae._prog, "uPMatrix"), ae.mvMatLoc = e.getUniformLocation(ae._prog, "uMVMatrix"), e.enable(3042), e.blendFunc(770, 771), ae.initialized = !0;
      }, ae.use = function(t, e, r) {
        var a = t.gl;
        if (a != null) {
          ae.initialized || ae.init(t), a.useProgram(ae._prog);
          var s = H.multiplyMatrix(t.get_world(), t.get_view());
          a.uniformMatrix4fv(ae.mvMatLoc, !1, s.floatArray()), a.uniformMatrix4fv(ae.projMatLoc, !1, t.get_projection().floatArray()), a.uniform4f(ae.lineColorLoc, r.r / 255, r.g / 255, r.b / 255, 1), t.space ? a.disable(2929) : a.enable(2929), a.disableVertexAttribArray(0), a.disableVertexAttribArray(1), a.disableVertexAttribArray(2), a.disableVertexAttribArray(3), a.bindBuffer(34962, e), a.bindBuffer(34963, null), a.enableVertexAttribArray(ae.vertLoc), a.enableVertexAttribArray(ae.colorLoc), a.vertexAttribPointer(ae.vertLoc, 3, 5126, !1, 28, 0), a.vertexAttribPointer(ae.colorLoc, 4, 5126, !1, 28, 12), a.lineWidth(1), a.enable(3042), a.blendFunc(770, 771);
        }
      };
      var vu = {};
      function Gt() {
      }
      Gt.init = function(t) {
        var e = t.gl, r = `    precision highp float;                                                              
    uniform vec4 lineColor;                                                             
    varying lowp vec4 vColor;                                                           
    void main(void)                                                                     
    {                                                                                   
        gl_FragColor = lineColor * vColor;                                              
    }                                                                                   
`, a = `    attribute vec3 aVertexPosition;                                                     
    attribute vec4 aVertexColor;                                                        
    attribute vec2 aTime;                                                               
    uniform mat4 uMVMatrix;                                                             
    uniform mat4 uPMatrix;                                                              
    uniform float jNow;                                                                 
    uniform float decay;                                                                
                                                                                        
    varying lowp vec4 vColor;                                                           
                                                                                        
    void main(void)                                                                     
    {                                                                                   
        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);                
        float dAlpha = 1.0;                                                             
        if ( decay > 0.0)                                                               
        {                                                                               
             dAlpha = 1.0 - ((jNow - aTime.y) / decay);                                 
              if (dAlpha > 1.0 )                                                         
             {                                                                          
                  dAlpha = 1.0;                                                         
             }                                                                          
        }                                                                               
        if (jNow < aTime.x && decay > 0.0)                                              
        {                                                                               
            vColor = vec4(1, 1, 1, 1);                                                  
        }                                                                               
        else                                                                            
        {                                                                               
           vColor = vec4(aVertexColor.r, aVertexColor.g, aVertexColor.b, dAlpha * aVertexColor.a);          
        }                                                                                
    }                                                                                    
                                                                                         
`;
        Gt._frag = e.createShader(35632), e.shaderSource(Gt._frag, r), e.compileShader(Gt._frag), e.getShaderParameter(Gt._frag, 35713), Gt._vert = e.createShader(35633), e.shaderSource(Gt._vert, a), e.compileShader(Gt._vert), e.getShaderParameter(Gt._vert, 35713), Gt._prog = e.createProgram(), e.attachShader(Gt._prog, Gt._vert), e.attachShader(Gt._prog, Gt._frag), e.linkProgram(Gt._prog), e.getProgramParameter(Gt._prog, 35714), e.useProgram(Gt._prog), Gt.vertLoc = e.getAttribLocation(Gt._prog, "aVertexPosition"), Gt.colorLoc = e.getAttribLocation(Gt._prog, "aVertexColor"), Gt.timeLoc = e.getAttribLocation(Gt._prog, "aTime"), Gt.lineColorLoc = e.getUniformLocation(Gt._prog, "lineColor"), Gt.projMatLoc = e.getUniformLocation(Gt._prog, "uPMatrix"), Gt.mvMatLoc = e.getUniformLocation(Gt._prog, "uMVMatrix"), Gt.jNowLoc = e.getUniformLocation(Gt._prog, "jNow"), Gt.decayLoc = e.getUniformLocation(Gt._prog, "decay"), e.enable(3042), e.blendFunc(770, 771), Gt.initialized = !0;
      }, Gt.use = function(t, e, r, a, s, l) {
        var h = t.gl;
        if (h != null) {
          Gt.initialized || Gt.init(t), h.useProgram(Gt._prog);
          var u = H.multiplyMatrix(t.get_world(), t.get_view());
          h.uniformMatrix4fv(Gt.mvMatLoc, !1, u.floatArray()), h.uniformMatrix4fv(Gt.projMatLoc, !1, t.get_projection().floatArray()), h.uniform4f(Gt.lineColorLoc, r.r / 255, r.g / 255, r.b / 255, 1), h.uniform1f(Gt.jNowLoc, s), h.uniform1f(Gt.decayLoc, l), a ? h.enable(2929) : h.disable(2929), h.disableVertexAttribArray(0), h.disableVertexAttribArray(1), h.disableVertexAttribArray(2), h.disableVertexAttribArray(3), h.bindBuffer(34962, e), h.bindBuffer(34963, null), h.enableVertexAttribArray(Gt.vertLoc), h.enableVertexAttribArray(Gt.colorLoc), h.vertexAttribPointer(Gt.vertLoc, 3, 5126, !1, 36, 0), h.vertexAttribPointer(Gt.colorLoc, 4, 5126, !1, 36, 12), h.vertexAttribPointer(Gt.timeLoc, 2, 5126, !1, 36, 28), h.lineWidth(1), h.enable(3042), h.blendFunc(770, 771);
        }
      };
      var wu = {};
      function Mt() {
      }
      Mt.init = function(t) {
        var e = t.gl, r = `    precision mediump float;                                                            
    uniform vec4 lineColor;                                                             
    varying lowp vec4 vColor;                                                           
    uniform sampler2D uSampler;                                                         
    void main(void)                                                                     
    {                                                                                   
        vec4 texColor;                                                                  
        texColor = texture2D(uSampler, gl_PointCoord);                                  
                                                                                        
                                                                                        
        gl_FragColor = lineColor * vColor * texColor;                                   
    }                                                                                   
`, a = `    attribute vec3 aVertexPosition;                                                     
    attribute vec4 aVertexColor;                                                        
    attribute vec2 aTime;                                                               
    attribute float aPointSize;                                                         
    uniform mat4 uMVMatrix;                                                             
    uniform mat4 uPMatrix;                                                              
    uniform float jNow;                                                                 
    uniform vec3 cameraPosition;                                                        
    uniform float decay;                                                                
    uniform float scale;                                                                
    uniform float minSize;                                                              
    uniform float sky;                                                                  
    uniform float showFarSide;                                                          
                                                                                        
    varying lowp vec4 vColor;                                                           
                                                                                        
    void main(void)                                                                     
    {                                                                                   
        float dotCam = dot( normalize(cameraPosition-aVertexPosition), normalize(aVertexPosition));                                  
        float dist = distance(aVertexPosition, cameraPosition);                         
        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);                
        float dAlpha = 1.0;                                                             
        if ( decay > 0.0)                                                               
        {                                                                               
             dAlpha = 1.0 - ((jNow - aTime.y) / decay);                                 
              if (dAlpha > 1.0 )                                                         
             {                                                                          
                  dAlpha = 1.0;                                                         
             }                                                                          
        }                                                                               
        if ( showFarSide == 0.0 && (dotCam * sky) < 0.0 || (jNow < aTime.x && decay > 0.0))                                              
        {                                                                               
            vColor = vec4(0.0, 0.0, 0.0, 0.0);                                          
        }                                                                               
        else                                                                            
        {                                                                               
           vColor = vec4(aVertexColor.r, aVertexColor.g, aVertexColor.b, dAlpha);       
        }                                                                               
        float lSize = scale;                                                            
        if (scale < 0.0)                                                                
        {                                                                               
           lSize = -scale;                                                              
           dist = 1.0;                                                                  
        }                                                                               
        gl_PointSize = max(minSize, (lSize * ( aPointSize ) / dist));                   
    }                                                                                   
                                                                                        
`;
        Mt._frag = e.createShader(35632), e.shaderSource(Mt._frag, r), e.compileShader(Mt._frag), e.getShaderParameter(Mt._frag, 35713), Mt._vert = e.createShader(35633), e.shaderSource(Mt._vert, a), e.compileShader(Mt._vert), e.getShaderParameter(Mt._vert, 35713), e.getShaderInfoLog(Mt._vert), Mt._prog = e.createProgram(), e.attachShader(Mt._prog, Mt._vert), e.attachShader(Mt._prog, Mt._frag), e.linkProgram(Mt._prog), e.getProgramParameter(Mt._prog, 35714), e.useProgram(Mt._prog), Mt.vertLoc = e.getAttribLocation(Mt._prog, "aVertexPosition"), Mt.colorLoc = e.getAttribLocation(Mt._prog, "aVertexColor"), Mt.pointSizeLoc = e.getAttribLocation(Mt._prog, "aPointSize"), Mt.timeLoc = e.getAttribLocation(Mt._prog, "aTime"), Mt.projMatLoc = e.getUniformLocation(Mt._prog, "uPMatrix"), Mt.mvMatLoc = e.getUniformLocation(Mt._prog, "uMVMatrix"), Mt.sampLoc = e.getUniformLocation(Mt._prog, "uSampler"), Mt.jNowLoc = e.getUniformLocation(Mt._prog, "jNow"), Mt.decayLoc = e.getUniformLocation(Mt._prog, "decay"), Mt.lineColorLoc = e.getUniformLocation(Mt._prog, "lineColor"), Mt.cameraPosLoc = e.getUniformLocation(Mt._prog, "cameraPosition"), Mt.scaleLoc = e.getUniformLocation(Mt._prog, "scale"), Mt.skyLoc = e.getUniformLocation(Mt._prog, "sky"), Mt.showFarSideLoc = e.getUniformLocation(Mt._prog, "showFarSide"), Mt.minSizeLoc = e.getUniformLocation(Mt._prog, "minSize"), e.enable(3042), Mt.initialized = !0;
      }, Mt.use = function(t, e, r, a, s, l, h, u, _, m, p, b) {
        r == null && (r = Te.getEmpty());
        var S = t.gl;
        if (S != null) {
          Mt.initialized || Mt.init(t), S.useProgram(Mt._prog);
          var x = H.multiplyMatrix(t.get_world(), t.get_view());
          S.uniformMatrix4fv(Mt.mvMatLoc, !1, x.floatArray()), S.uniformMatrix4fv(Mt.projMatLoc, !1, t.get_projection().floatArray()), S.uniform1i(Mt.sampLoc, 0), S.uniform1f(Mt.jNowLoc, l), S.uniform1f(Mt.decayLoc, h), S.uniform4f(Mt.lineColorLoc, a.r / 255, a.g / 255, a.b / 255, a.a / 255), S.uniform3f(Mt.cameraPosLoc, u.x, u.y, u.z), S.uniform1f(Mt.scaleLoc, _), S.uniform1f(Mt.minSizeLoc, m), S.uniform1f(Mt.showFarSideLoc, p ? 1 : 0), S.uniform1f(Mt.skyLoc, b ? -1 : 1), s ? S.enable(2929) : S.disable(2929), S.disableVertexAttribArray(0), S.disableVertexAttribArray(1), S.disableVertexAttribArray(2), S.disableVertexAttribArray(3), S.bindBuffer(34962, e), S.bindBuffer(34963, null), S.enableVertexAttribArray(Mt.vertLoc), S.enableVertexAttribArray(Mt.colorLoc), S.enableVertexAttribArray(Mt.pointSizeLoc), S.enableVertexAttribArray(Mt.timeLoc), S.vertexAttribPointer(Mt.vertLoc, 3, 5126, !1, 40, 0), S.vertexAttribPointer(Mt.colorLoc, 4, 5126, !1, 40, 12), S.vertexAttribPointer(Mt.pointSizeLoc, 1, 5126, !1, 40, 36), S.vertexAttribPointer(Mt.timeLoc, 2, 5126, !1, 40, 28), S.activeTexture(33984), S.bindTexture(3553, r), S.lineWidth(1), S.enable(3042), S.blendFunc(770, 1);
        }
      };
      var bu = {};
      function mt() {
      }
      mt.init = function(t) {
        var e = t.gl, r = `    precision mediump float;                                                            
    uniform vec4 lineColor;                                                             
    varying lowp vec4 vColor;                                                           
    uniform sampler2D uSampler;                                                         
    void main(void)                                                                     
    {                                                                                   
        vec4 texColor;                                                                  
        texColor = texture2D(uSampler, gl_PointCoord);                                  
                                                                                        
                                                                                        
        gl_FragColor = lineColor * vColor * texColor;                                   
    }                                                                                   
`, a = `    attribute vec3 ABC;                                                                 
    attribute vec3 abc;                                                                 
    attribute float PointSize;                                                          
    attribute vec4 Color;                                                               
    attribute vec2 we;                                                                  
    attribute vec2 nT;                                                                  
    attribute vec2 az;                                                                  
    attribute vec2 orbit;                                                               
    uniform mat4 uMVMatrix;                                                             
    uniform mat4 uPMatrix;                                                              
    uniform float jNow;                                                                 
    uniform vec3 cameraPosition;                                                        
    uniform float MM;                                                                   
    uniform float scaling;                                                              
    uniform float minSize;                                                              
    uniform float opacity;                                                              
    varying lowp vec4 vColor;                                                           
                                                                                        
    void main(void)                                                                     
    {                                                                                   
     float M = nT.x * (jNow - nT.y) * 0.01745329251994;                                 
     float e = we.y;                                                                    
     float a = az.x;                                                                    
     float PI = 3.1415926535897932384;                                                  
     float w = we.x* 0.01745329251994;                                                  
     float F = 1.0;                                                                     
     if (M < 0.0)                                                                       
       F = -1.0;                                                                        
     M = abs(M) / (2.0 * PI);                                                           
     M = (M - float(int(M)))*2.0 *PI *F;                                                
     if (MM != 0.0)                                                                     
     {                                                                                  
       M = MM + (1.0- orbit.x) *2.0 *PI;                                                
       if (M > (2.0*PI))                                                                
           M = M - (2.0*PI);                                                            
     }                                                                                  
                                                                                        
     if (M < 0.0)                                                                       
       M += 2.0 *PI;                                                                    
     F = 1.0;                                                                           
     if (M > PI)                                                                        
        F = -1.0;                                                                       
     if (M > PI)                                                                        
       M = 2.0 *PI - M;                                                                 
                                                                                        
     float E = PI / 2.0;                                                                
     float scale = PI / 4.0;                                                            
     for (int i =0; i<23; i++)                                                          
     {                                                                                  
       float R = E - e *sin(E);                                                         
       if (M > R)                                                                       
      	E += scale;                                                                      
       else                                                                             
     	E -= scale;                                                                      
       scale /= 2.0;                                                                    
     }                                                                                  
      E = E * F;                                                                        
                                                                                        
     float v = 2.0 * atan(sqrt((1.0 + e) / (1.0 -e )) * tan(E/2.0));                    
     float r = a * (1.0-e * cos(E));                                                    
                                                                                        
     vec4 pnt;                                                                          
     pnt.x = r * abc.x * sin(ABC.x + w + v);                                            
     pnt.z = r * abc.y * sin(ABC.y + w + v);                                            
     pnt.y = r * abc.z * sin(ABC.z + w + v);                                            
     pnt.w = 1.0;                                                                       
                                                                                        
     float dist = distance(pnt.xyz, cameraPosition.xyz);                                
     gl_Position = uPMatrix * uMVMatrix * pnt;                                          
     vColor.a = opacity * (1.0-(orbit.x));                                              
     vColor.r = Color.r;                                                                
     vColor.g = Color.g;                                                                
     vColor.b = Color.b;                                                                
     gl_PointSize = max(minSize, scaling * (PointSize / dist));                         
 }                                                                                      
`;
        mt._frag = e.createShader(35632), e.shaderSource(mt._frag, r), e.compileShader(mt._frag), e.getShaderParameter(mt._frag, 35713), mt._vert = e.createShader(35633), e.shaderSource(mt._vert, a), e.compileShader(mt._vert), e.getShaderParameter(mt._vert, 35713), e.getShaderInfoLog(mt._vert), mt._prog = e.createProgram(), e.attachShader(mt._prog, mt._vert), e.attachShader(mt._prog, mt._frag), e.linkProgram(mt._prog), e.getProgramParameter(mt._prog, 35714), e.useProgram(mt._prog), mt.abcLoc1 = e.getAttribLocation(mt._prog, "abc"), mt.abcLoc = e.getAttribLocation(mt._prog, "ABC"), mt.pointSizeLoc = e.getAttribLocation(mt._prog, "PointSize"), mt.colorLoc = e.getAttribLocation(mt._prog, "Color"), mt.weLoc = e.getAttribLocation(mt._prog, "we"), mt.nTLoc = e.getAttribLocation(mt._prog, "nT"), mt.azLoc = e.getAttribLocation(mt._prog, "az"), mt.orbitLoc = e.getAttribLocation(mt._prog, "orbit"), mt.projMatLoc = e.getUniformLocation(mt._prog, "uPMatrix"), mt.mvMatLoc = e.getUniformLocation(mt._prog, "uMVMatrix"), mt.jNowLoc = e.getUniformLocation(mt._prog, "jNow"), mt.cameraPosLoc = e.getUniformLocation(mt._prog, "cameraPosition"), mt.mmLoc = e.getUniformLocation(mt._prog, "MM"), mt.scaleLoc = e.getUniformLocation(mt._prog, "scaling"), mt.minSizeLoc = e.getUniformLocation(mt._prog, "minSize"), mt.lineColorLoc = e.getUniformLocation(mt._prog, "lineColor"), mt.opacityLoc = e.getUniformLocation(mt._prog, "opacity"), mt.sampLoc = e.getUniformLocation(mt._prog, "uSampler"), e.enable(3042), mt.initialized = !0;
      }, mt.use = function(t, e, r, a, s, l, h, u, _, m, p, b) {
        a == null && (a = Te.getEmpty());
        var S = t.gl;
        S != null && (mt.initialized || mt.init(t), S.useProgram(mt._prog), S.uniformMatrix4fv(mt.mvMatLoc, !1, e.floatArray()), S.uniformMatrix4fv(mt.projMatLoc, !1, t.get_projection().floatArray()), S.uniform1i(mt.sampLoc, 0), S.uniform1f(mt.jNowLoc, u), S.uniform1f(mt.mmLoc, _), S.uniform4f(mt.lineColorLoc, s.r / 255, s.g / 255, s.b / 255, s.a / 255), S.uniform1f(mt.opacityLoc, l), S.uniform3f(mt.cameraPosLoc, m.x, m.y, m.z), S.uniform1f(mt.scaleLoc, p), S.uniform1f(mt.minSizeLoc, b), h ? S.enable(2929) : S.disable(2929), S.disableVertexAttribArray(0), S.disableVertexAttribArray(1), S.disableVertexAttribArray(2), S.disableVertexAttribArray(3), S.bindBuffer(34962, r), S.bindBuffer(34963, null), S.enableVertexAttribArray(mt.abcLoc), S.enableVertexAttribArray(mt.abcLoc1), S.enableVertexAttribArray(mt.colorLoc), S.enableVertexAttribArray(mt.pointSizeLoc), S.enableVertexAttribArray(mt.weLoc), S.enableVertexAttribArray(mt.nTLoc), S.enableVertexAttribArray(mt.azLoc), S.enableVertexAttribArray(mt.orbitLoc), S.enableVertexAttribArray(mt.weLoc), S.vertexAttribPointer(mt.abcLoc, 3, 5126, !1, 76, 0), S.vertexAttribPointer(mt.abcLoc1, 3, 5126, !1, 76, 12), S.vertexAttribPointer(mt.pointSizeLoc, 1, 5126, !1, 76, 24), S.vertexAttribPointer(mt.colorLoc, 4, 5126, !1, 76, 28), S.vertexAttribPointer(mt.weLoc, 2, 5126, !1, 76, 44), S.vertexAttribPointer(mt.nTLoc, 2, 5126, !1, 76, 52), S.vertexAttribPointer(mt.azLoc, 2, 5126, !1, 76, 60), S.vertexAttribPointer(mt.orbitLoc, 2, 5126, !1, 76, 68), S.activeTexture(33984), S.bindTexture(3553, a), S.lineWidth(1), S.enable(3042), S.blendFunc(770, 1));
      };
      var yu = {};
      function Ht() {
      }
      Ht.init = function(t) {
        var e = t.gl, r = `    precision mediump float;                                                            
    varying lowp vec4 vColor;                                                           
    void main(void)                                                                     
    {                                                                                   
        gl_FragColor = vColor;                                          
    }                                                                                   
`, a = `    attribute vec3 Angle;                                                               
    uniform mat4 matWVP;                                                             
    uniform mat4 matPosition;                                                              
    uniform vec3 positionNow;                                                        
    uniform float semiMajorAxis;                                                                   
    uniform float eccentricity;                                                              
    uniform vec4 color;                                                             
    uniform float eccentricAnomaly;                                                              
    varying lowp vec4 vColor;                                                           
                                                                                        
    void main(void)                                                                     
    {                                                                                   
        float fade = (1.0 - Angle.x);                                                    
        float PI = 3.1415927;                                                          
        float E = eccentricAnomaly - Angle.x * 2.0 * PI;                                   
        vec2 semiAxes = vec2(1.0, sqrt(1.0 - eccentricity * eccentricity)) * semiMajorAxis;   
        vec2 planePos = semiAxes * vec2(cos(E) - eccentricity, sin(E));              
        if (Angle.x == 0.0)                                                         
           gl_Position =  matPosition * vec4(positionNow, 1.0);                                
        else                                                                           
           gl_Position = matWVP * vec4(planePos.x, planePos.y, 0.0, 1.0);              
        vColor = vec4(color.rgb, fade * color.a);                                      
    }                                                                                  
`;
        Ht._frag = e.createShader(35632), e.shaderSource(Ht._frag, r), e.compileShader(Ht._frag), e.getShaderParameter(Ht._frag, 35713), Ht._vert = e.createShader(35633), e.shaderSource(Ht._vert, a), e.compileShader(Ht._vert), e.getShaderParameter(Ht._vert, 35713), e.getShaderInfoLog(Ht._vert), Ht._prog = e.createProgram(), e.attachShader(Ht._prog, Ht._vert), e.attachShader(Ht._prog, Ht._frag), e.linkProgram(Ht._prog), e.getProgramParameter(Ht._prog, 35714), e.useProgram(Ht._prog), Ht.angleLoc = e.getAttribLocation(Ht._prog, "Angle"), Ht.matWVPLoc = e.getUniformLocation(Ht._prog, "matWVP"), Ht.matPositionLoc = e.getUniformLocation(Ht._prog, "matPosition"), Ht.positionNowLoc = e.getUniformLocation(Ht._prog, "positionNow"), Ht.colorLoc = e.getUniformLocation(Ht._prog, "color"), Ht.semiMajorAxisLoc = e.getUniformLocation(Ht._prog, "semiMajorAxis"), Ht.eccentricityLoc = e.getUniformLocation(Ht._prog, "eccentricity"), Ht.eccentricAnomalyLoc = e.getUniformLocation(Ht._prog, "eccentricAnomaly"), e.enable(3042), Ht.initialized = !0;
      }, Ht.use = function(t, e, r, a, s, l, h, u) {
        var _ = t.gl;
        if (_ != null) {
          Ht.initialized || Ht.init(t), _.useProgram(Ht._prog);
          var m = H.multiplyMatrix(H.multiplyMatrix(h, t.get_view()), t.get_projection()), p = H.multiplyMatrix(H.multiplyMatrix(t.get_world(), t.get_view()), t.get_projection());
          _.uniformMatrix4fv(Ht.matWVPLoc, !1, p.floatArray()), _.uniformMatrix4fv(Ht.matPositionLoc, !1, m.floatArray()), _.uniform3f(Ht.positionNowLoc, u.x, u.y, u.z), _.uniform4f(Ht.colorLoc, s.r / 255, s.g / 255, s.b / 255, s.a / 255), _.uniform1f(Ht.semiMajorAxisLoc, e), _.uniform1f(Ht.eccentricityLoc, r), _.uniform1f(Ht.eccentricAnomalyLoc, a), _.disable(2929), _.disableVertexAttribArray(0), _.disableVertexAttribArray(1), _.disableVertexAttribArray(2), _.disableVertexAttribArray(3), _.enableVertexAttribArray(Ht.angleLoc), _.vertexAttribPointer(Ht.angleLoc, 3, 5126, !1, 0, 0), _.lineWidth(1), _.enable(3042), _.blendFunc(770, 1);
        }
      };
      var Su = {};
      function xt() {
      }
      xt.init = function(t) {
        var e = t.gl, r = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
   varying vec3 vNormal;                                                               
   varying vec3 vCamVector;                                                               
                                                                                       
   uniform sampler2D uSampler;                                                         
   uniform float opacity;                                                              
   uniform vec3 uSunPosition;                                                          
   uniform float uMinBrightness;                                                       
   uniform vec3 uAtmosphereColor;                                                       
                                                                                       
   void main(void) {                                                                   
     vec3 normal = normalize(vNormal);                                                 
     vec3 camVN = normalize(vCamVector);                                               
     vec3 cam = normalize(vec3(0.0,0.0,-1.0));                                                    
     float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);                  
     float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;                             
     atm = (dt > uMinBrightness) ? atm : 0.0;                                          
     if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }                                        
     vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));           
     gl_FragColor = col * opacity;                                                     
     gl_FragColor.rgb *= dt;                                                           
     gl_FragColor.rgb += atm * uAtmosphereColor;                                  
   }                                                                                   
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec3 aNormal;                                                     
     attribute vec2 aTextureCoord;                                                
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec3 vNormal;                                                        
     varying vec3 vCamVector;                                                     
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);              
         vec3 normalT = normalize(mat3(uMVMatrix) * aNormal);                      
         vTextureCoord = aTextureCoord;                                           
         vNormal = normalT;                                                       
     }                                                                            
                                                                                  
`;
        xt._frag = e.createShader(35632), e.shaderSource(xt._frag, r), e.compileShader(xt._frag);
        var s = e.getShaderParameter(xt._frag, 35713);
        s || e.getShaderInfoLog(xt._frag), xt._vert = e.createShader(35633), e.shaderSource(xt._vert, a), e.compileShader(xt._vert);
        var l = e.getShaderParameter(xt._vert, 35713);
        l || e.getShaderInfoLog(xt._vert), xt._prog = e.createProgram(), e.attachShader(xt._prog, xt._vert), e.attachShader(xt._prog, xt._frag), e.linkProgram(xt._prog), e.getProgramParameter(xt._prog, 35714), e.useProgram(xt._prog), xt.vertLoc = e.getAttribLocation(xt._prog, "aVertexPosition"), xt.normalLoc = e.getAttribLocation(xt._prog, "aNormal"), xt.textureLoc = e.getAttribLocation(xt._prog, "aTextureCoord"), xt.projMatLoc = e.getUniformLocation(xt._prog, "uPMatrix"), xt.mvMatLoc = e.getUniformLocation(xt._prog, "uMVMatrix"), xt.sampLoc = e.getUniformLocation(xt._prog, "uSampler"), xt.sunLoc = e.getUniformLocation(xt._prog, "uSunPosition"), xt.minBrightnessLoc = e.getUniformLocation(xt._prog, "uMinBrightness"), xt.opacityLoc = e.getUniformLocation(xt._prog, "opacity"), xt.atmosphereColorLoc = e.getUniformLocation(xt._prog, "uAtmosphereColor"), F.uvMultiple = 1, F.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), xt.initialized = !0;
      }, xt.use = function(t, e, r, a, s, l, h) {
        a == null && (a = Te.getEmpty());
        var u = t.gl;
        if (u != null) {
          xt.initialized || xt.init(t), u.useProgram(xt._prog);
          var _ = H.multiplyMatrix(t.get_world(), t.get_view());
          u.uniform1f(xt.opacityLoc, s), u.uniform1f(xt.minBrightnessLoc, t.lighting ? xt.minLightingBrightness : 1), t.lighting ? u.uniform3f(xt.atmosphereColorLoc, xt.atmosphereColor.r / 255, xt.atmosphereColor.g / 255, xt.atmosphereColor.b / 255) : u.uniform3f(xt.atmosphereColorLoc, 0, 0, 0), u.uniformMatrix4fv(xt.mvMatLoc, !1, _.floatArray()), u.uniformMatrix4fv(xt.projMatLoc, !1, t.get_projection().floatArray()), xt.sunPosition.normalize();
          var m = t.get_view().clone();
          m.set_m41(0), m.set_m42(0), m.set_m43(0), m.set_m44(1);
          var p = L._transformCoordinate(xt.sunPosition, m);
          p.normalize(), u.uniform3f(xt.sunLoc, p.x, p.y, p.z), u.uniform1i(xt.sampLoc, 0), t.space || l ? u.disable(2929) : u.enable(2929), u.disableVertexAttribArray(0), u.disableVertexAttribArray(1), u.disableVertexAttribArray(2), u.disableVertexAttribArray(3), u.bindBuffer(34962, e), u.enableVertexAttribArray(xt.vertLoc), u.enableVertexAttribArray(xt.normalLoc), u.enableVertexAttribArray(xt.textureLoc), u.vertexAttribPointer(xt.vertLoc, 3, 5126, !1, h, 0), u.vertexAttribPointer(xt.normalLoc, 3, 5126, !1, h, 12), u.vertexAttribPointer(xt.textureLoc, 2, 5126, !1, h, h - 8), u.activeTexture(33984), u.bindTexture(3553, a), u.bindBuffer(34963, r), u.enable(3042), l ? u.blendFunc(770, 1) : u.blendFunc(770, 771);
        }
      };
      var Cu = {};
      function It() {
      }
      It.init = function(t) {
        var e = t.gl, r = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
   varying vec3 vNormal;                                                               
   varying vec3 vCamVector;                                                               
                                                                                       
   uniform sampler2D uSampler;                                                         
   uniform float opacity;                                                              
   uniform vec3 uSunPosition;                                                          
   uniform float uMinBrightness;                                                       
   uniform vec3 uAtmosphereColor;                                                       
                                                                                       
   void main(void) {                                                                   
     vec3 normal = normalize(vNormal);                                                 
     vec3 camVN = normalize(vCamVector);                                               
     vec3 cam = normalize(vec3(0.0,0.0,-1.0));                                                    
     float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);                  
     float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;                             
     atm = (dt > uMinBrightness) ? atm : 0.0;                                          
     if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }                                        
     vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));           
     gl_FragColor = col * opacity;                                                     
     gl_FragColor.rgb *= dt;                                                           
     gl_FragColor.rgb += atm * uAtmosphereColor;                                  
   }                                                                                   
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec3 aNormal;                                                     
     attribute vec2 aTextureCoord;                                                
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec3 vNormal;                                                        
     varying vec3 vCamVector;                                                     
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);              
         vec3 normalT = normalize(mat3(uMVMatrix) * aNormal);                      
         vTextureCoord = aTextureCoord;                                           
         vNormal = normalT;                                                       
     }                                                                            
                                                                                  
`;
        It._frag = e.createShader(35632), e.shaderSource(It._frag, r), e.compileShader(It._frag);
        var s = e.getShaderParameter(It._frag, 35713);
        s || e.getShaderInfoLog(It._frag), It._vert = e.createShader(35633), e.shaderSource(It._vert, a), e.compileShader(It._vert);
        var l = e.getShaderParameter(It._vert, 35713);
        l || e.getShaderInfoLog(It._vert), It._prog = e.createProgram(), e.attachShader(It._prog, It._vert), e.attachShader(It._prog, It._frag), e.linkProgram(It._prog), e.getProgramParameter(It._prog, 35714), e.useProgram(It._prog), It.vertLoc = e.getAttribLocation(It._prog, "aVertexPosition"), It.normalLoc = e.getAttribLocation(It._prog, "aNormal"), It.textureLoc = e.getAttribLocation(It._prog, "aTextureCoord"), It.projMatLoc = e.getUniformLocation(It._prog, "uPMatrix"), It.mvMatLoc = e.getUniformLocation(It._prog, "uMVMatrix"), It.sampLoc = e.getUniformLocation(It._prog, "uSampler"), It.sunLoc = e.getUniformLocation(It._prog, "uSunPosition"), It.minBrightnessLoc = e.getUniformLocation(It._prog, "uMinBrightness"), It.opacityLoc = e.getUniformLocation(It._prog, "opacity"), It.atmosphereColorLoc = e.getUniformLocation(It._prog, "uAtmosphereColor"), F.uvMultiple = 1, F.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), It.initialized = !0;
      }, It.use = function(t, e, r, a, s, l, h) {
        a == null && (a = Te.getEmpty());
        var u = t.gl;
        if (u != null) {
          It.initialized || It.init(t), u.useProgram(It._prog);
          var _ = H.multiplyMatrix(t.get_world(), t.get_view());
          u.uniform1f(It.opacityLoc, s), u.uniform1f(It.minBrightnessLoc, t.lighting ? It.minLightingBrightness : 1), t.lighting ? u.uniform3f(It.atmosphereColorLoc, It.atmosphereColor.r / 255, It.atmosphereColor.g / 255, It.atmosphereColor.b / 255) : u.uniform3f(It.atmosphereColorLoc, 0, 0, 0), u.uniformMatrix4fv(It.mvMatLoc, !1, _.floatArray()), u.uniformMatrix4fv(It.projMatLoc, !1, t.get_projection().floatArray()), It.sunPosition.normalize();
          var m = t.get_view().clone();
          m.set_m41(0), m.set_m42(0), m.set_m43(0), m.set_m44(1);
          var p = L._transformCoordinate(It.sunPosition, m);
          p.normalize(), u.uniform3f(It.sunLoc, -p.x, -p.y, -p.z), u.uniform1i(It.sampLoc, 0), t.space || l ? u.disable(2929) : u.enable(2929), u.disableVertexAttribArray(0), u.disableVertexAttribArray(1), u.disableVertexAttribArray(2), u.disableVertexAttribArray(3), u.bindBuffer(34962, e), u.enableVertexAttribArray(It.vertLoc), u.enableVertexAttribArray(It.normalLoc), u.enableVertexAttribArray(It.textureLoc), u.vertexAttribPointer(It.vertLoc, 3, 5126, !1, h, 0), u.vertexAttribPointer(It.normalLoc, 3, 5126, !1, h, 12), u.vertexAttribPointer(It.textureLoc, 2, 5126, !1, h, h - 8), u.activeTexture(33984), u.bindTexture(3553, a), u.bindBuffer(34963, r), u.enable(3042), l ? u.blendFunc(770, 1) : u.blendFunc(770, 771);
        }
      };
      var Mu = {};
      function St() {
      }
      St.init = function(t) {
        var e = t.gl, r = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
   varying vec3 vNormal;                                                               
   varying vec3 vCamVector;                                                               
                                                                                       
   uniform sampler2D uSampler;                                                         
   uniform float opacity;                                                              
   uniform vec3 uSunPosition;                                                          
   uniform float uMinBrightness;                                                       
   uniform vec3 uAtmosphereColor;                                                       
                                                                                       
   void main(void) {                                                                   
     vec3 normal = normalize(vNormal);                                                 
     vec3 camVN = normalize(vCamVector);                                               
     vec3 cam = normalize(vec3(0.0,0.0,-1.0));                                                    
     float dt = uMinBrightness + pow(max(0.0,- dot(normal,uSunPosition)),0.5);                  
     float atm = max(0.0, 1.0 - 2.5 * dot(cam,camVN)) + 0.3 * dt;                             
     atm = (dt > uMinBrightness) ? atm : 0.0;                                          
     if ( uMinBrightness == 1.0 ) { dt = 1.0; atm= 0.0; }                                        
     vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));           
     gl_FragColor = col * opacity;                                                     
     gl_FragColor.rgb *= dt;                                                           
     gl_FragColor.rgb += atm * uAtmosphereColor;                                  
   }                                                                                   
`, a = `\r
                    attribute vec3 aVertexPosition;\r
                    attribute vec2 aTextureCoord;\r
                    \r
                    uniform mat4 uMVMatrix;\r
                    uniform mat4 uPMatrix;\r
                    uniform vec3 uCenterScreen;\r
                    uniform vec3 uCenterWorld;\r
\r
                    varying vec2 vTextureCoord;\r
                    varying vec3 vNormal;\r
                    varying vec3 vCamVector;\r
                    \r
                    void main(void) {\r
                        vec3 normal;\r
                        if(length(uCenterWorld) > 0.00001){\r
                            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 0.0) + vec4(uCenterScreen, 1.0);\r
                            vCamVector = normalize((mat3(uMVMatrix) * (aVertexPosition + uCenterWorld)).xyz);\r
                            normal = normalize(aVertexPosition + uCenterWorld);\r
                        } else {\r
                            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\r
                            vCamVector = normalize((mat3(uMVMatrix) * aVertexPosition).xyz);\r
                            normal = normalize(aVertexPosition);\r
                        }\r
                        vec3 normalT = normalize(mat3(uMVMatrix) * normal);\r
                        vTextureCoord = aTextureCoord;\r
                        vNormal = normalT;\r
                    }`;
        St._frag = e.createShader(35632), e.shaderSource(St._frag, r), e.compileShader(St._frag);
        var s = e.getShaderParameter(St._frag, 35713);
        s || e.getShaderInfoLog(St._frag), St._vert = e.createShader(35633), e.shaderSource(St._vert, a), e.compileShader(St._vert);
        var l = e.getShaderParameter(St._vert, 35713);
        l || e.getShaderInfoLog(St._vert), St._prog = e.createProgram(), e.attachShader(St._prog, St._vert), e.attachShader(St._prog, St._frag), e.linkProgram(St._prog), e.getProgramParameter(St._prog, 35714), e.useProgram(St._prog), St.vertLoc = e.getAttribLocation(St._prog, "aVertexPosition"), St.textureLoc = e.getAttribLocation(St._prog, "aTextureCoord"), St.projMatLoc = e.getUniformLocation(St._prog, "uPMatrix"), St.mvMatLoc = e.getUniformLocation(St._prog, "uMVMatrix"), St.sampLoc = e.getUniformLocation(St._prog, "uSampler"), St.centerScreenLoc = e.getUniformLocation(St._prog, "uCenterScreen"), St.centerWorldLoc = e.getUniformLocation(St._prog, "uCenterWorld"), St.sunLoc = e.getUniformLocation(St._prog, "uSunPosition"), St.minBrightnessLoc = e.getUniformLocation(St._prog, "uMinBrightness"), St.opacityLoc = e.getUniformLocation(St._prog, "opacity"), St.atmosphereColorLoc = e.getUniformLocation(St._prog, "uAtmosphereColor"), F.uvMultiple = 1, F.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), St.initialized = !0;
      }, St.use = function(t, e, r, a, s, l, h) {
        a == null && (a = Te.getEmpty());
        var u = t.gl;
        if (u != null) {
          St.initialized || St.init(t), u.useProgram(St._prog);
          var _ = H.multiplyMatrix(t.get_world(), t.get_view());
          if (u.uniform1f(St.opacityLoc, s), u.uniform1f(St.minBrightnessLoc, t.lighting ? St.minLightingBrightness : 1), t.lighting ? u.uniform3f(St.atmosphereColorLoc, St.atmosphereColor.r / 255, St.atmosphereColor.g / 255, St.atmosphereColor.b / 255) : u.uniform3f(St.atmosphereColorLoc, 0, 0, 0), u.uniform3f(St.centerWorldLoc, h.x, h.y, h.z), h.lengthSq() > 1e-3) {
            var m = H.multiplyMatrix(_, t.get_projection()), p = m.transform(h);
            u.uniform3f(St.centerScreenLoc, p.x, p.y, p.z);
          } else
            u.uniform3f(St.centerScreenLoc, 0, 0, 0);
          u.uniformMatrix4fv(St.mvMatLoc, !1, _.floatArray()), u.uniformMatrix4fv(St.projMatLoc, !1, t.get_projection().floatArray()), St.sunPosition.normalize();
          var b = t.get_view().clone();
          b.set_m41(0), b.set_m42(0), b.set_m43(0), b.set_m44(1);
          var S = L._transformCoordinate(St.sunPosition, b);
          S.normalize(), u.uniform3f(St.sunLoc, -S.x, -S.y, -S.z), u.uniform1i(St.sampLoc, 0), t.space || l ? u.disable(2929) : u.enable(2929), u.disableVertexAttribArray(0), u.disableVertexAttribArray(1), u.disableVertexAttribArray(2), u.disableVertexAttribArray(3), u.bindBuffer(34962, e), u.enableVertexAttribArray(St.vertLoc), u.enableVertexAttribArray(St.textureLoc), u.vertexAttribPointer(St.vertLoc, 3, 5126, !1, 20, 0), u.vertexAttribPointer(St.textureLoc, 2, 5126, !1, 20, 12), u.activeTexture(33984), u.bindTexture(3553, a), u.bindBuffer(34963, r), u.enable(3042), l ? u.blendFunc(770, 1) : u.blendFunc(770, 771);
        }
      };
      var Tu = {};
      function ft() {
      }
      ft.init = function(t) {
        var e = t.gl, r = `#version 300 es\r
                precision mediump float;\r
                in vec2 vTextureCoord;\r
                in vec3 vNormal;\r
                in vec3 vCamVector;\r
                out vec4 fragmentColor;\r
\r
                uniform sampler2D uSampler;\r
                uniform sampler2D colorSampler;\r
                uniform float blank;\r
                uniform float bzero;\r
                uniform float bscale;\r
                uniform float min;\r
                uniform float max;\r
                uniform bool containsBlanks;\r
                uniform bool transparentBlack;\r
                uniform int scaleType;\r
                uniform float opacity;\r
                \r
                bool isNaN(float value) {\r
                    // See https://stackoverflow.com/questions/9446888/best-way-to-detect-nans-in-opengl-shaders\r
                    // PKGW also finds that we need \`value != value\` on his Dell laptop running\r
                    // Chrome on Linux.\r
                    return (value != value) || !(value < 0.0 || 0.0 < value || value == 0.0);\r
                }\r
\r
                void main(void) {\r
                    //FITS images are flipped on the y axis\r
                    vec4 color = texture(uSampler, vec2(vTextureCoord.x, 1.0 - vTextureCoord.y));\r
                    if(isNaN(color.r) || (containsBlanks && abs(blank - color.r) < 0.00000001)){\r
                        fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);\r
                    } else {\r
                        float physicalValue = (bzero + bscale * color.r - min) / (max - min);\r
                        if(transparentBlack && physicalValue <= 0.0){\r
                            fragmentColor = vec4(0.0, 0.0, 0.0, 0.0);\r
                            return;\r
                        }\r
                            \r
                        physicalValue = clamp(physicalValue, 0.0, 1.0);\r
\r
                        switch(scaleType){\r
                            case 1:\r
                                physicalValue = log(physicalValue * 255.0 + 1.0 ) / log(256.0);\r
                                break;\r
                            case 2:\r
                                physicalValue = physicalValue * physicalValue;\r
                                break;\r
                            case 3:\r
                                physicalValue = sqrt(physicalValue);\r
                                break;\r
                        }\r
                        vec4 colorFromColorMapper = texture(colorSampler, vec2(physicalValue, 0.5));\r
                        fragmentColor = vec4(colorFromColorMapper.rgb, opacity);\r
                    }\r
                }\r
                `, a = `#version 300 es\r
                in vec3 aVertexPosition;\r
                in vec2 aTextureCoord;\r
                \r
                uniform mat4 uMVMatrix;\r
                uniform mat4 uPMatrix;\r
                uniform vec3 uCenterScreen;\r
                \r
                out vec2 vTextureCoord;\r
                \r
                void main(void) {\r
                    if(length(uCenterScreen) > 0.0000001) {\r
                        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 0.0) + vec4(uCenterScreen, 1.0);\r
                    } else {\r
                        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\r
                    }\r
                    vTextureCoord = aTextureCoord;\r
                }\r
                `;
        ft._frag = e.createShader(35632), e.shaderSource(ft._frag, r), e.compileShader(ft._frag);
        var s = e.getShaderParameter(ft._frag, 35713);
        if (!s) {
          var l = e.getShaderInfoLog(ft._frag);
          console.log(l);
        }
        ft._vert = e.createShader(35633), e.shaderSource(ft._vert, a), e.compileShader(ft._vert);
        var h = e.getShaderParameter(ft._vert, 35713);
        if (!h) {
          var u = e.getShaderInfoLog(ft._vert);
          console.log(u);
        }
        ft._prog = e.createProgram(), e.attachShader(ft._prog, ft._vert), e.attachShader(ft._prog, ft._frag), e.linkProgram(ft._prog), e.getProgramParameter(ft._prog, 35714), e.useProgram(ft._prog), ft.vertLoc = e.getAttribLocation(ft._prog, "aVertexPosition"), ft.textureLoc = e.getAttribLocation(ft._prog, "aTextureCoord"), ft.projMatLoc = e.getUniformLocation(ft._prog, "uPMatrix"), ft.mvMatLoc = e.getUniformLocation(ft._prog, "uMVMatrix"), ft.sampLoc = e.getUniformLocation(ft._prog, "uSampler"), ft.colorLoc = e.getUniformLocation(ft._prog, "colorSampler"), ft.centerScreenLoc = e.getUniformLocation(ft._prog, "uCenterScreen"), ft.blank = e.getUniformLocation(ft._prog, "blank"), ft.bzero = e.getUniformLocation(ft._prog, "bzero"), ft.bscale = e.getUniformLocation(ft._prog, "bscale"), ft.minLoc = e.getUniformLocation(ft._prog, "min"), ft.maxLoc = e.getUniformLocation(ft._prog, "max"), ft.transparentBlackLoc = e.getUniformLocation(ft._prog, "transparentBlack"), ft.containsBlanksLoc = e.getUniformLocation(ft._prog, "containsBlanks"), ft.scalingLocation = e.getUniformLocation(ft._prog, "scaleType"), ft.opacityLoc = e.getUniformLocation(ft._prog, "opacity"), F.uvMultiple = 1, F.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), ft.initialized = !0;
      }, ft.use = function(t, e, r, a, s, l, h) {
        a == null && (a = Te.getEmpty());
        var u = t.gl;
        if (u != null) {
          ft.initialized || ft.init(t), u.useProgram(ft._prog);
          var _ = H.multiplyMatrix(t.get_world(), t.get_view());
          if (u.uniform1f(ft.opacityLoc, s), u.uniformMatrix4fv(ft.mvMatLoc, !1, _.floatArray()), u.uniformMatrix4fv(ft.projMatLoc, !1, t.get_projection().floatArray()), h.lengthSq() > 1e-3) {
            var m = H.multiplyMatrix(_, t.get_projection()), p = m.transform(h);
            u.uniform3f(ft.centerScreenLoc, p.x, p.y, p.z);
          } else
            u.uniform3f(ft.centerScreenLoc, 0, 0, 0);
          u.uniform1i(ft.sampLoc, 0), u.uniform1i(ft.colorLoc, 1), u.uniform1f(ft.blank, ft.blankValue), u.uniform1f(ft.bzero, ft.bZero), u.uniform1f(ft.bscale, ft.bScale), u.uniform1f(ft.minLoc, ft.min), u.uniform1f(ft.maxLoc, ft.max), u.uniform1i(ft.transparentBlackLoc, ft.transparentBlack), u.uniform1i(ft.containsBlanksLoc, ft.containsBlanks), u.uniform1i(ft.scalingLocation, ft.scaleType), t.space || l ? u.disable(2929) : u.enable(2929), u.disableVertexAttribArray(0), u.disableVertexAttribArray(1), u.disableVertexAttribArray(2), u.disableVertexAttribArray(3), u.bindBuffer(34962, e), u.enableVertexAttribArray(ft.vertLoc), u.enableVertexAttribArray(ft.textureLoc), u.vertexAttribPointer(ft.vertLoc, 3, 5126, !1, 20, 0), u.vertexAttribPointer(ft.textureLoc, 2, 5126, !1, 20, 12), u.activeTexture(33984), u.bindTexture(3553, a), u.bindBuffer(34963, r), u.enable(3042), l ? u.blendFunc(770, 1) : u.blendFunc(770, 771);
        }
      };
      var xu = {};
      function Wt() {
      }
      Wt.init = function(t) {
        var e = t.gl, r = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
                                                                                       
   uniform sampler2D uSampler;                                                         
   uniform float opacity;                                                              
                                                                                       
   void main(void) {                                                                   
     vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));           
     gl_FragColor = col * opacity;                                                     
   }                                                                                   
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec2 aTextureCoord;                                                
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec3 vNormal;                                                        
     varying vec3 vCamVector;                                                     
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vTextureCoord = aTextureCoord;                                           
     }                                                                            
                                                                                  
`;
        Wt._frag = e.createShader(35632), e.shaderSource(Wt._frag, r), e.compileShader(Wt._frag);
        var s = e.getShaderParameter(Wt._frag, 35713);
        s || e.getShaderInfoLog(Wt._frag), Wt._vert = e.createShader(35633), e.shaderSource(Wt._vert, a), e.compileShader(Wt._vert);
        var l = e.getShaderParameter(Wt._vert, 35713);
        l || e.getShaderInfoLog(Wt._vert), Wt._prog = e.createProgram(), e.attachShader(Wt._prog, Wt._vert), e.attachShader(Wt._prog, Wt._frag), e.linkProgram(Wt._prog), e.getProgramParameter(Wt._prog, 35714), e.useProgram(Wt._prog), Wt.vertLoc = e.getAttribLocation(Wt._prog, "aVertexPosition"), Wt.textureLoc = e.getAttribLocation(Wt._prog, "aTextureCoord"), Wt.projMatLoc = e.getUniformLocation(Wt._prog, "uPMatrix"), Wt.mvMatLoc = e.getUniformLocation(Wt._prog, "uMVMatrix"), Wt.sampLoc = e.getUniformLocation(Wt._prog, "uSampler"), Wt.opacityLoc = e.getUniformLocation(Wt._prog, "opacity"), F.uvMultiple = 1, F.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), Wt.initialized = !0;
      }, Wt.use = function(t, e, r, a, s, l) {
        a == null && (a = Te.getEmpty());
        var h = t.gl;
        if (h != null) {
          Wt.initialized || Wt.init(t), h.useProgram(Wt._prog);
          var u = H.multiplyMatrix(t.get_world(), t.get_view());
          h.uniform1f(Wt.opacityLoc, s), h.uniformMatrix4fv(Wt.mvMatLoc, !1, u.floatArray()), h.uniformMatrix4fv(Wt.projMatLoc, !1, t.get_projection().floatArray()), h.uniform1i(Wt.sampLoc, 0), t.space || l ? h.disable(2929) : h.enable(2929), h.disableVertexAttribArray(0), h.disableVertexAttribArray(1), h.disableVertexAttribArray(2), h.disableVertexAttribArray(3), h.bindBuffer(34962, e), h.enableVertexAttribArray(Wt.vertLoc), h.enableVertexAttribArray(Wt.textureLoc), h.vertexAttribPointer(Wt.vertLoc, 3, 5126, !1, 20, 0), h.vertexAttribPointer(Wt.textureLoc, 2, 5126, !1, 20, 12), h.activeTexture(33984), h.bindTexture(3553, a), h.bindBuffer(34963, r), h.enable(3042), l ? h.blendFunc(770, 1) : h.blendFunc(770, 771);
        }
      };
      var Lu = {};
      function te() {
      }
      te.init = function(t) {
        var e = t.gl, r = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
                                                                                       
   uniform sampler2D uSampler;                                                         
   uniform float opacity;                                                              
                                                                                       
   void main(void) {                                                                   
     vec4 col = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));           
     gl_FragColor = col * opacity;                                                     
   }                                                                                   
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec2 aTextureCoord;                                                
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec3 vNormal;                                                        
     varying vec3 vCamVector;                                                     
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vTextureCoord = aTextureCoord;                                           
     }                                                                            
                                                                                  
`;
        te._frag = e.createShader(35632), e.shaderSource(te._frag, r), e.compileShader(te._frag);
        var s = e.getShaderParameter(te._frag, 35713);
        s || e.getShaderInfoLog(te._frag), te._vert = e.createShader(35633), e.shaderSource(te._vert, a), e.compileShader(te._vert);
        var l = e.getShaderParameter(te._vert, 35713);
        l || e.getShaderInfoLog(te._vert), te._prog = e.createProgram(), e.attachShader(te._prog, te._vert), e.attachShader(te._prog, te._frag), e.linkProgram(te._prog), e.getProgramParameter(te._prog, 35714), e.useProgram(te._prog), te.vertLoc = e.getAttribLocation(te._prog, "aVertexPosition"), te.textureLoc = e.getAttribLocation(te._prog, "aTextureCoord"), te.projMatLoc = e.getUniformLocation(te._prog, "uPMatrix"), te.mvMatLoc = e.getUniformLocation(te._prog, "uMVMatrix"), te.sampLoc = e.getUniformLocation(te._prog, "uSampler"), te.opacityLoc = e.getUniformLocation(te._prog, "opacity"), F.uvMultiple = 1, F.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), te.initialized = !0;
      }, te.use = function(t, e, r, a, s, l) {
        a == null && (a = Te.getEmpty());
        var h = t.gl;
        if (h != null) {
          te.initialized || te.init(t), h.useProgram(te._prog);
          var u = H.multiplyMatrix(t.get_world(), t.get_view());
          h.uniform1f(te.opacityLoc, s), h.uniformMatrix4fv(te.mvMatLoc, !1, u.floatArray()), h.uniformMatrix4fv(te.projMatLoc, !1, t.get_projection().floatArray()), h.uniform1i(te.sampLoc, 0), t.space || l ? h.disable(2929) : h.enable(2929), h.disableVertexAttribArray(0), h.disableVertexAttribArray(1), h.disableVertexAttribArray(2), h.disableVertexAttribArray(3), h.bindBuffer(34962, e), h.enableVertexAttribArray(te.vertLoc), h.enableVertexAttribArray(te.textureLoc), h.vertexAttribPointer(te.vertLoc, 3, 5126, !1, 32, 0), h.vertexAttribPointer(te.textureLoc, 2, 5126, !1, 32, 24), h.activeTexture(33984), h.bindTexture(3553, a), h.bindBuffer(34963, r), h.enable(3042), l ? h.blendFunc(770, 1) : h.blendFunc(770, 771);
        }
      };
      var Au = {};
      function Qt() {
      }
      Qt.init = function(t) {
        var e = t.gl, r = ` precision mediump float;                                                                
                                                                                         
   varying vec2 vTextureCoord;                                                           
   varying lowp vec4 vColor;                                                             
   uniform sampler2D uSampler;                                                           
                                                                                         
   void main(void) {                                                                     
   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t)) * vColor;  
   }                                                                                     
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec2 aTextureCoord;                                                
     attribute lowp vec4 aColor;                                                  
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec4 vColor;                                                         
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vTextureCoord = aTextureCoord;                                           
         vColor = aColor;                                                         
     }                                                                            
                                                                                  
`;
        Qt._frag = e.createShader(35632), e.shaderSource(Qt._frag, r), e.compileShader(Qt._frag), e.getShaderParameter(Qt._frag, 35713), Qt._vert = e.createShader(35633), e.shaderSource(Qt._vert, a), e.compileShader(Qt._vert), e.getShaderParameter(Qt._vert, 35713), Qt._prog = e.createProgram(), e.attachShader(Qt._prog, Qt._vert), e.attachShader(Qt._prog, Qt._frag), e.linkProgram(Qt._prog), e.getProgramParameter(Qt._prog, 35714), e.useProgram(Qt._prog), Qt.vertLoc = e.getAttribLocation(Qt._prog, "aVertexPosition"), Qt.textureLoc = e.getAttribLocation(Qt._prog, "aTextureCoord"), Qt.colorLoc = e.getAttribLocation(Qt._prog, "aColor"), Qt.projMatLoc = e.getUniformLocation(Qt._prog, "uPMatrix"), Qt.mvMatLoc = e.getUniformLocation(Qt._prog, "uMVMatrix"), Qt.sampLoc = e.getUniformLocation(Qt._prog, "uSampler"), F.uvMultiple = 1, F.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), Qt.initialized = !0;
      }, Qt.use = function(t, e, r) {
        r == null && (r = Te.getEmpty());
        var a = t.gl;
        if (a != null) {
          Qt.initialized || Qt.init(t), a.useProgram(Qt._prog);
          var s = H.multiplyMatrix(t.get_world(), t.get_view());
          a.uniformMatrix4fv(Qt.mvMatLoc, !1, s.floatArray()), a.uniformMatrix4fv(Qt.projMatLoc, !1, t.get_projection().floatArray()), a.uniform1i(Qt.sampLoc, 0), a.disable(2929), a.disableVertexAttribArray(0), a.disableVertexAttribArray(1), a.disableVertexAttribArray(2), a.disableVertexAttribArray(3), a.bindBuffer(34962, e), a.enableVertexAttribArray(Qt.vertLoc), a.enableVertexAttribArray(Qt.textureLoc), a.enableVertexAttribArray(Qt.colorLoc), a.vertexAttribPointer(Qt.vertLoc, 3, 5126, !1, 36, 0), a.vertexAttribPointer(Qt.colorLoc, 4, 5126, !1, 36, 12), a.vertexAttribPointer(Qt.textureLoc, 2, 5126, !1, 36, 28), a.activeTexture(33984), a.bindTexture(3553, r), a.bindBuffer(34963, null), a.enable(3042), a.blendFunc(770, 771);
        }
      };
      var ku = {};
      function se() {
      }
      se.init = function(t) {
        var e = t.gl, r = ` precision mediump float;                                                                
                                                                                         
   varying lowp vec4 vColor;                                                             
                                                                                         
   void main(void) {                                                                     
   gl_FragColor =  vColor;                                                               
   }                                                                                     
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute lowp vec4 aColor;                                                  
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
     varying vec4 vColor;                                                         
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vColor = aColor;                                                         
     }                                                                            
                                                                                  
`;
        se._frag = e.createShader(35632), e.shaderSource(se._frag, r), e.compileShader(se._frag), e.getShaderParameter(se._frag, 35713), se._vert = e.createShader(35633), e.shaderSource(se._vert, a), e.compileShader(se._vert), e.getShaderParameter(se._vert, 35713), se._prog = e.createProgram(), e.attachShader(se._prog, se._vert), e.attachShader(se._prog, se._frag), e.linkProgram(se._prog), e.getProgramParameter(se._prog, 35714), e.useProgram(se._prog), se.vertLoc = e.getAttribLocation(se._prog, "aVertexPosition"), se.colorLoc = e.getAttribLocation(se._prog, "aColor"), se.projMatLoc = e.getUniformLocation(se._prog, "uPMatrix"), se.mvMatLoc = e.getUniformLocation(se._prog, "uMVMatrix"), e.disable(2929), e.enable(3042), e.blendFunc(770, 771), se.initialized = !0;
      }, se.use = function(t, e) {
        var r = t.gl;
        if (r != null) {
          se.initialized || se.init(t), r.useProgram(se._prog);
          var a = H.multiplyMatrix(t.get_world(), t.get_view());
          r.uniformMatrix4fv(se.mvMatLoc, !1, a.floatArray()), r.uniformMatrix4fv(se.projMatLoc, !1, t.get_projection().floatArray()), r.uniform1i(se.sampLoc, 0), r.disable(2929), r.disableVertexAttribArray(0), r.disableVertexAttribArray(1), r.disableVertexAttribArray(2), r.disableVertexAttribArray(3), r.bindBuffer(34962, e), r.enableVertexAttribArray(se.vertLoc), r.enableVertexAttribArray(se.textureLoc), r.enableVertexAttribArray(se.colorLoc), r.vertexAttribPointer(se.vertLoc, 3, 5126, !1, 36, 0), r.vertexAttribPointer(se.colorLoc, 4, 5126, !1, 36, 12), r.bindBuffer(34963, null), r.enable(3042), r.blendFunc(770, 771);
        }
      };
      var Iu = {};
      function oe() {
      }
      oe.init = function(t) {
        var e = t.gl, r = ` precision mediump float;                                                              
                                                                                       
   varying vec2 vTextureCoord;                                                         
                                                                                       
   uniform sampler2D uSampler;                                                         
                                                                                       
   void main(void) {                                                                   
   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));         
   }                                                                                   
`, a = `     attribute vec3 aVertexPosition;                                              
     attribute vec2 aTextureCoord;                                                
                                                                                  
     uniform mat4 uMVMatrix;                                                      
     uniform mat4 uPMatrix;                                                       
                                                                                  
     varying vec2 vTextureCoord;                                                  
                                                                                  
                                                                                  
     void main(void) {                                                            
         gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);         
         vTextureCoord = aTextureCoord;                                           
     }                                                                            
                                                                                  
`;
        oe._frag = e.createShader(35632), e.shaderSource(oe._frag, r), e.compileShader(oe._frag), e.getShaderParameter(oe._frag, 35713), oe._vert = e.createShader(35633), e.shaderSource(oe._vert, a), e.compileShader(oe._vert), e.getShaderParameter(oe._vert, 35713), oe._prog = e.createProgram(), e.attachShader(oe._prog, oe._vert), e.attachShader(oe._prog, oe._frag), e.linkProgram(oe._prog), e.getProgramParameter(oe._prog, 35714), e.useProgram(oe._prog), oe.vertLoc = e.getAttribLocation(oe._prog, "aVertexPosition"), oe.textureLoc = e.getAttribLocation(oe._prog, "aTextureCoord"), oe.projMatLoc = e.getUniformLocation(oe._prog, "uPMatrix"), oe.mvMatLoc = e.getUniformLocation(oe._prog, "uMVMatrix"), oe.sampLoc = e.getUniformLocation(oe._prog, "uSampler"), F.uvMultiple = 1, F.demEnabled = !0, e.enable(3042), e.blendFunc(770, 771), oe.initialized = !0;
      }, oe.use = function(t, e, r) {
        r == null && (r = Te.getEmpty());
        var a = t.gl;
        if (a != null) {
          oe.initialized || oe.init(t), a.useProgram(oe._prog);
          var s = H.multiplyMatrix(t.get_world(), t.get_view());
          a.uniformMatrix4fv(oe.mvMatLoc, !1, s.floatArray()), a.uniformMatrix4fv(oe.projMatLoc, !1, t.get_projection().floatArray()), a.uniform1i(oe.sampLoc, 0), t.space ? a.disable(2929) : a.enable(2929), a.disableVertexAttribArray(0), a.disableVertexAttribArray(1), a.disableVertexAttribArray(2), a.disableVertexAttribArray(3), a.bindBuffer(34962, e), a.enableVertexAttribArray(oe.vertLoc), a.enableVertexAttribArray(oe.textureLoc), a.vertexAttribPointer(oe.vertLoc, 3, 5126, !1, 20, 0), a.vertexAttribPointer(oe.textureLoc, 2, 5126, !1, 20, 12), a.activeTexture(33984), a.bindTexture(3553, r), a.enable(3042), a.blendFunc(770, 771);
        }
      };
      var $u = {};
      function Hr() {
        this.vertCount = 0;
      }
      var Pu = {
        draw: function(t, e, r, a, s, l) {
          this.vertexBuffer == null ? this.create(e) : this.update(e), a == null ? (se.use(t, this.vertexBuffer), t.gl.drawArrays(s ? 5 : 4, 0, e.length)) : (Qt.use(t, this.vertexBuffer, a != null ? a.texture2d : null), t.gl.drawArrays(s ? 5 : 4, 0, e.length));
        },
        create: function(t) {
          this.vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this.vertexBuffer);
          for (var e = new Float32Array(t.length * 9), r = e, a = 0, s = n.enumerate(t); s.moveNext(); ) {
            var l = s.current;
            r[a++] = l.position.x, r[a++] = l.position.y, r[a++] = l.position.z, r[a++] = l.color.r / 255, r[a++] = l.color.g / 255, r[a++] = l.color.b / 255, r[a++] = l.color.a / 255, r[a++] = l.tu, r[a++] = l.tv;
          }
          F.prepDevice.bufferData(34962, e, 35048);
        },
        update: function(t) {
          if (this.vertCount < t.length) {
            F.prepDevice.deleteBuffer(this.vertexBuffer), this.create(t);
            return;
          }
          F.prepDevice.bindBuffer(34962, this.vertexBuffer);
          for (var e = new Float32Array(t.length * 9), r = e, a = 0, s = n.enumerate(t); s.moveNext(); ) {
            var l = s.current;
            r[a++] = l.position.x, r[a++] = l.position.y, r[a++] = l.position.z, r[a++] = l.color.r / 255, r[a++] = l.color.g / 255, r[a++] = l.color.b / 255, r[a++] = l.color.a / 255, r[a++] = l.tu, r[a++] = l.tv;
          }
          F.prepDevice.bufferSubData(34962, 0, e);
        }
      };
      function gn() {
      }
      gn.tesselateSimplePoly = function(t) {
        var e = [], r = new gn();
        return r.process(t, e), e;
      };
      var Ru = {
        _isLeftOfHalfSpace: function(t, e, r) {
          t.normalize(), e.normalize();
          var a = L.cross(t, e), s = L.dot(a, r);
          return s > 0;
        },
        _insideTriangle: function(t, e, r, a) {
          return !(!this._isLeftOfHalfSpace(t, e, a) || !this._isLeftOfHalfSpace(e, r, a) || !this._isLeftOfHalfSpace(r, t, a));
        },
        _canClipEar: function(t, e, r, a, s, l) {
          var h, u = t[l[e]].copy(), _ = t[l[r]].copy(), m = t[l[a]].copy(), p, b = L.subtractVectors(_, u);
          b.normalize();
          var S = L.subtractVectors(_, m);
          S.normalize();
          var x = L.cross(b, S), k = _.copy();
          if (k.normalize(), L.dot(x, k) > 0)
            return !1;
          for (h = 0; h < s; h++)
            if (!(h === e || h === r || h === a) && (p = t[l[h]].copy(), this._insideTriangle(u, _, m, p)))
              return !1;
          return !0;
        },
        process: function(t, e) {
          var r = t.length;
          if (t.length < 3)
            return !1;
          for (var a = new Array(t.length), s = 0; s < r; s++)
            a[s] = s;
          for (var l = r, h = 2 * l, u = 0, _ = l - 1; l > 2; ) {
            if (0 >= h--)
              return !1;
            var m = _;
            l <= m && (m = 0), _ = m + 1, l <= _ && (_ = 0);
            var p = _ + 1;
            if (l <= p && (p = 0), this._canClipEar(t, m, _, p, l, a)) {
              var b, S;
              for (e.push(a[m]), e.push(a[_]), e.push(a[p]), u++, b = _, S = _ + 1; S < l; b++, S++)
                a[b] = a[S];
              l--, h = 2 * l;
            }
          }
          return !0;
        }
      };
      function Te() {
        this.imageElement = null, this.texture2d = null, this._downloading = !1, this._ready = !1, this._errored = !1, this.URL = "";
      }
      Te.getEmpty = function() {
        return Te.empty == null && (Te.empty = F.prepDevice.createTexture(), F.prepDevice.bindTexture(3553, Te.empty), F.prepDevice.texImage2D(3553, 0, 6408, 1, 1, 0, 6408, 5121, new Uint8Array([0, 0, 0, 0])), F.prepDevice.bindTexture(3553, null)), Te.empty;
      }, Te.fromUrl = function(t) {
        var e = new Te();
        return e.load(t), e;
      }, Te.isPowerOfTwo = function(t) {
        return !(t & t - 1);
      }, Te.fitPowerOfTwo = function(t) {
        t--;
        for (var e = 1; e < 32; e <<= 1)
          t = t | t >> e;
        return t + 1;
      };
      var Eu = {
        cleanUp: function() {
          this.imageElement = null, F.prepDevice.deleteTexture(this.texture2d);
        },
        dispose: function() {
          this.cleanUp();
        },
        load: function(t) {
          var e = this;
          if (this.URL = t, !(typeof document > "u") && !this._downloading) {
            this._downloading = !0, this.imageElement = document.createElement("img");
            var r = this.imageElement;
            this.imageElement.addEventListener("load", function(a) {
              e._ready = !0, e._downloading = !1, e._errored = !1, e.makeTexture();
            }, !1), this.imageElement.addEventListener("error", function(a) {
              if (!e.imageElement.hasAttribute("proxyattempt")) {
                e.imageElement.setAttribute("proxyattempt", !0);
                var s = Kt.singleton.activateProxy(e.URL);
                if (s != null) {
                  e.imageElement.src = s;
                  return;
                }
              }
              e._downloading = !1, e._ready = !1, e._errored = !0;
            }, !1), r.crossOrigin = "anonymous", this.imageElement.src = this.URL;
          }
        },
        makeTexture: function() {
          if (F.prepDevice != null)
            try {
              this.texture2d = F.prepDevice.createTexture(), F.prepDevice.bindTexture(3553, this.texture2d);
              var t = this.imageElement;
              if ((!Te.isPowerOfTwo(this.imageElement.height) | !Te.isPowerOfTwo(this.imageElement.width)) === 1) {
                var e = document.createElement("canvas");
                e.height = Te.fitPowerOfTwo(t.height), e.width = Te.fitPowerOfTwo(t.width);
                var r = e.getContext("2d");
                r.drawImage(t, 0, 0, e.width, e.height), t = e;
              }
              F.prepDevice.texParameteri(3553, 10242, 33071), F.prepDevice.texParameteri(3553, 10243, 33071), F.prepDevice.texImage2D(3553, 0, 6408, 6408, 5121, t), F.prepDevice.texParameteri(3553, 10241, 9985), F.prepDevice.generateMipmap(3553), F.prepDevice.bindTexture(3553, null);
            } catch {
              this._errored = !0;
            }
        }
      };
      function O() {
      }
      O._createGalaxyImage = function(t) {
        O._milkyWayImage == null && (O._milkyWayImage = A.loadPlanetTexture(Kt.singleton.engineAssetUrl("milkywaybar.jpg")));
        var e = 50, r, a, s = 0, l = 64, h = -64, u = -64, _ = 64;
        O._galaxyImageVertexBuffer = new wn((e + 1) * (e + 1));
        var m = O._galaxyImageVertexBuffer.lock(), p, b, S = h - l, x = _ - u, k = 608e5, P = R.meanObliquityOfEcliptic(Z.get_jNow()) / 180 * Math.PI, I, D = 1 / e, G = 1 / e;
        for (b = 0; b <= e; b++)
          for (b !== e ? r = h - G * S * b : r = l, p = 0; p <= e; p++)
            p !== e ? a = u + D * x * p : a = _, s = b * (e + 1) + p, I = L.create(a * k, 0, (r - 28) * k), I.rotateY(213 / 180 * Math.PI), I.rotateZ(-62.87175 / 180 * Math.PI), I.rotateY(-192.8595083 / 180 * Math.PI), I.rotateX(P), m[s] = dt.createPosRaw(I, 1 - p * D, b * G);
        O._galaxyImageVertexBuffer.unlock(), O._galaxyImageTriangleCount = e * e * 2;
        var U = new Uint16Array(e * e * 6), Y = U;
        for (b = 0; b < e; b++)
          for (p = 0; p < e; p++)
            s = b * e * 6 + 6 * p, Y[s] = b * (e + 1) + p, Y[s + 2] = (b + 1) * (e + 1) + p, Y[s + 1] = b * (e + 1) + (p + 1), Y[s + 3] = b * (e + 1) + (p + 1), Y[s + 5] = (b + 1) * (e + 1) + p, Y[s + 4] = (b + 1) * (e + 1) + (p + 1);
        O._galaxyImageIndexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34963, O._galaxyImageIndexBuffer), F.prepDevice.bufferData(34963, U, 35044);
      }, O.drawGalaxyImage = function(t, e) {
        O._galaxyImageIndexBuffer == null && O._createGalaxyImage(t), t.viewCamera.zoom, Wt.use(t, O._galaxyImageVertexBuffer.vertexBuffer, O._galaxyImageIndexBuffer, O._milkyWayImage.texture2d, e, !0), t.gl.drawElements(4, O._galaxyImageTriangleCount * 3, 5123, 0);
      }, O.drawStars3D = function(t, e) {
        var r = t.viewCamera.zoom, a = Math.max(Math.min(255, (Math.log(r) - 15.5) * 40.8), 0), s = Math.min(255, Math.max(0, n.truncate(a)));
        s > 254 || (s = (255 - s) * e, O._starSprites == null && O.initStarVertexBuffer(t), O._starSprites != null && O._starSprites.draw(t, s / 255, !1));
      }, O.initStarVertexBuffer = function(t) {
        if (!O._starsDownloading && !V.singleton.freestandingMode && (O.getStarFile(Kt.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=hipparcos")), O._starsDownloading = !0), O._starSprites == null && O._starCount > 0) {
          var e = R.meanObliquityOfEcliptic(Z.get_jNow()) / 180 * Math.PI, r = O._stars.length;
          O._starCount = r, O._starSprites = new tr(t), O._starSprites.depthBuffered = !1, O._starSprites.showFarSide = !0;
          for (var a = n.enumerate(O._stars); a.moveNext(); ) {
            var s = a.current, l = R.raDecTo3dAu(s.RA, s.dec, s.distance);
            l.rotateX(e), s.position = l;
            var h = 12e5 / Math.pow(1.6, s.absoluteMagnitude);
            O._starSprites.addPoint(l, s.col, new ve(0, 1), h * 100);
          }
        }
      }, O.initializeStarDB = function(t) {
        if (O._stars == null && O._stars == null) {
          O._stars = [];
          for (var e = t.split(`\r
`), r, a = n.enumerate(e); a.moveNext(); ) {
            var s = a.current, l = s;
            r = new Ea(l), r.magnitude < O._limitingMagnitude && r.par > 1e-3 && (O._stars.push(r), O._hipparcosIndex[r.id] = r);
          }
          O._starCount = O._stars.length;
        }
      }, O.getStarFile = function(t) {
        O._webFileStar = new Ai(t), O._webFileStar.onStateChange = O.starFileStateChange, O._webFileStar.send();
      }, O.starFileStateChange = function() {
        O._webFileStar.get_state() === 2 ? alert(O._webFileStar.get_message()) : O._webFileStar.get_state() === 1 && O.initializeStarDB(O._webFileStar.getText());
      }, O.getGalaxyFile = function(t) {
        O._webFileGalaxy = new Ai(t), O._webFileGalaxy.responseType = "blob", O._webFileGalaxy.onStateChange = O.galaxyFileStateChange, O._webFileGalaxy.send();
      }, O.galaxyFileStateChange = function() {
        if (O._webFileGalaxy.get_state() === 2)
          alert(O._webFileGalaxy.get_message());
        else if (O._webFileGalaxy.get_state() === 1) {
          var t = O._webFileGalaxy.getBlob(), e = new FileReader();
          e.onloadend = function(r) {
            var a = new Kr(new Uint8Array(e.result));
            O.initializeCosmos(a);
          }, e.readAsArrayBuffer(t);
        }
      }, O.drawCosmos3D = function(t, e) {
        t.gl;
        var r = t.viewCamera.zoom, a = (Math.log(Math.max(1, r)) / Math.log(4) - 15.5) * 90, s = Math.min(255, Math.max(0, n.truncate(a)));
        if (!(s < 3)) {
          if (O.initCosmosVertexBuffer(), O._galaxyTextures == null && O._largeSet) {
            O._galaxyTextures = new Array(256);
            for (var l = 0; l < 256; l++) {
              for (var h = l.toString(); h.length < 4; )
                h = "0" + h;
              var u = n.format(Kt.singleton.engineAssetUrl("galimg/gal_{0}.jpg"), h);
              O._galaxyTextures[l] = A.loadPlanetTexture(u);
            }
          }
          if (O._cosmosReady)
            for (var _ = 256, l = 0; l < _; l++)
              O._cosmosSprites[l].drawTextured(t, O._galaxyTextures[l].texture2d, s * e / 255);
        }
      }, O.initCosmosVertexBuffer = function() {
        O._cosmosSprites == null && O._downloadCosmosFile();
      }, O._createCosmosVertexBuffer = function(t) {
        F.prepDevice;
        var e = 256;
        if (O._cosmosSprites != null)
          for (var r = 0; r < e; r++)
            O._cosmosSprites[r] != null && (O._cosmosSprites[r] = null);
        O._cosmosSprites = null;
        var a = R.meanObliquityOfEcliptic(Z.get_jNow()) / 180 * Math.PI;
        O._cosmosSprites = new Array(e);
        for (var s = new Array(e), l = 0; l < e; l++)
          O._galaxyVertexCounts[l], O._cosmosSprites[l] = new tr(t), O._cosmosSprites[l].depthBuffered = !1, O._cosmosSprites[l].showFarSide = !0, s[l] = 0;
        for (var h = n.enumerate(O._cosmos); h.moveNext(); ) {
          var u = h.current, _ = u.eTypeBucket;
          s[_];
          var m = R.raDecTo3dAu(u.RA, u.dec, u.distance * 206264.806 * 1e6 / 0.73);
          m.rotateX(a), u.position = m, O._cosmosSprites[_].addPoint(m, ot.get_white(), new ve(0, 1), 1e9 * u.size * 100), s[_]++;
        }
        O._cosmosReady = !0;
      }, O.initializeCosmos = function(t) {
        if (O._cosmos == null) {
          if (O._galaxyVertexCounts = new Array(O._largeSet ? 256 : 20), O._cosmos == null) {
            O._cosmos = [];
            var e;
            try {
              for (var r = 0; t.get_position() < t.get_length(); )
                e = new mn(t), O._cosmos.push(e), O._galaxyVertexCounts[e.eTypeBucket]++, r++;
            } catch {
            }
            t.close();
          }
          O._createCosmosVertexBuffer(V.singleton.renderContext);
        }
      }, O._downloadCosmosFile = function() {
        return !O._downloadingGalaxy && !V.singleton.freestandingMode && (O.getGalaxyFile(Kt.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=cosmosnewbin")), O._downloadingGalaxy = !0), !1;
      }, O.drawEquitorialGrid = function(t, e, r) {
        if (O._equLineList == null) {
          O._equLineList = new fr(), O._equLineList.set_depthBuffered(!1);
          for (var a = 0; a < 24; a++)
            for (var s = -80; s < 80; s += 2)
              O._equLineList.addLine(R.raDecTo3dAu(a, s, 1), R.raDecTo3dAu(a, s + 2, 1));
          for (var s = -80; s <= 80; s += 10)
            for (var a = 0; a < 23.8; a += 0.2)
              O._equLineList.addLine(R.raDecTo3dAu(a, s, 1), R.raDecTo3dAu(a + 0.2, s, 1));
          for (var l = 0, h = 0; h < 24; h += 0.25) {
            var s = 0.5;
            switch (l % 4) {
              case 0:
                l++;
                continue;
              case 3:
              case 1:
                s = 0.25;
                break;
            }
            l++, O._equLineList.addLine(R.raDecTo3dAu(h, s, 1), R.raDecTo3dAu(h, -s, 1));
          }
          l = 0;
          for (var h = 0; h < 24; h += 3) {
            l = 0;
            for (var s = -80; s <= 80; s += 1) {
              var u = 0.016666666666666666;
              switch (l % 10) {
                case 0:
                  l++;
                  continue;
                case 5:
                  u = 0.5 / 15;
                  break;
              }
              l++, O._equLineList.addLine(R.raDecTo3dAu(h + u, s, 1), R.raDecTo3dAu(h - u, s, 1));
            }
          }
        }
        return O._equLineList.drawLines(t, e, r), !0;
      }, O.drawEquitorialGridText = function(t, e, r) {
        return O._makeEquitorialGridText(), O._equTextBatch.draw(t, e, r), !0;
      }, O._makeEquitorialGridText = function() {
        if (O._equTextBatch == null) {
          O._equTextBatch = new Tr(30);
          for (var t = 0; t < 24; t++) {
            var e = t.toString() + " hr";
            t < 10 && (e = "  " + t.toString() + " hr"), O._equTextBatch.add(new wi(R.raDecTo3dAu(t + 5e-3, 0.4, 1), R.raDecTo3dAu(t + 5e-3, 0.5, 1), e, 45, 18e-5));
          }
          for (var t = 0; t < 24; t += 3)
            for (var r = -80; r <= 80; r += 10)
              if (r) {
                var e = r.toString();
                r > 0 ? (e = "  +" + r.toString(), O._equTextBatch.add(new wi(R.raDecTo3dAu(t, r - 0.4, 1), R.raDecTo3dAu(t, r - 0.3, 1), e, 45, 18e-5))) : (e = "  - " + e.substr(1), O._equTextBatch.add(new wi(R.raDecTo3dAu(t, r + 0.4, 1), R.raDecTo3dAu(t, r + 0.5, 1), e, 45, 18e-5)));
              }
        }
      }, O.drawEcliptic = function(t, e, r) {
        var a = Z.get_now().getUTCFullYear();
        if (O._eclipticOverviewLineList == null || a !== O._eclipticYear) {
          O._eclipticOverviewLineList != null && (O._eclipticOverviewLineList.clear(), O._eclipticOverviewLineList = null), O._eclipticYear = a;
          var s = R.meanObliquityOfEcliptic(Z.get_jNow()), l = H._rotationX(-s / 360 * (Math.PI * 2)), h = 365.25;
          Ve.isLeap(a, !0) ? (O._monthDays[1] = 29, h = 366) : (O._monthDays[1] = 28, h = 365), 2 * n.truncate(h), O._eclipticCount = n.truncate(h);
          var u = Z.utcToJulian(new Date(a, 0, 1, 12, 0, 0)), _ = 0;
          O._eclipticOverviewLineList = new fr(), O._eclipticOverviewLineList.set_depthBuffered(!1);
          for (var m = 0; m < 12; m++) {
            for (var p = n.truncate(O._monthDays[m]), b = 0; b < p; b++) {
              var S = A.getPlanetLocationJD("Sun", u), x = y.eq2Ec(S.RA, S.dec, s);
              _ = x.x;
              var k = 5e-3;
              b || (k = 0.01);
              var P = _;
              O._eclipticOverviewLineList.addLine(L._transformCoordinate(L.create(Math.cos(P * Math.PI * 2 / 360), k, Math.sin(P * Math.PI * 2 / 360)), l), L._transformCoordinate(L.create(Math.cos(P * Math.PI * 2 / 360), -k, Math.sin(P * Math.PI * 2 / 360)), l)), u += 1;
            }
            _ += O._monthDays[m];
          }
        }
        return O._eclipticOverviewLineList.drawLines(t, e, r), !0;
      }, O.drawEclipticText = function(t, e, r) {
        return O._makeEclipticText(), O._eclipOvTextBatch.draw(t, e, r), !0;
      }, O._makeEclipticText = function() {
        var t = Z.get_now().getUTCFullYear();
        if (O._eclipOvTextBatch == null) {
          O._eclipOvTextBatch = new Tr(80), O._eclipticTextYear = t;
          var e = R.meanObliquityOfEcliptic(Z.get_jNow()), r = H._rotationX(-e / 360 * (Math.PI * 2)), a = 365.25;
          Ve.isLeap(t, !0) ? (O._monthDays[1] = 29, a = 366) : (O._monthDays[1] = 28, a = 365), 2 * n.truncate(a), O._eclipticCount = n.truncate(a);
          for (var s = Z.utcToJulian(new Date(t, 0, 1, 12, 0, 0)), l = 0, h = 0; h < 12; h++) {
            for (var u = n.truncate(O._monthDays[h]), _ = 0; _ < u; _++) {
              var m = A.getPlanetLocationJD("Sun", s), p = y.eq2Ec(m.RA, m.dec, e);
              l = p.x;
              var b = l;
              if (_ === Math.floor(u / 2)) {
                var S = L._transformCoordinate(L.create(Math.cos(b * Math.PI * 2 / 360), 0.025, Math.sin(b * Math.PI * 2 / 360)), r), x = L._transformCoordinate(L.create(Math.cos(b * Math.PI * 2 / 360), 0.045, Math.sin(b * Math.PI * 2 / 360)), r);
                x.subtract(S), x.normalize(), O._eclipOvTextBatch.add(new wi(S, x, O._monthNames[h], 80, 159375e-9));
              }
              s += 1;
            }
            l += O._monthDays[h];
          }
        }
      }, O.drawPrecessionChart = function(t, e, r) {
        return O._makePrecessionChart(), O._precTextBatch.draw(t, e, r), O._precLineList.drawLines(t, e, r), !0;
      }, O._makePrecessionChart = function() {
        var t = R.meanObliquityOfEcliptic(Z.get_jNow()), e = H._rotationX(t / 360 * (Math.PI * 2));
        if (ot.get_white(), O._precLineList == null) {
          O._precLineList = new fr(), O._precLineList.set_depthBuffered(!1);
          for (var r = 0; r < 360; r++) {
            var a = 90 - t;
            O._precLineList.addLine(L._transformCoordinate(R.raDecTo3dAu(r / 15, a, 1), e), L._transformCoordinate(R.raDecTo3dAu((r + 1) / 15, a, 1), e));
          }
          for (var r = -12e3; r < 13e3; r += 2e3) {
            var a = 90 - t, s = -((r - 2e3) / 25772 * 24) - 6;
            O._precLineList.addLine(L._transformCoordinate(R.raDecTo3dAu(s, a - 0.5, 1), e), L._transformCoordinate(R.raDecTo3dAu(s, a + 0.5, 1), e));
          }
        }
        if (O._precTextBatch == null) {
          O._precTextBatch = new Tr(50);
          for (var r = -12e3; r < 13e3; r += 2e3) {
            var a = 90 - t + 3, s = -((r - 2e3) / 25772 * 24) - 6, l = r.toString();
            r ? r < 0 ? l = "  " + Math.abs(r).toString() + " BCE" : l = Math.abs(r).toString() + " CE" : (a = 90 - t + 2, l = "1 CE"), l.length === 9 && (l = "   " + l), O._precTextBatch.add(new wi(L._transformCoordinate(R.raDecTo3dAu(s, a, 1), e), L._transformCoordinate(R.raDecTo3dAu(s + 0.01, a, 1), e), l, 75, 15e-5));
          }
        }
      }, O.drawAltAzGrid = function(t, e, r) {
        var a = new R(0, 0), s = R.horizonToEquitorial(a, Z.get_location(), Z.get_now()), l = -((s.get_RA() + 6) / 24 * (Math.PI * 2)), h = -(s.get_dec() / 360 * (Math.PI * 2));
        R.formatDMS(s.get_RA());
        var u = H._rotationY(-l);
        if (u._multiply(H._rotationX(h)), u.invert(), O._altAzLineList == null) {
          O._altAzLineList = new fr(), O._altAzLineList.set_depthBuffered(!1);
          for (var _ = 0; _ < 360; _ += 10)
            for (var m = -80; m < 80; m += 2)
              O._altAzLineList.addLine(R.raDecTo3dAu(_ / 15, m, 1), R.raDecTo3dAu(_ / 15, m + 2, 1));
          for (var m = -80; m <= 80; m += 10)
            for (var _ = 0; _ < 360; _ += 5)
              O._altAzLineList.addLine(R.raDecTo3dAu(_ / 15, m, 1), R.raDecTo3dAu((_ + 5) / 15, m, 1));
          for (var p = 0, _ = 0; _ < 360; _ += 1) {
            var m = 0.25;
            switch (p % 10) {
              case 0:
                p++;
                continue;
              case 5:
                m = 0.5;
                break;
            }
            p++, O._altAzLineList.addLine(R.raDecTo3dAu(_ / 15, m, 1), R.raDecTo3dAu(_ / 15, -m, 1));
          }
          p = 0;
          for (var _ = 0; _ < 360; _ += 90) {
            p = 0;
            for (var m = -80; m <= 80; m += 1) {
              var b = 0.25;
              switch (p % 10) {
                case 0:
                  p++;
                  continue;
                case 5:
                  b = 0.5;
                  break;
              }
              p++, O._altAzLineList.addLine(R.raDecTo3dAu((_ + b) / 15, m, 1), R.raDecTo3dAu((_ - b) / 15, m, 1));
            }
          }
        }
        var S = t.get_world().clone(), x = t.get_worldBase().clone();
        return t.set_worldBase(H.multiplyMatrix(u, t.get_world())), t.set_world(t.get_worldBase().clone()), t.makeFrustum(), O._altAzLineList.viewTransform = H.invertMatrix(u), O._altAzLineList.drawLines(t, e, r), t.set_worldBase(x), t.set_world(S), t.makeFrustum(), !0;
      }, O.drawAltAzGridText = function(t, e, r) {
        var a = new R(0, 0), s = R.horizonToEquitorial(a, Z.get_location(), Z.get_now()), l = -((s.get_RA() - 6) / 24 * (Math.PI * 2)), h = -(s.get_dec() / 360 * (Math.PI * 2));
        R.formatDMS(s.get_RA());
        var u = H._rotationY(-l - Math.PI);
        u._multiply(H._rotationX(h)), u.invert(), O._makeAltAzGridText();
        var _ = t.get_world().clone(), m = t.get_worldBase().clone();
        return t.set_worldBase(H.multiplyMatrix(u, t.get_world())), t.set_world(t.get_worldBase().clone()), t.makeFrustum(), O._altAzTextBatch.viewTransform = H.invertMatrix(u), O._altAzTextBatch.draw(t, e, r), t.set_worldBase(m), t.set_world(_), t.makeFrustum(), !0;
      }, O._makeAltAzGridText = function() {
        if (ot.get_white(), O._altAzTextBatch == null) {
          O._altAzTextBatch = new Tr(30);
          for (var t = 0; t < 360; t += 10) {
            var e = "       " + t.toString();
            t < 10 ? e = "   " + t.toString() : t < 100 && (e = "     " + t.toString());
            var r = 360 - t;
            O._altAzTextBatch.add(new wi(R.raDecTo3dAu(r / 15 - 6, 0.4, 1), R.raDecTo3dAu(r / 15 - 6, 0.5, 1), e, 75, 18e-5));
          }
          for (var t = 0; t < 360; t += 90)
            for (var a = -80; a <= 80; a += 10)
              if (a) {
                var e = a.toString();
                a > 0 ? (e = "  +" + a.toString(), O._altAzTextBatch.add(new wi(R.raDecTo3dAu(t / 15, a - 0.4, 1), R.raDecTo3dAu(t / 15, a - 0.3, 1), e, 75, 18e-5))) : (e = "  - " + e.substr(1), O._altAzTextBatch.add(new wi(R.raDecTo3dAu(t / 15, a + 0.4, 1), R.raDecTo3dAu(t / 15, a + 0.5, 1), e, 75, 18e-5)));
              }
        }
      }, O.drawEclipticGrid = function(t, e, r) {
        if (O._eclipticLineList == null) {
          O._eclipticLineList = new fr(), O._eclipticLineList.set_depthBuffered(!1);
          for (var a = R.meanObliquityOfEcliptic(2451545), s = H._rotationX(-a / 360 * (Math.PI * 2)), l = 0; l < 360; l += 10)
            for (var h = -80; h < 80; h += 2)
              O._eclipticLineList.addLine(L._transformCoordinate(R.raDecTo3dAu(l / 15, h, 1), s), L._transformCoordinate(R.raDecTo3dAu(l / 15, h + 2, 1), s));
          for (var h = -80; h <= 80; h += 10)
            for (var l = 0; l < 360; l += 5)
              O._eclipticLineList.addLine(L._transformCoordinate(R.raDecTo3dAu(l / 15, h, 1), s), L._transformCoordinate(R.raDecTo3dAu((l + 5) / 15, h, 1), s));
          for (var u = 0, l = 0; l < 360; l += 1) {
            var h = 0.25;
            switch (u % 10) {
              case 0:
                u++;
                continue;
              case 5:
                h = 0.5;
                break;
            }
            u++, O._eclipticLineList.addLine(L._transformCoordinate(R.raDecTo3dAu(l / 15, h, 1), s), L._transformCoordinate(R.raDecTo3dAu(l / 15, -h, 1), s));
          }
          u = 0;
          for (var l = 0; l < 360; l += 90) {
            u = 0;
            for (var h = -80; h <= 80; h += 1) {
              var _ = 0.25;
              switch (u % 10) {
                case 0:
                  u++;
                  continue;
                case 5:
                  _ = 0.5;
                  break;
              }
              u++, O._eclipticLineList.addLine(L._transformCoordinate(R.raDecTo3dAu((l + _) / 15, h, 1), s), L._transformCoordinate(R.raDecTo3dAu((l - _) / 15, h, 1), s));
            }
          }
        }
        return O._eclipticLineList.drawLines(t, e, r), !0;
      }, O.drawEclipticGridText = function(t, e, r) {
        return O._makeEclipticGridText(), O._eclipticTextBatch.draw(t, e, r), !0;
      }, O._makeEclipticGridText = function() {
        ot.get_white();
        var t = R.meanObliquityOfEcliptic(Z.get_jNow()), e = H._rotationX(-t / 360 * (Math.PI * 2));
        if (O._eclipticTextBatch == null) {
          O._eclipticTextBatch = new Tr(30);
          for (var r = 0; r < 360; r += 10) {
            var a = "       " + r.toString();
            r < 10 ? a = "   " + r.toString() : r < 100 && (a = "     " + r.toString()), O._eclipticTextBatch.add(new wi(L._transformCoordinate(R.raDecTo3dAu(r / 15, 0.4, 1), e), L._transformCoordinate(R.raDecTo3dAu(r / 15, 0.5, 1), e), a, 75, 18e-5));
          }
          for (var r = 0; r < 360; r += 90)
            for (var s = -80; s <= 80; s += 10)
              if (s) {
                var a = s.toString();
                s > 0 ? (a = "  +" + s.toString(), O._eclipticTextBatch.add(new wi(L._transformCoordinate(R.raDecTo3dAu(r / 15, s - 0.4, 1), e), L._transformCoordinate(R.raDecTo3dAu(r / 15, s - 0.3, 1), e), a, 75, 18e-5))) : (a = "  - " + a.substr(1), O._eclipticTextBatch.add(new wi(L._transformCoordinate(R.raDecTo3dAu(r / 15, s + 0.4, 1), e), L._transformCoordinate(R.raDecTo3dAu(r / 15, s + 0.5, 1), e), a, 75, 18e-5)));
              }
        }
      }, O.drawGalacticGrid = function(t, e, r) {
        if (O._galLineList == null) {
          O._galLineList = new fr(), O._galLineList.set_depthBuffered(!1);
          for (var a = 0; a < 360; a += 10)
            for (var s = -80; s < 80; s += 2)
              O._galLineList.addLine(R.galacticTo3dDouble(a, s), R.galacticTo3dDouble(a, s + 2));
          for (var s = -80; s <= 80; s += 10)
            for (var a = 0; a < 360; a += 5)
              O._galLineList.addLine(R.galacticTo3dDouble(a, s), R.galacticTo3dDouble(a + 5, s));
          for (var l = 0, a = 0; a < 360; a += 1) {
            var s = 0.25;
            switch (l % 10) {
              case 0:
                l++;
                continue;
              case 5:
                s = 0.5;
                break;
            }
            l++, O._galLineList.addLine(R.galacticTo3dDouble(a, s), R.galacticTo3dDouble(a, -s));
          }
          l = 0;
          for (var a = 0; a < 360; a += 90) {
            l = 0;
            for (var s = -80; s <= 80; s += 1) {
              var h = 0.25;
              switch (l % 10) {
                case 0:
                  l++;
                  continue;
                case 5:
                  h = 0.5;
                  break;
              }
              l++, O._galLineList.addLine(R.galacticTo3dDouble(a + h, s), R.galacticTo3dDouble(a - h, s));
            }
          }
        }
        return O._galLineList.drawLines(t, e, r), !0;
      }, O.drawGalacticGridText = function(t, e, r) {
        return O._makeGalacticGridText(), O._galTextBatch.draw(t, e, r), !0;
      }, O._makeGalacticGridText = function() {
        if (O._galTextBatch == null) {
          O._galTextBatch = new Tr(30);
          for (var t = 0; t < 360; t += 10) {
            var e = "       " + t.toString();
            t < 10 ? e = "   " + t.toString() : t < 100 && (e = "     " + t.toString()), O._galTextBatch.add(new wi(R.galacticTo3dDouble(t, 0.4), R.galacticTo3dDouble(t, 0.5), e, 75, 18e-5));
          }
          for (var t = 0; t < 360; t += 90)
            for (var r = -80; r <= 80; r += 10)
              if (r) {
                var e = r.toString();
                r > 0 ? (e = "  +" + r.toString(), O._galTextBatch.add(new wi(R.galacticTo3dDouble(t, r - 0.4), R.galacticTo3dDouble(t, r - 0.3), e, 75, 18e-5))) : (e = "  - " + e.substr(1), O._galTextBatch.add(new wi(R.galacticTo3dDouble(t, r + 0.4), R.galacticTo3dDouble(t, r + 0.5), e, 75, 18e-5)));
              }
        }
      }, O.drawPlanetGrid = function(t, e, r) {
        if (O._planetLineList == null) {
          O._planetLineList = new fr(), O._planetLineList.set_depthBuffered(!0);
          for (var a = 0; a < 360; a += 10)
            for (var s = -80; s < 80; s += 2)
              O._planetLineList.addLine(R.geoTo3dDouble(s, a), R.geoTo3dDouble(s + 2, a));
          for (var s = -80; s <= 80; s += 10)
            for (var l = 0; l < 360; l += 5)
              O._planetLineList.addLine(R.geoTo3dDouble(s, l), R.geoTo3dDouble(s, l + 5));
          for (var h = 0, a = 0; a < 360; a += 1) {
            var s = 0.25;
            switch (h % 10) {
              case 0:
                h++;
                continue;
              case 5:
                s = 0.5;
                break;
            }
            h++, O._planetLineList.addLine(R.geoTo3dDouble(s, a), R.geoTo3dDouble(-s, a));
          }
          h = 0;
          for (var a = 0; a < 360; a += 90) {
            h = 0;
            for (var u = -80; u <= 80; u += 1) {
              var _ = 0.25;
              switch (h % 10) {
                case 0:
                  h++;
                  continue;
                case 5:
                  _ = 0.5;
                  break;
              }
              h++, O._planetLineList.addLine(R.geoTo3dDouble(u, a + _), R.geoTo3dDouble(u, a - _));
            }
          }
        }
        return O._planetLineList.aaFix = !1, O._planetLineList.set_depthBuffered(!0), O._planetLineList.sky = !1, O._planetLineList.drawLines(t, e, r), !0;
      }, O.drawPlanetGridText = function(t, e, r) {
        return O._makePlanetGridText(), O._planetTextBatch.draw(t, e, r), !0;
      }, O._makePlanetGridText = function() {
        if (O._planetTextBatch == null) {
          O._planetTextBatch = new Tr(80);
          for (var t = -180; t < 180; t += 10) {
            var e = "       " + t.toString();
            t < 10 ? e = "   " + t.toString() : t < 100 && (e = "     " + t.toString()), O._planetTextBatch.add(new wi(R.geoTo3dDouble(0.4, t), R.geoTo3dDouble(0.5, t), e, -80, 6e-5));
          }
          for (var t = 0; t < 360; t += 90)
            for (var r = -80; r <= 80; r += 10)
              if (r) {
                var e = r.toString();
                r > 0 ? (e = "  +" + r.toString(), O._planetTextBatch.add(new wi(R.geoTo3dDouble(r - 0.4, t), R.geoTo3dDouble(r - 0.3, t), e, -80, 6e-5))) : (e = "  - " + e.substring(1), O._planetTextBatch.add(new wi(R.geoTo3dDouble(r + 0.4, t), R.geoTo3dDouble(r + 0.5, t), e, -80, 6e-5)));
              }
        }
      };
      var Du = {};
      function He() {
        this._projection = 0, this._imageSetID = 0, this._baseTileDegrees = 0, this._widthFactor = 1, this.demUrl = "", this._levels = 0, this._mercator = !1, this._bottomsUp = !1, this._baseLevel = 1, this._quadTreeTileMap = "0123", this._centerX = 0, this._centerY = 0, this._rotation = 0, this._meanRadius = 0, this._dataSetType = 0, this._bandPass = 3, this._altUrl = "", this._singleImage = !1, this._fitsProperties = new ls(), this._matrixComputed = !1, this._name = "", this._sparse = !1, this._thumbnailUrl = "", this._generic = !1, this._defaultSet = !1, this._elevationModel = !1, this._offsetX = 0, this._offsetY = 0;
      }
      He.getTileKey = function(t, e, r, a, s) {
        if (t.get_projection() === 7 && s != null) {
          var l = s.ipix * 4 + a * 2 + r;
          return t.get_imageSetID().toString() + "\\" + e.toString() + "\\" + l.toString();
        }
        return t.get_imageSetID().toString() + "\\" + e.toString() + "\\" + a.toString() + "_" + r.toString();
      }, He.getNewTile = function(t, e, r, a, s) {
        switch (t.get_projection()) {
          case 0:
            var l = le.create(e, r, a, t, s);
            return l;
          case 1:
            return Wn.create(e, r, a, t, s);
          case 3:
          default:
            return Ze.create(e, r, a, t, s);
          case 5:
            return new Zs(e, r, a, t, s);
          case 6:
            return aa.create(e, r, a, t, s);
          case 7:
            return t.get_hipsProperties() == null && t.set_hipsProperties(new Xn(t)), t.get_hipsProperties().get_downloadComplete() ? new Jn(e, r, a, t, s) : null;
          case 2:
            var l = new sa(e, r, a, t, s);
            return l;
        }
      }, He.fromXMLNode = function(t) {
        try {
          var e = 2, r = 2;
          t.attributes.getNamedItem("DataSetType") != null && (e = Et.parse("ImageSetType", t.attributes.getNamedItem("DataSetType").nodeValue));
          var a = 3;
          a = Et.parse("BandPass", t.attributes.getNamedItem("BandPass").nodeValue);
          var s = 1;
          if (t.attributes.getNamedItem("WidthFactor") != null && (s = parseInt(t.attributes.getNamedItem("WidthFactor").nodeValue)), t.attributes.getNamedItem("Generic") == null || !n.boolean(t.attributes.getNamedItem("Generic").nodeValue)) {
            r = Et.parse("ProjectionType", t.attributes.getNamedItem("Projection").nodeValue);
            var l = t.attributes.getNamedItem("FileType").nodeValue;
            n.startsWith(l, ".") || (l = "." + l);
            var h = "", u = at.selectSingleNode(t, "ThumbnailUrl");
            if (u != null)
              if (n.emptyString(u.text)) {
                var _ = u;
                h = _.textContent;
              } else
                h = u.text;
            var m = !1, p = !1;
            t.attributes.getNamedItem("StockSet") != null && (m = n.boolean(t.attributes.getNamedItem("StockSet").nodeValue)), t.attributes.getNamedItem("ElevationModel") != null && (p = n.boolean(t.attributes.getNamedItem("ElevationModel").nodeValue));
            var b = "";
            t.attributes.getNamedItem("DemUrl") != null && (b = t.attributes.getNamedItem("DemUrl").nodeValue);
            var S = "";
            t.attributes.getNamedItem("AltUrl") != null && (S = t.attributes.getNamedItem("AltUrl").nodeValue);
            var x = 0;
            t.attributes.getNamedItem("OffsetX") != null && (x = parseFloat(t.attributes.getNamedItem("OffsetX").nodeValue));
            var k = 0;
            t.attributes.getNamedItem("OffsetY") != null && (k = parseFloat(t.attributes.getNamedItem("OffsetY").nodeValue));
            var P = "", I = at.selectSingleNode(t, "Credits");
            I != null && (P = at.getInnerText(I));
            var D = "";
            I = at.selectSingleNode(t, "CreditsUrl"), I != null && (D = at.getInnerText(I));
            var G = 0;
            t.attributes.getNamedItem("MeanRadius") != null && (G = parseFloat(t.attributes.getNamedItem("MeanRadius").nodeValue));
            var U = null;
            t.attributes.getNamedItem("ReferenceFrame") != null && (U = t.attributes.getNamedItem("ReferenceFrame").nodeValue);
            var Y = "";
            t.attributes.getNamedItem("Name") != null && (Y = t.attributes.getNamedItem("Name").nodeValue);
            var j = "";
            t.attributes.getNamedItem("Url") != null && (j = t.attributes.getNamedItem("Url").nodeValue);
            var K = 0;
            t.attributes.getNamedItem("BaseTileLevel") != null && (K = parseInt(t.attributes.getNamedItem("BaseTileLevel").nodeValue));
            var Q = 0;
            t.attributes.getNamedItem("TileLevels") != null && (Q = parseInt(t.attributes.getNamedItem("TileLevels").nodeValue));
            var J = 0;
            t.attributes.getNamedItem("BaseDegreesPerTile") != null && (J = parseFloat(t.attributes.getNamedItem("BaseDegreesPerTile").nodeValue));
            var nt = !1;
            t.attributes.getNamedItem("BottomsUp") != null && (nt = n.boolean(t.attributes.getNamedItem("BottomsUp").nodeValue));
            var W = "";
            t.attributes.getNamedItem("QuadTreeMap") != null && (W = t.attributes.getNamedItem("QuadTreeMap").nodeValue);
            var ct = 0;
            t.attributes.getNamedItem("CenterX") != null && (ct = parseFloat(t.attributes.getNamedItem("CenterX").nodeValue));
            var rt = 0;
            t.attributes.getNamedItem("CenterY") != null && (rt = parseFloat(t.attributes.getNamedItem("CenterY").nodeValue));
            var kt = 0;
            t.attributes.getNamedItem("Rotation") != null && (kt = parseFloat(t.attributes.getNamedItem("Rotation").nodeValue));
            var At = !1;
            return t.attributes.getNamedItem("Sparse") != null && (At = n.boolean(t.attributes.getNamedItem("Sparse").nodeValue)), He.create(Y, j, e, a, r, Math.abs(at.getHashCode(j)), K, Q, 256, J, l, nt, W, ct, rt, kt, At, h, m, p, s, x, k, P, D, b, S, G, U);
          } else
            return He.createGeneric(e, a);
        } catch {
          return null;
        }
      }, He.saveToXml = function(t, e, r) {
        t._writeStartElement("ImageSet"), t._writeAttributeString("Generic", e.get_generic().toString()), t._writeAttributeString("DataSetType", Et.toXml("ImageSetType", e.get_dataSetType())), t._writeAttributeString("BandPass", Et.toXml("BandPass", e.get_bandPass())), e.get_generic() || (t._writeAttributeString("Name", e.get_name()), n.emptyString(r) ? t._writeAttributeString("Url", e.get_url()) : t._writeAttributeString("Url", r), t._writeAttributeString("DemUrl", e.get_demUrl()), t._writeAttributeString("BaseTileLevel", e.get_baseLevel().toString()), t._writeAttributeString("TileLevels", e.get_levels().toString()), t._writeAttributeString("BaseDegreesPerTile", e.get_baseTileDegrees().toString()), t._writeAttributeString("FileType", e.get_extension()), t._writeAttributeString("BottomsUp", e.get_bottomsUp().toString()), t._writeAttributeString("Projection", Et.toXml("ProjectionType", e.get_projection())), t._writeAttributeString("QuadTreeMap", e.get_quadTreeTileMap()), t._writeAttributeString("CenterX", e.get_centerX().toString()), t._writeAttributeString("CenterY", e.get_centerY().toString()), t._writeAttributeString("OffsetX", e.get_offsetX().toString()), t._writeAttributeString("OffsetY", e.get_offsetY().toString()), t._writeAttributeString("Rotation", e.get_rotation().toString()), t._writeAttributeString("Sparse", e.get_sparse().toString()), t._writeAttributeString("ElevationModel", e.get_elevationModel().toString()), t._writeAttributeString("StockSet", e.get_defaultSet().toString()), t._writeAttributeString("WidthFactor", e.get_widthFactor().toString()), t._writeAttributeString("MeanRadius", e.get_meanRadius().toString()), t._writeAttributeString("ReferenceFrame", e.get_referenceFrame()), n.emptyString(r) ? t._writeElementString("ThumbnailUrl", e.get_thumbnailUrl()) : t._writeElementString("ThumbnailUrl", e.get_url())), t._writeEndElement();
      }, He.createGeneric = function(t, e) {
        var r = new He();
        return r._generic = !0, r._name = "Generic", r._sparse = !1, r._dataSetType = t, r._bandPass = e, r._quadTreeTileMap = "", r.url = "", r._levels = 0, r._baseTileDegrees = 0, r._imageSetID = 0, r._extension = "", r._projection = 1, r._bottomsUp = !1, r._baseLevel = 0, r._mercator = !r._projection, r._centerX = 0, r._centerY = 0, r._rotation = 0, r._thumbnailUrl = "", r._matrix = H.get_identity(), r._matrix._multiply(H._rotationX(r.get_rotation() / 180 * Math.PI)), r._matrix._multiply(H._rotationZ(r.get_centerY() / 180 * Math.PI)), r._matrix._multiply(H._rotationY((360 - r.get_centerX() + 180) / 180 * Math.PI)), r;
      }, He.create = function(t, e, r, a, s, l, h, u, _, m, p, b, S, x, k, P, I, D, G, U, Y, j, K, Q, J, nt, W, ct, rt) {
        var kt = new He();
        return kt.setInitialParameters(t, e, r, a, s, l, h, u, m, p, b, S, x, k, P, I, D, G, U, Y, j, K, Q, J, nt, W, ct, rt), kt;
      };
      var Nu = {
        get_wcsImage: function() {
          return this._wcsImage;
        },
        set_wcsImage: function(t) {
          return this._wcsImage = t, t;
        },
        get_projection: function() {
          return this._projection;
        },
        set_projection: function(t) {
          return this._projection = t, t;
        },
        get_referenceFrame: function() {
          return this._referenceFrame;
        },
        set_referenceFrame: function(t) {
          return this._referenceFrame = t, t;
        },
        get_imageSetID: function() {
          return this._imageSetID;
        },
        set_imageSetID: function(t) {
          return this._imageSetID = t, t;
        },
        get_baseTileDegrees: function() {
          return this._baseTileDegrees;
        },
        set_baseTileDegrees: function(t) {
          return this._baseTileDegrees = t, t;
        },
        get_widthFactor: function() {
          return this._widthFactor;
        },
        set_widthFactor: function(t) {
          return this._widthFactor = t, t;
        },
        getHashCode: function() {
          return at.getHashCode(this.get_url());
        },
        get_url: function() {
          return this.url;
        },
        set_url: function(t) {
          return this.url = t, t;
        },
        get_demUrl: function() {
          return n.emptyString(this.demUrl) && !this._projection && !V.singleton.freestandingMode ? Kt.singleton.coreStaticUrl("wwtweb/BingDemTile.aspx?Q={0},{1},{2}") : this.demUrl;
        },
        set_demUrl: function(t) {
          return this.demUrl = t, t;
        },
        get_extension: function() {
          return this._extension;
        },
        set_extension: function(t) {
          return this._extension = t, t;
        },
        get_levels: function() {
          return this._levels;
        },
        set_levels: function(t) {
          return this._levels = t, t;
        },
        get_bottomsUp: function() {
          return this._bottomsUp;
        },
        set_bottomsUp: function(t) {
          return this._bottomsUp = t, t;
        },
        get_mercator: function() {
          return this._mercator;
        },
        set_mercator: function(t) {
          return this._mercator = t, t;
        },
        get_baseLevel: function() {
          return this._baseLevel;
        },
        set_baseLevel: function(t) {
          return this._baseLevel = t, t;
        },
        get_quadTreeTileMap: function() {
          return this._quadTreeTileMap;
        },
        set_quadTreeTileMap: function(t) {
          return this._quadTreeTileMap = t, t;
        },
        get_centerX: function() {
          return this._centerX;
        },
        set_centerX: function(t) {
          return this._centerX !== t && (this._centerX = t, this._computeMatrix()), t;
        },
        get_centerY: function() {
          return this._centerY;
        },
        set_centerY: function(t) {
          return this._centerY !== t && (this._centerY = t, this._computeMatrix()), t;
        },
        get_rotation: function() {
          return this._rotation;
        },
        set_rotation: function(t) {
          return this._rotation !== t && (this._rotation = t, this._computeMatrix()), t;
        },
        get_meanRadius: function() {
          return this._meanRadius;
        },
        set_meanRadius: function(t) {
          return this._meanRadius = t, t;
        },
        get_bandPass: function() {
          return this._bandPass;
        },
        set_bandPass: function(t) {
          return this._bandPass = t, t;
        },
        get_dataSetType: function() {
          return this._dataSetType;
        },
        set_dataSetType: function(t) {
          return this._dataSetType = t, t;
        },
        get_altUrl: function() {
          return this._altUrl;
        },
        set_altUrl: function(t) {
          return this._altUrl = t, t;
        },
        get_singleImage: function() {
          return this._singleImage;
        },
        set_singleImage: function(t) {
          return this._singleImage = t, t;
        },
        get_hipsProperties: function() {
          return this._hipsProperties;
        },
        set_hipsProperties: function(t) {
          return this._hipsProperties = t, t;
        },
        get_fitsProperties: function() {
          return this._fitsProperties;
        },
        set_fitsProperties: function(t) {
          return this._fitsProperties = t, t;
        },
        toString: function() {
          return this.get_defaultSet() ? this._name + " *" : this._name;
        },
        get_stockImageSet: function() {
          return this._generic || !this._defaultSet ? this : He.createGeneric(this.get_dataSetType(), this.get_bandPass());
        },
        equals: function(t) {
          if (t == null || !n.canCast(t, He))
            return !1;
          var e = t;
          return at.getHashCode(e.get_url()) === at.getHashCode(this.get_url()) && e.get_dataSetType() === this.get_dataSetType() && e.get_bandPass() === this.get_bandPass() && e.get_generic() === this.get_generic();
        },
        get_matrix: function() {
          return this._matrixComputed || this._computeMatrix(), this._matrix;
        },
        set_matrix: function(t) {
          return this._matrix = t, t;
        },
        _computeMatrix: function() {
          this._matrixComputed = !0, this._matrix = H.get_identity(), this._matrix._multiply(H._rotationX(this.get_rotation() / 180 * Math.PI)), this._matrix._multiply(H._rotationZ(this.get_centerY() / 180 * Math.PI)), this._matrix._multiply(H._rotationY((360 - this.get_centerX()) / 180 * Math.PI));
        },
        get_name: function() {
          return this._name;
        },
        set_name: function(t) {
          return this._name = t, t;
        },
        get_sparse: function() {
          return this._sparse;
        },
        set_sparse: function(t) {
          return this._sparse = t, t;
        },
        get_thumbnailUrl: function() {
          return this._thumbnailUrl;
        },
        set_thumbnailUrl: function(t) {
          return this._thumbnailUrl = t, t;
        },
        get_generic: function() {
          return this._generic;
        },
        set_generic: function(t) {
          return this._generic = t, t;
        },
        get_elevationModel: function() {
          return this._elevationModel;
        },
        set_elevationModel: function(t) {
          return this._elevationModel = t, t;
        },
        get_defaultSet: function() {
          return this._defaultSet;
        },
        set_defaultSet: function(t) {
          return this._defaultSet = t, t;
        },
        get_offsetX: function() {
          return this._offsetX;
        },
        set_offsetX: function(t) {
          return this._offsetX = t, t;
        },
        get_offsetY: function() {
          return this._offsetY;
        },
        set_offsetY: function(t) {
          return this._offsetY = t, t;
        },
        get_creditsText: function() {
          return this._creditsText;
        },
        set_creditsText: function(t) {
          return this._creditsText = t, t;
        },
        get_creditsUrl: function() {
          return this._creditsUrl;
        },
        set_creditsUrl: function(t) {
          return this._creditsUrl = t, t;
        },
        get_isMandelbrot: function() {
          return !1;
        },
        _calcViewCenterCoordinate: function(t) {
          var e = R.degreesToRadians(this._rotation), r = Math.cos(e), a = Math.sin(e), s = 0, l = 0;
          if (this.get_levels() > 0)
            s = -this._offsetX, l = this._offsetY;
          else {
            var h = 800, u = 800;
            s = (this._offsetX - h / 2) * this._baseTileDegrees, l = (u / 2 - this._offsetY) * this._baseTileDegrees;
          }
          return this._bottomsUp && (s = -s), t ? this._centerX + s * r + l * a : this._centerY - s * a + l * r;
        },
        get_viewCenterX: function() {
          return this.get_wcsImage() != null ? this.get_wcsImage().get_viewCenterX() : this._calcViewCenterCoordinate(!0);
        },
        get_viewCenterY: function() {
          return this.get_wcsImage() != null ? this.get_wcsImage().get_viewCenterY() : this._calcViewCenterCoordinate(!1);
        },
        setInitialParameters: function(t, e, r, a, s, l, h, u, _, m, p, b, S, x, k, P, I, D, G, U, Y, j, K, Q, J, nt, W, ct) {
          this.set_referenceFrame(ct), this.set_meanRadius(W), this._altUrl = nt, this.demUrl = J, this._creditsText = K, this._creditsUrl = Q, this._offsetY = j, this._offsetX = Y, this._widthFactor = U, this._elevationModel = G, this._defaultSet = D, this._name = t, this._sparse = P, this._dataSetType = r, this._bandPass = a, this._quadTreeTileMap = b, this.url = e, this._levels = u, this._baseTileDegrees = _, this._imageSetID = l, this._extension = m, this._projection = s, this._bottomsUp = p, this._baseLevel = h, this._mercator = !s, this._centerX = S, this._centerY = x, this._rotation = k, this._thumbnailUrl = I, this._computeMatrix();
        },
        _guessZoomSetting: function(t) {
          var e = t, r = n.safeCast(this._wcsImage, bi);
          return this.get_projection() === 5 ? r != null && (e = this.get_baseTileDegrees() * r.get_sizeY() * 6 * 1.7) : r != null ? e = r.get_scaleY() * r.get_sizeY() * 6 * 1.7 : e = this.get_baseTileDegrees() * 6 * 1.7, e > t && (e = t), e;
        },
        get_thumbnail: function() {
          return this._thumbnail;
        },
        set_thumbnail: function(t) {
          return this._thumbnail = t, t;
        },
        get_bounds: function() {
          return this._bounds;
        },
        set_bounds: function(t) {
          return this._bounds = t, t;
        },
        get_isImage: function() {
          return !0;
        },
        get_isTour: function() {
          return !1;
        },
        get_isFolder: function() {
          return !1;
        },
        get_isCloudCommunityItem: function() {
          return !1;
        },
        get_readOnly: function() {
          return !1;
        },
        get_children: function() {
          return [];
        }
      };
      function ka(t, e, r, a, s, l) {
        this.interpolationType = 0, this.fastDirectionMove = !1, this._toTargetTime = 0, this._dateTimeSpan = 0, this._complete = !1, this._midpointFired = !1, this.interpolationType = l, Math.abs(t.lng - e.lng) > 180 && (t.lng > e.lng ? t.lng -= 360 : t.lng += 360), this._fromDateTime = a, this._toDateTime = s, this._dateTimeSpan = s - a, this._from = t.copy(), this._to = e.copy(), this._fromTime = n.now(), this._toTargetTime = r;
      }
      var Fu = {
        get_complete: function() {
          return this._complete;
        },
        get_currentPosition: function() {
          var t = n.now() - this._fromTime, e = t / 1e3, r = e / this._toTargetTime;
          return !this._midpointFired && r >= 0.5 && (this._midpointFired = !0, this._midpoint != null && this._midpoint()), r >= 1 ? (r = 1, this._complete = !0, this._to.copy()) : z.get_active().get_galacticMode() && V.singleton.renderContext.space ? Me.interpolateGreatCircle(this._from, this._to, r, this.interpolationType, this.fastDirectionMove) : Me.interpolate(this._from, this._to, r, this.interpolationType, this.fastDirectionMove);
        },
        get_currentDateTime: function() {
          var t = n.now() - this._fromTime, e = t / 1e3, r = e / this._toTargetTime, a = this._dateTimeSpan * r, s = new Date(this._fromDateTime.getTime() + n.truncate(a));
          return s;
        },
        get_midpoint: function() {
          return this._midpoint;
        },
        set_midpoint: function(t) {
          return this._midpoint = t, t;
        },
        get_moveTime: function() {
          return this._toTargetTime;
        }
      };
      function gr() {
        this._upTargetTime = 0, this._downTargetTime = 0, this._toTargetTime = 0, this._upTimeFactor = 0.6, this._downTimeFactor = 0.6, this._travelTimeFactor = 7, this._midpointFired = !1, this._complete = !1;
      }
      gr.create = function(t, e) {
        var r = new gr();
        return r.init(t, e), r;
      }, gr.createUpDown = function(t, e, r) {
        var a = new gr();
        return a._upTimeFactor = a._downTimeFactor = r, a.init(t.copy(), e.copy()), a;
      };
      var zu = {
        init: function(t, e) {
          Math.abs(t.lng - e.lng) > 180 && (t.lng > e.lng ? t.lng -= 360 : t.lng += 360), e.zoom <= 0 && (e.zoom = 360), t.zoom <= 0 && (t.zoom = 360), this._from = t, this._to = e, this._fromTime = n.now();
          var r = 360, a, s = Math.abs(t.lng - e.lng), l = Math.abs(t.lat - e.lat), h = Math.sqrt(l * l + s * s);
          r = h / 3 * 20, r > 360 && (r = 360), r < t.zoom && (r = t.zoom), a = h / 180 * (360 / r) * this._travelTimeFactor;
          var u = Math.max(Math.abs(t.angle - e.angle), Math.abs(t.rotation - e.rotation)), _ = Math.max(Math.abs(at.logN(r, 2) - at.logN(t.zoom, 2)), u);
          this._upTargetTime = this._upTimeFactor * _, this._downTargetTime = this._upTargetTime + a;
          var m = Math.abs(at.logN(r, 2) - at.logN(e.zoom, 2));
          this._toTargetTime = this._downTargetTime + Math.max(this._downTimeFactor * m, u), this._fromTop = t.copy(), this._fromTop.zoom = r, this._fromTop.angle = (t.angle + e.angle) / 2, this._fromTop.rotation = (t.rotation + e.rotation) / 2, this._toTop = e.copy(), this._toTop.zoom = this._fromTop.zoom, this._toTop.angle = this._fromTop.angle, this._toTop.rotation = this._fromTop.rotation;
        },
        get_complete: function() {
          return this._complete;
        },
        get_currentPosition: function() {
          var t = n.now() - this._fromTime, e = t / 1e3;
          if (e < this._upTargetTime)
            return Me.interpolate(this._from, this._fromTop, e / this._upTargetTime, 3, !1);
          if (e < this._downTargetTime)
            return e -= this._upTargetTime, z.get_active().get_galacticMode() && V.singleton.renderContext.space ? Me.interpolateGreatCircle(this._fromTop, this._toTop, e / (this._downTargetTime - this._upTargetTime), 3, !1) : Me.interpolate(this._fromTop, this._toTop, e / (this._downTargetTime - this._upTargetTime), 3, !1);
          this._midpointFired || (this._midpointFired = !0, this._midpoint != null && this._midpoint()), e -= this._downTargetTime;
          var r = e / (this._toTargetTime - this._downTargetTime);
          return r > 1 ? (r = 1, this._complete = !0, this._to.copy()) : Me.interpolate(this._toTop, this._to, r, 3, !1);
        },
        get_currentDateTime: function() {
          return Z.updateClock(), Z.get_now();
        },
        get_midpoint: function() {
          return this._midpoint;
        },
        set_midpoint: function(t) {
          return this._midpoint = t, t;
        },
        get_moveTime: function() {
          return this._toTargetTime;
        }
      };
      function Mi() {
        this.ABC = new L(), this.abc1 = new L(), this.pointSize = 0, this.w = 0, this.e = 0, this.n = 0, this.t = 0, this.a = 0, this.z = 0, this.orbitPos = 0, this.orbits = 0;
      }
      var Bu = {
        fill: function(t) {
          var e = Math.cos(t.omega * Mi._degrad), r = Math.sin(t.omega * Mi._degrad), a = Math.cos(t.i * Mi._degrad), s = Math.sin(t.i * Mi._degrad), l = r * Mi._cose, h = r * Mi._sine, u = -r * a, _ = e * a * Mi._cose - s * Mi._sine, m = e * a * Mi._sine + s * Mi._cose;
          this.ABC.x = Math.atan2(e, u), this.ABC.y = Math.atan2(l, _), this.ABC.z = Math.atan2(h, m), this.abc1.x = Math.sqrt(e * e + u * u), this.abc1.y = Math.sqrt(l * l + _ * _), this.abc1.z = Math.sqrt(h * h + m * m), this.pointSize = 0.1, t.a < 2.5 ? this.color = ot.get_white() : t.a < 2.83 ? this.color = ot.get_red() : t.a < 2.96 ? this.color = ot.get_green() : t.a < 3.3 ? this.color = ot.get_magenta() : t.a < 5 ? this.color = ot.get_cyan() : t.a < 10 ? (this.color = ot.get_yellow(), this.pointSize = 0.9) : (this.color = ot.get_white(), this.pointSize = 8), this.w = t.w, this.e = t.e, t.n ? this.n = t.n : this.n = 0.9856076686 / (t.a * Math.sqrt(t.a)), this.t = t.t - Mi.baseDate, this.a = t.a, this.z = 0, this.orbitPos = 0, this.orbits = 0;
        }
      };
      function er() {
      }
      var Vu = {};
      function Ft() {
        this.colors = [];
      }
      Ft.fromArgbList = function(t) {
        for (var e = new Ft(), r = n.enumerate(t); r.moveNext(); ) {
          var a = r.current;
          e.colors.push(B.fromArgb(a[0], a[1], a[2], a[3]));
        }
        return e;
      }, Ft.fromStringList = function(t) {
        for (var e = new Ft(), r = n.enumerate(t); r.moveNext(); ) {
          var a = r.current;
          e.colors.push(B.load(a));
        }
        return e;
      }, Ft.fromNamedColormap = function(t) {
        if (t == null)
          return null;
        switch (t.toLowerCase()) {
          case "viridis":
            return Ft.viridis;
          case "plasma":
            return Ft.plasma;
          case "inferno":
            return Ft.inferno;
          case "magma":
            return Ft.magma;
          case "cividis":
            return Ft.cividis;
          case "greys":
            return Ft.greys;
          case "gray":
            return Ft.gray;
          case "purples":
            return Ft.purples;
          case "blues":
            return Ft.blues;
          case "greens":
            return Ft.greens;
          case "oranges":
            return Ft.oranges;
          case "reds":
            return Ft.reds;
          case "rdylbu":
            return Ft.rdYlBu;
        }
        return null;
      }, Ft._getTextureFromName = function(t, e) {
        var r = Ft.colorTextures[e];
        if (r == null) {
          var a = Ft.fromNamedColormap(e);
          a != null && (r = Ft._initColorTexture(t, a), Ft.colorTextures[e.toLowerCase()] = r);
        }
        return r;
      }, Ft.bindColorMapTexture = function(t, e) {
        var r = Ft._getTextureFromName(t, e);
        r == null && (r = Ft._getTextureFromName(t, "gray")), t.activeTexture(33985), t.bindTexture(3553, r);
      }, Ft._initColorTexture = function(t, e) {
        var r = t.createTexture();
        t.activeTexture(33985), t.bindTexture(3553, r), t.texParameteri(3553, 10242, 33071), t.texParameteri(3553, 10243, 33071);
        var a = Ft._extractColorArray(e.colors);
        return t.texImage2D(3553, 0, 32849, a.length / 3, 1, 0, 6407, 5121, a), t.texParameteri(3553, 10241, 9728), t.texParameteri(3553, 10240, 9728), r;
      }, Ft._extractColorArray = function(t) {
        for (var e = 0, r = new Uint8Array(t.length * 3), a = n.enumerate(t); a.moveNext(); ) {
          var s = a.current;
          r[e++] = s.r, r[e++] = s.g, r[e++] = s.b;
        }
        return r;
      };
      var Ou = {
        findClosestColor: function(t) {
          var e;
          return t <= 0 ? this.colors[0] : t >= 1 ? this.colors[this.colors.length - 1] : (e = n.truncate(t * this.colors.length), this.colors[e]);
        }
      };
      function we() {
        this.id = di.newGuid(), this.loadedFromTour = !1, this.tourDocument = null, this.opacity = 1, this.opened = !1, this._startTime = n.date("01/01/1900"), this._endTime = n.date("01/01/2100"), this._fadeSpan = 0, this._fadeType = 4, this.version = 0, this.color = ot.get_white(), this.enabled = !0, this.astronomical = !1;
      }
      we.fromXml = function(t, e) {
        var r = t.attributes.getNamedItem("Type").nodeValue, a = n.replaceString(r, "TerraViewer.", "");
        if (a == null)
          return null;
        var s = null;
        switch (a) {
          case "SpreadSheetLayer":
            s = new ei();
            break;
          case "GreatCirlceRouteLayer":
            s = new Fn();
            break;
          case "GridLayer":
            s = new Ga();
            break;
          case "ImageSetLayer":
            s = new si();
            break;
          case "Object3dLayer":
            s = new Zt();
            break;
          case "OrbitLayer":
            s = new Ha();
            break;
          case "VoTableLayer":
            s = new Oi();
            break;
          default:
            return null;
        }
        return s.initFromXml(t), s;
      };
      var Uu = {
        getPrimaryUI: function() {
          return null;
        },
        getFileStreamUrl: function(t) {
          return this.tourDocument != null ? this.tourDocument.getFileStream(t) : null;
        },
        get_opacity: function() {
          return this.opacity;
        },
        set_opacity: function(t) {
          return this.opacity !== t && (this.version++, this.opacity = t), t;
        },
        get_opened: function() {
          return this.opened;
        },
        set_opened: function(t) {
          return this.opened !== t && (this.version++, this.opened = t), t;
        },
        get_startTime: function() {
          return this._startTime;
        },
        set_startTime: function(t) {
          return n.compareDates(this._startTime, t) || (this.version++, this._startTime = t), t;
        },
        get_endTime: function() {
          return this._endTime;
        },
        set_endTime: function(t) {
          return n.compareDates(this._endTime, t) || (this.version++, this._endTime = t), t;
        },
        get_fadeSpan: function() {
          return this._fadeSpan;
        },
        set_fadeSpan: function(t) {
          return this.version++, this._fadeSpan = t, t;
        },
        get_fadeType: function() {
          return this._fadeType;
        },
        set_fadeType: function(t) {
          return this._fadeType !== t && (this.set_version(this.get_version() + 1) - 1, this._fadeType = t), t;
        },
        get_version: function() {
          return this.version;
        },
        set_version: function(t) {
          return this.version = t, t;
        },
        findClosest: function(t, e, r, a) {
          return r;
        },
        hoverCheckScreenSpace: function(t) {
          return !1;
        },
        clickCheckScreenSpace: function(t) {
          return !1;
        },
        draw: function(t, e, r) {
          return !0;
        },
        preDraw: function(t, e) {
          return !0;
        },
        updateData: function(t, e, r, a) {
          return !0;
        },
        upadteData: function(t, e, r, a) {
          return this.updateData(t, e, r, a);
        },
        canCopyToClipboard: function() {
          return !1;
        },
        copyToClipboard: function() {
        },
        getParams: function() {
          var t = new Array(5);
          return t[0] = this.color.r / 255, t[1] = this.color.g / 255, t[2] = this.color.b / 255, t[3] = this.color.a / 255, t[4] = this.opacity, t;
        },
        setParams: function(t) {
          t.length === 5 && (this.opacity = t[4], this.color = B.fromArgb(t[3] * 255, t[0] * 255, t[1] * 255, t[2] * 255));
        },
        getParamNames: function() {
          return ["Color.Red", "Color.Green", "Color.Blue", "Color.Alpha", "Opacity"];
        },
        getEditUI: function() {
          return n.safeCast(this, ln);
        },
        cleanUp: function() {
        },
        get_name: function() {
          return this._name;
        },
        set_name: function(t) {
          return this._name !== t && (this.version++, this._name = t), t;
        },
        toString: function() {
          return this._name;
        },
        get_referenceFrame: function() {
          return this.referenceFrame;
        },
        set_referenceFrame: function(t) {
          return this.referenceFrame = t, t;
        },
        getProps: function() {
          return "";
        },
        get_color: function() {
          return this.color;
        },
        set_color: function(t) {
          return this.color !== t && (this.color = t, this.version++), t;
        },
        colorChanged: function() {
        },
        get_colorValue: function() {
          return this.get_color().toString();
        },
        set_colorValue: function(t) {
          return this.set_color(B.fromName(t)), t;
        },
        get_enabled: function() {
          return this.enabled;
        },
        set_enabled: function(t) {
          return this.enabled = t, t;
        },
        get_astronomical: function() {
          return this.astronomical;
        },
        set_astronomical: function(t) {
          return this.astronomical !== t && (this.version++, this.astronomical = t), t;
        },
        getTypeName: function() {
          return "TerraViewer.Layer";
        },
        saveToXml: function(t) {
          t._writeStartElement("Layer"), t._writeAttributeString("Id", this.id.toString()), t._writeAttributeString("Type", this.getTypeName()), t._writeAttributeString("Name", this.get_name()), t._writeAttributeString("ReferenceFrame", this.referenceFrame), t._writeAttributeString("Color", this.color.save()), t._writeAttributeString("Opacity", this.opacity.toString()), t._writeAttributeString("StartTime", at.xmlDate(this.get_startTime())), t._writeAttributeString("EndTime", at.xmlDate(this.get_endTime())), t._writeAttributeString("FadeSpan", this.get_fadeSpan().toString()), t._writeAttributeString("FadeType", this.get_fadeType().toString()), this.writeLayerProperties(t), t._writeEndElement();
        },
        writeLayerProperties: function(t) {
        },
        initializeFromXml: function(t) {
        },
        initFromXml: function(t) {
          if (this.id = di.fromString(t.attributes.getNamedItem("Id").nodeValue), this.set_name(t.attributes.getNamedItem("Name").nodeValue), this.referenceFrame = t.attributes.getNamedItem("ReferenceFrame").nodeValue, this.color = B.load(t.attributes.getNamedItem("Color").nodeValue), this.opacity = parseFloat(t.attributes.getNamedItem("Opacity").nodeValue), t.attributes.getNamedItem("StartTime") != null && this.set_startTime(new Date(t.attributes.getNamedItem("StartTime").nodeValue)), t.attributes.getNamedItem("EndTime") != null && this.set_endTime(new Date(t.attributes.getNamedItem("EndTime").nodeValue)), t.attributes.getNamedItem("FadeSpan") != null && this.set_fadeSpan(at.parseTimeSpan(t.attributes.getNamedItem("FadeSpan").nodeValue)), t.attributes.getNamedItem("FadeType") != null)
            switch (t.attributes.getNamedItem("FadeType").nodeValue) {
              case "In":
                this.set_fadeType(1);
                break;
              case "Out":
                this.set_fadeType(2);
                break;
              case "Both":
                this.set_fadeType(3);
                break;
              case "None":
                this.set_fadeType(4);
                break;
            }
          this.initializeFromXml(t);
        },
        loadData: function(t, e) {
        },
        addFilesToCabinet: function(t) {
        },
        getStringFromGzipBlob: function(t, e) {
          var r = new FileReader();
          r.onloadend = function(a) {
            var s = "";
            try {
              s = Ya.inflate(a.target.result, { to: "string" });
            } catch (h) {
              var l = h.toString();
              if (l === "incorrect header check" || l === "unknown compression method")
                try {
                  s = String.fromCharCode.apply(null, new Uint8Array(a.target.result));
                } catch (u) {
                  throw u;
                }
              else
                throw h;
            }
            e(s);
          }, r.readAsArrayBuffer(t);
        }
      };
      function Gu(t, e) {
        this.markerIndex = 4, this.customMarker = null, this.text = t, this.markerIndex = e;
      }
      var Hu = {};
      function T() {
      }
      T.get_version = function() {
        return T._version;
      }, T.set_version = function(t) {
        return T._version = t, t;
      }, T.get_frameWizardDialog = function() {
        return T._frameWizardDialog;
      }, T.get_dataVizWizardDialog = function() {
        return T._dataVizWizardDialog;
      }, T.get_referenceFramePropsDialog = function() {
        return T._referenceFramePropsDialog;
      }, T.get_greatCircleDlg = function() {
        return T._greatCircleDialog;
      }, T.get_tourLayers = function() {
        return T._tourLayers;
      }, T.set_tourLayers = function(t) {
        return T._tourLayers !== t && !t ? (T._clearLayers(), T._tourLayers = t, T.loadTree()) : T._tourLayers !== t && t && (T._tourLayers = t, T.initLayers()), t;
      }, T.loadTree = function() {
        V.scriptInterface != null && V.scriptInterface.refreshLayerManagerNow();
      }, T.get_layerMaps = function() {
        return T.get_tourLayers() ? T._layerMapsTours : T._layerMaps;
      }, T.set_layerMaps = function(t) {
        return T.get_tourLayers() ? T._layerMapsTours = t : T._layerMaps = t, t;
      }, T.get_allMaps = function() {
        return T.get_tourLayers() ? T._allMapsTours : T._allMaps;
      }, T.set_allMaps = function(t) {
        return T.get_tourLayers() ? T._allMapsTours = t : T._allMaps = t, t;
      }, T.get_currentMap = function() {
        return T._currentMap;
      }, T.set_currentMap = function(t) {
        return T._currentMap = t, t;
      }, T.get_layerList = function() {
        return T.get_tourLayers() ? T._layerListTours : T._layerList;
      }, T.set_layerList = function(t) {
        return T.get_tourLayers() ? T._layerListTours = t : T._layerList = t, t;
      }, T.oneTimeInitialization = function() {
        T._webFileMoons == null && T.getMoonFile(Kt.singleton.engineAssetUrl("moons.txt")), xi.triggerLoadSprite();
      }, T.initLayers = function() {
        T._clearLayers();
        var t = null, e = !T.get_tourLayers() && !V.singleton.freestandingMode;
        if (e) {
          t = new Xe("ISS", 18), t.frame.epoch = Z._twoLineDateToJulian("10184.51609218"), t.frame.semiMajorAxis = 672882941e-2, t.frame.referenceFrameType = 1, t.frame.inclination = 51.6442, t.frame.longitudeOfAscendingNode = 147.0262, t.frame.eccentricity = 9909e-7, t.frame.meanAnomolyAtEpoch = 325.5563, t.frame.meanDailyMotion = 360 * 15.72172655, t.frame.argumentOfPeriapsis = 286.4623, t.frame.scale = 1, t.frame.semiMajorAxisUnits = 1, t.frame.meanRadius = 130, t.frame.oblateness = 0, t.frame.showOrbitPath = !0;
          var r = new Array(0), a = Kt.singleton.coreDynamicUrl("wwtweb/isstle.aspx"), s;
          s = new Ai(a), s.onStateChange = function() {
            if (s.get_state() === 1) {
              var l = s.getText();
              r = l.split(`
`), r.length > 1 && t.frame.fromTLE(r[0], r[1], 3986004418e5);
            }
          }, s.send(), t.enabled = !0;
        }
        T.get_layerMaps().Sun = new Xe("Sun", 3), T.get_layerMaps().Sun.addChild(new Xe("Mercury", 4)), T.get_layerMaps().Sun.addChild(new Xe("Venus", 5)), T.get_layerMaps().Sun.addChild(new Xe("Earth", 6)), T.get_layerMaps().Sun.childMaps.Earth.addChild(new Xe("Moon", 13)), e && T.get_layerMaps().Sun.childMaps.Earth.addChild(t), T.get_layerMaps().Sun.addChild(new Xe("Mars", 7)), T.get_layerMaps().Sun.addChild(new Xe("Jupiter", 8)), T.get_layerMaps().Sun.childMaps.Jupiter.addChild(new Xe("Io", 14)), T.get_layerMaps().Sun.childMaps.Jupiter.addChild(new Xe("Europa", 15)), T.get_layerMaps().Sun.childMaps.Jupiter.addChild(new Xe("Ganymede", 16)), T.get_layerMaps().Sun.childMaps.Jupiter.addChild(new Xe("Callisto", 17)), T.get_layerMaps().Sun.addChild(new Xe("Saturn", 9)), T.get_layerMaps().Sun.addChild(new Xe("Uranus", 10)), T.get_layerMaps().Sun.addChild(new Xe("Neptune", 11)), T.get_layerMaps().Sun.addChild(new Xe("Pluto", 12)), T._addMoons(T._moonfile), T.get_layerMaps().Sky = new Xe("Sky", 0), T.get_layerMaps().Sun.open = !0, T._allMaps = {}, T._addAllMaps(T.get_layerMaps(), null), e && T._addIss(), T._version++, T.loadTree();
      }, T._addIss = function() {
        var t = new mi();
        t.set_name(tt.getLocalizedText(1314, "ISS Model  (Toshiyuki Takahei)")), t.enabled = z.get_active().get_showISSModel(), T.get_layerList()[t.id] = t, t.set_referenceFrame("ISS"), T.get_allMaps().ISS.layers.push(t), T.get_allMaps().ISS.open = !0;
      }, T._addAllMaps = function(t, e) {
        for (var r = n.enumerate(n.keys(t)); r.moveNext(); ) {
          var a = r.current, s = t[a];
          s.frame.parent = e, T.get_allMaps()[s.get_name()] = s, T._addAllMaps(s.childMaps, s.get_name());
        }
      }, T._clearLayers = function() {
        for (var t = n.enumerate(n.keys(T.get_layerList())); t.moveNext(); ) {
          var e = t.current, r = T.get_layerList()[e];
          r.cleanUp();
        }
        n.clearKeys(T.get_layerList()), n.clearKeys(T.get_layerMaps());
      }, T.getMoonFile = function(t) {
        T._webFileMoons = new Ai(t), T._webFileMoons.onStateChange = T.moonFileStateChange, T._webFileMoons.send();
      }, T.moonFileStateChange = function() {
        T._webFileMoons.get_state() === 2 ? alert(T._webFileMoons.get_message()) : T._webFileMoons.get_state() === 1 && (T._moonfile = T._webFileMoons.getText(), T.initLayers());
      }, T._addMoons = function(t) {
        for (var e = t.split(`\r
`), r = !0, a = n.enumerate(e); a.moveNext(); ) {
          var s = a.current;
          if (r) {
            r = !1;
            continue;
          }
          var l = s.split("	");
          if (l.length > 16) {
            var h = l[0], u = new Xe(l[2], 18);
            u.frame._systemGenerated = !0, u.frame.epoch = parseFloat(l[1]), u.frame.semiMajorAxis = parseFloat(l[3]) * 1e3, u.frame.referenceFrameType = 1, u.frame.inclination = parseFloat(l[7]), u.frame.longitudeOfAscendingNode = parseFloat(l[8]), u.frame.eccentricity = parseFloat(l[4]), u.frame.meanAnomolyAtEpoch = parseFloat(l[6]), u.frame.meanDailyMotion = parseFloat(l[9]), u.frame.argumentOfPeriapsis = parseFloat(l[5]), u.frame.scale = 1, u.frame.semiMajorAxisUnits = 1, u.frame.meanRadius = parseFloat(l[16]) * 1e3, u.frame.rotationalPeriod = parseFloat(l[17]), u.frame.showAsPoint = !1, u.frame.showOrbitPath = !0, u.frame.set_representativeColor(B.fromArgb(255, 175, 216, 230)), u.frame.oblateness = 0, T.get_layerMaps().Sun.childMaps[h].addChild(u);
          }
        }
      }, T.addVoTableLayer = function(t, e) {
        return T.addVoTableLayerWithPlotType(t, e, 2);
      }, T.addVoTableLayerWithPlotType = function(t, e, r) {
        var a = Oi.create(t, r);
        return a.set_name(e), a.set_astronomical(!0), a.set_referenceFrame("Sky"), T.get_layerList()[a.id] = a, T.get_allMaps().Sky.layers.push(a), T.get_allMaps().Sky.open = !0, a.enabled = !0, T._version++, T.loadTree(), a;
      }, T.addImageSetLayer = function(t, e) {
        var r = si.create(t);
        return T.addFitsImageSetLayer(r, e);
      }, T.addImageSetLayerCallback = function(t, e, r) {
        var a = si.create(t), s = t.get_extension() === ".fits" && a.getFitsImage() == null && t.get_projection() !== 7;
        return s && (t.get_fitsProperties().onMainImageLoaded = function(l) {
          l.applyDisplaySettings(), r != null && r(a);
        }), T.addFitsImageSetLayer(a, e), r != null && (!s || t.get_fitsProperties().mainImageLoadedEventHasFired) && r(a), a;
      }, T.addFitsImageSetLayer = function(t, e) {
        return t.doneLoading(null), t.set_name(e), t.set_astronomical(!0), t.set_referenceFrame("Sky"), T.get_layerList()[t.id] = t, T.get_allMaps().Sky.layers.push(t), T.get_allMaps().Sky.open = !0, t.enabled = !0, T._version++, T.loadTree(), t;
      }, T.getNextFitsName = function() {
        return T._getNextName("Fits Image");
      }, T.getNextImageSetName = function() {
        return T._getNextName("Image Set");
      }, T._getNextName = function(t) {
        for (var e = 0, r = n.enumerate(n.keys(T.get_allMaps())); r.moveNext(); )
          for (var a = r.current, s = n.enumerate(T.get_allMaps()[a].layers); s.moveNext(); ) {
            var l = s.current;
            if (n.startsWith(l.get_name(), t + " ")) {
              var h = n.replaceString(l.get_name(), t + " ", "");
              try {
                var u = parseInt(h);
                u > e && (e = u);
              } catch {
              }
            }
          }
        return n.format("{0} {1}", t, e + 1);
      }, T._closeAllTourLoadedLayers = function() {
        for (var t = [], e = n.enumerate(n.keys(T.get_layerList())); e.moveNext(); ) {
          var r = e.current, a = T.get_layerList()[r];
          a.loadedFromTour && t.push(a.id);
        }
        for (var s = n.enumerate(t); s.moveNext(); ) {
          var l = s.current;
          T.deleteLayerByID(l, !0, !1);
        }
        for (var h = [], u = n.enumerate(n.keys(T.get_allMaps())); u.moveNext(); ) {
          var r = u.current, _ = T.get_allMaps()[r];
          _.loadedFromTour && !_.layers.length && h.push(_.get_name());
        }
        for (var m = n.enumerate(h); m.moveNext(); ) {
          var p = m.current;
          T.purgeLayerMapDeep(T.get_allMaps()[p], !0);
        }
        T.set_version(T.get_version() + 1) - 1, T.loadTree();
      }, T.purgeLayerMapDeep = function(t, e) {
        for (var r = n.enumerate(t.layers); r.moveNext(); ) {
          var a = r.current;
          T.deleteLayerByID(a.id, !1, !1);
        }
        t.layers.length = 0;
        for (var s = n.enumerate(n.keys(t.childMaps)); s.moveNext(); ) {
          var l = s.current, h = t.childMaps[l];
          T.purgeLayerMapDeep(h, !1);
        }
        n.clearKeys(t.childMaps), e && (n.emptyString(t.frame.parent) ? n.keyExists(T.get_layerMaps(), t.get_name()) && delete T.get_layerMaps()[t.get_name()] : n.keyExists(T.get_allMaps(), t.frame.parent) && delete T.get_allMaps()[t.frame.parent].childMaps[t.get_name()]), delete T.get_allMaps()[t.get_name()], T._version++;
      }, T._cleanAllTourLoadedLayers = function() {
        for (var t = n.enumerate(n.keys(T.get_layerList())); t.moveNext(); ) {
          var e = t.current, r = T.get_layerList()[e];
          r.loadedFromTour && (r.loadedFromTour = !1);
        }
      }, T.mergeToursLayers = function() {
        T._tourLayers = !1;
        for (var t = !1, e = !1, r = n.enumerate(n.keys(T._allMapsTours)); r.moveNext(); ) {
          var a = r.current, s = T._allMapsTours[a];
          if (!n.keyExists(T._allMaps, s.get_name())) {
            var l = new Xe(s.get_name(), 18);
            l.frame = s.frame, l.loadedFromTour = !0, T.get_allMaps()[l.get_name()] = l;
          }
        }
        T.connectAllChildren();
        for (var h = n.enumerate(n.keys(T._layerListTours)); h.moveNext(); ) {
          var a = h.current, u = T._layerListTours[a];
          n.keyExists(T.get_layerList(), u.id) && (e || (t = !0, e = !0), t && T.deleteLayerByID(u.id, !0, !1)), n.keyExists(T.get_layerList(), u.id) ? u.cleanUp() : n.keyExists(T.get_allMaps(), u.get_referenceFrame()) && (T.get_layerList()[u.id] = u, T.get_allMaps()[u.get_referenceFrame()].layers.push(u));
        }
        n.clearKeys(T._layerListTours), n.clearKeys(T._allMapsTours), n.clearKeys(T._layerMapsTours), T.loadTree();
      }, T.connectAllChildren = function() {
        for (var t = n.enumerate(n.keys(T.get_allMaps())); t.moveNext(); ) {
          var e = t.current, r = T.get_allMaps()[e];
          n.emptyString(r.frame.parent) && !n.keyExists(T.get_layerMaps(), r.frame.name) ? T.get_layerMaps()[r.get_name()] = r : !n.emptyString(r.frame.parent) && n.keyExists(T.get_allMaps(), r.frame.parent) && (n.keyExists(T.get_allMaps()[r.frame.parent].childMaps, r.frame.name) || (T.get_allMaps()[r.frame.parent].childMaps[r.frame.name] = r, r.parent = T.get_allMaps()[r.frame.parent]));
        }
      }, T.deleteLayerByID = function(t, e, r) {
        if (n.keyExists(T.get_layerList(), t)) {
          var a = T.get_layerList()[t];
          return a.cleanUp(), e && n.remove(T.get_allMaps()[a.get_referenceFrame()].layers, a), delete T.get_layerList()[t], T._version++, r && T.loadTree(), !0;
        } else
          return !1;
      }, T._getFrameTarget = function(t, e) {
        var r = new ps(), a = L.get_empty();
        if (r.target = L.get_empty(), r.matrix = H.get_identity(), !n.keyExists(T.get_allMaps(), e))
          return r;
        var s = [], l = T.get_allMaps()[e];
        for (s.push(l); l.frame.reference === 18; )
          l = l.parent, s.splice(0, 0, l);
        for (var h = t.get_world().clone(), u = t.get_worldBaseNonRotating(), _ = t.get_worldBase(), m = t.get_nominalRadius(), p = n.enumerate(s); p.moveNext(); ) {
          var b = p.current;
          b.frame.reference !== 18 && b.frame.reference !== 20 ? A.setupPlanetMatrix(t, Et.parse("SolarSystemObjects", b.frame.name), L.get_empty(), !1) : (b.computeFrame(t), b.frame.useRotatingParentFrame() ? t.set_world(H.multiplyMatrix(b.frame.worldMatrix, t.get_world())) : t.set_world(H.multiplyMatrix(b.frame.worldMatrix, t.get_worldBaseNonRotating())), b.frame.referenceFrameType === 3 && t.set_worldBaseNonRotating(t.get_world().clone()), t.set_nominalRadius(b.frame.meanRadius));
        }
        a = t.get_world().transform(a);
        var S = t.get_world().transform(L.create(0, 0, 1)), x = L.subtractVectors(t.get_world().transform(L.create(0, 1, 0)), a);
        return x.normalize(), r.matrix = H.lookAtLH(new L(), L.subtractVectors(S, a), x), t.set_nominalRadius(m), t.set_world(h), t.set_worldBaseNonRotating(u), t.set_worldBase(_), r.target = a, r;
      }, T._prepTourLayers = function() {
        if (ie.get_playing()) {
          var t = V.singleton.uiController;
          if (t != null) {
            var e = t.get_tour();
            if (e.get_currentTourStop() != null && (t.updateTweenPosition(-1), !e.get_currentTourStop().get_keyFramed())) {
              e.get_currentTourStop()._updateLayerOpacity();
              for (var r = n.enumerate(n.keys(e.get_currentTourStop().layers)); r.moveNext(); ) {
                var a = r.current, s = e.get_currentTourStop().layers[a];
                n.keyExists(T.get_layerList(), s.id) && (T.get_layerList()[s.id].set_opacity(s.frameOpacity), T.get_layerList()[s.id].setParams(s.frameParams));
              }
            }
          }
        }
      }, T._draw = function(t, e, r, a, s, l) {
        if (n.keyExists(T.get_allMaps(), a)) {
          var h = T.get_allMaps()[a];
          if (!(!h.enabled || !n.keyCount(h.childMaps) && !h.layers.length && !(h.frame.showAsPoint || h.frame.showOrbitPath))) {
            if (ie.get_playing()) {
              var u = V.singleton.uiController;
              if (u != null) {
                var _ = u.get_tour();
                if (_.get_currentTourStop() != null) {
                  u.updateTweenPosition(-1), _.get_currentTourStop()._updateLayerOpacity();
                  for (var m = n.enumerate(n.keys(_.get_currentTourStop().layers)); m.moveNext(); ) {
                    var p = m.current, b = _.get_currentTourStop().layers[p];
                    n.keyExists(T.get_layerList(), b.id) && (T.get_layerList()[b.id].set_opacity(b.frameOpacity), T.get_layerList()[b.id].setParams(b.frameParams));
                  }
                }
              }
            }
            var S = t.get_world(), x = t.get_worldBaseNonRotating(), k = t.get_nominalRadius();
            (h.frame.reference === 18 | h.frame.reference === 18) === 1 && (h.computeFrame(t), h.frame.referenceFrameType !== 1 && h.frame.referenceFrameType !== 2 ? t.set_world(H.multiplyMatrix(h.frame.worldMatrix, t.get_world())) : t.set_world(H.multiplyMatrix(h.frame.worldMatrix, t.get_worldBaseNonRotating())), t.set_nominalRadius(h.frame.meanRadius)), h.frame.showAsPoint;
            for (var P = 0; P < 2; P++)
              for (var I = n.enumerate(T.get_allMaps()[a].layers); I.moveNext(); ) {
                var D = I.current;
                if (!P && n.canCast(D, si) || P === 1 && !n.canCast(D, si)) {
                  var G = !1;
                  if (P || (G = !r && D.get_overrideDefaultLayer()), D.enabled && !G) {
                    var U = Z.utcToJulian(D.get_startTime()), Y = Z.utcToJulian(D.get_endTime()), j = Z.utcToJulian(D.get_startTime()) - (D.get_fadeType() === 1 || D.get_fadeType() === 3 ? D.get_fadeSpan() / 864e6 : 0), K = Z.utcToJulian(D.get_endTime()) + (D.get_fadeType() === 2 || D.get_fadeType() === 3 ? D.get_fadeSpan() / 864e6 : 0);
                    if (Z.get_jNow() > j && Z.get_jNow() < K) {
                      var Q = 1;
                      if (Z.get_jNow() < U && (Q = (Z.get_jNow() - j) / (D.get_fadeSpan() / 864e6)), Z.get_jNow() > Y && (Q = (K - Z.get_jNow()) / (D.get_fadeSpan() / 864e6)), D.set_astronomical(r), n.canCast(D, ei)) {
                        var J = n.safeCast(D, ei);
                        J.draw(t, e * Q, l);
                      } else
                        D.draw(t, e * Q, l);
                    }
                  }
                }
              }
            if (s)
              for (var nt = n.enumerate(n.keys(T.get_allMaps()[a].childMaps)); nt.moveNext(); ) {
                var p = nt.current, W = T.get_allMaps()[a].childMaps[p];
                if (n.canCast(W, Xe)) {
                  if (W.enabled && W.frame.showOrbitPath && z.get_active().get_solarSystemOrbits() && z.get_active().get_solarSystemMinorOrbits())
                    if (W.frame.referenceFrameType === 1) {
                      W.frame.get_orbit() == null && W.frame.set_orbit(new dn(W.frame.get_elements(), 360, W.frame.get_representativeColor(), 1, W.parent.frame.meanRadius));
                      var ct = t.get_world();
                      t.set_world(H.multiplyMatrix(h.frame.worldMatrix, t.get_worldBaseNonRotating())), W.frame.get_orbit().draw3D(t, 1 * 0.5, L.create(0, 0, 0)), t.set_world(ct);
                    } else
                      W.frame.referenceFrameType;
                  (W.frame.reference === 18 || W.frame.reference === 19) && T._draw(t, e, r, W.get_name(), s, l);
                }
              }
            t.set_nominalRadius(k), t.set_world(S), t.set_worldBaseNonRotating(x);
          }
        }
      }, T._getVisibleLayerList = function(t) {
        for (var e = {}, r = n.enumerate(n.keys(T.get_layerList())); r.moveNext(); ) {
          var a = r.current, s = T.get_layerList()[a];
          if (s.enabled) {
            var l = new za();
            l.startOpacity = l.endOpacity = s.get_opacity(), l.id = s.id, l.startParams = s.getParams(), n.keyExists(t, l.id) ? (l.endOpacity = t[l.id].endOpacity, l.endParams = t[l.id].endParams) : l.endParams = s.getParams(), e[s.id] = l;
          }
        }
        return e;
      }, T.setVisibleLayerList = function(t) {
        for (var e = n.enumerate(n.keys(T.get_layerList())); e.moveNext(); ) {
          var r = e.current, a = T.get_layerList()[r];
          a.enabled = n.keyExists(t, a.id);
          try {
            a.enabled && (a.set_opacity(t[a.id].frameOpacity), a.setParams(t[a.id].frameParams));
          } catch {
          }
        }
      }, T._preDraw = function(t, e, r, a, s) {
        if (n.keyExists(T.get_allMaps(), a)) {
          var l = T.get_allMaps()[a];
          if (!(!n.keyCount(l.childMaps) && !l.layers.length)) {
            if (ie.get_playing()) {
              var h = n.safeCast(V.singleton.uiController, ie);
              if (h != null) {
                var u = h.get_tour();
                if (u.get_currentTourStop() != null) {
                  h.updateTweenPosition(-1), u.get_currentTourStop()._updateLayerOpacity();
                  for (var _ = n.enumerate(n.keys(u.get_currentTourStop().layers)); _.moveNext(); ) {
                    var m = _.current, p = u.get_currentTourStop().layers[m];
                    n.keyExists(T.get_layerList(), p.id) && (T.get_layerList()[p.id].set_opacity(p.frameOpacity), T.get_layerList()[p.id].setParams(p.frameParams));
                  }
                }
              }
            }
            var b = t.get_world(), S = t.get_worldBaseNonRotating(), x = t.get_nominalRadius();
            l.frame.reference === 18 && (l.computeFrame(t), l.frame.referenceFrameType !== 1 ? t.set_world(H.multiplyMatrix(l.frame.worldMatrix, t.get_world())) : t.set_world(H.multiplyMatrix(l.frame.worldMatrix, t.get_worldBaseNonRotating())), t.set_nominalRadius(l.frame.meanRadius));
            for (var k = 0; k < 2; k++)
              for (var P = n.enumerate(T.get_allMaps()[a].layers); P.moveNext(); ) {
                var I = P.current;
                if ((!k && n.canCast(I, si) || k === 1 && !n.canCast(I, si)) && I.enabled) {
                  var D = Z.utcToJulian(I.get_startTime()), G = Z.utcToJulian(I.get_endTime()), U = Z.utcToJulian(I.get_startTime()) - (I.get_fadeType() === 1 || I.get_fadeType() === 3 ? I.get_fadeSpan() / 864e6 : 0), Y = Z.utcToJulian(I.get_endTime()) + (I.get_fadeType() === 2 || I.get_fadeType() === 3 ? I.get_fadeSpan() / 864e6 : 0);
                  if (Z.get_jNow() > U && Z.get_jNow() < Y) {
                    var j = 1;
                    Z.get_jNow() < D && (j = (Z.get_jNow() - U) / (I.get_fadeSpan() / 864e6)), Z.get_jNow() > G && (j = (Y - Z.get_jNow()) / (I.get_fadeSpan() / 864e6)), l.frame.reference || I.set_astronomical(!0), I.preDraw(t, e * j);
                  }
                }
              }
            if (s)
              for (var K = n.enumerate(n.keys(T.get_allMaps()[a].childMaps)); K.moveNext(); ) {
                var m = K.current, Q = T.get_allMaps()[a].childMaps[m];
                (Q.frame.reference === 18 || Q.frame.reference === 19) && T._preDraw(t, e, r, Q.get_name(), s);
              }
            t.set_nominalRadius(x), t.set_world(b), t.set_worldBaseNonRotating(S);
          }
        }
      }, T.add = function(t, e) {
        n.keyExists(T.get_layerList(), t.id) || n.keyExists(T.get_allMaps(), t.get_referenceFrame()) && (T.get_layerList()[t.id] = t, T.get_allMaps()[t.get_referenceFrame()].layers.push(t), T._version++, e && T.loadTree());
      }, T.layerSelectionChanged = function(t) {
        if (T._selectedLayer = t, T._selectedLayer != null)
          if (n.canCast(T._selectedLayer, Xe)) {
            var e = n.safeCast(T._selectedLayer, Xe);
            e != null && T.set_currentMap(e.get_name());
          } else {
            var r = n.safeCast(T._selectedLayer, si);
            if (r != null && n.canCast(r.get_imageSet().get_wcsImage(), bi))
              return;
          }
        V.scriptInterface.setTimeSlider("left", ""), V.scriptInterface.setTimeSlider("right", ""), V.scriptInterface.setTimeSlider("title", tt.getLocalizedText(667, "Time Scrubber"));
      }, T.setTimeSliderValue = function(t) {
        var e = n.safeCast(T._selectedLayer, si);
        e != null && n.canCast(e.get_imageSet().get_wcsImage(), bi);
      }, T.showLayerMenu = function(t, e, r) {
        if (T._lastMenuClick = lt.create(e, r), T._selectedLayer = t, n.canCast(t, Xe) ? T.set_currentMap(t.get_name()) : n.canCast(t, we) && T.set_currentMap(t.get_referenceFrame()), n.canCast(t, we) && !n.canCast(t, ms)) {
          var a = t;
          T._contextMenu = new pr();
          var s = ht.create(tt.getLocalizedText(225, "Rename")), l = ht.create(tt.getLocalizedText(981, "Expand")), h = ht.create(tt.getLocalizedText(982, "Collapse")), u = ht.create(tt.getLocalizedText(428, "Copy")), _ = ht.create(tt.getLocalizedText(167, "Delete")), m = ht.create(tt.getLocalizedText(960, "Save...")), p = ht.create(tt.getLocalizedText(983, "Publish to Community...")), b = ht.create(tt.getLocalizedText(458, "Color/Opacity")), S = ht.create(tt.getLocalizedText(305, "Opacity")), x = ht.create(tt.getLocalizedText(20, "Properties")), k = ht.create(tt.getLocalizedText(1291, "Scale/Histogram")), P = ht.create(tt.getLocalizedText(683, "Lifetime")), I = new yi(), D = ht.create(tt.getLocalizedText(684, "Move to Top")), G = ht.create(tt.getLocalizedText(685, "Move Up")), U = ht.create(tt.getLocalizedText(686, "Move Down")), Y = ht.create(tt.getLocalizedText(687, "Move to Bottom")), j = ht.create(tt.getLocalizedText(957, "VO Table Viewer")), K = new yi(), Q = ht.create(tt.getLocalizedText(1294, "Background Image Set"));
          if (D.click = T._top_Click, G.click = T._up_Click, U.click = T._down_Click, Y.click = T._bottom_Click, m.click = T._saveMenu_Click, p.click = T._publishMenu_Click, l.click = T._expand_Click, h.click = T._collapse_Click, u.click = T._copyMenu_Click, b.click = T._colorMenu_Click, _.click = T._deleteMenu_Click, s.click = T._renameMenu_Click, x.click = T._propertiesMenu_Click, k.click = T.scaleMenu_click, Q.click = T._defaultImageset_Click, S.click = T._opacityMenu_Click, P.click = T._lifeTimeMenu_Click, j.click = T._showViewer_Click, T._contextMenu.items.push(s), !a.get_opened() && a.getPrimaryUI() != null && a.getPrimaryUI().get_hasTreeViewNodes() && T._contextMenu.items.push(l), a.get_opened() && T._contextMenu.items.push(h), a.canCopyToClipboard(), T._contextMenu.items.push(_), T._contextMenu.items.push(K), T._contextMenu.items.push(b), n.canCast(t, si)) {
            T._contextMenu.items.push(Q);
            var J = n.safeCast(t, si);
            Q.checked = J.get_overrideDefaultLayer();
          }
          if ((n.canCast(t, ei) || n.canCast(t, Fn)) && T._contextMenu.items.push(x), n.canCast(t, Oi) && T._contextMenu.items.push(j), n.canCast(t, si)) {
            var J = n.safeCast(t, si);
            T._contextMenu.items.push(k);
          }
          T.get_allMaps()[a.get_referenceFrame()].layers.length > 1 && (T._contextMenu.items.push(I), T._contextMenu.items.push(D), T._contextMenu.items.push(G), T._contextMenu.items.push(U), T._contextMenu.items.push(Y)), T._contextMenu._show(lt.create(e, r));
        } else if (n.canCast(t, Xe)) {
          var nt = n.safeCast(t, Xe), W = nt.frame.reference.toString() === "Sandbox", ct = nt.frame.name === "Dome", rt = nt.frame.name === "Sky";
          if (ct)
            return;
          T._contextMenu = new pr();
          var kt = ht.create(tt.getLocalizedText(1298, "Track this frame")), At = ht.create(tt.getLocalizedText(1299, "Fly Here")), bt = ht.create("Show Orbit"), _t = ht.create(tt.getLocalizedText(674, "New Reference Frame")), $e = ht.create(tt.getLocalizedText(675, "New Layer Group")), je = ht.create(tt.getLocalizedText(166, "Add")), qe = ht.create("Add Light");
          ht.create(tt.getLocalizedText(956, "Add OData/table feed as Layer")), ht.create(tt.getLocalizedText(987, "New WMS Layer"));
          var me = ht.create(tt.getLocalizedText(1300, "New Lat/Lng Grid")), Ue = ht.create(tt.getLocalizedText(988, "New Great Circle"));
          ht.create(tt.getLocalizedText(989, "Import Orbital Elements"));
          var ue = ht.create(tt.getLocalizedText(1301, "Add Minor Planet")), oi = ht.create(tt.getLocalizedText(167, "Delete")), Xt = ht.create(tt.getLocalizedText(425, "Paste"));
          ht.create(tt.getLocalizedText(1290, "Add to Timeline")), ht.create(tt.getLocalizedText(1280, "Add Keyframe"));
          var li = ht.create(tt.getLocalizedText(20, "Properties")), m = ht.create(tt.getLocalizedText(990, "Save Layers"));
          ht.create(tt.getLocalizedText(991, "Publish Layers to Community"));
          var I = new yi(), Je = new yi(), K = new yi(), Lt = ht.create("As Reference Frame"), yt = ht.create("As Orbital Line");
          if (kt.click = T._trackFrame_Click, At.click = T._goTo_Click, Lt.click = T._addMpc_Click, yt.click = T._asOrbitalLines_Click, ue.dropDownItems.push(Lt), ue.dropDownItems.push(yt), je.click = T._addMenu_Click, $e.click = T._newLayerGroupMenu_Click, Xt.click = T._pasteLayer_Click, _t.click = T._newMenu_Click, oi.click = T._deleteFrameMenu_Click, li.click = T._framePropertiesMenu_Click, Ue.click = T._addGreatCircle_Click, me.click = T._addGirdLayer_Click, ht.create("Extract Orbit Layer"), nt.frame.reference !== 19) {
            if ((V.singleton.get_solarSystemMode() | V.singleton.sandboxMode) === 1) {
              var re = !1;
              if (nt.frame.reference !== 18 && !V.singleton.sandboxMode)
                try {
                  var Vt = nt.frame.reference.toString();
                  if (Vt !== "Sandbox") {
                    var Ui = Et.parse("SolarSystemObjects", Vt), Si = Ui, ri = Math.pow(2, Si);
                    bt.checked = !!(z.get_active().get_planetOrbitsFilter() & ri), bt.click = T._showOrbitPlanet_Click, bt.tag = ri.toString();
                  }
                } catch {
                }
              else
                !W && !rt && (T._contextMenu.items.push(kt), re = !0), bt.checked = nt.frame.showOrbitPath, bt.click = T._showOrbit_Click;
              re && T._contextMenu.items.push(K), !rt && !W && (T._contextMenu.items.push(bt), T._contextMenu.items.push(Je)), nt.frame.reference.toString() === "Sandbox" && T._contextMenu.items.push(qe);
            }
            rt || T._contextMenu.items.push(_t);
          }
          rt || (T._contextMenu.items.push(Ue), T._contextMenu.items.push(me)), (nt.frame.reference !== 19 && nt.frame.name === "Sun" || nt.frame.reference === 19 && nt.parent != null && nt.parent.frame.name === "Sun") && T._contextMenu.items.push(ue), nt.frame.reference === 18 && nt.frame.referenceFrameType === 1 && nt.parent != null && nt.parent.frame.name, T._contextMenu.items.push(Xt), nt.frame.reference === 19 && T._contextMenu.items.push(oi), nt.frame.reference === 18 && (T._contextMenu.items.push(oi), T._contextMenu.items.push(li)), T._contextMenu.items.push(I), T._contextMenu._show(lt.create(e, r));
        }
      }, T._publishMenu_Click = function(t, e) {
      }, T._addGirdLayer_Click = function(t, e) {
        var r = new Ga();
        r.enabled = !0, r.set_name("Lat-Lng Grid"), T.get_layerList()[r.id] = r, r.set_referenceFrame(T._currentMap), T.get_allMaps()[T._currentMap].layers.push(r), T.get_allMaps()[T._currentMap].open = !0, T._version++, T.loadTree();
      }, T._trackFrame_Click = function(t, e) {
        var r = T._selectedLayer;
        V.singleton.renderContext.set_solarSystemTrack(20), V.singleton.renderContext.set_trackingFrame(r.get_name()), V.singleton.renderContext.viewCamera.zoom = V.singleton.renderContext.targetCamera.zoom = 1e-9;
      }, T._goTo_Click = function(t, e) {
      }, T._saveMenu_Click = function(t, e) {
      }, T._expand_Click = function(t, e) {
      }, T._collapse_Click = function(t, e) {
      }, T._copyMenu_Click = function(t, e) {
        if (T._selectedLayer != null && n.canCast(T._selectedLayer, we)) {
          var r = T._selectedLayer;
          r.copyToClipboard();
        }
      }, T._newLayerGroupMenu_Click = function(t, e) {
      }, T._importTLEFile = function(t) {
      }, T._makeLayerGroupNow = function(t) {
        var e = T._selectedLayer;
        T._makeLayerGroup(t, e);
      }, T._makeLayerGroup = function(t, e) {
        var r = new ci();
        r.name = t, r.reference = 19;
        var a = new Xe(r.name, 19);
        a.frame = r, a.frame._systemGenerated = !1, e.addChild(a), a.frame.parent = e.get_name(), T.get_allMaps()[r.name] = a, T._version++;
      }, T._lifeTimeMenu_Click = function(t, e) {
      }, T._deleteFrameMenu_Click = function(t, e) {
      }, T._framePropertiesMenu_Click = function(t, e) {
        var r = T._selectedLayer;
        T.get_referenceFramePropsDialog().show(r.frame, e);
      }, T._newMenu_Click = function(t, e) {
        var r = new ci();
        T.get_frameWizardDialog().show(r, e);
      }, T.referenceFrameWizardFinished = function(t) {
        var e = T._selectedLayer, r = new Xe(t.name, 18);
        n.keyExists(T.get_allMaps(), t.name) || (r.frame = t, e.addChild(r), r.frame.parent = e.get_name(), T.get_allMaps()[t.name] = r, T._version++, T.loadTree());
      }, T.pasteFromTle = function(t, e) {
        for (var r = "", a = "", s = 0; s < t.length; s++)
          t[s] = n.trim(t[s]), t[s].length === 69 && ci.isTLECheckSumGood(t[s]) && (!r.length && t[s].substring(0, 1) === "1" && (r = t[s]), !a.length && t[s].substring(0, 1) === "2" && (a = t[s]));
        return r.length === 69 && a.length === 69 ? (e.fromTLE(r, a, 3986004418e5), !0) : !1;
      }, T._opacityMenu_Click = function(t, e) {
      }, T._defaultImageset_Click = function(t, e) {
        var r = n.safeCast(T._selectedLayer, si);
        r.set_overrideDefaultLayer(!r.get_overrideDefaultLayer());
      }, T._propertiesMenu_Click = function(t, e) {
        if (n.canCast(T._selectedLayer, ei)) {
          var r = T._selectedLayer;
          T.get_dataVizWizardDialog().show(r, e);
        }
        n.canCast(T._selectedLayer, Fn) && T.get_greatCircleDlg().show(T._selectedLayer, new n.EventArgs());
      }, T._renameMenu_Click = function(t, e) {
        var r = T._selectedLayer, a = new Nn(tt.getLocalizedText(225, "Rename"), tt.getLocalizedText(228, "New Name"), r.get_name());
        a.show(T._lastMenuClick, function() {
          n.emptyString(a.text) || (r.set_name(a.text), T._version++, T.loadTree());
        });
      }, T._colorMenu_Click = function(t, e) {
        var r = T._selectedLayer, a = new Va();
        r.get_color() != null && (a.color = r.get_color()), a.callBack = function() {
          r.set_color(a.color);
        }, a.show(e);
      }, T._addMenu_Click = function(t, e) {
      }, T._deleteMenu_Click = function(t, e) {
        T._deleteSelectedLayer();
      }, T._deleteSelectedLayer = function() {
        if (T._selectedLayer != null && n.canCast(T._selectedLayer, we)) {
          var t = T._selectedLayer;
          delete T.get_layerList()[t.id], n.remove(T.get_allMaps()[T.get_currentMap()].layers, t), t.cleanUp(), t.set_version(t.get_version() + 1) - 1, T.loadTree(), T._version++;
        }
      }, T.scaleMenu_click = function(t, e) {
        var r = n.safeCast(T._selectedLayer, si);
        if (r != null) {
          var a = new zr();
          a.image = r.getFitsImage(), a.layer = r, a.show(lt.create(200, 200));
        }
      }, T._showViewer_Click = function(t, e) {
        if (n.canCast(T._selectedLayer, Oi)) {
          var r = n.safeCast(T._selectedLayer, Oi);
          V.scriptInterface.displayVoTableLayer(r);
        }
      }, T._bottom_Click = function(t, e) {
        var r = n.safeCast(T._selectedLayer, we);
        r != null && (n.remove(T.get_allMaps()[r.get_referenceFrame()].layers, r), T.get_allMaps()[r.get_referenceFrame()].layers.push(r)), T._version++, T.loadTree();
      }, T._down_Click = function(t, e) {
        var r = n.safeCast(T._selectedLayer, we);
        if (r != null) {
          var a = T.get_allMaps()[r.get_referenceFrame()].layers.lastIndexOf(r);
          a < T.get_allMaps()[r.get_referenceFrame()].layers.length - 1 && (n.remove(T.get_allMaps()[r.get_referenceFrame()].layers, r), T.get_allMaps()[r.get_referenceFrame()].layers.splice(a + 1, 0, r));
        }
        T._version++, T.loadTree();
      }, T._up_Click = function(t, e) {
        var r = n.safeCast(T._selectedLayer, we);
        if (r != null) {
          var a = T.get_allMaps()[r.get_referenceFrame()].layers.lastIndexOf(r);
          a > 0 && (n.remove(T.get_allMaps()[r.get_referenceFrame()].layers, r), T.get_allMaps()[r.get_referenceFrame()].layers.splice(a - 1, 0, r));
        }
        T._version++, T.loadTree();
      }, T._top_Click = function(t, e) {
        var r = n.safeCast(T._selectedLayer, we);
        r != null && (n.remove(T.get_allMaps()[r.get_referenceFrame()].layers, r), T.get_allMaps()[r.get_referenceFrame()].layers.splice(0, 0, r)), T._version++, T.loadTree();
      }, T._pasteLayer_Click = function(t, e) {
        T.get_dataVizWizardDialog().show(T.get_currentMap(), e);
      }, T.createSpreadsheetLayer = function(t, e, r) {
        var a = new ei();
        return a.loadFromString(r, !1, !1, !1, !0), a.set_name(e), T.addSpreadsheetLayer(a, t), a;
      }, T.addSpreadsheetLayer = function(t, e) {
        t.enabled = !0, t.set_referenceFrame(e), T.add(t, !0);
      }, T._showOrbitPlanet_Click = function(t, e) {
        try {
          var r = parseInt(t.tag.toString());
          z.get_globalSettings().get_planetOrbitsFilter() & r ? z.get_globalSettings().set_planetOrbitsFilter(z.get_globalSettings().get_planetOrbitsFilter() & ~r) : z.get_globalSettings().set_planetOrbitsFilter(z.get_globalSettings().get_planetOrbitsFilter() | r);
        } catch {
        }
      }, T._showOrbit_Click = function(t, e) {
        var r = n.safeCast(T._selectedLayer, Xe);
        r.frame.showOrbitPath = !r.frame.showOrbitPath;
      }, T._addGreatCircle_Click = function(t, e) {
        T._addGreatCircleLayer();
      }, T._addMpc_Click = function(t, e) {
        var r = T._selectedLayer, a = new Nn(tt.getLocalizedText(1302, "Minor planet name or designation"), tt.getLocalizedText(238, "Name"), ""), s = !1;
        do
          if (a.showDialog() === 1)
            if (n.keyExists(r.childMaps, a.text))
              s = !0;
            else
              try {
                T._getMpc(a.text, r), s = !1;
              } catch {
                s = !0;
              }
          else
            s = !1;
        while (s);
      }, T._asOrbitalLines_Click = function(t, e) {
        var r = T._selectedLayer, a = new Nn(tt.getLocalizedText(1302, "Minor planet name or designation"), tt.getLocalizedText(238, "Name"), "");
        a.show(Ke.get_position(), function() {
          n.keyExists(r.childMaps, a.text) || T._getMpcAsTLE(a.text, r);
        });
      }, T._getMpcAsTLE = function(t, e) {
        var r = new Ai("https://www.minorplanetcenter.net/db_search/show_object?object_id=" + t);
        r.onStateChange = function() {
          if (r.get_state() === 1) {
            var a = r.getText(), s = a.indexOf("show-orbit-button"), l = a.indexOf("/form", s), h = a.substring(s, l), u = t, _ = new ci();
            _.oblateness = 0, _.showOrbitPath = !0, _.showAsPoint = !0, _.epoch = Z.utcToJulian(n.date(T._getValueByID(h, "epoch").substring(0, 10))), _.semiMajorAxis = parseFloat(T._getValueByID(h, "a")) * 149598e3 * 1e3, _.referenceFrameType = 1, _.inclination = parseFloat(T._getValueByID(h, "incl")), _.longitudeOfAscendingNode = parseFloat(T._getValueByID(h, "node")), _.eccentricity = parseFloat(T._getValueByID(h, "e")), _.meanAnomolyAtEpoch = parseFloat(T._getValueByID(h, "m")), _.meanDailyMotion = Fe.meanMotionFromSemiMajorAxis(parseFloat(T._getValueByID(h, "a"))), _.argumentOfPeriapsis = parseFloat(T._getValueByID(h, "peri")), _.scale = 1, _.semiMajorAxisUnits = 1, _.meanRadius = 10, _.oblateness = 0;
            var m = u + `
` + _.toTLE();
            T._loadOrbitsFile(t, m, e.get_name()), T.loadTree();
          }
        }, r.send();
      }, T._getMpc = function(t, e) {
        var r = new Ai("https://www.minorplanetcenter.net/db_search/show_object?object_id=" + t);
        r.onStateChange = function() {
          var a = r.getText(), s = a.indexOf("show-orbit-button"), l = a.indexOf("/form", s), h = a.substring(s, l), u = t, _ = new Xe(n.trim(u), 18);
          _.frame.oblateness = 0, _.frame.showOrbitPath = !0, _.frame.showAsPoint = !0, _.frame.epoch = Z.utcToJulian(n.date(T._getValueByID(h, "epoch").substring(0, 10))), _.frame.semiMajorAxis = parseFloat(T._getValueByID(h, "a")) * 149598e3 * 1e3, _.frame.referenceFrameType = 1, _.frame.inclination = parseFloat(T._getValueByID(h, "incl")), _.frame.longitudeOfAscendingNode = parseFloat(T._getValueByID(h, "node")), _.frame.eccentricity = parseFloat(T._getValueByID(h, "e")), _.frame.meanAnomolyAtEpoch = parseFloat(T._getValueByID(h, "m")), _.frame.meanDailyMotion = Fe.meanMotionFromSemiMajorAxis(parseFloat(T._getValueByID(h, "a"))), _.frame.argumentOfPeriapsis = parseFloat(T._getValueByID(h, "peri")), _.frame.scale = 1, _.frame.semiMajorAxisUnits = 1, _.frame.meanRadius = 10, _.frame.oblateness = 0, n.keyExists(T.get_allMaps()[e.get_name()].childMaps, n.trim(u)) || T.get_allMaps()[e.get_name()].addChild(_), T.get_allMaps()[_.get_name()] = _, _.frame.parent = e.get_name(), T._makeLayerGroup("Minor Planet", _), T.loadTree();
        };
      }, T._getValueByID = function(t, e) {
        var r = t.indexOf('id="' + e + '"');
        r = t.indexOf("value=", r) + 7;
        var a = t.indexOf('"', r);
        return t.substr(r, a - r);
      }, T._addGreatCircleLayer = function() {
        var t = new Fn(), e = V.singleton.renderContext.viewCamera;
        t.set_latStart(e.lat), t.set_latEnd(e.lat - 5), t.set_lngStart(e.lng), t.set_lngEnd(e.lng + 5), t.set_width(4), t.enabled = !0, t.set_name(tt.getLocalizedText(1144, "Great Circle Route")), T.get_layerList()[t.id] = t, t.set_referenceFrame(T._currentMap), T.get_allMaps()[T._currentMap].layers.push(t), T.get_allMaps()[T._currentMap].open = !0, T._version++, T.loadTree(), T.get_greatCircleDlg().show(t, new n.EventArgs());
      }, T._loadOrbitsFile = function(t, e, r) {
        var a = new Ha();
        return a.loadString(e), a.enabled = !0, a.set_name(t), T.get_layerList()[a.id] = a, a.set_referenceFrame(r), T.get_allMaps()[r].layers.push(a), T.get_allMaps()[r].open = !0, T._version++, T.loadTree(), a;
      };
      var Xu = {};
      function Xe(t, e) {
        this.childMaps = {}, this.parent = null, this.layers = [], this.open = !1, this.enabled = !0, this.loadedFromTour = !1, this.frame = new ci(), this.set_name(t), this.frame.reference = e;
        var r = 6371e3;
        switch (e) {
          case 0:
            break;
          case 1:
            break;
          case 2:
            break;
          case 3:
            r = 696e6;
            break;
          case 4:
            r = 2439700;
            break;
          case 5:
            r = 6051800;
            break;
          case 6:
            r = 6371e3;
            break;
          case 7:
            r = 339e4;
            break;
          case 8:
            r = 69911e3;
            break;
          case 9:
            r = 58232e3;
            break;
          case 10:
            r = 25362e3;
            break;
          case 11:
            r = 24622e3;
            break;
          case 12:
            r = 1161e3;
            break;
          case 13:
            r = 1737100;
            break;
          case 14:
            r = 1821500;
            break;
          case 15:
            r = 1561e3;
            break;
          case 16:
            r = 2631200;
            break;
          case 17:
            r = 2410300;
            break;
        }
        this.frame.meanRadius = r;
      }
      var qu = {
        addChild: function(t) {
          t.parent = this, this.childMaps[t.get_name()] = t;
        },
        get_name: function() {
          return this.frame.name;
        },
        set_name: function(t) {
          return this.frame.name = t, t;
        },
        computeFrame: function(t) {
          this.frame.reference === 18 && this.frame.computeFrame(t);
        },
        toString: function() {
          return this.get_name();
        }
      };
      function ms() {
      }
      var Yu = {};
      function Zu() {
      }
      var ju = {};
      function ps() {
      }
      var Ku = {};
      function Dr() {
      }
      var Ju = {
        get_hasTreeViewNodes: function() {
          return !1;
        },
        getTreeNodes: function() {
          return null;
        },
        getNodeContextMenu: function(t) {
          return null;
        },
        setUICallbacks: function(t) {
        }
      };
      function Wu() {
        this._tag = null, this._isChecked = !1, this._isEnabled = !0, this._subMenus = null;
      }
      var Qu = {
        get_name: function() {
          return this._name;
        },
        set_name: function(t) {
          return this._name = t, t;
        },
        get_tag: function() {
          return this._tag;
        },
        set_tag: function(t) {
          return this._tag = t, t;
        },
        get_checked: function() {
          return this._isChecked;
        },
        set_checked: function(t) {
          return this._isChecked = t, t;
        },
        get_enabled: function() {
          return this._isEnabled;
        },
        set_enabled: function(t) {
          return this._isEnabled = t, t;
        },
        add_menuItemSelected: function(t) {
          this.__menuItemSelected = n.bindAdd(this.__menuItemSelected, t);
        },
        remove_menuItemSelected: function(t) {
          this.__menuItemSelected = n.bindSub(this.__menuItemSelected, t);
        },
        fireMenuItemSelected: function() {
          this.__menuItemSelected != null && this.__menuItemSelected(this);
        },
        get_subMenus: function() {
          return this._subMenus == null && (this._subMenus = []), this._subMenus;
        }
      };
      function Zn() {
        this._parent = null, this._level = 0, this._open = !1, this._isChecked = !1, this._bold = !1, this._color = ot.get_white(), this._nodes = null;
      }
      var th = {
        add_nodeChecked: function(t) {
          this.__nodeChecked = n.bindAdd(this.__nodeChecked, t);
        },
        remove_nodeChecked: function(t) {
          this.__nodeChecked = n.bindSub(this.__nodeChecked, t);
        },
        fireNodeChecked: function(t) {
          this.__nodeChecked != null && this.__nodeChecked(this, t);
        },
        add_nodeUpdated: function(t) {
          this.__nodeUpdated = n.bindAdd(this.__nodeUpdated, t);
        },
        remove_nodeUpdated: function(t) {
          this.__nodeUpdated = n.bindSub(this.__nodeUpdated, t);
        },
        fireNodeUpdated: function() {
          this.__nodeUpdated != null && this.__nodeUpdated(this);
        },
        add_nodeSelected: function(t) {
          this.__nodeSelected = n.bindAdd(this.__nodeSelected, t);
        },
        remove_nodeSelected: function(t) {
          this.__nodeSelected = n.bindSub(this.__nodeSelected, t);
        },
        fireNodeSelected: function() {
          this.__nodeSelected != null && this.__nodeSelected(this);
        },
        add_nodeActivated: function(t) {
          this.__nodeActivated = n.bindAdd(this.__nodeActivated, t);
        },
        remove_nodeActivated: function(t) {
          this.__nodeActivated = n.bindSub(this.__nodeActivated, t);
        },
        fireNodeActivated: function() {
          this.__nodeActivated != null && this.__nodeActivated(this);
        },
        get_name: function() {
          return this._name;
        },
        set_name: function(t) {
          return this._name !== t && (this._name = t, this.fireNodeUpdated()), t;
        },
        get_parent: function() {
          return this._parent;
        },
        set_parent: function(t) {
          return this._parent = t, t;
        },
        get_level: function() {
          return this._level;
        },
        set_level: function(t) {
          return this._level = t, t;
        },
        get_tag: function() {
          return this._tag;
        },
        set_tag: function(t) {
          return this._tag = t, t;
        },
        get_referenceTag: function() {
          return this._referenceTag;
        },
        set_referenceTag: function(t) {
          return this._referenceTag = t, t;
        },
        get_opened: function() {
          return this._open;
        },
        set_opened: function(t) {
          return this._open !== t && (this._open = t, this.fireNodeUpdated()), t;
        },
        get_checked: function() {
          return this._isChecked;
        },
        set_checked: function(t) {
          return this._isChecked !== t && (this._isChecked = t, this.fireNodeUpdated()), t;
        },
        get_bold: function() {
          return this._bold;
        },
        set_bold: function(t) {
          return this._bold !== t && (this._bold = t, this.fireNodeUpdated()), t;
        },
        get_color: function() {
          return this._color;
        },
        set_color: function(t) {
          return this._color !== t && (this._color = t, this.fireNodeUpdated()), t;
        },
        add: function(t) {
          var e = new Zn();
          return e.set_name(t), e.set_parent(this), e.set_level(this.get_level() + 1), this.get_nodes().push(e), e;
        },
        get_nodes: function() {
          return this._nodes == null && (this._nodes = []), this._nodes;
        }
      };
      function $n() {
        this.startIndex = 0, this.indexCount = 0, this.materialIndex = 0;
      }
      var eh = {};
      function Nr() {
        this.boundingSphere = new cn();
      }
      Nr.create = function(t, e) {
        var r = new Nr();
        r.vertices = t, r.indices = e;
        for (var a = new Array(t.length), s = 0; s < t.length; ++s)
          a[s] = t[s].get_position();
        return r.boundingSphere = Rr.findEnclosingSphereFast(a), r;
      }, Nr.createTangent = function(t, e) {
        var r = new Nr();
        r.tangentVertices = t, r.indices = e;
        for (var a = new Array(r.tangentVertices.length), s = 0; s < r.tangentVertices.length; ++s)
          a[s] = r.tangentVertices[s].get_position();
        return r.boundingSphere = Rr.findEnclosingSphereFast(a), r;
      };
      var ih = {
        dispose: function() {
          this.vertexBuffer != null && (this.vertexBuffer.dispose(), this.vertexBuffer = null), this.tangentVertexBuffer != null && (this.tangentVertexBuffer.dispose(), this.tangentVertexBuffer = null), this.indexBuffer != null && (this.indexBuffer.dispose(), this.indexBuffer = null);
        },
        setObjects: function(t) {
          this._objects = t;
        },
        commitToDevice: function() {
          this.vertices != null ? this.vertexBuffer = ta.create(this.vertices) : this.tangentVertices != null && (this.tangentVertexBuffer = ea.create(this.tangentVertices)), this.indexBuffer = new fs(new Uint32Array(this.indices));
        },
        beginDrawing: function(t) {
          this.vertexBuffer != null ? t._setVertexBuffer(this.vertexBuffer) : this.tangentVertexBuffer != null && t._setVertexBuffer(this.tangentVertexBuffer), this.indexBuffer != null && t._setIndexBuffer(this.indexBuffer);
        },
        drawSubset: function(t, e) {
          this.indexBuffer == null || this._objects == null || this.drawHierarchy(this._objects, e, t, 0);
        },
        drawHierarchy: function(t, e, r, a) {
          if (!(a > 1212))
            for (var s = n.enumerate(t); s.moveNext(); ) {
              var l = s.current;
              if (l.drawGroup != null && l.enabled)
                for (var h = n.enumerate(l.drawGroup); h.moveNext(); ) {
                  var u = h.current;
                  u.materialIndex === e && r.gl.drawElements(4, u.indexCount, 5125, u.startIndex * 4);
                }
              this.drawHierarchy(l.children, e, r, a + 1);
            }
        },
        get_objects: function() {
          return this._objects;
        },
        set_objects: function(t) {
          return this._objects = t, t;
        }
      };
      function Ia() {
        this.index = 0;
      }
      var rh = {};
      function Ti(t, e, r, a, s, l) {
        this.flipHandedness = !1, this.flipV = !0, this.smooth = !0, this._mesh = null, this._meshMaterials = [], this._meshTextures = [], this._meshSpecularTextures = [], this._meshNormalMaps = [], this.meshFilenames = [], this.color = ot.get_white(), this._textureCache = {}, this._matFiles = new Array(0), this._matFileIndex = 0, this.objects = [], this._matLib = {}, this._textureLib = {}, this._tourDocument = null, this.issLayer = !1, this._readyToRender = !1, this.useCurrentAmbient = !1, this._dirty = !0, this.color = l, this.smooth = s, this.flipV = r, this.flipHandedness = a, this.filename = e, n.endsWith(this.filename.toLowerCase(), ".obj") ? this._loadMeshFromObj(t, this.filename) : this._loadMeshFrom3ds(t, this.filename, 1);
      }
      Ti._compareVector3 = function(t, e) {
        return t.x < e.x ? -1 : t.x > e.x ? 1 : t.y < e.y ? -1 : t.y > e.y ? 1 : t.z < e.z ? -1 : t.z > e.z ? 1 : 0;
      }, Ti._compareVector = function(t, e) {
        return t.x < e.x ? -1 : t.x > e.x ? 1 : t.y < e.y ? -1 : t.y > e.y ? 1 : 0;
      }, Ti._getMaterialID = function(t, e) {
        for (var r = 0, a = n.enumerate(e); a.moveNext(); ) {
          var s = a.current;
          if (s === t)
            return r;
          r++;
        }
        return -1;
      }, Ti._disposeTextureList = function(t) {
        if (t != null) {
          for (var e = 0; e < t.length; ++e)
            t[e] != null && (t[e].dispose(), t[e] = null);
          t.length = 0;
        }
      };
      var nh = {
        _reload: function() {
          this.issLayer || (this.dispose(), n.endsWith(this.filename.toLowerCase(), ".obj") ? this._loadMeshFromObj(this._tourDocument, this.filename) : this._loadMeshFrom3ds(this._tourDocument, this.filename, 1));
        },
        _calculateVertexNormalsMerged: function(t, e, r) {
          if (!t.length)
            return null;
          t.length;
          for (var a = Math.floor(e.length / 3), s = [], l = 0; l < t.length; ++l) {
            var h = new Ia();
            h.position = t[l].get_position(), h.index = l, s.push(h);
          }
          s.sort(function(At, bt) {
            return Ti._compareVector3(At.position, bt.position);
          });
          for (var u = new Array(s.length), _ = 0, l = 0; l < s.length; l++)
            (!l || Ti._compareVector3(s[l].position, s[l - 1].position)) && ++_, u[s[l].index] = _ - 1;
          for (var m = new Array(_), p = 0; p < _; p++)
            m[p] = 0;
          for (var b = n.enumerate(e); b.moveNext(); ) {
            var l = b.current, S = u[l];
            m[S]++;
          }
          for (var x = new Array(_), p = 0; p < _; ++p) {
            var k = m[p];
            if (k > 0) {
              x[p] = new Array(k);
              for (var P = 0; P < k; P++)
                x[p][P] = 0;
            }
          }
          for (var p = 0; p < e.length; ++p) {
            var I = Math.floor(p / 3), S = u[e[p]];
            x[S][--m[S]] = I;
          }
          for (var D = new Array(a), p = 0; p < a; ++p) {
            var G = e[p * 3 + 0], U = e[p * 3 + 1], Y = e[p * 3 + 2], j = L.subtractVectors(t[U].get_position(), t[G].get_position()), K = L.subtractVectors(t[Y].get_position(), t[U].get_position());
            D[p] = L.cross(j, K), D[p].normalize();
          }
          for (var Q = a * 3, J = new Array(Q), nt = Math.min(0.9999, Math.cos(r)), p = 0; p < Q; ++p) {
            for (var l = e[p], S = u[l], W = D[Math.floor(p / 3)], ct = new L(), rt = n.enumerate(x[S]); rt.moveNext(); ) {
              var I = rt.current, kt = D[I];
              L.dot(W, kt) > nt && ct.add(kt);
            }
            J[p] = ct, J[p].normalize();
          }
          return J;
        },
        _calculateVertexTangents: function(t, e, r) {
          if (!t.length)
            return null;
          t.length;
          for (var a = Math.floor(e.length / 3), s = [], l = 0; l < t.length; ++l) {
            var h = new Ia();
            h.position = t[l].get_position(), h.index = l, s.push(h);
          }
          s.sort(function(oi, Xt) {
            return Ti._compareVector3(oi.position, Xt.position);
          });
          for (var u = new Array(s.length), _ = 0, l = 0; l < s.length; l++)
            (!l || Ti._compareVector3(s[l].position, s[l - 1].position)) && ++_, u[s[l].index] = _ - 1;
          for (var m = new Array(_), p = 0; p < _; p++)
            m[p] = 0;
          for (var b = n.enumerate(e); b.moveNext(); ) {
            var l = b.current, S = u[l];
            m[S]++;
          }
          for (var x = new Array(_), p = 0; p < _; ++p) {
            var k = m[p];
            if (k > 0) {
              x[p] = new Array(k);
              for (var P = 0; P < k; P++)
                x[p][P] = 0;
            }
          }
          for (var p = 0; p < e.length; ++p) {
            var I = Math.floor(p / 3), S = u[e[p]];
            x[S][--m[S]] = I;
          }
          for (var D = new Array(a), p = 0; p < a; ++p) {
            var G = t[e[p * 3 + 0]], U = t[e[p * 3 + 1]], Y = t[e[p * 3 + 2]], j = L.subtractVectors(U.get_position(), G.get_position()), K = L.subtractVectors(Y.get_position(), G.get_position()), Q = U.tu - G.tu, J = U.tv - G.tv, nt = Y.tu - G.tu, W = Y.tv - G.tv, ct = Q * W - J * nt;
            if (Math.abs(ct) < 1e-6)
              j.lengthSq() > 0 ? (D[p] = j, D[p].normalize()) : D[p] = L.create(1, 0, 0);
            else {
              var rt = 1 / ct, kt = W * rt, At = -J * rt;
              D[p] = L.addVectors(L.multiplyScalar(j, kt), L.multiplyScalar(K, At)), D[p].normalize();
            }
          }
          for (var bt = a * 3, _t = new Array(bt), $e = Math.min(0.9999, Math.cos(r)), p = 0; p < bt; ++p) {
            for (var l = e[p], S = u[l], je = D[Math.floor(p / 3)], qe = new L(), me = n.enumerate(x[S]); me.moveNext(); ) {
              var I = me.current, Ue = D[I];
              L.dot(je, Ue) > $e && qe.add(Ue);
            }
            var ue = t[l].get_normal();
            _t[p] = L.subtractVectors(qe, L.multiplyScalar(ue, L.dot(ue, qe))), _t[p].normalize();
          }
          return _t;
        },
        _calculateVertexNormals: function(t, e, r) {
          for (var a = t.length, s = Math.floor(e.length / 3), l = new Array(a), h = n.enumerate(e); h.moveNext(); ) {
            var u = h.current;
            l[u]++;
          }
          for (var _ = new Array(a), m = 0; m < a; ++m) {
            var p = l[m];
            p > 0 && (_[m] = new Array(p));
          }
          for (var m = 0; m < e.length; ++m) {
            var b = Math.floor(m / 3), u = e[m];
            _[u][--l[u]] = b;
          }
          for (var S = new Array(s), m = 0; m < s; ++m) {
            var x = e[m * 3 + 0], k = e[m * 3 + 1], P = e[m * 3 + 2], I = L.subtractVectors(t[k].get_position(), t[x].get_position()), D = L.subtractVectors(t[P].get_position(), t[k].get_position());
            S[m] = L.cross(I, D), S[m].normalize();
          }
          for (var G = s * 3, U = new Array(G), Y = Math.min(0.9999, Math.cos(r)), m = 0; m < G; ++m) {
            for (var u = e[m], j = S[Math.floor(m / 3)], K = new L(), Q = n.enumerate(_[u]); Q.moveNext(); ) {
              var b = Q.current, J = S[b];
              L.dot(j, J) > Y && K.add(J);
            }
            U[m] = K, U[m].normalize();
          }
          return U;
        },
        _addMaterial: function(t) {
          for (this._meshMaterials.push(t); this._meshTextures.length < this._meshMaterials.length; )
            this._meshTextures.push(null);
          for (; this._meshSpecularTextures.length < this._meshMaterials.length; )
            this._meshSpecularTextures.push(null);
          for (; this._meshNormalMaps.length < this._meshMaterials.length; )
            this._meshNormalMaps.push(null);
        },
        _loadColorChunk: function(t) {
          var e = t.readUInt16(), r = t.readUInt32(), a = ot.get_black();
          if ((e === 16 || e === 19) && r === 18) {
            var s = Math.max(0, Math.min(1, t.readSingle())), l = Math.max(0, Math.min(1, t.readSingle())), h = Math.max(0, Math.min(1, t.readSingle()));
            a = B.fromArgb(255, n.truncate(255 * s), n.truncate(255 * l), n.truncate(255 * h));
          } else
            (e === 17 || e === 18) && r === 9 ? a = B.fromArgb(255, t.readByte(), t.readByte(), t.readByte()) : t.readBytes(r - 6);
          return a;
        },
        _loadPercentageChunk: function(t) {
          var e = t.readUInt16(), r = t.readUInt32(), a = 0;
          return e === 48 && r === 8 ? a = t.readUInt16() : e === 49 && r === 10 ? a = t.readSingle() : t.readBytes(r - 6), a;
        },
        _loadMeshFromObj: function(t, e) {
          var r = this;
          this.filename = e, this._tourDocument = t;
          var a = t.getFileBlob(e), s = new FileReader();
          s.onloadend = function(l) {
            r._matFiles = r._readObjMaterialsFromBin(n.safeCast(s.result, String)), r._matFileIndex = 0, r._loadMatLib(n.safeCast(s.result, String));
          }, s.readAsText(a);
        },
        _readObjMaterialsFromBin: function(t) {
          for (var e = [], r = t.split(`
`), a = n.enumerate(r); a.moveNext(); ) {
            var s = a.current, l = n.replaceString(s, "  ", " "), h = n.trim(l).split(" ");
            if (h.length > 0)
              switch (h[0]) {
                case "mtllib":
                  var u = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1), _ = u + h[1];
                  e.push(_);
                  break;
              }
          }
          return e;
        },
        _readObjFromBin: function(t) {
          var e = !1, r = [], a = new Xr();
          a.name = "Default";
          var s = [], l = [], h = [], u = [];
          l.push(new L()), h.push(new L()), u.push(new lt());
          var _ = [], m = -1, p = new Yr(), b = new $n(), S = 0;
          p = new Yr(), p.diffuse = this.color, p.ambient = this.color, p.specular = ot.get_white(), p.specularSharpness = 30, p.opacity = 1, p.isDefault = !0, b.startIndex = 0, b.indexCount = 0, b.materialIndex = 0;
          for (var x = t.split(`
`), k = n.enumerate(x); k.moveNext(); ) {
            var P = k.current, I = n.replaceString(P, "  ", " "), D = n.trim(I).split(" ");
            if (D.length > 0)
              switch (D[0]) {
                case "mtllib":
                  break;
                case "usemtl":
                  var G = D[1];
                  if (n.keyExists(this._matLib, G) && (m === -1 && S > 0 && (this._addMaterial(p), m++), m > -1 && (b.indexCount = S - b.startIndex, a.drawGroup.push(b)), m++, n.keyExists(this._matLib, G))) {
                    if (p = this._matLib[G], n.keyExists(this._textureLib, G))
                      try {
                        if (!n.keyExists(this._textureCache, this._textureLib[G])) {
                          var U = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1), Y = this._tourDocument.getCachedTexture2d(U + this._textureLib[G]);
                          Y != null && (this.meshFilenames.push(this._textureLib[G]), this._textureCache[this._textureLib[G]] = Y);
                        }
                        this._meshTextures.push(this._textureCache[this._textureLib[G]]);
                      } catch {
                      }
                    this._addMaterial(p), b = new $n(), b.startIndex = S, b.indexCount = 0, b.materialIndex = m;
                  }
                  break;
                case "v":
                  this.flipHandedness ? l.push(L.create(-parseFloat(D[1]), parseFloat(D[2]), parseFloat(D[3]))) : l.push(L.create(parseFloat(D[1]), parseFloat(D[2]), parseFloat(D[3])));
                  break;
                case "vn":
                  this.flipHandedness ? h.push(L.create(-parseFloat(D[1]), parseFloat(D[2]), parseFloat(D[3]))) : h.push(L.create(parseFloat(D[1]), parseFloat(D[2]), parseFloat(D[3])));
                  break;
                case "vt":
                  u.push(lt.create(parseFloat(D[1]), this.flipV ? 1 - parseFloat(D[2]) : parseFloat(D[2])));
                  break;
                case "g":
                case "o":
                  e && (m > -1 && (b.indexCount = S - b.startIndex, a.drawGroup.push(b), b = new $n(), b.startIndex = S, b.indexCount = 0, b.materialIndex = m), a = new Xr()), e = !0, D.length > 1 ? a.name = D[1] : a.name = "Unnamed", r.push(a);
                  break;
                case "f":
                  var j = this._getIndexies(D[1]), K = this._getIndexies(D[2]), Q = this._getIndexies(D[3]);
                  if (s.push(Di.createUV(l[j[0]], h[j[2]], u[j[1]])), s.push(Di.createUV(l[K[0]], h[K[2]], u[K[1]])), s.push(Di.createUV(l[Q[0]], h[Q[2]], u[Q[1]])), this.flipHandedness ? (_.push(S), _.push(S + 2), _.push(S + 1)) : (_.push(S), _.push(S + 1), _.push(S + 2)), S += 3, D.length > 4)
                    for (var J = 4; J < D.length; )
                      this.flipHandedness ? (j = this._getIndexies(D[1]), Q = this._getIndexies(D[J]), K = this._getIndexies(D[J - 1])) : (j = this._getIndexies(D[1]), K = this._getIndexies(D[J - 1]), Q = this._getIndexies(D[J])), s.push(Di.createUV(l[j[0]], h[j[2]], u[j[1]])), s.push(Di.createUV(l[K[0]], h[K[2]], u[K[1]])), s.push(Di.createUV(l[Q[0]], h[Q[2]], u[Q[1]])), _.push(S), _.push(S + 1), _.push(S + 2), S += 3, J++;
                  break;
              }
          }
          if (e || r.push(a), m === -1 && S > 0 && (this._addMaterial(p), m++), m > -1 && (b.indexCount = S - b.startIndex, a.drawGroup.push(b)), h.length < 2) {
            for (var nt = Math.PI / 180, W = this.smooth ? 170 * nt : 45 * nt, ct = this._calculateVertexNormalsMerged(s, _, W), rt = [], kt = _.length, At = 0; At < kt; ++At) {
              var bt = s[_[At]];
              bt.set_normal(ct[At]), rt.push(bt);
            }
            s = rt;
          }
          this._mesh = Nr.create(s, _);
          var _t = new Xr();
          _t.name = "Root", _t.parent = null, _t.level = -1, _t.drawGroup = null, _t.children = r, this.objects = [], this.objects.push(_t), this._mesh.setObjects(this.objects), this._mesh.commitToDevice(), this._dirty = !1, this._readyToRender = !0;
        },
        _loadMatLib: function(t) {
          var e = this;
          if (this._matFileIndex < this._matFiles.length) {
            var r = this._matFiles[this._matFileIndex++], a = this._tourDocument.getFileBlob(r), s = new FileReader();
            s.onloadend = function(l) {
              e._readMatLibFromBin(n.safeCast(s.result, String)), e._loadMatLib(t);
            }, s.readAsText(a);
          } else
            this._readObjFromBin(t);
        },
        _readMatLibFromBin: function(t) {
          try {
            var e = new Yr(), r = "";
            this._matLib = {}, this._textureLib = {};
            for (var a = t.split(`
`), s = n.enumerate(a); s.moveNext(); ) {
              var l = s.current, h = l, u = n.trim(h).split(" ");
              if (u.length > 0)
                switch (u[0]) {
                  case "newmtl":
                    n.emptyString(r) || (this._matLib[r] = e), e = new Yr(), e.diffuse = ot.get_white(), e.ambient = ot.get_white(), e.specular = ot.get_black(), e.specularSharpness = 30, e.opacity = 1, r = u[1];
                    break;
                  case "Ka":
                    e.ambient = B.fromArgb(255, Math.min(parseFloat(u[1]) * 255, 255), Math.min(parseFloat(u[2]) * 255, 255), Math.min(parseFloat(u[3]) * 255, 255));
                    break;
                  case "map_Kd":
                    e.diffuse = ot.get_white();
                    for (var _ = u[1], m = 2; m < u.length; m++)
                      _ += " " + u[m];
                    var p = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                    _ = n.replaceString(_, "/", "\\"), _.indexOf("\\") !== -1 && (_ = _.substring(_.lastIndexOf("\\") + 1)), this._textureLib[r] = _;
                    break;
                  case "Kd":
                    e.diffuse = B.fromArgb(255, Math.min(parseFloat(u[1]) * 255, 255), Math.min(parseFloat(u[2]) * 255, 255), Math.min(parseFloat(u[3]) * 255, 255));
                    break;
                  case "Ks":
                    e.specular = B.fromArgb(255, Math.min(parseFloat(u[1]) * 255, 255), Math.min(parseFloat(u[2]) * 255, 255), Math.min(parseFloat(u[3]) * 255, 255));
                    break;
                  case "d":
                    e.opacity = parseFloat(u[1]);
                    break;
                  case "Tr":
                    e.opacity = 1 - parseFloat(u[1]);
                    break;
                  case "illum":
                    var b = parseInt(u[1]);
                    break;
                  case "sharpness":
                    e.specularSharpness = parseFloat(u[1]);
                    break;
                  case "Ns":
                    e.specularSharpness = 1 + 2 * parseFloat(u[1]), e.specularSharpness = Math.max(10, e.specularSharpness);
                    break;
                }
            }
            n.emptyString(r) || (this._matLib[r] = e);
          } catch {
          }
        },
        _getIndexies: function(t) {
          var e = n.trim(t).split("/"), r = new Array(3);
          return n.emptyString(t) || (e.length > 0 && (r[0] = parseInt(e[0])), e.length > 1 && (n.emptyString(e[1]) ? r[1] = 0 : r[1] = parseInt(e[1])), e.length > 2 && (r[2] = parseInt(e[2]))), r;
        },
        _loadMeshFrom3ds: function(t, e, r) {
          var a = this;
          this._tourDocument = t;
          var s = t.getFileBlob(e), l = new FileReader();
          l.onloadend = function(h) {
            a._read3dsFromBin(new Kr(new Uint8Array(l.result)), r);
          }, l.readAsArrayBuffer(s);
        },
        _read3dsFromBin: function(t, e) {
          for (var r, a, s, l = "", h = "", u = 0, _ = 0, m = [], p = [], b = [], S = -1, x = new Yr(), k = 0, P = 0, I = !1, D = !1, G = 0, U = 0, Y = 0, j = [], K = null, Q = [], J = [], nt = {}, W = t.get_length() - 1, ct = 0, rt = 0; t.get_position() < W && !I; )
            switch (a = t.readUInt16(), s = t.readUInt32(), a) {
              case 19789:
                break;
              case 15677:
                break;
              case 16384:
                l = "";
                var kt;
                do
                  kt = t.readByte(), kt > 0 && (l += String.fromCharCode(kt));
                while (kt);
                K = new Xr(), K.name = l, j.push(K), n.keyExists(nt, K.name) || (nt[K.name] = K);
                break;
              case 16640:
                ct = m.length, rt = Math.floor(p.length / 3);
                break;
              case 16656:
                for (_ = t.readUInt16(), r = 0; r < _; r++) {
                  var At = t.readSingle() - G, bt = t.readSingle() - U, _t = t.readSingle() - Y, $e = Di._create(At * e, _t * e, bt * e, 0, 0, 0, 0, 0);
                  m.push($e);
                }
                break;
              case 16672:
                var Ue = t.readUInt16();
                for (u += Ue, r = 0; r < Ue; r++) {
                  var je = t.readUInt16() + ct, qe = t.readUInt16() + ct, me = t.readUInt16() + ct;
                  p.push(me), p.push(qe), p.push(je), t.readUInt16();
                }
                break;
              case 16688:
                h = "", r = 0;
                var ri;
                do
                  ri = t.readByte(), ri > 0 && (h += String.fromCharCode(ri)), r++;
                while (ri);
                var Ue = t.readUInt16(), ue = new Array(Ue);
                for (k = Ti._getMaterialID(h, b), r = 0; r < Ue; r++)
                  ue[r] = t.readUInt16() + rt;
                K.applyLists.push(ue), K.applyListsIndex.push(k);
                break;
              case 16704:
                for (P = t.readUInt16(), r = 0; r < P; r++) {
                  var $e = m[ct + r], oi = lt.create(t.readSingle(), this.flipV ? 1 - t.readSingle() : t.readSingle());
                  m[ct + r] = Di.createUV($e.get_position(), new L(), oi);
                }
                break;
              case 16736:
                var Xt = new Array(12);
                for (r = 0; r < 12; r++)
                  Xt[r] = t.readSingle();
                n.keyExists(nt, l) && (nt[l].localMat = H.create(Xt[0], Xt[1], Xt[2], 0, Xt[3], Xt[4], Xt[5], 0, Xt[6], Xt[7], Xt[8], 0, Xt[9], Xt[10], Xt[11], 1), nt[l].localMat.invert());
                break;
              case 45055:
                break;
              case 40960:
                var li = "";
                r = 0;
                var re;
                do
                  re = t.readByte(), re > 0 && (li += String.fromCharCode(re)), r++;
                while (re);
                b.push(li), S > -1 && this._addMaterial(x), S++, x = new Yr(), x.diffuse = ot.get_white(), x.ambient = ot.get_white(), x.specular = ot.get_black(), x.specularSharpness = 30, x.opacity = 1;
                break;
              case 40976:
                x.ambient = this._loadColorChunk(t);
                break;
              case 40992:
                x.diffuse = this._loadColorChunk(t);
                break;
              case 41008:
                x.specular = this._loadColorChunk(t);
                break;
              case 41024:
                x.specularSharpness = 1 + 2 * this._loadPercentageChunk(t), x.specularSharpness = Math.max(10, x.specularSharpness);
                break;
              case 41472:
                break;
              case 41728:
                var yt = "";
                r = 0;
                var re;
                do
                  re = t.readByte(), re > 0 && (yt += String.fromCharCode(re)), r++;
                while (re);
                var Vt = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                try {
                  var Je = this._tourDocument.getCachedTexture2d(Vt + yt);
                  Je != null ? (this._meshTextures.push(Je), this.meshFilenames.push(yt), x.diffuse = ot.get_white()) : this._meshTextures.push(null);
                } catch {
                  this._meshTextures.push(null);
                }
                break;
              case 41520:
                this._loadPercentageChunk(t), t.readUInt16(), t.readUInt32();
                var yt = "";
                r = 0;
                var re;
                do
                  re = t.readByte(), re > 0 && (yt += String.fromCharCode(re)), r++;
                while (re);
                var Vt = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                try {
                  var Je = this._tourDocument.getCachedTexture2d(Vt + yt);
                  Je != null ? (this._meshNormalMaps.push(Je), this.meshFilenames.push(yt), D = !0) : this._meshNormalMaps.push(null);
                } catch {
                  this._meshNormalMaps.push(null);
                }
                break;
              case 41476:
                var Lt = this._loadPercentageChunk(t);
                t.readUInt16(), t.readUInt32();
                var yt = "";
                r = 0;
                var re;
                do
                  re = t.readByte(), re > 0 && (yt += String.fromCharCode(re)), r++;
                while (re);
                var Vt = this.filename.substring(0, this.filename.lastIndexOf("\\") + 1);
                try {
                  var Je = this._tourDocument.getCachedTexture2d(Vt + yt);
                  if (Je != null) {
                    this._meshSpecularTextures.push(Je), this.meshFilenames.push(yt);
                    var Ui = n.truncate(255.99 * Lt / 100);
                    x.specular = B.fromArgb(255, Ui, Ui, Ui);
                  } else
                    this._meshSpecularTextures.push(null);
                } catch {
                  this._meshSpecularTextures.push(null);
                }
                break;
              case 45056:
                break;
              case 45058:
                break;
              case 45072:
                l = "", r = 0;
                var ri;
                do
                  ri = t.readByte(), ri > 0 && (l += String.fromCharCode(ri)), r++;
                while (ri);
                t.readUInt16(), t.readUInt16();
                var Si = t.readUInt16();
                Si === 65535 && (Si = -1), n.startsWith(l, "$") || J.push(l), Q.push(Si), n.keyExists(nt, l) && (nt[l].level = Si);
                break;
              case 45073:
                l = "", r = 0;
                var ri;
                do
                  ri = t.readByte(), ri > 0 && (l += String.fromCharCode(ri)), r++;
                while (ri);
                J.push("$$$" + l);
                break;
              case 45075:
                var Ar = new Array(3);
                for (r = 0; r < 3; r++)
                  Ar[r] = t.readSingle();
                n.keyExists(nt, l) && (nt[l].pivotPoint = L.create(-Ar[0], -Ar[1], -Ar[2]));
                break;
              case 45088:
                var Ri = new Array(8);
                for (r = 0; r < 8; r++)
                  Ri[r] = t.readSingle();
                break;
              default:
                t.seekRelative(s - 6);
                break;
            }
          t.close(), S > -1 && this._addMaterial(x);
          for (var ki = Math.PI / 180, ui = this.smooth ? 70 * ki : 45 * ki, $i = this._calculateVertexNormalsMerged(m, p, ui), Ki = [], kr = u * 3, zi = 0; zi < kr; ++zi) {
            var Bi = m[p[zi]];
            Bi.set_normal($i[zi]), Ki.push(Bi);
          }
          for (var vr = [], Br = n.enumerate(j); Br.moveNext(); ) {
            var wr = Br.current, oa = [];
            for (r = 0; r < wr.applyLists.length; r++) {
              for (var tn = wr.applyListsIndex[r], ja = vr.length, la = n.enumerate(wr.applyLists[r]); la.moveNext(); ) {
                var Bn = la.current;
                vr.push(Bn * 3), vr.push(Bn * 3 + 1), vr.push(Bn * 3 + 2);
              }
              var yn = new $n();
              yn.startIndex = ja, yn.indexCount = wr.applyLists[r].length * 3, yn.materialIndex = tn, oa.push(yn);
            }
            wr.drawGroup = oa;
          }
          var br = new n.Stack(), Vn = [], yr = new Xr();
          yr.name = "Root", yr.parent = null, yr.level = -1, yr.drawGroup = null;
          var Sn = -1;
          for (br.push(yr), Vn.push(yr), r = 0; r < Q.length; r++) {
            var Si = Q[r];
            if (Si <= Sn) {
              for (; Si <= br.peek().level && br.count > 1; )
                br.pop();
              Sn = Si;
            }
            if (n.startsWith(J[r], "$$$")) {
              var Ir = new Xr();
              Ir.name = n.replaceString(J[r], "$$$", ""), Ir.parent = br.peek(), Ir.parent.children.push(Ir), Ir.level = Sn = Si, Ir.drawGroup = null, br.push(Ir);
            } else
              nt[J[r]].level = Sn = Si, nt[J[r]].parent = br.peek(), nt[J[r]].parent.children.push(nt[J[r]]), br.push(nt[J[r]]);
          }
          if (!Q.length)
            for (var ua = n.enumerate(j); ua.moveNext(); ) {
              var wr = ua.current;
              yr.children.push(wr), wr.parent = yr;
            }
          if (D) {
            for (var ha = [], On = 0; On < kr; ++On)
              ha.push(On);
            for (var Ka = this._calculateVertexTangents(Ki, ha, ui), ca = new Array(Ki.length), zi = 0, _a = n.enumerate(Ki); _a.moveNext(); ) {
              var Bi = _a.current, en = new cs(Bi.get_position(), Bi.get_normal(), lt.create(Bi.tu, Bi.tv), Ka[zi]);
              ca[zi] = en, ++zi;
            }
            this._mesh = Nr.createTangent(ca, vr);
          } else
            this._mesh = Nr.create(Ki, vr);
          this.objects = Vn, this._mesh.setObjects(Vn), this._mesh.commitToDevice(), this._dirty = !1, this._readyToRender = !0;
        },
        _offsetObjects: function(t, e, r, a) {
          for (var s = n.enumerate(e); s.moveNext(); ) {
            var l = s.current, h = l.localMat;
            this._offsetObjects(t, l.children, h, L.addVectors(l.pivotPoint, a));
            for (var u = n.enumerate(l.drawGroup); u.moveNext(); )
              for (var _ = u.current, m = _.startIndex + _.indexCount, p = _.startIndex; p < m; p++) {
                var b = t[p];
                b.set_position(L.addVectors(b.get_position(), L.addVectors(l.pivotPoint, a))), t[p] = b;
              }
          }
        },
        setupLighting: function(t) {
          var e = L.create(t.get_world().get_offsetX(), t.get_world().get_offsetY(), t.get_world().get_offsetZ()), r = L.subtractVectors(e, t.get_reflectedLightPosition()), a = L.subtractVectors(t.get_sunPosition(), t.get_reflectedLightPosition()), s = a.length() <= 0 ? 1 : L.dot(r, a) / (r.length() * a.length()), l = Math.max(0, s);
          l = Math.sqrt(l);
          var h = 0, u = 1;
          if (t.get_occludingPlanetRadius() > 0) {
            var _ = L.subtractVectors(e, t.get_occludingPlanetPosition()).length() - t.get_occludingPlanetRadius();
            h = Math.max(0, Math.min(1, 1 - _ / t.get_occludingPlanetRadius() * 300)), l *= 1 - h;
            var m = L.subtractVectors(t.get_occludingPlanetPosition(), t.get_sunPosition()), p = L.subtractVectors(t.get_occludingPlanetPosition(), e), b = L.create(-p.x, -p.y, -p.z);
            b.normalize(), t.set_hemisphereLightUp(b);
            var S = L.subtractVectors(t.get_sunPosition(), e), x = m.length(), k = -L.dot(S, m) / (x * x);
            if (k > 1) {
              var P = L.addVectors(t.get_sunPosition(), L.multiplyScalar(m, k)), I = L.subtractVectors(P, e).length();
              L.subtractVectors(P, t.get_sunPosition()).length();
              var D = 4645784e-9, G = t.get_occludingPlanetRadius() + (k - 1) * (t.get_occludingPlanetRadius() + D), U = t.get_occludingPlanetRadius() + (k - 1) * (t.get_occludingPlanetRadius() - D);
              if (I < G) {
                var Y = 0;
                if (U < 0) {
                  var j = Math.pow(1 / (1 - U), 2);
                  U = 0, Y = 1 - j;
                }
                var K = Math.max(0, U);
                u = Math.max(Y, (I - K) / (G - K));
                var Q = n.truncate(255.99 * u);
                t.set_sunlightColor(B.fromArgb(255, Q, Q, Q)), h *= u;
              }
            }
          }
          t.set_reflectedLightColor(B.fromArgb(255, n.truncate(t.get_reflectedLightColor().r * l), n.truncate(t.get_reflectedLightColor().g * l), n.truncate(t.get_reflectedLightColor().b * l))), t.set_hemisphereLightColor(B.fromArgb(255, n.truncate(t.get_hemisphereLightColor().r * h), n.truncate(t.get_hemisphereLightColor().g * h), n.truncate(t.get_hemisphereLightColor().b * h)));
        },
        render: function(t, e) {
          if (this._readyToRender) {
            this._dirty && !this.issLayer && this._reload();
            var r = t.get_world(), a = this._mesh.boundingSphere.center, s = 1;
            this._mesh.boundingSphere.radius > 0 && (s = 1 / this._mesh.boundingSphere.radius), t.set_world(H.multiplyMatrix(H.multiplyMatrix(H.translation(L.create(-a.x, -a.y, -a.z)), H._scaling(s, s, s)), r));
            var l = H.multiplyMatrix(t.get_world(), t.get_view()), h = l.transform(L.get_empty()), u = Math.sqrt(l.get_m11() * l.get_m11() + l.get_m22() * l.get_m22() + l.get_m33() * l.get_m33()) / s, _ = h.length(), m = u, p = n.truncate(t.height), b = t.get_projection().get_m11(), S = t.get_projection().get_m34(), x = t.get_projection().get_m44(), k = Math.abs(S) * _ + x, P = b / k * p, I = m * P;
            if (!(I < 0.5)) {
              var D = t.get_sunlightColor(), G = t.get_reflectedLightColor(), U = t.get_hemisphereLightColor();
              if (z.get_current().get_solarSystemLighting() ? (this.setupLighting(t), this.useCurrentAmbient || t.set_ambientLightColor(B.fromArgb(255, 11, 11, 11))) : (t.set_sunlightColor(ot.get_black()), t.set_reflectedLightColor(ot.get_black()), t.set_hemisphereLightColor(ot.get_black()), t.set_ambientLightColor(ot.get_white())), this._mesh != null) {
                xt.minLightingBrightness = 0.1;
                var Y = this._meshMaterials.length;
                if (this._mesh.beginDrawing(t), Y > 0)
                  for (var j = 0; j < this._meshMaterials.length; j++) {
                    if (this._meshMaterials[j].isDefault) {
                      var K = this._meshMaterials[j];
                      K.diffuse = this.color, K.ambient = this.color, this._meshMaterials[j] = K;
                    }
                    t.setMaterial(this._meshMaterials[j], this._meshTextures[j], this._meshSpecularTextures[j], this._meshNormalMaps[j], e), this._mesh.vertexBuffer != null ? xt.use(t, this._mesh.vertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[j] != null ? this._meshTextures[j].texture2d : null, e, !1, 32) : xt.use(t, this._mesh.tangentVertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[j] != null ? this._meshTextures[j].texture2d : null, e, !1, 44), t.preDraw(), this._mesh.drawSubset(t, j);
                  }
                else {
                  t.preDraw();
                  for (var j = 0; j < this._meshTextures.length; j++)
                    this._meshTextures[j] != null && (t.set_mainTexture(this._meshTextures[j]), this._mesh.vertexBuffer != null ? xt.use(t, this._mesh.vertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[j] != null ? this._meshTextures[j].texture2d : null, e, !1, 32) : xt.use(t, this._mesh.tangentVertexBuffer.vertexBuffer, this._mesh.indexBuffer.buffer, this._meshTextures[j] != null ? this._meshTextures[j].texture2d : null, e, !1, 44)), t.preDraw(), this._mesh.drawSubset(t, j);
                }
                t.set_world(r), t.set_sunlightColor(D), t.set_reflectedLightColor(G), t.set_hemisphereLightColor(U), t.set_ambientLightColor(ot.get_black());
              }
            }
          }
        },
        dispose: function() {
          this._mesh != null && (this._mesh.dispose(), this._mesh = null);
          for (var t = n.enumerate(n.keys(this._textureCache)); t.moveNext(); ) {
            var e = t.current, r = this._textureCache[e];
            r != null && r.dispose();
          }
          n.clearKeys(this._textureCache), Ti._disposeTextureList(this._meshTextures), Ti._disposeTextureList(this._meshSpecularTextures), Ti._disposeTextureList(this._meshNormalMaps), this._meshMaterials.length = 0, this._dirty = !0;
        }
      };
      function Xr() {
        this.level = -1, this.children = [], this.enabled = !0, this.drawGroup = [], this.applyLists = [], this.applyListsIndex = [];
      }
      var ah = {};
      function dn(t, e, r, a, s) {
        this._elements = null, this._orbitColor = ot.get_white(), this._scale = 0, this._segmentCount = 0, this._elements = t, this._segmentCount = e, this._orbitColor = r, this._scale = s;
      }
      var sh = {
        cleanUp: function() {
        },
        get_boundingRadius: function() {
          return this._elements != null ? this._elements.a * (1 + this._elements.e) / this._scale : 0;
        },
        draw3D: function(t, e, r) {
          var a = H.multiplyMatrix(H._rotationZ(R.degreesToRadians(this._elements.w)), H.multiplyMatrix(H._rotationX(R.degreesToRadians(this._elements.i)), H._rotationZ(R.degreesToRadians(this._elements.omega))));
          a = H.multiplyMatrix(a, dn._orbitalToWwt);
          var s = H.multiplyMatrix(H.multiplyMatrix(a, H.translation(r)), t.get_world()), l = this._elements.n * (Z.get_jNow() - this._elements.t), h = 1;
          l < 0 && (h = -1), l = Math.abs(l) / 360, l = (l - n.truncate(l)) * 360 * h;
          var u = B._fromArgbColor(n.truncate(e * 255), this._orbitColor);
          l = R.degreesToRadians(l);
          for (var _ = l, m = 0; m < 5; m++)
            _ += (l - _ + this._elements.e * Math.sin(_)) / (1 - this._elements.e * Math.cos(_));
          hi.drawEllipse(t, this._elements.a / this._scale, this._elements.e, _, u, s);
        }
      };
      function hi() {
      }
      hi.drawEllipseWithPosition = function(t, e, r, a, s, l, h) {
        hi._ellipseShader == null && (hi._ellipseShader = new Ht()), hi._ellipseVertexBuffer == null && (hi._ellipseVertexBuffer = hi.createEllipseVertexBuffer(500));
        var u = t.get_world();
        t.set_world(l), t.gl.bindBuffer(34962, hi._ellipseVertexBuffer.vertexBuffer), t.gl.bindBuffer(34963, null), Ht.use(t, e, r, a, s, 1, u, h), t.gl.drawArrays(3, 0, hi._ellipseVertexBuffer.count), t.set_world(u);
      }, hi.drawEllipse = function(t, e, r, a, s, l) {
        hi._ellipseShader == null && (hi._ellipseShader = new Ht()), hi._ellipseWithoutStartPointVertexBuffer == null && (hi._ellipseWithoutStartPointVertexBuffer = hi.createEllipseVertexBufferWithoutStartPoint(360));
        var h = t.get_world();
        t.set_world(l), t.gl.bindBuffer(34962, hi._ellipseWithoutStartPointVertexBuffer.vertexBuffer), t.gl.bindBuffer(34963, null), Ht.use(t, e, r, a, s, 1, h, L.create(0, 0, 0)), t.gl.drawArrays(3, 0, hi._ellipseWithoutStartPointVertexBuffer.count - 1), t.set_world(h);
      }, hi.createEllipseVertexBuffer = function(t) {
        for (var e = new Qn(t), r = e.lock(), a = 0, s = 0; s < t / 2; ++s)
          r[a++] = L.create(2 * s / t * 0.05, 0, 0);
        for (var s = 0; s < t / 2; ++s)
          r[a++] = L.create(2 * s / t * 0.95 + 0.05, 0, 0);
        return e.unlock(), e;
      }, hi.createEllipseVertexBufferWithoutStartPoint = function(t) {
        var e = new Qn(t), r = e.lock();
        r[0] = L.create(1e-6, 0, 0);
        for (var a = 1; a < t; ++a)
          r[a] = L.create(2 * a / t, 0, 0);
        return e.unlock(), e;
      };
      var oh = {};
      function ci() {
        this._systemGenerated = !1, this.meanAnomoly = 0, this.orbitalYears = 0, this.observingLocation = !1, this.reference = 18, this.parentsRoationalBase = !1, this.referenceFrameType = 0, this.meanRadius = 6371e3, this.oblateness = 33528e-7, this.heading = 0, this.pitch = 0, this.roll = 0, this.scale = 1, this.tilt = 0, this.translation = new L(), this.lat = 0, this.lng = 0, this.altitude = 0, this.rotationalPeriod = 0, this.zeroRotationDate = 0, this.representativeColor = ot.get_white(), this.showAsPoint = !1, this.showOrbitPath = !1, this.stationKeeping = !0, this.semiMajorAxis = 0, this.semiMajorAxisUnits = 1, this.eccentricity = 0, this.inclination = 0, this.argumentOfPeriapsis = 0, this.longitudeOfAscendingNode = 0, this.meanAnomolyAtEpoch = 0, this.meanDailyMotion = 0, this.epoch = 0, this._orbit = null, this._elements = new Mn(), this.worldMatrix = new H(), this.worldMatrix = H.get_identity();
      }
      ci.isTLECheckSumGood = function(t) {
        if (t.length !== 69)
          return !1;
        for (var e = 0, r = 0; r < 68; r++)
          switch (t.substr(r, 1)) {
            case "1":
              e += 1;
              break;
            case "2":
              e += 2;
              break;
            case "3":
              e += 3;
              break;
            case "4":
              e += 4;
              break;
            case "5":
              e += 5;
              break;
            case "6":
              e += 6;
              break;
            case "7":
              e += 7;
              break;
            case "8":
              e += 8;
              break;
            case "9":
              e += 9;
              break;
            case "-":
              e += 1;
              break;
          }
        return (e % 10).toString() === t.charAt(68).toString();
      }, ci.toTLEExponential = function(t, e) {
        var r = t.toExponential(e);
        return r.length < e + 6 && (r = r.substring(0, e + 4) + "0" + r.substr(e + 4, 1)), r;
      }, ci.tleNumberString = function(t, e, r) {
        var a = t.toFixed(r), s = a.indexOf(".");
        s === -1 && (s = a.length, a += ".0");
        var l = a.length - s - 1, h = "00000000";
        return a = h.substr(0, e - s) + a + h.substr(0, r - l), a;
      }, ci.computeTLECheckSum = function(t) {
        if (t.length !== 68)
          return "0";
        for (var e = 0, r = 0; r < 68; r++)
          switch (t[r]) {
            case "1":
              e += 1;
              break;
            case "2":
              e += 2;
              break;
            case "3":
              e += 3;
              break;
            case "4":
              e += 4;
              break;
            case "5":
              e += 5;
              break;
            case "6":
              e += 6;
              break;
            case "7":
              e += 7;
              break;
            case "8":
              e += 8;
              break;
            case "9":
              e += 9;
              break;
            case "-":
              e += 1;
              break;
          }
        return e % 10;
      };
      var lh = {
        get_representativeColor: function() {
          return this.representativeColor;
        },
        set_representativeColor: function(t) {
          return t !== this.representativeColor && (this.representativeColor = t, this._orbit = null), t;
        },
        get_orbit: function() {
          return this._orbit;
        },
        set_orbit: function(t) {
          return this._orbit = t, t;
        },
        getIndentifier: function() {
          return this.name;
        },
        importTrajectory: function(t) {
        },
        saveToXml: function(t) {
          t._writeStartElement("ReferenceFrame"), t._writeAttributeString("Name", this.name), t._writeAttributeString("Parent", this.parent), t._writeAttributeString("ReferenceFrameType", Et.toXml("ReferenceFrameTypes", this.referenceFrameType)), t._writeAttributeString("Reference", Et.toXml("ReferenceFrames", this.reference)), t._writeAttributeString("ParentsRoationalBase", this.parentsRoationalBase.toString()), t._writeAttributeString("MeanRadius", this.meanRadius.toString()), t._writeAttributeString("Oblateness", this.oblateness.toString()), t._writeAttributeString("Heading", this.heading.toString()), t._writeAttributeString("Pitch", this.pitch.toString()), t._writeAttributeString("Roll", this.roll.toString()), t._writeAttributeString("Scale", this.scale.toString()), t._writeAttributeString("Tilt", this.tilt.toString()), t._writeAttributeString("Translation", this.translation.toString()), this.referenceFrameType || (t._writeAttributeString("Lat", this.lat.toString()), t._writeAttributeString("Lng", this.lng.toString()), t._writeAttributeString("Altitude", this.altitude.toString())), t._writeAttributeString("RotationalPeriod", this.rotationalPeriod.toString()), t._writeAttributeString("ZeroRotationDate", this.zeroRotationDate.toString()), t._writeAttributeString("RepresentativeColor", this.get_representativeColor().save()), t._writeAttributeString("ShowAsPoint", this.showAsPoint.toString()), t._writeAttributeString("ShowOrbitPath", this.showOrbitPath.toString()), t._writeAttributeString("StationKeeping", this.stationKeeping.toString()), this.referenceFrameType === 1 && (t._writeAttributeString("SemiMajorAxis", this.semiMajorAxis.toString()), t._writeAttributeString("SemiMajorAxisScale", Et.toXml("AltUnits", this.semiMajorAxisUnits)), t._writeAttributeString("Eccentricity", this.eccentricity.toString()), t._writeAttributeString("Inclination", this.inclination.toString()), t._writeAttributeString("ArgumentOfPeriapsis", this.argumentOfPeriapsis.toString()), t._writeAttributeString("LongitudeOfAscendingNode", this.longitudeOfAscendingNode.toString()), t._writeAttributeString("MeanAnomolyAtEpoch", this.meanAnomolyAtEpoch.toString()), t._writeAttributeString("MeanDailyMotion", this.meanDailyMotion.toString()), t._writeAttributeString("Epoch", this.epoch.toString())), t._writeEndElement();
        },
        initializeFromXml: function(t) {
          this.name = t.attributes.getNamedItem("Name").nodeValue, this.parent = t.attributes.getNamedItem("Parent").nodeValue, this.referenceFrameType = Et.parse("ReferenceFrameTypes", t.attributes.getNamedItem("ReferenceFrameType").nodeValue), this.reference = Et.parse("ReferenceFrames", t.attributes.getNamedItem("Reference").nodeValue), this.parentsRoationalBase = n.boolean(t.attributes.getNamedItem("ParentsRoationalBase").nodeValue), this.meanRadius = parseFloat(t.attributes.getNamedItem("MeanRadius").nodeValue), this.oblateness = parseFloat(t.attributes.getNamedItem("Oblateness").nodeValue), this.heading = parseFloat(t.attributes.getNamedItem("Heading").nodeValue), this.pitch = parseFloat(t.attributes.getNamedItem("Pitch").nodeValue), this.roll = parseFloat(t.attributes.getNamedItem("Roll").nodeValue), this.scale = parseFloat(t.attributes.getNamedItem("Scale").nodeValue), this.tilt = parseFloat(t.attributes.getNamedItem("Tilt").nodeValue), this.translation = L.parse(t.attributes.getNamedItem("Translation").nodeValue), this.referenceFrameType || (this.lat = parseFloat(t.attributes.getNamedItem("Lat").nodeValue), this.lng = parseFloat(t.attributes.getNamedItem("Lng").nodeValue), this.altitude = parseFloat(t.attributes.getNamedItem("Altitude").nodeValue)), this.rotationalPeriod = parseFloat(t.attributes.getNamedItem("RotationalPeriod").nodeValue), this.zeroRotationDate = parseFloat(t.attributes.getNamedItem("ZeroRotationDate").nodeValue), this.set_representativeColor(B.load(t.attributes.getNamedItem("RepresentativeColor").nodeValue)), this.showAsPoint = n.boolean(t.attributes.getNamedItem("ShowAsPoint").nodeValue), t.attributes.getNamedItem("StationKeeping") != null && (this.stationKeeping = n.boolean(t.attributes.getNamedItem("StationKeeping").nodeValue)), this.referenceFrameType === 1 && (this.showOrbitPath = n.boolean(t.attributes.getNamedItem("ShowOrbitPath").nodeValue), this.semiMajorAxis = parseFloat(t.attributes.getNamedItem("SemiMajorAxis").nodeValue), this.semiMajorAxisUnits = Et.parse("AltUnits", t.attributes.getNamedItem("SemiMajorAxisScale").nodeValue), this.eccentricity = parseFloat(t.attributes.getNamedItem("Eccentricity").nodeValue), this.inclination = parseFloat(t.attributes.getNamedItem("Inclination").nodeValue), this.argumentOfPeriapsis = parseFloat(t.attributes.getNamedItem("ArgumentOfPeriapsis").nodeValue), this.longitudeOfAscendingNode = parseFloat(t.attributes.getNamedItem("LongitudeOfAscendingNode").nodeValue), this.meanAnomolyAtEpoch = parseFloat(t.attributes.getNamedItem("MeanAnomolyAtEpoch").nodeValue), this.meanDailyMotion = parseFloat(t.attributes.getNamedItem("MeanDailyMotion").nodeValue), this.epoch = parseFloat(t.attributes.getNamedItem("Epoch").nodeValue));
        },
        fromTLE: function(t, e, r) {
          this.epoch = Z._twoLineDateToJulian(t.substr(18, 14)), this.eccentricity = parseFloat("0." + e.substr(26, 7)), this.inclination = parseFloat(e.substr(8, 8)), this.longitudeOfAscendingNode = parseFloat(e.substr(17, 8)), this.argumentOfPeriapsis = parseFloat(e.substr(34, 8));
          var a = parseFloat(e.substr(52, 11));
          this.meanAnomolyAtEpoch = parseFloat(e.substr(43, 8)), this.meanDailyMotion = a * 360;
          var s = 86400 / a / (Math.PI * 2);
          this.semiMajorAxis = Math.pow(s * s * r, 1 / 3), this.semiMajorAxisUnits = 1;
        },
        toTLE: function() {
          var t = new n.StringBuilder();
          t.append("1 99999U 00111AAA "), t.append(Z.julianToTwoLineDate(this.epoch)), t.append(" "), t.append(this.semiMajorAxis.toExponential(4)), t.append(" 00000-0 "), t.append(ci.toTLEExponential(this.meanDailyMotion, 5)), t.append("  001"), t.append(ci.computeTLECheckSum(t.toString())), t.appendLine("");
          var e = new n.StringBuilder();
          return e.append("2 99999 "), e.append(ci.tleNumberString(this.inclination, 3, 4) + " "), e.append(ci.tleNumberString(this.longitudeOfAscendingNode, 3, 4) + " "), e.append((ci.tleNumberString(this.eccentricity, 1, 7) + " ").substring(2)), e.append(ci.tleNumberString(this.argumentOfPeriapsis, 3, 4) + " "), e.append(ci.tleNumberString(this.meanAnomolyAtEpoch, 3, 4) + " "), e.append(ci.toTLEExponential(this.meanDailyMotion / 207732, 5)), e.append("00001"), e.append(ci.computeTLECheckSum(e.toString())), e.appendLine(""), t.toString() + e.toString();
        },
        get_elements: function() {
          return this._elements.a = this.semiMajorAxis, this._elements.e = this.eccentricity, this._elements.i = this.inclination, this._elements.w = this.argumentOfPeriapsis, this._elements.omega = this.longitudeOfAscendingNode, this._elements.jdEquinox = this.epoch, this.meanDailyMotion ? this._elements.n = this.meanDailyMotion : this._elements.n = Fe.meanMotionFromSemiMajorAxis(this._elements.a), this._elements.t = this.epoch - this.meanAnomolyAtEpoch / this._elements.n, this._elements;
        },
        set_elements: function(t) {
          return this._elements = t, t;
        },
        computeFrame: function(t) {
          switch (this.referenceFrameType) {
            case 1:
              this._computeOrbital(t);
              break;
            case 0:
              this._computeFixedSherical(t);
              break;
            case 2:
              this._computeFrameTrajectory(t);
              break;
          }
        },
        useRotatingParentFrame: function() {
          switch (this.referenceFrameType) {
            case 1:
            case 2:
            case 3:
              return !1;
            default:
              return !0;
          }
        },
        _computeFixedRectangular: function(t) {
        },
        _computeFixedSherical: function(t) {
          this.observingLocation && (this.lat = Z.get_location().get_lat(), this.lng = Z.get_location().get_lng(), this.altitude = Z.get_altitude()), this.worldMatrix = H.get_identity(), this.worldMatrix.translate(this.translation);
          var e = 1 / t.get_nominalRadius() * this.scale * this.meanRadius;
          if (this.worldMatrix.scale(L.create(e, e, e)), this.worldMatrix._multiply(H.rotationYawPitchRoll(this.heading / 180 * Math.PI, this.pitch / 180 * Math.PI, this.roll / 180 * Math.PI)), this.worldMatrix._multiply(H._rotationZ(-90 / 180 * Math.PI)), this.rotationalPeriod) {
            var r = (Z.get_jNow() - this.zeroRotationDate) / this.rotationalPeriod * Math.PI * 2 % (Math.PI * 2);
            this.worldMatrix._multiply(H._rotationX(-r));
          }
          this.worldMatrix.translate(L.create(1 + this.altitude / t.get_nominalRadius(), 0, 0)), this.worldMatrix._multiply(H._rotationZ(this.lat / 180 * Math.PI)), this.worldMatrix._multiply(H._rotationY(-(this.lng + 180) / 180 * Math.PI));
        },
        _computeFrameTrajectory: function(t) {
        },
        _computeOrbital: function(t) {
          var e = this.get_elements(), r = Fe.calculateRectangularJD(Z.get_jNow(), e);
          this.meanAnomoly = e.meanAnnomolyOut;
          var a = Fe.calculateRectangular(e, this.meanAnomoly + 1e-3), s = L.subtractVectors(r, a), l = r.copy();
          l.normalize(), s.normalize(), r.length();
          var h = 1;
          switch (this.semiMajorAxisUnits) {
            case 1:
              h = 1;
              break;
            case 2:
              h = 1 / 3.2808399;
              break;
            case 3:
              h = 1 / 3.2808399 / 12;
              break;
            case 4:
              h = 1609.344;
              break;
            case 5:
              h = 1e3;
              break;
            case 6:
              h = 149598e3 * 1e3;
              break;
            case 7:
              h = 63239.6717 * 149598e3 * 1e3;
              break;
            case 8:
              h = 206264.806 * 149598e3 * 1e3;
              break;
            case 9:
              h = 206264.806 * 149598e3 * 1e3 * 1e6;
              break;
            case 10:
              h = 1;
              break;
          }
          h *= 1 / t.get_nominalRadius();
          var u = H.lookAtLH(L.create(0, 0, 0), s, l);
          u.invert(), this.worldMatrix = H.get_identity(), this.worldMatrix.translate(this.translation);
          var _ = 1 / t.get_nominalRadius() * this.scale * this.meanRadius;
          if (this.worldMatrix.scale(L.create(_, _, _)), this.worldMatrix._multiply(H.rotationYawPitchRoll(this.heading / 180 * Math.PI, this.pitch / 180 * Math.PI, this.roll / 180 * Math.PI)), this.rotationalPeriod) {
            var m = (Z.get_jNow() - this.zeroRotationDate) / this.rotationalPeriod * Math.PI * 2 % (Math.PI * 2);
            this.worldMatrix._multiply(H._rotationX(-m));
          }
          r = L.scale(r, h), this.worldMatrix.translate(r), this.stationKeeping && (this.worldMatrix = H.multiplyMatrix(u, this.worldMatrix));
        }
      };
      function $a() {
        this.lat = 0, this.lng = 0, this.alt = 0;
      }
      var uh = {};
      function Pa() {
        this.extrude = !1, this.astronomical = !1, this.meanRadius = 6371e3, this.pointList = [];
      }
      var hh = {
        parseWkt: function(t, e, r, a) {
          for (var s = Oe.split(t, "(,)"), l = n.enumerate(s); l.moveNext(); ) {
            var h = l.current, u = n.trim(h).split(" ");
            if (u.length > 1) {
              var _ = new $a();
              _.lng = parseFloat(u[0]), this.astronomical && (_.lng -= 180), _.lat = parseFloat(u[1]), u.length > 2 && !r ? _.alt = parseFloat(u[2]) : _.alt = r, _.date = a, this.pointList.push(_);
            }
          }
        },
        getCenterPoint: function() {
          var t = new $a();
          t.lat = 0, t.lng = 0, t.alt = 0;
          for (var e = n.enumerate(this.pointList); e.moveNext(); ) {
            var r = e.current;
            t.lat += r.lat, t.lng += r.lng, t.alt += r.alt;
          }
          return t.lat /= this.pointList.length, t.lng /= this.pointList.length, t.alt /= this.pointList.length, t;
        }
      };
      function xi() {
      }
      xi.triggerLoadSprite = function() {
        xi._pins == null && (xi._pins = A.loadPlanetTexture(Kt.singleton.engineAssetUrl("pins.png")));
      }, xi.getPushPinTexture = function(t) {
        var e = null;
        if (n.keyExists(xi._pinTextureCache, t))
          return xi._pinTextureCache[t];
        try {
          e = F.prepDevice.createTexture(), F.prepDevice.bindTexture(3553, e);
          var r = Math.floor(t / 16), a = t % 16, s = document.createElement("canvas");
          s.height = 32, s.width = 32;
          var l = s.getContext("2d");
          l.drawImage(xi._pins.imageElement, a * 32, r * 32, 32, 32, 0, 0, 32, 32);
          var h = s;
          F.prepDevice.texParameteri(3553, 10242, 33071), F.prepDevice.texParameteri(3553, 10243, 33071), F.prepDevice.texImage2D(3553, 0, 6408, 6408, 5121, h), F.prepDevice.texParameteri(3553, 10241, 9985), F.prepDevice.generateMipmap(3553), F.prepDevice.bindTexture(3553, null), xi._pinTextureCache[t] = e;
        } catch {
        }
        return e;
      };
      var ch = {};
      function Pn() {
        this.guid = new di(), this.header = [], this.rows = [], this.delimiter = "	", this.locked = !1;
      }
      var _h = {
        lock: function() {
          this.locked = !0;
        },
        unlock: function() {
          this.locked = !1;
        },
        save: function() {
          for (var t = "", e = !0, r = n.enumerate(this.header); r.moveNext(); ) {
            var a = r.current;
            e ? e = !1 : t += "	", t += a;
          }
          t += `\r
`;
          for (var s = n.enumerate(this.rows); s.moveNext(); ) {
            var l = s.current;
            e = !0;
            for (var h = n.enumerate(l); h.moveNext(); ) {
              var a = h.current;
              e ? e = !1 : t += "	", t += a;
            }
            t += `\r
`;
          }
          return t;
        },
        loadFromString: function(t, e, r, a) {
          var s = 0, l = t.split(`\r
`);
          if (!e || a)
            if (l.length > 0) {
              var h = l[0];
              s++, h.indexOf("	") === -1 && h.indexOf(",") > -1 && (this.delimiter = ","), e || (this.rows.length = 0), this.header = Oe.splitString(h, this.delimiter);
            } else
              this.header = [];
          var u = [];
          for (r || (u = this.rows); s < l.length; ) {
            var _ = l[s], m = Oe.splitString(_, this.delimiter);
            if (m.length < 1)
              break;
            u.push(m), s++;
          }
          r && (this.rows = u);
        },
        clone: function() {
          for (var t = new Pn(), e = 0; e < this.header.length; e++)
            t.header.push(this.header[e]);
          for (var r = 0; r < this.rows.length; r++) {
            t.rows.push([]);
            for (var e = 0; e < this.rows[r].length; e++)
              t.rows[r].push(this.rows[r][e]);
          }
          return t;
        },
        addColumn: function(t, e) {
          this.header.push(t);
          for (var r = 0; r < e.length; r++)
            this.rows[r].push(e[r]);
        },
        removeColumn: function(t) {
          var e = this.header.indexOf(t);
          if (e > -1) {
            this.header.splice(e, 1);
            for (var r = 0; r < this.rows.length; r++)
              this.rows[r].splice(e, 1);
          }
        }
      };
      function qr() {
        this.columns = {}, this.column = [], this.rows = [], this.loadFilename = "", this.sampId = "", this.selectedRow = null, this.error = !1, this.errorText = "";
      }
      qr.loadFromUrl = function(t, e) {
        var r = new qr();
        return r._onComplete = e, r._webFile = new Ai(Kt.singleton.rewrite(t, 1)), r._webFile.onStateChange = n.bind("_loadData", r), r._webFile.send(), r;
      }, qr.loadFromString = function(t) {
        var e = new DOMParser(), r = e.parseFromString(t, "text/xml"), a = new qr();
        return a.loadFromXML(r), a;
      };
      var fh = {
        _loadData: function() {
          this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && (this.loadFromXML(this._webFile.getXml()), this._onComplete != null && this._onComplete());
        },
        loadFromXML: function(t) {
          var e = at.selectSingleNode(t, "VOTABLE");
          if (e != null) {
            var r = 0;
            try {
              var a = at.selectSingleNode(at.selectSingleNode(e, "RESOURCE"), "TABLE");
              if (a != null)
                for (var s = n.enumerate(a.childNodes); s.moveNext(); ) {
                  var l = s.current;
                  if (l.nodeName === "FIELD") {
                    var h = new jn(l, r++);
                    this.columns[h.name] = h, this.column.push(h);
                  }
                }
            } catch {
              this.error = !0, this.errorText = at.selectSingleNode(e, "DESCRIPTION").text;
            }
            try {
              var u = at.selectSingleNode(at.selectSingleNode(at.selectSingleNode(at.selectSingleNode(e, "RESOURCE"), "TABLE"), "DATA"), "TABLEDATA");
              if (u != null)
                for (var _ = n.enumerate(u.childNodes); _.moveNext(); ) {
                  var l = _.current;
                  if (l.nodeName === "TR") {
                    var m = new vs(this);
                    m.columnData = new Array(n.keyCount(this.columns)), r = 0;
                    for (var p = n.enumerate(l.childNodes); p.moveNext(); ) {
                      var b = p.current;
                      b.nodeName === "TD" && (m.columnData[r++] = n.trim(at.getInnerText(b)));
                    }
                    this.rows.push(m);
                  }
                }
            } catch {
            }
          }
        },
        save: function(t) {
          return !0;
        },
        getColumnByUcd: function(t) {
          for (var e = n.enumerate(n.keys(this.columns)); e.moveNext(); ) {
            var r = e.current, a = this.columns[r];
            if (n.replaceString(a.ucd, "_", ".").toLocaleLowerCase().indexOf(t.toLocaleLowerCase()) > -1)
              return a;
          }
          return null;
        },
        getRAColumn: function() {
          for (var t = n.enumerate(n.keys(this.columns)); t.moveNext(); ) {
            var e = t.current, r = this.columns[e];
            if (r.ucd.toLocaleLowerCase().indexOf("pos.eq.ra") > -1 || r.ucd.toLocaleLowerCase().indexOf("pos_eq_ra") > -1)
              return r;
          }
          for (var a = n.enumerate(n.keys(this.columns)); a.moveNext(); ) {
            var e = a.current, r = this.columns[e];
            if (r.name.toLocaleLowerCase().indexOf("ra") > -1)
              return r;
          }
          return null;
        },
        getDecColumn: function() {
          for (var t = n.enumerate(n.keys(this.columns)); t.moveNext(); ) {
            var e = t.current, r = this.columns[e];
            if (r.ucd.toLowerCase().indexOf("pos.eq.dec") > -1 || r.ucd.toLowerCase().indexOf("pos_eq_dec") > -1)
              return r;
          }
          for (var a = n.enumerate(n.keys(this.columns)); a.moveNext(); ) {
            var e = a.current, r = this.columns[e];
            if (r.name.toLowerCase().indexOf("dec") > -1)
              return r;
          }
          return null;
        },
        getMagColumn: function() {
          for (var t = n.enumerate(n.keys(this.columns)); t.moveNext(); ) {
            var e = t.current, r = this.columns[e];
            if (r.ucd.toLowerCase().indexOf("phot.mag") > -1 || r.ucd.toLowerCase().indexOf("phot_mag") > -1)
              return r;
          }
          return null;
        },
        getDistanceColumn: function() {
          for (var t = n.enumerate(n.keys(this.columns)); t.moveNext(); ) {
            var e = t.current, r = this.columns[e];
            if (r.ucd.toLowerCase().indexOf("pos.distance") > -1 || r.ucd.toLowerCase().indexOf("pos_distance") > -1)
              return r;
          }
          return null;
        },
        toString: function() {
          for (var t = new n.StringBuilder(), e = !0, r = n.enumerate(n.keys(this.columns)); r.moveNext(); ) {
            var a = r.current, s = this.columns[a];
            e ? e = !1 : t.append("	"), t.append(s.name);
          }
          t.appendLine("");
          for (var l = n.enumerate(this.rows); l.moveNext(); ) {
            var h = l.current;
            e = !0;
            for (var u = n.enumerate(h.columnData); u.moveNext(); ) {
              var s = u.current;
              e ? e = !1 : t.append("	"), t.append(s.toString());
            }
            t.appendLine("");
          }
          return t.toString();
        }
      };
      function vs(t) {
        this.selected = !1, this.owner = t;
      }
      var gh = {
        getColumnData: function(t) {
          return this.owner.columns[t] != null ? this.columnData[this.owner.columns[t].index] : null;
        },
        get_item: function(t) {
          return t < 0 || t >= this.columnData.length ? null : this.columnData[t];
        }
      };
      function jn(t, e) {
        if (this.id = "", this.type = 0, this.precision = 0, this.dimentions = 0, this.sizes = null, this.ucd = "", this.unit = "", this.name = "", this.index = 0, this.index = e, t.attributes.getNamedItem("datatype") != null && (this.type = jn.getType(t.attributes.getNamedItem("datatype").nodeValue)), t.attributes.getNamedItem("ucd") != null && (this.ucd = t.attributes.getNamedItem("ucd").nodeValue), t.attributes.getNamedItem("precision") != null)
          try {
            this.precision = parseInt(t.attributes.getNamedItem("precision").nodeValue);
          } catch {
          }
        if (t.attributes.getNamedItem("ID") != null && (this.id = t.attributes.getNamedItem("ID").nodeValue), t.attributes.getNamedItem("name") != null ? this.name = t.attributes.getNamedItem("name").nodeValue : this.name = this.id, t.attributes.getNamedItem("unit") != null && (this.unit = t.attributes.getNamedItem("unit").nodeValue), t.attributes.getNamedItem("arraysize") != null) {
          var r = t.attributes.getNamedItem("arraysize").nodeValue.split("x");
          this.dimentions = r.length, this.sizes = new Array(r.length);
          for (var a = 0, s = n.enumerate(r); s.moveNext(); ) {
            var l = s.current;
            if (!(l.indexOf("*") > -1))
              this.sizes[a++] = parseInt(l);
            else {
              var h = 9999, u = n.replaceString(l, "*", "");
              u.length > 0 && (h = parseInt(u)), this.sizes[a++] = h;
            }
          }
        }
      }
      jn.getType = function(t) {
        var e = 13;
        switch (t) {
          case "boolean":
            e = 1;
            break;
          case "bit":
            e = 2;
            break;
          case "unsignedByte":
            e = 3;
            break;
          case "short":
            e = 4;
            break;
          case "int":
            e = 5;
            break;
          case "long":
            e = 6;
            break;
          case "char":
            e = 7;
            break;
          case "unicodeChar":
            e = 8;
            break;
          case "float":
            e = 9;
            break;
          case "double":
            e = 10;
            break;
          case "floatComplex":
            e = 11;
            break;
          case "doubleComplex":
            e = 12;
            break;
          default:
            e = 13;
            break;
        }
        return e;
      };
      var dh = {
        toString: function() {
          return this.name;
        }
      };
      function Kn() {
        this.copyright = "", this.creditsUrl = "", this._validWcs = !1, this.keywords = [], this.description = "", this.scaleX = 0, this.scaleY = 0, this.centerX = 0, this.centerY = 0, this.rotation = 0, this.referenceX = 0, this.referenceY = 0, this.sizeX = 0, this.sizeY = 0, this.cd1_1 = 0, this.cd1_2 = 0, this.cd2_1 = 0, this.cd2_2 = 0, this.hasRotation = !1, this.hasSize = !1, this.hasScale = !1, this.hasLocation = !1, this.hasPixel = !1, this.filename = "", this._colorCombine = !1;
      }
      var mh = {
        get_copyright: function() {
          return this.copyright;
        },
        set_copyright: function(t) {
          return this.copyright = t, t;
        },
        get_creditsUrl: function() {
          return this.creditsUrl;
        },
        set_creditsUrl: function(t) {
          return this.creditsUrl = t, t;
        },
        get_validWcs: function() {
          return this._validWcs;
        },
        set_validWcs: function(t) {
          return this._validWcs = t, t;
        },
        get_keywords: function() {
          return this.keywords.length || this.keywords.push("Image File"), this.keywords;
        },
        set_keywords: function(t) {
          return this.keywords = t, t;
        },
        get_description: function() {
          return this.description;
        },
        set_description: function(t) {
          return this.description = t, t;
        },
        get_scaleX: function() {
          return this.scaleX;
        },
        set_scaleX: function(t) {
          return this.scaleX = t, t;
        },
        get_scaleY: function() {
          return this.scaleY;
        },
        set_scaleY: function(t) {
          return this.scaleY = t, t;
        },
        get_centerX: function() {
          return this.centerX;
        },
        set_centerX: function(t) {
          return this.centerX = t, t;
        },
        get_viewCenterX: function() {
          return this.centerX + (this.get_sizeX() / 2 - this.get_referenceX()) * this.get_scaleX();
        },
        get_centerY: function() {
          return this.centerY;
        },
        set_centerY: function(t) {
          return this.centerY = t, t;
        },
        get_viewCenterY: function() {
          return this.centerY + (this.get_sizeY() / 2 - this.get_referenceY()) * this.get_scaleY();
        },
        get_rotation: function() {
          return this.rotation;
        },
        set_rotation: function(t) {
          return this.rotation = t, t;
        },
        get_referenceX: function() {
          return this.referenceX;
        },
        set_referenceX: function(t) {
          return this.referenceX = t, t;
        },
        get_referenceY: function() {
          return this.referenceY;
        },
        set_referenceY: function(t) {
          return this.referenceY = t, t;
        },
        get_sizeX: function() {
          return this.sizeX;
        },
        set_sizeX: function(t) {
          return this.sizeX = t, t;
        },
        get_sizeY: function() {
          return this.sizeY;
        },
        set_sizeY: function(t) {
          return this.sizeY = t, t;
        },
        get_cd1_1: function() {
          return this.cd1_1;
        },
        set_cd1_1: function(t) {
          return this.cd1_1 = t, t;
        },
        get_cd1_2: function() {
          return this.cd1_2;
        },
        set_cd1_2: function(t) {
          return this.cd1_2 = t, t;
        },
        get_cd2_1: function() {
          return this.cd2_1;
        },
        set_cd2_1: function(t) {
          return this.cd2_1 = t, t;
        },
        get_cd2_2: function() {
          return this.cd2_2;
        },
        set_cd2_2: function(t) {
          return this.cd2_2 = t, t;
        },
        adjustScale: function(t, e) {
          t !== this.sizeX && (this.scaleX *= this.sizeX / t, this.referenceX /= this.sizeX / t, this.sizeX = t), e !== this.sizeY && (this.scaleY *= this.sizeY / e, this.referenceY /= this.sizeY / e, this.sizeY = e);
        },
        calculateScaleFromCD: function() {
          this.scaleX = Math.sqrt(this.cd1_1 * this.cd1_1 + this.cd2_1 * this.cd2_1) * (this.cd1_1 * this.cd2_2 - this.cd1_2 * this.cd2_1) < 0 ? -1 : 1, this.scaleY = Math.sqrt(this.cd1_2 * this.cd1_2 + this.cd2_2 * this.cd2_2);
        },
        calculateRotationFromCD: function() {
          var t = this.cd1_1 * this.cd2_2 - this.cd1_2 * this.cd2_1 < 0 ? -1 : 1, e = Math.atan2(-t * this.cd1_2, this.cd2_2);
          this.rotation = e / Math.PI * 180;
        },
        get_filename: function() {
          return this.filename;
        },
        set_filename: function(t) {
          return this.filename = t, t;
        },
        get_colorCombine: function() {
          return this._colorCombine;
        },
        set_colorCombine: function(t) {
          return this._colorCombine = t, t;
        },
        getBitmap: function() {
          return null;
        }
      };
      function ws() {
      }
      ws._drawTest = function() {
        var t = document.getElementById("canvas"), e = t.getContext("2d");
        e.fillStyle = "rgb(80,0,0)", e.fillRect(120, 120, 165, 160), e.fillStyle = "rgba(0, 0, 160, 0.5)", e.fillRect(140, 140, 165, 160);
      };
      function ee() {
      }
      ee.getMpcFile = function(t) {
        ee._webMpcFile = new Ai(t), ee._webMpcFile.responseType = "blob", ee._webMpcFile.onStateChange = ee.starFileStateChange, ee._webMpcFile.send();
      }, ee.starFileStateChange = function() {
        if (ee._webMpcFile.get_state() === 2)
          alert(ee._webMpcFile.get_message());
        else if (ee._webMpcFile.get_state() === 1) {
          var t = ee._webMpcFile.getBlob(), e = new FileReader();
          e.onloadend = function(r) {
            ee._readFromBin(new Kr(new Uint8Array(e.result))), ee.initMPCVertexBuffer();
          }, e.readAsArrayBuffer(t);
        }
      }, ee._readFromBin = function(t) {
        ee.mpcList = [];
        var e = t.get_length(), r;
        try {
          for (; t.get_position() < e; )
            r = Mn._create(t), ee.mpcList.push(r);
        } catch {
        }
        t.close();
      }, ee.drawMPC3D = function(t, e, r) {
        var a = t.viewCamera.zoom, s = (Math.log(Math.max(1, a)) / Math.log(4) - 15.5) * 90, l = Math.min(255, Math.max(0, n.truncate(s)));
        if (!(l > 254)) {
          if (ee._mpcVertexBuffer == null) {
            ee.starTexture == null && (ee.starTexture = A.loadPlanetTexture(Kt.singleton.engineAssetUrl("StarProfileAlpha.png")));
            for (var h = 0; h < 7; h++)
              ee._mpcBlendStates[h] = Cr.create(!1, 1e3);
            ee._initBegun || (ee._startInit(), ee._initBegun = !0);
            return;
          }
          var u = H.translation(L.negate(r)), _ = H.multiplyMatrix(t.get_world(), u), m = H.multiplyMatrix(_, t.get_view());
          if (L._transformCoordinate(t.cameraPosition, H.invertMatrix(t.get_world())), ee._mpcVertexBuffer != null)
            for (var h = 0; h < 7; h++)
              ee._mpcBlendStates[h].set_targetState(!0), ee._mpcBlendStates[h].get_state() && (mt.use(t, m, ee._mpcVertexBuffer[h].vertexBuffer, ee.starTexture.texture2d, ot.get_white(), e * ee._mpcBlendStates[h].get_opacity(), !1, Z.get_jNow() - Mi.baseDate, 0, t.cameraPosition, 200, 0.1), t.gl.drawArrays(0, 0, ee._mpcVertexBuffer[h].count));
        }
      }, ee._startInit = function() {
        V.singleton.freestandingMode || ee.getMpcFile(Kt.singleton.coreStaticUrl("wwtweb/catalog.aspx?Q=mpcbin"));
      }, ee.initMPCVertexBuffer = function() {
        try {
          if (ee._mpcVertexBuffer == null) {
            var t = new Array(7);
            ee._mpcCount = ee.mpcList.length;
            for (var e = new Array(7), r = 0; r < 7; r++)
              e[r] = [];
            for (var a = n.enumerate(ee.mpcList); a.moveNext(); ) {
              var s = a.current, l = 0;
              s.a < 2.5 ? l = 0 : s.a < 2.83 ? l = 1 : s.a < 2.96 ? l = 2 : s.a < 3.3 ? l = 3 : s.a < 5 ? l = 4 : s.a < 10 ? l = 5 : l = 6;
              var h = new Mi();
              h.fill(s), e[l].push(h);
            }
            for (var r = 0; r < 7; r++)
              t[r] = ia.create(e[r]), t[r].unlock();
            ee._mpcVertexBuffer = t;
          }
        } finally {
        }
      };
      var ph = {};
      function Li() {
        this._camParams = Me.create(0, 0, -1, 0, 0, 100), this._location3d = L.create(0, 0, 0), this.htmlDescription = "", this._constellation = "", this._classification = 1048576, this._type = 2, this._magnitude = 0, this._distnace = 0, this.angularSize = 60, this.annotation = "", this._thumbNail = null, this._studyImageset = null, this._backgroundImageSet = null, this._searchDistance = 0, this._elevation = 50;
      }
      Li.create = function(t, e, r, a, s, l, h) {
        var u = new Li();
        return u.set_zoomLevel(h), u._constellation = s, u._name = t, l === 2 || l === 4 ? u._camParams.set_RA(r) : u.set_lng(r), u.set_lat(e), u.set_classification(a), u.set_type(l), u;
      }, Li.createCameraParams = function(t, e, r, a, s, l) {
        var h = new Li();
        return h._constellation = a, h._name = t, h.set_classification(r), h._camParams = e, h.set_type(s), h.set_target(l), h;
      }, Li._fromXml = function(t) {
        var e = new Li();
        if (e._name = t.attributes.getNamedItem("Name").nodeValue, t.attributes.getNamedItem("MSRComponentId") != null && t.attributes.getNamedItem("Permission") != null && t.attributes.getNamedItem("Url") != null)
          return e.set_url(t.attributes.getNamedItem("Url").nodeValue), e.set_thumbnailUrl(t.attributes.getNamedItem("Thumbnail").nodeValue), e;
        t.attributes.getNamedItem("DataSetType") != null && (e._type = Et.parse("ImageSetType", t.attributes.getNamedItem("DataSetType").nodeValue)), e.get_type() === 2 ? (e._camParams.set_RA(parseFloat(t.attributes.getNamedItem("RA").nodeValue)), e._camParams.set_dec(parseFloat(t.attributes.getNamedItem("Dec").nodeValue))) : (e.set_lat(parseFloat(t.attributes.getNamedItem("Lat").nodeValue)), e.set_lng(parseFloat(t.attributes.getNamedItem("Lng").nodeValue))), t.attributes.getNamedItem("Constellation") != null && (e._constellation = t.attributes.getNamedItem("Constellation").nodeValue), t.attributes.getNamedItem("Classification") != null && (e._classification = Et.parse("Classification", t.attributes.getNamedItem("Classification").nodeValue)), t.attributes.getNamedItem("Magnitude") != null && (e._magnitude = parseFloat(t.attributes.getNamedItem("Magnitude").nodeValue)), t.attributes.getNamedItem("AngularSize") != null && (e.angularSize = parseFloat(t.attributes.getNamedItem("AngularSize").nodeValue)), t.attributes.getNamedItem("ZoomLevel") != null && e.set_zoomLevel(parseFloat(t.attributes.getNamedItem("ZoomLevel").nodeValue)), t.attributes.getNamedItem("Rotation") != null && (e._camParams.rotation = parseFloat(t.attributes.getNamedItem("Rotation").nodeValue)), t.attributes.getNamedItem("Annotation") != null && (e.annotation = t.attributes.getNamedItem("Annotation").nodeValue), t.attributes.getNamedItem("Angle") != null && (e._camParams.angle = parseFloat(t.attributes.getNamedItem("Angle").nodeValue)), t.attributes.getNamedItem("Opacity") != null ? e._camParams.opacity = parseFloat(t.attributes.getNamedItem("Opacity").nodeValue) : e._camParams.opacity = 100, e.set_target(65536), t.attributes.getNamedItem("Target") != null && e.set_target(Et.parse("SolarSystemObjects", t.attributes.getNamedItem("Target").nodeValue)), t.attributes.getNamedItem("ViewTarget") != null && (e._camParams.viewTarget = L.parse(t.attributes.getNamedItem("ViewTarget").nodeValue)), t.attributes.getNamedItem("TargetReferenceFrame") != null && (e._camParams.targetReferenceFrame = t.attributes.getNamedItem("TargetReferenceFrame").nodeValue);
        var r = at.selectSingleNode(t, "Description");
        r != null && (e.htmlDescription = at.getInnerText(r));
        var a = at.selectSingleNode(t, "BackgroundImageSet");
        if (a != null) {
          var s = at.selectSingleNode(a, "ImageSet");
          e._backgroundImageSet = He.fromXMLNode(s);
        }
        var l = at.selectSingleNode(t, "ForegroundImageSet");
        if (l != null) {
          var s = at.selectSingleNode(l, "ImageSet");
          e._studyImageset = He.fromXMLNode(s);
        }
        return l = at.selectSingleNode(t, "ImageSet"), l != null && (e._studyImageset = He.fromXMLNode(l)), e;
      }, Li._properCaps = function(t) {
        for (var e = t.split(" "), r = "", a = n.enumerate(e); a.moveNext(); ) {
          var s = a.current;
          r = r + s.substr(0, 1).toUpperCase() + (s.length > 1 ? s.substr(1).toLowerCase() : "") + " ";
        }
        return n.trim(r);
      };
      var vh = {
        get_tag: function() {
          return this._tag;
        },
        set_tag: function(t) {
          return this._tag = t, t;
        },
        get_url: function() {
          return this._url;
        },
        set_url: function(t) {
          return this._url = t, t;
        },
        get_thumbnail: function() {
          return this._thumbnail;
        },
        set_thumbnail: function(t) {
          return this._thumbnail = t, t;
        },
        get_name: function() {
          return this.get_names()[0];
        },
        get_names: function() {
          return n.emptyString(this._name) ? "".split(";") : this._name.split(";");
        },
        set_names: function(t) {
          return this._name = Oe.getNamesStringFromArray(t), t;
        },
        get_camParams: function() {
          if (this.get_classification() === 536870912 && this._camParams.target !== 20) {
            var t = A.getPlanetLocation(this.get_name());
            this._camParams.set_RA(t.RA), this._camParams.set_dec(t.dec), this._distnace = t.distance;
          }
          return this._camParams;
        },
        set_camParams: function(t) {
          return this._camParams = t, t;
        },
        updatePlanetLocation: function(t) {
          this._camParams.viewTarget = A.getPlanet3dLocationJD(this.get_target(), t), this.get_target() !== 65536 && this.get_target() !== 20 && (this._camParams.viewTarget = A.getPlanetTargetPoint(this.get_target(), this.get_lat(), this.get_lng(), t));
        },
        get_location3d: function() {
          return (this.get_classification() === 536870912 || !this._location3d.x && !this._location3d.y && !this._location3d.z) && (this._location3d = R.raDecTo3d(this.get_RA(), this.get_dec())), this._location3d;
        },
        get_lat: function() {
          return this.get_camParams().lat;
        },
        set_lat: function(t) {
          return this._camParams.lat = t, t;
        },
        get_lng: function() {
          return this.get_camParams().lng;
        },
        set_lng: function(t) {
          return this._camParams.lng = t, t;
        },
        get_opacity: function() {
          return this.get_camParams().opacity;
        },
        set_opacity: function(t) {
          return this._camParams.opacity = t, t;
        },
        get_constellation: function() {
          return this._constellation;
        },
        set_constellation: function(t) {
          return this._constellation = t, t;
        },
        get_classification: function() {
          return this._classification;
        },
        set_classification: function(t) {
          return this._classification = t, t;
        },
        get_type: function() {
          return this._type;
        },
        set_type: function(t) {
          return this._type = t, t;
        },
        get_magnitude: function() {
          return this._magnitude;
        },
        set_magnitude: function(t) {
          return this._magnitude = t, t;
        },
        get_distance: function() {
          return this._distnace;
        },
        set_distance: function(t) {
          return this._distnace = t, t;
        },
        get_zoomLevel: function() {
          return this.get_camParams().zoom;
        },
        set_zoomLevel: function(t) {
          return this._camParams.zoom = t, t;
        },
        get_annotation: function() {
          return this.annotation;
        },
        set_annotation: function(t) {
          return this.annotation = t, t;
        },
        get_studyImageset: function() {
          return this._studyImageset;
        },
        set_studyImageset: function(t) {
          return this._studyImageset = t, t;
        },
        get_backgroundImageset: function() {
          return this._backgroundImageSet;
        },
        set_backgroundImageset: function(t) {
          return t != null && this.set_type(t.get_dataSetType()), this._backgroundImageSet = t, t;
        },
        get_searchDistance: function() {
          return this._searchDistance;
        },
        set_searchDistance: function(t) {
          return this._searchDistance = t, t;
        },
        get_elevation: function() {
          return this._elevation;
        },
        set_elevation: function(t) {
          return this._elevation = t, t;
        },
        get_thumbnailUrl: function() {
          if (n.emptyString(this._thumbnailField)) {
            if (this._studyImageset != null && !n.emptyString(this._studyImageset.get_thumbnailUrl()))
              return this._studyImageset.get_thumbnailUrl();
            if (this._backgroundImageSet != null && !n.emptyString(this._backgroundImageSet.get_thumbnailUrl()))
              return this._backgroundImageSet.get_thumbnailUrl();
            var t = this.get_name();
            return t.indexOf(";") > -1 && (t = t.substr(0, t.indexOf(";"))), this.get_classification() === 1 || V.singleton.freestandingMode ? Kt.singleton.engineAssetUrl("thumb_star.jpg") : Kt.singleton.coreStaticUrl("wwtweb/thumbnail.aspx?name=" + t.toLowerCase());
          }
          return this._thumbnailField;
        },
        set_thumbnailUrl: function(t) {
          return this._thumbnailField = t, t;
        },
        get_RA: function() {
          return this.get_camParams().get_RA();
        },
        set_RA: function(t) {
          return this._camParams.set_RA(t), t;
        },
        get_dec: function() {
          return this.get_camParams().get_dec();
        },
        set_dec: function(t) {
          return this._camParams.set_dec(t), t;
        },
        toString: function() {
          return this._name;
        },
        _saveToXml: function(t, e) {
          t._writeStartElement(e), t._writeAttributeString("Name", this._name), t._writeAttributeString("DataSetType", Et.toXml("ImageSetType", this._type)), this.get_type() === 2 ? (t._writeAttributeString("RA", this._camParams.get_RA().toString()), t._writeAttributeString("Dec", this._camParams.get_dec().toString())) : (t._writeAttributeString("Lat", this.get_lat().toString()), t._writeAttributeString("Lng", this.get_lng().toString())), t._writeAttributeString("Constellation", this._constellation), t._writeAttributeString("Classification", Et.toXml("Classification", this._classification)), t._writeAttributeString("Magnitude", this._magnitude.toString()), t._writeAttributeString("Distance", this._distnace.toString()), t._writeAttributeString("AngularSize", this.angularSize.toString()), t._writeAttributeString("ZoomLevel", this.get_zoomLevel().toString()), t._writeAttributeString("Rotation", this._camParams.rotation.toString()), t._writeAttributeString("Angle", this._camParams.angle.toString()), t._writeAttributeString("Opacity", this._camParams.opacity.toString()), t._writeAttributeString("Target", Et.toXml("SolarSystemObjects", this.get_target())), t._writeAttributeString("ViewTarget", this._camParams.viewTarget.toString()), t._writeAttributeString("TargetReferenceFrame", this._camParams.targetReferenceFrame), t._writeStartElement("Description"), t._writeCData(this.htmlDescription), t._writeEndElement(), this._backgroundImageSet != null && (t._writeStartElement("BackgroundImageSet"), He.saveToXml(t, this._backgroundImageSet, ""), t._writeEndElement()), this._studyImageset != null && He.saveToXml(t, this._studyImageset, ""), t._writeEndElement();
        },
        get_bounds: function() {
          return this._bounds;
        },
        set_bounds: function(t) {
          return this._bounds = t, t;
        },
        get_isImage: function() {
          return this._studyImageset != null || this._backgroundImageSet != null;
        },
        get_isTour: function() {
          return !1;
        },
        get_isFolder: function() {
          return !1;
        },
        get_children: function() {
          return [];
        },
        get_readOnly: function() {
          return !0;
        },
        get_target: function() {
          return this._camParams.target;
        },
        set_target: function(t) {
          return this._camParams.target = t, t;
        },
        get_isCloudCommunityItem: function() {
          return !1;
        }
      };
      function bs() {
        this.a = 0, this.e = 0, this.ea = 0;
      }
      var wh = {};
      function _i(t, e, r, a) {
        this.poleDec = 0, this.poleRa = 0, this.primeMeridian = 0, this.rotationRate = 0, this.poleDec = e, this.poleRa = t, this.primeMeridian = r, this.rotationRate = a;
      }
      var bh = {};
      function A() {
      }
      A.loadPlanetTexture = function(t) {
        var e = new Te();
        return e.load(t), e;
      }, A.getPlanet3dLocation = function(t) {
        try {
          if (t < 21)
            return A._planet3dLocations[t].copy();
        } catch {
        }
        return L.create(0, 0, 0);
      }, A.getPlanet3dSufaceAltitude = function(t) {
        try {
          if (t < 21)
            return A.getAdjustedPlanetRadius(t);
        } catch {
        }
        return 0;
      }, A.getPlanetTargetPoint = function(t, e, r, a) {
        var s;
        return a ? s = A.getPlanet3dLocationJD(t, a) : s = A.getPlanet3dLocation(t), s.add(R.raDecTo3dAu(r / 15 + 6, e, A.getPlanet3dSufaceAltitude(t))), s;
      }, A.getPlanet3dLocationJD = function(t, e) {
        try {
          var r = new L(), a = $t.getPlanet(e, 0, 0, 0, -6378149), s = R.raDecTo3dAu(a.RA, a.dec, a.distance);
          if (t === 19)
            r = L.create(-s.x, -s.y, -s.z);
          else {
            var l = $t.getPlanet(e, t, 0, 0, -6378149);
            r = R.raDecTo3dAu(l.RA, l.dec, l.distance), r.subtract(s);
          }
          if (r.rotateX(R.meanObliquityOfEcliptic(e) * A.RC), z.get_active().get_solarSystemScale() !== 1)
            switch (t) {
              case 9:
                var h = A.getPlanet3dLocationJD(19, e);
                r.subtract(h), r.multiply(z.get_active().get_solarSystemScale() / 2), r.add(h);
                break;
              case 10:
              case 11:
              case 12:
              case 13:
                var h = A.getPlanet3dLocationJD(4, e);
                r.subtract(h), r.multiply(z.get_active().get_solarSystemScale()), r.add(h);
                break;
              default:
                break;
            }
          return r;
        } catch {
          return L.create(0, 0, 0);
        }
      }, A.getPlanetLocation = function(t) {
        var e = A.getPlanetIDFromName(t);
        return A._planetLocations != null ? A._planetLocations[e] : $t.getPlanet(Z.get_jNow(), e, Z.get_location().get_lat(), Z.get_location().get_lng(), Z.get_altitude());
      }, A.getPlanetLocationJD = function(t, e) {
        var r = A.getPlanetIDFromName(t);
        return $t.getPlanet(e, r, Z.get_location().get_lat(), Z.get_location().get_lng(), Z.get_altitude());
      }, A.getPlanetIDFromName = function(t) {
        switch (t) {
          case "Sun":
            return 0;
          case "Mercury":
            return 1;
          case "Venus":
            return 2;
          case "Mars":
            return 3;
          case "Jupiter":
            return 4;
          case "Saturn":
            return 5;
          case "Uranus":
            return 6;
          case "Neptune":
            return 7;
          case "Pluto":
            return 8;
          case "Moon":
            return 9;
          case "Io":
            return 10;
          case "Europa":
            return 11;
          case "Ganymede":
            return 12;
          case "Callisto":
            return 13;
          case "Earth":
            return 19;
          case "IoShadow":
            return 14;
          case "EuropaShadow":
            return 15;
          case "GanymedeShadow":
            return 16;
          case "CallistoShadow":
            return 17;
          case "SunEclipsed":
            return 18;
          case "Custom":
            return 20;
          case "Undefined":
            return 65536;
          default:
            return -1;
        }
      }, A.getImageSetNameNameFrom3dId = function(t) {
        switch (t) {
          case 0:
            return "Sun";
          case 1:
            return "Mercury";
          case 2:
            return "Venus";
          case 3:
            return "Visible Imagery";
          case 4:
            return "Jupiter";
          case 5:
            return "Saturn";
          case 6:
            return "Uranus";
          case 7:
            return "Neptune";
          case 8:
            return "Pluto";
          case 9:
            return "Moon";
          case 10:
            return "Io (Jupiter)";
          case 11:
            return "Europa (Jupiter)";
          case 12:
            return "Ganymede (Jupiter)";
          case 13:
            return "Callisto (Jupiter)";
          case 19:
            return "Bing Maps Aerial";
          default:
            return "";
        }
      }, A.getNameFrom3dId = function(t) {
        switch (t) {
          case 0:
            return "Sun";
          case 1:
            return "Mercury";
          case 2:
            return "Venus";
          case 3:
            return "Mars";
          case 4:
            return "Jupiter";
          case 5:
            return "Saturn";
          case 6:
            return "Uranus";
          case 7:
            return "Neptune";
          case 8:
            return "Pluto";
          case 9:
            return "Moon";
          case 10:
            return "Io";
          case 11:
            return "Europa";
          case 12:
            return "Ganymede";
          case 13:
            return "Callisto";
          case 19:
            return "Earth";
          default:
            return "";
        }
      }, A.updatePlanetLocations = function(t) {
        if (A._jNow = Z.get_jNow(), t && A.updateOrbits(0), A._planetDiameters == null && (A._planetDiameters = new Array(20), A._planetDiameters[0] = 9291568e-9, A._planetDiameters[1] = 325794793734425e-19, A._planetDiameters[2] = 808669220531394e-19, A._planetDiameters[3] = 453785605596396e-19, A._planetDiameters[4] = 954501e-9, A._planetDiameters[5] = 802173e-9, A._planetDiameters[6] = 339564e-9, A._planetDiameters[7] = 324825e-9, A._planetDiameters[8] = 152007379777805e-19, A._planetDiameters[9] = 232084653538149e-19, A._planetDiameters[10] = 243519298386342e-19, A._planetDiameters[11] = 208692629580609e-19, A._planetDiameters[12] = 351742670356556e-19, A._planetDiameters[13] = 322263666626559e-19, A._planetDiameters[14] = 243519298386342e-19, A._planetDiameters[15] = 208692629580609e-19, A._planetDiameters[16] = 351742670356556e-19, A._planetDiameters[17] = 322263666626559e-19, A._planetDiameters[18] = 9291568e-9 * 2, A._planetDiameters[19] = 855626412117809e-19), A.planetColors == null) {
          var e = B.fromArgb(255, 255, 255, 221), r = B.fromArgb(255, 255, 68, 0);
          A.planetColors = new Array(20), A.planetColors[0] = ot.get_yellow(), A.planetColors[1] = ot.get_white(), A.planetColors[2] = e, A.planetColors[3] = r, A.planetColors[4] = B.fromArgb(255, 255, 165, 0), A.planetColors[5] = B.fromArgb(255, 184, 134, 11), A.planetColors[6] = B.fromArgb(255, 173, 216, 230), A.planetColors[7] = ot.get_blue(), A.planetColors[8] = ot.get_white(), A.planetColors[9] = ot.get_white(), A.planetColors[10] = ot.get_white(), A.planetColors[11] = ot.get_white(), A.planetColors[12] = ot.get_white(), A.planetColors[13] = ot.get_white(), A.planetColors[14] = ot.get_black(), A.planetColors[15] = ot.get_black(), A.planetColors[16] = ot.get_black(), A.planetColors[17] = ot.get_black(), A.planetColors[18] = ot.get_white(), A.planetColors[19] = B.fromArgb(255, 173, 216, 230);
        }
        if (A._planetTilts == null && (A._planetTilts = new Array(20), A._planetTilts[0] = 0, A._planetTilts[1] = 0.01, A._planetTilts[2] = 177.4, A._planetTilts[3] = 25.19, A._planetTilts[4] = 3.13, A._planetTilts[5] = 26.73, A._planetTilts[6] = 97.77, A._planetTilts[7] = 28.32, A._planetTilts[8] = 119.61, A._planetTilts[9] = 23.439, A._planetTilts[10] = 2.21, A._planetTilts[11] = 0, A._planetTilts[12] = -0.33, A._planetTilts[13] = 0, A._planetTilts[14] = 0, A._planetTilts[15] = 0, A._planetTilts[16] = 0, A._planetTilts[17] = 0, A._planetTilts[18] = 0, A._planetTilts[19] = 23.5), A._planetTilts[19] = A._obliquity / A.RC, A.planetRotationPeriod == null && (A.planetRotationPeriod = new Array(20), A.planetRotationPeriod[0] = 25.37995, A.planetRotationPeriod[1] = 58.6462, A.planetRotationPeriod[2] = -243.0187, A.planetRotationPeriod[3] = 1.02595675, A.planetRotationPeriod[4] = 0.41007, A.planetRotationPeriod[5] = 0.426, A.planetRotationPeriod[6] = -0.71833, A.planetRotationPeriod[7] = 0.67125, A.planetRotationPeriod[8] = -6.38718, A.planetRotationPeriod[9] = 27.3, A.planetRotationPeriod[10] = 1.769137786, A.planetRotationPeriod[11] = 3.551, A.planetRotationPeriod[12] = 7.155, A.planetRotationPeriod[13] = 16.69, A.planetRotationPeriod[14] = 0, A.planetRotationPeriod[15] = 0, A.planetRotationPeriod[16] = 0, A.planetRotationPeriod[17] = 0, A.planetRotationPeriod[18] = 0, A.planetRotationPeriod[19] = 0.99726968), A._planetScales == null && (A._planetScales = new Array(20)), A._planet3dLocations == null && (A._planet3dLocations = new Array(20)), z.get_active().get_actualPlanetScale())
          A._planetScales[0] = 0.5, A._planetScales[1] = 0.25, A._planetScales[2] = 0.25, A._planetScales[3] = 0.25, A._planetScales[4] = 0.25, A._planetScales[5] = 0.5, A._planetScales[6] = 0.25, A._planetScales[7] = 0.25, A._planetScales[8] = 0.25, A._planetScales[9] = 0.25, A._planetScales[10] = 0.25, A._planetScales[11] = 0.25, A._planetScales[12] = 0.25, A._planetScales[13] = 0.25, A._planetScales[14] = 0.25, A._planetScales[15] = 0.25, A._planetScales[16] = 0.25, A._planetScales[17] = 0.25, A._planetScales[18] = 0.5, A._planetScales[19] = 0.25;
        else {
          for (var a = 0; a < 20; a++)
            a < 10 ? A._planetScales[a] = 0.25 : A._planetScales[a] = 0.1;
          A._planetScales[0] = 0.5, A._planetScales[5] = 0.5, A._planetScales[18] = 0.5;
        }
        A._planetDrawOrder = {}, A._planetLocations = new Array(20);
        var s = new L(), l = 0;
        {
          var h = $t.getPlanet(A._jNow, l, t ? 0 : Z.get_location().get_lat(), t ? 0 : Z.get_location().get_lng(), t ? -6378149 : Z.get_altitude());
          s = R.raDecTo3dAu(h.RA, h.dec, h.distance);
        }
        A._planet3dLocations[19] = L.create(-s.x, -s.y, -s.z), A._planet3dLocations[19].rotateX(A._obliquity);
        for (var a = 0; a < 18; a++) {
          if (A._planetLocations[a] = $t.getPlanet(A._jNow, a, t ? 0 : Z.get_location().get_lat(), t ? 0 : Z.get_location().get_lng(), t ? -6378149 : Z.get_altitude()), A._planet3dLocations[a] = R.raDecTo3dAu(A._planetLocations[a].RA, A._planetLocations[a].dec, A._planetLocations[a].distance), A._planet3dLocations[a].subtract(s), A._planet3dLocations[a].rotateX(A._obliquity), z.get_active().get_actualPlanetScale() && (A._planetScales[a] = 2 * Math.atan(0.5 * (A._planetDiameters[a] / A._planetLocations[a].distance)) / Math.PI * 180), z.get_active().get_solarSystemScale() !== 1) {
            var u = a;
            switch (u) {
              case 9:
                var _ = A._planet3dLocations[19];
                A._planet3dLocations[a].subtract(_), A._planet3dLocations[a].multiply(z.get_active().get_solarSystemScale() / 2), A._planet3dLocations[a].add(_);
                break;
              case 10:
              case 11:
              case 12:
              case 13:
                var _ = A._planet3dLocations[4];
                A._planet3dLocations[a].subtract(_), A._planet3dLocations[a].multiply(z.get_active().get_solarSystemScale()), A._planet3dLocations[a].add(_);
                break;
            }
          }
          for (var m = -A._planetLocations[a].distance; n.keyExists(A._planetDrawOrder, m); )
            m += 1e-10;
          A._planetDrawOrder[m] = a;
        }
        A._planetLocations[18] = A._planetLocations[0], A._planetScales[0] *= 2, A._planetScales[18] = A._planetScales[0], A._planetScales[5] = A._planetScales[5] * 2, A._lastUpdate = Z.get_now();
      }, A.planetsReady = function() {
      }, A.updateOrbits = function(t) {
        try {
          if (A._obliquity = R.meanObliquityOfEcliptic(Z.get_jNow()) * A.RC, t !== A._lastPlanetCenterID && (A._orbits = null), A._lastPlanetCenterID = t, A._orbits == null && (t < 0 ? A._eclipticTilt = H.get_identity() : (A._eclipticTilt = H.get_identity(), A._eclipticTilt = H._rotationX(A._obliquity)), A.planetOrbitalYears == null && (A.planetOrbitalYears = new Array(20), A.planetOrbitalYears[0] = 1, A.planetOrbitalYears[1] = 0.241, A.planetOrbitalYears[2] = 0.615, A.planetOrbitalYears[3] = 1.881, A.planetOrbitalYears[4] = 11.87, A.planetOrbitalYears[5] = 29.45, A.planetOrbitalYears[6] = 84.07, A.planetOrbitalYears[7] = 164.9, A.planetOrbitalYears[8] = 248.1, A.planetOrbitalYears[9] = 27.3 / 365.25, A.planetOrbitalYears[10] = 16.6890184 / 365.25, A.planetOrbitalYears[11] = 3.551181 / 365.25, A.planetOrbitalYears[12] = 7.15455296 / 365.25, A.planetOrbitalYears[13] = 16.6890184 / 365.25, A.planetOrbitalYears[19] = 1), !A.readOrbits())) {
            A._orbits = new Array(20);
            for (var e = 1; e < 20; e++)
              if (A._orbits[e] = new Array(A._orbitalSampleRate), e < 9 || e === 19) {
                for (var r = 0; r < A._orbitalSampleRate; r++) {
                  var a = t, s = A._jNow + A.planetOrbitalYears[e] * 365.25 / A._orbitalSampleRate * (r - A._orbitalSampleRate / 2), l = new L();
                  if (e === 9 ? a = -1 : e > 9 && e < 14 && (a = 4), a > -1) {
                    var h = $t.getPlanet(s, a, 0, 0, -6378149);
                    l = R.raDecTo3dAu(h.RA, h.dec, h.distance);
                  }
                  if (e !== 19) {
                    var u = $t.getPlanet(s, e, 0, 0, -6378149);
                    A._orbits[e][r] = R.raDecTo3dAu(u.RA, u.dec, u.distance), A._orbits[e][r].subtract(l);
                  } else
                    A._orbits[e][r] = L.create(-l.x, -l.y, -l.z);
                  A._orbits[e][r].rotateX(A._obliquity);
                }
                A._orbits[e][A._orbitalSampleRate - 1] = A._orbits[e][0];
              }
            A.dumpOrbitsFile();
          }
        } finally {
        }
      }, A.readOrbits = function() {
        return !1;
      }, A.dumpOrbitsFile = function() {
      }, A.drawPlanets = function(t, e) {
        A._planetTextures == null && A._loadPlanetTextures();
        var r = A._geocentricElongation(A._planetLocations[9].RA, A._planetLocations[9].dec, A._planetLocations[0].RA, A._planetLocations[0].dec);
        A._planetLocations[9].RA - A._planetLocations[0].RA, A._planetLocations[9].RA < A._planetLocations[0].RA, A._phaseAngle(r, A._planetLocations[9].distance, A._planetLocations[0].distance), A._positionAngle(A._planetLocations[9].RA, A._planetLocations[9].dec, A._planetLocations[0].RA, A._planetLocations[0].dec);
        var a = Math.abs(A._planetLocations[9].RA - A._planetLocations[0].RA) * 15 * Math.cos(R.degreesToRadians(A._planetLocations[0].dec)), s = Math.abs(A._planetLocations[9].dec - A._planetLocations[0].dec), l = Math.sqrt(a * a + s * s), h = 0, u = A._planetScales[9] / 2 - l;
        Math.min(32, n.truncate(l * 32)), u > A._planetScales[0] / 4 && (h = Math.min(1, (u - A._planetScales[0] / 2) / 1e-3), A._drawPlanet(t, 18, h));
        for (var _ = n.enumerate(n.keys(A._planetDrawOrder)); _.moveNext(); ) {
          var m = _.current, p = A._planetDrawOrder[m];
          A._drawPlanet(t, p, 1);
        }
        return !0;
      }, A._loadPlanetTextures = function() {
        var t = Kt.singleton.engineAssetUrl("");
        A._planetTextures = new Array(20), A._planetTextures[0] = A.loadPlanetTexture(t + "sun.png"), A._planetTextures[1] = A.loadPlanetTexture(t + "mercury.png"), A._planetTextures[2] = A.loadPlanetTexture(t + "venus.png"), A._planetTextures[3] = A.loadPlanetTexture(t + "mars.png"), A._planetTextures[4] = A.loadPlanetTexture(t + "jupiter.png"), A._planetTextures[5] = A.loadPlanetTexture(t + "saturn.png"), A._planetTextures[6] = A.loadPlanetTexture(t + "uranus.png"), A._planetTextures[7] = A.loadPlanetTexture(t + "neptune.png"), A._planetTextures[8] = A.loadPlanetTexture(t + "pluto.png"), A._planetTextures[9] = A.loadPlanetTexture(t + "moon.png"), A._planetTextures[10] = A.loadPlanetTexture(t + "io.png"), A._planetTextures[11] = A.loadPlanetTexture(t + "europa.png"), A._planetTextures[12] = A.loadPlanetTexture(t + "ganymede.png"), A._planetTextures[13] = A.loadPlanetTexture(t + "callisto.png"), A._planetTextures[14] = A.loadPlanetTexture(t + "moonshadow.png"), A._planetTextures[15] = A.loadPlanetTexture(t + "moonshadow.png"), A._planetTextures[16] = A.loadPlanetTexture(t + "moonshadow.png"), A._planetTextures[17] = A.loadPlanetTexture(t + "moonshadow.png"), A._planetTextures[18] = A.loadPlanetTexture(t + "sunCorona.png"), A._planetTextures[19] = A.loadPlanetTexture(t + "earth.png");
      }, A.drawPlanets3D = function(t, e, r) {
        A.initPlanetResources(t);
        var a = Oe.solarSystemToMeters(t.get_solarSystemCameraDistance());
        Math.min(1, Math.max(at.log10(a) - 7.3, 0));
        var s = Math.min(1, Math.max(at.log10(a) - 8.6, 0));
        if (z.get_active().get_solarSystemOrbits() && s > 0) {
          for (var l = 1; l < 10; l++) {
            var h = l;
            l === 9 && (h = 19);
            var u = Math.atan2(A._planet3dLocations[h].z, A._planet3dLocations[h].x);
            A._drawSingleOrbit(t, A.planetColors[h], h, r, u, A._planet3dLocations[h], s);
          }
          var _ = 9;
          A._drawSingleOrbit(t, A.planetColors[_], _, r, 0, A._planet3dLocations[_], s);
        }
        n.clearKeys(A._drawOrder);
        for (var m = t.cameraPosition.copy(), p = 0; p < 14; p++)
          if (!(z.get_active().get_solarSystemLighting() && A._planetLocations[p].eclipsed)) {
            var b = L.subtractVectors(m, L.subtractVectors(A._planet3dLocations[p], r));
            n.keyExists(A._drawOrder, b.length()) || (A._drawOrder[b.length()] = p);
          }
        var S = L.subtractVectors(m, L.subtractVectors(A._planet3dLocations[19], r));
        n.keyExists(A._drawOrder, S.length()) || (A._drawOrder[S.length()] = 19);
        for (var x = n.enumerate(n.keys(A._drawOrder)); x.moveNext(); ) {
          var k = x.current, p = A._drawOrder[k];
          A._drawPlanet3d(t, p, r);
        }
        return !0;
      }, A.getPlanetOrientationAtEpoch = function(t) {
        var e = H.get_identity(), r = 23.4392794;
        return t === 19 ? e._multiply(H._rotationX(r * A.RC)) : (e._multiply(H._rotationX(-90 * A.RC)), e._multiply(H._rotationZ((180 + A._planetAngles[t].primeMeridian) * A.RC)), e._multiply(H._rotationX((90 - A._planetAngles[t].poleDec) * A.RC)), e._multiply(H._rotationZ((A._planetAngles[t].poleRa - 90) * A.RC)), e._multiply(H._rotationX(r * A.RC)), e._multiply(H._rotationX(90 * A.RC))), e;
      }, A.setupPlanetMatrix = function(t, e, r, a) {
        var s = t.get_world().clone();
        if (A._setupMatrixForPlanetGeometry(t, e, r, a), e === 0) {
          var l = A.getAdjustedPlanetRadius(e);
          s.scale(L.create(l, l, l));
          var h = L.subtractVectors(A._planet3dLocations[e], r);
          s._multiply(H.translation(h)), t.set_worldBaseNonRotating(s);
        }
      }, A._setupMatrixForPlanetGeometry = function(t, e, r, a) {
        var s = A.getAdjustedPlanetRadius(e), l = 0;
        e === 19 ? l = Math.PI + R.mstFromUTC2(Z.get_now(), 0) / 180 * Math.PI : l = Math.PI + (A._jNow - 2451545) / A.planetRotationPeriod[e] * Math.PI * 2 % (Math.PI * 2), e === 9 && (l -= Math.PI / 2);
        var h = t.get_world().clone(), u = t.get_world().clone(), _ = L.subtractVectors(A._planet3dLocations[e], r), m = A.getPlanetOrientationAtEpoch(e);
        return h.scale(L.create(s, s, s)), h._multiply(H._rotationY(-l)), h._multiply(m), e === t.viewCamera.target && (A.earthMatrix = H.get_identity(), A.earthMatrix._multiply(H._rotationY(-l)), A.earthMatrix._multiply(m), A.earthMatrixInv = A.earthMatrix.clone(), A.earthMatrixInv.invert()), h._multiply(H.translation(_)), t.set_world(h), t.set_worldBase(t.get_world().clone()), t.set_nominalRadius(A.getPlanetRadiusInMeters(e)), a && t.makeFrustum(), u.scale(L.create(s, s, s)), u._multiply(m), u._multiply(H.translation(_)), t.set_worldBaseNonRotating(u), l;
      }, A.initPlanetResources = function(t) {
      }, A._drawSingleOrbit = function(t, e, r, a, s, l, h) {
        if (!(h < 0.01))
          if (t.gl == null) {
            var u = A._orbitalSampleRate, _ = !1;
            t.get_viewPoint();
            var m = t.device;
            m.save(), m.strokeStyle = e.toString(), m.lineWidth = 2, m.globalAlpha = 1;
            for (var p = new L(), b = new L(), S = new L(), x = !0, k = H.translation(L.negate(a)), P = H.multiplyMatrix(k, t.WVP), I = H.multiplyMatrix(k, t.WV), D = 0; D < u; D++) {
              var G = A._orbits[r][D], U = (Math.atan2(A._orbits[r][D].z, A._orbits[r][D].x) + Math.PI * 2 - s) % (Math.PI * 2), Y = n.truncate(U / (Math.PI * 2) * 255), j = Y / 255;
              Y < 2 && !_ && (G = l, j = 1), b = I.transform(G), p = P.transform(G), b.z > 0 && (x ? x = !1 : (m.beginPath(), m.globalAlpha = j * h, m.moveTo(S.x, S.y), m.lineTo(p.x, p.y), m.stroke())), S = p;
            }
            m.restore();
          } else if (r !== 9) {
            var u = A._orbitalSampleRate, _ = !1;
            t.get_viewPoint();
            for (var p = new L(), b = new L(), S = new L(), K = new B(), x = !0, Q = new gs(), D = 0; D < u; D++) {
              var G = A._orbits[r][D].copy(), U = (Math.atan2(G.z, G.x) + Math.PI * 2 - s) % (Math.PI * 2), Y = n.truncate(U / (Math.PI * 2) * 255), j = Y / 255, J = B.fromArgb(Y, e.r, e.g, e.b);
              Y < 2 && !_ && !x && (G = L.subtractVectors(l, a), j = 1, Y = 255, J.a = 255, K.a = 255, Q.addLine(S, G.copy(), K._clone(), J._clone()), K.a = 0, J.a = 0, G = A._orbits[r][D].copy(), _ = !0), G = L.subtractVectors(G, a), x ? x = !1 : Q.addLine(S, G, K, J), S = G, K = J._clone();
            }
            Q.drawLines(t, 1, ot.get_white()), Q.clear();
          } else {
            var nt = 0;
            switch (r) {
              case 9:
                nt = 398600.44189 + 4902.7779;
                break;
              case 10:
              case 11:
              case 12:
              case 13:
                nt = 126686534;
                break;
              default:
                nt = 1327124400188e-1;
                break;
            }
            var W = 1 / 1440 * 0.1, ct = A.getPlanetPositionDirect(r, A._jNow), rt = A.getPlanetPositionDirect(r, A._jNow - W), kt = L.scale(L.subtractVectors(ct, rt), 1 / W), At = A._stateVectorToKeplerian(ct, kt, nt);
            A._drawSingleOrbitElements(t, e, r, a, s, l, At);
          }
      }, A.getPlanetPositionDirect = function(t, e) {
        var r = 0, a = 0, s = 0;
        switch (t) {
          case 1:
            r = sr.eclipticLongitude(e), a = sr.eclipticLatitude(e), s = sr.radiusVector(e);
            break;
          case 2:
            r = hr.eclipticLongitude(e), a = hr.eclipticLatitude(e), s = hr.radiusVector(e);
            break;
          case 19:
            r = pe.eclipticLongitude(e), a = pe.eclipticLatitude(e), s = pe.radiusVector(e);
            break;
          case 3:
            r = qi.eclipticLongitude(e), a = qi.eclipticLatitude(e), s = qi.radiusVector(e);
            break;
          case 4:
            r = ai.eclipticLongitude(e), a = ai.eclipticLatitude(e), s = ai.radiusVector(e);
            break;
          case 5:
            r = Yi.eclipticLongitude(e), a = Yi.eclipticLatitude(e), s = Yi.radiusVector(e);
            break;
          case 6:
            r = ur.eclipticLongitude(e), a = ur.eclipticLatitude(e), s = ur.radiusVector(e);
            break;
          case 7:
            r = or.eclipticLongitude(e), a = or.eclipticLatitude(e), s = or.radiusVector(e);
            break;
          case 8:
            r = lr.eclipticLongitude(e), a = lr.eclipticLatitude(e), s = lr.radiusVector(e);
            break;
          case 9:
            r = Re.eclipticLongitude(e), a = Re.eclipticLatitude(e), s = Re.radiusVector(e) / 149598e3;
            break;
          case 10:
            var l = We.calculate(e), h = l.satellite1.eclipticRectangularCoordinates;
            return L.create(h.x, h.z, h.y);
          case 11:
            var l = We.calculate(e), h = l.satellite2.eclipticRectangularCoordinates;
            return L.create(h.x, h.z, h.y);
          case 12:
            var l = We.calculate(e), h = l.satellite3.eclipticRectangularCoordinates;
            return L.create(h.x, h.z, h.y);
          case 13:
            var l = We.calculate(e), h = l.satellite4.eclipticRectangularCoordinates;
            return L.create(h.x, h.z, h.y);
        }
        r = R.degreesToRadians(r), a = R.degreesToRadians(a);
        var u = L.create(Math.cos(r) * Math.cos(a) * s, Math.sin(r) * Math.cos(a) * s, Math.sin(a) * s), _ = (R.meanObliquityOfEcliptic(e) - R.meanObliquityOfEcliptic(2451545)) * A.RC;
        return u.rotateX(_), L.create(u.x, u.z, u.y);
      }, A._stateVectorToKeplerian = function(t, e, r) {
        var a = L.scale(t, 149598e3), s = L.scale(L.scale(e, 1 / 86400), 149598e3), l = a.length(), h = s.length(), u = 1 / (2 / l - h * h / r), _ = L.cross(a, s), m = L.subtractVectors(L.scale(L.cross(s, _), 1 / r), L.scale(a, 1 / l)), p = m.length();
        _.normalize(), m.normalize();
        var b = L.cross(_, m);
        a.normalize();
        var S = L.dot(m, a), x = L.dot(b, a), k = Math.atan2(Math.sqrt(1 - p * p) * x, p + S), P = new bs();
        return P.orientation = H.create(m.x, m.y, m.z, 0, b.x, b.y, b.z, 0, _.x, _.y, _.z, 0, 0, 0, 0, 1), P.a = u, P.e = p, P.ea = k, P;
      }, A._drawSingleOrbitElements = function(t, e, r, a, s, l, h) {
        var u;
        switch (r) {
          case 9:
            z.get_active().get_solarSystemScale() > 1 ? u = z.get_active().get_solarSystemScale() / 2 : u = 1;
            break;
          case 10:
          case 11:
          case 12:
          case 13:
            u = z.get_active().get_solarSystemScale();
            break;
          default:
            u = 1;
            break;
        }
        var _ = L.negate(a);
        r === 9 ? _.add(A._planet3dLocations[19]) : (r === 10 || r === 11 || r === 12 || r === 13) && _.add(A._planet3dLocations[4]);
        var m = L.subtractVectors(l, a), p = H.multiplyMatrix(H.multiplyMatrix(h.orientation, H.translation(_)), t.get_world());
        hi.drawEllipseWithPosition(t, h.a / 149598e3 * u, h.e, h.ea, e, p, m);
      }, A.isPlanetInFrustum = function(t, e) {
        var r = t.get_frustum();
        L.create(0, 0, 0);
        for (var a = new Yn(0, 0, 0, 1), s = 0; s < 6; s++)
          if (r[s].dot(a) + e < 0)
            return !1;
        return !0;
      }, A._drawPlanet3d = function(t, e, r) {
        e === 0 ? St.minLightingBrightness = 1 : (St.minLightingBrightness = 0.025, e === 19 ? St.atmosphereColor = B.fromArgb(255, 65, 157, 217) : St.atmosphereColor = B.fromArgb(0, 0, 0, 0));
        var a = t.get_world(), s = t.get_worldBase(), l = t.get_worldBaseNonRotating(), h = A.getAdjustedPlanetRadius(e);
        A.setupPlanetMatrix(t, e, r, !0);
        var u = 1;
        if (e === 5 && (u = 3), A.isPlanetInFrustum(t, u)) {
          t.get_world(), t.get_worldBase(), t.get_worldBaseNonRotating();
          var _ = A._planet3dLocations[0].copy(), m = A._planet3dLocations[e].copy();
          _ = a.transform(_), m = a.transform(m), t.set_world(a), t.set_worldBase(s), t.set_worldBaseNonRotating(l), A._setupMatrixForPlanetGeometry(t, e, r, !0);
          var p = L.subtractVectors(_, m);
          p.normalize(), t.set_sunPosition(p), St.sunPosition = L.subtractVectors(A._planet3dLocations[0], m);
          var b = L.subtractVectors(A._planet3dLocations[e], r);
          b.subtract(t.cameraPosition);
          var S = b.length(), x = 2 * Math.atan(0.5 * (h / S)) / Math.PI * 180, k = 0;
          if (x > 10.5 ? k = 0 : x > 3.9 ? k = 1 : x > 0.72 ? k = 2 : x > 0.05 ? k = 3 : k = 4, e === 19 && k < 2 && z.get_active().get_solarSystemScale() * 1e-5, k < 4) {
            var P = t.lighting;
            e === 5 && t.gl == null && (t.lighting = !1, A.drawSaturnsRings(t, !1, S), t.lighting = P), e || (t.lighting = !1), A._drawSphere(t, e), e === 5 && (t.gl == null ? (t.lighting = !1, A.drawSaturnsRings(t, !0, S)) : (t.lighting = !1, A._drawRings(t), t.lighting = P)), t.lighting = P;
          } else if (!e)
            A.drawPointPlanet(t, new L(), 10 * A._planetDiameters[e], A.planetColors[e], !0);
          else if (e < 9 || e === 19) {
            var I = 800 * A._planetDiameters[e];
            A.drawPointPlanet(t, new L(), Math.max(0.05, Math.min(0.1, I)), A.planetColors[e], !0);
          } else if (x > 2e-3) {
            var I = 800 * A._planetDiameters[e];
            A.drawPointPlanet(t, new L(), Math.max(0.05, Math.min(0.1, I)), A.planetColors[e], !0);
          }
        }
        T._draw(t, 1, !1, A.getNameFrom3dId(e), !0, !1), t.set_world(a), t.set_worldBase(s), t.set_worldBaseNonRotating(l);
      }, A.drawSaturnsRings = function(t, e, r) {
        if (A._ringsTriangleLists[0] == null) {
          A._ringImage = document.createElement("img");
          var a = A._ringImage;
          a.crossOrigin = "anonymous", A._ringImage.src = Kt.singleton.engineAssetUrl("saturnringsshadow.png"), A._ringsTriangleLists[0] = [], A._ringsTriangleLists[1] = [];
          var s = 2.25, l = L.create(-s, 0, -s), h = L.create(s, 0, -s), u = L.create(-s, 0, s), _ = L.create(s, 0, s);
          L.create(0, 0, 0), L.create(-s, 0, 0), L.create(0, 0, -s), L.create(0, 0, s), L.create(s, 0, 0);
          var m = 6, p;
          p = [];
          var b = 1024, S = 1024;
          p.push(dt.createPosSize(l, 0, 0, b, S)), p.push(dt.createPosSize(h, 1, 0, b, S)), p.push(dt.createPosSize(u, 0, 1, b, S)), p.push(dt.createPosSize(_, 1, 1, b, S));
          var x = [];
          x.push(Ae.create(0, 2, 1)), x.push(Ae.create(2, 3, 1));
          for (var k = 5; k-- > 1; ) {
            for (var P = [], I = n.enumerate(x); I.moveNext(); ) {
              var D = I.current;
              D.subDivideNoNormalize(P, p);
            }
            x = P;
          }
          for (var G = 0.6 / (b / 256), U = n.enumerate(x); U.moveNext(); ) {
            var D = U.current, Y = p[D.a], j = p[D.b], K = p[D.c];
            A._ringsTriangleLists[0].push(Bt.createWithMiter(Y, j, K, A._ringImage, m, G));
          }
        }
        if (t.gl == null) {
          t.cameraPosition;
          var Q = new L(), J = H.multiplyMatrix(H._rotationY(Math.atan2(t.get_sunPosition().x, t.get_sunPosition().z)), t.get_worldBaseNonRotating()), nt = H.multiplyMatrix(J, t.get_view()), W = H.multiplyMatrix(nt, t.get_projection()), b = t.width, S = t.height;
          W.scale(L.create(b / 2, -S / 2, 1)), W.translate(L.create(b / 2, S / 2, 0));
          for (var ct = 0, rt = 0; rt < 2; rt++) {
            for (var kt = n.enumerate(A._ringsTriangleLists[0]); kt.moveNext(); ) {
              var D = kt.current;
              Q = nt.transform(D.a.position), ct = Q.length();
              var At = ct > r;
              e && (At = !At), At && (D.opacity = 1, D.draw(t.device, W));
            }
            Bt.cullInside = !Bt.cullInside;
          }
        }
      }, A._drawRings = function(t) {
        A._initRings(), St.use(t, A._ringsVertexBuffer.vertexBuffer, null, A._ringsTexture.texture2d, 1, !1, L.zero), t.gl.drawArrays(5, 0, A._triangleCountRings);
      }, A._initRings = function() {
        if (A._ringsVertexBuffer == null) {
          A._ringsTexture = A.loadPlanetTexture(Kt.singleton.engineAssetUrl("saturnringsstrip.png"));
          var t = 1.113, e = 2.25;
          A._ringsVertexBuffer = new wn((192 + 1) * 2), A._triangleCountRings = (192 + 1) * 2;
          for (var r = A._ringsVertexBuffer.lock(), a = Math.PI * 2 / 192, s = 0, l = 0; l <= 192; l += 2) {
            var h = l * a, u = (l + 1) * a;
            r[s] = new dt(), r[s].position = L.create(Math.cos(h) * t, 0, Math.sin(h) * t), r[s].tu = 1, r[s].tv = 0, s++, r[s] = new dt(), r[s].position = L.create(Math.cos(h) * e, 0, Math.sin(h) * e), r[s].tu = 0, r[s].tv = 0, s++, r[s] = new dt(), r[s].position = L.create(Math.cos(u) * t, 0, Math.sin(u) * t), r[s].tu = 1, r[s].tv = 1, s++, r[s] = new dt(), r[s].position = L.create(Math.cos(u) * e, 0, Math.sin(u) * e), r[s].tu = 0, r[s].tv = 1, s++;
          }
          A._ringsVertexBuffer.unlock();
        }
      }, A.drawPointPlanet = function(t, e, r, a, s) {
        var l = e, h = r / 2;
        if (t.gl != null) {
          var u = new tr(t);
          u.minSize = 20, u.addPoint(e.copy(), a._clone(), new ve(0, 1), r / 100), u.depthBuffered = !0, u.draw(t, 1, !1);
        } else {
          var _ = t.WVP.transform(l);
          if (_.z < 0 || !s && L.dot(t.get_viewPoint(), l) < 0.55)
            return;
          var m = t.device;
          m.save(), m.beginPath(), m.arc(_.x, _.y, h, 0, Math.PI * 2, !0), m.lineWidth = 1, m.fillStyle = a.toString(), m.fill(), m.globalAlpha = 1, m.strokeStyle = a.toString(), m.stroke(), m.restore();
        }
      }, A.getAdjustedPlanetRadius = function(t) {
        t > A._planetDiameters.length - 1 && (t = 19);
        var e = A._planetDiameters[t], r = e / 2;
        return t ? r = r * (1 + 3 * (z.get_active().get_solarSystemScale() - 1)) : r = r * (1 + 0.3 * (z.get_active().get_solarSystemScale() - 1)), r;
      }, A.getPlanetRadiusInMeters = function(t) {
        t > A._planetDiameters.length - 1 && (t = 19);
        var e = A._planetDiameters[t];
        return e / 2 * 149598e3 * 1e3;
      }, A._drawPlanet = function(t, e, r) {
        var a = A._planetLocations[e];
        if (e < 14 && A._planetScales[e] < t.viewCamera.zoom / 6 / 400) {
          if (e < 10 || e < 14 && A._planetScales[e] > t.viewCamera.zoom / 6 / 6400) {
            var s = R.raDecTo3d(a.RA, a.dec);
            A.drawPointPlanet(t, s, 3, A.planetColors[e], !1);
          }
          return;
        }
        var l = null;
        if (e < 10 || e === 18)
          l = A._planetTextures[e];
        else if (e < 14)
          A._planetLocations[e].eclipsed ? l = A._planetTextures[15] : z.get_active().get_showMoonsAsPointSource() ? l = A._planetTextures[14] : l = A._planetTextures[e];
        else {
          if (!A._planetLocations[e].shadow)
            return;
          l = A._planetTextures[15];
        }
        if (t.gl != null) {
          if (A._planetPoints == null) {
            A._planetPoints = new Array(4);
            for (var h = 0; h < 4; h++)
              A._planetPoints[h] = new ne();
          }
          var u = A._planetScales[e] / 2, _ = u / Math.cos(a.dec / 180 * Math.PI);
          A._planetPoints[0].position = R.raDecTo3dAu(a.RA - _ / 15, a.dec + u, 1), A._planetPoints[0].tu = 0, A._planetPoints[0].tv = 1, A._planetPoints[0].color = ot.get_white(), A._planetPoints[1].position = R.raDecTo3dAu(a.RA - _ / 15, a.dec - u, 1), A._planetPoints[1].tu = 0, A._planetPoints[1].tv = 0, A._planetPoints[1].color = ot.get_white(), A._planetPoints[2].position = R.raDecTo3dAu(a.RA + _ / 15, a.dec + u, 1), A._planetPoints[2].tu = 1, A._planetPoints[2].tv = 1, A._planetPoints[2].color = ot.get_white(), A._planetPoints[3].position = R.raDecTo3dAu(a.RA + _ / 15, a.dec - u, 1), A._planetPoints[3].tu = 1, A._planetPoints[3].tv = 0, A._planetPoints[3].color = ot.get_white(), A._planetSprite.draw(t, A._planetPoints, 4, l, !0, 1);
        } else {
          var m = R.raDecTo3d(a.RA, a.dec), p = A._planetScales[e] / (t.get_fovScale() / 3600) / 2, b = t.WVP.transform(m);
          if (b.z < 0 || L.dot(t.get_viewPoint(), m) < 0.55)
            return;
          var S = t.device;
          S.save(), S.globalAlpha = r, S.beginPath(), S.arc(b.x, b.y, p, 0, Math.PI * 2, !0), S.lineWidth = 0, S.closePath(), S.clip(), S.drawImage(l.imageElement, b.x - p, b.y - p, p * 2, p * 2), S.globalAlpha = 1, S.restore();
        }
      }, A._drawPlanetPhase = function(t, e, r, a, s) {
      }, A._geocentricElongation = function(t, e, r, a) {
        return t = R.degreesToRadians(t * 15), r = R.degreesToRadians(r * 15), e = R.degreesToRadians(e), a = R.degreesToRadians(a), R.radiansToDegrees(Math.acos(Math.sin(a) * Math.sin(e) + Math.cos(a) * Math.cos(e) * Math.cos(r - t)));
      }, A._phaseAngle = function(t, e, r) {
        return t = R.degreesToRadians(t), R.mapTo0To360Range(R.radiansToDegrees(Math.atan2(r * Math.sin(t), e - r * Math.cos(t))));
      }, A._positionAngle = function(t, e, r, a) {
        return t = R.hoursToRadians(t), r = R.hoursToRadians(r), e = R.degreesToRadians(e), a = R.degreesToRadians(a), R.mapTo0To360Range(R.radiansToDegrees(Math.atan2(Math.cos(e) * Math.sin(t - r), Math.sin(e) * Math.cos(a) - Math.cos(e) * Math.sin(a) * Math.cos(t - r))));
      }, A._drawSphere = function(t, e) {
        var r = A.getImageSetNameNameFrom3dId(e), a = V.singleton.getImagesetByName(r);
        if (a == null && (a = V.singleton.getImagesetByName("Bing Maps Aerial")), a != null) {
          t.drawImageSet(a, 100);
          return;
        }
      };
      var yh = {};
      function Yr() {
        this.specularSharpness = 0, this.opacity = 0, this.isDefault = !1;
      }
      var Sh = {};
      function Ra() {
        this.aborted = !1;
      }
      var Ch = {};
      function fe() {
        this.height = 0, this.width = 0, this.lighting = !1, this._viewPoint = new L(), this.space = !1, this._fovAngle = 0, this._fovScale = 0, this._nominalRadius = 6378137, this._mainTexture = null, this.viewMover = null, this.viewCamera = new Me(), this.targetCamera = new Me(), this.alt = 0, this.az = 0, this.targetAlt = 0, this.targetAz = 0, this._backgroundImageset = null, this._foregroundImageset = null, this._activeCatalogHipsImagesets = [], this._targetHeight = 1, this.targetAltitude = 0, this._galactic = !0, this._galacticMatrix = H.create(-0.4838350155, -0.0548755604, -0.8734370902, 0, 0.7469822445, 0.4941094279, -0.44482963, 0, 0.4559837762, -0.867666149, -0.1980763734, 0, 0, 0, 0, 1), this._firstTimeInit = !1, this._useSolarSystemTilt = !0, this.customTrackingParams = new Me(), this._cameraOffset = new L(), this._fovLocal = Math.PI / 4, this.perspectiveFov = Math.PI / 4, this.nearPlane = 0, this._frustumDirty = !0, this._frustum = new Array(6), this._ambientLightColor = ot.get_black(), this._hemiLightColor = ot.get_black(), this._hemiLightUp = new L(), this._sunlightColor = ot.get_white(), this._sunPosition = new L(), this._reflectedLightColor = ot.get_black(), this._reflectedLightPosition = new L(), this._occludingPlanetRadius = 0, this._occludingPlanetPosition = new L(), this._lightingStateDirty = !0, this._twoSidedLighting = !1, this.cameraPosition = new L(), this._skyColor = "Blue";
        for (var t = 0; t < 6; t++)
          this._frustum[t] = new _s(0, 0, 0, 0);
      }
      fe.create = function(t) {
        var e = new fe();
        return e.device = t, e.viewCamera.zoom = 700, e.viewCamera.target = 65536, e;
      }, fe.getTilesYForLevel = function(t, e) {
        var r = 1;
        switch (t.get_projection()) {
          case 0:
            r = Math.pow(2, e);
            break;
          case 1:
            r = Math.pow(2, e) * (180 / t.get_baseTileDegrees());
            break;
          case 2:
            r = Math.pow(2, e);
            break;
          case 4:
            r = 1;
            break;
          case 7:
            r = 4 * Math.pow(2, e);
            break;
          default:
            r = Math.pow(2, e);
            break;
        }
        return r === Number.POSITIVE_INFINITY && (r = 1), r;
      }, fe.getTilesXForLevel = function(t, e) {
        var r = 1;
        switch (t.get_projection()) {
          case 6:
          case 3:
            r = Math.pow(2, e);
            break;
          case 0:
            r = Math.pow(2, e) * n.truncate(t.get_baseTileDegrees() / 360);
            break;
          case 1:
            r = Math.pow(2, e) * n.truncate(360 / t.get_baseTileDegrees());
            break;
          case 2:
            t.get_widthFactor() === 1 ? r = Math.pow(2, e) * 2 : r = Math.pow(2, e);
            break;
          case 5:
            r = 1;
            break;
          case 4:
            r = 1;
            break;
          case 7:
            r = Math.pow(2, e) * 3;
            break;
          default:
            r = Math.pow(2, e) * 2;
            break;
        }
        return r;
      };
      var Mh = {
        save: function() {
          this.gl != null || this.device.save();
        },
        restore: function() {
          this.gl != null || this.device.restore();
        },
        clear: function() {
          this.gl != null ? (this.gl.viewport(0, 0, n.truncate(this.width), n.truncate(this.height)), this.gl.clear(16640)) : (this.device.save(), this.device.fillStyle = "black", this.device.fillRect(0, 0, this.width, this.height), this.device.restore());
        },
        get_viewPoint: function() {
          return this._viewPoint;
        },
        get_RA: function() {
          return ((180 - (this.viewCamera.lng - 180)) / 15 % 24 + 48) % 24;
        },
        rAtoViewLng: function(t) {
          return 180 - t / 24 * 360 - 180;
        },
        get_dec: function() {
          return this.viewCamera.lat;
        },
        get_fovAngle: function() {
          return this._fovAngle;
        },
        get_fovScale: function() {
          return this._fovScale;
        },
        set_fovScale: function(t) {
          return this._fovScale = t, t;
        },
        get_view: function() {
          return this._view;
        },
        set_view: function(t) {
          return this._view = t, this._frustumDirty = !0, t;
        },
        get_viewBase: function() {
          return this._viewBase;
        },
        set_viewBase: function(t) {
          return this._viewBase = t, t;
        },
        get_projection: function() {
          return this._projection;
        },
        set_projection: function(t) {
          return this._projection = t, this._frustumDirty = !0, t;
        },
        get_world: function() {
          return this._world;
        },
        set_world: function(t) {
          return this._world = t, this._frustumDirty = !0, t;
        },
        _getScreenTexture: function() {
          var t = null;
          return t;
        },
        get_worldBase: function() {
          return this._worldBase;
        },
        set_worldBase: function(t) {
          return this._worldBase = t, t;
        },
        get_worldBaseNonRotating: function() {
          return this._worldBaseNonRotating;
        },
        set_worldBaseNonRotating: function(t) {
          return this._worldBaseNonRotating = t, t;
        },
        get_nominalRadius: function() {
          return this._nominalRadius;
        },
        set_nominalRadius: function(t) {
          return this._nominalRadius = t, t;
        },
        get_mainTexture: function() {
          return this._mainTexture;
        },
        set_mainTexture: function(t) {
          return t != null && (this._mainTexture = t, this.gl.bindTexture(3553, this._mainTexture.texture2d)), t;
        },
        onTarget: function(t) {
          return Math.abs(this.viewCamera.lat - this.targetCamera.lat) < 1e-12 && Math.abs(this.viewCamera.lng - this.targetCamera.lng) < 1e-12 && Math.abs(this.viewCamera.zoom - this.targetCamera.zoom) < 1e-12 && this.viewMover == null;
        },
        setTexture: function(t) {
        },
        get_backgroundImageset: function() {
          return this._backgroundImageset;
        },
        set_backgroundImageset: function(t) {
          var e = this._backgroundImageset != null && t != null && this._backgroundImageset.get_dataSetType() !== t.get_dataSetType();
          return this._backgroundImageset = t, e && (V.singleton._freezeView(), V.singleton.clampZooms(this)), t;
        },
        get_foregroundImageset: function() {
          return this._foregroundImageset;
        },
        set_foregroundImageset: function(t) {
          return this._foregroundImageset = t, t;
        },
        get_catalogHipsImagesets: function() {
          return this._activeCatalogHipsImagesets;
        },
        getCatalogHipsDataInView: function(t, e, r) {
          var a = this, s = new Xa(), l = function() {
            s.useHeadersFromVoTable(t.get_hipsProperties().get_catalogColumnInfo()), a._tryGetAllDataInView(t, e, s, r, 0);
          };
          t.get_hipsProperties() == null ? (t.set_hipsProperties(new Xn(t)), t.get_hipsProperties().setDownloadCompleteListener(l)) : t.get_hipsProperties() != null && t.get_hipsProperties().get_downloadComplete() ? l() : t.get_hipsProperties().setDownloadCompleteListener(l);
        },
        _tryGetAllDataInView: function(t, e, r, a, s) {
          for (var l = this, h = fe.getTilesXForLevel(t, t.get_baseLevel()), u = fe.getTilesYForLevel(t, t.get_baseLevel()), _ = !1, m = 0; m < h; m++)
            for (var p = 0; p < u; p++) {
              var b = vt.getTile(t.get_baseLevel(), m, p, t, null);
              if (b != null) {
                var S = b.getDataInView(this, e, r);
                _ = _ || !S;
              } else
                _ = !0;
            }
          if (_) {
            var x = r.get__table().rows.length;
            if ((x > 1e4 || s > 100 * 60 * 5) && e) {
              console.log("Too Many results - Aborting"), console.log(x);
              var k = new Ra();
              k.aborted = !0, k.table = r.getTableDataInView(), a(k), r.cleanUp();
            } else
              setTimeout(function() {
                l._tryGetAllDataInView(t, e, r, a, s);
              }, 10), s % 200 || (console.log("Waiting for more tiles to load"), console.log(x)), s++;
          } else {
            var x = r.get__table().rows.length;
            console.log("Done!"), console.log(x);
            var k = new Ra();
            k.aborted = !1, k.table = r.getTableDataInView(), a(k), r.cleanUp();
          }
        },
        addCatalogHips: function(t, e) {
          this._activeCatalogHipsImagesets.indexOf(t) >= 0 || this._activeCatalogHipsImagesets.push(t), t.get_hipsProperties() == null ? (t.set_hipsProperties(new Xn(t)), t.get_hipsProperties().setDownloadCompleteListener(e)) : t.get_hipsProperties() != null && t.get_hipsProperties().get_downloadComplete() && (T.addSpreadsheetLayer(t.get_hipsProperties().get_catalogSpreadSheetLayer(), "Sky"), e != null && e());
        },
        removeCatalogHips: function(t) {
          n.remove(this._activeCatalogHipsImagesets, t), t.get_hipsProperties() != null && T.deleteLayerByID(t.get_hipsProperties().get_catalogSpreadSheetLayer().id, !0, !0);
        },
        getCatalogHipsByName: function(t) {
          for (var e = n.enumerate(this._activeCatalogHipsImagesets); e.moveNext(); ) {
            var r = e.current;
            if (r.get_name() === t)
              return r;
          }
          return null;
        },
        getAltitudeForLatLongForPlanet: function(t, e, r) {
          var a = V.singleton.getImagesetByName(A.getNameFrom3dId(t));
          if (a == null)
            return 0;
          for (var s = fe.getTilesXForLevel(a, a.get_baseLevel()), l = fe.getTilesYForLevel(a, a.get_baseLevel()), h = 0; h < s; h++)
            for (var u = 0; u < l; u++) {
              var _ = vt.getTile(a.get_baseLevel(), h, u, a, null);
              if (_ != null && _.isPointInTile(e, r))
                return _.getSurfacePointAltitude(e, r, !0);
            }
          return 0;
        },
        getEarthAltitude: function(t, e, r) {
          if (V.singleton.get_solarSystemMode()) {
            var a = R.geoTo3dDouble(t, e + 90), s = A.earthMatrixInv;
            a = L._transformCoordinate(a, s), a.normalize();
            var l = R.cartesianToLatLng(a);
            return this.getAltitudeForLatLongForPlanet(this.viewCamera.target, l.y, l.x);
          } else
            return this.get_backgroundImageset().get_dataSetType() ? 0 : r ? this.getMetersAltitudeForLatLong(t, e) : this.getScaledAltitudeForLatLong(t, e);
        },
        drawImageSet: function(t, e) {
          for (var r = fe.getTilesXForLevel(t, t.get_baseLevel()), a = fe.getTilesYForLevel(t, t.get_baseLevel()), s = 0; s < r; s++)
            for (var l = 0; l < a; l++) {
              var h = vt.getTile(t.get_baseLevel(), s, l, t, null);
              h != null && h.draw3D(this, e);
            }
        },
        _getTileAtLatLong: function(t, e) {
          var r = this.get_backgroundImageset();
          if (r == null)
            return null;
          for (var a = fe.getTilesXForLevel(r, r.get_baseLevel()), s = fe.getTilesYForLevel(r, r.get_baseLevel()), l = 0; l < a; l++)
            for (var h = 0; h < s; h++) {
              var u = vt.getTile(r.get_baseLevel(), l, h, r, null);
              if (u != null && u.isPointInTile(t, e))
                return u;
            }
          return null;
        },
        getScaledAltitudeForLatLong: function(t, e) {
          var r = this._getTileAtLatLong(t, e);
          return r != null ? r.getSurfacePointAltitude(t, e, !1) : 0;
        },
        getMetersAltitudeForLatLong: function(t, e) {
          var r = this._getTileAtLatLong(t, e);
          return r != null ? r.getSurfacePointAltitude(t, e, !0) : 0;
        },
        _setupMatricesLand3d: function() {
          this.lighting = !1, this.space = !1, Bt.cullInside = !1;
          var t = H._rotationY((this.viewCamera.lng - 90) / 180 * Math.PI);
          t._multiply(H._rotationX(-this.viewCamera.lat / 180 * Math.PI)), this.set_world(t), this.set_worldBase(t.clone()), this._viewPoint = R.geoTo3d(this.viewCamera.lat, this.viewCamera.lng);
          var e = 0;
          if (this._backgroundImageset.get_isMandelbrot() ? e = 4 * (this.viewCamera.zoom / 180) + 1e-41 : e = 4 * (this.viewCamera.zoom / 180) + 1e-6, this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / this.height * 3600, this.gl != null) {
            this.targetAltitude = this.getScaledAltitudeForLatLong(this.viewCamera.lat, this.viewCamera.lng);
            var r = 1 + this.targetAltitude;
            this.targetAltitude *= this.get_nominalRadius(), this._targetHeight < r ? this._targetHeight = (this._targetHeight * 2 + r) / 3 : this._targetHeight = (this._targetHeight * 9 + r) / 10;
          } else
            this.targetAltitude = 0, this._targetHeight = 1;
          var a = this.viewCamera.rotation;
          this.cameraPosition = L.create(Math.sin(a) * Math.sin(this.viewCamera.angle) * e, Math.cos(a) * Math.sin(this.viewCamera.angle) * e, -this._targetHeight - Math.cos(this.viewCamera.angle) * e);
          var s = L.create(0, 0, -this._targetHeight);
          this.cameraPosition.length();
          var l = L.create(Math.sin(a) * Math.cos(this.viewCamera.angle), Math.cos(a) * Math.cos(this.viewCamera.angle), Math.sin(this.viewCamera.angle));
          this.set_view(H.lookAtLH(this.cameraPosition, s, l)), this.set_viewBase(this.get_view());
          var h = Math.sqrt((e + 1) * (e + 1) - 1);
          h = Math.max(0.5, h);
          var u = e * 0.05;
          u = e * 0.05, this.set_projection(H.perspectiveFovLH(Math.PI / 4, this.width / this.height, u, h)), this._setMatrixes(), this.makeFrustum();
        },
        setupMatricesSpace3d: function(t, e) {
          this.lighting = !1, this._firstTimeInit || (this._galacticMatrix = H.get_identity(), this._galacticMatrix._multiply(H._rotationY(-(270 - 17.7603329867975 * 15) / 180 * Math.PI)), this._galacticMatrix._multiply(H._rotationX(28.9361739586894 / 180 * Math.PI)), this._galacticMatrix._multiply(H._rotationZ((31.422052860102 - 90) / 180 * Math.PI)), this._firstTimeInit = !0), this.space = !0, Bt.cullInside = !0;
          var r = H.get_identity();
          if (z.get_active().get_galacticMode()) {
            r._multiply(this._galacticMatrix), r._multiply(H._rotationY(this.az / 180 * Math.PI)), r._multiply(H._rotationX(-this.alt / 180 * Math.PI));
            var a = R.galactictoJ2000(this.az, this.alt);
            this._viewPoint = R.raDecTo3dAu(a[0] / 15, a[1], 1), this.targetCamera.lng = this.rAtoViewLng(a[0] / 15), this.targetCamera.lat = a[1], this.viewCamera.lat = this.targetCamera.lat, this.viewCamera.lng = this.targetCamera.lng;
          } else
            r._multiply(H._rotationY(-(this.viewCamera.lng - 90) / 180 * Math.PI)), r._multiply(H._rotationX(-this.viewCamera.lat / 180 * Math.PI)), this._viewPoint = R.raDecTo3dAu(this.get_RA(), this.get_dec(), 1);
          var s = this.viewCamera.rotation;
          if (this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / e * 3600, z.get_active().get_localHorizonMode() && this._backgroundImageset.get_dataSetType() === 2) {
            var l = new R(0, 0);
            l.set_az(0), l.set_alt(0);
            var h = R.horizonToEquitorial(l, Z.get_location(), Z.get_now()), u = -((h.get_RA() - 6) / 24 * (Math.PI * 2)), _ = -(h.get_dec() / 360 * (Math.PI * 2));
            R.formatDMS(h.get_RA()), r = H._rotationY(-u - Math.PI), r._multiply(H._rotationX(_)), Z.get_location().get_lat() < 0 ? (r._multiply(H._rotationY(this.az / 180 * Math.PI)), r._multiply(H._rotationX(this.alt / 180 * Math.PI)), s += Math.PI) : (r._multiply(H._rotationY(-this.az / 180 * Math.PI)), r._multiply(H._rotationX(-this.alt / 180 * Math.PI)));
            var m = R.horizonToEquitorial(R.fromLatLng(this.alt, this.az), Z.get_location(), Z.get_now());
            this.viewCamera.lat = this.targetCamera.lat = m.get_dec(), this.viewCamera.lng = this.targetCamera.lng = this.rAtoViewLng(m.get_RA());
          }
          this.set_world(r), this.set_worldBase(r.clone());
          var p = this.viewCamera.zoom;
          this.cameraPosition = L.create(0, 0, 0), this.set_view(H.lookAtLH(this.cameraPosition, L.create(0, 0, -1), L.create(Math.sin(s), Math.cos(s), 0))), this.set_viewBase(this.get_view().clone()), this.nearPlane = 0.1, this.set_projection(H.perspectiveFovLH(p / 343.774, t / e, 0.1, -2)), this._setMatrixes(), this.makeFrustum();
        },
        get_solarSystemTrack: function() {
          return this.viewCamera.target;
        },
        set_solarSystemTrack: function(t) {
          return this.viewCamera.target = t, t;
        },
        get_solarSystemCameraDistance: function() {
          return 4 * (this.viewCamera.zoom / 9) + 1e-6;
        },
        get_sandboxMode: function() {
          return this._backgroundImageset == null ? !1 : this._backgroundImageset.get_dataSetType() === 5;
        },
        get_trackingFrame: function() {
          return this.viewCamera.targetReferenceFrame;
        },
        set_trackingFrame: function(t) {
          return this.viewCamera.targetReferenceFrame = t, t;
        },
        get_fovLocal: function() {
          return this._fovLocal;
        },
        set_fovLocal: function(t) {
          return this._fovLocal = t, t;
        },
        setupMatricesOverlays: function() {
          this.set_world(H.get_identity()), H.get_identity();
          var t = L.create(0, 0, 0), e = L.create(0, 0, 1), r = L.create(0, 1, 0), a;
          a = H.lookAtLH(t, e, r), a._multiply(H._scaling(1, -1, 1)), this.set_view(a);
          var s = 1e4;
          this.nearPlane = 0.1, this.set_projection(H.perspectiveFovLH(this._fovLocal, this.width / this.height, this.nearPlane, s));
        },
        setupMatricesSolarSystem: function(t) {
          this.lighting = z.get_active().get_solarSystemLighting(), this.space = !1, this.get_solarSystemTrack() !== 20 && this.get_solarSystemTrack() !== 65536 && (this.viewCamera.viewTarget = A.getPlanetTargetPoint(this.get_solarSystemTrack(), this.viewCamera.lat, this.viewCamera.lng, 0)), Bt.cullInside = !1;
          var e = this.get_solarSystemCameraDistance(), r = H.get_identity();
          if (e -= 1e-6, this.get_solarSystemTrack() === 20 && !n.emptyString(this.get_trackingFrame())) {
            var a = T._getFrameTarget(this, this.get_trackingFrame());
            this.viewCamera.viewTarget = a.target, r = a.matrix;
          } else
            n.emptyString(this.get_trackingFrame()) || this.set_trackingFrame("");
          this.viewCamera.viewTarget, this.viewCamera.zoom * 20;
          var s = new L(), l = H.get_identity();
          l._multiply(H._rotationX(-this.viewCamera.lat / 180 * Math.PI)), l._multiply(H._rotationY(-this.viewCamera.lng / 180 * Math.PI));
          var h = H.get_identity(), u;
          if (this._useSolarSystemTilt && !this.get_sandboxMode()) {
            var _ = this.viewCamera.angle;
            if (e > 8e-4)
              _ = 0;
            else if (e > 1e-5) {
              var m = Math.min(1.903089987, at.log10(e) + 5) / 1.903089987;
              _ = _ * Math.max(0, 1 - m);
            }
            this.cameraPosition = L.create(Math.sin(-this.viewCamera.rotation) * Math.sin(_) * e, Math.cos(-this.viewCamera.rotation) * Math.sin(_) * e, Math.cos(_) * e), u = L.create(Math.sin(-this.viewCamera.rotation), Math.cos(-this.viewCamera.rotation), 1e-5);
          } else
            this.cameraPosition = L.create(0, 0, e), u = L.create(Math.sin(-this.viewCamera.rotation), Math.cos(-this.viewCamera.rotation), 1e-4);
          this.cameraPosition = l.transform(this.cameraPosition), this._cameraOffset = this.cameraPosition.copy();
          var p = r.clone();
          p.invert(), this._cameraOffset = L._transformCoordinate(this._cameraOffset, p), u = l.transform(u), this.set_world(H.get_identity()), this.set_worldBase(H.get_identity()), this.set_worldBaseNonRotating(H.get_identity()), this.set_view(H.multiplyMatrix(H.multiplyMatrix(r, H.lookAtLH(this.cameraPosition, s, u)), h)), this.set_viewBase(this.get_view().clone());
          var b = L.subtractVectors(s, this.cameraPosition);
          b.normalize(), b = L._transformCoordinate(b, r), b.normalize(), this._viewPoint = b;
          var S = A.getAdjustedPlanetRadius(this.get_solarSystemTrack());
          e < S * 2 && !t ? (this.nearPlane = e * 0.03, this.nearPlane = Math.max(this.nearPlane, 1e-11), fe.back = 1900) : t ? (fe.back = 900056, fe.back = e > 900056 ? e * 3 : 900056, this.nearPlane = 3e-5) : (fe.back = e > 1900 ? e + 200 : 1900, z.get_active().get_solarSystemScale() < 13 ? this.nearPlane = Math.min(e * 0.03, 0.01) : this.nearPlane = 1e-3), this.set_projection(H.perspectiveFovLH(this._fovLocal, this.width / this.height, this.nearPlane, fe.back)), this.perspectiveFov = this._fovLocal, this._fovAngle = this.viewCamera.zoom / 343.774 / Math.PI * 180, this._fovScale = this._fovAngle / this.height * 3600, this._setMatrixes(), this.makeFrustum();
        },
        _setMatrixes: function() {
        },
        get_frustum: function() {
          return this._frustum;
        },
        get_ambientLightColor: function() {
          return this._ambientLightColor;
        },
        set_ambientLightColor: function(t) {
          return this._ambientLightColor = t, this._lightingStateDirty = !0, t;
        },
        get_hemisphereLightColor: function() {
          return this._hemiLightColor;
        },
        set_hemisphereLightColor: function(t) {
          return this._hemiLightColor = t, this._lightingStateDirty = !0, t;
        },
        get_hemisphereLightUp: function() {
          return this._hemiLightUp;
        },
        set_hemisphereLightUp: function(t) {
          return this._hemiLightUp = t, this._lightingStateDirty = !0, t;
        },
        get_sunlightColor: function() {
          return this._sunlightColor;
        },
        set_sunlightColor: function(t) {
          return this._sunlightColor = t, this._lightingStateDirty = !0, t;
        },
        get_sunPosition: function() {
          return this._sunPosition;
        },
        set_sunPosition: function(t) {
          return this._sunPosition = t, this._lightingStateDirty = !0, t;
        },
        get_reflectedLightColor: function() {
          return this._reflectedLightColor;
        },
        set_reflectedLightColor: function(t) {
          return this._reflectedLightColor !== t && (this._reflectedLightColor = t, this._lightingStateDirty = !0), t;
        },
        get_reflectedLightPosition: function() {
          return this._reflectedLightPosition;
        },
        set_reflectedLightPosition: function(t) {
          return this._reflectedLightPosition = t, this._lightingStateDirty = !0, t;
        },
        get_occludingPlanetRadius: function() {
          return this._occludingPlanetRadius;
        },
        set_occludingPlanetRadius: function(t) {
          return this._occludingPlanetRadius = t, t;
        },
        get_occludingPlanetPosition: function() {
          return this._occludingPlanetPosition;
        },
        set_occludingPlanetPosition: function(t) {
          return this._occludingPlanetPosition = t, t;
        },
        get_twoSidedLighting: function() {
          return this._twoSidedLighting;
        },
        set_twoSidedLighting: function(t) {
          return t !== this._twoSidedLighting && (this._twoSidedLighting = t, this._lightingStateDirty = !0), t;
        },
        makeFrustum: function() {
          this.WV = H.multiplyMatrix(this.get_world(), this.get_view());
          var t = H.multiplyMatrix(this.WV, this.get_projection());
          this.WVP = t.clone();
          var e = this.get_world().clone();
          e.invert(), this._frustum[0].a = t.get_m14() + t.get_m11(), this._frustum[0].b = t.get_m24() + t.get_m21(), this._frustum[0].c = t.get_m34() + t.get_m31(), this._frustum[0].d = t.get_m44() + t.get_m41(), this._frustum[1].a = t.get_m14() - t.get_m11(), this._frustum[1].b = t.get_m24() - t.get_m21(), this._frustum[1].c = t.get_m34() - t.get_m31(), this._frustum[1].d = t.get_m44() - t.get_m41(), this._frustum[2].a = t.get_m14() - t.get_m12(), this._frustum[2].b = t.get_m24() - t.get_m22(), this._frustum[2].c = t.get_m34() - t.get_m32(), this._frustum[2].d = t.get_m44() - t.get_m42(), this._frustum[3].a = t.get_m14() + t.get_m12(), this._frustum[3].b = t.get_m24() + t.get_m22(), this._frustum[3].c = t.get_m34() + t.get_m32(), this._frustum[3].d = t.get_m44() + t.get_m42(), this._frustum[4].a = t.get_m13(), this._frustum[4].b = t.get_m23(), this._frustum[4].c = t.get_m33(), this._frustum[4].d = t.get_m43(), this._frustum[5].a = t.get_m14() - t.get_m13(), this._frustum[5].b = t.get_m24() - t.get_m23(), this._frustum[5].c = t.get_m34() - t.get_m33(), this._frustum[5].d = t.get_m44() - t.get_m43();
          for (var r = 0; r < 6; r++)
            this._frustum[r].normalize();
          this._frustumDirty = !1, this.WVP.scale(L.create(this.width / 2, -this.height / 2, 1)), this.WVP.translate(L.create(this.width / 2, this.height / 2, 0)), this._setMatrixes();
        },
        _initGL: function() {
          this.gl != null && (this.gl.getExtension("OES_element_index_uint"), F.uvMultiple = 1, F.demEnabled = !0, St.init(this));
        },
        freezeView: function() {
          this.targetAlt = this.alt, this.targetAz = this.az, this.targetCamera = this.viewCamera.copy();
        },
        _setVertexBuffer: function(t) {
        },
        _setIndexBuffer: function(t) {
        },
        setMaterial: function(t, e, r, a, s) {
          this.set_mainTexture(e);
        },
        preDraw: function() {
        }
      };
      function Bt() {
        this.a = new dt(), this.b = new dt(), this.c = new dt(), this.normal = new L(), this.opacity = 1, this.expansionInPixels = 0.6, this.tileLevel = 0, this._ta = new L(), this._tb = new L(), this._tc = new L(), this._expandedS0 = new lt(), this._expandedS1 = new lt(), this._expandedS2 = new lt(), this.lighting = 1;
      }
      Bt.create = function(t, e, r, a, s) {
        var l = new Bt();
        return l.a = t.copy(), l.b = e.copy(), l.c = r.copy(), l._texture = a, l.tileLevel = s, l.makeNormal(), l;
      }, Bt.createWithMiter = function(t, e, r, a, s, l) {
        var h = new Bt();
        return h.expansionInPixels = l, h.a = t.copy(), h.b = e.copy(), h.c = r.copy(), h._texture = a, h.tileLevel = s, h.makeNormal(), h;
      }, Bt._getMiterPoint = function(t, e, r, a) {
        var s = lt.subtract(e, t), l = lt.subtract(r, t);
        s.normalize(), l.normalize();
        var h = lt.create(s.x + l.x, s.y + l.y);
        h.normalize();
        var u = lt.create(s.x - l.x, s.y - l.y), _ = u.get_length() / 2, m = Math.min(2, a / _);
        return h.extend(m), lt.create(t.x - h.x, t.y - h.y);
      }, Bt._miterPoint = function(t, e, r, a, s, l, h) {
        var u = r - t, _ = a - e, m = s - t, p = l - e, b = Math.sqrt(u * u + _ * _);
        b && (u /= b, _ /= b), b = Math.sqrt(m * m + p * p), b && (m /= b, p /= b);
        var S = u + m, x = _ + p;
        b = Math.sqrt(S * S + x * x), b && (S /= b, x /= b);
        var k = u - m, P = _ - p;
        b = Math.sqrt(k * k + P * P);
        var I = b / 2, D = Math.min(2, h / I);
        return S *= D, x *= D, lt.create(t - S, e - x);
      }, Bt._miterPointOut = function(t, e, r, a, s, l, h, u) {
        var _ = a - e, m = s - r, p = l - e, b = h - r, S = Math.sqrt(_ * _ + m * m);
        S && (_ /= S, m /= S), S = Math.sqrt(p * p + b * b), S && (p /= S, b /= S);
        var x = _ + p, k = m + b;
        S = Math.sqrt(x * x + k * k), S && (x /= S, k /= S);
        var P = _ - p, I = m - b;
        S = Math.sqrt(P * P + I * I);
        var D = S / 2, G = Math.min(2, u / D);
        x *= G, k *= G, t.x = e - x, t.y = r - k;
      };
      var Th = {
        makeNormal: function() {
          var t = this.a.position.copy(), e = this.b.position.copy(), r = this.c.position.copy();
          t.normalize(), e.normalize(), r.normalize();
          var a = t.x + e.x + r.x, s = t.y + e.y + r.y, l = t.z + e.z + r.z;
          this.normal = L.create(a / 3, s / 3, l / 3), this.normal.normalize();
        },
        _checkBackface: function() {
          var t = L.subtractVectors(this._ta, this._tb), e = L.subtractVectors(this._ta, this._tc), r = L.cross(t, e);
          return r.normalize(), r.z >= 0;
        },
        draw: function(t, e) {
          if (t != null) {
            if (e._transformTo(this.a.position, this._ta), e._transformTo(this.b.position, this._tb), e._transformTo(this.c.position, this._tc), this._checkBackface() === Bt.cullInside) {
              Bt.trianglesCulled++;
              return;
            }
            this._drawTriangle(t, this._texture, this._ta.x, this._ta.y, this._tb.x, this._tb.y, this._tc.x, this._tc.y, this.a.tu, this.a.tv, this.b.tu, this.b.tv, this.c.tu, this.c.tv);
          }
        },
        _drawTriangle: function(t, e, r, a, s, l, h, u, _, m, p, b, S, x) {
          if (!this.intersects(0, Bt.width, 0, Bt.height, r, a, s, l, h, u))
            return !1;
          Bt._miterPointOut(this._expandedS0, r, a, s, l, h, u, this.expansionInPixels), Bt._miterPointOut(this._expandedS1, s, l, r, a, h, u, this.expansionInPixels), Bt._miterPointOut(this._expandedS2, h, u, s, l, r, a, this.expansionInPixels), r = this._expandedS0.x, a = this._expandedS0.y, s = this._expandedS1.x, l = this._expandedS1.y, h = this._expandedS2.x, u = this._expandedS2.y, t.save(), Bt.renderingOn && (t.beginPath(), t.moveTo(r, a), t.lineTo(s, l), t.lineTo(h, u), t.closePath(), t.clip());
          var k = _ * (x - b) - p * x + S * b + (p - S) * m, P = -(m * (h - s) - b * h + x * s + (b - x) * r) / k, I = (b * u + m * (l - u) - x * l + (x - b) * a) / k, D = (_ * (h - s) - p * h + S * s + (p - S) * r) / k, G = -(p * u + _ * (l - u) - S * l + (S - p) * a) / k, U = (_ * (x * s - b * h) + m * (p * h - S * s) + (S * b - p * x) * r) / k, Y = (_ * (x * l - b * u) + m * (p * u - S * l) + (S * b - p * x) * a) / k;
          return t.transform(P, I, D, G, U, Y), Bt.renderingOn && (t.globalAlpha = this.opacity, this.lighting < 1 && (t.globalAlpha = 1, t.fillStyle = "Black", t.fillRect(0, 0, Bt.width, Bt.height), t.globalAlpha = this.lighting * this.opacity), t.drawImage(e, 0, 0)), t.restore(), !0;
        },
        intersects: function(t, e, r, a, s, l, h, u, _, m) {
          if (s > t && s < e && l > r && l < a || h > t && h < e && u > r && u < a || _ > t && _ < e && m > r && m < a)
            return !0;
          var p = Bt.height * 4;
          return this.tileLevel < 4 && (Math.abs(s - h) > p || Math.abs(l - u) > p || Math.abs(_ - h) > p || Math.abs(m - u) > p || Math.abs(s - _) > p || Math.abs(l - m) > p) ? !1 : this.lineRectangleIntersect(t, e, r, a, s, l, h, u) || this.lineRectangleIntersect(t, e, r, a, h, u, _, m) || this.lineRectangleIntersect(t, e, r, a, _, m, s, l);
        },
        lineRectangleIntersect: function(t, e, r, a, s, l, h, u) {
          var _, m, p, b, S, x;
          S = (u - l) / (h - s), x = l - S * s, S > 0 ? (_ = S * t + x, m = S * e + x) : (_ = S * e + x, m = S * t + x), l < u ? (p = l, b = u) : (p = u, b = l);
          var k, P;
          return k = _ > p ? _ : p, P = m < b ? m : b, k < P && !(P < r || k > a);
        }
      };
      function dr() {
        this._missedReady = !1, this.hideTourFeedback = !1, this._smoothAnimation = !1, this._showCaptions = !0;
      }
      dr._containsFitsLikeExtentsion = function(t) {
        var e = t.toLowerCase();
        return n.endsWith(e, "fits") || n.endsWith(e, "ftz") || n.endsWith(e, "fit") || n.endsWith(e, "fts");
      }, dr._addImageSet = function(t, e, r, a) {
        n.whitespace(t) && (t = T.getNextImageSetName());
        var s = T.addImageSetLayerCallback(a, t, r);
        if (e) {
          var l = a._guessZoomSetting(V.singleton.renderContext.viewCamera.zoom);
          V.singleton.gotoRADecZoom(a.get_viewCenterX() / 15, a.get_viewCenterY(), l, !1, null);
        }
        return s;
      }, dr._addFitsLayer = function(t, e, r, a) {
        n.whitespace(e) && (e = T.getNextFitsName());
        var s = new si(), l = new He(), h = function(u) {
          if (!u.errored) {
            if (n.truncate(u.get_sizeX()), n.truncate(u.get_sizeY()), l.setInitialParameters(u.get_description(), u.get_filename(), 2, 3, 5, at.getHashCode(u.get_filename()), 0, 0, u.get_scaleY(), ".fits", u.get_scaleX() > 0, "", u.get_centerX(), u.get_centerY(), u.get_rotation(), !1, "", !1, !1, 1, u.get_referenceX(), u.get_referenceY(), u.get_copyright(), u.get_creditsUrl(), "", "", 0, ""), l.set_wcsImage(u), s.set_imageSet(l), T.addFitsImageSetLayer(s, e), r) {
              var _ = l._guessZoomSetting(V.singleton.renderContext.viewCamera.zoom);
              V.singleton.gotoRADecZoom(u.get_viewCenterX() / 15, u.get_viewCenterY(), _, !1, null);
            }
            a != null && a(s);
          }
        };
        return n.whitespace(e) && (e = T.getNextFitsName()), fe.useGlVersion2 ? new bi(l, t, null, h) : new nr(l, t, null, h), s;
      };
      var xh = {
        add_ready: function(t) {
          this.__ready = n.bindAdd(this.__ready, t);
        },
        remove_ready: function(t) {
          this.__ready = n.bindSub(this.__ready, t);
        },
        _fireReady: function() {
          this.__ready != null ? this.__ready(this, new n.EventArgs()) : this._missedReady = !0;
        },
        add_collectionLoaded: function(t) {
          this.__collectionLoaded = n.bindAdd(this.__collectionLoaded, t);
        },
        remove_collectionLoaded: function(t) {
          this.__collectionLoaded = n.bindSub(this.__collectionLoaded, t);
        },
        _fireCollectionLoaded: function(t) {
          this.__collectionLoaded != null && this.__collectionLoaded(this, new Ys(t));
        },
        add_colorPickerDisplay: function(t) {
          this.__colorPickerDisplay = n.bindAdd(this.__colorPickerDisplay, t);
        },
        remove_colorPickerDisplay: function(t) {
          this.__colorPickerDisplay = n.bindSub(this.__colorPickerDisplay, t);
        },
        add_voTableDisplay: function(t) {
          this.__voTableDisplay = n.bindAdd(this.__voTableDisplay, t);
        },
        remove_voTableDisplay: function(t) {
          this.__voTableDisplay = n.bindSub(this.__voTableDisplay, t);
        },
        add_refreshLayerManager: function(t) {
          this.__refreshLayerManager = n.bindAdd(this.__refreshLayerManager, t);
        },
        remove_refreshLayerManager: function(t) {
          this.__refreshLayerManager = n.bindSub(this.__refreshLayerManager, t);
        },
        add_arrived: function(t) {
          this.__arrived = n.bindAdd(this.__arrived, t);
        },
        remove_arrived: function(t) {
          this.__arrived = n.bindSub(this.__arrived, t);
        },
        add_clicked: function(t) {
          this.__clicked = n.bindAdd(this.__clicked, t);
        },
        remove_clicked: function(t) {
          this.__clicked = n.bindSub(this.__clicked, t);
        },
        add_annotationClicked: function(t) {
          this.__annotationClicked = n.bindAdd(this.__annotationClicked, t);
        },
        remove_annotationClicked: function(t) {
          this.__annotationClicked = n.bindSub(this.__annotationClicked, t);
        },
        add_imageryLoaded: function(t) {
          this.__imageryLoaded = n.bindAdd(this.__imageryLoaded, t);
        },
        remove_imageryLoaded: function(t) {
          this.__imageryLoaded = n.bindSub(this.__imageryLoaded, t);
        },
        add_tourReady: function(t) {
          this.__tourReady = n.bindAdd(this.__tourReady, t);
        },
        remove_tourReady: function(t) {
          this.__tourReady = n.bindSub(this.__tourReady, t);
        },
        add_tourError: function(t) {
          this.__tourError = n.bindAdd(this.__tourError, t);
        },
        remove_tourError: function(t) {
          this.__tourError = n.bindSub(this.__tourError, t);
        },
        add_tourPaused: function(t) {
          this.__tourPaused = n.bindAdd(this.__tourPaused, t);
        },
        remove_tourPaused: function(t) {
          this.__tourPaused = n.bindSub(this.__tourPaused, t);
        },
        add_tourResumed: function(t) {
          this.__tourResumed = n.bindAdd(this.__tourResumed, t);
        },
        remove_tourResumed: function(t) {
          this.__tourResumed = n.bindSub(this.__tourResumed, t);
        },
        add_tourEnded: function(t) {
          this.__tourEnded = n.bindAdd(this.__tourEnded, t);
        },
        remove_tourEnded: function(t) {
          this.__tourEnded = n.bindSub(this.__tourEnded, t);
        },
        add_slideChanged: function(t) {
          this.__slideChanged = n.bindAdd(this.__slideChanged, t);
        },
        remove_slideChanged: function(t) {
          this.__slideChanged = n.bindSub(this.__slideChanged, t);
        },
        add_timeScrubberHook: function(t) {
          this.__timeScrubberHook = n.bindAdd(this.__timeScrubberHook, t);
        },
        remove_timeScrubberHook: function(t) {
          this.__timeScrubberHook = n.bindSub(this.__timeScrubberHook, t);
        },
        setTimeScrubberPosition: function(t) {
          T.setTimeSliderValue(t);
        },
        setTimeSlider: function(t, e) {
          this.__timeScrubberHook(t, e);
        },
        showColorPicker: function(t, e) {
          this.__colorPickerDisplay != null && this.__colorPickerDisplay(t, e);
        },
        displayVoTableLayer: function(t) {
          this.__voTableDisplay != null && this.__voTableDisplay(t, new n.EventArgs());
        },
        refreshLayerManagerNow: function() {
          this.__refreshLayerManager != null && this.__refreshLayerManager(null, new n.EventArgs());
        },
        _fireTourReady: function() {
          this.__tourReady != null && this.__tourReady(this, new n.EventArgs());
        },
        _fireTourError: function(t) {
          this.__tourError != null && this.__tourError(t, new n.EventArgs());
        },
        _fireTourPaused: function() {
          this.__tourPaused != null && this.__tourPaused(this, new n.EventArgs());
        },
        _fireTourResume: function() {
          this.__tourResumed != null && this.__tourResumed(this, new n.EventArgs());
        },
        _fireTourEnded: function() {
          this.__tourEnded != null && this.__tourEnded(this, new n.EventArgs());
        },
        _fireImageryLoaded: function() {
          this.__imageryLoaded != null && this.__imageryLoaded(this, new n.EventArgs());
        },
        _fireClick: function(t, e) {
          this.__clicked != null && this.__clicked(this, new qa(t, e, V.singleton.renderContext.viewCamera.zoom));
        },
        _fireArrived: function(t, e, r) {
          this.__arrived != null && this.__arrived(this, new qa(t, e, r));
        },
        _fireAnnotationclicked: function(t, e, r) {
          try {
            this.__annotationClicked != null && this.__annotationClicked(this, new qs(t, e, r));
          } catch {
          }
        },
        _fireSlideChanged: function(t) {
          try {
            this.__slideChanged != null && this.__slideChanged(this, new Xs(t));
          } catch {
          }
        },
        endInit: function() {
          this._missedReady && this._fireReady();
        },
        gotoRaDecZoom: function(t, e, r, a, s) {
          V.singleton != null && V.singleton.gotoRADecZoom(t / 15, e, r * 6, a, s);
        },
        setBackgroundImageByName: function(t) {
          V.singleton != null && V.singleton.setBackgroundImageByName(t);
        },
        addVoTableLayer: function(t) {
          return T.addVoTableLayer(t, "Vo Table");
        },
        getLayers: function() {
          return T.get_layerList();
        },
        setForegroundImageByName: function(t) {
          V.singleton != null && (V.singleton.setForegroundImageByName(t), V.singleton.renderContext.viewCamera.opacity = 100);
        },
        setForegroundOpacity: function(t) {
          V.singleton != null && (V.singleton.renderContext.viewCamera.opacity = t);
        },
        addCatalogHipsByName: function(t) {
          V.singleton != null && V.singleton.addCatalogHipsByName(t);
        },
        addCatalogHipsByNameWithCallback: function(t, e) {
          V.singleton != null && V.singleton.addCatalogHipsByNameWithCallback(t, e);
        },
        removeCatalogHipsByName: function(t) {
          V.singleton != null && V.singleton.removeCatalogHipsByName(t);
        },
        getCatalogHipsDataInView: function(t, e, r) {
          V.singleton != null && V.singleton.getCatalogHipsDataInView(t, e, r);
        },
        setCutsForFits: function(t, e, r) {
          V.singleton != null && V.singleton.setCutsForFits(t, e, r);
        },
        setColorMapForFits: function(t, e) {
          V.singleton != null && V.singleton.setColorMapForFits(t, e);
        },
        setScaleTypeForFits: function(t, e) {
          V.singleton != null && V.singleton.setScaleTypeForFits(t, e);
        },
        hideUI: function(t) {
        },
        loadTour: function(t) {
          V.singleton != null && V.singleton.playTour(t);
        },
        loadFits: function(t) {
          return this.loadFitsLayer(t, "", !0, null);
        },
        loadFitsLayer: function(t, e, r, a) {
          return this.addImageSetLayer(t, "fits", e, r, a);
        },
        addImageSetLayer: function(t, e, r, a, s) {
          if (e != null && e.toLowerCase() === "fits")
            return dr._addFitsLayer(t, r, a, s);
          if (e != null && e.toLowerCase() === "preloaded") {
            var l = V.singleton.getImageSetByUrl(t);
            if (l != null)
              return dr._addImageSet(r, a, s, l);
          } else {
            var l = V.singleton.getImageSetByUrl(t);
            if (l != null)
              return dr._addImageSet(r, a, s, l);
            if (dr._containsFitsLikeExtentsion(t))
              return dr._addFitsLayer(t, r, a, s);
          }
          return null;
        },
        setImageSetLayerOrder: function(t, e) {
          var r = T.get_layerList()[t];
          n.canCast(r, si) && e >= 0 && (n.remove(T.get_allMaps()[r.get_referenceFrame()].layers, r), T.get_allMaps()[r.get_referenceFrame()].layers.splice(e, 0, r));
        },
        isUsingWebGl2: function() {
          return fe.useGlVersion2;
        },
        get_hideTourFeedback: function() {
          return this.hideTourFeedback;
        },
        set_hideTourFeedback: function(t) {
          return this.hideTourFeedback = t, t;
        },
        playTour: function() {
          V.singleton != null && V.singleton.playCurrentTour();
        },
        stopTour: function() {
          V.singleton != null && V.singleton.stopCurrentTour();
        },
        loadImageCollection: function(t, e) {
          var r = this;
          this._imageUrl = t, vn.getWtmlFile(t, function() {
            r._fireCollectionLoaded(t);
          }, e);
        },
        _imageFileLoaded: function() {
          this._fireCollectionLoaded(this._imageUrl);
        },
        zoom: function(t) {
          V.singleton != null && V.singleton.zoom(t);
        },
        getRA: function() {
          return V.singleton != null ? V.singleton.renderContext.get_RA() : 0;
        },
        getDec: function() {
          return V.singleton != null ? V.singleton.renderContext.get_dec() : 0;
        },
        createFolder: function() {
          var t = new Mr();
          return t;
        },
        createPolygon: function(t) {
          var e = new ks();
          return e.set_fill(t), e;
        },
        createPolyLine: function(t) {
          return new Is();
        },
        createCircle: function(t) {
          var e = new As();
          return e.set_fill(t), e;
        },
        addAnnotation: function(t) {
          t != null && n.canCast(t, Dt) && V.singleton != null && V.singleton._addAnnotation(t);
        },
        removeAnnotation: function(t) {
          t != null && V.singleton != null && V.singleton._removeAnnotation(t);
        },
        clearAnnotations: function() {
          V.singleton != null && V.singleton._clearAnnotations();
        },
        get_smoothAnimation: function() {
          return this._smoothAnimation;
        },
        set_smoothAnimation: function(t) {
          return this._smoothAnimation = t, t;
        },
        get_showCaptions: function() {
          return this._showCaptions;
        },
        set_showCaptions: function(t) {
          return this._showCaptions = t, t;
        },
        loadVOTable: function(t, e) {
        },
        get_fov: function() {
          return V.singleton != null ? V.singleton.renderContext.viewCamera.zoom / 6 : 60;
        }
      };
      function z() {
        this.autoRepeatTour = !1, this._localHorizonMode = !1, this._galacticMode = !1, this._constellationBoundryColor = "blue", this._constellationSelectionColor = "yellow", this._constellationFigureColor = "red", this._showConstellationFigures = !0, this._showConstellationBoundries = !0, this._showConstellationSelection = !0, this._showCrosshairs = !0, this._crosshairsColor = "white", this._showEcliptic = !1, this._locationLat = 47.717, this._locationLng = -122.0858, this._locationAltitude = 100, this._showFiledOfView = !1, this._actualPlanetScale = !0, this._fovCamera = 0, this._fovEyepiece = 0, this._fovTelescope = 0, this._showClouds = !1, this._showGrid = !1, this._showHorizon = !0, this._showHorizonPanorama = !1, this._showMoonsAsPointSource = !0, this._showSolarSystem = !0, this._solarSystemStars = !0, this._solarSystemMilkyWay = !0, this._solarSystemCosmos = !0, this._solarSystemOrbits = !0, this._solarSystemOverlays = !0, this._solarSystemLighting = !0, this._solarSystemMultiRes = !0, this._solarSystemScale = 1, this._smoothPan = !0, this._showElevationModel = !0, this._showEquatorialGridText = !1, this._showGalacticGrid = !1, this._showGalacticGridText = !1, this._showEclipticGrid = !1, this._showEclipticGridText = !1, this._showEclipticOverviewText = !1, this._showAltAzGrid = !1, this._eclipticGridColor = ot.get_green(), this._galacticGridColor = ot.get_cyan(), this._altAzGridColor = ot.get_magenta(), this._precessionChartColor = ot.get_orange(), this._eclipticColor = ot.get_blue(), this._equatorialGridColor = ot.get_white(), this._showAltAzGridText = !1, this._showPrecessionChart = !1, this._showConstellationPictures = !1, this._showConstellationLabels = !1, this._constellationLabelsHeight = 80, this._solarSystemCMB = !0, this._solarSystemMinorPlanets = !1, this._solarSystemPlanets = !0, this._showEarthSky = !0, this._solarSystemMinorOrbits = !1, this._constellationsEnabled = "", this._constellationFiguresFilter = new Ut(), this._constellationBoundariesFilter = new Ut(), this._constellationNamesFilter = new Ut(), this._constellationArtFilter = new Ut(), this._showSkyOverlays = !0, this._showConstellations = !0, this._showSkyNode = !0, this._showSkyGrids = !0, this._showSkyOverlaysIn3d = !0, this._earthCutawayView = !1, this._showISSModel = !1, this._milkyWayModel = !1, this._minorPlanetsFilter = 255, this._planetOrbitsFilter = 2147483647, this._constellations = !0;
      }
      z.get_current = function() {
        return z._active == null && (z._active = new z()), z._active;
      }, z.get_globalSettings = function() {
        return z._active == null && (z._active = new z()), z._active;
      }, z.get_active = function() {
        return z._active == null && (z._active = new z()), z.tourSettings != null ? z.tourSettings : z._active;
      };
      var Lh = {
        get_constellationFigureColor: function() {
          return this._constellationFigureColor;
        },
        set_constellationFigureColor: function(t) {
          return this._constellationFigureColor = t, t;
        },
        get_constellationBoundryColor: function() {
          return this._constellationBoundryColor;
        },
        set_constellationBoundryColor: function(t) {
          return this._constellationBoundryColor = t, t;
        },
        get_constellationSelectionColor: function() {
          return this._constellationSelectionColor;
        },
        set_constellationSelectionColor: function(t) {
          return this._constellationSelectionColor = t, t;
        },
        get_showCrosshairs: function() {
          return this._showCrosshairs;
        },
        set_showCrosshairs: function(t) {
          return this._showCrosshairs = t, t;
        },
        get_smoothPan: function() {
          return this._smoothPan;
        },
        set_smoothPan: function(t) {
          return this._smoothPan = t, t;
        },
        get_crosshairsColor: function() {
          return this._crosshairsColor;
        },
        set_crosshairsColor: function(t) {
          return this._crosshairsColor = t, t;
        },
        get_actualPlanetScale: function() {
          return this._actualPlanetScale;
        },
        set_actualPlanetScale: function(t) {
          return this._actualPlanetScale = t, t;
        },
        get_fovCamera: function() {
          return this._fovCamera;
        },
        get_fovEyepiece: function() {
          return this._fovEyepiece;
        },
        get_fovTelescope: function() {
          return this._fovTelescope;
        },
        get_locationAltitude: function() {
          return this._locationAltitude;
        },
        set_locationAltitude: function(t) {
          return this._locationAltitude = t, t;
        },
        get_locationLat: function() {
          return this._locationLat;
        },
        set_locationLat: function(t) {
          return this._locationLat = t, t;
        },
        get_locationLng: function() {
          return this._locationLng;
        },
        set_locationLng: function(t) {
          return this._locationLng = t, t;
        },
        get_showClouds: function() {
          return this._showClouds;
        },
        get_showConstellationBoundries: function() {
          return this._showConstellationBoundries;
        },
        set_showConstellationBoundries: function(t) {
          return this._showConstellationBoundries = t, t;
        },
        get_showConstellationFigures: function() {
          return this._showConstellationFigures;
        },
        set_showConstellationFigures: function(t) {
          return this._showConstellationFigures = t, t;
        },
        get_showConstellationSelection: function() {
          return this._showConstellationSelection;
        },
        set_showConstellationSelection: function(t) {
          return this._showConstellationSelection = t, t;
        },
        get_showEcliptic: function() {
          return this._showEcliptic;
        },
        set_showEcliptic: function(t) {
          return this._showEcliptic = t, t;
        },
        get_showElevationModel: function() {
          return this._showElevationModel;
        },
        set_showElevationModel: function(t) {
          return this._showElevationModel = t, t;
        },
        get_showFieldOfView: function() {
          return this._showFiledOfView;
        },
        get_showGrid: function() {
          return this._showGrid;
        },
        set_showGrid: function(t) {
          return this._showGrid = t, t;
        },
        get_showHorizon: function() {
          return this._showHorizon;
        },
        set_showHorizon: function(t) {
          return this._showHorizon = t, t;
        },
        get_showHorizonPanorama: function() {
          return this._showHorizonPanorama;
        },
        get_showMoonsAsPointSource: function() {
          return this._showMoonsAsPointSource;
        },
        get_showSolarSystem: function() {
          return this._showSolarSystem;
        },
        set_showSolarSystem: function(t) {
          return this._showSolarSystem = t, t;
        },
        get_localHorizonMode: function() {
          return this._localHorizonMode;
        },
        set_localHorizonMode: function(t) {
          return this._localHorizonMode = t, t;
        },
        get_galacticMode: function() {
          return this._galacticMode;
        },
        set_galacticMode: function(t) {
          return this._galacticMode = t, t;
        },
        get_solarSystemStars: function() {
          return this._solarSystemStars;
        },
        set_solarSystemStars: function(t) {
          return this._solarSystemStars = t, t;
        },
        get_solarSystemMilkyWay: function() {
          return this._solarSystemMilkyWay;
        },
        set_solarSystemMilkyWay: function(t) {
          return this._solarSystemMilkyWay = t, t;
        },
        get_solarSystemCosmos: function() {
          return this._solarSystemCosmos;
        },
        set_solarSystemCosmos: function(t) {
          return this._solarSystemCosmos = t, t;
        },
        get_solarSystemOrbits: function() {
          return this._solarSystemOrbits;
        },
        set_solarSystemOrbits: function(t) {
          return this._solarSystemOrbits = t, t;
        },
        get_solarSystemOverlays: function() {
          return this._solarSystemOverlays;
        },
        set_solarSystemOverlays: function(t) {
          return this._solarSystemOverlays = t, t;
        },
        get_solarSystemLighting: function() {
          return this._solarSystemLighting;
        },
        set_solarSystemLighting: function(t) {
          return this._solarSystemLighting = t, t;
        },
        get_solarSystemMultiRes: function() {
          return !0;
        },
        set_solarSystemMultiRes: function(t) {
          return this._solarSystemMultiRes = t, t;
        },
        get_solarSystemScale: function() {
          return this._solarSystemScale;
        },
        set_solarSystemScale: function(t) {
          return this._solarSystemScale = t, t;
        },
        get_showEquatorialGridText: function() {
          return this._showEquatorialGridText;
        },
        set_showEquatorialGridText: function(t) {
          return this._showEquatorialGridText = t, t;
        },
        get_showGalacticGrid: function() {
          return this._showGalacticGrid;
        },
        set_showGalacticGrid: function(t) {
          return this._showGalacticGrid = t, t;
        },
        get_showGalacticGridText: function() {
          return this._showGalacticGridText;
        },
        set_showGalacticGridText: function(t) {
          return this._showGalacticGridText = t, t;
        },
        get_showEclipticGrid: function() {
          return this._showEclipticGrid;
        },
        set_showEclipticGrid: function(t) {
          return this._showEclipticGrid = t, t;
        },
        get_showEclipticGridText: function() {
          return this._showEclipticGridText;
        },
        set_showEclipticGridText: function(t) {
          return this._showEclipticGridText = t, t;
        },
        get_showEclipticOverviewText: function() {
          return this._showEclipticOverviewText;
        },
        set_showEclipticOverviewText: function(t) {
          return this._showEclipticOverviewText = t, t;
        },
        get_showAltAzGrid: function() {
          return this._showAltAzGrid;
        },
        set_showAltAzGrid: function(t) {
          return this._showAltAzGrid = t, t;
        },
        get_eclipticGridColor: function() {
          return this._eclipticGridColor;
        },
        set_eclipticGridColor: function(t) {
          return this._eclipticGridColor = t, t;
        },
        get_galacticGridColor: function() {
          return this._galacticGridColor;
        },
        set_galacticGridColor: function(t) {
          return this._galacticGridColor = t, t;
        },
        get_altAzGridColor: function() {
          return this._altAzGridColor;
        },
        set_altAzGridColor: function(t) {
          return this._altAzGridColor = t, t;
        },
        get_precessionChartColor: function() {
          return this._precessionChartColor;
        },
        set_precessionChartColor: function(t) {
          return this._precessionChartColor = t, t;
        },
        get_eclipticColor: function() {
          return this._eclipticColor;
        },
        set_eclipticColor: function(t) {
          return this._eclipticColor = t, t;
        },
        get_equatorialGridColor: function() {
          return this._equatorialGridColor;
        },
        set_equatorialGridColor: function(t) {
          return this._equatorialGridColor = t, t;
        },
        get_showAltAzGridText: function() {
          return this._showAltAzGridText;
        },
        set_showAltAzGridText: function(t) {
          return this._showAltAzGridText = t, t;
        },
        get_showPrecessionChart: function() {
          return this._showPrecessionChart;
        },
        set_showPrecessionChart: function(t) {
          return this._showPrecessionChart = t, t;
        },
        get_showConstellationPictures: function() {
          return this._showConstellationPictures;
        },
        set_showConstellationPictures: function(t) {
          return this._showConstellationPictures = t, t;
        },
        get_showConstellationLabels: function() {
          return this._showConstellationLabels;
        },
        set_showConstellationLabels: function(t) {
          return this._showConstellationLabels = t, t;
        },
        get_constellationLabelsHeight: function() {
          return this._constellationLabelsHeight;
        },
        set_constellationLabelsHeight: function(t) {
          return this._constellationLabelsHeight = t, t;
        },
        get_solarSystemCMB: function() {
          return this._solarSystemCMB;
        },
        set_solarSystemCMB: function(t) {
          return this._solarSystemCMB = t, t;
        },
        get_solarSystemMinorPlanets: function() {
          return this._solarSystemMinorPlanets;
        },
        set_solarSystemMinorPlanets: function(t) {
          return this._solarSystemMinorPlanets = t, t;
        },
        get_solarSystemPlanets: function() {
          return this._solarSystemPlanets;
        },
        set_solarSystemPlanets: function(t) {
          return this._solarSystemPlanets = t, t;
        },
        get_showEarthSky: function() {
          return this._showEarthSky;
        },
        set_showEarthSky: function(t) {
          return this._showEarthSky = t, t;
        },
        get_solarSystemMinorOrbits: function() {
          return this._solarSystemMinorOrbits;
        },
        set_solarSystemMinorOrbits: function(t) {
          return this._solarSystemMinorOrbits = t, t;
        },
        get_constellationsEnabled: function() {
          return this._constellationsEnabled;
        },
        set_constellationsEnabled: function(t) {
          return this._constellationsEnabled = t, t;
        },
        get_constellationFiguresFilter: function() {
          return this._constellationFiguresFilter;
        },
        set_constellationFiguresFilter: function(t) {
          return this._constellationFiguresFilter = t, t;
        },
        get_constellationBoundariesFilter: function() {
          return this._constellationBoundariesFilter;
        },
        set_constellationBoundariesFilter: function(t) {
          return this._constellationBoundariesFilter = t, t;
        },
        get_constellationNamesFilter: function() {
          return this._constellationNamesFilter;
        },
        set_constellationNamesFilter: function(t) {
          return this._constellationNamesFilter = t, t;
        },
        get_constellationArtFilter: function() {
          return this._constellationArtFilter;
        },
        set_constellationArtFilter: function(t) {
          return this._constellationArtFilter = t, t;
        },
        get_showSkyOverlays: function() {
          return this._showSkyOverlays;
        },
        set_showSkyOverlays: function(t) {
          return this._showSkyOverlays = t, t;
        },
        get_showConstellations: function() {
          return this._showConstellations;
        },
        set_showConstellations: function(t) {
          return this._showConstellations = t, t;
        },
        get_showSkyNode: function() {
          return this._showSkyNode;
        },
        set_showSkyNode: function(t) {
          return this._showSkyNode = t, t;
        },
        get_showSkyGrids: function() {
          return this._showSkyGrids;
        },
        set_showSkyGrids: function(t) {
          return this._showSkyGrids = t, t;
        },
        get_showSkyOverlaysIn3d: function() {
          return this._showSkyOverlaysIn3d;
        },
        set_showSkyOverlaysIn3d: function(t) {
          return this._showSkyOverlaysIn3d = t, t;
        },
        get_earthCutawayView: function() {
          return this._earthCutawayView;
        },
        set_earthCutawayView: function(t) {
          return this._earthCutawayView = t, t;
        },
        get_showISSModel: function() {
          return this._showISSModel;
        },
        set_showISSModel: function(t) {
          return this._showISSModel = t, t;
        },
        get_milkyWayModel: function() {
          return this._milkyWayModel;
        },
        set_milkyWayModel: function(t) {
          return this._milkyWayModel = t, t;
        },
        get_minorPlanetsFilter: function() {
          return this._minorPlanetsFilter;
        },
        set_minorPlanetsFilter: function(t) {
          return this._minorPlanetsFilter = t, t;
        },
        get_planetOrbitsFilter: function() {
          return this._planetOrbitsFilter;
        },
        set_planetOrbitsFilter: function(t) {
          return this._planetOrbitsFilter = t, t;
        },
        get_constellations: function() {
          return this._constellations;
        },
        set_constellations: function(t) {
          return this._constellations = t, t;
        },
        getSetting: function(t) {
          return t === 17 ? new En(!0, 0, !1, null) : new En(!1, 1, !1, null);
        }
      };
      function Tr(t) {
        this.height = 128, this.items = [], this._glyphVersion = -1, this.viewTransform = H.get_identity(), this._textObject = new Fr(), this._vertCount = 0, this.height = t * 3;
      }
      var Ah = {
        add: function(t) {
          this.items.push(t);
        },
        draw: function(t, e, r) {
          if (t.gl == null)
            for (var a = L._transformCoordinate(t.get_viewPoint(), this.viewTransform), s = this.height / t.get_fovAngle() * t.height / 180, l = n.enumerate(this.items); l.moveNext(); ) {
              var h = l.current, u = t.WVP.transform(h.center);
              if (!(u.z < 0) && !(L.dot(a, h.center) < 0.55)) {
                var _ = t.WVP.transform(h.top), m = Math.atan2(u.x - _.x, u.y - _.y), p = t.device;
                p.save(), p.translate(u.x, u.y), p.rotate(-m), p.globalAlpha = e, p.fillStyle = r.toString(), p.font = "normal normal " + Math.round(s * 1.2).toString() + "px Arial", p.textBaseline = "top";
                var b = p.measureText(h.text);
                p.fillText(h.text, -b.width / 2, -s / 2), p.restore();
              }
            }
          else {
            if ((this._glyphCache == null || this._glyphCache.get_version() > this._glyphVersion) && this.prepareBatch(), !this._glyphCache.ready)
              return;
            oe.use(t, this._vertexBuffer.vertexBuffer, this._glyphCache.get_texture().texture2d), t.gl.drawArrays(4, 0, this._vertexBuffer.count);
          }
        },
        prepareBatch: function() {
          if (this._glyphCache == null && (this._glyphCache = Ni.getCache(this.height)), !!this._glyphCache.ready) {
            this._textObject.text = "", this._textObject.fontSize = this.height * 0.5;
            for (var t = [], e = n.enumerate(this.items); e.moveNext(); ) {
              for (var r = e.current, a = r.text, s = 0, l = this._textObject.fontSize / 128, h = 0.6666, u = 0, _ = 0, m = 0; m < a.length; m++) {
                var p = this._glyphCache.getGlyphItem(a.substr(m, 1));
                p != null && (u += p.extents.x, _ = Math.max(p.extents.y, _));
              }
              var b = lt.create(u, _);
              r.width = b.x * r.scale * h * l, r.height = b.y * r.scale * h * l;
              for (var S = a.length, m = 0; m < S; m++) {
                var p = this._glyphCache.getGlyphItem(a.substr(m, 1));
                if (p != null) {
                  var x = fi.create(s * r.scale * h, 0 * r.scale * h, p.extents.x * l * r.scale * h, p.extents.y * l * r.scale * h);
                  s += p.extents.x * l, r.addGlyphPoints(t, p.size, x, p.uvRect);
                }
              }
            }
            this._vertCount = t.length, this._vertexBuffer = new wn(this._vertCount);
            for (var k = this._vertexBuffer.lock(), m = 0; m < this._vertCount; m++)
              k[m] = t[m];
            this._vertexBuffer.unlock(), this._glyphVersion = this._glyphCache.get_version();
          }
        },
        cleanUp: function() {
          this._vertexBuffer != null && (this._vertexBuffer = null), this.items.length = 0;
        }
      };
      function Zr(t) {
        this.referenceCount = 0, this.glyph = t, this.uvRect = new fi(), this.size = new lt(), this.referenceCount = 1;
      }
      Zr.create = function(t, e, r, a) {
        var s = new Zr(t);
        return s.glyph = t, s.uvRect = e, s.size = r, s.extents = a, s.referenceCount = 1, s;
      }, Zr._fromXML = function(t) {
        var e = t.attributes.getNamedItem("Glyph").nodeValue, r = new Zr(e);
        return r.uvRect = fi.create(parseFloat(t.attributes.getNamedItem("UVLeft").nodeValue), parseFloat(t.attributes.getNamedItem("UVTop").nodeValue), parseFloat(t.attributes.getNamedItem("UVWidth").nodeValue), parseFloat(t.attributes.getNamedItem("UVHeight").nodeValue)), r.size = lt.create(parseFloat(t.attributes.getNamedItem("SizeWidth").nodeValue), parseFloat(t.attributes.getNamedItem("SizeHeight").nodeValue)), r.extents = lt.create(parseFloat(t.attributes.getNamedItem("ExtentsWidth").nodeValue), parseFloat(t.attributes.getNamedItem("ExtentsHeight").nodeValue)), r;
      };
      var kh = {
        addRef: function() {
          this.referenceCount++;
        },
        release: function() {
          this.referenceCount--;
        }
      };
      function Ni(t) {
        this._cellHeight = 128, this._gridSize = 8, this.ready = !1, this._glyphItems = {}, this.textObject = new Fr(), this._dirty = !0, this._textureDirty = !0, this._version = 0, this._cellHeight = t, this._texture = A.loadPlanetTexture(Kt.singleton.engineAssetUrl("glyphs1.png")), this._webFile = new Ai(Kt.singleton.engineAssetUrl("glyphs1.xml")), this._webFile.onStateChange = n.bind("_glyphXmlReady", this), this._webFile.send();
      }
      Ni.getCache = function(t) {
        return n.keyExists(Ni._caches, t) || (Ni._caches[t] = new Ni(t)), Ni._caches[t];
      }, Ni.cleanUpAll = function() {
        n.clearKeys(Ni._caches);
      };
      var Ih = {
        get_height: function() {
          return this._cellHeight;
        },
        _glyphXmlReady: function() {
          this._webFile.get_state() === 2 ? alert(this._webFile.get_message()) : this._webFile.get_state() === 1 && this._loadXmlGlyph(this._webFile.getXml());
        },
        _loadXmlGlyph: function(t) {
          for (var e = at.selectSingleNode(t, "GlyphItems"), r = n.enumerate(e.childNodes); r.moveNext(); ) {
            var a = r.current;
            if (a.nodeName === "GlyphItem") {
              var s = Zr._fromXML(a);
              this._glyphItems[s.glyph] = s, Ni._allGlyphs = Ni._allGlyphs + s.glyph;
            }
          }
          this.ready = !0;
        },
        get_texture: function() {
          return this._texture;
        },
        _makeTexture: function() {
          this._calcOrMake(!0);
        },
        getGlyphItem: function(t) {
          return this._dirty && this._calculateGlyphDetails(), this._glyphItems[t];
        },
        _calculateGlyphDetails: function() {
          this._calcOrMake(!1);
        },
        _calcOrMake: function(t) {
        },
        get_version: function() {
          return this._version;
        },
        set_version: function(t) {
          return this._version = t, t;
        },
        addGlyph: function(t) {
          if (n.keyExists(this._glyphItems, t))
            this._glyphItems[t].addRef();
          else {
            var e = new Zr(t);
            this._glyphItems[t] = e, this._dirty = !0, this._textureDirty = !0, this._version++, Ni._allGlyphs = Ni._allGlyphs + t;
          }
        },
        cleanUp: function() {
          this._dirty = !0, this._texture = null;
        },
        dispose: function() {
          this.cleanUp();
        },
        get_dirty: function() {
          return this._dirty;
        },
        set_dirty: function(t) {
          return this._dirty = t, t;
        }
      };
      function wi(t, e, r, a, s) {
        this.rotation = 0, this.tilt = 0, this.bank = 0, this._matInit = !1, this.color = ot.get_white(), this.sky = !0, this.scale = 0, this.opacity = 1, this.text = "", this.width = 1, this.height = 1, this.alignment = 0, this.text = r, this.up = e, this.center = t, this.scale = s, this.top = L.addVectors(t, L.scale(e, s)), a < 0 && (this.sky = !1);
      }
      var $h = {
        addGlyphPoints: function(t, e, r, a) {
          for (var s = new Array(6), l = 0; l < 6; l++)
            s[l] = new dt();
          var h = L.cross(this.center, this.up), u = L.cross(this.up, this.center);
          h.normalize(), u.normalize(), this.up.normalize();
          var _ = L.cross(this.center, u);
          _.normalize(), this.alignment ? this.alignment === 1 && (h.multiply(-r.get_left() * 2), u.multiply(r.get_right() * 2)) : (h.multiply(this.width - r.get_left() * 2), u.multiply(this.width - (this.width * 2 - r.get_right() * 2)));
          var m = _.copy(), p = L.subtractVectors(L.get_empty(), _);
          m.multiply(this.height - r.get_top() * 2), p.multiply(this.height - (this.height * 2 - r.get_bottom() * 2));
          var b = this.center.copy();
          b.add(m), this.sky ? b.add(h) : b.subtract(h);
          var S = this.center.copy();
          S.add(m), this.sky ? S.add(u) : S.subtract(u);
          var x = this.center.copy();
          this.sky ? x.add(h) : x.subtract(h), x.add(p);
          var k = this.center.copy();
          if (this.sky ? k.add(u) : k.subtract(u), k.add(p), s[0].position = b.copy(), s[0].tu = a.get_left(), s[0].tv = a.get_top(), s[2].tu = a.get_left(), s[2].tv = a.get_bottom(), s[2].position = x.copy(), s[1].tu = a.get_right(), s[1].tv = a.get_top(), s[1].position = S.copy(), s[3].tu = a.get_right(), s[3].tv = a.get_bottom(), s[3].position = k.copy(), s[5].tu = a.get_right(), s[5].tv = a.get_top(), s[5].position = S.copy(), s[4].tu = a.get_left(), s[4].tv = a.get_bottom(), s[4].position = x.copy(), this.rotation || this.tilt || this.bank) {
            if (!this._matInit) {
              var P = H.lookAtLH(this.center, new L(), this.up), I = P.clone();
              I.invert(), this._rtbMat = H.multiplyMatrix(H.multiplyMatrix(H.multiplyMatrix(H.multiplyMatrix(P, H._rotationZ(-this.rotation / 180 * Math.PI)), H._rotationX(-this.tilt / 180 * Math.PI)), H._rotationY(-this.bank / 180 * Math.PI)), I), this._matInit = !0;
            }
            for (var l = 0; l < 6; l++)
              s[l].position = L._transformCoordinate(s[l].position, this._rtbMat);
          }
          for (var D = n.enumerate(s); D.moveNext(); ) {
            var G = D.current;
            t.push(G);
          }
        }
      };
      function Z() {
      }
      Z.updateClock = function() {
        if (Z._syncToClock) {
          var t = n.now();
          if (Z._timeRate !== 1) {
            var e = t.getTime() - Z.last.getTime(), r = e * Z._timeRate;
            Z._offset += r;
          }
          Z.last = t;
          try {
            Z._now = new Date(t.getTime() + Z._offset);
          } catch {
            Z._now = new Date(1, 12, 25, 23, 59, 59), Z._offset = Z._now - n.now();
          }
          Z._now.getFullYear() > 4e3 && (Z._now = new Date(4e3, 12, 31, 23, 59, 59), Z._offset = Z._now - n.now()), Z._now.getFullYear() < 1 && (Z._now = new Date(0, 12, 25, 23, 59, 59), Z._offset = Z._now - n.now());
        }
      }, Z.getTimeForFutureTime = function(t) {
        try {
          if (Z._syncToClock) {
            var e = new Date(Z.get_now().getTime() + t * 1e3 * Z._timeRate);
            return e;
          } else
            return Z.get_now();
        } catch {
          return Z.get_now();
        }
      }, Z.getJNowForFutureTime = function(t) {
        try {
          if (Z._syncToClock) {
            var e = new Date(Z.get_now().getTime() + n.truncate(t * 1e3 * Z._timeRate));
            return Z.utcToJulian(e);
          } else
            return Z.utcToJulian(Z.get_now());
        } catch {
          return Z.utcToJulian(Z.get_now());
        }
      }, Z.get_now = function() {
        return Z._now;
      }, Z.set_now = function(t) {
        return Z._now = t, Z._offset = Z._now - n.now(), Z.last = n.now(), t;
      }, Z.syncTime = function() {
        Z._offset = 0, Z._now = n.now(), Z._syncToClock = !0;
      }, Z.get_jNow = function() {
        return Z.utcToJulian(Z.get_now());
      }, Z.get_syncToClock = function() {
        return Z._syncToClock;
      }, Z.set_syncToClock = function(t) {
        return Z._syncToClock !== t && (Z._syncToClock = t, t ? (Z.last = n.now(), Z._offset = Z._now - n.now()) : Z._now = new Date(n.now().getTime() + Z._offset)), t;
      }, Z.get_timeRate = function() {
        return Z._timeRate;
      }, Z.set_timeRate = function(t) {
        return Z._timeRate = t, t;
      }, Z.get_altitude = function() {
        return Z._altitude;
      }, Z.set_altitude = function(t) {
        return Z._altitude = t, t;
      }, Z.get_location = function() {
        return Z._location = R.fromLatLng(z.get_active().get_locationLat(), z.get_active().get_locationLng()), Z._altitude = z.get_active().get_locationAltitude(), Z._location;
      }, Z.set_location = function(t) {
        return z.get_globalSettings().get_locationLat() !== t.get_lat() && z.get_globalSettings().set_locationLat(t.get_lat()), z.get_globalSettings().get_locationLng() !== t.get_lng() && z.get_globalSettings().set_locationLng(t.get_lng()), Z._location = t, t;
      }, Z.julianToUtc = function(t) {
        var e = new Ve();
        e.setJD(t, !0);
        var r = (e.second() - n.truncate(e.second())) * 1e3;
        return new Date(e.year(), e.month() - 1, e.day(), e.hour(), e.minute(), n.truncate(e.second()), n.truncate(r));
      }, Z._twoLineDateToJulian = function(t) {
        var e = parseInt(t.substring(0, 1)) < 6, r = parseInt((e ? " 20" : "19") + t.substring(0, 2)), a = parseFloat(t.substring(2, 3)), s = parseFloat(t.substr(5)), l = new Date(r, 0, 1, 0, 0);
        return Z.utcToJulian(l) + (a - 1 + s);
      }, Z.julianToTwoLineDate = function(t) {
        return Z.dateToTwoLineDate(Z.julianToUtc(t));
      }, Z.dateToTwoLineDate = function(t) {
        var e = new n.StringBuilder();
        e.append(t.getFullYear() % 100);
        var r = new Date(t.getFullYear(), 0, 1, 0, 0), a = Math.floor((t - r) / (60 * 60 * 24 * 1e3)) + 2, s = a + t.getHours() / 24 + t.getMinutes() / 60 / 24 + t.getSeconds() / 60 / 60 / 24 + t.getMilliseconds() / 1e3 / 60 / 60 / 24, l = Z.tleDayString(s);
        return e.append(l), e.toString();
      }, Z.tleDayString = function(t) {
        var e = t.toString(), r = e.indexOf(".");
        r === -1 && (r = e.length, e += ".0");
        var a = e.length - r - 1, s = "00000000";
        return e = s.substr(0, 3 - r) + e + s.substr(0, 8 - a), e;
      }, Z.utcToJulian = function(t) {
        var e = t.getUTCFullYear(), r = t.getUTCMonth() + 1, a = t.getUTCDate(), s = t.getUTCHours(), l = t.getUTCMinutes(), h = t.getUTCSeconds() + t.getUTCMilliseconds() / 1e3, u = a + s / 24 + l / 1440 + h / 86400;
        return $t.getJulianDay(e, r, u);
      }, Z.dateToJD = function(t, e, r, a) {
        var s = t, l = e;
        l < 3 && (s = s - 1, l = l + 12);
        var h = 0, u = 0;
        return a && (h = n.truncate(s / 100), u = 2 - h + n.truncate(h / 4)), n.truncate(365.25 * (s + 4716)) + n.truncate(30.6001 * (l + 1)) + r + u - 1524.5;
      };
      var Ph = {};
      function Ea(t) {
        this.magnitude = 0, this.RA = 0, this.dec = 0, this.BMV = 0, this.id = 0, this.absoluteMagnitude = 0, this.par = 0, this.distance = 0;
        var e = t.split("	");
        if (this.id = parseInt(n.replaceString(e[0], "HIP", "")), this.dec = parseFloat(e[3]), this.RA = parseFloat(e[2]) / 15, e.length > 4)
          try {
            e[4].toUpperCase() !== "NULL" && e[4] && (this.magnitude = parseFloat(e[4]));
          } catch {
          }
        if (e.length > 5)
          try {
            this.BMV = parseFloat(e[5]), this._makeColor(this.BMV);
          } catch {
          }
        e.length > 6 && (this.par = parseFloat(e[6]), this._makeDistanceAndMagnitude());
      }
      var Rh = {
        get_name: function() {
          return "HIP" + this.id.toString();
        },
        get_coordinates: function() {
          return R.fromRaDec(this.RA, this.dec);
        },
        get_asPlace: function() {
          var t = Li.create(this.get_name(), this.dec, this.RA, 1, pt.containment.findConstellationForPoint(this.RA, this.dec), 4, -1);
          return t.set_magnitude(this.magnitude), t.set_distance(this.distance), t;
        },
        stars: function(t, e) {
          var r = t.split("	");
          if (this.id = parseInt(r[0]), this.RA = parseFloat(r[1]) / 15, this.dec = parseFloat(r[2]), r.length > 3)
            try {
              this.magnitude = parseFloat(r[3]);
            } catch {
            }
          if (r.length > 4)
            try {
              this.col = B.load(r[4]);
            } catch {
            }
        },
        _makeDistanceAndMagnitude: function() {
          this.distance = 1 / (this.par / 1e3), this.absoluteMagnitude = this.magnitude - 5 * (at.logN(this.distance, 10) - 1), this.distance *= 206264.806;
        },
        _makeColor: function(t) {
          var e = 4294967295;
          t <= -0.32 ? e = 4288854271 : t <= -0.31 ? e = 4288919807 : t <= -0.3 ? e = 4288985855 : t <= -0.3 ? e = 4289051391 : t <= -0.28 ? e = 4289182975 : t <= -0.26 ? e = 4289314303 : t <= -0.24 ? e = 4289445887 : t <= -0.2 ? e = 4289708799 : t <= -0.16 ? e = 4290037503 : t <= -0.14 ? e = 4290169087 : t <= -0.12 ? e = 4290366207 : t <= -0.09 ? e = 4290563583 : t <= -0.06 ? e = 4290892031 : t <= 0 ? e = 4291483391 : t <= 0.06 ? e = 4292009215 : t <= 0.14 ? e = 4292732159 : t <= 0.19 ? e = 4293126399 : t <= 0.31 ? e = 4294111999 : t <= 0.36 ? e = 4294571775 : t <= 0.43 ? e = 4294965756 : t <= 0.54 ? e = 4294964979 : t <= 0.59 ? e = 4294964203 : t <= 0.63 ? e = 4294963687 : t <= 0.66 ? e = 4294963169 : t <= 0.74 ? e = 4294962909 : t <= 0.82 ? e = 4294961877 : t <= 0.92 ? e = 4294960324 : t <= 1.15 ? e = 4294959032 : t <= 1.3 ? e = 4294958516 : t <= 1.41 ? e = 4294955933 : t <= 1.48 ? e = 4294954385 : t <= 1.52 ? e = 4294953351 : t <= 1.55 ? e = 4294952319 : t <= 1.56 ? e = 4294951287 : t <= 1.61 ? e = 4294950257 : t <= 1.72 ? e = 4294948966 : t <= 1.84 ? e = 4294947419 : t <= 2 && (e = 4294946129), this.col = B.fromInt(e);
        }
      };
      function mn(t) {
        this.RA = 0, this.dec = 0, this.distance = 0, this.type = 0, this.eTypeBucket = 0, this.size = 5, this.sdssID = 0, this.sdssID = t.readInt64(), this.RA = t.readSingle(), this.dec = t.readSingle(), this.distance = t.readSingle(), this.eTypeBucket = t.readByte(), this.size = t.readSingle();
      }
      mn.getEType = function(t) {
        for (var e = 0, r = mn._eTypeBuckets.length - 1; r - e > 1; ) {
          var a = (e + r) / 2;
          t > mn._eTypeBuckets[a] ? e = a : r = a;
        }
        return e;
      };
      var Eh = {};
      function Da() {
        this.latMin = 0, this.latMax = 0, this.lngMin = 0, this.lngMax = 0;
      }
      var Dh = {};
      function F() {
        this._renderTriangleLists = new Array(4), this._indexBuffers = new Array(4), this.level = 0, this.tileX = 0, this.tileY = 0, this.texture = null, this.texture2d = null, this.isCatalogTile = !1, this.readyToRender = !1, this.inViewFrustum = !0, this.globalCenter = L.zero, this.children = [null, null, null, null], this.parent = null, this.localCenter = new L(), this.renderedAtOrBelowGeneration = 0, this._demScaleFactor = 6371e3, this.demIndex = 0, this.demAverage = 0, this.demReady = !1, this.texReady = !1, this.demTile = !1, this.demDownloading = !1, this.renderedGeneration = 0, this.accomidation = 0, this.accessCount = 0, this.downloading = !1, this.geometryCreated = !1, this._isHdTile = !1, this.demSize = 33 * 33, this._topLeftScreen = new L(), this._bottomRightScreen = new L(), this._topRightScreen = new L(), this._bottomLeftScreen = new L(), this.sphereRadius = 0, this.sphereCenter = new L(), this.radius = 1, this.triangleCount = 0, this.requestHits = 0, this.requestPending = !1, this.errored = !1, this._key = null, this._tileId = null, this._vertexCount = 0, this.renderChildPart = null, this.renderChildPart = new Array(4);
        for (var t = 0; t < 4; t++)
          this.renderChildPart[t] = Cr.create(!1, 500);
      }
      F.getFrustumList = function() {
        try {
          return F.frustumList;
        } catch {
          return null;
        }
      }, F.get_subDivisions = function() {
        return 32;
      };
      var Nh = {
        getIndexBuffer: function(t, e) {
          return this._indexBuffers[t];
        },
        isPointInTile: function(t, e) {
          return !1;
        },
        getSurfacePointAltitude: function(t, e, r) {
          return 0;
        },
        makeTexture: function() {
          if (F.prepDevice != null)
            try {
              if (this.texture2d = F.prepDevice.createTexture(), F.prepDevice.bindTexture(3553, this.texture2d), F.prepDevice.texParameteri(3553, 10242, 33071), F.prepDevice.texParameteri(3553, 10243, 33071), this.dataset.get_extension().toLowerCase().indexOf("fits") > -1 && fe.useGlVersion2)
                F.prepDevice.texImage2D(3553, 0, 33326, n.truncate(this.fitsImage.get_sizeX()), n.truncate(this.fitsImage.get_sizeY()), 0, 6403, 5126, this.fitsImage.dataUnit), F.prepDevice.texParameteri(3553, 10241, 9728), F.prepDevice.texParameteri(3553, 10240, 9728);
              else {
                var t = this.texture;
                if ((!Te.isPowerOfTwo(this.texture.height) | !Te.isPowerOfTwo(this.texture.width)) === 1) {
                  var e = document.createElement("canvas");
                  e.height = Te.fitPowerOfTwo(t.height), e.width = Te.fitPowerOfTwo(t.width);
                  var r = e.getContext("2d");
                  r.drawImage(t, 0, 0, e.width, e.height), t = e;
                }
                F.prepDevice.texImage2D(3553, 0, 6408, 6408, 5121, t), F.prepDevice.texParameteri(3553, 10241, 9985), F.prepDevice.generateMipmap(3553);
              }
              F.prepDevice.bindTexture(3553, null);
            } catch {
              this.errored = !0;
            }
        },
        addVertex: function(t, e, r) {
          return t[e++] = r.position.x, t[e++] = r.position.y, t[e++] = r.position.z, t[e++] = r.tu, t[e++] = r.tv, e;
        },
        geoTo3dWithAlt: function(t, e, r, a) {
          if (t = Math.max(Math.min(90, t), -90), e = Math.max(Math.min(180, e), -180), !F.demEnabled || this.demData == null)
            return this.geoTo3d(t, e, r);
          a && (e -= 180);
          var s = this.demData[this.demIndex], l = this.geoTo3dWithAltitude(t, e, s, r);
          return l;
        },
        geoTo3dWithAltitude: function(t, e, r, a) {
          var s = 1 + r / this.get__demScaleFactor(), l = L.create(Math.cos(e * F.RC) * Math.cos(t * F.RC) * s, Math.sin(t * F.RC) * s, Math.sin(e * F.RC) * Math.cos(t * F.RC) * s);
          return a && l.subtract(this.localCenter), l;
        },
        get__demScaleFactor: function() {
          return this._demScaleFactor;
        },
        set__demScaleFactor: function(t) {
          return this._demScaleFactor = t, t;
        },
        requestImage: function() {
          var t = this;
          if (this.dataset.get_extension().toLowerCase().indexOf("fits") > -1)
            !this.downloading && !this.readyToRender && (this.downloading = !0, fe.useGlVersion2 ? this.fitsImage = new Hs(this.dataset, this.get_URL(), function(r) {
              t.downloading = !1, t.errored = t.fitsImage.errored, vt.removeFromQueue(t.get_key(), !0), t.fitsImage.errored || (t.level || (t.dataset.get_fitsProperties()._fireMainImageLoaded(t.fitsImage), t.fitsImage.applyDisplaySettings()), t.texReady = !0, t.readyToRender = t.texReady && (t.demReady || !t.demTile), t.requestPending = !1, t.makeTexture());
            }) : this.fitsImage = nr.createTiledFits(this.dataset, this.get_URL(), function(r) {
              t.level || t.dataset.get_fitsProperties()._fireMainImageLoaded(t.fitsImage), t.texReady = !0, t.downloading = !1, t.errored = t.fitsImage.errored, t.readyToRender = t.texReady && (t.demReady || !t.demTile), t.requestPending = !1, vt.removeFromQueue(t.get_key(), !0), t.texture2d = r.getBitmap().getTexture();
            }));
          else {
            if (this.get_dataset().get_wcsImage() != null) {
              this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = !0, this.requestPending = !1, vt.removeFromQueue(this.get_key(), !0);
              return;
            }
            if (!this.downloading && !this.readyToRender) {
              this.downloading = !0, this.texture = document.createElement("img");
              var e = this.texture;
              this.texture.addEventListener("load", function(r) {
                t.texReady = !0, t.downloading = !1, t.errored = !1, t.readyToRender = t.texReady && (t.demReady || !t.demTile), t.requestPending = !1, vt.removeFromQueue(t.get_key(), !0), t.makeTexture();
              }, !1), this.texture.addEventListener("error", function(r) {
                if (!t.texture.hasAttribute("proxyattempt")) {
                  t.texture.setAttribute("proxyattempt", !0);
                  var a = Kt.singleton.activateProxy(t.texture.src);
                  if (a != null) {
                    t.texture.src = a;
                    return;
                  }
                }
                t.downloading = !1, t.readyToRender = !1, t.errored = !0, t.requestPending = !1, vt.removeFromQueue(t.get_key(), !0);
              }, !1), e.crossOrigin = "anonymous", this.texture.src = this.get_URL();
            }
          }
        },
        createDemFromParent: function() {
          return !1;
        },
        _loadDemData: function() {
          if (this.demFile == null)
            return this.createDemFromParent();
          if (this.demData = this.demFile, this.demFile.length !== 1089 && this.demFile.length !== 513)
            return this.createDemFromParent();
          for (var t = n.enumerate(this.demData); t.moveNext(); )
            t.current;
          return this.demAverage /= this.demData.length, !0;
        },
        requestDem: function() {
          var t = this;
          if (!this.readyToRender && !this.demDownloading) {
            this.demTile = !0, this.demDownloading = !0, F.callCount++;
            var e = new XMLHttpRequest();
            e.addEventListener("load", function(r) {
              t.demReady = !0, t.demDownloading = !1, t.readyToRender = t.texReady && (t.demReady || !t.demTile), t.requestPending = !1;
              try {
                t.demFile = new Float32Array(e.response);
              } catch {
              }
              vt.removeFromQueue(t.get_key(), !0);
            }, !1), e.addEventListener("error", function(r) {
              t.demDownloading = !1, t.demReady = !1, t.readyToRender = !1, t.errored = !0, t.requestPending = !1, vt.removeFromQueue(t.get_key(), !0);
            }, !1), e.open("GET", this.get_demURL(), !0), e.responseType = "arraybuffer", e.send();
          }
        },
        draw3D: function(t, e) {
          if (this.renderedGeneration = F.currentRenderGeneration, F.tilesTouched++, this.accessCount = vt.accessID++, this.errored)
            return !1;
          var r = 2;
          if (this.inViewFrustum = !0, !this.readyToRender)
            return vt.addTileToQueue(this), !1;
          var a = 0, s = 0;
          (this.dataset.get_mercator() || this.dataset.get_bottomsUp()) && (s = 1);
          for (var l = 0, h = !1, u = !1, _ = 0; _ < 2; _++)
            for (var m = 0; m < r; m++)
              this.level < this.dataset.get_levels() ? (this.children[a] == null && (this.children[a] = vt.getTile(this.level + 1, this.tileX * 2 + (m + l) % 2, this.tileY * 2 + (_ + s) % 2, this.dataset, this)), this.children[a].isTileInFrustum(t.get_frustum()) ? (this.inViewFrustum = !0, this.children[a].isTileBigEnough(t) ? (this.renderChildPart[a].set_targetState(!this.children[a].draw3D(t, e)), this.renderChildPart[a].get_targetState() && (u = !0)) : this.renderChildPart[a].set_targetState(!0)) : this.renderChildPart[a].set_targetState(this.renderChildPart[a].set_state(!1)), this.renderChildPart[a].get_targetState(), this.renderChildPart[a].get_state()) : this.renderChildPart[a].set_state(!0), this.renderChildPart[a].get_state() && (h = !0), a++;
          if ((u || h) && (this.renderedAtOrBelowGeneration = F.currentRenderGeneration, this.parent != null && (this.parent.renderedAtOrBelowGeneration = this.renderedAtOrBelowGeneration)), !h)
            return !0;
          if (!this.createGeometry(t))
            return !1;
          F.tilesInView++, this.accomidation = this._computeAccomidation();
          for (var p = 0; p < 4; p++)
            this.renderChildPart[p].get_targetState() && this.renderPart(t, p, e / 100, !1);
          return !0;
        },
        _computeAccomidation: function() {
          var t = 0;
          if (!F.useAccomidation)
            return 0;
          var e = vt.getCachedTile(this.level, this.tileX, this.tileY + 1, this.dataset, this);
          (e == null || e.renderedAtOrBelowGeneration < F.currentRenderGeneration - 2) && (t += 1);
          var r = vt.getCachedTile(this.level, this.tileX + 1, this.tileY, this.dataset, this);
          (r == null || r.renderedAtOrBelowGeneration < F.currentRenderGeneration - 2) && (t += 2);
          var a = vt.getCachedTile(this.level, this.tileX, this.tileY - 1, this.dataset, this);
          (a == null || a.renderedAtOrBelowGeneration < F.currentRenderGeneration - 2) && (t += 4);
          var s = vt.getCachedTile(this.level, this.tileX - 1, this.tileY, this.dataset, this);
          return (s == null || s.renderedAtOrBelowGeneration < F.currentRenderGeneration - 2) && (t += 8), t;
        },
        renderPart: function(t, e, r, a) {
          if (F.prepDevice == null)
            for (var s = t.lighting && t.get_sunPosition() != null, l = n.enumerate(this._renderTriangleLists[e]); l.moveNext(); ) {
              var h = l.current;
              if (h.opacity = r, s) {
                var u = h.normal.copy();
                t.get_world().multiplyVector(u), u.normalize();
                var _ = L.dot(u, t.get_sunPosition());
                _ < 0 ? _ = 0 : _ = Math.min(1, _ * 1), h.lighting = _;
              } else
                h.lighting = 1;
              h.draw(t.device, t.WVP);
            }
          else
            fe.useGlVersion2 && this.fitsImage != null ? (Ft.bindColorMapTexture(F.prepDevice, this.dataset.get_fitsProperties().colorMapName), ft.min = this.dataset.get_fitsProperties().lowerCut, ft.max = this.dataset.get_fitsProperties().upperCut, ft.containsBlanks = this.dataset.get_fitsProperties().containsBlanks, ft.blankValue = this.dataset.get_fitsProperties().blankValue, ft.bZero = this.dataset.get_fitsProperties().bZero, ft.bScale = this.dataset.get_fitsProperties().bScale, ft.scaleType = this.dataset.get_fitsProperties().scaleType, ft.transparentBlack = this.dataset.get_fitsProperties().transparentBlack, ft.use(t, this._vertexBuffer, this.getIndexBuffer(e, this.accomidation), this.texture2d, r, !1, this.globalCenter)) : St.use(t, this._vertexBuffer, this.getIndexBuffer(e, this.accomidation), this.texture2d, r, !1, this.globalCenter), t.gl.drawElements(4, this.triangleCount * 3, 5123, 0);
        },
        cleanUp: function(t) {
          if (this.readyToRender = !1, this.demData = null, this.demFile = null, this.demDownloading = !1, this.texReady = !1, this.demReady = !1, this.errored = !1, this.texture != null && (this.texture = null), this._renderTriangleLists = new Array(4), this.geometryCreated = !1, t && this.parent != null && (this.parent.removeChild(this), this.parent = null), F.prepDevice != null) {
            for (var e = n.enumerate(this._indexBuffers); e.moveNext(); ) {
              var r = e.current;
              F.prepDevice.deleteBuffer(r);
            }
            this._indexBuffers = new Array(4), this._vertexBuffer != null && (F.prepDevice.deleteBuffer(this._vertexBuffer), this._vertexBuffer = null), this.texture2d != null && (F.prepDevice.deleteTexture(this.texture2d), this.texture2d = null);
          }
        },
        removeChild: function(t) {
          for (var e = 0; e < 4; e++)
            if (this.children[e] === t) {
              this.children[e] = null;
              return;
            }
        },
        createGeometry: function(t) {
          return F.demEnabled && this.demReady && this.demData == null && !this._loadDemData() || F.demEnabled && this.demData == null ? !1 : (this.readyToRender = !0, !0);
        },
        calcSphere: function() {
          var t = new Array(4);
          t[0] = this.topLeft, t[1] = this.bottomRight, t[2] = this.topRight, t[3] = this.bottomLeft;
          var e = Rr.findEnclosingSphere(t);
          this.sphereCenter = e.center, this.sphereRadius = e.radius;
        },
        isTileBigEnough: function(t) {
          if (this.level > 1) {
            var e = t.WVP;
            e._transformTo(this.topLeft, this._topLeftScreen), e._transformTo(this.bottomRight, this._bottomRightScreen), e._transformTo(this.topRight, this._topRightScreen), e._transformTo(this.bottomLeft, this._bottomLeftScreen);
            var r = this._topLeftScreen;
            r.subtract(this._topRightScreen);
            var a = r.length(), s = this._bottomLeftScreen;
            s.subtract(this._bottomRightScreen);
            var l = s.length(), h = this._bottomLeftScreen;
            h.subtract(this._topLeftScreen);
            var u = h.length(), _ = this._bottomRightScreen;
            _.subtract(this._topRightScreen);
            var m = _.length(), p = Math.max(Math.max(m, u), Math.max(l, a));
            if (p < 300)
              return !1;
            F.deepestLevel = this.level > F.deepestLevel ? this.level : F.deepestLevel;
          }
          return !0;
        },
        isTileInFrustum: function(t) {
          this.level < 2 && (!this.dataset.get_projection() || this.dataset.get_projection()), this.inViewFrustum = !1;
          for (var e = new Yn(this.sphereCenter.x, this.sphereCenter.y, this.sphereCenter.z, 1), r = 0; r < 6; r++)
            if (t[r].dot(e) < -this.sphereRadius)
              return !1;
          return this.inViewFrustum = !0, !0;
        },
        get_sphereRadius: function() {
          return this.sphereRadius;
        },
        get_sphereCenter: function() {
          return this.sphereCenter;
        },
        geoTo3d: function(t, e, r) {
          if (this.dataset.get_dataSetType() === 3) {
            var a = L.create(-(Math.cos(e * F.RC) * Math.cos(t * F.RC) * this.radius), Math.sin(t * F.RC) * this.radius, Math.sin(e * F.RC) * Math.cos(t * F.RC) * this.radius);
            return a;
          } else {
            e -= 180;
            var a = L.create(Math.cos(e * F.RC) * Math.cos(t * F.RC) * this.radius, Math.sin(t * F.RC) * this.radius, Math.sin(e * F.RC) * Math.cos(t * F.RC) * this.radius);
            return a;
          }
        },
        onCreateVertexBuffer: function(t, e) {
        },
        get_dataset: function() {
          return this.dataset;
        },
        set_dataset: function(t) {
          return this.dataset = t, t;
        },
        get_key: function() {
          return this._key == null && (this._key = He.getTileKey(this.dataset, this.level, this.tileX, this.tileY, this.parent)), this._key;
        },
        get_URL: function() {
          var t = Kt.singleton.rewrite(this.dataset.get_url(), 0), e = t;
          if (t.indexOf("{1}") > -1)
            return !this.dataset.get_projection() && !n.emptyString(this.dataset.get_quadTreeTileMap()) ? (e = n.format(t, this.getServerID(), this.getTileID()), e.indexOf("virtualearth.net") > -1 && (e += "&n=z"), e) : n.format(t, this.dataset.get_imageSetID(), this.level, this.tileX, this.tileY);
          e = n.replaceString(e, "{X}", this.tileX.toString()), e = n.replaceString(e, "{Y}", this.tileY.toString()), e = n.replaceString(e, "{L}", this.level.toString());
          var r = 0;
          e.indexOf("{S:0}") > -1 && (r = 0, e = n.replaceString(e, "{S:0}", "{S}")), e.indexOf("{S:1}") > -1 && (r = 1, e = n.replaceString(e, "{S:1}", "{S}")), e.indexOf("{S:2}") > -1 && (r = 2, e = n.replaceString(e, "{S:2}", "{S}")), e.indexOf("{S:3}") > -1 && (r = 3, e = n.replaceString(e, "{S:3}", "{S}")), e.indexOf("a{S}") > -1 && (e = n.replaceString(e, "a{S}", "r{S}")), e.indexOf("h{S}") > -1 && (e = n.replaceString(e, "h{S}", "r{S}")), e.indexOf("//r{S}.ortho.tiles.virtualearth.net") > -1 && (e = n.replaceString(e, "//r{S}.ortho.tiles.virtualearth.net", "//ecn.t{S}.tiles.virtualearth.net"));
          var a = this.getTileID(), s = "";
          return a.length ? s = a.substr(a.length - 1, 1) : s = r.toString(), e = n.replaceString(e, "{Q}", a), e = n.replaceString(e, "{S}", s), e.indexOf("virtualearth.net") > -1 && (e += "&n=z"), e;
        },
        get_demURL: function() {
          var t = Kt.singleton.rewrite(this.dataset.get_demUrl(), 0);
          if (!this.dataset.get_projection() && !V.singleton.freestandingMode && (Kt.singleton.coreStaticUrl("wwtweb/demtile.aspx?q={0},{1},{2},M"), n.emptyString(t)), t.indexOf("{1}") > -1)
            return n.format(t + "&new", this.level, this.tileX, this.tileY);
          var e = t;
          e = n.replaceString(e, "{X}", this.tileX.toString()), e = n.replaceString(e, "{Y}", this.tileY.toString()), e = n.replaceString(e, "{L}", this.level.toString());
          var r = 0;
          e.indexOf("{S:0}") > -1 && (r = 0, e = n.replaceString(e, "{S:0}", "{S}")), e.indexOf("{S:1}") > -1 && (r = 1, e = n.replaceString(e, "{S:1}", "{S}")), e.indexOf("{S:2}") > -1 && (r = 2, e = n.replaceString(e, "{S:2}", "{S}")), e.indexOf("{S:3}") > -1 && (r = 3, e = n.replaceString(e, "{S:3}", "{S}"));
          var a = this.getTileID(), s = "";
          return a.length ? s = a.substr(a.length - 1, 1) : s = r.toString(), e = n.replaceString(e, "{Q}", a), e = n.replaceString(e, "{S}", s), e;
        },
        getServerID: function() {
          var t = (this.tileX & 1) + ((this.tileY & 1) << 1);
          return t;
        },
        getTileID: function() {
          if (this._tileId != null)
            return this._tileId;
          var t = this.level, e = this.tileX, r = this.tileY;
          this.dataset.get_projection() === 1 && t++;
          var a = this.dataset.get_quadTreeTileMap();
          if (n.emptyString(a))
            return this._tileId = "0", this._tileId;
          for (var s = new n.StringBuilder(), l = t; l > 0; --l) {
            var h = 1 << l - 1, u = 0;
            e & h && (u = 1), r & h && (u += 2), s.append(a.substr(u, 1));
          }
          return this._tileId = s.toString(), this._tileId;
        },
        get_vertexCount: function() {
          return this._vertexCount;
        },
        set_vertexCount: function(t) {
          return this._vertexCount = t, t;
        }
      };
      function vt() {
      }
      vt.getTile = function(t, e, r, a, s) {
        var l = null, h = He.getTileKey(a, t, e, r, s);
        return n.keyExists(vt._tiles, h) ? l = vt._tiles[h] : (l = He.getNewTile(a, t, e, r, s), l != null && (vt._tiles[h] = l)), l;
      }, vt.getCachedTile = function(t, e, r, a, s) {
        if (t < a.get_baseLevel())
          return null;
        var l = null, h = He.getTileKey(a, t, e, r, s);
        try {
          if (n.keyExists(vt._tiles, h))
            l = vt._tiles[h];
          else
            return null;
        } catch {
        }
        return l;
      }, vt.getReadyToRenderTileCount = function() {
        var t = [], e = [];
        try {
          try {
            for (var r = n.enumerate(n.keys(vt._tiles)); r.moveNext(); ) {
              var a = r.current, s = vt._tiles[a];
              s.renderedGeneration < F.currentRenderGeneration - 10 && !(s.requestPending || s.downloading) && (s.readyToRender ? e.push(s) : t.push(s));
            }
          } catch {
          }
          return e.length;
        } catch {
          return -1;
        }
      }, vt.processQueue = function(t) {
        for (; n.keyCount(vt._queue) > 0 && vt.openThreads > 0; ) {
          for (var e = 1e5, r = !1, a = null, s = n.enumerate(n.keys(vt._queue)); s.moveNext(); ) {
            var l = s.current, h = vt._queue[l];
            if (!h.requestPending && h.inViewFrustum) {
              var u = L.makeCopy(h.get_sphereCenter());
              u._transformByMatrics(t.get_world()), t.space ? u.subtract(L.create(0, 0, -1)) : u.subtract(t.cameraPosition);
              var _ = Math.max(0, u.length() - h.get_sphereRadius()), m = h.get_dataset().get_projection() === 2 || h.get_dataset().get_projection() === 5;
              _ < e && (!r || m) && (e = _, a = h.get_key(), h.level, r = m);
            }
          }
          if (a != null) {
            var p = vt._queue[a];
            p.requestPending = !0, vt.openThreads--, vt.openThreads < 0 && (vt.openThreads = 0), p.requestImage(), p.get_dataset().get_elevationModel() && p.requestDem();
          } else
            return;
        }
      }, vt.addTileToQueue = function(t) {
        var e;
        return e = 256, !t.downloading && !t.readyToRender && (n.keyExists(vt._queue, t.get_key()) ? vt._queue[t.get_key()].requestHits += e : (t.requestHits = e, vt._queue[t.get_key()] = t)), !0;
      }, vt.removeFromQueue = function(t, e) {
        if (e) {
          var r = vt._queue[t];
          r != null && (r.requestPending = !1, delete vt._queue[r.get_key()]), vt.openThreads++;
        }
        delete vt._queue[t];
      }, vt.clearCache = function() {
        n.clearKeys(vt._tiles);
      }, vt.purgeQueue = function() {
        n.clearKeys(vt._queue);
      }, vt.purgeLRU = function() {
        if (!(n.keyCount(vt._tiles) < vt.maxReadyToRenderSize)) {
          var t = [], e = [];
          try {
            try {
              for (var r = n.enumerate(n.keys(vt._tiles)); r.moveNext(); ) {
                var a = r.current, s = vt._tiles[a];
                s.renderedGeneration < F.currentRenderGeneration - 10 && !(s.requestPending || s.downloading) && (s.readyToRender ? e.push(s) : t.push(s));
              }
            } catch {
            }
            if (vt.readyToRenderCount = e.length, e.length > vt.maxReadyToRenderSize) {
              e.sort(function(_, m) {
                return m.accessCount < _.accessCount ? 1 : m.accessCount === _.accessCount ? 0 : -1;
              });
              for (var l = e.length - vt.maxReadyToRenderSize, h = n.enumerate(e); h.moveNext(); ) {
                var s = h.current;
                if (l < 1)
                  break;
                s.cleanUp(!1), l--;
              }
            }
            if (n.keyCount(vt._tiles) < vt.maxTileCacheSize)
              return;
            if (t.length > vt.maxTileCacheSize) {
              t.sort(function(m, p) {
                return p.accessCount < m.accessCount ? 1 : p.accessCount === m.accessCount ? 0 : -1;
              });
              var l = t.length - vt.maxTileCacheSize;
              l > 20 && (l = 20);
              for (var u = n.enumerate(t); u.moveNext(); ) {
                var s = u.current;
                if (l < 1)
                  break;
                s.cleanUp(!0), delete vt._tiles[s.get_key()], l--;
              }
            }
          } catch {
          } finally {
          }
        }
      }, vt.decimateQueue = function() {
        for (var t = [], e = n.enumerate(n.keys(vt._queue)); e.moveNext(); ) {
          var r = e.current, a = vt._queue[r];
          if (!a.requestPending) {
            a.requestHits = a.requestHits / 2;
            try {
              a.requestHits < 2 ? t.push(a) : a.inViewFrustum || t.push(a);
            } catch {
            }
          }
        }
        for (var s = n.enumerate(t); s.moveNext(); ) {
          var a = s.current;
          delete vt._queue[a.get_key()];
        }
      };
      var Fh = {};
      function xr() {
      }
      xr.lineToPoint = function(t, e, r) {
        var a = L.subtractVectors(e, t), s = L.subtractVectors(r, t), l = L.cross(s, a).length() / a.length();
        return l;
      }, xr.getUVFromInnerPoint = function(t, e, r, a, s) {
        t.normalize(), e.normalize(), r.normalize(), a.normalize(), s.normalize();
        var l = xr.lineToPoint(t, e, s), h = xr.lineToPoint(r, a, s), u = l + h, _ = xr.lineToPoint(e, a, s), m = xr.lineToPoint(t, r, s), p = _ + m;
        return lt.create(m / p, l / u);
      };
      var zh = {};
      function Rn() {
        this.userLevel = 0, this.classification = 0, this.averageRating = 0, this.lengthInSecs = 0, this._thumbnailUrlField = "";
      }
      Rn._fromXml = function(t) {
        var e = new Rn();
        return t.attributes.getNamedItem("ID") != null && (e.id = t.attributes.getNamedItem("ID").nodeValue), t.attributes.getNamedItem("TourUrl") != null && (e._tourUrl = t.attributes.getNamedItem("TourUrl").nodeValue), t.attributes.getNamedItem("Title") != null && (e.title = t.attributes.getNamedItem("Title").nodeValue), t.attributes.getNamedItem("Description") != null && (e.description = t.attributes.getNamedItem("Description").nodeValue), t.attributes.getNamedItem("Classification") != null && (e.classification = Et.parse("Classification", t.attributes.getNamedItem("Classification").nodeValue)), t.attributes.getNamedItem("AuthorEmail") != null && (e.authorEmail = t.attributes.getNamedItem("AuthorEmail").nodeValue), t.attributes.getNamedItem("Author") != null && (e.author = t.attributes.getNamedItem("Author").nodeValue), t.attributes.getNamedItem("AuthorURL") != null && (e.authorURL = t.attributes.getNamedItem("AuthorURL").nodeValue), t.attributes.getNamedItem("AuthorImageUrl") != null && (e.authorImageUrl = t.attributes.getNamedItem("AuthorImageUrl").nodeValue), t.attributes.getNamedItem("AverageRating") != null && (e.averageRating = parseFloat(t.attributes.getNamedItem("AverageRating").nodeValue)), t.attributes.getNamedItem("LengthInSecs") != null && (e.lengthInSecs = parseFloat(t.attributes.getNamedItem("LengthInSecs").nodeValue)), t.attributes.getNamedItem("OrganizationUrl") != null && (e.organizationUrl = t.attributes.getNamedItem("OrganizationUrl").nodeValue), t.attributes.getNamedItem("OrganizationName") != null && (e.organizationName = t.attributes.getNamedItem("OrganizationName").nodeValue), t.attributes.getNamedItem("RelatedTours") != null && (e.relatedTours = t.attributes.getNamedItem("RelatedTours").nodeValue), t.attributes.getNamedItem("Keywords") != null && (e.keywords = t.attributes.getNamedItem("Keywords").nodeValue), t.attributes.getNamedItem("ThumbnailUrl") != null && e.set_thumbnailUrl(t.attributes.getNamedItem("ThumbnailUrl").nodeValue), e;
      };
      var Bh = {
        get_name: function() {
          return this.title;
        },
        get_thumbnail: function() {
          return this._thumbnail;
        },
        set_thumbnail: function(t) {
          return this._thumbnail = t, t;
        },
        get_thumbnailUrl: function() {
          if (n.emptyString(this._thumbnailUrlField)) {
            if (V.singleton.freestandingMode)
              return Kt.singleton.engineAssetUrl("thumb_star.jpg");
          } else
            return this._thumbnailUrlField;
          return n.format(Kt.singleton.coreStaticUrl("wwtweb/GetTourThumbnail.aspx?GUID={0}"), this.id);
        },
        set_thumbnailUrl: function(t) {
          return this._thumbnailUrlField = t, t;
        },
        get_tourUrl: function() {
          return n.emptyString(this._tourUrl) && !V.singleton.freestandingMode ? n.format(Kt.singleton.coreStaticUrl("wwtweb/GetTour.aspx?GUID={0}"), this.id) : this._tourUrl;
        },
        set_tourUrl: function(t) {
          return this._tourUrl = t, t;
        },
        get_bounds: function() {
          return this._bounds;
        },
        set_bounds: function(t) {
          return this._bounds = t, t;
        },
        get_isImage: function() {
          return !1;
        },
        get_isTour: function() {
          return !0;
        },
        get_isFolder: function() {
          return !1;
        },
        get_isCloudCommunityItem: function() {
          return !1;
        },
        get_readOnly: function() {
          return !1;
        },
        get_children: function() {
          return [];
        }
      };
      function Na(t, e) {
        this.size = 0, this.offset = 0, this.filename = t, this.size = e;
      }
      var Vh = {
        toString: function() {
          return this.filename;
        }
      };
      function pn() {
        this.tempDirectory = "", this._currentOffset = 0, this._packageID = "", this.url = "", this.clearFileList();
      }
      pn.fromUrl = function(t, e) {
        var r = new pn();
        return r.url = t, r._callMe = e, r._webFile = new Ai(t), r._webFile.responseType = "blob", r._webFile.onStateChange = n.bind("_loadCabinet", r), r._webFile.send(), r;
      };
      var Oh = {
        get_packageID: function() {
          return this._packageID;
        },
        set_packageID: function(t) {
          return this._packageID = t, t;
        },
        addFile: function(t, e) {
          if (e != null && !n.keyExists(this._fileDirectory, t)) {
            var r = new Na(t, e.size);
            r.offset = this._currentOffset, r.blob = e, this.fileList.push(r), this._fileDirectory[t] = r, this._currentOffset += r.size;
          }
        },
        clearFileList: function() {
          this.fileList == null && (this.fileList = []), this._fileDirectory == null && (this._fileDirectory = {}), this.fileList.length = 0, n.clearKeys(this._fileDirectory), this._currentOffset = 0;
        },
        packageFiles: function() {
          var t = new Jr();
          t.formatting = 1, t._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), t._writeStartElement("FileCabinet"), t._writeAttributeString("HeaderSize", "0x0BADFOOD"), t._writeStartElement("Files");
          for (var e = n.enumerate(this.fileList); e.moveNext(); ) {
            var r = e.current;
            t._writeStartElement("File"), t._writeAttributeString("Name", r.filename), t._writeAttributeString("Size", r.size.toString()), t._writeAttributeString("Offset", r.offset.toString()), t._writeEndElement();
          }
          t._writeEndElement(), t._writeFullEndElement(), t._close();
          var a = t.body, s = new Blob([a]), l = n.format("0x{0:x8}", s.size);
          a = n.replaceString(a, "0x0BADFOOD", l), s = new Blob([a]);
          var h = [];
          h.push(s);
          for (var u = n.enumerate(this.fileList); u.moveNext(); ) {
            var r = u.current;
            h.push(r.blob);
          }
          var _ = new Blob(h, { type: "application/x-wtt" });
          return _;
        },
        _loadCabinet: function() {
          var t = this;
          if (this._webFile.get_state() === 2)
            alert(this._webFile.get_message());
          else if (this._webFile.get_state() === 1) {
            this._mainBlob = this._webFile.getBlob();
            var e = new FileReader();
            e.onloadend = function(r) {
              var a = t._getSize(e.result), s = new FileReader();
              s.onloadend = function(l) {
                var h = n.safeCast(s.result, String), u = new DOMParser();
                t.extract(u.parseFromString(h, "text/xml"), a), t._callMe();
              }, s.readAsText(t._mainBlob.slice(0, a));
            }, e.readAsText(this._mainBlob.slice(0, 255));
          }
        },
        _getSize: function(t) {
          var e = t.indexOf("0x");
          return e === -1 ? 0 : parseInt(t.substring(e, e + 10), 16);
        },
        extract: function(t, e) {
          try {
            var r = at.selectSingleNode(t, "FileCabinet"), a = at.selectSingleNode(r, "Files");
            this.fileList.length = 0;
            for (var s = n.enumerate(a.childNodes); s.moveNext(); ) {
              var l = s.current;
              if (l.nodeName === "File") {
                var h = new Na(l.attributes.getNamedItem("Name").nodeValue, parseInt(l.attributes.getNamedItem("Size").nodeValue));
                h.offset = e, e += h.size, this.fileList.push(h);
              }
            }
          } catch {
          }
        },
        getFileBlob: function(t) {
          var e = this.getFileEntry(t);
          if (e != null) {
            var r = t.substr(t.lastIndexOf(".")).toLowerCase(), a = null;
            switch (r) {
              case ".png":
                a = "image/png";
                break;
              case ".jpg":
              case ".jpeg":
                a = "image/jpeg";
                break;
              case ".mp3":
                a = "audio/mpeg3";
                break;
              case ".txt":
                a = "text/plain";
                break;
              case ".fit":
              case ".fits":
                a = "application/octet-stream";
                break;
            }
            return this._mainBlob.slice(e.offset, e.offset + e.size, a);
          }
          return null;
        },
        getFileEntry: function(t) {
          for (var e = n.enumerate(this.fileList); e.moveNext(); ) {
            var r = e.current;
            if (r.filename === t)
              return r;
          }
          return null;
        },
        get_masterFile: function() {
          return this.fileList.length > 0 ? this.fileList[0].filename : null;
        },
        clearTempFiles: function() {
          for (var t = n.enumerate(this.fileList); t.moveNext(); )
            t.current;
        }
      };
      function En(t, e, r, a) {
        this.targetState = !1, this.edgeTrigger = !1, this.opacity = 0, this.edgeTrigger = t, this.opacity = e, this.targetState = r, this.filter = a;
      }
      var Uh = {};
      function xe() {
        this.isDynamic = !1, this.isDesignTimeOnly = !1, this._name = "", this.id = (xe.nextId++).toString(), this._owner = null, this._url = "", this._linkID = "", this._domeMatrix = H.get_identity(), this._domeMatX = 0, this._domeMatY = 0, this._domeAngle = 0, this.points = null, this._animate = !1, this._tweenFactor = 0, this._endX = 0, this._endY = 0, this._endOpacity = 0, this._endColor = new B(), this._endWidth = 0, this._endHeight = 0, this._endRotationAngle = 0, this._anchor = 1, this._x = 0, this._y = 0, this._width = 0, this._height = 0, this._color = ot.get_white(), this._opacity = 0.5, this._rotationAngle = 0, this.currentRotation = 0, this.texture = null, this.texture2d = null, this._interpolationType = 5;
      }
      xe._fromXml = function(t, e) {
        if (e.attributes == null || e.attributes.getNamedItem("Type") == null)
          return null;
        var r = e.attributes.getNamedItem("Type").nodeValue, a = n.replaceString(r, "TerraViewer.", ""), s = null;
        switch (a) {
          case "AudioOverlay":
            s = new zn();
            break;
          case "BitmapOverlay":
            s = new Wr();
            break;
          case "FlipBookOverlay":
            s = new bn();
            break;
          case "ShapeOverlay":
            s = new Qr();
            break;
          case "TextOverlay":
            s = new rr();
            break;
          default:
            return null;
        }
        return s._owner = t, s._initOverlayFromXml(e), s;
      };
      var Gh = {
        get_name: function() {
          return this._name;
        },
        set_name: function(t) {
          return this._name = t, t;
        },
        get_owner: function() {
          return this._owner;
        },
        set_owner: function(t) {
          return this._owner = t, t;
        },
        get_zOrder: function() {
          for (var t = 0, e = n.enumerate(this._owner.get_overlays()); e.moveNext(); ) {
            var r = e.current;
            if (r === this)
              break;
            t++;
          }
          return t;
        },
        get_url: function() {
          return this._url;
        },
        set_url: function(t) {
          return this._url = t, t;
        },
        get_linkID: function() {
          return this._linkID;
        },
        set_linkID: function(t) {
          return this._linkID = t, t;
        },
        play: function() {
        },
        pause: function() {
        },
        stop: function() {
        },
        seek: function(t) {
        },
        makePosition: function(t, e, r, a, s) {
          t -= 960, e -= 558;
          var l = L.create(t + r, e + a, 1347);
          return (this._domeMatX || this._domeMatY || this._domeAngle !== s) && (this._domeMatX = t, this._domeMatY = e, this._domeMatrix = H.translation(L.create(-t, -e, 0)), this._domeMatrix._multiply(H._rotationZ(s / 180 * Math.PI)), this._domeMatrix._multiply(H.translation(L.create(t, e, 0)))), l = L._transformCoordinate(l, this._domeMatrix), l;
        },
        draw3D: function(t, e) {
          fe.useGl && ((this.texture == null || this.isDynamic) && this.initializeTexture(), (!this.isDesignTimeOnly || e) && (this.initializeGeometry(), this.updateRotation()));
        },
        cleanUp: function() {
          this.texture != null && (this.texture = null), this.texture2d = null;
        },
        initializeTexture: function() {
        },
        prepMultimedia: function() {
        },
        cleanUpGeometry: function() {
          this.currentRotation = 0, this.points = null;
        },
        initializeGeometry: function() {
          this.points == null && (this.currentRotation = 0, this.points = new Array(4), this.points[0] = new ne(), this.points[0].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, -this.get_height() / 2, this.get_rotationAngle()), this.points[0].tu = 0, this.points[0].tv = 0, this.points[0].color = this.get_color(), this.points[1] = new ne(), this.points[1].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, -this.get_height() / 2, this.get_rotationAngle()), this.points[1].tu = 1, this.points[1].tv = 0, this.points[1].color = this.get_color(), this.points[2] = new ne(), this.points[2].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[2].tu = 0, this.points[2].tv = 1, this.points[2].color = this.get_color(), this.points[3] = new ne(), this.points[3].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[3].tu = 1, this.points[3].tv = 1, this.points[3].color = this.get_color());
        },
        updateRotation: function() {
        },
        get_animate: function() {
          return this._animate;
        },
        set_animate: function(t) {
          return this._animate !== t && (this._animate = t, this._animate ? (this._endX = this._x, this._endY = this._y, this._endRotationAngle = this._rotationAngle, this._endColor = this._color, this._endWidth = this._width, this._endHeight = this._height, this.cleanUpGeometry()) : (this._endX = this._x = this.get_x(), this._endY = this._y = this.get_y(), this._endRotationAngle = this._rotationAngle = this.get_rotationAngle(), this._endColor = this._color = this.get_color(), this._endWidth = this._width = this.get_width(), this._endHeight = this._height = this.get_height(), this.cleanUpGeometry(), this._tweenFactor = 0)), t;
        },
        get_tweenFactor: function() {
          return this._tweenFactor;
        },
        set_tweenFactor: function(t) {
          return this._animate ? this._tweenFactor !== t && (this._tweenFactor = t, this.cleanUpGeometry()) : this._tweenFactor = 0, t;
        },
        get_anchor: function() {
          return this._anchor;
        },
        set_anchor: function(t) {
          return this._anchor = t, t;
        },
        get_position: function() {
          return lt.create(this.get_x(), this.get_y());
        },
        set_position: function(t) {
          return this.set_x(t.x), this.set_y(t.y), t;
        },
        get_x: function() {
          return this._x * (1 - this._tweenFactor) + this._endX * this._tweenFactor;
        },
        set_x: function(t) {
          return this._tweenFactor < 0.5 ? this._x !== t && (this._x = t, this.cleanUpGeometry()) : this._endX !== t && (this._endX = t, this.cleanUpGeometry()), t;
        },
        get_y: function() {
          return this._y * (1 - this._tweenFactor) + this._endY * this._tweenFactor;
        },
        set_y: function(t) {
          return this._tweenFactor < 0.5 ? this._y !== t && (this._y = t, this.cleanUpGeometry()) : this._endY !== t && (this._endY = t, this.cleanUpGeometry()), t;
        },
        get_width: function() {
          return this._width * (1 - this._tweenFactor) + this._endWidth * this._tweenFactor;
        },
        set_width: function(t) {
          return t < 5 && t && (t = 5), this._tweenFactor < 0.5 ? this._width !== t && (this._width = t, this.cleanUpGeometry()) : this._endWidth !== t && (this._endWidth = t, this.cleanUpGeometry()), t;
        },
        get_height: function() {
          return this._height * (1 - this._tweenFactor) + this._endHeight * this._tweenFactor;
        },
        set_height: function(t) {
          return t < 5 && t && (t = 5), this._tweenFactor < 0.5 ? this._height !== t && (this._height = t, this.cleanUpGeometry()) : this._endHeight !== t && (this._endHeight = t, this.cleanUpGeometry()), t;
        },
        get_color: function() {
          var t = n.truncate(this._color.r * (1 - this._tweenFactor) + this._endColor.r * this._tweenFactor), e = n.truncate(this._color.g * (1 - this._tweenFactor) + this._endColor.g * this._tweenFactor), r = n.truncate(this._color.b * (1 - this._tweenFactor) + this._endColor.b * this._tweenFactor), a = n.truncate(this._color.a * (1 - this._tweenFactor) + this._endColor.a * this._tweenFactor);
          return B.fromArgb(Math.max(0, Math.min(255, a)), Math.max(0, Math.min(255, t)), Math.max(0, Math.min(255, e)), Math.max(0, Math.min(255, r)));
        },
        set_color: function(t) {
          return this._tweenFactor < 0.5 ? this._color !== t && (this._color = t, this.cleanUpGeometry()) : this._endColor !== t && (this._endColor = t, this.cleanUpGeometry()), t;
        },
        get_opacity: function() {
          return this.get_color().a / 255;
        },
        set_opacity: function(t) {
          var e = this.get_color();
          return this.set_color(B.fromArgb(Math.min(255, n.truncate(t * 255)), e.r, e.g, e.b)), this._opacity = t, t;
        },
        get_rotationAngle: function() {
          return this._rotationAngle * (1 - this._tweenFactor) + this._endRotationAngle * this._tweenFactor;
        },
        set_rotationAngle: function(t) {
          return this._tweenFactor < 0.5 ? this._rotationAngle !== t && (this._rotationAngle = t, this.cleanUpGeometry()) : this._endRotationAngle !== t && (this._endRotationAngle = t, this.cleanUpGeometry()), t;
        },
        hitTest: function(t) {
          var e = new Array(1);
          e[0] = lt.create(t.x, t.y);
          var r = Ge.rotateAt(-this.get_rotationAngle() / 180 * Math.PI, lt.create(this.get_x(), this.get_y()));
          r._transformPoints(e);
          var a = fi.create(this.get_x() - this.get_width() / 2, this.get_y() - this.get_height() / 2, this.get_width(), this.get_height());
          return a.contains(e[0]);
        },
        get_bounds: function() {
          return this._bounds;
        },
        set_bounds: function(t) {
          return this._bounds = t, t;
        },
        get_interpolationType: function() {
          return this._interpolationType;
        },
        set_interpolationType: function(t) {
          return this._interpolationType = t, t;
        },
        saveToXml: function(t, e) {
          t._writeStartElement("Overlay"), t._writeAttributeString("Id", this.id), t._writeAttributeString("Type", this.getTypeName()), t._writeAttributeString("Name", this.get_name()), t._writeAttributeString("X", this._x.toString()), t._writeAttributeString("Y", this._y.toString()), t._writeAttributeString("Width", this._width.toString()), t._writeAttributeString("Height", this._height.toString()), t._writeAttributeString("Rotation", this._rotationAngle.toString()), t._writeAttributeString("Color", this._color.save()), t._writeAttributeString("Url", this._url), t._writeAttributeString("LinkID", this._linkID), t._writeAttributeString("Animate", this._animate.toString()), this._animate && (t._writeAttributeString("EndX", this._endX.toString()), t._writeAttributeString("EndY", this._endY.toString()), t._writeAttributeString("EndWidth", this._endWidth.toString()), t._writeAttributeString("EndHeight", this._endHeight.toString()), t._writeAttributeString("EndRotation", this._endRotationAngle.toString()), t._writeAttributeString("EndColor", this._endColor.save()), t._writeAttributeString("InterpolationType", Et.toXml("InterpolationType", this._interpolationType))), t._writeAttributeString("Anchor", Et.toXml("OverlayAnchor", this._anchor)), this.writeOverlayProperties(t), t._writeEndElement();
        },
        getTypeName: function() {
          return "TerraViewer.Overlay";
        },
        addFilesToCabinet: function(t) {
        },
        writeOverlayProperties: function(t) {
        },
        _initOverlayFromXml: function(t) {
          this.id = t.attributes.getNamedItem("Id").nodeValue, this.set_name(t.attributes.getNamedItem("Name").nodeValue), this._x = parseFloat(t.attributes.getNamedItem("X").nodeValue), this._y = parseFloat(t.attributes.getNamedItem("Y").nodeValue), this._width = parseFloat(t.attributes.getNamedItem("Width").nodeValue), this._height = parseFloat(t.attributes.getNamedItem("Height").nodeValue), this._rotationAngle = parseFloat(t.attributes.getNamedItem("Rotation").nodeValue), this._color = B.load(t.attributes.getNamedItem("Color").nodeValue), t.attributes.getNamedItem("Url") != null && this.set_url(t.attributes.getNamedItem("Url").nodeValue), t.attributes.getNamedItem("LinkID") != null && this.set_linkID(t.attributes.getNamedItem("LinkID").nodeValue), t.attributes.getNamedItem("Animate") != null && (this._animate = n.boolean(t.attributes.getNamedItem("Animate").nodeValue), this._animate && (this._endX = parseFloat(t.attributes.getNamedItem("EndX").nodeValue), this._endY = parseFloat(t.attributes.getNamedItem("EndY").nodeValue), this._endColor = B.load(t.attributes.getNamedItem("EndColor").nodeValue), this._endWidth = parseFloat(t.attributes.getNamedItem("EndWidth").nodeValue), this._endHeight = parseFloat(t.attributes.getNamedItem("EndHeight").nodeValue), this._endRotationAngle = parseFloat(t.attributes.getNamedItem("EndRotation").nodeValue), t.attributes.getNamedItem("InterpolationType") != null && this.set_interpolationType(Et.parse("InterpolationType", t.attributes.getNamedItem("InterpolationType").nodeValue)))), this.initializeFromXml(t);
        },
        initializeFromXml: function(t) {
        },
        toString: function() {
          return this.get_name();
        }
      };
      function Le() {
        this._singleSelectHandles = null, this._multiSelectHandles = null, this._focusHandles = null, this.selectionSet = [], this._focus = null, this._ratio = 1, this._sprite = new Hr(), this._centerX = 0, this._centerY = 0;
      }
      var Hh = {
        clearSelection: function() {
          this.selectionSet.length = 0;
        },
        addSelection: function(t) {
          t != null && (this.selectionSet.indexOf(t) >= 0 || this.selectionSet.push(t));
        },
        addSelectionRange: function(t) {
          for (var e = n.enumerate(t); e.moveNext(); ) {
            var r = e.current;
            this.selectionSet.push(r);
          }
        },
        isOverlaySelected: function(t) {
          return this.selectionSet.indexOf(t) >= 0;
        },
        setSelection: function(t) {
          this.selectionSet.length = 0, t != null && this.selectionSet.push(t);
        },
        get_multiSelect: function() {
          return this.selectionSet.length > 1;
        },
        setSelectionRange: function(t) {
          this.selectionSet.length = 0;
          for (var e = n.enumerate(t); e.moveNext(); ) {
            var r = e.current;
            this.selectionSet.push(r);
          }
        },
        get_focus: function() {
          return this._focus;
        },
        set_focus: function(t) {
          return this._focus = t, t;
        },
        draw3D: function(t, e) {
          if (this._ratio = 1116 / t.height, this._singleSelectHandles == null && (this._singleSelectHandles = Te.fromUrl("images/Selhand.bmp")), this._multiSelectHandles == null && (this._multiSelectHandles = Te.fromUrl("images/multiSelhand.bmp")), this._focusHandles == null && (this._focusHandles = Te.fromUrl("images/FocusHandles.png")), this.selectionSet.length > 1)
            for (var r = n.enumerate(this.selectionSet); r.moveNext(); ) {
              var a = r.current;
              a === this._focus ? this._drawSelectionHandles(t, a, this._focusHandles) : this._drawSelectionHandles(t, a, this._multiSelectHandles);
            }
          else
            for (var s = n.enumerate(this.selectionSet); s.moveNext(); ) {
              var a = s.current;
              this._drawSelectionHandles(t, a, this._singleSelectHandles);
            }
        },
        _drawSelectionHandles: function(t, e, r) {
          for (var a = this.makeHandles(e), s = e.get_rotationAngle(), l = 0, h = 0, u = n.enumerate(a); u.moveNext(); ) {
            var _ = u.current;
            Le._points[l + 0] = new ne(), Le._points[l + 0].position = e.makePosition(this._centerX, this._centerY, _.get_left() - this._centerX, _.get_top() - this._centerY, s), Le._points[l + 0].tu = h * (1 / 9), Le._points[l + 0].tv = 0, Le._points[l + 0].color = ot.get_white(), Le._points[l + 1] = new ne(), Le._points[l + 1].position = e.makePosition(this._centerX, this._centerY, _.get_right() - this._centerX, _.get_top() - this._centerY, s), Le._points[l + 1].tu = (h + 1) * (1 / 9), Le._points[l + 1].tv = 0, Le._points[l + 1].color = ot.get_white(), Le._points[l + 2] = new ne(), Le._points[l + 2].position = e.makePosition(this._centerX, this._centerY, _.get_left() - this._centerX, _.get_bottom() - this._centerY, s), Le._points[l + 2].tu = h * (1 / 9), Le._points[l + 2].tv = 1, Le._points[l + 2].color = ot.get_white(), Le._points[l + 3] = new ne(), Le._points[l + 3].position = e.makePosition(this._centerX, this._centerY, _.get_right() - this._centerX, _.get_top() - this._centerY, s), Le._points[l + 3].tu = (h + 1) * (1 / 9), Le._points[l + 3].tv = 0, Le._points[l + 3].color = ot.get_white(), Le._points[l + 4] = new ne(), Le._points[l + 4].position = e.makePosition(this._centerX, this._centerY, _.get_right() - this._centerX, _.get_bottom() - this._centerY, s), Le._points[l + 4].tu = (h + 1) * (1 / 9), Le._points[l + 4].tv = 1, Le._points[l + 4].color = ot.get_white(), Le._points[l + 5] = new ne(), Le._points[l + 5].position = e.makePosition(this._centerX, this._centerY, _.get_left() - this._centerX, _.get_bottom() - this._centerY, s), Le._points[l + 5].tu = h * (1 / 9), Le._points[l + 5].tv = 1, Le._points[l + 5].color = ot.get_white(), l += 6, h++;
          }
          this.get_multiSelect() ? this._sprite.draw(t, Le._points, Le._points.length - 6, r, !1, 1) : this._sprite.draw(t, Le._points, Le._points.length, r, !1, 1);
        },
        pointToSelectionSpace: function(t) {
          var e = new Array(1);
          e[0] = lt.create(t.x, t.y);
          var r = Ge.rotateAt(-this.selectionSet[0].get_rotationAngle() / 180 * Math.PI, lt.create(this.selectionSet[0].get_x(), this.selectionSet[0].get_y()));
          return r._transformPoints(e), e[0];
        },
        pointToScreenSpace: function(t) {
          var e = new Array(1);
          e[0] = lt.create(t.x, t.y);
          var r = Ge.rotateAt(this.selectionSet[0].get_rotationAngle() / 180 * Math.PI, lt.create(this.selectionSet[0].get_x(), this.selectionSet[0].get_y()));
          return r._transformPoints(e), e[0];
        },
        hitTest: function(t) {
          if (this.selectionSet.length === 1)
            for (var e = n.enumerate(this.selectionSet); e.moveNext(); )
              for (var r = e.current, a = this.makeHandles(r), s = 0, l = this.pointToSelectionSpace(t), h = n.enumerate(a); h.moveNext(); ) {
                var u = h.current;
                if (u.contains(l))
                  return s;
                s++;
              }
          return 11;
        },
        makeHandles: function(t) {
          var e = n.truncate(t.get_x() - t.get_width() / 2) + 0.5, r = n.truncate(t.get_y()) - t.get_height() / 2 + 0.5;
          this._centerX = t.get_x(), this._centerY = t.get_y();
          var a = t.get_width(), s = t.get_height(), l = 12 * this._ratio, h = new Array(9);
          return h[0] = fi.create(e - l, r - l, l, l), h[1] = fi.create(e + a / 2 - l / 2, r - l, l, l), h[2] = fi.create(e + a, r - l, l, l), h[3] = fi.create(e + a, r + s / 2 - l / 2, l, l), h[4] = fi.create(e + a, r + s, l, l), h[5] = fi.create(e + a / 2 - l / 2, r + s, l, l), h[6] = fi.create(e - l, r + s, l, l), h[7] = fi.create(e - l, r + s / 2 - l / 2, l, l), h[8] = fi.create(e + a / 2 - l / 2, r - 30 * this._ratio, l, l), h;
        }
      };
      function Fr() {
        this.bold = !1, this.italic = !1, this.underline = !1, this.fontSize = 0, this.borderStyle = 0;
      }
      Fr.create = function(t, e, r, a, s, l, h, u, _) {
        var m = new Fr();
        return m.text = t, m.bold = e, m.italic = r, m.underline = a, m.fontSize = s, m.fontName = l, m.foregroundColor = h, m.backgroundColor = u, m.borderStyle = _, m;
      }, Fr._fromXml = function(t) {
        var e = new Fr();
        return e.text = at.getInnerText(t), e.borderStyle = 0, e.bold = n.boolean(t.attributes.getNamedItem("Bold").nodeValue), e.italic = n.boolean(t.attributes.getNamedItem("Italic").nodeValue), e.underline = n.boolean(t.attributes.getNamedItem("Underline").nodeValue), e.fontSize = parseFloat(t.attributes.getNamedItem("FontSize").nodeValue), e.fontName = t.attributes.getNamedItem("FontName").nodeValue, e.foregroundColor = B.load(t.attributes.getNamedItem("ForgroundColor").nodeValue), e.backgroundColor = B.load(t.attributes.getNamedItem("BackgroundColor").nodeValue), t.attributes.getNamedItem("BorderStyle") != null && (e.borderStyle = Et.parse("TextBorderStyle", t.attributes.getNamedItem("BorderStyle").nodeValue)), e;
      };
      var Xh = {
        toString: function() {
          return this.text;
        },
        _saveToXml: function(t) {
          t._writeStartElement("TextObject"), t._writeAttributeString("Bold", this.bold.toString()), t._writeAttributeString("Italic", this.italic.toString()), t._writeAttributeString("Underline", this.underline.toString()), t._writeAttributeString("FontSize", this.fontSize.toString()), t._writeAttributeString("FontName", this.fontName), t._writeAttributeString("ForgroundColor", this.foregroundColor.save()), t._writeAttributeString("BackgroundColor", this.backgroundColor.save()), t._writeAttributeString("BorderStyle", Et.toXml("TextBorderStyle", this.borderStyle)), t._writeString(this.text), t._writeEndElement();
        }
      };
      function ir() {
        this._tourDirty = 0, this._workingDirectory = "", this.url = "", this._tagId = "", this._representativeThumbnailTourstop = 0, this._id = "", this._title = "", this._runTime = 0, this._lastDirtyCheck = 0, this._description = "", this._attributesAndCredits = "", this._authorEmailOther = "", this._authorEmail = "", this._authorUrl = "", this._authorPhone = "", this._authorContactText = "", this._orgName = "None", this._orgUrl = "", this._author = "", this._authorImageUrl = "", this._authorImage = null, this._organizationUrl = "", this._filename = "", this._level = 0, this._type = 268435456, this._taxonomy = "", this._keywords = "", this._objects = "", this._editMode = !1, this.explicitTourLinks = [], this.implicitTourLinks = [], this._tourStops = [], this._currentTourstopIndex = -1, this._textureList = {}, this._textureList2d = {}, this._fileCache = {}, this.dontCleanUpTempFiles = !1, this._id = di.newGuid().toString();
      }
      ir.get_baseWorkingDirectory = function() {
        return "";
      }, ir.fromUrl = function(t, e) {
        var r = new ir();
        return r.url = t, r._callMe = e, r._cabinet = pn.fromUrl(t, n.bind("_loadXmlDocument", r)), r;
      }, ir.fromUrlRaw = function(t, e) {
        var r = new ir();
        return r.url = t, r._callMe = e, r._cabinet = pn.fromUrl(t, e), r;
      };
      var qh = {
        get_tourDirty: function() {
          return this._tourDirty > 0;
        },
        set_tourDirty: function(t) {
          return t ? this._tourDirty++ : this._tourDirty = 0, t;
        },
        get_workingDirectory: function() {
          return n.emptyString(this._workingDirectory) && (this._workingDirectory = ir.get_baseWorkingDirectory() + this._id + "\\"), this._workingDirectory;
        },
        set_workingDirectory: function(t) {
          return this._workingDirectory = t, t;
        },
        _loadXmlDocument: function() {
          var t = this;
          try {
            var e = this._cabinet.get_masterFile(), r = new FileReader();
            r.onloadend = function(a) {
              var s = n.safeCast(r.result, String), l = new DOMParser();
              t.fromXml(l.parseFromString(s, "text/xml")), t._callMe();
            }, r.readAsText(this._cabinet.getFileBlob(e));
          } catch (a) {
            V.scriptInterface._fireTourError(a);
          }
        },
        fromXml: function(t) {
          var e = at.selectSingleNode(t, "Tour");
          this._id = e.attributes.getNamedItem("ID").nodeValue, this.set_title(e.attributes.getNamedItem("Title").nodeValue), this.set_author(e.attributes.getNamedItem("Author").nodeValue), e.attributes.getNamedItem("Descirption") != null && this.set_description(e.attributes.getNamedItem("Descirption").nodeValue), e.attributes.getNamedItem("AuthorEmail") != null && (this._authorEmail = e.attributes.getNamedItem("AuthorEmail").nodeValue), e.attributes.getNamedItem("Keywords") != null && this.set_keywords(e.attributes.getNamedItem("Keywords").nodeValue), e.attributes.getNamedItem("OrganizationName") != null && this.set_orgName(e.attributes.getNamedItem("OrganizationName").nodeValue), this._organizationUrl = e.attributes.getNamedItem("OrganizationUrl").nodeValue, this._level = Et.parse("UserLevel", e.attributes.getNamedItem("UserLevel").nodeValue), this._type = Et.parse("Classification", e.attributes.getNamedItem("Classification").nodeValue), this._taxonomy = e.attributes.getNamedItem("Taxonomy").nodeValue;
          for (var r = at.selectSingleNode(e, "TourStops"), a = n.enumerate(r.childNodes); a.moveNext(); ) {
            var s = a.current;
            s.nodeName === "TourStop" && this.addTourStop(Fi._fromXml(this, s));
          }
          var l = at.selectSingleNode(e, "ReferenceFrames");
          if (l != null) {
            for (var h = n.enumerate(l.childNodes); h.moveNext(); ) {
              var u = h.current;
              if (u.nodeName === "ReferenceFrame") {
                var _ = new ci();
                if (_.initializeFromXml(u), !n.keyExists(T.get_allMaps(), _.name)) {
                  var m = new Xe(_.name, 18);
                  m.frame = _, m.loadedFromTour = !0, T.get_allMaps()[_.name] = m;
                }
              }
            }
            T.connectAllChildren(), T.loadTree();
          }
          var p = at.selectSingleNode(e, "Layers");
          if (p != null) {
            for (var b = n.enumerate(p.childNodes); b.moveNext(); ) {
              var S = b.current;
              if (S.nodeName === "Layer") {
                var x = we.fromXml(S, !0);
                if (x != null) {
                  if (n.canCast(x, si)) {
                    var k = x, P = k.get_imageSet();
                    if (P.get_projection() === 7 && P.get_extension() === ".tsv") {
                      V.singleton.addCatalogHips(P);
                      continue;
                    }
                  }
                  var I = n.format("{0}.txt", x.id.toString());
                  n.keyExists(T.get_layerList(), x.id) && T.deleteLayerByID(x.id, !0, !1);
                  try {
                    x.loadedFromTour = !0, x.loadData(this, I), T.add(x, !1);
                  } catch {
                  }
                }
              }
            }
            T.loadTree();
          }
          this._tourDirty = 0;
        },
        saveToDataUrl: function() {
          return URL.createObjectURL(this.saveToBlob());
        },
        saveToBlob: function() {
          var t = !1;
          this.cleanUp();
          var e = this.getTourXML(), r = new pn();
          r.set_packageID(this.get_id()), r.addFile("Tour.wwtxml", new Blob([e])), this._authorImage != null;
          for (var a = n.enumerate(this.get_tourStops()); a.moveNext(); ) {
            var s = a.current;
            s._addFilesToCabinet(r, t);
          }
          for (var l = this._createLayerMasterList(), h = n.enumerate(l); h.moveNext(); ) {
            var u = h.current;
            n.keyExists(T.get_layerList(), u) && T.get_layerList()[u].addFilesToCabinet(r);
          }
          return this.set_tourDirty(!1), r.packageFiles();
        },
        getTourXML: function() {
          var t = new Jr();
          t.formatting = 1, t._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), t._writeStartElement("Tour"), t._writeAttributeString("ID", this._id), t._writeAttributeString("Title", this._title), t._writeAttributeString("Descirption", this.get_description()), t._writeAttributeString("Description", this.get_description()), t._writeAttributeString("RunTime", (this.get_runTime() / 1e3).toString()), t._writeAttributeString("Author", this._author), t._writeAttributeString("AuthorEmail", this._authorEmail), t._writeAttributeString("OrganizationUrl", this._organizationUrl), t._writeAttributeString("OrganizationName", this.get_orgName()), t._writeAttributeString("Keywords", this.get_keywords()), t._writeAttributeString("UserLevel", Et.toXml("UserLevel", this._level)), t._writeAttributeString("Classification", Et.toXml("Classification", this._type)), t._writeAttributeString("Taxonomy", this._taxonomy);
          var e = this._isTimelineTour();
          t._writeAttributeString("TimeLineTour", e.toString()), t._writeStartElement("TourStops");
          for (var r = n.enumerate(this.get_tourStops()); r.moveNext(); ) {
            var a = r.current;
            a._saveToXml(t, !0);
          }
          t._writeEndElement();
          var s = this._createLayerMasterList(), l = this._getReferenceFrameList();
          t._writeStartElement("ReferenceFrames");
          for (var h = n.enumerate(l); h.moveNext(); ) {
            var u = h.current;
            u.saveToXml(t);
          }
          t._writeEndElement(), t._writeStartElement("Layers");
          for (var _ = n.enumerate(s); _.moveNext(); ) {
            var m = _.current;
            if (n.keyExists(T.get_layerList(), m)) {
              var p = T.get_layerList()[m], b = p.get_name(), S = V.singleton.renderContext.getCatalogHipsByName(b);
              if (S != null) {
                var x = si.create(S);
                x.id = m, x.set_name(b), x.set_referenceFrame("Sky"), x.saveToXml(t);
              } else
                T.get_layerList()[m].saveToXml(t);
            }
          }
          return t._writeEndElement(), t._writeFullEndElement(), t._close(), t.body;
        },
        _getReferenceFrameList: function() {
          for (var t = [], e = n.enumerate(n.keys(T.get_allMaps())); e.moveNext(); ) {
            var r = e.current, a = T.get_allMaps()[r];
            (a.frame.reference === 18 || a.frame.reference === 19) && !(t.indexOf(a.frame) >= 0) && !a.frame._systemGenerated && t.push(a.frame);
          }
          return t;
        },
        _createLayerMasterList: function() {
          for (var t = [], e = n.enumerate(this.get_tourStops()); e.moveNext(); )
            for (var r = e.current, a = n.enumerate(n.keys(r.layers)); a.moveNext(); ) {
              var s = a.current;
              t.indexOf(s) >= 0 || n.keyExists(T.get_layerList(), s) && t.push(s);
            }
          return t;
        },
        _isTimelineTour: function() {
          return !1;
        },
        get_tagId: function() {
          return this._tagId;
        },
        set_tagId: function(t) {
          return this._tagId = t, t;
        },
        get_authorThumbnailFilename: function() {
          return "Author.Png";
        },
        get_tourThumbnailFilename: function() {
          return this._representativeThumbnailTourstop < this._tourStops.length ? this._tourStops[this._representativeThumbnailTourstop].get_tourStopThumbnailFilename() : null;
        },
        get_id: function() {
          return this._id;
        },
        set_id: function(t) {
          return this._id = t, t;
        },
        get_title: function() {
          return this._title;
        },
        set_title: function(t) {
          return this._title = t, this.set_tourDirty(!0), t;
        },
        get_runTime: function() {
          return (!this._runTime || this._lastDirtyCheck !== this._tourDirty) && (this._runTime = this._calculateRunTime(), this._lastDirtyCheck = this._tourDirty), this._runTime;
        },
        get_description: function() {
          return this._description;
        },
        set_description: function(t) {
          return this._description = t, this.set_tourDirty(!0), t;
        },
        get_attributesAndCredits: function() {
          return this._attributesAndCredits;
        },
        set_attributesAndCredits: function(t) {
          return this._attributesAndCredits = t, this.set_tourDirty(!0), t;
        },
        get_authorEmailOther: function() {
          return this._authorEmailOther;
        },
        set_authorEmailOther: function(t) {
          return this._authorEmailOther = t, this.set_tourDirty(!0), t;
        },
        get_authorEmail: function() {
          return this._authorEmail;
        },
        set_authorEmail: function(t) {
          return this._authorEmail = t, this.set_tourDirty(!0), t;
        },
        get_authorUrl: function() {
          return this._authorUrl;
        },
        set_authorUrl: function(t) {
          return this._authorUrl = t, this.set_tourDirty(!0), t;
        },
        get_authorPhone: function() {
          return this._authorPhone;
        },
        set_authorPhone: function(t) {
          return this._authorPhone = t, this.set_tourDirty(!0), t;
        },
        get_authorContactText: function() {
          return this._authorContactText;
        },
        set_authorContactText: function(t) {
          return this._authorContactText = t, this.set_tourDirty(!0), t;
        },
        get_orgName: function() {
          return this._orgName;
        },
        set_orgName: function(t) {
          return this._orgName = t, this.set_tourDirty(!0), t;
        },
        get_orgUrl: function() {
          return this._orgUrl;
        },
        set_orgUrl: function(t) {
          return this._orgUrl = t, this.set_tourDirty(!0), t;
        },
        get_author: function() {
          return this._author;
        },
        set_author: function(t) {
          return this._author = t, this.set_tourDirty(!0), t;
        },
        get_authorImageUrl: function() {
          return this._authorImageUrl;
        },
        set_authorImageUrl: function(t) {
          return this._authorImageUrl = t, this.set_tourDirty(!0), t;
        },
        get_authorImage: function() {
          return this._authorImage;
        },
        set_authorImage: function(t) {
          return this._authorImage = t, this.set_tourDirty(!0), t;
        },
        get_organizationUrl: function() {
          return this._organizationUrl;
        },
        set_organizationUrl: function(t) {
          return this._organizationUrl = t, this.set_tourDirty(!0), t;
        },
        get_fileName: function() {
          return this._filename;
        },
        set_fileName: function(t) {
          return this._filename = t, t;
        },
        get_level: function() {
          return this._level;
        },
        set_level: function(t) {
          return this._level = t, this.set_tourDirty(!0), t;
        },
        get_type: function() {
          return this._type;
        },
        set_type: function(t) {
          return this._type = t, this.set_tourDirty(!0), t;
        },
        get_taxonomy: function() {
          return this._taxonomy;
        },
        set_taxonomy: function(t) {
          return this._taxonomy = t, this.set_tourDirty(!0), t;
        },
        get_keywords: function() {
          return this._keywords;
        },
        set_keywords: function(t) {
          return this._keywords = t, this.set_tourDirty(!0), t;
        },
        get_objects: function() {
          return this._objects;
        },
        set_objects: function(t) {
          return this._objects = t, this.set_tourDirty(!0), t;
        },
        get_editMode: function() {
          return this._editMode;
        },
        set_editMode: function(t) {
          return this._editMode = t, t;
        },
        get_tourStops: function() {
          return this._tourStops;
        },
        set_tourStops: function(t) {
          return this._tourStops = t, t;
        },
        get_currentTourstopIndex: function() {
          return this._currentTourstopIndex;
        },
        set_currentTourstopIndex: function(t) {
          return this._currentTourstopIndex = t, t;
        },
        addTourStop: function(t) {
          t.set_owner(this), this.get_tourStops().push(t), this._currentTourstopIndex = this._tourStops.length - 1, this.set_tourDirty(!0);
        },
        insertTourStop: function(t) {
          t.set_owner(this), this._currentTourstopIndex > -1 ? this.get_tourStops().splice(this._currentTourstopIndex, 0, t) : (this.get_tourStops().push(t), this._currentTourstopIndex = this._tourStops.length - 1), this.set_tourDirty(!0);
        },
        insertAfterTourStop: function(t) {
          t.set_owner(this), this._currentTourstopIndex > -1 || this._currentTourstopIndex < this.get_tourStops().length ? this.get_tourStops().splice(this._currentTourstopIndex + 1, 0, t) : (this.get_tourStops().push(t), this._currentTourstopIndex = this._tourStops.length - 1), this.set_tourDirty(!0);
        },
        removeTourStop: function(t) {
          n.remove(this._tourStops, t), this._currentTourstopIndex > this._tourStops.length - 1 && this._currentTourstopIndex--, this.set_tourDirty(!0);
        },
        _calculateRunTime: function() {
          for (var t = 0, e = 0; e < this._tourStops.length; e++)
            if (t += this._tourStops[e].get_duration(), e > 0)
              switch (this._tourStops[e].get__transition()) {
                case 0:
                  if (this._tourStops[e].get_target().get_backgroundImageset() == null || this._tourStops[e - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[e].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[e - 1].get_target().get_backgroundImageset().get_dataSetType() !== 4 || this._tourStops[e - 1].get_target().get_target() === this._tourStops[e].get_target().get_target())) {
                    var r = this._tourStops[e - 1].get_endTarget() == null ? this._tourStops[e - 1].get_target().get_camParams() : this._tourStops[e - 1].get_endTarget().get_camParams(), a = gr.create(r, this._tourStops[e].get_target().get_camParams());
                    t += a.get_moveTime() * 1e3;
                  }
                  break;
              }
          return n.truncate(t);
        },
        elapsedTimeTillTourstop: function(t) {
          if (!t && t >= this._tourStops.length)
            return 0;
          for (var e = 0, r = 0; r < t; r++)
            if (e += this._tourStops[r].get_duration(), r > 0)
              switch (this._tourStops[r].get__transition()) {
                case 0:
                  var a = this._tourStops[r - 1].get_endTarget() == null ? this._tourStops[r - 1].get_target().get_camParams() : this._tourStops[r - 1].get_endTarget().get_camParams();
                  if (this._tourStops[r - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[r].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[r - 1].get_target().get_backgroundImageset().get_dataSetType() !== 4 || this._tourStops[r - 1].get_target().get_target() === this._tourStops[r].get_target().get_target())) {
                    var s = gr.create(a, this._tourStops[r].get_target().get_camParams());
                    e += s.get_moveTime() * 1e3;
                  }
                  break;
              }
          return e / 1e3;
        },
        elapsedTimeSinceLastMaster: function(t) {
          var e = null;
          if (!t && t >= this._tourStops.length)
            return null;
          for (var r = 0, a = 0; a < t; a++)
            if (this._tourStops[a].get_masterSlide() && (r = 0, e = this._tourStops[a]), r += this._tourStops[a].get_duration(), a > 0)
              switch (this._tourStops[a].get__transition()) {
                case 0:
                  var s = this._tourStops[a - 1].get_endTarget() == null ? this._tourStops[a - 1].get_target().get_camParams() : this._tourStops[a - 1].get_endTarget().get_camParams();
                  if (this._tourStops[a - 1].get_target().get_backgroundImageset().get_dataSetType() === this._tourStops[a].get_target().get_backgroundImageset().get_dataSetType() && (this._tourStops[a - 1].get_target().get_backgroundImageset().get_dataSetType() !== 4 || this._tourStops[a - 1].get_target().get_target() === this._tourStops[a].get_target().get_target())) {
                    var l = gr.create(s, this._tourStops[a].get_target().get_camParams());
                    r += l.get_moveTime() * 1e3;
                  }
                  break;
              }
          return new Cs(e, r / 1e3);
        },
        getMasterSlideForIndex: function(t) {
          for (var e = -1, r = 0; r < t; r++)
            this._tourStops[r].get_masterSlide() && (e = r);
          return e === -1 ? null : this._tourStops[e];
        },
        getTourStopIndexByID: function(t) {
          if (!t || t === "Next")
            return this._currentTourstopIndex++;
          for (var e = 0, r = n.enumerate(this._tourStops); r.moveNext(); ) {
            var a = r.current;
            if (a.get_id() === t)
              return e;
            e++;
          }
          return -1;
        },
        cleanUp: function() {
        },
        getCachedTexture: function(t, e) {
          if (this._textureList == null && (this._textureList = {}), n.keyExists(this._textureList, t))
            return e(), this._textureList[t];
          var r = this.getFileStream(t);
          if (n.whitespace(r))
            return null;
          var a = document.createElement("img");
          return a.src = this.getFileStream(t), a.addEventListener("load", function() {
            e();
          }, !1), this._textureList[t] = a, a;
        },
        getCachedTexture2d: function(t) {
          if (this._textureList2d == null && (this._textureList2d = {}), n.keyExists(this._textureList2d, t))
            return this._textureList2d[t];
          var e = new Te();
          return e.load(this.getFileStream(t)), this._textureList2d[t] = e, e;
        },
        addCachedFile: function(t, e) {
          this._fileCache[t] = e, n.keyExists(this._textureList2d, t) && delete this._textureList2d[t], n.keyExists(this._textureList, t) && delete this._textureList[t];
        },
        getFileStream: function(t) {
          var e = this.getFileBlob(t);
          return e == null ? null : URL.createObjectURL(e);
        },
        getFileBlob: function(t) {
          return n.keyExists(this._fileCache, t) ? this._fileCache[t] : this._cabinet != null ? this._cabinet.getFileBlob(this.get_workingDirectory() + t) : null;
        },
        get_currentTourStop: function() {
          return this._currentTourstopIndex > -1 ? this.get_tourStops()[this._currentTourstopIndex] : null;
        },
        set_currentTourStop: function(t) {
          for (var e = 0, r = n.enumerate(this.get_tourStops()); r.moveNext(); ) {
            var a = r.current;
            if (a === t) {
              this._currentTourstopIndex > -1, this._currentTourstopIndex = e;
              break;
            }
            e++;
          }
          return t;
        },
        clearTempFiles: function() {
        }
      };
      function ys() {
        this.musicTrack = new Fa(), this.voiceTrack = new Fa(), this._tour = null, this.tourStopList = new Ss(), this.tourEditorUI = new Qe(), this._contextMenu = new pr(), this.nextSlideCallback = null, this.playing = !1, this._player = null, this._defultColor = ot.get_white();
      }
      var Yh = {
        setUiStrings: function() {
        },
        get_tour: function() {
          return this._tour;
        },
        set_tour: function(t) {
          return this._tour = t, this.tourEditorUI.set_tour(this._tour), this.tourStopList.tour = this._tour, xe.defaultAnchor = 1, this._tour.get_tourStops().length > 0 && (V.singleton.gotoTarget(this._tour.get_tourStops()[0].get_target(), !1, !0, !1), this._tour.set_currentTourstopIndex(0), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop(), T.setVisibleLayerList(this._tour.get_currentTourStop().layers)), this.setEditMode(this._tour.get_editMode()), t;
        },
        tour_CurrentTourstopChanged: function() {
          ti._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection), this.tourEditorUI != null && this.tourEditorUI.clearSelection(), this.tourStopList.refresh();
        },
        setFocusedChild: function() {
        },
        selectCurrent: function() {
          this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.tourStopList.refresh();
        },
        tourEdit_Load: function(t, e) {
        },
        playNow: function(t) {
          this.playing = !0, (this.get_tour().get_editMode() || t) && this.get_tour().set_currentTourstopIndex(-1), this.setPlayPauseMode();
        },
        _tourPlayer_TourEnded: function(t, e) {
        },
        _endTour_CloseTour: function(t, e) {
        },
        _endTour_LaunchTour: function(t, e) {
          this.playNow(!0);
        },
        setEditMode: function(t) {
        },
        tourStopList_ItemClicked: function(t, e) {
          this._tour.get_currentTourStop() !== e && (this._tour.set_currentTourStop(e), e != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this.tourEditorUI.clearSelection()), this.playing && this._playFromHere_Click(t, new n.EventArgs());
        },
        tourStopList_ItemDoubleClicked: function(t, e) {
          this.showSlideStartPosition(e);
        },
        showSlideStartPosition: function(t) {
          this._tour.set_currentTourStop(t), t != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this.tourEditorUI.clearSelection(), this._tour.get_currentTourStop() != null && (this._tour.get_currentTourStop().syncSettings(), Z.set_now(this._tour.get_currentTourStop().get_startTime()), Z.set_syncToClock(!1), V.singleton.gotoTarget(t.get_target(), !1, !0, !1), this._tour.get_currentTourStop().set_tweenPosition(0), this._tour.get_currentTourStop()._updateLayerOpacity(), T.setVisibleLayerList(this._tour.get_currentTourStop().layers));
        },
        tourStopList_MouseClick: function(t, e) {
          if (this._tour.get_editMode(), this.tourStopList.multipleSelection) {
            this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new pr();
            var r = ht.create(tt.getLocalizedText(1345, "Select All")), a = ht.create(tt.getLocalizedText(427, "Cut")), s = ht.create(tt.getLocalizedText(428, "Copy")), l = ht.create(tt.getLocalizedText(429, "Paste")), h = ht.create(tt.getLocalizedText(167, "Delete"));
            a.click = n.bind("_cutMenu_Click", this), s.click = n.bind("_copyMenu_Click", this), l.click = n.bind("_pasteMenu_Click", this), h.click = n.bind("_deleteMenu_Click", this), r.click = n.bind("_selectAllMenu_Click", this);
            var u = new yi();
            this._contextMenu.items.push(r), this._contextMenu.items.push(u), this._contextMenu.items.push(a), this._contextMenu.items.push(s), l.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(l), this._contextMenu.items.push(h), this._contextMenu._show(Ke.get_position());
          } else if (this._tour.get_currentTourStop() == null) {
            this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new pr();
            var r = ht.create(tt.getLocalizedText(1345, "Select All")), l = ht.create(tt.getLocalizedText(425, "Paste")), u = new yi(), _ = new yi(), m = ht.create(tt.getLocalizedText(426, "Add New Slide"));
            l.click = n.bind("_pasteMenu_Click", this), r.click = n.bind("_selectAllMenu_Click", this), m.click = n.bind("_addNewSlide_Click", this), l.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(r), this._contextMenu.items.push(u), this._contextMenu.items.push(l), this._contextMenu.items.push(_), this._contextMenu.items.push(m), this._contextMenu._show(Ke.get_position());
          } else {
            this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new pr();
            var r = ht.create(tt.getLocalizedText(1345, "Select All")), a = ht.create(tt.getLocalizedText(427, "Cut")), s = ht.create(tt.getLocalizedText(428, "Copy")), l = ht.create(tt.getLocalizedText(429, "Paste")), h = ht.create(tt.getLocalizedText(167, "Delete")), u = new yi(), p = new yi(), b = new yi(), S = new yi(), x = new yi(), k = new yi(), m = ht.create(tt.getLocalizedText(431, "Insert New Slide")), P = ht.create(tt.getLocalizedText(627, "Duplicate Slide at End Position")), I = ht.create(tt.getLocalizedText(628, "Merge Tour after slide...")), D = ht.create(tt.getLocalizedText(432, "Preview Tour From Here")), _ = new yi(), G = ht.create(tt.getLocalizedText(433, "Capture New Thumbnail")), U = ht.create(tt.getLocalizedText(434, "Set Start Camera Position")), Y = ht.create(tt.getLocalizedText(435, "Set End Camera Position")), j = ht.create(tt.getLocalizedText(436, "Show Start Camera Position")), K = ht.create(tt.getLocalizedText(437, "Show End Camera Position")), Q = ht.create(tt.getLocalizedText(438, "Master Slide"));
            ht.create(tt.getLocalizedText(1346, "Create Timeline")), ht.create(tt.getLocalizedText(1347, "Show Timeline"));
            var J = this._tour.get_currentTourStop().get_nextSlide();
            switch (J) {
              case "":
              case null:
              case "Next":
                J = " (" + tt.getLocalizedText(610, "Next Slide") + ")";
                break;
              case "Return":
                J = " (" + tt.getLocalizedText(602, "Return to Caller") + ")";
                break;
              default:
                var nt = this.get_tour().getTourStopIndexByID(J);
                nt > -1 && (n.emptyString(this._tour.get_tourStops()[nt].get_description()) ? J = n.format(" (Slide {0})", nt) : J = " (" + this._tour.get_tourStops()[nt].get_description() + ")");
                break;
            }
            var W = ht.create(tt.getLocalizedText(590, "Set Next Slide") + J), ct = ht.create(tt.getLocalizedText(439, "Track Date/Time/Location")), rt = ht.create(tt.getLocalizedText(629, "Fade In Slide Elements")), kt = ht.create(tt.getLocalizedText(20, "Properties")), At = ht.create(tt.getLocalizedText(1029, "Animation Tween Type")), bt = ht.create(tt.getLocalizedText(1030, "Linear")), _t = ht.create(tt.getLocalizedText(1031, "Ease In/Out")), $e = ht.create(tt.getLocalizedText(1032, "Ease In")), je = ht.create(tt.getLocalizedText(1033, "Ease Out")), qe = ht.create(tt.getLocalizedText(1034, "Exponential"));
            switch (bt.tag = 0, _t.tag = 3, $e.tag = 1, je.tag = 2, qe.tag = 4, bt.click = n.bind("_interpolation_Click", this), _t.click = n.bind("_interpolation_Click", this), $e.click = n.bind("_interpolation_Click", this), je.click = n.bind("_interpolation_Click", this), qe.click = n.bind("_interpolation_Click", this), this._tour.get_currentTourStop().get_interpolationType()) {
              case 0:
                bt.checked = !0;
                break;
              case 1:
                $e.checked = !0;
                break;
              case 2:
                je.checked = !0;
                break;
              case 3:
                _t.checked = !0;
                break;
              case 4:
                qe.checked = !0;
                break;
            }
            At.dropDownItems.push(bt), At.dropDownItems.push(_t), At.dropDownItems.push($e), At.dropDownItems.push(je), At.dropDownItems.push(qe), r.click = n.bind("_selectAllMenu_Click", this), P.click = n.bind("_insertDuplicate_Click", this), a.click = n.bind("_cutMenu_Click", this), s.click = n.bind("_copyMenu_Click", this), l.click = n.bind("_pasteMenu_Click", this), h.click = n.bind("_deleteMenu_Click", this), m.click = n.bind("_insertNewSlide_Click", this), kt.click = n.bind("_properties_Click", this), G.click = n.bind("_captureThumbnail_Click", this), U.click = n.bind("_setSkyPosition_Click", this), Y.click = n.bind("_setEndSkyPosition_Click", this), K.click = n.bind("_showEndSkyPosition_Click", this), j.click = n.bind("_showSkyPosition_Click", this), D.click = n.bind("_playFromHere_Click", this), Q.click = n.bind("_masterSlide_Click", this), W.click = n.bind("_setNextSlide_Click", this), ct.click = n.bind("_trackSpaceTime_Click", this), I.click = n.bind("_insertSlideshow_Click", this), rt.click = n.bind("_fadeInOverlays_Click", this), this._tour.get_currentTourStop().get_masterSlide() && (Q.checked = !0), this._tour.get_currentTourStop().get_hasTime() && (ct.checked = !0), rt.checked = this._tour.get_currentTourStop().get_fadeInOverlays(), this._contextMenu.items.push(r), this._contextMenu.items.push(k), this._contextMenu.items.push(a), this._contextMenu.items.push(s), l.enabled = this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide", this._contextMenu.items.push(l), this._contextMenu.items.push(h), this._contextMenu.items.push(u), this._contextMenu.items.push(m), this._contextMenu.items.push(P), this._contextMenu.items.push(I), this._contextMenu.items.push(_), this._contextMenu.items.push(D), this._contextMenu.items.push(p), this._contextMenu.items.push(U), this._contextMenu.items.push(Y), this._contextMenu.items.push(b), this._contextMenu.items.push(j), this._contextMenu.items.push(K), this._contextMenu.items.push(S), this._contextMenu.items.push(G), this._contextMenu.items.push(x), this._contextMenu.items.push(Q), this._contextMenu.items.push(W), this._contextMenu.items.push(rt), this._contextMenu.items.push(ct), this._contextMenu.items.push(At), this._contextMenu._show(lt.create(e.clientX, e.clientY));
          }
        },
        _selectAllMenu_Click: function(t, e) {
          this.tourStopList.selectAll();
        },
        _interpolation_Click: function(t, e) {
          var r = t;
          this._tour.get_currentTourStop().set_interpolationType(r.tag);
        },
        _nextSlideChosen: function() {
          this._selectDialog.get_OK() && this._tour.get_currentTourStop().set_nextSlide(this._selectDialog.get_id());
        },
        _setNextSlide_Click: function(t, e) {
          this._selectDialog = new Ba(null), this.nextSlideCallback(this._selectDialog, n.bind("_nextSlideChosen", this));
        },
        _insertDuplicate_Click: function(t, e) {
          Tt.push(new jr(tt.getLocalizedText(530, "Duplicate Slide at End Position"), this._tour));
          var r = this._tour.get_currentTourStop().copy();
          if (r != null) {
            r.get_endTarget() != null && (r.get_endTarget().set_backgroundImageset(r.get_target().get_backgroundImageset()), r.get_endTarget().set_studyImageset(r.get_target().get_studyImageset()), r.set_target(r.get_endTarget()), r.set_startTime(r.get_endTime()), r.set_endTarget(null));
            for (var a = n.enumerate(r.get_overlays()); a.moveNext(); ) {
              var s = a.current;
              s.set_tweenFactor(1), s.set_animate(!s.get_animate()), s.set_animate(!s.get_animate());
            }
            r.set_tweenPosition(0), r.set_fadeInOverlays(!1), this._tour.insertAfterTourStop(r), this.tourStopList.refresh();
          }
        },
        _fadeInOverlays_Click: function(t, e) {
          this._tour.get_currentTourStop().set_fadeInOverlays(!this._tour.get_currentTourStop().get_fadeInOverlays());
        },
        _insertSlideshow_Click: function(t, e) {
        },
        _trackSpaceTime_Click: function(t, e) {
          Tt.push(new ye(tt.getLocalizedText(532, "Track Time Edit"), this._tour)), this._tour.get_currentTourStop().set_hasTime(!this._tour.get_currentTourStop().get_hasTime());
        },
        _masterSlide_Click: function(t, e) {
          Tt.push(new ye(tt.getLocalizedText(533, "Master Slide State Edit"), this._tour)), this._tour.get_currentTourStop().set_masterSlide(!this._tour.get_currentTourStop().get_masterSlide()), this.tourStopList.refresh();
        },
        _playFromHere_Click: function(t, e) {
          this.playFromCurrentTourstop();
        },
        playFromCurrentTourstop: function() {
          this.playing = !0, V.singleton.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), Z.set_now(this._tour.get_currentTourStop().get_startTime()), Z.set_syncToClock(!1), this.setPlayPauseMode();
        },
        playFromTourstop: function(t) {
          this._tour.set_currentTourStop(t), this.playFromCurrentTourstop();
        },
        _showSkyPosition_Click: function(t, e) {
          this._tour.get_currentTourStop() != null && (V.singleton.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), this._tour.get_currentTourStop().syncSettings(), Z.set_now(this._tour.get_currentTourStop().get_startTime()), Z.set_syncToClock(!1), this._tour.get_currentTourStop().set_tweenPosition(0), T.setVisibleLayerList(this._tour.get_currentTourStop().layers), this.tourStopList.refresh());
        },
        _showEndSkyPosition_Click: function(t, e) {
          this._tour.get_currentTourStop().set_tweenPosition(1), this._tour.get_currentTourStop()._updateLayerOpacity(), this._tour.get_currentTourStop() != null && this._tour.get_currentTourStop().get_endTarget() != null && (V.singleton.gotoTargetFull(!1, !0, this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_target().get_studyImageset(), this._tour.get_currentTourStop().get_target().get_backgroundImageset()), V.singleton.renderContext.set_solarSystemTrack(this._tour.get_currentTourStop().get_endTarget().get_target()), Z.set_now(this._tour.get_currentTourStop().get_endTime()), this._tour.get_currentTourStop().syncSettings(), T.setVisibleLayerList(this._tour.get_currentTourStop().layers), Z.set_syncToClock(!1), this.tourStopList.refresh(), this.tourEditorUI.clearSelection());
        },
        _setEndSkyPosition_Click: function(t, e) {
          if (this._tour.get_currentTourStop() != null) {
            Tt.push(new ye(tt.getLocalizedText(435, "Set End Camera Position"), this._tour));
            var r = Li.createCameraParams("End Place", V.singleton.renderContext.viewCamera.copy(), 268435456, V.singleton.constellation, V.singleton.renderContext.get_backgroundImageset().get_dataSetType(), V.singleton.renderContext.get_solarSystemTrack());
            this._tour.get_currentTourStop().set_endTarget(r), this._tour.get_currentTourStop().get_endTarget().set_constellation(V.singleton.constellation), this._tour.get_currentTourStop().set_endTime(Z.get_now()), this._tour.get_currentTourStop().set_tweenPosition(1);
            for (var a = n.enumerate(n.keys(this._tour.get_currentTourStop().layers)); a.moveNext(); ) {
              var s = a.current, l = this._tour.get_currentTourStop().layers[s];
              n.keyExists(T.get_layerList(), l.id) && (l.endOpacity = T.get_layerList()[l.id].get_opacity(), l.endParams = T.get_layerList()[l.id].getParams());
            }
            this._tour.get_currentTourStop()._updateLayerOpacity(), this.tourStopList.refresh(), Dn.refreshUi(), this.tourEditorUI.clearSelection();
          }
        },
        _setSkyPosition_Click: function(t, e) {
          this._tour.get_currentTourStop() != null && (Tt.push(new ye(tt.getLocalizedText(434, "Set Start Camera Position"), this._tour)), this._tour.get_currentTourStop().get_target().set_target(V.singleton.renderContext.get_solarSystemTrack()), this._tour.get_currentTourStop().get_target().set_type(V.singleton.renderContext.get_backgroundImageset().get_dataSetType()), this._tour.get_currentTourStop().get_target().set_camParams(V.singleton.renderContext.viewCamera.copy()), this._tour.get_currentTourStop().get_target().set_constellation(V.singleton.constellation), this._tour.get_currentTourStop().get_target().set_studyImageset(V.singleton.renderContext.get_foregroundImageset()), this._tour.get_currentTourStop().get_target().set_type(V.singleton.renderContext.get_backgroundImageset().get_dataSetType()), this._tour.get_currentTourStop().get_target().set_backgroundImageset(V.singleton.renderContext.get_backgroundImageset().get_stockImageSet()), this._tour.get_currentTourStop().captureSettings(), this._tour.get_currentTourStop().layers = T._getVisibleLayerList(this._tour.get_currentTourStop().layers), this._tour.get_currentTourStop().set_tweenPosition(0), this.tourStopList.refresh(), Dn.refreshUi(), this.tourEditorUI.clearSelection());
        },
        _captureThumbnail_Click: function(t, e) {
          this._tour.get_currentTourStop() != null && this._captureThumbnail(this._tour.get_currentTourStop());
        },
        _captureThumbnail: function(t) {
          var e = this;
          V.singleton.captureThumbnail(function(r) {
            var a = n.format("{0}.thumb.png", t.get_id());
            e._tour.addCachedFile(a, r), t.set_thumbnail(e._tour.getCachedTexture(a, function() {
              e.tourStopList.refresh();
            }));
          });
        },
        _properties_Click: function(t, e) {
          throw new Error("The method or operation is not implemented.");
        },
        tourStopList_AddNewSlide: function(t, e) {
          this.addSlide(!1), this.tourStopList.ensureAddVisible();
        },
        _addNewSlide_Click: function(t, e) {
          this.addSlide(!1), this.tourStopList.ensureAddVisible();
        },
        _insertNewSlide_Click: function(t, e) {
          this.addSlide(!0);
        },
        addSlide: function(t) {
          Tt.push(new jr(tt.getLocalizedText(426, "Add New Slide"), this._tour)), Ke.set_current(Ee.get_waitCursor());
          var e = "Current Screen", r = Li.createCameraParams(e, V.singleton.renderContext.viewCamera.copy(), 268435456, V.singleton.constellation, V.singleton.renderContext.get_backgroundImageset().get_dataSetType(), V.singleton.renderContext.get_solarSystemTrack());
          r.set_studyImageset(V.singleton.renderContext.get_foregroundImageset()), r.set_backgroundImageset(V.singleton.renderContext.get_backgroundImageset().get_stockImageSet());
          var a = Fi.create(r);
          t ? this._tour.insertTourStop(a) : this._tour.addTourStop(a), this._tour.get_currentTourStop() != null ? (this.musicTrack.target = this._tour.get_currentTourStop(), this.voiceTrack.target = this._tour.get_currentTourStop()) : (this.musicTrack.target = null, this.voiceTrack.target = null), this._tour.get_currentTourStop().layers = T._getVisibleLayerList(this._tour.get_currentTourStop().layers), this._captureThumbnail(a), this.tourStopList.selectedItem = this.tourStopList.findItem(a), this.tourStopList.refresh(), this.tourEditorUI.clearSelection(), Ke.set_current(Ee.get_defaultV()), Dn.refreshUi();
        },
        _deleteMenu_Click: function(t, e) {
          Tt.push(new jr(tt.getLocalizedText(534, "Delete Slide"), this._tour));
          for (var r = n.enumerate(n.keys(this.tourStopList.selectedItems)); r.moveNext(); ) {
            var a = r.current, s = this.tourStopList.selectedItems[a];
            this._tour.removeTourStop(s);
          }
          n.clearKeys(this.tourStopList.selectedItems), this.tourStopList.selectedItem = -1, this._tour.set_currentTourStop(null), this.musicTrack.target = null, this.voiceTrack.target = null, this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
        },
        _pasteMenu_Click: function(t, e) {
          if (this.tourEditorUI.clipboardType === "WorldWideTelescope.Slide") {
            Tt.push(new jr(tt.getLocalizedText(535, "Paste Slide"), this._tour));
            for (var r = new DOMParser(), a = r.parseFromString(this.tourEditorUI.clipboardData, "text/xml"), s = at.selectSingleNode(a, "TourStops"), l = new n.Stack(), h = n.enumerate(s.childNodes); h.moveNext(); ) {
              var u = h.current;
              if (u.nodeName === "TourStop") {
                var _ = Fi._fromXml(this._tour, u);
                _.set_id(di.newGuid().toString()), l.push(_);
              }
            }
            n.clearKeys(this.tourStopList.selectedItems);
            for (var m = this.tourStopList.selectedItem + l.count - 1; l.count > 0; ) {
              var _ = l.pop();
              this._tour.insertTourStop(_), this.tourStopList.selectedItems[m--] = _;
            }
            this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
          }
        },
        _copyMenu_Click: function(t, e) {
          var r = new Jr();
          r._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), r._writeStartElement("TourStops");
          for (var a = n.enumerate(n.keys(this.tourStopList.selectedItems)); a.moveNext(); ) {
            var s = a.current, l = this.tourStopList.selectedItems[s];
            l._saveToXml(r, !0);
          }
          r._writeEndElement(), this.tourEditorUI.clipboardType = "WorldWideTelescope.Slide", this.tourEditorUI.clipboardData = r.body;
        },
        _cutMenu_Click: function(t, e) {
          Tt.push(new jr(tt.getLocalizedText(536, "Cut Slide"), this._tour)), this._copyMenu_Click(t, e);
          for (var r = n.enumerate(n.keys(this.tourStopList.selectedItems)); r.moveNext(); ) {
            var a = r.current, s = this.tourStopList.selectedItems[a];
            this._tour.removeTourStop(s);
          }
          n.clearKeys(this.tourStopList.selectedItems), this.tourStopList.refresh(), this.tourEditorUI.clearSelection();
        },
        pauseTour: function() {
          this.playing && (this.playing = !1), this.setPlayPauseMode();
        },
        preview_Click: function(t, e) {
          this.playing = !this.playing, this.playing && this._tour.get_editMode() && this.get_tour().set_currentTourstopIndex(-1), this.setPlayPauseMode();
        },
        setPlayPauseMode: function() {
          this._tour.get_editMode() ? this.playing ? (this._player == null && (this._player = new ie()), this._player.set_tour(this._tour), V.singleton.uiController = this._player, this._player.play(), this.tourStopList.showAddButton = !1) : (V.singleton.uiController = this.tourEditorUI, this._player != null && this._player.stop(!1), this._player = null, V.singleton.set__mover(null), this.tourStopList.showAddButton = this._tour.get_editMode()) : this.playing ? (this._player == null && (this._player = new ie()), this._player.set_tour(this._tour), V.singleton.uiController = this._player, this._player.play(), this.tourStopList.showAddButton = !1) : (V.singleton.uiController = null, V.singleton.renderContext.freezeView(), this._player != null && this._player.stop(!1), this._player = null, V.singleton.uiController = null, V.singleton.set__mover(null), this.tourStopList.showAddButton = this._tour.get_editMode()), this.tourStopList.refresh();
        },
        playerTimer_Tick: function(t, e) {
          this.playing && this._player != null && (ie.get_playing() ? this.tourStopList.selectedItem !== this._tour.get_currentTourstopIndex() && (this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex()) : (this.playing = !1, this.setPlayPauseMode()));
        },
        insertShapeCircle_Click: function(t, e) {
          this.tourEditorUI.addShape("", 0);
        },
        insertShapeRectangle_Click: function(t, e) {
          this.tourEditorUI.addShape("", 1);
        },
        insertShapeLine_Click: function(t, e) {
          this.tourEditorUI.addShape("", 5);
        },
        insertDonut_Click: function(t, e) {
          this.tourEditorUI.addShape("", 3);
        },
        _addArrow_Click: function(t, e) {
          this.tourEditorUI.addShape("", 4);
        },
        insertVideo_Click: function(t, e) {
        },
        insertAudio_Click: function(t, e) {
        },
        insertHyperlink_Click: function(t, e) {
        },
        colorPicker_Click: function(t, e) {
        },
        tourEditTab_Leave: function(t, e) {
        },
        editTourProperties_Click: function(t, e) {
        },
        saveTour_Click: function(t, e) {
          this.save(!1);
        },
        save: function(t) {
          return !0;
        },
        addVideo_Click: function(t, e) {
        },
        addPicture_Click: function(t, e) {
        },
        addShape_Click: function(t, e) {
        },
        _addOpenRectangle_Click: function(t, e) {
          this.tourEditorUI.addShape("", 6);
        },
        _addStar_Click: function(t, e) {
          this.tourEditorUI.addShape("", 2);
        },
        addText_Click: function(t, e) {
        },
        preview_EnabledChanged: function(t, e) {
          this.playing;
        },
        preview_MouseEnter: function(t, e) {
        },
        preview_MouseLeave: function(t, e) {
        },
        preview_MouseUp: function(t, e) {
        },
        preview_MouseDown: function(t, e) {
        },
        tourStopList_ItemHover: function(t, e) {
        },
        refresh: function() {
        },
        undoStep: function() {
          Tt.peekAction() && (Tt.stepBack(), this.tourStopList.refresh(), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.showSlideStartPosition(this._tour.get_currentTourStop()), this.refresh(), ti._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection));
        },
        redoStep: function() {
          Tt.peekRedoAction() && (Tt.stepForward(), this.tourStopList.refresh(), this.tourStopList.selectedItem = this._tour.get_currentTourstopIndex(), this.showSlideStartPosition(this._tour.get_currentTourStop()), this.refresh(), ti._updateOverlayList(this._tour.get_currentTourStop(), this.tourEditorUI.selection));
        },
        tourStopList_ShowEndPosition: function(t, e) {
          this._showEndSkyPosition_Click(this, new n.EventArgs());
        },
        tourStopList_ShowStartPosition: function(t, e) {
          this.showSlideStartPosition(this.get_tour().get_currentTourStop()), this.tourEditorUI.clearSelection();
        },
        tourStopList_KeyDown: function(t, e) {
          if (e.ctrlKey)
            switch (e.keyCode) {
              case 67:
                this._copyMenu_Click(null, new n.EventArgs());
                break;
              case 86:
                this._pasteMenu_Click(null, new n.EventArgs());
                break;
              case 88:
                this._cutMenu_Click(null, new n.EventArgs());
                break;
              case 90:
                Tt.peekAction() ? ji._undoStep() : Oe._beep();
                break;
              case 89:
                Tt.peekRedoAction() ? ji._redoStep() : Oe._beep();
                break;
            }
          e.keyCode === 46 && this._deleteMenu_Click(null, new n.EventArgs());
        },
        _ensureSelectedVisible: function() {
          this.tourStopList.ensureSelectedVisible();
        }
      };
      function Qe() {
        this.selection = new Le(), this._contextMenu = new pr(), this._tour = null, this._mouseDown = !1, this._selectionAction = 11, this._needUndoFrame = !1, this._contextPoint = new lt(), this._dragCopying = !1, this._brokeThreshold = !1, this.nextSlideCallback = null, this.clipboardData = "", this.clipboardType = "", this.editTextCallback = null, this._defaultColor = ot.get_white();
      }
      var Zh = {
        render: function(t) {
          if (t.setupMatricesOverlays(), !(this._tour == null || this._tour.get_currentTourStop() == null)) {
            for (var e = n.enumerate(this._tour.get_currentTourStop().get_overlays()); e.moveNext(); ) {
              var r = e.current;
              r.get_animate() && this.get_tour().get_currentTourStop().get_keyFramed() ? r.set_tweenFactor(this._tour.get_currentTourStop().get_tweenPosition()) : this.get_tour().get_currentTourStop().get_keyFramed() || r.set_tweenFactor(this._tour.get_currentTourStop().get_tweenPosition() < 0.5 ? 0 : 1), r.draw3D(t, !0);
            }
            this.selection.draw3D(t, 1), Qe.currentEditor != null && Qe.currentEditor.render(t), z.tourSettings = null;
          }
        },
        get_tour: function() {
          return this._tour;
        },
        set_tour: function(t) {
          return this._tour = t, t;
        },
        close: function() {
          this._tour != null && (this._tour = null, this.set_focus(null));
        },
        clearSelection: function() {
          this.selection.clearSelection(), ti._updateOverlayListSelection(this.selection), this.set_focus(null);
        },
        get_focus: function() {
          return this.selection.get_focus();
        },
        set_focus: function(t) {
          return this.selection.set_focus(t), t;
        },
        pointToView: function(t) {
          var e = V.singleton.renderContext.height, r = V.singleton.renderContext.width, a = V.singleton.renderContext.width / V.singleton.renderContext.height * 1116, s = t.x / r * a - (a - 1920) / 2, l = t.y / e * 1116;
          return lt.create(s, l);
        },
        mouseDown: function(t, e) {
          this._brokeThreshold = !1, this._needUndoFrame = !0;
          var r = this.pointToView(lt.create(e.offsetX, e.offsetY));
          if (this._tour == null || this._tour.get_currentTourStop() == null)
            return this._needUndoFrame = !1, !1;
          if (Qe.currentEditor != null && Qe.currentEditor.mouseDown(t, e))
            return !0;
          if (this.get_focus() != null) {
            if (this.selection.get_multiSelect())
              for (var a = n.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                var s = a.current;
                if (s.hitTest(r))
                  return this._selectionAction = 9, this._mouseDown = !0, this._pointDown = r, this.set_focus(s), e.ctrlKey && (this._dragCopying = !0), !0;
              }
            else if (this.get_focus().hitTest(r))
              return this._selectionAction = 9, this._mouseDown = !0, this._pointDown = r, e.ctrlKey && (this._dragCopying = !0), !0;
            var l = this.selection.hitTest(r);
            if (l !== 11)
              return this._selectionAction = l, this._mouseDown = !0, l === 8 ? this._pointDown = r : this._pointDown = this.selection.pointToSelectionSpace(r), !0;
          }
          for (var h = this._tour.get_currentTourStop().get_overlays().length - 1; h >= 0; h--)
            if (this._tour.get_currentTourStop().get_overlays()[h].hitTest(r))
              return this._selectionAction = 9, this.set_focus(this._tour.get_currentTourStop().get_overlays()[h]), e.ctrlKey || e.shiftKey ? this.selection.addSelection(this.get_focus()) : this.selection.setSelection(this.get_focus()), ti._updateOverlayListSelection(this.selection), this._mouseDown = !0, this._pointDown = r, !0;
          return this.set_focus(null), this.clearSelection(), this._needUndoFrame = !1, !1;
        },
        mouseUp: function(t, e) {
          return this._brokeThreshold = !1, Qe.currentEditor != null && Qe.currentEditor.mouseUp(t, e) ? !0 : (this._contextPoint = lt.create(e.offsetX, e.offsetY), this._mouseDown ? (this._mouseDown = !1, e.button === 2 && this.get_focus() != null && this.showSelectionContextMenu(lt.create(e.offsetX, e.offsetY)), !0) : e.button === 2 ? (this.get_focus() == null && this._showNoSelectionContextMenu(lt.create(e.offsetX, e.offsetY)), !0) : !1);
        },
        mouseMove: function(t, e) {
          if (Qe.currentEditor != null && Qe.currentEditor.mouseMove(t, e))
            return !0;
          var r = this.pointToView(lt.create(e.offsetX, e.offsetY));
          if (this._mouseDown && this.get_focus() != null) {
            var a = null, s = tt.getLocalizedText(502, "Edit");
            this._needUndoFrame && (a = new ye(tt.getLocalizedText(502, "Edit"), this._tour));
            var l, h;
            if (this._selectionAction !== 9 && this._selectionAction !== 8) {
              var u = this.selection.pointToSelectionSpace(r);
              l = u.x - this._pointDown.x, h = u.y - this._pointDown.y, this._pointDown = u;
            } else {
              if (l = r.x - this._pointDown.x, h = r.y - this._pointDown.y, this._selectionAction === 9 && !this._brokeThreshold)
                if (Math.abs(l) > 3 || Math.abs(h) > 3)
                  this._brokeThreshold = !0;
                else
                  return !0;
              this._pointDown = r;
            }
            if (this._dragCopying)
              if (this.selection.get_multiSelect()) {
                var _ = this.selection.selectionSet;
                this.clearSelection();
                for (var m = n.enumerate(_); m.moveNext(); ) {
                  var p = m.current, b = this.addOverlay(p);
                  b.set_x(p.get_x()), b.set_y(p.get_y()), this.set_focus(b), this.selection.addSelection(this.get_focus());
                }
                ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection), this._dragCopying = !1;
              } else {
                var b = this.addOverlay(this.get_focus());
                b.set_x(this.get_focus().get_x()), b.set_y(this.get_focus().get_y()), this.set_focus(b), this.selection.setSelection(this.get_focus()), ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection), this._dragCopying = !1;
              }
            var S = this.get_focus().get_width() / this.get_focus().get_height(), x = lt.create(this.get_focus().get_x(), this.get_focus().get_y());
            if (e.ctrlKey)
              switch (s = tt.getLocalizedText(537, "Resize"), this._selectionAction) {
                case 0:
                  this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - l * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - l / S * 2));
                  break;
                case 1:
                  this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - h * 2));
                  break;
                case 2:
                  this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + l * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + l / S * 2));
                  break;
                case 3:
                  this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + l * 2));
                  break;
                case 4:
                  this.get_focus().set_width(Math.max(2, this.get_focus().get_width() + l * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + l / S * 2));
                  break;
                case 5:
                  this.get_focus().set_height(Math.max(2, this.get_focus().get_height() + h * 2));
                  break;
                case 6:
                  this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - l * 2)), this.get_focus().set_height(Math.max(2, this.get_focus().get_height() - l / S * 2));
                  break;
                case 7:
                  this.get_focus().set_width(Math.max(2, this.get_focus().get_width() - l * 2));
                  break;
                case 8:
                  s = tt.getLocalizedText(538, "Rotate"), this.get_focus().set_rotationAngle(this.get_focus().get_rotationAngle() + l / 10);
                  break;
                case 9:
                  s = tt.getLocalizedText(539, "Drag Copy"), x.x += l, x.y += h;
                  break;
              }
            else
              switch (this._selectionAction !== 8 && this._selectionAction !== 9 && (l > this.get_focus().get_width() - 2 && (l = 0), h > this.get_focus().get_height() - 2 && (h = 0)), s = tt.getLocalizedText(537, "Resize"), this._selectionAction) {
                case 0:
                  this.get_focus().set_width(this.get_focus().get_width() - l), this.get_focus().set_height(this.get_focus().get_height() - l / S), x.x += l / 2, x.y += l / S / 2;
                  break;
                case 1:
                  this.get_focus().set_height(this.get_focus().get_height() - h), x.y += h / 2;
                  break;
                case 2:
                  this.get_focus().set_width(this.get_focus().get_width() + l), this.get_focus().set_height(this.get_focus().get_height() + l / S), x.x += l / 2, x.y -= l / S / 2;
                  break;
                case 3:
                  this.get_focus().set_width(this.get_focus().get_width() + l), x.x += l / 2;
                  break;
                case 4:
                  this.get_focus().set_width(this.get_focus().get_width() + l), this.get_focus().set_height(this.get_focus().get_height() + l / S), x.x += l / 2, x.y += l / S / 2;
                  break;
                case 5:
                  this.get_focus().set_height(this.get_focus().get_height() + h), x.y += h / 2;
                  break;
                case 6:
                  this.get_focus().set_width(this.get_focus().get_width() - l), this.get_focus().set_height(this.get_focus().get_height() - l / S), x.x += l / 2, x.y -= l / S / 2;
                  break;
                case 7:
                  this.get_focus().set_width(this.get_focus().get_width() - l), x.x += l / 2;
                  break;
                case 8:
                  s = tt.getLocalizedText(538, "Rotate"), this.get_focus().set_rotationAngle(this.get_focus().get_rotationAngle() + l);
                  break;
                case 9:
                  s = tt.getLocalizedText(540, "Move"), x.x += l, x.y += h;
                  break;
              }
            if (this._selectionAction !== 9 && this._selectionAction !== 8 && (x = this.selection.pointToScreenSpace(x)), this.selection.get_multiSelect())
              for (var k = n.enumerate(this.selection.selectionSet); k.moveNext(); ) {
                var p = k.current;
                p.set_x(p.get_x() + l), p.set_y(p.get_y() + h);
              }
            else
              this.get_focus().set_x(x.x), this.get_focus().set_y(x.y);
            this._needUndoFrame && (this._needUndoFrame = !1, a.set_actionText(s), Tt.push(a));
          } else if (this.get_focus() != null) {
            if (this.get_focus().hitTest(r))
              return Ke.set_current(Ee.get_sizeAll()), !1;
            var P = this.selection.hitTest(r);
            if (P === 11)
              return !1;
            switch (P) {
              case 0:
                Ke.set_current(Ee.get_sizeNWSE());
                break;
              case 1:
                Ke.set_current(Ee.get_sizeNS());
                break;
              case 2:
                Ke.set_current(Ee.get_sizeNESW());
                break;
              case 3:
                Ke.set_current(Ee.get_sizeWE());
                break;
              case 4:
                Ke.set_current(Ee.get_sizeNWSE());
                break;
              case 5:
                Ke.set_current(Ee.get_sizeNS());
                break;
              case 6:
                Ke.set_current(Ee.get_sizeNESW());
                break;
              case 7:
                Ke.set_current(Ee.get_sizeWE());
                break;
              case 8:
                Ke.set_current(Ee.get_sizeWE());
                break;
            }
          }
          return !1;
        },
        _showNoSelectionContextMenu: function(t) {
          if (this._contextMenu != null && this._contextMenu._dispose(), this._tour.get_currentTourStop() != null) {
            this._contextMenu = new pr();
            var e = ht.create(tt.getLocalizedText(425, "Paste"));
            e.enabled = this.clipboardType === "WorldWideTelescope.Overlay", e.click = n.bind("_pasteMenu_Click", this), this._contextMenu.items.push(e), this._contextMenu._show(t);
          }
        },
        _addOpenRectangle_Click: function(t, e) {
          this.addShape("", 6);
        },
        _addStar_Click: function(t, e) {
          this.addShape("", 2);
        },
        _insertShapeCircle_Click: function(t, e) {
          this.addShape("", 0);
        },
        _insertShapeRectangle_Click: function(t, e) {
          this.addShape("", 1);
        },
        _insertShapeLine_Click: function(t, e) {
          this.addShape("", 5);
        },
        _insertDonut_Click: function(t, e) {
          this.addShape("", 3);
        },
        _addArrow_Click: function(t, e) {
          this.addShape("", 4);
        },
        showSelectionContextMenu: function(t) {
          if (this.get_focus() != null) {
            var e = this.selection.get_multiSelect();
            this._contextMenu != null && this._contextMenu._dispose(), this._contextMenu = new pr();
            var r = ht.create(tt.getLocalizedText(427, "Cut")), a = ht.create(tt.getLocalizedText(428, "Copy")), s = ht.create(tt.getLocalizedText(425, "Paste")), l = ht.create(tt.getLocalizedText(167, "Delete")), h = new yi(), u = new yi(), _ = new yi(), m = ht.create(tt.getLocalizedText(452, "Bring to Front")), p = ht.create(tt.getLocalizedText(453, "Send to Back")), b = ht.create(tt.getLocalizedText(454, "Bring Forward")), S = ht.create(tt.getLocalizedText(455, "Send Backward")), x = ht.create(tt.getLocalizedText(20, "Properties")), k = ht.create(tt.getLocalizedText(502, "Edit")), P = ht.create(tt.getLocalizedText(587, "Hyperlink")), I = this.get_focus().get_linkID();
            switch (this.get_focus().get_linkID()) {
              case "":
              case null:
                I = " (" + tt.getLocalizedText(609, "No Link") + ")";
                break;
              case "Next":
                I = " (" + tt.getLocalizedText(610, "Next Slide") + ")";
                break;
              case "Return":
                I = " (" + tt.getLocalizedText(602, "Return to Caller") + ")";
                break;
              default:
                var D = this.get_tour().getTourStopIndexByID(this.get_focus().get_linkID());
                D > -1 && (n.emptyString(this._tour.get_tourStops()[D].get_description()) ? I = n.format(" (" + tt.getLocalizedText(1340, "Slide") + " {0})", D) : I = " (" + this._tour.get_tourStops()[D].get_description() + ")");
                break;
            }
            var G = ht.create(tt.getLocalizedText(588, "Animate")), U = ht.create(tt.getLocalizedText(589, "Link to Slide") + I), Y = ht.create(tt.getLocalizedText(458, "Color/Opacity")), j = ht.create(tt.getLocalizedText(630, "Flipbook Properties")), K = ht.create(tt.getLocalizedText(1029, "Animation Tween Type")), Q = ht.create(tt.getLocalizedText(1030, "Linear")), J = ht.create(tt.getLocalizedText(1031, "Ease In/Out")), nt = ht.create(tt.getLocalizedText(1032, "Ease In")), W = ht.create(tt.getLocalizedText(1033, "Ease Out")), ct = ht.create(tt.getLocalizedText(1034, "Exponential")), rt = ht.create(tt.getLocalizedText(1035, "Slide Default")), kt = ht.create(tt.getLocalizedText(790, "Align")), At = ht.create(tt.getLocalizedText(1333, "Top")), bt = ht.create(tt.getLocalizedText(1334, "Bottom")), _t = ht.create(tt.getLocalizedText(1335, "Left")), $e = ht.create(tt.getLocalizedText(1336, "Right")), je = ht.create(tt.getLocalizedText(1337, "Horizontal")), qe = ht.create(tt.getLocalizedText(1338, "Vertical")), me = ht.create(tt.getLocalizedText(1339, "Centered"));
            switch (kt.dropDownItems.push(At), kt.dropDownItems.push(bt), kt.dropDownItems.push(_t), kt.dropDownItems.push($e), kt.dropDownItems.push(je), kt.dropDownItems.push(qe), kt.dropDownItems.push(me), Q.tag = 0, J.tag = 3, nt.tag = 1, W.tag = 2, ct.tag = 4, rt.tag = 5, Q.click = n.bind("_interpolation_Click", this), J.click = n.bind("_interpolation_Click", this), nt.click = n.bind("_interpolation_Click", this), W.click = n.bind("_interpolation_Click", this), ct.click = n.bind("_interpolation_Click", this), rt.click = n.bind("_interpolation_Click", this), this.get_focus().get_interpolationType()) {
              case 0:
                Q.checked = !0;
                break;
              case 1:
                nt.checked = !0;
                break;
              case 2:
                W.checked = !0;
                break;
              case 3:
                J.checked = !0;
                break;
              case 4:
                ct.checked = !0;
                break;
              case 5:
                rt.checked = !0;
                break;
            }
            K.dropDownItems.push(rt), K.dropDownItems.push(Q), K.dropDownItems.push(J), K.dropDownItems.push(nt), K.dropDownItems.push(W), K.dropDownItems.push(ct), r.click = n.bind("_cutMenu_Click", this), a.click = n.bind("_copyMenu_Click", this), l.click = n.bind("_deleteMenu_Click", this), m.click = n.bind("_bringToFront_Click", this), p.click = n.bind("_sendToBack_Click", this), S.click = n.bind("_sendBackward_Click", this), b.click = n.bind("_bringForward_Click", this), x.click = n.bind("_properties_Click", this), k.click = n.bind("_editText_Click", this), P.click = n.bind("_url_Click", this), Y.click = n.bind("_pickColor_Click", this), s.click = n.bind("_pasteMenu_Click", this), G.click = n.bind("_animateMenu_Click", this), j.click = n.bind("_flipbookProperties_Click", this), U.click = n.bind("_linkID_Click", this), At.click = n.bind("_alignTop_Click", this), bt.click = n.bind("_alignBottom_Click", this), _t.click = n.bind("_alignLeft_Click", this), $e.click = n.bind("_alignRight_Click", this), je.click = n.bind("_alignHorizon_Click", this), qe.click = n.bind("_alignVertical_Click", this), me.click = n.bind("_alignCenter_Click", this), this._contextMenu.items.push(r), this._contextMenu.items.push(a), this._contextMenu.items.push(s), this._contextMenu.items.push(l), this._contextMenu.items.push(h), this._contextMenu.items.push(m), this._contextMenu.items.push(p), this._contextMenu.items.push(b), this._contextMenu.items.push(S), this._contextMenu.items.push(kt), this._contextMenu.items.push(u), s.enabled = !1, this._contextMenu.items.push(Y), this._contextMenu.items.push(P), this._contextMenu.items.push(U), this._contextMenu.items.push(G), this._contextMenu.items.push(_), this._contextMenu.items.push(j), G.checked = this.get_focus().get_animate(), this._contextMenu.items.push(K), K.enabled = this.get_focus().get_animate(), j.visible = n.canCast(this.get_focus(), bn), _.visible = n.canCast(this.get_focus(), bn), e ? (P.visible = !1, U.visible = !1, x.visible = !1, j.visible = !1, b.visible = !1, S.visible = !1) : kt.visible = !1, this._contextMenu.items.push(x), this.get_focus() != null && n.typeOf(this.get_focus()) === rr && this._contextMenu.items.push(k), this._contextMenu._show(t);
          }
        },
        _editText_Click: function(t, e) {
          this.get_focus() != null && n.typeOf(this.get_focus()) === rr && this._editText();
        },
        _alignVertical_Click: function(t, e) {
          if (this.get_focus() != null) {
            Tt.push(new ye(tt.getLocalizedText(1036, "Vertical Align"), this._tour));
            for (var r = this.get_focus().get_x(), a = n.enumerate(this.selection.selectionSet); a.moveNext(); ) {
              var s = a.current;
              s.set_x(r);
            }
          }
        },
        _alignHorizon_Click: function(t, e) {
          if (this.get_focus() != null) {
            Tt.push(new ye(tt.getLocalizedText(1037, "Horizontal Align"), this._tour));
            for (var r = this.get_focus().get_y(), a = n.enumerate(this.selection.selectionSet); a.moveNext(); ) {
              var s = a.current;
              s.set_y(r);
            }
          }
        },
        _alignCenter_Click: function(t, e) {
          if (this.get_focus() != null) {
            Tt.push(new ye(tt.getLocalizedText(1038, "Align Centers"), this._tour));
            for (var r = this.get_focus().get_y(), a = this.get_focus().get_x(), s = n.enumerate(this.selection.selectionSet); s.moveNext(); ) {
              var l = s.current;
              l.set_y(r), l.set_x(a);
            }
          }
        },
        _alignRight_Click: function(t, e) {
          if (this.get_focus() != null) {
            Tt.push(new ye(tt.getLocalizedText(1040, "Align Right"), this._tour));
            for (var r = this.get_focus().get_x() + this.get_focus().get_width() / 2, a = n.enumerate(this.selection.selectionSet); a.moveNext(); ) {
              var s = a.current;
              s.set_x(r - s.get_width() / 2);
            }
          }
        },
        _alignLeft_Click: function(t, e) {
          if (this.get_focus() != null) {
            Tt.push(new ye(tt.getLocalizedText(1041, "Align Left"), this._tour));
            for (var r = this.get_focus().get_x() - this.get_focus().get_width() / 2, a = n.enumerate(this.selection.selectionSet); a.moveNext(); ) {
              var s = a.current;
              s.set_x(r + s.get_width() / 2);
            }
          }
        },
        _alignBottom_Click: function(t, e) {
          if (this.get_focus() != null) {
            Tt.push(new ye(tt.getLocalizedText(1042, "Align Bottoms"), this._tour));
            for (var r = this.get_focus().get_y() + this.get_focus().get_height() / 2, a = n.enumerate(this.selection.selectionSet); a.moveNext(); ) {
              var s = a.current;
              s.set_y(r - s.get_height() / 2);
            }
          }
        },
        _alignTop_Click: function(t, e) {
          if (this.get_focus() != null) {
            Tt.push(new ye(tt.getLocalizedText(1039, "Align Tops"), this._tour));
            for (var r = this.get_focus().get_y() - this.get_focus().get_height() / 2, a = n.enumerate(this.selection.selectionSet); a.moveNext(); ) {
              var s = a.current;
              s.set_y(r + s.get_height() / 2);
            }
          }
        },
        _interpolation_Click: function(t, e) {
          var r = t;
          if (this.get_focus() != null)
            for (var a = n.enumerate(this.selection.selectionSet); a.moveNext(); ) {
              var s = a.current;
              s.set_interpolationType(r.tag);
            }
        },
        _linkSlideChosen: function() {
          this.selectDialog.get_OK() && this.get_focus().set_linkID(this.selectDialog.get_id());
        },
        _linkID_Click: function(t, e) {
          this.selectDialog = new Ba(this.get_focus().get_linkID()), this.nextSlideCallback(this.selectDialog, n.bind("_linkSlideChosen", this));
        },
        _flipbookProperties_Click: function(t, e) {
        },
        _animateMenu_Click: function(t, e) {
          if (this.get_focus() != null) {
            Tt.push(new ye(tt.getLocalizedText(588, "Animate"), this._tour));
            for (var r = !this.get_focus().get_animate(), a = n.enumerate(this.selection.selectionSet); a.moveNext(); ) {
              var s = a.current;
              s.set_animate(r);
            }
          }
        },
        _url_Click: function(t, e) {
          var r = this;
          if (this.get_focus() != null) {
            var a = new Nn(tt.getLocalizedText(541, "Edit Hyperlink"), tt.getLocalizedText(542, "Url"), this.get_focus().get_url());
            a.show(Ke.get_position(), function() {
              Tt.push(new ye(tt.getLocalizedText(541, "Edit Hyperlink"), r._tour)), r.get_focus().set_url(a.text);
            });
          }
        },
        _pickColor_Click: function(t, e) {
          var r = this, a = new Va();
          a.color = this.get_focus().get_color(), a.callBack = function() {
            Tt.push(new ye(tt.getLocalizedText(543, "Edit Color"), r._tour));
            for (var s = n.enumerate(r.selection.selectionSet); s.moveNext(); ) {
              var l = s.current;
              l.set_color(a.color);
            }
          }, a.show(e);
        },
        _volume_Click: function(t, e) {
          var r = new Ms();
          r.volume = this.get_focus().get_volume(), r.showDialog(), this.get_focus().set_volume(r.volume);
        },
        _deleteMenu_Click: function(t, e) {
          if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
            Tt.push(new ye(tt.getLocalizedText(167, "Delete"), this._tour));
            for (var r = n.enumerate(this.selection.selectionSet); r.moveNext(); ) {
              var a = r.current;
              this._tour.get_currentTourStop().removeOverlay(a);
            }
            this.set_focus(null), this.clearSelection(), ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
          }
        },
        _properties_Click: function(t, e) {
          this._tour == null || this._tour.get_currentTourStop() == null, Tt.push(new ye(tt.getLocalizedText(549, "Properties Edit"), this._tour));
          var r = new Ts();
          r.overlay = this.get_focus(), r.showDialog(), ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
        },
        _bringForward_Click: function(t, e) {
          if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
            Tt.push(new ye(tt.getLocalizedText(454, "Bring Forward"), this._tour));
            for (var r = n.enumerate(this._getSortedSelection(!1)); r.moveNext(); ) {
              var a = r.current;
              this._tour.get_currentTourStop().bringForward(a);
            }
            ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
          }
        },
        _sendBackward_Click: function(t, e) {
          if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
            Tt.push(new ye(tt.getLocalizedText(455, "Send Backward"), this._tour));
            for (var r = n.enumerate(this._getSortedSelection(!0)); r.moveNext(); ) {
              var a = r.current;
              this._tour.get_currentTourStop().sendBackward(a);
            }
            ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
          }
        },
        _sendToBack_Click: function(t, e) {
          if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
            Tt.push(new ye(tt.getLocalizedText(453, "Send to Back"), this._tour));
            for (var r = n.enumerate(this._getSortedSelection(!0)); r.moveNext(); ) {
              var a = r.current;
              this._tour.get_currentTourStop().sendToBack(a);
            }
            ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
          }
        },
        _bringToFront_Click: function(t, e) {
          if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
            Tt.push(new ye(tt.getLocalizedText(452, "Bring to Front"), this._tour));
            for (var r = n.enumerate(this._getSortedSelection(!1)); r.moveNext(); ) {
              var a = r.current;
              this._tour.get_currentTourStop().bringToFront(a);
            }
            ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
          }
        },
        _getSortedSelection: function(t) {
          for (var e = [], r = n.enumerate(this.selection.selectionSet); r.moveNext(); ) {
            var a = r.current;
            e.push(a);
          }
          return t ? e.sort(function(s, l) {
            return -at.compare(s.get_zOrder(), l.get_zOrder());
          }) : e.sort(function(s, l) {
            return at.compare(s.get_zOrder(), l.get_zOrder());
          }), e;
        },
        _copyMenu_Click: function(t, e) {
          if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
            var r = new Jr();
            r._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), r._writeStartElement("Overlays");
            for (var a = n.enumerate(this.selection.selectionSet); a.moveNext(); ) {
              var s = a.current;
              s.saveToXml(r, !0);
            }
            r._writeEndElement(), this.clipboardData = r.body, this.clipboardType = "WorldWideTelescope.Overlay";
          }
        },
        _cutMenu_Click: function(t, e) {
          if (!(this._tour == null || this._tour.get_currentTourStop() == null)) {
            Tt.push(new ye(tt.getLocalizedText(427, "Cut"), this._tour)), this._copyMenu_Click(t, e);
            for (var r = n.enumerate(this.selection.selectionSet); r.moveNext(); ) {
              var a = r.current;
              this._tour.get_currentTourStop().removeOverlay(a);
            }
            this.set_focus(null), this.clearSelection(), ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
          }
        },
        _pasteMenu_Click: function(t, e) {
          if (Tt.push(new jr(tt.getLocalizedText(544, "Paste Object"), this._tour)), this.clipboardType === "WorldWideTelescope.Overlay") {
            var r = new DOMParser(), a = r.parseFromString(this.clipboardData, "text/xml");
            this.clearSelection();
            for (var s = at.selectSingleNode(a, "Overlays"), l = n.enumerate(s.childNodes); l.moveNext(); ) {
              var h = l.current;
              if (h.nodeName === "Overlay") {
                for (var u = xe._fromXml(this._tour.get_currentTourStop(), h), _ = !1, m = 0, p = 0, b = n.enumerate(this._tour.get_currentTourStop().get_overlays()); b.moveNext(); ) {
                  var S = b.current;
                  S.id === u.id && n.typeOf(S) === n.typeOf(u) && (_ = !0, (p < S.get_y() || m < S.get_x()) && (m = S.get_x(), p = S.get_y()));
                }
                _ && (u.set_x(m + 20), u.set_y(p + 20)), this._tour.get_currentTourStop().addOverlay(u), this.set_focus(u), this.selection.addSelection(this.get_focus()), ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection);
              }
            }
          }
        },
        mouseClick: function(t, e) {
          return !!(Qe.currentEditor != null && Qe.currentEditor.mouseClick(t, e));
        },
        click: function(t, e) {
          return !!(Qe.currentEditor != null && Qe.currentEditor.click(t, e));
        },
        mouseDoubleClick: function(t, e) {
          return Qe.currentEditor != null && Qe.currentEditor.mouseDoubleClick(t, e) || this.get_focus() != null && n.typeOf(this.get_focus()) === rr && this._editText(), !0;
        },
        _doneEditing: function() {
          Tt.push(new ye(tt.getLocalizedText(545, "Text Edit"), this._tour)), this.get_focus().set_width(0), this.get_focus().set_height(0), this.get_focus().set_color(this.get_focus().textObject.foregroundColor), this.get_focus().cleanUp();
        },
        _editText: function() {
          var t = this.get_focus().textObject;
          this.editTextCallback(t, n.bind("_doneEditing", this));
        },
        keyDown: function(t, e) {
          if (Qe.currentEditor != null && Qe.currentEditor.keyDown(t, e))
            return !0;
          var r = 1;
          switch (e.ctrlKey && (r = 10), e.keyCode) {
            case 65:
              e.ctrlKey && (this.clearSelection(), this.selection.addSelectionRange(this._tour.get_currentTourStop().get_overlays()), ti._updateOverlayListSelection(this.selection), this._tour.get_currentTourStop().get_overlays().length > 0 && this.set_focus(this._tour.get_currentTourStop().get_overlays()[0]));
              break;
            case 90:
              e.ctrlKey && (Tt.peekAction() ? ji._undoStep() : Oe._beep());
              break;
            case 89:
              e.ctrlKey && (Tt.peekRedoAction() ? ji._redoStep() : Oe._beep());
              break;
            case 67:
              e.ctrlKey && this._copyMenu_Click(this, new n.EventArgs());
              break;
            case 86:
              e.ctrlKey && this._pasteMenu_Click(this, new n.EventArgs());
              break;
            case 88:
              e.ctrlKey && this._cutMenu_Click(this, new n.EventArgs());
              break;
            case 46:
              return this._deleteMenu_Click(null, null), !0;
            case 9:
              return e.shiftKey ? this._selectLast() : this._selectNext(), !0;
            case 37:
              if (this.get_focus() != null) {
                for (var a = n.enumerate(this.selection.selectionSet); a.moveNext(); ) {
                  var s = a.current;
                  if (e.shiftKey)
                    if (e.altKey)
                      s.get_width() > r && (Tt.push(new ye(tt.getLocalizedText(537, "Resize"), this._tour)), s.set_width(s.get_width() - r));
                    else {
                      var l = s.get_width() / s.get_height();
                      s.get_width() > r && s.get_height() > r * l && (Tt.push(new ye(tt.getLocalizedText(537, "Resize"), this._tour)), s.set_width(s.get_width() - r), s.set_height(s.get_height() - r * l));
                    }
                  else
                    e.altKey ? (Tt.push(new ye(tt.getLocalizedText(538, "Rotate"), this._tour)), s.set_rotationAngle(s.get_rotationAngle() - r)) : (Tt.push(new ye(tt.getLocalizedText(540, "Move"), this._tour)), s.set_x(s.get_x() - r));
                }
                return !0;
              }
              break;
            case 39:
              if (this.get_focus() != null) {
                for (var h = n.enumerate(this.selection.selectionSet); h.moveNext(); ) {
                  var s = h.current;
                  if (e.shiftKey)
                    if (Tt.push(new ye(tt.getLocalizedText(537, "Resize"), this._tour)), e.altKey)
                      s.set_width(s.get_width() + r);
                    else {
                      var l = s.get_width() / s.get_height();
                      s.set_width(s.get_width() + r), s.set_height(s.get_height() + r * l);
                    }
                  else
                    e.altKey ? (Tt.push(new ye(tt.getLocalizedText(538, "Rotate"), this._tour)), s.set_rotationAngle(s.get_rotationAngle() + r)) : (Tt.push(new ye(tt.getLocalizedText(540, "Move"), this._tour)), s.set_x(s.get_x() + r));
                }
                return !0;
              }
              break;
            case 38:
              if (this.get_focus() != null) {
                for (var u = n.enumerate(this.selection.selectionSet); u.moveNext(); ) {
                  var s = u.current;
                  if (e.shiftKey)
                    if (Tt.push(new ye(tt.getLocalizedText(537, "Resize"), this._tour)), e.altKey)
                      s.set_height(s.get_height() + r);
                    else {
                      var l = s.get_width() / s.get_height();
                      s.set_width(s.get_width() + r), s.set_height(s.get_height() + r * l);
                    }
                  else
                    e.altKey || (Tt.push(new ye(tt.getLocalizedText(540, "Move"), this._tour)), s.set_y(s.get_y() - r));
                }
                return !0;
              }
              break;
            case 40:
              if (this.get_focus() != null) {
                for (var _ = n.enumerate(this.selection.selectionSet); _.moveNext(); ) {
                  var s = _.current;
                  if (e.shiftKey)
                    if (e.altKey)
                      s.get_height() > r && (Tt.push(new ye(tt.getLocalizedText(537, "Resize"), this._tour)), s.set_height(s.get_height() - r));
                    else {
                      var l = s.get_width() / s.get_height();
                      s.get_width() > r && s.get_height() > r * l && (Tt.push(new ye(tt.getLocalizedText(537, "Resize"), this._tour)), s.set_width(s.get_width() - r), s.set_height(s.get_height() - r * l));
                    }
                  else
                    e.altKey || (Tt.push(new ye(tt.getLocalizedText(540, "Move"), this._tour)), s.set_y(s.get_y() + r));
                }
                return !0;
              }
              break;
            case 34:
              if (e.altKey)
                return this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && (this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1, ji._selectCurrent(), ji._ensureSelectedVisible()), !0;
              break;
            case 33:
              if (e.altKey)
                return this._tour.get_currentTourstopIndex() > 0 && (this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() - 1) + 1, ji._selectCurrent(), ji._ensureSelectedVisible()), !0;
              break;
          }
          return !1;
        },
        _selectNext: function() {
          this._tour == null || this._tour.get_currentTourStop() == null || (this.set_focus(this._tour.get_currentTourStop().getNextOverlay(this.get_focus())), this.selection.setSelection(this.get_focus()), ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection));
        },
        _selectLast: function() {
          this._tour == null || this._tour.get_currentTourStop() == null || (this.set_focus(this._tour.get_currentTourStop().getPerviousOverlay(this.get_focus())), this.selection.setSelection(this.get_focus()), ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection));
        },
        keyUp: function(t, e) {
          return !!(Qe.currentEditor != null && Qe.currentEditor.keyUp(t, e));
        },
        addPicture: function(t) {
          if (this._tour == null || this._tour.get_currentTourStop() == null)
            return !1;
          Tt.push(new ye(tt.getLocalizedText(546, "Insert Picture"), this._tour));
          var e = Wr.create(this._tour.get_currentTourStop(), t);
          return e.set_x(960), e.set_y(600), this._tour.get_currentTourStop().addOverlay(e), ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
        },
        addFlipbook: function(t) {
          return !1;
        },
        addAudio: function(t, e) {
          if (this._tour == null || this._tour.get_currentTourStop() == null)
            return !1;
          var r = zn.create(this._tour.get_currentTourStop(), t);
          return r.set_x(900), r.set_y(600), e ? this._tour.get_currentTourStop().set_musicTrack(r) : this._tour.get_currentTourStop().set_voiceTrack(r), !0;
        },
        addVideo: function(t) {
          return !0;
        },
        addText: function(t, e) {
          if (this._tour == null || this._tour.get_currentTourStop() == null)
            return !1;
          var r = rr.create(e);
          return r.set_color(e.foregroundColor), r.set_x(960), r.set_y(600), Tt.push(new ye(tt.getLocalizedText(547, "Insert Text"), this._tour)), this._tour.get_currentTourStop().addOverlay(r), ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
        },
        addOverlay: function(t) {
          if (this._tour == null || this._tour.get_currentTourStop() == null)
            return null;
          if (n.typeOf(t) === Qr) {
            var e = t;
            if (e != null) {
              var r = Qr._create(this._tour.get_currentTourStop(), e.get_shapeType());
              return r.set_width(e.get_width()), r.set_height(e.get_height()), r.set_x(this._contextPoint.x), r.set_y(this._contextPoint.y), r.set_color(e.get_color()), r.set_rotationAngle(e.get_rotationAngle()), this._tour.get_currentTourStop().addOverlay(r), r;
            }
          } else if (n.typeOf(t) === rr) {
            var a = t;
            if (a != null) {
              var s = rr.create(a.textObject);
              return s.set_x(this._contextPoint.x), s.set_y(this._contextPoint.y), s.set_color(a.get_color()), this._tour.get_currentTourStop().addOverlay(s), s;
            }
          } else if (n.typeOf(t) === Wr) {
            var l = t;
            if (l != null) {
              var h = l.copy(this._tour.get_currentTourStop());
              return h.set_x(this._contextPoint.x), h.set_y(this._contextPoint.y), this._tour.get_currentTourStop().addOverlay(h), h;
            }
          } else if (n.typeOf(t) === bn) {
            var u = t;
            if (u != null) {
              var h = u.copy(this._tour.get_currentTourStop());
              return h.set_x(this._contextPoint.x), h.set_y(this._contextPoint.y), this._tour.get_currentTourStop().addOverlay(h), h;
            }
          }
          return null;
        },
        addShape: function(t, e) {
          if (this._tour == null || this._tour.get_currentTourStop() == null)
            return !1;
          Tt.push(new ye(tt.getLocalizedText(548, "Insert Shape"), this._tour));
          var r = Qr._create(this._tour.get_currentTourStop(), e);
          return r.set_width(200), r.set_height(200), e === 4 && r.set_height(r.get_height() / 2), e === 5 && r.set_height(12), r.set_x(960), r.set_y(600), this._tour.get_currentTourStop().addOverlay(r), this.set_focus(r), this.selection.setSelection(this.get_focus()), ti._updateOverlayList(this._tour.get_currentTourStop(), this.selection), !0;
        },
        getCurrentColor: function() {
          return this._tour == null || this._tour.get_currentTourStop() == null ? this._defaultColor : this.get_focus() != null ? this.get_focus().get_color() : this._defaultColor;
        },
        setCurrentColor: function(t) {
          this._defaultColor = t, !(this._tour == null || this._tour.get_currentTourStop() == null) && this.get_focus() != null && this.get_focus().set_color(t);
        },
        dispose: function() {
          this._contextMenu != null && (this._contextMenu._dispose(), this._contextMenu = null);
        },
        hover: function(t) {
          return Qe.currentEditor != null && Qe.currentEditor.hover(t), !0;
        }
      };
      function ti() {
      }
      ti._updateOverlayList = function(t, e) {
      }, ti._updateOverlayListSelection = function(t) {
      };
      var jh = {};
      function ji() {
      }
      ji._ensureSelectedVisible = function() {
      }, ji._selectCurrent = function() {
      }, ji._undoStep = function() {
        Tt.peekAction() && Tt.stepBack();
      }, ji._redoStep = function() {
        Tt.peekRedoAction() && Tt.stepForward();
      };
      var Kh = {};
      function Fa() {
        this.target = null;
      }
      var Jh = {};
      function Ss() {
        this.tour = null, this.showAddButton = !1, this.selectedItems = null, this.selectedItem = -1, this.refreshCallback = null, this.multipleSelection = !1, this.hitType = !1;
      }
      var Wh = {
        selectAll: function() {
          this.selectedItems = {};
          for (var t = 0; t < this.tour.get_tourStops().length; t++)
            this.selectedItems[t] = this.tour.get_tourStops()[t];
        },
        refresh: function() {
          this.refreshCallback != null && this.refreshCallback();
        },
        findItem: function(t) {
          return -1;
        },
        ensureSelectedVisible: function() {
        },
        ensureAddVisible: function() {
        }
      };
      function Dn() {
      }
      Dn.refreshUi = function() {
      };
      var Qh = {};
      function ie() {
        this._overlayBlend = Cr.create(!1, 1e3), this._tour = null, this._onTarget = !1, this._currentMasterSlide = null, this._callStack = new n.Stack(), this._leaveSettingsWhenStopped = !1;
      }
      ie.get_playing = function() {
        return ie._playing;
      }, ie.set_playing = function(t) {
        return ie._playing = t, t;
      }, ie.add_tourEnded = function(t) {
        ie.__tourEnded = n.bindAdd(ie.__tourEnded, t);
      }, ie.remove_tourEnded = function(t) {
        ie.__tourEnded = n.bindSub(ie.__tourEnded, t);
      };
      var tc = {
        render: function(t) {
          if (!(this._tour == null || this._tour.get_currentTourStop() == null || !ie._playing)) {
            if (t.save(), this.updateSlideStates(), !this._onTarget && (this._slideStartTime = n.now(), t.onTarget(this.get_tour().get_currentTourStop().get_target()))) {
              this._onTarget = !0, this._overlayBlend.set_state(!this.get_tour().get_currentTourStop().get_fadeInOverlays()), this._overlayBlend.set_targetState(!0), this._tour.get_currentTourStop().get_musicTrack() != null && (this._tour.get_currentTourStop().get_musicTrack().seek(0), this._tour.get_currentTourStop().get_musicTrack().play()), this._tour.get_currentTourStop().get_voiceTrack() != null && (this._tour.get_currentTourStop().get_voiceTrack().seek(0), this._tour.get_currentTourStop().get_voiceTrack().play());
              for (var e = "", r = n.enumerate(this._tour.get_currentTourStop().get_overlays()); r.moveNext(); ) {
                var a = r.current;
                if (a.get_name().toLowerCase() === "caption") {
                  var s = n.safeCast(a, rr);
                  s != null && (e = s.textObject.text);
                }
                a.play();
              }
              T.setVisibleLayerList(this._tour.get_currentTourStop().layers), this._tour.get_currentTourStop().get_endTarget() != null && this._tour.get_currentTourStop().get_endTarget().get_zoomLevel() !== -1 && (this._tour.get_currentTourStop().get_target().get_type(), t.viewMover = new ka(this._tour.get_currentTourStop().get_target().get_camParams(), this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_duration() / 1e3, this._tour.get_currentTourStop().get_startTime(), this._tour.get_currentTourStop().get_endTime(), this._tour.get_currentTourStop().get_interpolationType())), z.tourSettings = this._tour.get_currentTourStop(), Z.set_now(this._tour.get_currentTourStop().get_startTime()), Z.set_syncToClock(!1), V.scriptInterface._fireSlideChanged(e);
            }
            if (t.gl != null) {
              if (t.setupMatricesOverlays(), this._currentMasterSlide != null)
                for (var l = n.enumerate(this._currentMasterSlide.get_overlays()); l.moveNext(); ) {
                  var a = l.current;
                  a.set_tweenFactor(1), a.draw3D(t, !1);
                }
              if (this._onTarget)
                for (var h = n.enumerate(this._tour.get_currentTourStop().get_overlays()); h.moveNext(); ) {
                  var a = h.current;
                  (a.get_name().toLowerCase() !== "caption" || V.scriptInterface.get_showCaptions()) && (a.set_tweenFactor(Me.easeCurve(this._tour.get_currentTourStop().get_tweenPosition(), a.get_interpolationType() === 5 ? this._tour.get_currentTourStop().get_interpolationType() : a.get_interpolationType())), a.draw3D(t, !1));
                }
              t.restore();
            } else {
              t.device.scale(t.height / 1116, t.height / 1116);
              var u = t.width / t.height;
              if (t.device.translate(-((1920 - u * 1116) / 2), 0), this._currentMasterSlide != null)
                for (var _ = n.enumerate(this._currentMasterSlide.get_overlays()); _.moveNext(); ) {
                  var a = _.current;
                  a.set_tweenFactor(1), a.draw3D(t, !1);
                }
              if (this._onTarget)
                for (var m = n.enumerate(this._tour.get_currentTourStop().get_overlays()); m.moveNext(); ) {
                  var a = m.current;
                  (a.get_name().toLowerCase() !== "caption" || V.scriptInterface.get_showCaptions()) && (a.set_tweenFactor(Me.easeCurve(this._tour.get_currentTourStop().get_tweenPosition(), a.get_interpolationType() === 5 ? this._tour.get_currentTourStop().get_interpolationType() : a.get_interpolationType())), a.draw3D(t, !1));
                }
              t.restore();
            }
          }
        },
        get_tour: function() {
          return this._tour;
        },
        set_tour: function(t) {
          return this._tour = t, t;
        },
        nextSlide: function() {
          if (this._tour.get_currentTourStop() != null)
            if (this._tour.get_currentTourStop().get_masterSlide())
              this._currentMasterSlide = this._tour.get_currentTourStop();
            else {
              this._tour.get_currentTourStop().get_musicTrack() != null && this._tour.get_currentTourStop().get_musicTrack().stop(), this._tour.get_currentTourStop().get_voiceTrack() != null && this._tour.get_currentTourStop().get_voiceTrack().stop();
              for (var t = n.enumerate(this._tour.get_currentTourStop().get_overlays()); t.moveNext(); ) {
                var e = t.current;
                e.stop();
              }
            }
          if (this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 || this._tour.get_currentTourStop().get_isLinked()) {
            if (this._tour.get_currentTourStop().get_endTarget() != null && (V.singleton.gotoTargetFull(!1, !0, this._tour.get_currentTourStop().get_endTarget().get_camParams(), this._tour.get_currentTourStop().get_target().get_studyImageset(), this._tour.get_currentTourStop().get_target().get_backgroundImageset()), V.singleton.set__mover(null)), this._onTarget = !1, this._tour.get_currentTourStop().get_isLinked())
              try {
                switch (this._tour.get_currentTourStop().get_nextSlide()) {
                  case "Return":
                    this._callStack.count > 0 ? this.playFromTourstop(this._tour.get_tourStops()[this._callStack.pop()]) : this._tour.set_currentTourstopIndex(this._tour.get_tourStops().length - 1);
                    break;
                  default:
                    this.playFromTourstop(this._tour.get_tourStops()[this._tour.getTourStopIndexByID(this._tour.get_currentTourStop().get_nextSlide())]);
                    break;
                }
              } catch {
                this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1;
              }
            else
              this._tour.set_currentTourstopIndex(this._tour.get_currentTourstopIndex() + 1) - 1;
            this._currentMasterSlide != null && this._tour.get_currentTourStop().get_masterSlide() && this._stopCurrentMaster();
            var r = !1;
            switch (this._tour.get_currentTourStop().get__transition()) {
              case 0:
                break;
              case 1:
                r = !0;
                break;
              case 2:
                r = !0;
                break;
              case 3:
                r = !0;
                break;
              case 5:
                r = !0;
                break;
              case 4:
                r = !0;
                break;
            }
            V.singleton.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, r, !1), this._slideStartTime = n.now(), z.tourSettings = this._tour.get_currentTourStop(), Z.set_now(this._tour.get_currentTourStop().get_startTime()), Z.set_syncToClock(!1);
          } else
            this._stopCurrentMaster(), ie._playing = !1, z.get_current().autoRepeatTour ? (this._tour.set_currentTourstopIndex(-1), this.play()) : (V.singleton._freezeView(), ie.__tourEnded != null && ie.__tourEnded(this, new n.EventArgs()), V.singleton._hideUI(!1), V.scriptInterface._fireTourEnded());
        },
        _stopCurrentMaster: function() {
          if (this._currentMasterSlide != null) {
            this._currentMasterSlide.get_musicTrack() != null && this._currentMasterSlide.get_musicTrack().stop(), this._currentMasterSlide.get_voiceTrack() != null && this._currentMasterSlide.get_voiceTrack().stop();
            for (var t = n.enumerate(this._currentMasterSlide.get_overlays()); t.moveNext(); ) {
              var e = t.current;
              e.stop();
            }
            this._currentMasterSlide = null;
          }
        },
        get_leaveSettingsWhenStopped: function() {
          return this._leaveSettingsWhenStopped;
        },
        set_leaveSettingsWhenStopped: function(t) {
          return this._leaveSettingsWhenStopped = t, t;
        },
        play: function() {
          if (this._tour != null) {
            if (ie._playing ? this.stop(!0) : ie._playing = !0, V.singleton._hideUI(!0), ie._playing = !0, this._tour.get_tourStops().length > 0) {
              this._onTarget = !1, this._tour.get_currentTourstopIndex() === -1 && this._tour.set_currentTourStop(this._tour.get_tourStops()[0]);
              for (var t = n.enumerate(this._tour.get_tourStops()); t.moveNext(); ) {
                var e = t.current;
                e.get_musicTrack() != null && e.get_musicTrack().prepMultimedia(), e.get_voiceTrack() != null && e.get_voiceTrack().prepMultimedia();
                for (var r = n.enumerate(e.get_overlays()); r.moveNext(); ) {
                  var a = r.current;
                  a.prepMultimedia();
                }
              }
              this._tour.get_currentTourstopIndex() > 0 && this._playMasterForCurrent(), V.singleton.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1);
            }
            this._slideStartTime = n.now(), ie._playing = !0;
          }
        },
        _playMasterForCurrent: function() {
          if (!this._tour.get_currentTourStop().get_masterSlide()) {
            var t = this._tour.elapsedTimeSinceLastMaster(this._tour.get_currentTourstopIndex());
            if (t != null) {
              var e = t.duration;
              this._currentMasterSlide = t.master, this._currentMasterSlide.get_musicTrack() != null && (this._currentMasterSlide.get_musicTrack().seek(e), this._currentMasterSlide.get_musicTrack().play()), this._currentMasterSlide.get_voiceTrack() != null && (this._currentMasterSlide.get_voiceTrack().seek(e), this._currentMasterSlide.get_voiceTrack().play());
              for (var r = n.enumerate(this._currentMasterSlide.get_overlays()); r.moveNext(); ) {
                var a = r.current;
                a.seek(e), a.play();
              }
            }
          }
        },
        stop: function(t) {
          if (ie._switchedToFullScreen, this._leaveSettingsWhenStopped || (z.tourSettings = null), ie._playing = !1, this._tour.get_currentTourStop() != null) {
            this._tour.get_currentTourStop().get_musicTrack() != null && this._tour.get_currentTourStop().get_musicTrack().stop(), this._tour.get_currentTourStop().get_voiceTrack() != null && this._tour.get_currentTourStop().get_voiceTrack().stop();
            for (var e = n.enumerate(this._tour.get_currentTourStop().get_overlays()); e.moveNext(); ) {
              var r = e.current;
              r.stop();
            }
          }
          if (this._currentMasterSlide != null) {
            this._currentMasterSlide.get_musicTrack() != null && this._currentMasterSlide.get_musicTrack().stop(), this._currentMasterSlide.get_voiceTrack() != null && this._currentMasterSlide.get_voiceTrack().stop();
            for (var a = n.enumerate(this._currentMasterSlide.get_overlays()); a.moveNext(); ) {
              var r = a.current;
              r.stop();
            }
          }
          V.singleton._hideUI(ie.noRestoreUIOnStop), V.scriptInterface._fireTourEnded();
        },
        updateSlideStates: function() {
          var t = !1, e = n.now() - this._slideStartTime;
          if (e > this._tour.get_currentTourStop().get_duration() && ie._playing && (this.nextSlide(), t = !0), e = n.now() - this._slideStartTime, this._tour.get_currentTourStop() != null) {
            this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, e / this._tour.get_currentTourStop().get_duration())), this._tour.get_currentTourStop().faderOpacity = 0;
            var r = this._tour.get_currentTourStop().get_tweenPosition() * this._tour.get_currentTourStop().get_duration() / 1e3;
            switch (t && V.singleton.set_crossFadeFrame(!1), this._tour.get_currentTourStop().get__transition()) {
              case 0:
                this._tour.get_currentTourStop().faderOpacity = 0, V.singleton.set_crossFadeFrame(!1);
                break;
              case 2:
                r < r - this._tour.get_currentTourStop().get__transitionHoldTime() ? (V.singleton.set_crossFadeFrame(!0), this._tour.get_currentTourStop().faderOpacity = 1) : (this._tour.get_currentTourStop().faderOpacity = 0, V.singleton.set_crossFadeFrame(!1));
                break;
              case 1:
                V.singleton.set_crossFadeFrame(!0);
                var a = Math.max(0, 1 - Math.min(1, (r - this._tour.get_currentTourStop().get__transitionHoldTime()) / this._tour.get_currentTourStop().get__transitionTime()));
                this._tour.get_currentTourStop().faderOpacity = a;
                break;
              case 3:
              case 4:
                V.singleton.set_crossFadeFrame(!1);
                var a = Math.max(0, 1 - Math.max(0, r - this._tour.get_currentTourStop().get__transitionHoldTime()) / this._tour.get_currentTourStop().get__transitionTime());
                this._tour.get_currentTourStop().faderOpacity = a;
                break;
              case 5:
                V.singleton.set_crossFadeFrame(!1);
                break;
            }
            if (!this._tour.get_currentTourStop().get_isLinked() && this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1) {
              var s = this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1].get__transition(), l = this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1].get__transitionOutTime();
              switch (s) {
                case 5:
                case 3:
                  if (!this._tour.get_currentTourStop().faderOpacity) {
                    V.singleton.set_crossFadeFrame(!1);
                    var a = Math.max(0, 1 - Math.min(1, (this._tour.get_currentTourStop().get_duration() / 1e3 - r) / l));
                    this._tour.get_currentTourStop().faderOpacity = a;
                  }
                  break;
              }
            }
          }
        },
        updateTweenPosition: function(t) {
          var e = n.now() - this._slideStartTime;
          return t > -1 ? this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, t)) : this._tour.get_currentTourStop().set_tweenPosition(Math.min(1, e / this._tour.get_currentTourStop().get_duration()));
        },
        close: function() {
          this._tour != null && (ie.get_playing() && this.stop(ie._switchedToFullScreen), this._tour = null);
        },
        mouseDown: function(t, e) {
          var r;
          if (r = this.pointToView(lt.create(e.offsetX, e.offsetY)), this._tour == null || this._tour.get_currentTourStop() == null)
            return !1;
          for (var a = this._tour.get_currentTourStop().get_overlays().length - 1; a >= 0; a--)
            if (this._tour.get_currentTourStop().get_overlays()[a].hitTest(r)) {
              if (!n.emptyString(this._tour.get_currentTourStop().get_overlays()[a].get_url())) {
                var s = this._tour.get_currentTourStop().get_overlays()[a];
                return at._openUrl(s.get_url()), !0;
              }
              if (!n.emptyString(this._tour.get_currentTourStop().get_overlays()[a].get_linkID()))
                return this._callStack.push(this._tour.get_currentTourstopIndex()), this.playFromTourstop(this._tour.get_tourStops()[this._tour.getTourStopIndexByID(this._tour.get_currentTourStop().get_overlays()[a].get_linkID())]), !0;
            }
          return !1;
        },
        mouseUp: function(t, e) {
          return !1;
        },
        mouseMove: function(t, e) {
          var r;
          try {
            r = this.pointToView(lt.create(e.offsetX, e.offsetY));
          } catch {
            return !1;
          }
          if (this._tour == null || this._tour.get_currentTourStop() == null)
            return !1;
          for (var a = this._tour.get_currentTourStop().get_overlays().length - 1; a >= 0; a--)
            if (this._tour.get_currentTourStop().get_overlays()[a].hitTest(r) && (!n.emptyString(this._tour.get_currentTourStop().get_overlays()[a].get_url()) || !n.emptyString(this._tour.get_currentTourStop().get_overlays()[a].get_linkID())))
              return !0;
          return !1;
        },
        mouseClick: function(t, e) {
          return !1;
        },
        click: function(t, e) {
          return !1;
        },
        mouseDoubleClick: function(t, e) {
          return !1;
        },
        keyDown: function(t, e) {
          switch (e.keyCode) {
            case 27:
              return this.stop(ie._switchedToFullScreen), V.singleton._closeTour(), !0;
            case 32:
              return this.pauseTour(), !0;
            case 39:
              return this._playNextSlide(), !0;
            case 37:
              return this._playPreviousSlide(), !0;
            case 35:
              return this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_tourStops().length - 1]), !0;
            case 36:
              return this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[0]), !0;
          }
          return !1;
        },
        _playNextSlide: function() {
          this._tour.get_currentTourstopIndex() < this._tour.get_tourStops().length - 1 && this._tour.get_tourStops().length > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() + 1]);
        },
        _playPreviousSlide: function() {
          this._tour.get_currentTourstopIndex() > 0 && this.playFromTourstop(this._tour.get_tourStops()[this._tour.get_currentTourstopIndex() - 1]);
        },
        playFromTourstop: function(t) {
          this.stop(!0), this._tour.set_currentTourStop(t), V.singleton.gotoTarget(this._tour.get_currentTourStop().get_target(), !1, !0, !1), Z.set_now(this._tour.get_currentTourStop().get_startTime()), Z.set_syncToClock(!1), this.play();
        },
        pauseTour: function() {
          ie._playing ? (this.stop(ie._switchedToFullScreen), V.singleton._freezeView(), V.scriptInterface._fireTourPaused()) : (this.play(), V.scriptInterface._fireTourResume());
        },
        keyUp: function(t, e) {
          return !1;
        },
        hover: function(t) {
          return !!ie._playing;
        },
        pointToView: function(t) {
          var e = V.singleton.canvas.height, r = V.singleton.canvas.width, a = r / e * 1116, s = t.x / r * a - (a - 1920) / 2, l = t.y / e * 1116;
          return lt.create(s, l);
        }
      };
      function Cs(t, e) {
        this.duration = 0, this.master = t, this.duration = e;
      }
      var ec = {};
      function Fi() {
        this._tourStopType = 0, this._keyFramed = !1, this._tweenPosition = 0, this.faderOpacity = 0, this._owner = null, this._transition = 0, this._transitionTime = 2, this._transitionHoldTime = 4, this._transitionOutTime = 2, this._nextSlide = "Next", this._fadeInOverlays = !1, this._masterSlide = !1, this._id = "", this._description = "", this._name = "", this._duration = 1e4, this._interpolationType = 0, this._hasLocation = !0, this._hasTime = !0, this._startTime = Z.get_now(), this._endTime = Z.get_now(), this._actualPlanetScale = z.get_current().get_actualPlanetScale(), this._locationAltitude = z.get_current().get_locationAltitude(), this._locationLat = z.get_current().get_locationLat(), this._locationLng = z.get_current().get_locationLng(), this._showClouds = z.get_current().get_showClouds(), this._showConstellationBoundries = z.get_current().get_showConstellationBoundries(), this._showConstellationFigures = z.get_current().get_showConstellationFigures(), this._showConstellationSelection = z.get_current().get_showConstellationSelection(), this._showEcliptic = z.get_current().get_showEcliptic(), this._showElevationModel = z.get_current().get_showElevationModel(), this._showFieldOfView = z.get_current().get_showFieldOfView(), this._showGrid = z.get_current().get_showGrid(), this._showHorizon = z.get_current().get_showHorizon(), this._showHorizonPanorama = z.get_current().get_showHorizonPanorama(), this._showMoonsAsPointSource = z.get_current().get_showMoonsAsPointSource(), this._showSolarSystem = z.get_current().get_showSolarSystem(), this._fovTelescope = z.get_current().get_fovTelescope(), this._fovEyepiece = z.get_current().get_fovEyepiece(), this._fovCamera = z.get_current().get_fovCamera(), this._localHorizonMode = z.get_current().get_localHorizonMode(), this._galacticMode = z.get_current().get_galacticMode(), this._solarSystemStars = z.get_current().get_solarSystemStars(), this._solarSystemMilkyWay = z.get_current().get_solarSystemMilkyWay(), this._solarSystemCosmos = z.get_current().get_solarSystemCosmos(), this._solarSystemOrbits = z.get_current().get_solarSystemOrbits(), this._solarSystemOverlays = z.get_current().get_solarSystemOverlays(), this._solarSystemLighting = z.get_current().get_solarSystemLighting(), this._solarSystemScale = z.get_current().get_solarSystemScale(), this._solarSystemMultiRes = z.get_current().get_solarSystemMultiRes(), this._showEquatorialGridText = z.get_current().get_showEquatorialGridText(), this._showGalacticGrid = z.get_current().get_showGalacticGrid(), this._showGalacticGridText = z.get_current().get_showGalacticGridText(), this._showEclipticGrid = z.get_current().get_showEclipticGrid(), this._showEclipticGridText = z.get_current().get_showEclipticGridText(), this._showEclipticOverviewText = z.get_current().get_showEclipticOverviewText(), this._showAltAzGrid = z.get_current().get_showAltAzGrid(), this._showAltAzGridText = z.get_current().get_showAltAzGridText(), this._showPrecessionChart = z.get_current().get_showPrecessionChart(), this._showConstellationPictures = z.get_current().get_showConstellationPictures(), this._showConstellationLabels = z.get_current().get_showConstellationLabels(), this._solarSystemCMB = z.get_current().get_solarSystemCMB(), this._solarSystemMinorPlanets = z.get_current().get_solarSystemMinorPlanets(), this._solarSystemPlanets = z.get_current().get_solarSystemPlanets(), this._showEarthSky = z.get_current().get_showEarthSky(), this._solarSystemMinorOrbits = z.get_current().get_solarSystemMinorOrbits(), this._constellationsEnabled = "", this._constellationFiguresFilter = z.get_current().get_constellationFiguresFilter().clone(), this._constellationBoundariesFilter = z.get_current().get_constellationBoundariesFilter().clone(), this._constellationNamesFilter = z.get_current().get_constellationNamesFilter().clone(), this._constellationArtFilter = z.get_current().get_constellationArtFilter().clone(), this._showSkyOverlays = z.get_current().get_showSkyOverlays(), this._showConstellations = z.get_current().get_showConstellations(), this._showSkyNode = z.get_current().get_showSkyNode(), this._showSkyGrids = z.get_current().get_showSkyGrids(), this._showSkyOverlaysIn3d = z.get_current().get_showSkyOverlaysIn3d(), this._earthCutawayView = z.get_current().get_earthCutawayView(), this._showISSModel = z.get_current().get_showISSModel(), this._milkyWayModel = z.get_current().get_milkyWayModel(), this._minorPlanetsFilter = z.get_current().get_minorPlanetsFilter(), this._planetOrbitsFilter = z.get_current().get_planetOrbitsFilter(), this._thumbnailString = "", this._thumbnail = null, this.layers = {}, this._overlays = [], this._musicTrack = null, this._voiceTrack = null, this._eclipticGridColor = ot.get_green(), this._galacticGridColor = ot.get_cyan(), this._altAzGridColor = ot.get_magenta(), this._precessionChartColor = ot.get_orange(), this._eclipticColor = ot.get_blue(), this._equatorialGridColor = ot.get_white(), this._constellationLabelsHeight = 80, this._id = di.newGuid().toString();
      }
      Fi.create = function(t) {
        var e = new Fi();
        return e._target = t, e;
      }, Fi.getXmlText = function(t) {
        var e = new Jr();
        return e._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), t._saveToXml(e, !0), e._close(), e.body;
      }, Fi._fromXml = function(t, e) {
        try {
          var r = new Fi();
          r._owner = t, r.set_id(e.attributes.getNamedItem("Id").nodeValue), r.set_name(e.attributes.getNamedItem("Name").nodeValue), r.set_description(e.attributes.getNamedItem("Description").nodeValue), r._thumbnailString = e.attributes.getNamedItem("Thumbnail").nodeValue, r._duration = at.parseTimeSpan(e.attributes.getNamedItem("Duration").nodeValue), e.attributes.getNamedItem("Master") != null && (r._masterSlide = n.boolean(e.attributes.getNamedItem("Master").nodeValue)), e.attributes.getNamedItem("NextSlide") != null && (r._nextSlide = e.attributes.getNamedItem("NextSlide").nodeValue), e.attributes.getNamedItem("InterpolationType") != null && r.set_interpolationType(Et.parse("InterpolationType", e.attributes.getNamedItem("InterpolationType").nodeValue)), r._fadeInOverlays = !0, e.attributes.getNamedItem("FadeInOverlays") != null && (r._fadeInOverlays = n.boolean(e.attributes.getNamedItem("FadeInOverlays").nodeValue)), e.attributes.getNamedItem("Transition") != null && (r._transition = Et.parse("TransitionType", e.attributes.getNamedItem("Transition").nodeValue)), e.attributes.getNamedItem("HasLocation") != null && (r._hasLocation = n.boolean(e.attributes.getNamedItem("HasLocation").nodeValue)), r._hasLocation && (e.attributes.getNamedItem("LocationAltitude") != null && (r._locationAltitude = parseFloat(e.attributes.getNamedItem("LocationAltitude").nodeValue)), e.attributes.getNamedItem("LocationLat") != null && (r._locationLat = parseFloat(e.attributes.getNamedItem("LocationLat").nodeValue)), e.attributes.getNamedItem("LocationLng") != null && (r._locationLng = parseFloat(e.attributes.getNamedItem("LocationLng").nodeValue))), e.attributes.getNamedItem("HasTime") != null && (r._hasTime = n.boolean(e.attributes.getNamedItem("HasTime").nodeValue), r._hasTime && (e.attributes.getNamedItem("StartTime") != null && (r._startTime = n.date(e.attributes.getNamedItem("StartTime").nodeValue + " UTC")), e.attributes.getNamedItem("EndTime") != null && (r._endTime = n.date(e.attributes.getNamedItem("EndTime").nodeValue + " UTC")))), e.attributes.getNamedItem("ActualPlanetScale") != null && (r._actualPlanetScale = n.boolean(e.attributes.getNamedItem("ActualPlanetScale").nodeValue)), e.attributes.getNamedItem("ShowClouds") != null && (r._showClouds = n.boolean(e.attributes.getNamedItem("ShowClouds").nodeValue)), e.attributes.getNamedItem("ShowConstellationBoundries") != null && (r._showConstellationBoundries = n.boolean(e.attributes.getNamedItem("ShowConstellationBoundries").nodeValue)), e.attributes.getNamedItem("ShowConstellationFigures") != null && (r._showConstellationFigures = n.boolean(e.attributes.getNamedItem("ShowConstellationFigures").nodeValue)), e.attributes.getNamedItem("ShowConstellationSelection") != null && (r._showConstellationSelection = n.boolean(e.attributes.getNamedItem("ShowConstellationSelection").nodeValue)), e.attributes.getNamedItem("ShowEcliptic") != null && (r._showEcliptic = n.boolean(e.attributes.getNamedItem("ShowEcliptic").nodeValue)), e.attributes.getNamedItem("EclipticColor") != null && (r._eclipticColor = B.load(e.attributes.getNamedItem("EclipticColor").nodeValue)), e.attributes.getNamedItem("ShowElevationModel") != null && (r._showElevationModel = n.boolean(e.attributes.getNamedItem("ShowElevationModel").nodeValue)), e.attributes.getNamedItem("ShowFieldOfView") != null && (r._showFieldOfView = n.boolean(e.attributes.getNamedItem("ShowFieldOfView").nodeValue)), e.attributes.getNamedItem("ShowGrid") != null && (r._showGrid = n.boolean(e.attributes.getNamedItem("ShowGrid").nodeValue)), e.attributes.getNamedItem("ShowHorizon") != null && (r._showHorizon = n.boolean(e.attributes.getNamedItem("ShowHorizon").nodeValue)), e.attributes.getNamedItem("ShowHorizonPanorama") != null && (r._showHorizonPanorama = n.boolean(e.attributes.getNamedItem("ShowHorizonPanorama").nodeValue)), e.attributes.getNamedItem("ShowMoonsAsPointSource") != null && (r._showMoonsAsPointSource = n.boolean(e.attributes.getNamedItem("ShowMoonsAsPointSource").nodeValue)), e.attributes.getNamedItem("ShowSolarSystem") != null && (r._showSolarSystem = n.boolean(e.attributes.getNamedItem("ShowSolarSystem").nodeValue)), e.attributes.getNamedItem("FovTelescope") != null && (r._fovTelescope = parseInt(e.attributes.getNamedItem("FovTelescope").nodeValue)), e.attributes.getNamedItem("FovEyepiece") != null && (r._fovEyepiece = parseInt(e.attributes.getNamedItem("FovEyepiece").nodeValue)), e.attributes.getNamedItem("FovCamera") != null && (r._fovCamera = parseInt(e.attributes.getNamedItem("FovCamera").nodeValue)), e.attributes.getNamedItem("LocalHorizonMode") != null && (r._localHorizonMode = n.boolean(e.attributes.getNamedItem("LocalHorizonMode").nodeValue)), e.attributes.getNamedItem("GalacticMode") != null && (r._galacticMode = n.boolean(e.attributes.getNamedItem("GalacticMode").nodeValue)), e.attributes.getNamedItem("SolarSystemStars") != null && (r._solarSystemStars = n.boolean(e.attributes.getNamedItem("SolarSystemStars").nodeValue)), e.attributes.getNamedItem("SolarSystemMilkyWay") != null && (r._solarSystemMilkyWay = n.boolean(e.attributes.getNamedItem("SolarSystemMilkyWay").nodeValue)), e.attributes.getNamedItem("SolarSystemCosmos") != null && (r._solarSystemCosmos = n.boolean(e.attributes.getNamedItem("SolarSystemCosmos").nodeValue)), e.attributes.getNamedItem("SolarSystemOrbits") != null && (r._solarSystemOrbits = n.boolean(e.attributes.getNamedItem("SolarSystemOrbits").nodeValue)), e.attributes.getNamedItem("SolarSystemOverlays") != null && (r._solarSystemOverlays = n.boolean(e.attributes.getNamedItem("SolarSystemOverlays").nodeValue)), e.attributes.getNamedItem("SolarSystemLighting") != null && (r._solarSystemLighting = n.boolean(e.attributes.getNamedItem("SolarSystemLighting").nodeValue)), e.attributes.getNamedItem("SolarSystemScale") != null && (r._solarSystemScale = parseInt(e.attributes.getNamedItem("SolarSystemScale").nodeValue)), e.attributes.getNamedItem("SolarSystemMultiRes") != null && (r._solarSystemMultiRes = n.boolean(e.attributes.getNamedItem("SolarSystemMultiRes").nodeValue)), e.attributes.getNamedItem("ShowEquatorialGridText") != null && (r._showEquatorialGridText = n.boolean(e.attributes.getNamedItem("ShowEquatorialGridText").nodeValue)), e.attributes.getNamedItem("EquatorialGridColor") != null && (r._equatorialGridColor = B.load(e.attributes.getNamedItem("EquatorialGridColor").nodeValue)), e.attributes.getNamedItem("ShowGalacticGrid") != null && (r._showGalacticGrid = n.boolean(e.attributes.getNamedItem("ShowGalacticGrid").nodeValue)), e.attributes.getNamedItem("ShowGalacticGridText") != null && (r._showGalacticGridText = n.boolean(e.attributes.getNamedItem("ShowGalacticGridText").nodeValue)), e.attributes.getNamedItem("GalacticGridColor") != null && (r._galacticGridColor = B.load(e.attributes.getNamedItem("GalacticGridColor").nodeValue)), e.attributes.getNamedItem("ShowEclipticGrid") != null && (r._showEclipticGrid = n.boolean(e.attributes.getNamedItem("ShowEclipticGrid").nodeValue)), e.attributes.getNamedItem("ShowEclipticGridText") != null && (r._showEclipticGridText = n.boolean(e.attributes.getNamedItem("ShowEclipticGridText").nodeValue)), e.attributes.getNamedItem("EclipticGridColor") != null && (r._eclipticGridColor = B.load(e.attributes.getNamedItem("EclipticGridColor").nodeValue)), e.attributes.getNamedItem("ShowEclipticOverviewText") != null && (r._showEclipticOverviewText = n.boolean(e.attributes.getNamedItem("ShowEclipticOverviewText").nodeValue)), e.attributes.getNamedItem("ShowAltAzGrid") != null && (r._showAltAzGrid = n.boolean(e.attributes.getNamedItem("ShowAltAzGrid").nodeValue)), e.attributes.getNamedItem("ShowAltAzGridText") != null && (r._showAltAzGridText = n.boolean(e.attributes.getNamedItem("ShowAltAzGridText").nodeValue)), e.attributes.getNamedItem("AltAzGridColor") != null && (r._altAzGridColor = B.load(e.attributes.getNamedItem("AltAzGridColor").nodeValue)), e.attributes.getNamedItem("ShowPrecessionChart") != null && (r._showPrecessionChart = n.boolean(e.attributes.getNamedItem("ShowPrecessionChart").nodeValue)), e.attributes.getNamedItem("PrecessionChartColor") != null && (r._precessionChartColor = B.load(e.attributes.getNamedItem("PrecessionChartColor").nodeValue)), e.attributes.getNamedItem("ShowConstellationPictures") != null && (r._showConstellationPictures = n.boolean(e.attributes.getNamedItem("ShowConstellationPictures").nodeValue)), e.attributes.getNamedItem("ShowConstellationLabels") != null && (r._showConstellationLabels = n.boolean(e.attributes.getNamedItem("ShowConstellationLabels").nodeValue)), e.attributes.getNamedItem("SolarSystemCMB") != null && (r._solarSystemCMB = n.boolean(e.attributes.getNamedItem("SolarSystemCMB").nodeValue)), e.attributes.getNamedItem("SolarSystemMinorPlanets") != null && (r._solarSystemMinorPlanets = n.boolean(e.attributes.getNamedItem("SolarSystemMinorPlanets").nodeValue)), e.attributes.getNamedItem("SolarSystemPlanets") != null && (r._solarSystemPlanets = n.boolean(e.attributes.getNamedItem("SolarSystemPlanets").nodeValue)), e.attributes.getNamedItem("ShowEarthSky") != null && (r._showEarthSky = n.boolean(e.attributes.getNamedItem("ShowEarthSky").nodeValue)), e.attributes.getNamedItem("SolarSystemMinorOrbits") != null && (r._solarSystemMinorOrbits = n.boolean(e.attributes.getNamedItem("SolarSystemMinorOrbits").nodeValue)), e.attributes.getNamedItem("ShowSkyOverlays") != null ? r._showSkyOverlays = n.boolean(e.attributes.getNamedItem("ShowSkyOverlays").nodeValue) : r._showSkyOverlays = !0, e.attributes.getNamedItem("ShowConstellations") != null ? r._showConstellations = n.boolean(e.attributes.getNamedItem("ShowConstellations").nodeValue) : r._showConstellations = !0, e.attributes.getNamedItem("ShowSkyNode") != null ? r._showSkyNode = n.boolean(e.attributes.getNamedItem("ShowSkyNode").nodeValue) : r._showSkyNode = !0, e.attributes.getNamedItem("ShowSkyGrids") != null ? r._showSkyGrids = n.boolean(e.attributes.getNamedItem("ShowSkyGrids").nodeValue) : r._showSkyGrids = !0, e.attributes.getNamedItem("ShowSkyOverlaysIn3d") != null && (r._showSkyOverlaysIn3d = n.boolean(e.attributes.getNamedItem("ShowSkyOverlaysIn3d").nodeValue)), e.attributes.getNamedItem("EarthCutawayView") != null && (r._earthCutawayView = n.boolean(e.attributes.getNamedItem("EarthCutawayView").nodeValue)), e.attributes.getNamedItem("ShowISSModel") != null && (r._showISSModel = n.boolean(e.attributes.getNamedItem("ShowISSModel").nodeValue)), e.attributes.getNamedItem("MilkyWayModel") != null && (r._milkyWayModel = n.boolean(e.attributes.getNamedItem("MilkyWayModel").nodeValue)), e.attributes.getNamedItem("ConstellationBoundariesFilter") != null ? r._constellationBoundariesFilter = Ut.parse(e.attributes.getNamedItem("ConstellationBoundariesFilter").nodeValue) : r._constellationBoundariesFilter = Ut.get_allConstellation(), e.attributes.getNamedItem("ConstellationBoundariesFilter") != null ? r._constellationFiguresFilter = Ut.parse(e.attributes.getNamedItem("ConstellationBoundariesFilter").nodeValue) : r._constellationFiguresFilter = new Ut(), e.attributes.getNamedItem("ConstellationNamesFilter") != null ? r._constellationNamesFilter = Ut.parse(e.attributes.getNamedItem("ConstellationNamesFilter").nodeValue) : r._constellationNamesFilter = new Ut(), e.attributes.getNamedItem("ConstellationArtFilter") != null ? r._constellationArtFilter = Ut.parse(e.attributes.getNamedItem("ConstellationArtFilter").nodeValue) : r._constellationArtFilter = new Ut(), e.attributes.getNamedItem("MinorPlanetsFilter") != null && (r._minorPlanetsFilter = parseInt(e.attributes.getNamedItem("MinorPlanetsFilter").nodeValue)), e.attributes.getNamedItem("PlanetOrbitsFilter") != null && (r._planetOrbitsFilter = parseInt(e.attributes.getNamedItem("PlanetOrbitsFilter").nodeValue));
          var a = at.selectSingleNode(e, "Place");
          r._target = Li._fromXml(a);
          var s = at.selectSingleNode(e, "EndTarget");
          s != null && (r._endTarget = Li._fromXml(s));
          for (var l = at.selectSingleNode(e, "Overlays"), h = n.enumerate(l.childNodes); h.moveNext(); ) {
            var u = h.current;
            u.nodeName === "Overlay" && r.addOverlay(xe._fromXml(r, u));
          }
          var _ = at.selectSingleNode(e, "MusicTrack");
          _ != null && (r._musicTrack = xe._fromXml(r, at.selectSingleNode(_, "Overlay")));
          var m = at.selectSingleNode(e, "VoiceTrack");
          m != null && (r._voiceTrack = xe._fromXml(r, at.selectSingleNode(m, "Overlay")));
          var p = at.selectSingleNode(e, "VisibleLayers");
          return p != null && r._loadLayerList(p), r._thumbnail = t.getCachedTexture(n.format("{0}.thumb.png", r._id), function() {
            var b = 0;
          }), r;
        } catch (b) {
          return V.scriptInterface._fireTourError(b), null;
        }
      };
      var ic = {
        get_keyFramed: function() {
          return this._keyFramed;
        },
        get_tourStopType: function() {
          return this._target.get_backgroundImageset() != null ? this._target.get_backgroundImageset().get_dataSetType() : this._tourStopType;
        },
        set_tourStopType: function(t) {
          return this._target.get_backgroundImageset() != null && this._target.get_backgroundImageset().get_dataSetType() !== t && this._target.set_backgroundImageset(null), this._tourStopType = t, t;
        },
        get_tweenPosition: function() {
          return this._tweenPosition;
        },
        set_tweenPosition: function(t) {
          return this._tweenPosition !== t && (this._tweenPosition = Math.max(0, Math.min(1, t)), this.updateTweenPosition()), t;
        },
        updateTweenPosition: function() {
          this.get_keyFramed();
        },
        copy: function() {
          var t = new Jr();
          t._writeProcessingInstruction("xml", "version='1.0' encoding='UTF-8'"), this._saveToXml(t, !0);
          try {
            var e = new DOMParser(), r = e.parseFromString(t.body, "text/xml"), a = at.selectSingleNode(r, "TourStop"), s = Fi._fromXml(this.get_owner(), a);
            return s.set_id(di.newGuid().toString()), s;
          } catch {
          }
          return null;
        },
        get_owner: function() {
          return this._owner;
        },
        set_owner: function(t) {
          return this._owner = t, t;
        },
        get__transition: function() {
          return this._transition;
        },
        set__transition: function(t) {
          return this._transition !== t && (this._transition = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get__transitionTime: function() {
          return this._transitionTime;
        },
        set__transitionTime: function(t) {
          return this._transitionTime !== t && (this._transitionTime = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get__transitionHoldTime: function() {
          return this._transitionHoldTime;
        },
        set__transitionHoldTime: function(t) {
          return this._transitionHoldTime !== t && (this._transitionHoldTime = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get__transitionOutTime: function() {
          return this._transitionOutTime;
        },
        set__transitionOutTime: function(t) {
          return this._transitionOutTime !== t && (this._transitionOutTime = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get_nextSlide: function() {
          return this._nextSlide;
        },
        set_nextSlide: function(t) {
          return this._nextSlide = t, t;
        },
        get_isLinked: function() {
          return !(this._nextSlide == null || this._nextSlide === "Next" || !this._nextSlide);
        },
        get_fadeInOverlays: function() {
          return this._fadeInOverlays;
        },
        set_fadeInOverlays: function(t) {
          return this._fadeInOverlays = t, t;
        },
        get_masterSlide: function() {
          return this._masterSlide;
        },
        set_masterSlide: function(t) {
          return this._masterSlide !== t && (this._masterSlide = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get_id: function() {
          return this._id;
        },
        set_id: function(t) {
          return this._id = t, this._owner != null && this._owner.set_tourDirty(!0), t;
        },
        toString: function() {
          return this._target != null ? this.get_target().get_name() : this._description;
        },
        get_description: function() {
          return this._description;
        },
        set_description: function(t) {
          return this._description !== t && (this._description = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get_name: function() {
          return this._target != null ? this._target.get_name() : this._name;
        },
        set_name: function(t) {
          return this._name !== t && (this._name = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get_duration: function() {
          return this._duration;
        },
        set_duration: function(t) {
          return this._duration !== t && (this._duration = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get_target: function() {
          return this._target;
        },
        set_target: function(t) {
          return this._target !== t && (this._target = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get_endTarget: function() {
          return this._endTarget;
        },
        set_endTarget: function(t) {
          return this._endTarget !== t && (this._endTarget = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get_interpolationType: function() {
          return this._interpolationType;
        },
        set_interpolationType: function(t) {
          return this._interpolationType = t, t;
        },
        get_hasLocation: function() {
          return this._hasTime;
        },
        set_hasLocation: function(t) {
          return this._hasLocation !== t && (this._hasLocation = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get_hasTime: function() {
          return this._hasTime;
        },
        set_hasTime: function(t) {
          return this._hasTime !== t && (this._hasTime = this._hasLocation = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get_startTime: function() {
          return this._startTime;
        },
        set_startTime: function(t) {
          return this._startTime = t, n.compareDates(this._startTime, t) || (this._startTime = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get_endTime: function() {
          return this._endTime;
        },
        set_endTime: function(t) {
          return n.compareDates(this._endTime, t) || (this._endTime = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        captureSettings: function() {
          this._startTime = Z.get_now(), this._actualPlanetScale = z.get_current().get_actualPlanetScale(), this._locationAltitude = z.get_current().get_locationAltitude(), this._locationLat = z.get_current().get_locationLat(), this._locationLng = z.get_current().get_locationLng(), this._showClouds = z.get_current().get_showClouds(), this._showConstellationBoundries = z.get_current().get_showConstellationBoundries(), this._showConstellationFigures = z.get_current().get_showConstellationFigures(), this._showConstellationSelection = z.get_current().get_showConstellationSelection(), this._showEcliptic = z.get_current().get_showEcliptic(), this._showElevationModel = z.get_current().get_showElevationModel(), this._showFieldOfView = z.get_current().get_showFieldOfView(), this._showGrid = z.get_current().get_showGrid(), this._showHorizon = z.get_current().get_showHorizon(), this._showHorizonPanorama = z.get_current().get_showHorizonPanorama(), this._showMoonsAsPointSource = z.get_current().get_showMoonsAsPointSource(), this._showSolarSystem = z.get_current().get_showSolarSystem(), this._fovTelescope = z.get_current().get_fovTelescope(), this._fovEyepiece = z.get_current().get_fovEyepiece(), this._fovCamera = z.get_current().get_fovCamera(), this._localHorizonMode = z.get_current().get_localHorizonMode(), this._galacticMode = z.get_current().get_galacticMode(), this._solarSystemStars = z.get_current().get_solarSystemStars(), this._solarSystemMilkyWay = z.get_current().get_solarSystemMilkyWay(), this._solarSystemCosmos = z.get_current().get_solarSystemCosmos(), this._solarSystemOrbits = z.get_current().get_solarSystemOrbits(), this._solarSystemOverlays = z.get_current().get_solarSystemOverlays(), this._solarSystemLighting = z.get_current().get_solarSystemLighting(), this._solarSystemScale = z.get_current().get_solarSystemScale(), this._solarSystemMultiRes = z.get_current().get_solarSystemMultiRes(), this._showEquatorialGridText = z.get_current().get_showEquatorialGridText(), this._showGalacticGrid = z.get_current().get_showGalacticGrid(), this._showGalacticGridText = z.get_current().get_showGalacticGridText(), this._showEclipticGrid = z.get_current().get_showEclipticGrid(), this._showEclipticGridText = z.get_current().get_showEclipticGridText(), this._showEclipticOverviewText = z.get_current().get_showEclipticOverviewText(), this._showAltAzGrid = z.get_current().get_showAltAzGrid(), this._showAltAzGridText = z.get_current().get_showAltAzGridText(), this._showPrecessionChart = z.get_current().get_showPrecessionChart(), this._showConstellationPictures = z.get_current().get_showConstellationPictures(), this._showConstellationLabels = z.get_current().get_showConstellationLabels(), this._solarSystemCMB = z.get_current().get_solarSystemCMB(), this._solarSystemMinorPlanets = z.get_current().get_solarSystemMinorPlanets(), this._solarSystemPlanets = z.get_current().get_solarSystemPlanets(), this._showEarthSky = z.get_current().get_showEarthSky(), this._solarSystemMinorOrbits = z.get_current().get_solarSystemMinorOrbits(), this._constellationFiguresFilter = z.get_current().get_constellationFiguresFilter().clone(), this._constellationBoundariesFilter = z.get_current().get_constellationBoundariesFilter().clone(), this._constellationNamesFilter = z.get_current().get_constellationNamesFilter().clone(), this._constellationArtFilter = z.get_current().get_constellationArtFilter().clone(), this._showSkyOverlays = z.get_current().get_showSkyOverlays(), this._showConstellations = z.get_current().get_showConstellations(), this._showSkyNode = z.get_current().get_showSkyNode(), this._showSkyGrids = z.get_current().get_showSkyGrids(), this._showSkyOverlaysIn3d = z.get_current().get_showSkyOverlaysIn3d(), this._earthCutawayView = z.get_current().get_earthCutawayView(), this._showISSModel = z.get_current().get_showISSModel(), this._milkyWayModel = z.get_current().get_milkyWayModel(), this._minorPlanetsFilter = z.get_current().get_minorPlanetsFilter(), this._planetOrbitsFilter = z.get_current().get_planetOrbitsFilter();
        },
        syncSettings: function() {
          z.get_globalSettings().set_actualPlanetScale(this._actualPlanetScale), z.get_globalSettings().set_locationAltitude(this._locationAltitude), z.get_globalSettings().set_locationLat(this._locationLat), z.get_globalSettings().set_locationLng(this._locationLng), z.get_globalSettings().set_earthCutawayView(this._earthCutawayView), z.get_globalSettings().set_showConstellationBoundries(this._showConstellationBoundries), z.get_globalSettings().set_showConstellationFigures(this._showConstellationFigures), z.get_globalSettings().set_showConstellationSelection(this._showConstellationSelection), z.get_globalSettings().set_showEcliptic(this._showEcliptic), z.get_globalSettings().set_showElevationModel(this._showElevationModel), z.get_globalSettings().set_showGrid(this._showGrid), z.get_globalSettings().set_showHorizon(this._showHorizon), z.get_globalSettings().set_showSolarSystem(this._showSolarSystem), z.get_globalSettings().set_localHorizonMode(this._localHorizonMode), z.get_globalSettings().set_galacticMode(this._galacticMode), z.get_globalSettings().set_solarSystemStars(this._solarSystemStars), z.get_globalSettings().set_solarSystemMilkyWay(this._solarSystemMilkyWay), z.get_globalSettings().set_solarSystemCosmos(this._solarSystemCosmos), z.get_globalSettings().set_solarSystemCMB(this._solarSystemCMB), z.get_globalSettings().set_solarSystemOrbits(this._solarSystemOrbits), z.get_globalSettings().set_solarSystemMinorOrbits(this._solarSystemMinorOrbits), z.get_globalSettings().set_solarSystemMinorPlanets(this._solarSystemMinorPlanets), z.get_globalSettings().set_solarSystemOverlays(this._solarSystemOverlays), z.get_globalSettings().set_solarSystemLighting(this._solarSystemLighting), z.get_globalSettings().set_showISSModel(this._showISSModel), z.get_globalSettings().set_solarSystemScale(this._solarSystemScale), z.get_globalSettings().set_solarSystemMultiRes(this._solarSystemMultiRes), z.get_globalSettings().set_showEarthSky(this._showEarthSky), z.get_globalSettings().set_minorPlanetsFilter(this._minorPlanetsFilter), z.get_globalSettings().set_planetOrbitsFilter(this._planetOrbitsFilter), z.get_globalSettings().set_showEquatorialGridText(this._showEquatorialGridText), z.get_globalSettings().set_showGalacticGrid(this._showGalacticGrid), z.get_globalSettings().set_showGalacticGridText(this._showGalacticGridText), z.get_globalSettings().set_showEclipticGrid(this._showEclipticGrid), z.get_globalSettings().set_showEclipticGridText(this._showEclipticGridText), z.get_globalSettings().set_showEclipticOverviewText(this._showEclipticOverviewText), z.get_globalSettings().set_showAltAzGrid(this._showAltAzGrid), z.get_globalSettings().set_showAltAzGridText(this._showAltAzGridText), z.get_globalSettings().set_showPrecessionChart(this._showPrecessionChart), z.get_globalSettings().set_showConstellationPictures(this._showConstellationPictures), z.get_globalSettings().set_constellationsEnabled(this._constellationsEnabled), z.get_globalSettings().set_showSkyOverlays(this._showSkyOverlays), z.get_globalSettings().set_constellations(this._showConstellations), z.get_globalSettings().set_showSkyNode(this._showSkyNode), z.get_globalSettings().set_showSkyGrids(this._showSkyGrids), z.get_globalSettings().set_constellationFiguresFilter(this._constellationFiguresFilter.clone()), z.get_globalSettings().set_constellationBoundariesFilter(this._constellationBoundariesFilter.clone()), z.get_globalSettings().set_constellationNamesFilter(this._constellationNamesFilter.clone()), z.get_globalSettings().set_constellationArtFilter(this._constellationArtFilter.clone());
        },
        get_solarSystemStars: function() {
          return this._solarSystemStars;
        },
        get_solarSystemMultiRes: function() {
          return this._solarSystemMultiRes;
        },
        get_solarSystemMilkyWay: function() {
          return this._solarSystemMilkyWay;
        },
        get_solarSystemCosmos: function() {
          return this._solarSystemCosmos;
        },
        get_solarSystemOrbits: function() {
          return this._solarSystemOrbits;
        },
        get_solarSystemOverlays: function() {
          return this._solarSystemOverlays;
        },
        get_solarSystemLighting: function() {
          return this._solarSystemLighting;
        },
        get_solarSystemScale: function() {
          return this._solarSystemScale;
        },
        get_actualPlanetScale: function() {
          return this._actualPlanetScale;
        },
        get_fovCamera: function() {
          return this._fovCamera;
        },
        get_fovEyepiece: function() {
          return this._fovEyepiece;
        },
        get_fovTelescope: function() {
          return this._fovTelescope;
        },
        get_locationAltitude: function() {
          return this._hasLocation ? this._locationAltitude : z.get_current().get_locationAltitude();
        },
        get_locationLat: function() {
          return this._hasLocation ? this._locationLat : z.get_current().get_locationLat();
        },
        get_locationLng: function() {
          return this._hasLocation ? this._locationLng : z.get_current().get_locationLng();
        },
        get_showClouds: function() {
          return this._showClouds;
        },
        get_showConstellationBoundries: function() {
          return this._showConstellationBoundries;
        },
        get_showConstellationFigures: function() {
          return this._showConstellationFigures;
        },
        get_showConstellationSelection: function() {
          return this._showConstellationSelection;
        },
        get_showEcliptic: function() {
          return this._showEcliptic;
        },
        get_showElevationModel: function() {
          return this._showElevationModel;
        },
        get_showFieldOfView: function() {
          return this._showFieldOfView;
        },
        get_showGrid: function() {
          return this._showGrid;
        },
        get_showHorizon: function() {
          return this._showHorizon;
        },
        get_showHorizonPanorama: function() {
          return this._showHorizonPanorama;
        },
        get_showMoonsAsPointSource: function() {
          return this._showMoonsAsPointSource;
        },
        get_showSolarSystem: function() {
          return this._showSolarSystem;
        },
        get_localHorizonMode: function() {
          return this._localHorizonMode;
        },
        get_galacticMode: function() {
          return this._galacticMode;
        },
        get_thumbnail: function() {
          return this._target != null && this._thumbnail == null ? null : this._thumbnail;
        },
        set_thumbnail: function(t) {
          return this._thumbnail = t, this._owner != null && this._owner.set_tourDirty(!0), t;
        },
        get_overlays: function() {
          return this._overlays;
        },
        get_musicTrack: function() {
          return this._musicTrack;
        },
        set_musicTrack: function(t) {
          return this._musicTrack !== t && (this._musicTrack = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        get_voiceTrack: function() {
          return this._voiceTrack;
        },
        set_voiceTrack: function(t) {
          return this._voiceTrack !== t && (this._voiceTrack = t, this._owner != null && this._owner.set_tourDirty(!0)), t;
        },
        addOverlay: function(t) {
          t != null && (t.set_owner(this), this._overlays.push(t), this._owner != null && this._owner.set_tourDirty(!0));
        },
        removeOverlay: function(t) {
          n.remove(this._overlays, t), this._owner != null && this._owner.set_tourDirty(!0);
        },
        cleanUp: function() {
          for (var t = n.enumerate(this.get_overlays()); t.moveNext(); ) {
            var e = t.current;
            e.cleanUp();
          }
          this._voiceTrack != null && this._voiceTrack.cleanUp(), this._musicTrack != null && this._musicTrack.cleanUp();
        },
        sendToBack: function(t) {
          n.remove(this._overlays, t), this._overlays.splice(0, 0, t), this._owner != null && this._owner.set_tourDirty(!0);
        },
        bringToFront: function(t) {
          n.remove(this._overlays, t), this._overlays.push(t), this._owner != null && this._owner.set_tourDirty(!0);
        },
        bringForward: function(t) {
          var e = this._overlays.indexOf(t);
          e < this._overlays.length - 1 && (n.remove(this._overlays, t), this._overlays.splice(e + 1, 0, t)), this._owner != null && this._owner.set_tourDirty(!0);
        },
        sendBackward: function(t) {
          var e = this._overlays.indexOf(t);
          e > 0 && (n.remove(this._overlays, t), this._overlays.splice(e - 1, 0, t)), this._owner != null && this._owner.set_tourDirty(!0);
        },
        getNextOverlay: function(t) {
          if (t == null)
            return this._overlays.length > 0 ? this._overlays[0] : null;
          var e = this._overlays.indexOf(t);
          return e < this._overlays.length - 1 ? this._overlays[e + 1] : this._overlays[0];
        },
        getPerviousOverlay: function(t) {
          if (t == null)
            return this._overlays.length > 0 ? this._overlays[0] : null;
          var e = this._overlays.indexOf(t);
          return e > 0 ? this._overlays[e - 1] : this._overlays[this._overlays.length - 1];
        },
        getOverlayById: function(t) {
          for (var e = n.enumerate(this._overlays); e.moveNext(); ) {
            var r = e.current;
            if (r.id === t)
              return r;
          }
          return null;
        },
        get_tourStopThumbnailFilename: function() {
          return n.format("{0}.thumb.png", this._id);
        },
        _saveToXml: function(t, e) {
          e && this._thumbnail != null, t._writeStartElement("TourStop"), t._writeAttributeString("Id", this._id), t._writeAttributeString("Name", this._name), t._writeAttributeString("Description", this._description), t._writeAttributeString("Thumbnail", this._thumbnailString), t._writeAttributeString("Duration", at.xmlDuration(this._duration)), t._writeAttributeString("Master", this._masterSlide.toString()), t._writeAttributeString("TransitionType", Et.toXml("TransitionType", this._transition)), t._writeAttributeString("TransitionTime", this._transitionTime.toString()), t._writeAttributeString("TransitionOutTime", this._transitionOutTime.toString()), t._writeAttributeString("TransitionHoldTime", this._transitionHoldTime.toString()), t._writeAttributeString("NextSlide", this._nextSlide), t._writeAttributeString("InterpolationType", Et.toXml("InterpolationType", this._interpolationType)), t._writeAttributeString("HasLocation", this._hasLocation.toString()), this._hasLocation && (t._writeAttributeString("LocationAltitude", this._locationAltitude.toString()), t._writeAttributeString("LocationLat", this._locationLat.toString()), t._writeAttributeString("LocationLng", this._locationLng.toString())), t._writeAttributeString("HasTime", this._hasTime.toString()), this._hasTime && (t._writeAttributeString("StartTime", at.xmlDate(this._startTime)), t._writeAttributeString("EndTime", at.xmlDate(this._endTime))), t._writeAttributeString("ActualPlanetScale", this._actualPlanetScale.toString()), t._writeAttributeString("ShowClouds", this._showClouds.toString()), t._writeAttributeString("EarthCutawayView", this._earthCutawayView.toString()), t._writeAttributeString("ShowConstellationBoundries", this._showConstellationBoundries.toString()), t._writeAttributeString("ShowConstellationFigures", this._showConstellationFigures.toString()), t._writeAttributeString("ShowConstellationSelection", this._showConstellationSelection.toString()), t._writeAttributeString("ShowEcliptic", this._showEcliptic.toString()), t._writeAttributeString("EclipticColor", this._eclipticColor.save()), t._writeAttributeString("ShowElevationModel", this._showElevationModel.toString()), this._showFieldOfView = !1, t._writeAttributeString("ShowFieldOfView", this._showFieldOfView.toString()), t._writeAttributeString("ShowGrid", this._showGrid.toString()), t._writeAttributeString("ShowHorizon", this._showHorizon.toString()), t._writeAttributeString("ShowHorizonPanorama", this._showHorizonPanorama.toString()), t._writeAttributeString("ShowMoonsAsPointSource", this._showMoonsAsPointSource.toString()), t._writeAttributeString("ShowSolarSystem", this._showSolarSystem.toString()), t._writeAttributeString("FovTelescope", this._fovTelescope.toString()), t._writeAttributeString("FovEyepiece", this._fovEyepiece.toString()), t._writeAttributeString("FovCamera", this._fovCamera.toString()), t._writeAttributeString("LocalHorizonMode", this._localHorizonMode.toString()), t._writeAttributeString("GalacticMode", this._galacticMode.toString()), t._writeAttributeString("FadeInOverlays", this._fadeInOverlays.toString()), t._writeAttributeString("SolarSystemStars", this._solarSystemStars.toString()), t._writeAttributeString("SolarSystemMilkyWay", this._solarSystemMilkyWay.toString()), t._writeAttributeString("SolarSystemCosmos", this._solarSystemCosmos.toString()), t._writeAttributeString("SolarSystemCMB", this._solarSystemCMB.toString()), t._writeAttributeString("SolarSystemOrbits", this._solarSystemOrbits.toString()), t._writeAttributeString("SolarSystemMinorOrbits", this._solarSystemMinorOrbits.toString()), t._writeAttributeString("SolarSystemOverlays", this._solarSystemOverlays.toString()), t._writeAttributeString("SolarSystemLighting", this._solarSystemLighting.toString()), t._writeAttributeString("ShowISSModel", this._showISSModel.toString()), t._writeAttributeString("SolarSystemScale", this._solarSystemScale.toString()), t._writeAttributeString("MinorPlanetsFilter", this._minorPlanetsFilter.toString()), t._writeAttributeString("PlanetOrbitsFilter", this._planetOrbitsFilter.toString()), t._writeAttributeString("SolarSystemMultiRes", this._solarSystemMultiRes.toString()), t._writeAttributeString("SolarSystemMinorPlanets", this._solarSystemMinorPlanets.toString()), t._writeAttributeString("SolarSystemPlanets", this._solarSystemPlanets.toString()), t._writeAttributeString("ShowEarthSky", this._showEarthSky.toString()), t._writeAttributeString("ShowEquatorialGridText", this.get_showEquatorialGridText().toString()), t._writeAttributeString("EquatorialGridColor", this.get_equatorialGridColor().save()), t._writeAttributeString("ShowGalacticGrid", this.get_showGalacticGrid().toString()), t._writeAttributeString("ShowGalacticGridText", this.get_showGalacticGridText().toString()), t._writeAttributeString("GalacticGridColor", this.get_galacticGridColor().save()), t._writeAttributeString("ShowEclipticGrid", this.get_showEclipticGrid().toString()), t._writeAttributeString("ShowEclipticGridText", this.get_showEclipticGridText().toString()), t._writeAttributeString("EclipticGridColor", this.get_eclipticGridColor().save()), t._writeAttributeString("ShowEclipticOverviewText", this.get_showEclipticOverviewText().toString()), t._writeAttributeString("ShowAltAzGrid", this.get_showAltAzGrid().toString()), t._writeAttributeString("ShowAltAzGridText", this.get_showAltAzGridText().toString()), t._writeAttributeString("AltAzGridColor", this.get_altAzGridColor().save()), t._writeAttributeString("ShowPrecessionChart", this.get_showPrecessionChart().toString()), t._writeAttributeString("PrecessionChartColor", this.get_precessionChartColor().save()), t._writeAttributeString("ConstellationPictures", this.get_showConstellationPictures().toString()), t._writeAttributeString("ConstellationsEnabled", this.get_constellationsEnabled()), t._writeAttributeString("ShowConstellationLabels", this.get_showConstellationLabels().toString()), t._writeAttributeString("ShowSkyOverlays", this.get_showSkyOverlays().toString()), t._writeAttributeString("ShowConstellations", this.get_showConstellations().toString()), t._writeAttributeString("ShowSkyNode", this.get_showSkyNode().toString()), t._writeAttributeString("ShowSkyGrids", this.get_showSkyGrids().toString()), t._writeAttributeString("SkyOverlaysIn3d", this.get_showSkyOverlaysIn3d().toString()), t._writeAttributeString("ConstellationFiguresFilter", this._constellationFiguresFilter.toString()), t._writeAttributeString("ConstellationBoundariesFilter", this._constellationBoundariesFilter.toString()), t._writeAttributeString("ConstellationNamesFilter", this._constellationNamesFilter.toString()), t._writeAttributeString("ConstellationArtFilter", this._constellationArtFilter.toString()), this._target._saveToXml(t, "Place"), this._endTarget != null && this._endTarget._saveToXml(t, "EndTarget"), t._writeStartElement("Overlays");
          for (var r = n.enumerate(this._overlays); r.moveNext(); ) {
            var a = r.current;
            a.saveToXml(t, !1);
          }
          t._writeEndElement(), this._musicTrack != null && (t._writeStartElement("MusicTrack"), this._musicTrack.saveToXml(t, !1), t._writeEndElement()), this._voiceTrack != null && (t._writeStartElement("VoiceTrack"), this._voiceTrack.saveToXml(t, !1), t._writeEndElement()), this._writeLayerList(t), t._writeEndElement();
        },
        _writeLayerList: function(t) {
          if (n.keyCount(this.layers) > 0) {
            t._writeStartElement("VisibleLayers");
            for (var e = n.enumerate(n.keys(this.layers)); e.moveNext(); ) {
              var r = e.current, a = this.layers[r];
              t._writeStartElement("Layer"), t._writeAttributeString("StartOpacity", a.startOpacity.toString()), t._writeAttributeString("EndOpacity", a.endOpacity.toString());
              var s = a.startParams.length;
              t._writeAttributeString("ParamCount", s.toString());
              for (var l = 0; l < s; l++)
                t._writeAttributeString(n.format("StartParam{0}", l), a.startParams[l].toString()), t._writeAttributeString(n.format("EndParam{0}", l), a.endParams[l].toString());
              t._writeValue(a.id.toString()), t._writeEndElement();
            }
            t._writeEndElement();
          }
        },
        _addFilesToCabinet: function(t, e) {
          if (this._thumbnail != null) {
            var r = n.format("{0}.thumb.png", this._id), a = this._owner.getFileBlob(r);
            t.addFile(this._owner.get_workingDirectory() + r, a);
          }
          e || (this._musicTrack != null && this._musicTrack.addFilesToCabinet(t), this._voiceTrack != null && this._voiceTrack.addFilesToCabinet(t));
          for (var s = n.enumerate(this._overlays); s.moveNext(); ) {
            var l = s.current;
            l.addFilesToCabinet(t);
          }
        },
        getNextDefaultName: function(t) {
          for (var e = 1, r = n.enumerate(this._overlays); r.moveNext(); ) {
            var a = r.current;
            if (n.startsWith(a.get_name(), t)) {
              var s = 0;
              try {
                s = parseInt(a.get_name().substr(t.length));
              } catch {
              }
              s >= e && (e = s + 1);
            }
          }
          return n.format("{0} {1}", t, e);
        },
        _loadLayerList: function(t) {
          for (var e = n.enumerate(t.childNodes); e.moveNext(); ) {
            var r = e.current;
            if (r.nodeName === "Layer") {
              var a = new za(), s = r.innerHTML;
              a.id = di.fromString(s), a.startOpacity = parseFloat(r.attributes.getNamedItem("StartOpacity").nodeValue), a.endOpacity = parseFloat(r.attributes.getNamedItem("EndOpacity").nodeValue);
              var l = 0;
              r.attributes.getNamedItem("ParamCount") != null && (l = parseInt(r.attributes.getNamedItem("ParamCount").nodeValue)), a.startParams = new Array(l), a.endParams = new Array(l), a.frameParams = new Array(l);
              for (var h = 0; h < l; h++)
                a.startParams[h] = parseFloat(r.attributes.getNamedItem(n.format("StartParam{0}", h)).nodeValue), a.endParams[h] = parseFloat(r.attributes.getNamedItem(n.format("EndParam{0}", h)).nodeValue), a.frameParams[h] = a.startParams[h];
              this.layers[a.id] = a;
            }
          }
        },
        _updateLayerOpacity: function() {
          this.get_keyFramed() && this.updateTweenPosition();
        },
        get_showEquatorialGridText: function() {
          return this._showEquatorialGridText;
        },
        set_showEquatorialGridText: function(t) {
          return this._showEquatorialGridText = t, t;
        },
        get_showGalacticGrid: function() {
          return this._showGalacticGrid;
        },
        set_showGalacticGrid: function(t) {
          return this._showGalacticGrid = t, t;
        },
        get_showGalacticGridText: function() {
          return this._showGalacticGridText;
        },
        set_showGalacticGridText: function(t) {
          return this._showGalacticGridText = t, t;
        },
        get_showEclipticGrid: function() {
          return this._showEclipticGrid;
        },
        set_showEclipticGrid: function(t) {
          return this._showEclipticGrid = t, t;
        },
        get_showEclipticGridText: function() {
          return this._showEclipticGridText;
        },
        set_showEclipticGridText: function(t) {
          return this._showEclipticGridText = t, t;
        },
        get_showEclipticOverviewText: function() {
          return this._showEclipticOverviewText;
        },
        set_showEclipticOverviewText: function(t) {
          return this._showEclipticOverviewText = t, t;
        },
        get_showAltAzGrid: function() {
          return this._showAltAzGrid;
        },
        set_showAltAzGrid: function(t) {
          return this._showAltAzGrid = t, t;
        },
        get_showAltAzGridText: function() {
          return this._showAltAzGridText;
        },
        set_showAltAzGridText: function(t) {
          return this._showAltAzGridText = t, t;
        },
        get_showPrecessionChart: function() {
          return this._showPrecessionChart;
        },
        set_showPrecessionChart: function(t) {
          return this._showPrecessionChart = t, t;
        },
        get_showConstellationPictures: function() {
          return this._showConstellationPictures;
        },
        set_showConstellationPictures: function(t) {
          return this._showConstellationPictures = t, t;
        },
        get_showConstellationLabels: function() {
          return this._showConstellationLabels;
        },
        set_showConstellationLabels: function(t) {
          return this._showConstellationLabels = t, t;
        },
        get_solarSystemCMB: function() {
          return this._solarSystemCMB;
        },
        set_solarSystemCMB: function(t) {
          return this._solarSystemCMB = t, t;
        },
        get_solarSystemMinorPlanets: function() {
          return this._solarSystemMinorPlanets;
        },
        set_solarSystemMinorPlanets: function(t) {
          return this._solarSystemMinorPlanets = t, t;
        },
        get_solarSystemPlanets: function() {
          return this._solarSystemPlanets;
        },
        set_solarSystemPlanets: function(t) {
          return this._solarSystemPlanets = t, t;
        },
        get_showEarthSky: function() {
          return this._showEarthSky;
        },
        set_showEarthSky: function(t) {
          return this._showEarthSky = t, t;
        },
        get_solarSystemMinorOrbits: function() {
          return this._solarSystemMinorOrbits;
        },
        set_solarSystemMinorOrbits: function(t) {
          return this._solarSystemMinorOrbits = t, t;
        },
        get_constellationsEnabled: function() {
          return this._constellationsEnabled;
        },
        set_constellationsEnabled: function(t) {
          return this._constellationsEnabled = t, t;
        },
        get_constellationFiguresFilter: function() {
          return this._constellationFiguresFilter;
        },
        set_constellationFiguresFilter: function(t) {
          return this._constellationFiguresFilter = t, t;
        },
        get_constellationBoundariesFilter: function() {
          return this._constellationBoundariesFilter;
        },
        set_constellationBoundariesFilter: function(t) {
          return this._constellationBoundariesFilter = t, t;
        },
        get_constellationNamesFilter: function() {
          return this._constellationNamesFilter;
        },
        set_constellationNamesFilter: function(t) {
          return this._constellationNamesFilter = t, t;
        },
        get_constellationArtFilter: function() {
          return this._constellationArtFilter;
        },
        set_constellationArtFilter: function(t) {
          return this._constellationArtFilter = t, t;
        },
        get_showSkyOverlays: function() {
          return this._showSkyOverlays;
        },
        set_showSkyOverlays: function(t) {
          return this._showSkyOverlays = t, t;
        },
        get_showConstellations: function() {
          return this._showConstellations;
        },
        set_showConstellations: function(t) {
          return this._showConstellations = t, t;
        },
        get_showSkyNode: function() {
          return this._showSkyNode;
        },
        set_showSkyNode: function(t) {
          return this._showSkyNode = t, t;
        },
        get_showSkyGrids: function() {
          return this._showSkyGrids;
        },
        set_showSkyGrids: function(t) {
          return this._showSkyGrids = t, t;
        },
        get_showSkyOverlaysIn3d: function() {
          return this._showSkyOverlaysIn3d;
        },
        set_showSkyOverlaysIn3d: function(t) {
          return this._showSkyOverlaysIn3d = t, t;
        },
        get_earthCutawayView: function() {
          return this._earthCutawayView;
        },
        set_earthCutawayView: function(t) {
          return this._earthCutawayView = t, t;
        },
        get_showISSModel: function() {
          return this._showISSModel;
        },
        set_showISSModel: function(t) {
          return this._showISSModel = t, t;
        },
        get_milkyWayModel: function() {
          return this._milkyWayModel;
        },
        set_milkyWayModel: function(t) {
          return this._milkyWayModel = t, t;
        },
        get_minorPlanetsFilter: function() {
          return this._minorPlanetsFilter;
        },
        set_minorPlanetsFilter: function(t) {
          return this._minorPlanetsFilter = t, t;
        },
        get_planetOrbitsFilter: function() {
          return this._planetOrbitsFilter;
        },
        set_planetOrbitsFilter: function(t) {
          return this._planetOrbitsFilter = t, t;
        },
        getSetting: function(t) {
          return t === 17 ? new En(!0, this.faderOpacity, !!this.faderOpacity, null) : new En(!1, 1, !1, null);
        },
        get_eclipticGridColor: function() {
          return this._eclipticGridColor;
        },
        set_eclipticGridColor: function(t) {
          return this._eclipticGridColor = t, t;
        },
        get_galacticGridColor: function() {
          return this._galacticGridColor;
        },
        set_galacticGridColor: function(t) {
          return this._galacticGridColor = t, t;
        },
        get_altAzGridColor: function() {
          return this._altAzGridColor;
        },
        set_altAzGridColor: function(t) {
          return this._altAzGridColor = t, t;
        },
        get_precessionChartColor: function() {
          return this._precessionChartColor;
        },
        set_precessionChartColor: function(t) {
          return this._precessionChartColor = t, t;
        },
        get_eclipticColor: function() {
          return this._eclipticColor;
        },
        set_eclipticColor: function(t) {
          return this._eclipticColor = t, t;
        },
        get_equatorialGridColor: function() {
          return this._equatorialGridColor;
        },
        set_equatorialGridColor: function(t) {
          return this._equatorialGridColor = t, t;
        },
        get_constellationLabelsHeight: function() {
          return this._constellationLabelsHeight;
        },
        set_constellationLabelsHeight: function(t) {
          return this._constellationLabelsHeight = t, t;
        }
      };
      function za() {
        this.id = di.newGuid(), this.startOpacity = 1, this.endOpacity = 1, this.frameOpacity = 1, this.startParams = new Array(0), this.endParams = new Array(0), this.frameParams = new Array(0);
      }
      var rc = {};
      function ye(t, e) {
        this._undoXml = "", this._redoXml = "", this._currentIndex = 0, this._actionText = "", this._targetTour = null, this._currentIndex = e.get_currentTourstopIndex(), this._actionText = t, this._targetTour = e, this._undoXml = Fi.getXmlText(e.get_currentTourStop()), this._targetTour.set_tourDirty(!0);
      }
      var nc = {
        get_actionText: function() {
          return this._actionText;
        },
        set_actionText: function(t) {
          return this._actionText = t, t;
        },
        undo: function() {
          var t = this._targetTour.get_tourStops()[this._currentIndex], e = new DOMParser(), r = e.parseFromString(this._undoXml, "text/xml"), a = at.selectSingleNode(r, "TourStop");
          this._targetTour.get_tourStops()[this._currentIndex] = Fi._fromXml(this._targetTour, a), this._targetTour.set_currentTourstopIndex(this._currentIndex), n.emptyString(this._redoXml) && (this._redoXml = Fi.getXmlText(t)), this._targetTour.set_tourDirty(!0);
        },
        redo: function() {
          var t = new DOMParser(), e = t.parseFromString(this._redoXml, "text/xml"), r = at.selectSingleNode(e, "TourStop");
          this._targetTour.get_tourStops()[this._currentIndex] = Fi._fromXml(this._targetTour, r), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
        },
        toString: function() {
          return this._actionText;
        }
      };
      function Tt() {
      }
      Tt.clear = function() {
        Tt._undoStack = new n.Stack(), Tt._redoStack = new n.Stack();
      }, Tt.push = function(t) {
        Tt._undoStack.push(t), Tt._redoStack = new n.Stack();
      }, Tt.peekActionString = function() {
        return Tt._undoStack.count > 0 ? Tt._undoStack.peek().toString() : tt.getLocalizedText(551, "Nothing to Undo");
      }, Tt.peekRedoActionString = function() {
        return Tt._redoStack.count > 0 ? Tt._redoStack.peek().toString() : "";
      }, Tt.peekAction = function() {
        return Tt._undoStack.count > 0;
      }, Tt.peekRedoAction = function() {
        return Tt._redoStack.count > 0;
      }, Tt.stepBack = function() {
        var t = Tt._undoStack.pop();
        t.undo(), Tt._redoStack.push(t);
      }, Tt.stepForward = function() {
        var t = Tt._redoStack.pop();
        t.redo(), Tt._undoStack.push(t);
      };
      var ac = {};
      function sc() {
      }
      var oc = {
        undo: function() {
        },
        redo: function() {
        },
        toString: function() {
          return tt.getLocalizedText(551, "Nothing to Undo");
        }
      };
      function jr(t, e) {
        this._currentIndex = 0, this._actionText = "", this._targetTour = null, this._undoList = [];
        for (var r = 0; r < e.get_tourStops().length; r++)
          this._undoList.push(e.get_tourStops()[r]);
        this._currentIndex = e.get_currentTourstopIndex(), this._actionText = t, this._targetTour = e, this._targetTour.set_tourDirty(!0);
      }
      var lc = {
        get_actionText: function() {
          return this._actionText;
        },
        set_actionText: function(t) {
          return this._actionText = t, t;
        },
        undo: function() {
          this._redoList = this._targetTour.get_tourStops(), this._targetTour.set_tourStops(this._undoList), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
        },
        redo: function() {
          this._undoList = this._targetTour.get_tourStops(), this._targetTour.set_tourStops(this._redoList), this._targetTour.set_currentTourstopIndex(this._currentIndex), this._targetTour.set_tourDirty(!0);
        },
        toString: function() {
          return this._actionText;
        }
      };
      function uc(t, e) {
        this._actionText = "", this._targetTour = null, this._undoDomeMode = !1, this._undoLevel = 0, this._redoDomeMode = !1, this._redoLevel = 0, this._undoTitle = e.get_title(), this._undoAuthor = e.get_author(), this._undoAuthorEmail = e.get_authorEmail(), this._undoDescription = e.get_description(), this._undoAuthorImage = e.get_authorImage(), this._undoOrganizationUrl = e.get_organizationUrl(), this._undoOrgName = e.get_orgName(), this._undoKeywords = e.get_keywords(), this._undoTaxonomy = e.get_taxonomy(), this._undoLevel = e.get_level(), this._actionText = t, this._targetTour = e, this._targetTour.set_tourDirty(!0);
      }
      var hc = {
        get_actionText: function() {
          return this._actionText;
        },
        set_actionText: function(t) {
          return this._actionText = t, t;
        },
        undo: function() {
          this._redoTitle = this._targetTour.get_title(), this._redoAuthor = this._targetTour.get_author(), this._redoAuthorEmail = this._targetTour.get_authorEmail(), this._redoDescription = this._targetTour.get_description(), this._redoAuthorImage = this._targetTour.get_authorImage(), this._redoOrganizationUrl = this._targetTour.get_organizationUrl(), this._redoOrgName = this._targetTour.get_orgName(), this._redoKeywords = this._targetTour.get_keywords(), this._redoTaxonomy = this._targetTour.get_taxonomy(), this._redoLevel = this._targetTour.get_level(), this._targetTour.set_title(this._undoTitle), this._targetTour.set_author(this._undoAuthor), this._targetTour.set_authorEmail(this._undoAuthorEmail), this._targetTour.set_description(this._undoDescription), this._targetTour.set_authorImage(this._undoAuthorImage), this._targetTour.set_organizationUrl(this._undoOrganizationUrl), this._targetTour.set_orgName(this._undoOrgName), this._targetTour.set_keywords(this._undoKeywords), this._targetTour.set_taxonomy(this._undoTaxonomy), this._targetTour.set_level(this._undoLevel), this._targetTour.set_tourDirty(!0);
        },
        redo: function() {
          this._targetTour.set_title(this._redoTitle), this._targetTour.set_author(this._redoAuthor), this._targetTour.set_authorEmail(this._redoAuthorEmail), this._targetTour.set_description(this._redoDescription), this._targetTour.set_authorImage(this._redoAuthorImage), this._targetTour.set_organizationUrl(this._redoOrganizationUrl), this._targetTour.set_orgName(this._redoOrgName), this._targetTour.set_keywords(this._redoKeywords), this._targetTour.set_taxonomy(this._redoTaxonomy), this._targetTour.set_level(this._redoLevel), this._targetTour.set_tourDirty(!0);
        },
        toString: function() {
          return this._actionText;
        }
      };
      function Ae() {
        this.a = 0, this.b = 0, this.c = 0, this.a = -1, this.b = -1, this.c = -1;
      }
      Ae.create = function(t, e, r) {
        var a = new Ae();
        return a.a = t, a.b = e, a.c = r, a;
      };
      var cc = {
        subDivide: function(t, e) {
          var r = L.lerp(e[this.b].position, e[this.c].position, 0.5), a = L.lerp(e[this.c].position, e[this.a].position, 0.5), s = L.lerp(e[this.a].position, e[this.b].position, 0.5), l = lt.lerp(lt.create(e[this.b].tu, e[this.b].tv), lt.create(e[this.c].tu, e[this.c].tv), 0.5), h = lt.lerp(lt.create(e[this.c].tu, e[this.c].tv), lt.create(e[this.a].tu, e[this.a].tv), 0.5), u = lt.lerp(lt.create(e[this.a].tu, e[this.a].tv), lt.create(e[this.b].tu, e[this.b].tv), 0.5);
          r.normalize(), a.normalize(), s.normalize();
          var _ = e.length, m = e.length + 1, p = e.length + 2;
          e.push(dt.createPosRaw(r, l.x, l.y)), e.push(dt.createPosRaw(a, h.x, h.y)), e.push(dt.createPosRaw(s, u.x, u.y)), t.push(Ae.create(this.a, p, m)), t.push(Ae.create(this.b, _, p)), t.push(Ae.create(this.c, m, _)), t.push(Ae.create(_, m, p));
        },
        subDivideNoNormalize: function(t, e) {
          var r = L.lerp(e[this.b].position, e[this.c].position, 0.5), a = L.lerp(e[this.c].position, e[this.a].position, 0.5), s = L.lerp(e[this.a].position, e[this.b].position, 0.5), l = lt.lerp(lt.create(e[this.b].tu, e[this.b].tv), lt.create(e[this.c].tu, e[this.c].tv), 0.5), h = lt.lerp(lt.create(e[this.c].tu, e[this.c].tv), lt.create(e[this.a].tu, e[this.a].tv), 0.5), u = lt.lerp(lt.create(e[this.a].tu, e[this.a].tv), lt.create(e[this.b].tu, e[this.b].tv), 0.5), _ = e.length, m = e.length + 1, p = e.length + 2;
          e.push(dt.createPosRaw(r, l.x, l.y)), e.push(dt.createPosRaw(a, h.x, h.y)), e.push(dt.createPosRaw(s, u.x, u.y)), t.push(Ae.create(this.a, p, m)), t.push(Ae.create(this.b, _, p)), t.push(Ae.create(this.c, m, _)), t.push(Ae.create(_, m, p));
        }
      };
      function Oe() {
      }
      Oe.gamma = function(t, e) {
        return Math.min(255, n.truncate(255 * Math.pow(t / 255, 1 / e) + 0.5));
      }, Oe.getNamesStringFromArray = function(t) {
        for (var e = "", r = "", a = n.enumerate(t); a.moveNext(); ) {
          var s = a.current;
          e += r, e += s, r = ";";
        }
        return e;
      }, Oe.solarSystemToMeters = function(t) {
        return t * 149598e3 * 370;
      }, Oe.metersToSolarSystemDistance = function(t) {
        return t / 370 * 149598e3;
      }, Oe.metersToZoom = function(t) {
        return (t / 1e3 / 370 - 1e-6) / 4 * 9;
      }, Oe.formatDistance = function(t) {
        if (t < 0.1) {
          var e = t * 149598e3;
          if (e < 10) {
            var r = n.truncate(e * 1e3);
            return n.format("{0} m", r);
          } else
            return e = n.truncate(e), n.format("{0} km", e);
        } else if (t < 10) {
          var a = n.truncate(t * 10) / 10;
          return n.format("{0} au", a);
        } else if (t < 63239.6717 / 10) {
          var a = n.truncate(t);
          return n.format("{0} au", a);
        } else if (t < 63239.6717 * 10) {
          var s = n.truncate(t * 10 / 63239.6717) / 10;
          return n.format("{0} ly", s);
        } else if (t < 63239.6717 * 1e6) {
          var s = n.truncate(t / 63239.6717);
          return n.format("{0} ly", s);
        } else if (t < 206264.806 * 1e7) {
          var l = n.truncate(t * 10 / 206264806e3) / 10;
          return n.format("{0} Mpc", l);
        } else if (t < 206264.806 * 1e9) {
          var l = n.truncate(t / 206264806e3);
          return n.format("{0} Mpc", l);
        } else {
          var l = n.truncate(t * 10 / 206264806e6) / 10;
          return n.format("{0} Gpc", l);
        }
      }, Oe.formatDecimalHours = function(t) {
        var e = n.now(), r = e.getTimezoneOffset() / 60;
        r = 0;
        for (var a = t - r + 0.0083333334; a > 24; )
          a -= 24;
        for (; a < 0; )
          a += 24;
        var s = n.truncate(a), l = n.truncate(a * 60 - s * 60), h = n.truncate(a * 3600 - (s * 3600 + l * 60));
        return n.format("{0}:{1}", s, l, h);
      }, Oe.splitString = function(t, e) {
        for (var r = [], a = 0, s = 0, l = 0, h = 0; s < t.length; ) {
          if (t.substr(s, 1) === "(" && a++, t.substr(s, 1) === ")" && a--, s === t.length - 1) {
            if (t.substr(s, 1) === e)
              return r.push(t.substr(h, l)), r.push(""), r;
            l++;
          }
          s === t.length - 1 || t.substr(s, 1) === e && e === "	" || !a && t.substr(s, 1) === e ? (r.push(t.substr(h, l)), h = s + 1, l = 0) : l++, s++;
        }
        return r;
      }, Oe.split = function(t, e) {
        for (var r = [], a = 0, s = 0, l = 0; a < t.length; )
          a === t.length - 1 && s++, a === t.length - 1 || e.indexOf(t.substr(a, 1)) > -1 ? (r.push(t.substr(l, s)), l = a + 1, s = 0) : s++, a++;
        return r;
      }, Oe._beep = function() {
      };
      var _c = {};
      function at() {
      }
      at.splitString = function(t, e) {
        for (var r = [], a = 0, s = 0, l = 0; l < t.length; l++) {
          for (var h = !1, u = 0; u < e.length; u++) {
            if (t[l] === e[u]) {
              r.push(t.substring(a, s - a)), h = !0;
              continue;
            }
            a = l + 1, s = l + 1;
          }
          h || s++;
        }
        return s > a && r.push(t.substring(a, s - a)), r;
      }, at.stringContains = function(t, e) {
        for (var r = 0; r < e.length; r++)
          if (t.indexOf(e[r]) > -1)
            return !0;
        return !1;
      }, at.getHashCode = function(t) {
        var e = 0;
        if (!t.length)
          return e;
        for (var r = 0; r < t.length; r++) {
          var a = t.charCodeAt(r);
          e = (e << 5) - e + a;
        }
        return e;
      }, at.compare = function(t, e) {
        return t === e ? 0 : t > e ? 1 : -1;
      }, at.logN = function(t, e) {
        return Math.log(t) / Math.log(e);
      }, at.parseTimeSpan = function(t) {
        var e = 0, r = t.split(":");
        return r.length === 3 && (e += parseInt(r[0]) * 36e5, e += parseInt(r[1]) * 6e4, e += n.truncate(parseFloat(r[2]) * 1e3)), e;
      }, at.xmlDuration = function(t) {
        var e = t / 1e3, r = Math.floor(e / 3600), a = Math.floor(e / 60) - r * 60, s = e - (r * 3600 + a * 60);
        return n.format("{0}:{1}:{2}", r, a, s);
      }, at.xmlDate = function(t) {
        var e = t.getHours(), r = "AM";
        return e > 12 && (e -= 12, r = "PM"), (t.getMonth() + 1).toString() + "/" + t.getDate().toString() + "/" + t.getFullYear().toString() + " " + e.toString() + ":" + t.getMinutes().toString() + ":" + t.getSeconds().toString() + " " + r;
      }, at.selectSingleNode = function(t, e) {
        for (var r = null, a = n.enumerate(t.childNodes); a.moveNext(); ) {
          var s = a.current;
          if (s.nodeName === e) {
            r = s;
            break;
          }
        }
        return r;
      }, at.getInnerText = function(t) {
        if (n.emptyString(t.text)) {
          var e = t;
          return e.textContent;
        } else
          return t.text;
      }, at.getWrappedText = function(t, e, r) {
        var a = [];
        return a.push(e), a;
      }, at.toHex = function(t) {
        var e = Math.max(0, Math.min(n.truncate(t), 255));
        return "0123456789ABCDEF".substr((e - e % 16) / 16, 1) + "0123456789ABCDEF".substr(e % 16, 1);
      }, at.fromHex = function(t) {
        var e = 0;
        switch (t.substr(1, 1).toUpperCase()) {
          case "A":
            e += 10;
            break;
          case "B":
            e += 11;
            break;
          case "C":
            e += 12;
            break;
          case "D":
            e += 13;
            break;
          case "E":
            e += 14;
            break;
          case "F":
            e += 15;
            break;
          default:
            e += parseInt(t.substr(1, 1));
            break;
        }
        switch (t.substr(0, 1).toUpperCase()) {
          case "A":
            e += 10 * 16;
            break;
          case "B":
            e += 11 * 16;
            break;
          case "C":
            e += 12 * 16;
            break;
          case "D":
            e += 13 * 16;
            break;
          case "E":
            e += 14 * 16;
            break;
          case "F":
            e += 15 * 16;
            break;
          default:
            e += parseInt(t.substr(0, 1)) * 16;
            break;
        }
        return e;
      }, at._openUrl = function(t) {
        window.open(t);
      }, at.log10 = function(t) {
        return Math.log(t) / 2.30258509299405;
      }, at.sign = function(t) {
        return t < 0 ? -1 : 1;
      };
      var fc = {};
      function fi() {
        this.x = 0, this.y = 0, this.width = 0, this.height = 0;
      }
      fi.create = function(t, e, r, a) {
        var s = new fi();
        return s.x = t, s.y = e, s.width = r, s.height = a, s;
      };
      var gc = {
        get_left: function() {
          return this.x;
        },
        get_right: function() {
          return this.x + this.width;
        },
        get_top: function() {
          return this.y;
        },
        get_bottom: function() {
          return this.y + this.height;
        },
        contains: function(t) {
          return this._between(t.x, this.x, this.x + this.width) && this._between(t.y, this.y, this.y + this.height);
        },
        _between: function(t, e, r) {
          return e > r ? !(t > e) && !(t < r) : !(t < e) && !(t > r);
        },
        copy: function() {
          var t = new fi();
          return t.x = this.x, t.y = this.y, t.width = this.width, t.height = this.height, t;
        }
      };
      function di() {
        this._guid = di.create();
      }
      di.newGuid = function() {
        return new di();
      }, di.fromString = function(t) {
        var e = new di();
        return e._guid = n.trim(t), e;
      }, di.create = function() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(t) {
          var e = Math.random() * 16 | 0, r = t == "x" ? e : e & 3 | 8;
          return r.toString(16);
        });
      }, di.createFrom = function(t) {
        var e = Za.v5(t, "1420736a-a637-40a7-813a-ba692e72204e");
        return di.fromString(e);
      };
      var dc = {
        toString: function() {
          return this._guid;
        }
      };
      function Et() {
      }
      Et.parse = function(t, e) {
        if (e === "Default" && (e = "DefaultV"), e === "0")
          return 0;
        var r = e.substr(0, 1).toLowerCase() + e.substr(1);
        return this._wwtlib[t][r];
      }, Et.toXml = function(t, e) {
        var r = "0", a = Object.keys(this._wwtlib[t]);
        for (var s in a)
          if (this._wwtlib[t][a[s]] == e) {
            r = a[s];
            break;
          }
        var l = r, h = l.substr(0, 1).toUpperCase() + l.substr(1);
        return h === "DefaultV" && (h = "Default"), h;
      };
      var mc = {};
      function Ye() {
      }
      Ye.offsetX = function(t, e) {
        var r = 0, a = t, s = e;
        if (a.offsetParent != null)
          do
            r += a.offsetLeft;
          while ((a = a.offsetParent) != null);
        return s.pageX - r;
      }, Ye.offsetY = function(t, e) {
        var r = 0, a = t, s = e;
        if (a.offsetParent != null)
          do
            r += a.offsetTop;
          while ((a = a.offsetParent) != null);
        return s.pageY - r;
      };
      function tt() {
      }
      tt.getLocalizedText = function(t, e) {
        return e;
      };
      var pc = {};
      function Ke() {
      }
      Ke.get_position = function() {
        return new lt();
      }, Ke.get_current = function() {
        return document.body.style.cursor;
      }, Ke.set_current = function(t) {
        return document.body.style.cursor = t, t;
      };
      var vc = {};
      function Ee() {
      }
      Ee.get_arrow = function() {
        return "default";
      }, Ee.get_cross = function() {
        return "crosshair";
      }, Ee.get_defaultV = function() {
        return "default";
      }, Ee.get_hand = function() {
        return "grab";
      }, Ee.get_help = function() {
        return "help";
      }, Ee.get_hSplit = function() {
        return "row-resize";
      }, Ee.get_iBeam = function() {
        return "text";
      }, Ee.get_no = function() {
        return "not-allowed";
      }, Ee.get_sizeAll = function() {
        return "help";
      }, Ee.get_sizeNESW = function() {
        return "nwse-resize";
      }, Ee.get_sizeNS = function() {
        return "ns-resize";
      }, Ee.get_sizeNWSE = function() {
        return "nwse-resize";
      }, Ee.get_sizeWE = function() {
        return "ew-resize";
      }, Ee.get_upArrow = function() {
        return "help";
      }, Ee.get_vSplit = function() {
        return "col-resize";
      }, Ee.get_waitCursor = function() {
        return "wait";
      };
      var wc = {};
      function Ba(t) {
        this._return = !1, this._next = !0, this._linkSlide = !1, this._slide = null, this._ok = !1, t != null ? this.set_id(t) : this.set_next(!0);
      }
      var bc = {
        get_returnCaller: function() {
          return this._return;
        },
        set_returnCaller: function(t) {
          return t && (this._slide = "Return"), this._return = t, t;
        },
        get_next: function() {
          return this._next;
        },
        set_next: function(t) {
          return t && (this._slide = "Next"), this._next = t, t;
        },
        get_linkToSlide: function() {
          return this._linkSlide;
        },
        set_linkToSlide: function(t) {
          return t && (this._slide = "Next"), this._linkSlide = t, t;
        },
        get_id: function() {
          return this._slide;
        },
        set_id: function(t) {
          return this._return = !1, this._next = !1, this._linkSlide = !0, this._slide = t, t;
        },
        get_OK: function() {
          return this._ok;
        },
        set_OK: function(t) {
          return this._ok = t, t;
        }
      };
      function Ms() {
        this.volume = 0;
      }
      var yc = {
        showDialog: function() {
          return 1;
        }
      };
      function Sc() {
        this.volume = 0, this.location = new lt(), this.color = new B();
      }
      var Cc = {
        showDialog: function() {
          return 1;
        }
      };
      function Ts() {
        this.volume = 0, this.location = new lt(), this.overlay = null;
      }
      var Mc = {
        showDialog: function() {
          return 1;
        }
      };
      function Kr(t) {
        this.position = 0, this._data = null, this._data = t;
      }
      var Tc = {
        get_position: function() {
          return this.position;
        },
        seek: function(t) {
          this.position = t;
        },
        seekRelative: function(t) {
          this.position += t;
        },
        get_length: function() {
          return this._data.length;
        },
        get_endOfStream: function() {
          return this.position >= this.get_length();
        },
        readByte: function() {
          var t;
          return t = this._data[this.position], this.position += 1, t;
        },
        readSByte: function() {
          var t;
          return t = this._data[this.position], this.position += 1, t;
        },
        readBytes: function(t) {
          for (var e = new Array(t), r = 0; r < t; r++)
            e[r] = this._data[this.position + r];
          return this.position += t, e;
        },
        readRemainingI16: function(t) {
          for (var e = new Float32Array(t), r = 0; r < t; r++)
            e[r] = this.readInt16(!0);
          return e;
        },
        readByteString: function(t) {
          for (var e = "", r = 0; r < t; r++)
            e += String.fromCharCode(this._data[this.position + r]);
          return this.position += t, e;
        },
        readSingle: function() {
          var t = new Uint8Array(4);
          t[0] = this._data[this.position], t[1] = this._data[this.position + 1], t[2] = this._data[this.position + 2], t[3] = this._data[this.position + 3];
          var e = new Float32Array(t.buffer, 0, 1)[0];
          return this.position += 4, e;
        },
        readUInt32: function() {
          var t = this._data[this.position] + (this._data[this.position + 1] << 8) + (this._data[this.position + 2] << 16) + (this._data[this.position + 3] << 24);
          return this.position += 4, t;
        },
        readUInt16: function() {
          var t = this._data[this.position] + (this._data[this.position + 1] << 8);
          return this.position += 2, t;
        },
        readUInt16LittleEndian: function() {
          var t = (this._data[this.position] << 8) + this._data[this.position + 1];
          return this.position += 2, t;
        },
        readInt16: function(t) {
          var e = t ? this.readUInt16LittleEndian() : this.readUInt16();
          return e & 32768 ? -(e - 1 ^ 65535) : e;
        },
        readInt32: function() {
          var t = this.readUInt32();
          return t & 2147483648 ? -(t - 1 ^ 4294967295) : t;
        },
        readInt64: function() {
          return this.position += 8, Kr.id++;
        },
        close: function() {
        }
      };
      function mr() {
        this.width = 0, this.height = 0;
      }
      mr.create = function(t, e) {
        e = Te.fitPowerOfTwo(e), t = Te.fitPowerOfTwo(t);
        var r = new mr();
        return r.height = e, r.width = t, r._buffer = new Uint8Array(t * e * 4), r;
      };
      var xc = {
        setPixel: function(t, e, r, a, s, l) {
          var h = (t + e * this.width) * 4;
          this._buffer[h++] = r, this._buffer[h++] = a, this._buffer[h++] = s, this._buffer[h++] = l;
        },
        getTexture: function() {
          var t = F.prepDevice.createTexture();
          return F.prepDevice.bindTexture(3553, t), F.prepDevice.texParameteri(3553, 10242, 33071), F.prepDevice.texParameteri(3553, 10243, 33071), F.prepDevice.texImage2D(3553, 0, 6408, this.width, this.height, 0, 6408, 5121, this._buffer), F.prepDevice.texParameteri(3553, 10241, 9985), F.prepDevice.generateMipmap(3553), F.prepDevice.bindTexture(3553, null), t;
        }
      };
      function Va() {
        this.callBack = null, this.color = ot.get_white();
      }
      var Lc = {
        nonMenuClick: function(t) {
        },
        show: function(t) {
          V.scriptInterface.showColorPicker(this, t);
        },
        getColorFromClick: function(t) {
          var e = document.getElementById("colorhex"), r = document.createElement("canvas");
          r.width = e.width, r.height = e.height;
          var a = r.getContext("2d");
          a.drawImage(e, 0, 0);
          var s = a.getImageData(t.offsetX, t.offsetY, 1, 1).data;
          return this.color = B.fromArgb(s[3], s[0], s[1], s[2]), this.color;
        },
        pickColor: function(t) {
          this.callBack(this.color);
        }
      };
      function pr() {
        this.items = [];
      }
      var Ac = {
        _dispose: function() {
        },
        _nonMenuClick: function(t) {
          var e = document.getElementById("contextmenu");
          e.style.display = "none", window.removeEventListener("click", n.bind("_nonMenuClick", this), !1);
          for (var r = document.getElementById("popoutmenu"); r.firstChild != null; )
            r.removeChild(r.firstChild);
          r.style.display = "none";
        },
        _menuItemClicked: function(t) {
          var e = t.currentTarget;
          e.itemTag.click(e.itemTag, new n.EventArgs());
        },
        _show: function(t) {
          for (var e = document.getElementById("contextmenu"); e.firstChild != null; )
            e.removeChild(e.firstChild);
          e.className = "contextmenu", e.style.display = "block", e.style.left = t.x.toString() + "px", e.style.top = t.y.toString() + "px", window.addEventListener("click", n.bind("_nonMenuClick", this), !0);
          for (var r = n.enumerate(this.items); r.moveNext(); ) {
            var a = r.current;
            if (a.visible) {
              var s = document.createElement("div");
              a.dropDownItems.length > 0 ? s.className = "contextmenuitem submenu" : a.checked ? s.className = "contextmenuitem checkedmenu" : s.className = "contextmenuitem", s.innerText = a.name;
              var l = s;
              l.itemTag = a, s.addEventListener("mouseover", n.bind("_openSubMenu", this), !1), a.click != null && s.addEventListener("click", n.bind("_menuItemClicked", this), !1), e.appendChild(s);
            }
          }
        },
        _openSubMenu: function(t) {
          for (var e = t.currentTarget, r = e.itemTag, a = document.getElementById("popoutmenu"); a.firstChild != null; )
            a.removeChild(a.firstChild);
          if (a.style.display = "none", !!r.dropDownItems.length) {
            var s = new lt();
            s.x = t.currentTarget.parentNode.offsetLeft + t.currentTarget.parentNode.clientWidth, s.y = t.currentTarget.parentNode.offsetTop + t.currentTarget.offsetTop, a.className = "contextmenu", a.style.display = "block", a.style.left = s.x.toString() + "px", a.style.top = s.y.toString() + "px", window.addEventListener("click", n.bind("_nonMenuClick", this), !0);
            for (var l = n.enumerate(r.dropDownItems); l.moveNext(); ) {
              var h = l.current;
              if (h.visible) {
                var u = document.createElement("div");
                u.className = h.checked ? "contextmenuitem checkedmenu" : "contextmenuitem", u.innerText = h.name;
                var _ = u;
                _.itemTag = h, u.addEventListener("click", n.bind("_menuItemClicked", this), !1), a.appendChild(u);
              }
            }
          }
        }
      };
      function ht() {
        this.tag = null, this.dropDownItems = [], this.checked = !1, this.enabled = !0, this.visible = !0;
      }
      ht.create = function(t) {
        var e = new ht();
        return e.name = t, e;
      };
      var kc = {};
      function Ic() {
      }
      var $c = {};
      function Lr() {
      }
      var Pc = {
        add_showDialogHook: function(t) {
          this.__showDialogHook = n.bindAdd(this.__showDialogHook, t);
        },
        remove_showDialogHook: function(t) {
          this.__showDialogHook = n.bindSub(this.__showDialogHook, t);
        },
        show: function(t, e) {
          this.__showDialogHook != null && this.__showDialogHook(t, e);
        }
      };
      function zr() {
        this.image = null, this.layer = null, this.tile = null, this._dropDown = null, this._downPosition = 0, this._lowPosition = 0, this._highPosition = 255, this._center = 127, this._ignoreNextClick = !1, this._dragType = 4, this._updated = !1, this.selectedCurveStyle = 0;
      }
      zr.updateImage = function(t, e) {
        if (!fe.useGlVersion2) {
          var r = n.safeCast(t.get_imageSet().get_wcsImage(), nr), a = vt.getTile(0, 0, 0, t.get_imageSet(), null);
          a.texture2d = r.getBitmap().getTexture();
        }
      }, zr.updateScale = function(t, e, r, a) {
        if (t.get_imageSet().get_fitsProperties().scaleType = e, t.get_imageSet().get_fitsProperties().lowerCut = r, t.get_imageSet().get_fitsProperties().upperCut = a, !fe.useGlVersion2) {
          var s = n.safeCast(t.get_imageSet().get_wcsImage(), nr), l = vt.getTile(0, 0, 0, t.get_imageSet(), null);
          l.texture2d = s.getBitmap().getTexture();
        }
      }, zr.updateColorMapper = function(t, e) {
        if (t.get_imageSet().get_fitsProperties().colorMapName = e, !fe.useGlVersion2) {
          var r = n.safeCast(t.get_imageSet().get_wcsImage(), nr), a = vt.getTile(0, 0, 0, t.get_imageSet(), null);
          a.texture2d = r.getBitmap().getTexture();
        }
      };
      var Rc = {
        close: function(t) {
          var e = document.getElementById("histogram");
          document.getElementById("histogramClose"), e.style.display = "none", window.removeEventListener("click", n.bind("close", this), !0);
          var r = document.getElementById("graph");
          r.removeEventListener("mousedown", n.bind("onPointerDown", this), !1), r.removeEventListener("mousemove", n.bind("onPointerMove", this), !1), r.removeEventListener("mouseup", n.bind("onPointerUp", this), !1), this._dropDown.removeEventListener("change", n.bind("curveStyleSelected", this), !1), this._dropDown.removeEventListener("click", n.bind("ignoreMe", this), !0);
        },
        show: function(t) {
          this.tile = vt.getTile(0, 0, 0, this.layer.get_imageSet(), null);
          var e = document.getElementById("histogram"), r = document.getElementById("histogramClose");
          e.style.display = "block", e.style.left = t.x.toString() + "px", e.style.top = t.y.toString() + "px", this.selectedCurveStyle = this.layer.get_imageSet().get_fitsProperties().scaleType, this._dropDown = document.getElementById("ScaleTypePicker"), this._dropDown.addEventListener("change", n.bind("curveStyleSelected", this), !1), this._dropDown.addEventListener("click", n.bind("ignoreMe", this), !0);
          var a = document.getElementById("graph");
          a.addEventListener("pointerdown", n.bind("onPointerDown", this), !1), a.addEventListener("pointermove", n.bind("onPointerMove", this), !1), a.addEventListener("pointerup", n.bind("onPointerUp", this), !1), r.addEventListener("click", n.bind("close", this), !0), this.draw();
        },
        ignoreMe: function(t) {
          this._ignoreNextClick = !0;
        },
        curveStyleSelected: function(t) {
          this.selectedCurveStyle = this._dropDown.selectedIndex, this.setUpdateTimer(), this.layer.get_imageSet().get_fitsProperties().scaleType = this.selectedCurveStyle, this.draw(), this._ignoreNextClick = !0;
        },
        onPointerDown: function(t) {
          var e = document.getElementById("graph"), r = Ye.offsetX(e, t), a = Ye.offsetY(e, t);
          e.setPointerCapture(t.pointerId), Math.abs(r - this._center) < 10 && Math.abs(a - 75) < 10 ? this._dragType = 3 : Math.abs(r - this._lowPosition) < 10 ? this._dragType = 0 : Math.abs(r - this._highPosition) < 10 ? this._dragType = 1 : (this._dragType = 2, this._downPosition = Math.min(255, Math.max(0, r)), this.draw()), t.cancelBubble = !0;
        },
        onPointerMove: function(t) {
          var e = document.getElementById("graph"), r = Ye.offsetX(e, t);
          switch (Ye.offsetY(e, t), this._dragType) {
            case 0:
              this._lowPosition = Math.min(255, Math.max(0, r));
              break;
            case 1:
              this._highPosition = Math.min(255, Math.max(0, r));
              break;
            case 2:
              this._lowPosition = this._downPosition, this._highPosition = Math.min(255, Math.max(0, r));
              break;
            case 3:
              var a = Math.abs(this._highPosition - this._lowPosition) / 2, s = Math.min(255 - a, Math.max(a, r)), l = this._center - s;
              this._lowPosition -= l, this._highPosition -= l;
              break;
            case 4:
              return;
          }
          this._center = (this._lowPosition + this._highPosition) / 2, this.draw();
          var h = (this.layer.get_imageSet().get_fitsProperties().maxVal - this.layer.get_imageSet().get_fitsProperties().minVal) / 256, u = this.layer.get_imageSet().get_fitsProperties().minVal + this._lowPosition * h, _ = this.layer.get_imageSet().get_fitsProperties().minVal + this._highPosition * h;
          this.setUpdateTimer(), this.layer.get_imageSet().get_fitsProperties().upperCut = _, this.layer.get_imageSet().get_fitsProperties().lowerCut = u, this.layer.get_imageSet().get_fitsProperties().scaleType = this.selectedCurveStyle, t.cancelBubble = !0;
        },
        onPointerUp: function(t) {
          t.srcElement.releasePointerCapture(t.pointerId), this._dragType !== 4 && (this._dragType = 4, this.setUpdateTimer(), this._ignoreNextClick = !0), t.cancelBubble = !0;
        },
        setUpdateTimer: function() {
          var t = this;
          fe.useGlVersion2 || (setTimeout(function() {
            t.update();
          }, 500), this._updated = !1);
        },
        update: function() {
          if (!this._updated) {
            if (n.canCast(this.image, nr)) {
              var t = (this.layer.get_imageSet().get_fitsProperties().maxVal - this.layer.get_imageSet().get_fitsProperties().minVal) / 256, e = this.layer.get_imageSet().get_fitsProperties().minVal + this._lowPosition * t, r = this.layer.get_imageSet().get_fitsProperties().minVal + this._highPosition * t;
              this.tile.texture2d = this.image.getScaledBitmap(e, r, this.selectedCurveStyle, 0, null).getTexture();
            }
            this._updated = !0;
          }
        },
        draw: function() {
          var t = document.getElementById("graph"), e = t.getContext("2d");
          this.image != null && this.image.drawHistogram(e);
          var r = "rgba(255,0,0,255)", a = "rgba(0,255,0,255)", s = "rgba(0,0,255,255)";
          e.strokeStyle = r, e.beginPath(), e.moveTo(this._lowPosition, 0), e.lineTo(this._lowPosition, 150), e.stroke(), e.strokeStyle = a, e.beginPath(), e.moveTo(this._highPosition, 0), e.lineTo(this._highPosition, 150), e.stroke(), e.strokeStyle = s, e.beginPath(), e.arc(this._center, 75, 10, 0, Math.PI * 2, !1), e.closePath(), e.stroke();
          var l = [];
          switch (this.selectedCurveStyle) {
            case 0:
              l.length = 0, l.push(lt.create(this._lowPosition, 150)), l.push(lt.create(this._highPosition, 0));
              break;
            case 1:
              l.length = 0;
              for (var u = 150 / Math.log(255), _ = this._highPosition - this._lowPosition, m = _ < 0 ? -1 : 1, p = Math.abs(256 / (_ || 1e-6)), b = 1e-6, h = this._lowPosition; h !== this._highPosition; h += m)
                l.push(lt.create(h, 150 - Math.log(b) * u)), b += p;
              break;
            case 2:
              l.length = 0;
              for (var u = 150 / Math.pow(255, 2), _ = this._highPosition - this._lowPosition, m = _ < 0 ? -1 : 1, p = Math.abs(256 / (_ || 1e-6)), b = 1e-6, h = this._lowPosition; h !== this._highPosition; h += m)
                l.push(lt.create(h, 150 - Math.pow(b, 2) * u)), b += p;
              break;
            case 3:
              l.length = 0;
              for (var u = 150 / Math.sqrt(255), _ = this._highPosition - this._lowPosition, m = _ < 0 ? -1 : 1, p = Math.abs(256 / (_ || 1e-6)), b = 1e-6, h = this._lowPosition; h !== this._highPosition; h += m)
                l.push(lt.create(h, 150 - Math.sqrt(b) * u)), b += p;
              break;
          }
          if (l.length > 1) {
            e.beginPath(), e.strokeStyle = s, e.moveTo(l[0].x, l[0].y);
            for (var h = 1; h < l.length; h++)
              e.lineTo(l[h].x, l[h].y);
            e.stroke();
          }
        }
      };
      function Nn(t, e, r, a) {
        this.title = "Tile", this.label = "Enter Text Below", this.text = "", this._textElement = null, this._ignoreNextClick = !1, this.title = t, this.label = e, this.text = r;
      }
      var Ec = {
        showDialog: function() {
          return 1;
        },
        nonMenuClick: function(t) {
          this._ignoreNextClick || this._close(), this._ignoreNextClick = !1;
        },
        show: function(t, e) {
          var r = document.getElementById("simpleinput"), a = document.getElementById("simplemodal");
          a.style.display = "block", r.style.display = "block", r.style.marginLeft = t.x.toString() + "px", r.style.marginTop = t.y.toString() + "px", this._textElement = document.getElementById("inputtext"), this._textElement.value = this.text;
          var s = document.getElementById("simpletitle"), l = document.getElementById("inputlabel");
          s.innerText = this.title, l.innerText = this.label, this._textElement.addEventListener("change", n.bind("textChanged", this), !1), this._textElement.addEventListener("click", n.bind("ignoreMe", this), !0);
          var h = document.getElementById("simpleinputok"), u = document.getElementById("simpleinputcancel");
          h.addEventListener("click", n.bind("okClicked", this), !1), u.addEventListener("click", n.bind("cancelClicked", this), !1), this._okCallback = e;
        },
        okClicked: function(t) {
          this._close(), this._okCallback != null && this._okCallback();
        },
        cancelClicked: function(t) {
          this._close();
        },
        _close: function() {
          var t = document.getElementById("simplemodal");
          t.style.display = "none", this._textElement.removeEventListener("change", n.bind("textChanged", this), !1);
          var e = document.getElementById("simpleinputok"), r = document.getElementById("simpleinputcancel");
          e.removeEventListener("click", n.bind("okClicked", this), !1), r.removeEventListener("click", n.bind("cancelClicked", this), !1);
        },
        ignoreMe: function(t) {
          this._ignoreNextClick = !0;
        },
        textChanged: function(t) {
          this.text = this._textElement.value, this._ignoreNextClick = !0;
        }
      };
      function Jr() {
        this.body = `<?xml version='1.0' encoding='UTF-8'?>\r
`, this.formatting = 1, this._elementStack = new n.Stack(), this._pending = !1, this._currentName = "", this._attributes = {}, this._value = "";
      }
      var Dc = {
        _pushNewElement: function(t) {
          this._writePending(!1), this._elementStack.push(t), this._pending = !0, this._currentName = t;
        },
        _writePending: function(t) {
          var e = !0;
          if (this._pending) {
            for (var r = 1; r < this._elementStack.count; r++)
              this.body += "  ";
            if (this.body += "<" + this._currentName, n.keyCount(this._attributes) > 0)
              for (var a = n.enumerate(n.keys(this._attributes)); a.moveNext(); ) {
                var s = a.current;
                this.body += n.format(' {0}="{1}"', s, this._attributes[s]);
              }
            return n.emptyString(this._value) ? t ? (this.body += ` />\r
`, e = !0) : this.body += `>\r
` : (this.body += ">", e = !1, n.emptyString(this._value) || (this.body += this._value)), this._pending = !1, this._currentName = "", this._value = "", this._attributes = {}, e;
          }
          return !1;
        },
        _writeProcessingInstruction: function(t, e) {
        },
        _writeStartElement: function(t) {
          this._pushNewElement(t);
        },
        _writeAttributeString: function(t, e) {
          e != null ? this._attributes[t] = n.replaceString(e.toString(), "&", "&amp;") : this._attributes[t] = "";
        },
        _writeEndElement: function() {
          if (this._writePending(!0))
            this._elementStack.pop();
          else {
            for (var t = 1; t < this._elementStack.count; t++)
              this.body += "  ";
            this.body += n.format(`</{0}>\r
`, this._elementStack.pop());
          }
        },
        _writeString: function(t) {
          this._value = n.replaceString(t, "&", "&amp;");
        },
        _writeFullEndElement: function() {
          this._writePending(!1);
          for (var t = 1; t < this._elementStack.count; t++)
            this.body += "  ";
          this.body += n.format(`</{0}>\r
`, this._elementStack.pop());
        },
        _close: function() {
        },
        _writeElementString: function(t, e) {
          this._writeStartElement(t), this._writeValue(n.replaceString(e, "&", "&amp;")), this._writeEndElement();
        },
        _writeValue: function(t) {
          this._value = n.replaceString(t, "&", "&amp;");
        },
        _writeCData: function(t) {
          this._value = n.format("<![CDATA[{0}]]>", t);
        }
      };
      function xs() {
        this.table = [], this.items = [], this._imageReady = !1, this._dateColumn = 0, this._latColumn = 1, this._lngColumn = 2, this._depthColumn = 3, this._magColumn = 4;
      }
      var Nc = {
        load: function(t) {
          var e = this, r = t.split(`\r
`);
          this._starProfile = document.createElement("img"), this._starProfile.addEventListener("load", function(h) {
            e._imageReady = !0;
          }, !1), this._starProfile.src = Kt.singleton.engineAssetUrl("StarProfileAlpha.png");
          for (var a = !1, s = n.enumerate(r); s.moveNext(); ) {
            var l = s.current;
            a ? this.table.push(l.split("	")) : (this.header = l.split("	"), a = !0);
          }
        },
        prepare: function() {
          this._worldList = new Array(this.table.length), this._transformedList = new Array(this.table.length);
          for (var t = 0, e = n.enumerate(this.table); e.moveNext(); ) {
            var r = e.current, a = new Oa();
            a.eventTime = n.date(r[this._dateColumn]);
            var s = (6371e3 - parseFloat(r[this._depthColumn]) * 1e3) / 6371e3;
            a.location = R.geoTo3dRad(parseFloat(r[this._latColumn]), parseFloat(r[this._lngColumn]) + 180, s), a.tranformed = new L(), a.size = Math.pow(2, parseFloat(r[this._magColumn])) / 50, this._worldList[t] = a.location, this._transformedList[t] = a.tranformed, this.items.push(a), t++;
          }
        },
        draw: function(t) {
          if (this._imageReady) {
            t.device.save(), t.WVP.projectArrayToScreen(this._worldList, this._transformedList);
            var e = t.device;
            e.globalAlpha = 0.4;
            var r = t.width, a = t.height;
            L.makeCopy(t.get_viewPoint());
            for (var s = t.get_fovScale() / 100, l = n.enumerate(this.items); l.moveNext(); ) {
              var h = l.current;
              if (h.tranformed.z < 1) {
                var u = h.tranformed.x, _ = h.tranformed.y, m = 4 * h.size / s, p = m / 2;
                u > -p && u < r + p && _ > -p && _ < a + p && e.drawImage(this._starProfile, u - m / 2, _ - m / 2, m, m);
              }
            }
            t.device.restore();
          }
        }
      };
      function Oa() {
        this.size = 0;
      }
      var Fc = {
        getColor: function() {
          return "Red";
        }
      };
      function Ai(t) {
        this._state = 0, this.responseType = "", this._triedOnce = !1, this._url = t;
      }
      var zc = {
        send: function() {
          if (!(typeof navigator > "u")) {
            var t = navigator.appVersion;
            t.indexOf("MSIE 8") > -1 || t.indexOf("MSIE 9") > -1 ? this._ieCrossDomain() : this._CORS(), this.set_state(0);
          }
        },
        get_message: function() {
          return this._message;
        },
        get_state: function() {
          return this._state;
        },
        set_state: function(t) {
          return this._state = t, this.onStateChange != null && this.onStateChange(), t;
        },
        _loadData: function(t) {
          this._data = t, this.set_state(1);
        },
        _loadBlob: function(t) {
          this._blobdata = t, this.set_state(1);
        },
        _error: function() {
          this._message = n.format("Error encountered loading {0}", this._url), this.set_state(2);
        },
        _timeOut: function() {
          this._message = n.format("Timeout encountered loading {0}", this._url), this.set_state(2);
        },
        _ieCrossDomain: function() {
          var t = this;
          this._xdr = new XDomainRequest(), this._xdr.onload = function() {
            t._loadData(t._xdr.responseText);
          }, this._xdr.onTimeout = n.bind("_error", this), this._xdr.onError = n.bind("_timeOut", this), this._xdr.open("get", this._url), this._xdr.send();
        },
        _CORS: function() {
          var t = this;
          this._xhr = new XMLHttpRequest();
          try {
            this._xhr.open("GET", this._url), this.responseType != null && (this._xhr.responseType = this.responseType), this._xhr.onreadystatechange = function() {
              if (t._xhr.readyState === 4) {
                if (t._xhr.status)
                  t._xhr.status >= 400 ? (t._message = t._xhr.statusText, t.set_state(2)) : t.responseType ? t._loadBlob(t._xhr.response) : t._loadData(t._xhr.responseText);
                else if (!t._triedOnce) {
                  t._triedOnce = !0, t._xhr.onreadystatechange = null;
                  var e = Kt.singleton.activateProxy(t._url);
                  e != null ? (t._url = e, t._CORS()) : (t._message = t._xhr.statusText, t.set_state(2));
                }
              }
            }, this._xhr.send();
          } catch (e) {
            throw this._message = e.message, this.set_state(2), e;
          }
        },
        getText: function() {
          return this._data;
        },
        getBlob: function() {
          return this._blobdata;
        },
        getXml: function() {
          var t = new DOMParser();
          return t.parseFromString(this._data, "text/xml");
        }
      };
      function Ls(t, e) {
        this.loadChildFolders = !1, this._numLoadingFolders = 0, this._onComplete = t, this.loadChildFolders = e;
      }
      var Bc = {
        _folderLoaded: function() {
          this._numLoadingFolders--, this._numLoadingFolders || this._onComplete();
        },
        startingNewFolderLoad: function(t) {
          var e = this;
          this._numLoadingFolders++, t.childLoadCallback(function() {
            vn.loadImagesets(t, e), e._folderLoaded();
          });
        }
      };
      function vn() {
      }
      vn.getWtmlFile = function(t, e, r) {
        r == null && (r = !1);
        var a = new Mr();
        a.set_url(t);
        var s = new Ls(e, r);
        return s.startingNewFolderLoad(a), a;
      }, vn.loadImagesets = function(t, e) {
        for (var r = t.get_children(), a = n.enumerate(r); a.moveNext(); ) {
          var s = a.current;
          if (n.canCast(s, He)) {
            var l = s;
            V.addImageSetToRepository(l);
          }
          if (n.canCast(s, Li)) {
            var h = s;
            h.get_studyImageset() != null && V.addImageSetToRepository(h.get_studyImageset()), h.get_backgroundImageset() != null && V.addImageSetToRepository(h.get_backgroundImageset());
          }
          n.canCast(s, Mr) && e.loadChildFolders && e.startingNewFolderLoad(s);
        }
        if (!n.emptyString(V.imageSetName))
          for (var u = V.imageSetName.toLowerCase(), _ = n.enumerate(V.getImageSets()); _.moveNext(); ) {
            var m = _.current;
            m.get_name().toLowerCase() === u && V.singleton.renderContext.set_backgroundImageset(m);
          }
      };
      var Vc = {};
      function V() {
        this.freestandingMode = !1, this.uiController = null, this._annotations = [], this._hoverText = "", this._hoverTextPoint = new lt(), this._lastMouseMove = new Date(1900, 1, 0, 0, 0, 0, 0), this.layers = [], this._frameCount = 0, this._zoomMax = 360, this._zoomMaxSolarSystem = 1e16, this._zoomMin = 0.001373291015625, this._zoomMinSolarSystem = 1e-8, this.constellation = "UMA", this._fadePoints = null, this.fader = Cr.create(!0, 2e3), this._crossFadeFrame = !1, this._crossFadeTexture = null, this._sprite = new Hr(), this.renderType = 2, this._milkyWayBackground = null, this._beginZoom = 1, this._dragging = !1, this._mouseDown = !1, this._isPinching = !1, this._lastX = 0, this._lastY = 0, this._pointerIds = new Array(2), this._pinchingZoomRect = new Array(2), this._moved = !1, this._foregroundCanvas = null, this._fgDevice = null, this._tracking = !1, this._trackingObject = null, this.sandboxMode = !1, this._solarSystemTrack = 65536, this._moving = !1, this._targetStudyImageset = null, this._targetBackgroundImageset = null, this.tour = null, this.tourEdit = null, this._crossHairs = null;
      }
      V.addImageSetToRepository = function(t) {
        for (var e = n.enumerate(V.imageSets); e.moveNext(); ) {
          var r = e.current;
          if (r.get_imageSetID() === t.get_imageSetID())
            return;
        }
        V.imageSets.push(t);
      }, V.getImageSets = function() {
        return V.imageSets;
      }, V.get_renderNeeded = function() {
        return V._renderNeeded;
      }, V.set_renderNeeded = function(t) {
        return V._renderNeeded = !0, t;
      }, V.initControl = function(t) {
        return V.initControl2(t, !0);
      }, V.initControlParam = function(t, e) {
        return V.initControl2(t, !0);
      }, V.initControl2 = function(t, e) {
        return V.initControl6(t, e, 0, 0, 360, "Sky");
      }, V.initControl6 = function(t, e, r, a, s, l) {
        if (V.singleton.renderContext.device == null) {
          V.scriptInterface = new dr(), V.scriptInterface.settings = z.get_current();
          var h = V._createCanvasElement(t), u = h.getContext("webgl2");
          if (u != null ? fe.useGlVersion2 = !0 : (console.warn("This browser does not support WebGL 2.0. Some features will work suboptimally. To get the full AAS WWT experience, consider using the latest version of Chrome, Firefox or Edge. In case you would like to use Safari, we recommend that you enable WebGL 2.0"), u = h.getContext("webgl")), u == null && (u = h.getContext("experimental-webgl")), u == null) {
            var _ = h.getContext("2d");
            V.singleton.renderContext.device = _;
          } else
            F.prepDevice = u, V.singleton.renderContext.gl = u, fe.useGl = !0;
          V.singleton.canvas = h, V.singleton.renderContext.width = h.width, V.singleton.renderContext.height = h.height, V.singleton.setup(h, r, a, s), pt.initializeConstellations(), T.oneTimeInitialization(), l === "earth" ? V.singleton.renderContext.set_backgroundImageset(He.create("Blue Marble", Kt.singleton.coreStaticUrl("wwtweb/tiles.aspx?q={1},{2},{3},bm200407"), 0, 3, 3, 101, 0, 7, 256, 180, ".png", !1, "", 0, 0, 0, !1, Kt.singleton.coreStaticUrl("wwtweb/thumbnail.aspx?name=bm200407"), !0, !1, 0, 0, 0, "", "", "", "", 6371e3, "Earth")) : l === "black" ? V.singleton.renderContext.set_backgroundImageset(He.create("Black Sky Background", "", 2, 3, 3, 102, 0, 0, 256, 180, ".png", !1, "0123", 0, 0, 0, !1, "", !1, !1, 2, 0, 0, "", "", "", "", 1, "Sky")) : V.singleton.renderContext.set_backgroundImageset(He.create("DSS", Kt.singleton.coreStaticUrl("wwtweb/dss.aspx?q={1},{2},{3}"), 2, 3, 3, 100, 0, 12, 256, 180, ".png", !1, "", 0, 0, 0, !1, Kt.singleton.coreStaticUrl("thumbnails/DSS.png"), !0, !1, 0, 0, 0, "", "", "", "", 1, "Sky"));
        }
        return V.singleton.renderContext.viewCamera.lng += 0, V.singleton.renderContext._initGL(), e && V.singleton.render(), V.scriptInterface;
      }, V._createCanvasElement = function(t) {
        var e = document.getElementById(t), r = document.createElement("canvas");
        return r.height = e.clientHeight, r.width = e.clientWidth, e.appendChild(r), r;
      }, V.useUserLocation = function() {
        navigator.geolocation.getCurrentPosition(V._getLocation, V._getLocationError);
      }, V._getLocation = function(t) {
        t.coords.latitude && z.get_globalSettings().set_locationLat(t.coords.latitude), t.coords.longitude && z.get_globalSettings().set_locationLng(t.coords.longitude), t.coords.altitude && z.get_globalSettings().set_locationAltitude(t.coords.altitude);
      }, V._getLocationError = function(t) {
        t != null && t.coords != null && (t.coords.latitude, t.coords.longitude);
      }, V.setBackgroundImageName = function(t) {
        V.imageSetName = t;
      }, V.setForegroundImageName = function(t) {
        V.imageSetName = t;
      }, V.showLayers = function(t) {
        V.showDataLayers = t;
      };
      var Oc = {
        _addAnnotation: function(t) {
          this._annotations.push(t), Dt.batchDirty = !0;
        },
        _removeAnnotation: function(t) {
          n.remove(this._annotations, t), Dt.batchDirty = !0;
        },
        _clearAnnotations: function() {
          this._annotations.length = 0, Dt.batchDirty = !0;
        },
        _annotationclicked: function(t, e, r, a) {
          if (this._annotations != null && this._annotations.length > 0)
            for (var s = n.enumerate(this._annotations); s.moveNext(); ) {
              var l = s.current;
              if (l.hitTest(this.renderContext, t, e, r, a))
                return V.scriptInterface._fireAnnotationclicked(t, e, l.get_id()), !0;
            }
          return !1;
        },
        _annotationHover: function(t, e, r, a) {
          if (this._annotations != null && this._annotations.length > 0)
            for (var s = n.enumerate(this._annotations); s.moveNext(); ) {
              var l = s.current;
              if (l.hitTest(this.renderContext, t, e, r, a))
                return this._hoverText = l.get_label(), this._hoverTextPoint = lt.create(r, a), !0;
            }
          return !1;
        },
        get_zoomMax: function() {
          return this.renderContext.get_backgroundImageset() != null && this.renderContext.get_backgroundImageset().get_dataSetType() === 4 ? this._zoomMaxSolarSystem : this._zoomMax;
        },
        set_zoomMax: function(t) {
          return this._zoomMax = t, t;
        },
        setSolarSystemMaxZoom: function(t) {
          this._zoomMaxSolarSystem = t;
        },
        get_zoomMin: function() {
          return this.renderContext.get_backgroundImageset() != null && this.renderContext.get_backgroundImageset().get_dataSetType() === 4 ? this._zoomMinSolarSystem : this._zoomMin;
        },
        set_zoomMin: function(t) {
          return this._zoomMin = t, t;
        },
        setSolarSystemMinZoom: function(t) {
          this._zoomMinSolarSystem = t;
        },
        _notifyMoveComplete: function() {
        },
        get_crossFadeFrame: function() {
          return this._crossFadeFrame;
        },
        set_crossFadeFrame: function(t) {
          return t && this._crossFadeFrame !== t && (this._crossFadeTexture != null, this._crossFadeTexture = this.renderContext._getScreenTexture()), this._crossFadeFrame = t, t || this._crossFadeTexture != null && (this._crossFadeTexture = null), t;
        },
        _fadeFrame: function() {
          if (this.renderContext.gl != null) {
            var t = z.get_active().getSetting(17);
            if (t.opacity > 0) {
              var e = B._fromArgbColor(255 - Oe.gamma(255 - n.truncate(t.opacity * 255), 0.45454545454545453), ot.get_black());
              if (t.opacity > 0 || (e = B._fromArgbColor(255 - Oe.gamma(255 - n.truncate(t.opacity * 255), 1 / 2.2), ot.get_black())), this._crossFadeFrame ? e = B._fromArgbColor(Oe.gamma(n.truncate(t.opacity * 255), 1 / 2.2), ot.get_white()) : this._crossFadeTexture != null && (this._crossFadeTexture = null), this._fadePoints == null) {
                this._fadePoints = new Array(4);
                for (var r = 0; r < 4; r++)
                  this._fadePoints[r] = new ne();
              }
              this._fadePoints[0].position.x = -this.renderContext.width / 2, this._fadePoints[0].position.y = this.renderContext.height / 2, this._fadePoints[0].position.z = 1347, this._fadePoints[0].tu = 0, this._fadePoints[0].tv = 1, this._fadePoints[0].color = e, this._fadePoints[1].position.x = -this.renderContext.width / 2, this._fadePoints[1].position.y = -this.renderContext.height / 2, this._fadePoints[1].position.z = 1347, this._fadePoints[1].tu = 0, this._fadePoints[1].tv = 0, this._fadePoints[1].color = e, this._fadePoints[2].position.x = this.renderContext.width / 2, this._fadePoints[2].position.y = this.renderContext.height / 2, this._fadePoints[2].position.z = 1347, this._fadePoints[2].tu = 1, this._fadePoints[2].tv = 1, this._fadePoints[2].color = e, this._fadePoints[3].position.x = this.renderContext.width / 2, this._fadePoints[3].position.y = -this.renderContext.height / 2, this._fadePoints[3].position.z = 1347, this._fadePoints[3].tu = 1, this._fadePoints[3].tv = 0, this._fadePoints[3].color = e, this._sprite.draw(this.renderContext, this._fadePoints, 4, this._crossFadeTexture, !0, 1);
            }
          }
        },
        render: function() {
          var t = this;
          this.renderOneFrame(), setTimeout(function() {
            t.render();
          }, 10);
        },
        renderOneFrame: function() {
          this.renderContext.get_backgroundImageset() != null ? this.renderType = this.renderContext.get_backgroundImageset().get_dataSetType() : this.renderType = 2;
          var t = !1;
          if (this.canvas.width !== this.canvas.parentNode.clientWidth && (this.canvas.width = this.canvas.parentNode.clientWidth, t = !0), this.canvas.height !== this.canvas.parentNode.clientHeight && (this.canvas.height = this.canvas.parentNode.clientHeight, t = !0), t && this.explorer != null && this.explorer.refresh(), !(this.canvas.width < 1 || this.canvas.height < 1)) {
            if (t && (this._crossHairs = null), F.lastDeepestLevel = F.deepestLevel, Bt.width = this.renderContext.width = this.canvas.width, Bt.height = this.renderContext.height = this.canvas.height, F.tilesInView = 0, F.tilesTouched = 0, F.deepestLevel = 0, this.get__mover() != null) {
              if (Z.set_now(this.get__mover().get_currentDateTime()), A.updatePlanetLocations(this.get_solarSystemMode()), this.get__mover() != null) {
                var e = this.get__mover().get_currentPosition();
                if (this.renderContext.targetCamera = e.copy(), this.renderContext.viewCamera = e.copy(), this.renderContext.space && z.get_active().get_galacticMode()) {
                  var r = R.j2000toGalactic(e.get_RA() * 15, e.get_dec());
                  this.renderContext.targetAlt = this.renderContext.alt = r[1], this.renderContext.targetAz = this.renderContext.az = r[0];
                } else if (this.renderContext.space && z.get_active().get_localHorizonMode()) {
                  var a = R.equitorialToHorizon(R.fromRaDec(e.get_RA(), e.get_dec()), Z.get_location(), Z.get_now());
                  this.renderContext.targetAlt = this.renderContext.alt = a.get_alt(), this.renderContext.targetAz = this.renderContext.az = a.get_az();
                }
                this.get__mover().get_complete() && (V.scriptInterface._fireArrived(this.get__mover().get_currentPosition().get_RA(), this.get__mover().get_currentPosition().get_dec(), V.singleton.renderContext.viewCamera.zoom), this.set__mover(null), this._notifyMoveComplete());
              }
            } else
              Z.updateClock(), A.updatePlanetLocations(this.get_solarSystemMode()), this._updateViewParameters();
            if (this.renderContext.clear(), this.renderType === 4) {
              this._solarSystemTrack < 20 && (A.getAdjustedPlanetRadius(this._solarSystemTrack), this.renderContext.get_solarSystemCameraDistance(), this.renderContext.get_fovLocal()), this._trackingObject == null, this.renderContext.setupMatricesSolarSystem(!0);
              var s = this.renderContext.viewCamera.zoom, l = Math.min(1, Math.max(0, Math.log(s) - 8.4) / 4.2), h = Math.min(1, Math.max(0, Math.log(s) - 17.9) / 2.3), u = this.renderContext.get_world(), _ = this.renderContext.get_world().clone();
              _._multiply(H._scaling(1e5, 1e5, 1e5)), _._multiply(H._rotationX(23.5 / 180 * Math.PI)), _._multiply(H.translation(this.renderContext.cameraPosition)), this.renderContext.set_world(_), this.renderContext.set_worldBase(_), this.renderContext.space = !0, this.renderContext.makeFrustum();
              var m = this.renderContext.lighting;
              if (this.renderContext.lighting = !1, z.get_active().get_solarSystemMilkyWay() && l < 1 && (this._milkyWayBackground == null && (this._milkyWayBackground = this.getImagesetByName("Digitized Sky Survey (Color)")), this._milkyWayBackground != null)) {
                Bt.cullInside = !0;
                var p = (1 - l) / 2;
                this.renderContext.drawImageSet(this._milkyWayBackground, p * 100), Bt.cullInside = !1;
              }
              this._drawSkyOverlays(), this.renderContext.lighting = m, this.renderContext.space = !1, this.renderContext.set_world(u), this.renderContext.set_worldBase(u), this.renderContext.makeFrustum();
              var b = this.renderContext.cameraPosition, S = this.renderContext.get_world(), x = this.renderContext.get_world();
              x._multiply(H.translation(this.renderContext.viewCamera.viewTarget)), this.renderContext.cameraPosition = L.subtractVectors(this.renderContext.cameraPosition, this.renderContext.viewCamera.viewTarget), this.renderContext.set_world(x), this.renderContext.makeFrustum(), z.get_active().get_solarSystemCosmos() && O.drawCosmos3D(this.renderContext, 1), z.get_active().get_solarSystemMilkyWay() && h > 0 && O.drawGalaxyImage(this.renderContext, h), z.get_active().get_solarSystemStars() && O.drawStars3D(this.renderContext, 1), x = S;
              var k = this.renderContext.viewCamera.viewTarget, P = L.create(-k.x, -k.y, -k.z);
              this.renderContext.cameraPosition = b, x._multiply(H.translation(P)), this.renderContext.set_world(x), this.renderContext.makeFrustum(), T._draw(this.renderContext, 1, !0, "Sky", !0, !1), this.renderContext.set_world(S), this.renderContext.makeFrustum(), this.renderContext.get_solarSystemCameraDistance() < 15e3 && (this.renderContext.setupMatricesSolarSystem(!1), z.get_active().get_solarSystemMinorPlanets() && ee.drawMPC3D(this.renderContext, 1, this.renderContext.viewCamera.viewTarget), z.get_active().get_solarSystemPlanets() && A.drawPlanets3D(this.renderContext, 1, this.renderContext.viewCamera.viewTarget));
            } else {
              if (!this.renderType || this.renderType === 1 ? this.renderContext._setupMatricesLand3d() : this.renderContext.setupMatricesSpace3d(this.renderContext.width, this.renderContext.height), this.renderContext.drawImageSet(this.renderContext.get_backgroundImageset(), 100), this.renderContext.get_foregroundImageset() != null)
                if (this.renderContext.get_foregroundImageset().get_dataSetType() !== this.renderContext.get_backgroundImageset().get_dataSetType())
                  this.renderContext.set_foregroundImageset(null);
                else if (this.renderContext.viewCamera.opacity !== 100 && this.renderContext.gl == null) {
                  (this._foregroundCanvas.width !== this.renderContext.width || this._foregroundCanvas.height !== this.renderContext.height) && (this._foregroundCanvas.width = n.truncate(this.renderContext.width), this._foregroundCanvas.height = n.truncate(this.renderContext.height));
                  var I = this.renderContext.device;
                  this._fgDevice.clearRect(0, 0, this.renderContext.width, this.renderContext.height), this.renderContext.device = this._fgDevice, this.renderContext.drawImageSet(this.renderContext.get_foregroundImageset(), 100), this.renderContext.device = I, this.renderContext.device.save(), this.renderContext.device.globalAlpha = this.renderContext.viewCamera.opacity / 100, this.renderContext.device.drawImage(this._foregroundCanvas, 0, 0), this.renderContext.device.restore();
                } else
                  this.renderContext.drawImageSet(this.renderContext.get_foregroundImageset(), this.renderContext.viewCamera.opacity);
              if (this.renderType === 2)
                for (var D = n.enumerate(this.renderContext.get_catalogHipsImagesets()); D.moveNext(); ) {
                  var G = D.current;
                  G.get_hipsProperties().get_catalogSpreadSheetLayer().enabled && G.get_hipsProperties().get_catalogSpreadSheetLayer().lastVersion === G.get_hipsProperties().get_catalogSpreadSheetLayer().get_version() && this.renderContext.drawImageSet(G, 100);
                }
              if (this.renderType === 2 && z.get_active().get_showSolarSystem() && (A.drawPlanets(this.renderContext, 1), this.constellation = pt.containment.findConstellationForPoint(this.renderContext.viewCamera.get_RA(), this.renderContext.viewCamera.get_dec()), this._drawSkyOverlays()), this.get_planetLike() || this.get_space()) {
                if (this.get_space())
                  this.renderContext.set_worldBaseNonRotating(this.renderContext.get_world()), this._targetBackgroundImageset != null && this.renderContext.set_nominalRadius(this._targetBackgroundImageset.get_meanRadius());
                else {
                  var U = R.mstFromUTC2(Z.get_now(), 0) / 180 * Math.PI;
                  this.renderContext.set_worldBaseNonRotating(H.multiplyMatrix(H._rotationY(U), this.renderContext.get_worldBase())), this._targetBackgroundImageset != null && this.renderContext.set_nominalRadius(this._targetBackgroundImageset.get_meanRadius());
                }
                var Y = this.getCurrentReferenceFrame();
                T._draw(this.renderContext, 1, this.get_space(), Y, !0, this.get_space());
              }
            }
            var j = this.renderContext.get_world(), K = this.renderContext.get_view(), Q = this.renderContext.get_projection();
            if (z.get_current().get_showCrosshairs() && this._drawCrosshairs(this.renderContext), this.uiController != null)
              this.uiController.render(this.renderContext);
            else {
              Dt.prepBatch(this.renderContext);
              for (var J = n.enumerate(this._annotations); J.moveNext(); ) {
                var nt = J.current;
                nt.draw(this.renderContext);
              }
              if (Dt.drawBatch(this.renderContext), n.now() - this._lastMouseMove > 400) {
                var W = this.getCoordinatesForScreenPoint(this._hoverTextPoint.x, this._hoverTextPoint.y);
                this._annotationHover(W.x, W.y, this._hoverTextPoint.x, this._hoverTextPoint.y), this._lastMouseMove = new Date(2100, 1, 1);
              }
              n.emptyString(this._hoverText) || this._drawHoverText(this.renderContext);
            }
            this.renderContext.setupMatricesOverlays(), this._fadeFrame(), this._frameCount++, vt.decimateQueue(), vt.processQueue(this.renderContext), F.currentRenderGeneration++, ie.get_playing() || this.set_crossFadeFrame(!1), this.renderContext.set_world(j), this.renderContext.set_view(K), this.renderContext.set_projection(Q);
            var ct = n.now(), rt = ct - this._lastUpdate;
            rt > 1e3 && (this._lastUpdate = ct, this._frameCount = 0, Bt.trianglesRendered = 0, Bt.trianglesCulled = 0);
          }
        },
        getCurrentReferenceFrame: function() {
          if (this.renderContext.get_backgroundImageset() == null)
            return "Sun";
          if (!n.emptyString(this.renderContext.get_backgroundImageset().get_referenceFrame()))
            return this.renderContext.get_backgroundImageset().get_referenceFrame();
          if (!this.renderContext.get_backgroundImageset().get_dataSetType())
            return "Earth";
          if (this.renderContext.get_backgroundImageset().get_name() === "Visible Imagery" && this.renderContext.get_backgroundImageset().get_url().toLowerCase().indexOf("mars") > -1)
            return this.renderContext.get_backgroundImageset().set_referenceFrame("Mars"), this.renderContext.get_backgroundImageset().get_referenceFrame();
          if (this.renderContext.get_backgroundImageset().get_dataSetType() === 1)
            for (var t = n.enumerate(V.solarSystemObjectsNames); t.moveNext(); ) {
              var e = t.current;
              if (this.renderContext.get_backgroundImageset().get_name().toLowerCase().indexOf(e.toLowerCase()) > -1)
                return this.renderContext.get_backgroundImageset().set_referenceFrame(e), e;
            }
          return this.renderContext.get_backgroundImageset().get_dataSetType() === 2 ? "Sky" : "";
        },
        get_planetLike: function() {
          return this.renderContext.get_backgroundImageset() != null ? !this.renderContext.get_backgroundImageset().get_dataSetType() || this.renderContext.get_backgroundImageset().get_dataSetType() === 1 : !0;
        },
        get_space: function() {
          return this.renderContext.get_backgroundImageset() != null ? this.renderContext.get_backgroundImageset().get_dataSetType() === 2 : !0;
        },
        _drawSkyOverlays: function() {
          z.get_active().get_showConstellationPictures() && !this.freestandingMode && pt.drawArtwork(this.renderContext), z.get_active().get_showConstellationFigures() && (V.constellationsFigures == null && (V.constellationsFigures = pt.create("Constellations", Kt.singleton.engineAssetUrl("figures.txt"), !1, !1, !1)), V.constellationsFigures.draw(this.renderContext, !1, "UMA", !1)), z.get_active().get_showEclipticGrid() && (O.drawEclipticGrid(this.renderContext, 1, z.get_active().get_eclipticGridColor()), z.get_active().get_showEclipticGridText() && O.drawEclipticGridText(this.renderContext, 1, z.get_active().get_eclipticGridColor())), z.get_active().get_showGalacticGrid() && (O.drawGalacticGrid(this.renderContext, 1, z.get_active().get_galacticGridColor()), z.get_active().get_showGalacticGridText() && O.drawGalacticGridText(this.renderContext, 1, z.get_active().get_galacticGridColor())), z.get_active().get_showAltAzGrid() && (O.drawAltAzGrid(this.renderContext, 1, z.get_active().get_altAzGridColor()), z.get_active().get_showAltAzGridText() && O.drawAltAzGridText(this.renderContext, 1, z.get_active().get_altAzGridColor())), z.get_active().get_showPrecessionChart() && O.drawPrecessionChart(this.renderContext, 1, z.get_active().get_precessionChartColor()), z.get_active().get_showEcliptic() && (O.drawEcliptic(this.renderContext, 1, z.get_active().get_eclipticColor()), z.get_active().get_showEclipticOverviewText() && O.drawEclipticText(this.renderContext, 1, z.get_active().get_eclipticColor())), z.get_active().get_showGrid() && (O.drawEquitorialGrid(this.renderContext, 1, z.get_active().get_equatorialGridColor()), z.get_active().get_showEquatorialGridText() && O.drawEquitorialGridText(this.renderContext, 1, z.get_active().get_equatorialGridColor())), z.get_active().get_showConstellationBoundries() && (V.constellationsBoundries == null && (V.constellationsBoundries = pt.create("Constellations", Kt.singleton.engineAssetUrl("constellations.txt"), !0, !1, !1)), V.constellationsBoundries.draw(this.renderContext, z.get_active().get_showConstellationSelection(), this.constellation, !1)), z.get_active().get_showConstellationLabels() && pt.drawConstellationNames(this.renderContext, 1, ot.get_yellow());
        },
        _drawHoverText: function(t) {
          if (t.gl == null) {
            var e = t.device;
            e.save(), e.fillStyle = "White", e.font = "15px Arial", e.fillText(this._hoverText, this._hoverTextPoint.x, this._hoverTextPoint.y), e.restore();
          }
        },
        rAtoViewLng: function(t) {
          return (180 - t / 24 * 360 - 180 + 540) % 360 - 180;
        },
        _updateViewParameters: function() {
          if (this.renderContext.space && this._tracking && this._trackingObject != null)
            if (z.get_active().get_galacticMode() && this.renderContext.space) {
              var t = R.j2000toGalactic(this._trackingObject.get_RA() * 15, this._trackingObject.get_dec());
              this.renderContext.targetAlt = this.renderContext.alt = t[1], this.renderContext.targetAz = this.renderContext.az = t[0];
            } else if (this.renderContext.space && z.get_active().get_localHorizonMode()) {
              var e = R.equitorialToHorizon(R.fromRaDec(this._trackingObject.get_RA(), this._trackingObject.get_dec()), Z.get_location(), Z.get_now());
              this.renderContext.targetAlt = e.get_alt(), this.renderContext.targetAz = e.get_az();
            } else
              this.renderContext.viewCamera.lng = this.renderContext.targetCamera.lng = this.rAtoViewLng(this._trackingObject.get_RA()), this.renderContext.viewCamera.lat = this.renderContext.targetCamera.lat = this._trackingObject.get_dec();
          else
            this.get_solarSystemMode() || (this._tracking = !1, this._trackingObject = null);
          var r = 1 - 0.8, a = 0.8;
          if (!this._tracking) {
            var s = this.renderContext.viewCamera.zoom / 4e3;
            this.renderContext.viewCamera.zoom > 360 && (s = 360 / 4e4), this.renderContext.space && (z.get_active().get_localHorizonMode() || z.get_active().get_galacticMode()) ? (Math.abs(this.renderContext.targetAlt - this.renderContext.alt) >= s | Math.abs(this.renderContext.targetAz - this.renderContext.az) >= s) === 1 && (this.renderContext.alt += (this.renderContext.targetAlt - this.renderContext.alt) / 10, Math.abs(this.renderContext.targetAz - this.renderContext.az) > 170 ? this.renderContext.targetAz > this.renderContext.az ? this.renderContext.az += (this.renderContext.targetAz - (360 + this.renderContext.az)) / 10 : this.renderContext.az += (360 + this.renderContext.targetAz - this.renderContext.az) / 10 : this.renderContext.az += (this.renderContext.targetAz - this.renderContext.az) / 10, this.renderContext.az = (this.renderContext.az + 720) % 360) : (Math.abs(this.renderContext.targetCamera.lat - this.renderContext.viewCamera.lat) >= s | Math.abs(this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) >= s) === 1 ? (this.renderContext.viewCamera.lat += (this.renderContext.targetCamera.lat - this.renderContext.viewCamera.lat) / 10, Math.abs(this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) > 170 ? this.renderContext.targetCamera.lng > this.renderContext.viewCamera.lng ? this.renderContext.viewCamera.lng += (this.renderContext.targetCamera.lng - (360 + this.renderContext.viewCamera.lng)) / 10 : this.renderContext.viewCamera.lng += (360 + this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) / 10 : this.renderContext.viewCamera.lng += (this.renderContext.targetCamera.lng - this.renderContext.viewCamera.lng) / 10, this.renderContext.viewCamera.lng = (this.renderContext.viewCamera.lng + 720) % 360) : (this.renderContext.viewCamera.lat !== this.renderContext.targetCamera.lat || this.renderContext.viewCamera.lng !== this.renderContext.targetCamera.lng) && (this.renderContext.viewCamera.lat = this.renderContext.targetCamera.lat, this.renderContext.viewCamera.lng = this.renderContext.targetCamera.lng);
          }
          this.renderContext.viewCamera.zoom = a * this.renderContext.viewCamera.zoom + r * this.renderContext.targetCamera.zoom, this.renderContext.viewCamera.rotation = a * this.renderContext.viewCamera.rotation + r * this.renderContext.targetCamera.rotation, this.renderContext.viewCamera.angle = a * this.renderContext.viewCamera.angle + r * this.renderContext.targetCamera.angle;
        },
        move: function(t, e) {
          var r = Math.atan2(e, t), a = Math.sqrt(t * t + e * e);
          this.get_solarSystemMode() || this.get_planetLike() ? (t = Math.cos(r + this.renderContext.viewCamera.rotation) * a, e = Math.sin(r + this.renderContext.viewCamera.rotation) * a) : (t = Math.cos(r - this.renderContext.viewCamera.rotation) * a, e = Math.sin(r - this.renderContext.viewCamera.rotation) * a);
          var s = this.renderContext.get_fovScale() / 3600;
          this.renderContext.get_backgroundImageset().get_dataSetType() === 4 && (s = 0.06);
          var l = s / Math.max(0.2, Math.cos(this.renderContext.viewCamera.lat / 180 * Math.PI));
          (!this.renderContext.get_backgroundImageset().get_dataSetType() || this.renderContext.get_backgroundImageset().get_dataSetType() === 1 || this.renderContext.get_backgroundImageset().get_dataSetType() === 4) && (l *= 6.3, s *= 6.3), this.renderContext.space && (z.get_active().get_galacticMode() || z.get_active().get_localHorizonMode()) ? (t = z.get_active().get_localHorizonMode() ? -t : t, this.renderContext.targetAz += t * l, this.renderContext.targetAz = (this.renderContext.targetAz + 720) % 360, this.renderContext.targetAlt += e * s, this.renderContext.targetAlt > 90 && (this.renderContext.targetAlt = 90), this.renderContext.targetAlt < -90 && (this.renderContext.targetAlt = -90)) : (this.renderContext.targetCamera.lng -= t * l, this.renderContext.targetCamera.lng = (this.renderContext.targetCamera.lng + 720) % 360, this.renderContext.targetCamera.lat += e * s, this.renderContext.targetCamera.lat > 90 && (this.renderContext.targetCamera.lat = 90), this.renderContext.targetCamera.lat < -90 && (this.renderContext.targetCamera.lat = -90)), z.get_globalSettings().get_smoothPan() || (this.renderContext.viewCamera = this.renderContext.targetCamera.copy()), t && e && (this._tracking = !1, this._trackingObject = null);
        },
        zoom: function(t) {
          this.renderContext.targetCamera.zoom *= t, this.renderContext.targetCamera.zoom > this.get_zoomMax() && (this.renderContext.targetCamera.zoom = this.get_zoomMax()), z.get_globalSettings().get_smoothPan() || (this.renderContext.viewCamera = this.renderContext.targetCamera.copy());
        },
        onGestureStart: function(t) {
          this._mouseDown = !1, this._beginZoom = this.renderContext.viewCamera.zoom;
        },
        onGestureChange: function(t) {
          var e = t;
          this._mouseDown = !1, this.renderContext.targetCamera.zoom = this.renderContext.viewCamera.zoom = Math.min(360, this._beginZoom * (1 / e.scale));
        },
        onGestureEnd: function(t) {
          this._mouseDown = !1;
        },
        onTouchStart: function(t) {
          var e = t;
          if (e.preventDefault(), e.stopPropagation(), this._lastX = e.targetTouches[0].pageX, this._lastY = e.targetTouches[0].pageY, e.targetTouches.length === 2) {
            this._isPinching = !0;
            return;
          }
          if (this.uiController != null) {
            var r = new Ua(this._lastX, this._lastY);
            if (this.uiController.mouseDown(this, r)) {
              this._mouseDown = !1, this._dragging = !1;
              return;
            }
          }
          this._mouseDown = !0;
        },
        onTouchMove: function(t) {
          var e = t;
          if (this._isPinching) {
            var r = e.touches[0], a = e.touches[1], s = new Array(2);
            if (s[0] = lt.create(r.pageX, r.pageY), s[1] = lt.create(a.pageX, a.pageY), this._pinchingZoomRect[0] != null && this._pinchingZoomRect[1] != null) {
              var l = this.getDistance(this._pinchingZoomRect[0], this._pinchingZoomRect[1]), h = this.getDistance(s[0], s[1]), u = l / h;
              this.zoom(u);
            }
            this._pinchingZoomRect = s, e.stopPropagation(), e.preventDefault();
            return;
          }
          if (e.preventDefault(), e.stopPropagation(), this._mouseDown) {
            this._dragging = !0;
            var _ = e.targetTouches[0].pageX - this._lastX, m = e.targetTouches[0].pageY - this._lastY;
            this.move(_, m), this._lastX = e.targetTouches[0].pageX, this._lastY = e.targetTouches[0].pageY;
          } else if (this.uiController != null && this.uiController.mouseMove(this, t)) {
            t.preventDefault(), t.stopPropagation();
            return;
          }
        },
        onTouchEnd: function(t) {
          var e = t;
          if (e.preventDefault(), e.stopPropagation(), this._pinchingZoomRect[0] = null, this._pinchingZoomRect[1] = null, this._isPinching) {
            e.touches.length < 2 && (this._isPinching = !1);
            return;
          }
          if (this.uiController != null) {
            var r = new Ua(this._lastX, this._lastY);
            if (this.uiController.mouseUp(this, r)) {
              this._mouseDown = !1, this._dragging = !1;
              return;
            }
          }
          this._mouseDown = !1, this._dragging = !1;
        },
        onPointerDown: function(t) {
          var e = t, r = 0, a = arguments[0], s = arguments[0].target;
          if (s.setPointerCapture ? s.setPointerCapture(a.pointerId) : s.msSetPointerCapture && s.msSetPointerCapture(a.pointerId), this._pointerIds[0] === e.pointerId)
            r = 0;
          else if (this._pointerIds[1] === e.pointerId)
            r = 1;
          else if (!this._pointerIds[0])
            r = 0;
          else if (!this._pointerIds[1])
            r = 1;
          else
            return;
          this._pointerIds[r] = e.pointerId, this._pinchingZoomRect[r] = lt.create(t.offsetX, t.offsetY);
        },
        onPointerMove: function(t) {
          var e = t, r = 0;
          if (this._pointerIds[0] === e.pointerId)
            r = 0;
          else if (this._pointerIds[1] === e.pointerId)
            r = 1;
          else
            return;
          if (this._pinchingZoomRect[0] != null && this._pinchingZoomRect[1] != null) {
            var a = this.getDistance(this._pinchingZoomRect[0], this._pinchingZoomRect[1]), s = lt.create(t.offsetX, t.offsetY), l = this.getDistance(s, this._pinchingZoomRect[0]), h = a / l, u = Math.abs(Math.log(h));
            isFinite(u) || (u = 1e3);
            var _ = this.getDistance(s, this._pinchingZoomRect[1]), m = a / _, p = Math.abs(Math.log(m));
            isFinite(p) || (p = 1e3), p < u ? (this._pinchingZoomRect[0] = s, this.zoom(m)) : (this._pinchingZoomRect[1] = s, this.zoom(h));
          } else
            this._pinchingZoomRect[r] = lt.create(t.offsetX, t.offsetY);
          t.stopPropagation(), t.preventDefault();
        },
        onPointerUp: function(t) {
          var e = t;
          this._pointerIds[0] === e.pointerId && (this._pointerIds[0] = -2, this._pinchingZoomRect[0] = null), this._pointerIds[1] === e.pointerId && (this._pointerIds[1] = -2, this._pinchingZoomRect[1] = null);
        },
        onMouseDown: function(t) {
          document.addEventListener("mousemove", n.bind("onMouseMove", this), !1), document.addEventListener("mouseup", n.bind("onMouseUp", this), !1), !(this.uiController != null && this.uiController.mouseDown(this, t)) && (this._mouseDown = !0, this._lastX = Ye.offsetX(this.canvas, t), this._lastY = Ye.offsetY(this.canvas, t));
        },
        onMouseMove: function(t) {
          if (this._lastMouseMove = n.now(), this._hoverTextPoint = lt.create(Ye.offsetX(this.canvas, t), Ye.offsetY(this.canvas, t)), this._hoverText = "", this._mouseDown)
            t.preventDefault(), t.stopPropagation(), this._moved = !0, t.ctrlKey ? this._tilt(Ye.offsetX(this.canvas, t) - this._lastX, Ye.offsetY(this.canvas, t) - this._lastY) : this.move(Ye.offsetX(this.canvas, t) - this._lastX, Ye.offsetY(this.canvas, t) - this._lastY), this._lastX = Ye.offsetX(this.canvas, t), this._lastY = Ye.offsetY(this.canvas, t);
          else if (this.uiController != null && this.uiController.mouseMove(this, t)) {
            t.preventDefault(), t.stopPropagation();
            return;
          }
        },
        onMouseUp: function(t) {
          if (document.removeEventListener("mousemove", n.bind("onMouseMove", this), !1), document.removeEventListener("mouseup", n.bind("onMouseUp", this), !1), this.uiController != null && this.uiController.mouseUp(this, t)) {
            this._mouseDown = !1, t.preventDefault();
            return;
          }
          if (this._mouseDown && !this._moved) {
            var e = this.getCoordinatesForScreenPoint(Ye.offsetX(this.canvas, t), Ye.offsetY(this.canvas, t));
            this._annotationclicked(e.x, e.y, Ye.offsetX(this.canvas, t), Ye.offsetY(this.canvas, t)) || V.scriptInterface._fireClick(e.x, e.y);
          }
          this._mouseDown = !1, this._moved = !1;
        },
        onMouseWheel: function(t) {
          var e = t, r;
          e.deltaY ? r = -e.deltaY : e.detail ? r = e.detail * -1 : r = e.wheelDelta, r > 0 ? this.zoom(0.9) : this.zoom(1.1), t.stopPropagation(), t.preventDefault();
        },
        onDoubleClick: function(t) {
          V.showDataLayers = !0;
        },
        onKeyDown: function(t) {
          this.uiController != null && this.uiController.keyDown(this, t);
        },
        getDistance: function(t, e) {
          var r, a;
          return r = t.x - e.x, a = t.y - e.y, Math.sqrt(r * r + a * a);
        },
        onContextMenu: function(t) {
          t.preventDefault(), t.stopPropagation();
        },
        _tilt: function(t, e) {
          this.renderContext.targetCamera.rotation += t * 1e-3, this.renderContext.targetCamera.angle += e * 1e-3, this.renderContext.targetCamera.angle < -1.52 && (this.renderContext.targetCamera.angle = -1.52), this.renderContext.targetCamera.angle > 0 && (this.renderContext.targetCamera.angle = 0);
        },
        getCoordinatesForScreenPoint: function(t, e) {
          var r = lt.create(t, e), a = this.transformPickPointToWorldSpace(r, this.renderContext.width, this.renderContext.height);
          return R.cartesianToSphericalSky(a);
        },
        transformPickPointToWorldSpace: function(t, e, r) {
          var a = new L();
          if (this.renderContext.get_projection() != null) {
            var s = new L();
            s.x = (2 * t.x / e - 1) / this.renderContext.get_projection().get_m11(), s.y = (2 * t.y / r - 1) / this.renderContext.get_projection().get_m22(), s.z = 1;
            var l = H.multiplyMatrix(this.renderContext.get_view(), this.renderContext.get_world());
            l.invert(), a.x = s.x * l.get_m11() + s.y * l.get_m21() + s.z * l.get_m31(), a.y = s.x * l.get_m12() + s.y * l.get_m22() + s.z * l.get_m32(), a.z = s.x * l.get_m13() + s.y * l.get_m23() + s.z * l.get_m33(), a.normalize();
          }
          return a;
        },
        transformWorldPointToPickSpace: function(t, e, r) {
          var a = H.multiplyMatrix(this.renderContext.get_view(), this.renderContext.get_world());
          a.invert();
          var s = new lt(), l = t.x * a.get_m31() + t.y * a.get_m32() + t.z * a.get_m33(), h = (t.x * a.get_m11() + t.y * a.get_m12() + t.z * a.get_m13()) / l, u = (t.x * a.get_m21() + t.y * a.get_m22() + t.z * a.get_m23()) / l;
          return s.x = Math.round((1 + this.renderContext.get_projection().get_m11() * h) * (e / 2)), s.y = Math.round((1 + this.renderContext.get_projection().get_m22() * u) * (r / 2)), s;
        },
        getScreenPointForCoordinates: function(t, e) {
          var r = lt.create(t, e), a = R.sphericalSkyToCartesian(r), s = this.transformWorldPointToPickSpace(a, this.renderContext.width, this.renderContext.height);
          return s;
        },
        setup: function(t, e, r, a) {
          var s = this;
          window.addEventListener("contextmenu", n.bind("onContextMenu", this), !1), document.body.addEventListener("keydown", n.bind("onKeyDown", this), !1), t.addEventListener("dblclick", n.bind("onDoubleClick", this), !1), t.addEventListener("mousedown", n.bind("onMouseDown", this), !1), t.addEventListener("wheel", n.bind("onMouseWheel", this), !1), t.addEventListener("mousewheel", n.bind("onMouseWheel", this), !1), t.addEventListener("DOMMouseScroll", n.bind("onMouseWheel", this), !1), t.addEventListener("touchstart", n.bind("onTouchStart", this), !1), t.addEventListener("touchmove", n.bind("onTouchMove", this), !1), t.addEventListener("touchend", n.bind("onTouchEnd", this), !1), t.addEventListener("gesturechange", n.bind("onGestureChange", this), !1), t.addEventListener("gesturestart", n.bind("onGestureStart", this), !1), t.addEventListener("gestureend", n.bind("onGestureEnd", this), !1), t.addEventListener("pointerdown", n.bind("onPointerDown", this), !1), t.addEventListener("pointermove", n.bind("onPointerMove", this), !1), t.addEventListener("pointerup", n.bind("onPointerUp", this), !1), this.renderContext.viewCamera.lat = e, this.renderContext.viewCamera.lng = r, this.renderContext.viewCamera.zoom = a, this.renderContext.targetCamera = this.renderContext.viewCamera.copy(), this.renderContext.gl == null && (this._foregroundCanvas = document.createElement("canvas"), this._foregroundCanvas.width = t.width, this._foregroundCanvas.height = t.height, this._fgDevice = this._foregroundCanvas.getContext("2d")), this.freestandingMode ? setTimeout(function() {
            s._setupComplete();
          }, 0) : vn.getWtmlFile(Kt.singleton.coreDynamicUrl("wwtweb/catalog.aspx?X=ImageSets6"), n.bind("_setupComplete", this), !0);
        },
        _setupComplete: function() {
          V.scriptInterface._fireReady();
        },
        gotoRADecZoom: function(t, e, r, a, s) {
          this._tracking = !1, this._trackingObject = null, this.gotoTargetFull(!1, a, this._cameraParametersFromRADecZoom(t, e, r, s), V.singleton.renderContext.get_foregroundImageset(), V.singleton.renderContext.get_backgroundImageset());
        },
        _cameraParametersFromRADecZoom: function(t, e, r, a) {
          for (; t > 24; )
            t -= 24;
          for (; t < 0; )
            t += 24;
          e = Zi.clamp(e, -90, 90), r = Zi.clamp(r, this.get_zoomMin(), this.get_zoomMax());
          var s = a ?? V.singleton.renderContext.viewCamera.rotation, l = Me.create(e, V.singleton.renderContext.rAtoViewLng(t), r, s, V.singleton.renderContext.viewCamera.angle, V.singleton.renderContext.viewCamera.opacity);
          return l;
        },
        timeToRADecZoom: function(t, e, r, a) {
          var s = this._cameraParametersFromRADecZoom(t, e, r, a);
          return this.timeToTargetFull(s, !1);
        },
        get_solarSystemMode: function() {
          return this.renderContext.get_backgroundImageset() == null ? !1 : this.renderContext.get_backgroundImageset().get_dataSetType() === 4;
        },
        gotoTarget: function(t, e, r, a) {
          if (t != null) {
            if (a && this.get_solarSystemMode() && (t.get_classification() === 536870912 && t.get_type() !== 4 || t.get_classification() === 1 || t.get_classification() === 1048576 && t.get_distance() > 0)) {
              var s = 65536;
              if (t.get_classification() === 1 || t.get_classification() === 1048576)
                s = 20;
              else
                try {
                  t.get_target() !== 65536 ? s = t.get_target() : s = A.getPlanetIDFromName(t.get_name());
                } catch {
                }
              if (s !== 65536) {
                if (this._trackingObject = t, s === this._solarSystemTrack && !(t.get_classification() === 1 || t.get_classification() === 1048576)) {
                  this.gotoTarget3(t.get_camParams(), e, r);
                  return;
                }
                var l = 4;
                s === 20 ? l = 17 : l += 13 * (101 - z.get_active().get_solarSystemScale()) / 100, r && (l = 1);
                var h = this.renderContext.viewCamera.copy();
                h.targetReferenceFrame = "", h.target = s;
                var u = 10;
                if (s === 20) {
                  t.get_classification() === 1048576 ? u = 1404946007758 : u = 63239.6717 * 100;
                  var _ = R.raDecTo3dAu(t.get_RA(), t.get_dec(), t.get_distance()), m = R.meanObliquityOfEcliptic(Z.get_jNow()) / 180 * Math.PI;
                  _.rotateX(m), h.viewTarget = L.negate(h.viewTarget);
                } else {
                  switch (h.viewTarget = A.getPlanet3dLocationJD(s, Z.getJNowForFutureTime(l)), s) {
                    case 0:
                      u = 0.6;
                      break;
                    case 1:
                      u = 4e-4;
                      break;
                    case 2:
                      u = 4e-4;
                      break;
                    case 3:
                      u = 4e-4;
                      break;
                    case 4:
                      u = 7e-3;
                      break;
                    case 5:
                      u = 7e-3;
                      break;
                    case 6:
                      u = 4e-3;
                      break;
                    case 7:
                      u = 4e-3;
                      break;
                    case 8:
                      u = 4e-4;
                      break;
                    case 9:
                      u = 4e-4;
                      break;
                    case 10:
                      u = 4e-4;
                      break;
                    case 11:
                      u = 4e-4;
                      break;
                    case 12:
                      u = 4e-4;
                      break;
                    case 13:
                      u = 4e-4;
                      break;
                    case 19:
                      u = 4e-4;
                      break;
                    case 20:
                      u = 10;
                      break;
                  }
                  u = u * z.get_active().get_solarSystemScale();
                }
                var p = this.renderContext.viewCamera.copy();
                this._solarSystemTrack === 20 && !n.emptyString(this.renderContext.get_trackingFrame()) && (p = this.renderContext.customTrackingParams, this.renderContext.set_trackingFrame("")), h.zoom = u;
                var b = h.viewTarget;
                if (b.subtract(p.viewTarget), t.get_classification() === 1 && (b = L.negate(b)), b.length()) {
                  var S = b.toRaDec();
                  s === 20 ? h.lat = -S.y : h.lat = S.y, h.lng = S.x * 15 - 90;
                } else
                  h.lat = this.renderContext.viewCamera.lat, h.lng = this.renderContext.viewCamera.lng;
                s !== 20 && (h.viewTarget = A.getPlanetTargetPoint(s, h.lat, h.lng, Z.getJNowForFutureTime(l)));
                var x = new ka(p, h, l, Z.get_now(), Z.getTimeForFutureTime(l), 3);
                x.fastDirectionMove = !0, this.set__mover(x);
                return;
              }
            }
            this._tracking = !1, this._trackingObject = null;
            var k = t.get_camParams().copy();
            this.renderContext.get_backgroundImageset() != null && t.get_type() !== this.renderContext.get_backgroundImageset().get_dataSetType() ? (this.renderContext.targetCamera = t.get_camParams().copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.renderContext.set_backgroundImageset(this.getDefaultImageset(t.get_type(), 3)), r = !0) : this.get_solarSystemMode() && t.get_target() !== this._solarSystemTrack && (this.renderContext.targetCamera = t.get_camParams().copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this._solarSystemTrack = t.get_target(), r = !0), t.get_classification() === 128 ? (k.zoom = this.get_zoomMax(), this.gotoTargetFull(!1, r, k, null, null)) : (this._solarSystemTrack = t.get_target(), this.gotoTargetFull(e, r, k, t.get_studyImageset(), t.get_backgroundImageset()), a && (this._tracking = !0, this._trackingObject = t));
          }
        },
        gotoTarget3: function(t, e, r) {
          this._tracking = !1, this._trackingObject = null, this.gotoTargetFull(e, r, t, this.renderContext.get_foregroundImageset(), this.renderContext.get_backgroundImageset());
        },
        _tooCloseForSlewMove: function(t) {
          return Math.abs(this.renderContext.viewCamera.lat - t.lat) < 1e-12 && Math.abs(this.renderContext.viewCamera.lng - t.lng) < 1e-12 && Math.abs(this.renderContext.viewCamera.zoom - t.zoom) < 1e-12 && Math.abs(this.renderContext.viewCamera.rotation - t.rotation) < 1e-12;
        },
        gotoTargetFull: function(t, e, r, a, s) {
          if (V.set_renderNeeded(!0), this._tracking = !1, this._trackingObject = null, this._targetStudyImageset = a, this._targetBackgroundImageset = s, t ? (r.zoom = this.renderContext.viewCamera.zoom, r.angle = this.renderContext.viewCamera.angle, r.rotation = this.renderContext.viewCamera.rotation) : (r.zoom === -1 || !r.zoom) && (this.renderContext.space ? r.zoom = 1.40625 : r.zoom = 0.09), e || this._tooCloseForSlewMove(r)) {
            if (this.set__mover(null), this.renderContext.targetCamera = r.copy(), this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.renderContext.space && z.get_active().get_galacticMode()) {
              var l = R.j2000toGalactic(this.renderContext.viewCamera.get_RA() * 15, this.renderContext.viewCamera.get_dec());
              this.renderContext.targetAlt = this.renderContext.alt = l[1], this.renderContext.targetAz = this.renderContext.az = l[0];
            } else if (this.renderContext.space && z.get_active().get_localHorizonMode()) {
              var h = R.equitorialToHorizon(R.fromRaDec(this.renderContext.viewCamera.get_RA(), this.renderContext.viewCamera.get_dec()), Z.get_location(), Z.get_now());
              this.renderContext.targetAlt = this.renderContext.alt = h.get_alt(), this.renderContext.targetAz = this.renderContext.az = h.get_az();
            }
            this._mover_Midpoint();
          } else
            this.set__mover(gr.create(this.renderContext.viewCamera, r)), V.set_renderNeeded(!0), this.get__mover().set_midpoint(n.bind("_mover_Midpoint", this));
        },
        _slewTimeBetweenTargets: function(t, e) {
          var r = gr.create(t, e);
          return r.get_moveTime();
        },
        timeToTargetFull: function(t, e) {
          return e && (t.zoom = this.renderContext.viewCamera.zoom, t.angle = this.renderContext.viewCamera.angle, t.rotation = this.renderContext.viewCamera.rotation), this._tooCloseForSlewMove(t) ? 0 : this._slewTimeBetweenTargets(V.singleton.renderContext.viewCamera, t);
        },
        _freezeView: function() {
          this.renderContext.viewCamera = this.renderContext.targetCamera.copy(), this.set__mover(null);
        },
        get__mover: function() {
          return this.renderContext.viewMover;
        },
        set__mover: function(t) {
          return this.renderContext.viewMover = t, V.set_renderNeeded(!0), t;
        },
        fadeInImageSet: function(t) {
          this.renderContext.get_backgroundImageset() != null && t.get_dataSetType() !== this.renderContext.get_backgroundImageset().get_dataSetType() && (vt.purgeQueue(), vt.clearCache()), this.renderContext.set_backgroundImageset(t);
        },
        _mover_Midpoint: function() {
          (this._targetStudyImageset != null && this.renderContext.get_foregroundImageset() == null || this.renderContext.get_foregroundImageset() != null && !this.renderContext.get_foregroundImageset().equals(this._targetStudyImageset)) && this.renderContext.set_foregroundImageset(this._targetStudyImageset), this.renderContext.get_backgroundImageset() != null && this._targetBackgroundImageset != null && !this.renderContext.get_backgroundImageset().equals(this._targetBackgroundImageset) && (this._targetBackgroundImageset != null && this._targetBackgroundImageset.get_generic() ? this.fadeInImageSet(this._getRealImagesetFromGeneric(this._targetBackgroundImageset)) : this.fadeInImageSet(this._targetBackgroundImageset));
        },
        getDefaultImageset: function(t, e) {
          for (var r = n.enumerate(V.imageSets); r.moveNext(); ) {
            var a = r.current;
            if (a.get_defaultSet() && a.get_bandPass() === e && a.get_dataSetType() === t)
              return a;
          }
          for (var s = n.enumerate(V.imageSets); s.moveNext(); ) {
            var a = s.current;
            if (a.get_bandPass() === e && a.get_dataSetType() === t)
              return a;
          }
          for (var l = n.enumerate(V.imageSets); l.moveNext(); ) {
            var a = l.current;
            if (a.get_dataSetType() === t)
              return a;
          }
          return V.imageSets[0];
        },
        _getRealImagesetFromGeneric: function(t) {
          for (var e = n.enumerate(V.imageSets); e.moveNext(); ) {
            var r = e.current;
            if (r.get_defaultSet() && r.get_bandPass() === t.get_bandPass() && r.get_dataSetType() === t.get_dataSetType())
              return r;
          }
          for (var a = n.enumerate(V.imageSets); a.moveNext(); ) {
            var r = a.current;
            if (r.get_bandPass() === t.get_bandPass() && r.get_dataSetType() === t.get_dataSetType())
              return r;
          }
          return V.imageSets[0];
        },
        _hideUI: function(t) {
        },
        createTour: function(t) {
          if (n.canCast(this.uiController, ie)) {
            var e = this.uiController;
            e.stop(!1);
          }
          return this.tour = new ir(), this.tour.set_title(t), this.setupTour(), this.tour.set_editMode(!0), this.tour;
        },
        setupTour: function() {
          this.tourEdit = new ys(), this.tourEdit.set_tour(this.tour), this.tour.set_currentTourstopIndex(0), this.tour.set_editMode(!1), this.uiController = this.tourEdit.tourEditorUI;
        },
        loadTour: function(t) {
          var e = this;
          if (n.canCast(this.uiController, ie)) {
            var r = this.uiController;
            r.stop(!1);
          }
          this.tour = ir.fromUrl(t, function() {
            e.setupTour();
            var a = new ie();
            a.set_tour(e.tour), V.singleton.uiController = a, V.scriptInterface._fireTourReady();
          });
        },
        playTour: function(t) {
          var e = this;
          if (n.canCast(this.uiController, ie)) {
            var r = this.uiController;
            r.stop(!1);
          }
          this.tour = ir.fromUrl(t, function() {
            e.setupTour(), e.tourEdit.playNow(!0), V.scriptInterface._fireTourReady();
          });
        },
        playCurrentTour: function() {
          if (n.canCast(this.uiController, ie)) {
            var t = this.uiController;
            t.play();
          }
        },
        pauseCurrentTour: function() {
          if (n.canCast(this.uiController, ie)) {
            var t = this.uiController;
            t.pauseTour();
          }
        },
        stopCurrentTour: function() {
          if (n.canCast(this.uiController, ie)) {
            var t = this.uiController;
            t.stop(!1);
          }
        },
        _closeTour: function() {
        },
        getImagesetByName: function(t) {
          for (var e = n.enumerate(V.imageSets); e.moveNext(); ) {
            var r = e.current;
            if (r.get_name().toLowerCase().indexOf(t.toLowerCase()) > -1)
              return r;
          }
          return null;
        },
        getImageSetByUrl: function(t) {
          for (var e = n.enumerate(V.imageSets); e.moveNext(); ) {
            var r = e.current;
            if (r.get_url() === t)
              return r;
          }
          return null;
        },
        setBackgroundImageByName: function(t) {
          var e = this.getImagesetByName(t);
          e != null && this.renderContext.set_backgroundImageset(e);
        },
        setForegroundImageByName: function(t) {
          var e = this.getImagesetByName(t);
          e != null && this.renderContext.set_foregroundImageset(e);
        },
        addCatalogHips: function(t) {
          this.renderContext.addCatalogHips(t, null);
        },
        addCatalogHipsByName: function(t) {
          this.addCatalogHipsByNameWithCallback(t, null);
        },
        addCatalogHipsByNameWithCallback: function(t, e) {
          var r = this.getImagesetByName(t);
          r != null && this.renderContext.addCatalogHips(r, e);
        },
        removeCatalogHipsByName: function(t) {
          var e = this.getImagesetByName(t);
          e != null && this.renderContext.removeCatalogHips(e);
        },
        getCatalogHipsByName: function(t) {
          return this.renderContext.getCatalogHipsByName(t);
        },
        getCatalogHipsDataInView: function(t, e, r) {
          var a = this.getImagesetByName(t);
          a != null && this.renderContext.getCatalogHipsDataInView(a, e, r);
        },
        setCutsForFits: function(t, e, r) {
          var a = this.getImagesetByName(t);
          a != null && a.get_fitsProperties() != null ? (a.get_fitsProperties().lowerCut = e, a.get_fitsProperties().upperCut = r) : console.log(t + " not found");
        },
        setColorMapForFits: function(t, e) {
          var r = this.getImagesetByName(t);
          r != null && r.get_fitsProperties() != null ? r.get_fitsProperties().colorMapName = e : console.log(t + " not found");
        },
        setScaleTypeForFits: function(t, e) {
          var r = this.getImagesetByName(t);
          r != null && r.get_fitsProperties() != null ? r.get_fitsProperties().scaleType = e : console.log(t + " not found");
        },
        _drawCrosshairs: function(t) {
          if (t.gl == null) {
            var e = t.device;
            e.save(), e.beginPath(), e.strokeStyle = z.get_current().get_crosshairsColor(), e.lineWidth = 2;
            var r = t.width / 2, a = t.height / 2, s = 5;
            e.moveTo(r, a + s), e.lineTo(r, a - s), e.moveTo(r + s, a), e.lineTo(r - s, a), e.stroke(), e.restore();
          } else {
            if (this._crossHairs == null) {
              var l = 0.03, h = l * t.height / t.width;
              this._crossHairs = new fr(), this._crossHairs.set_depthBuffered(!1), this._crossHairs.pure2D = !0, this._crossHairs.addLine(L.create(-h, 0, 0), L.create(h, 0, 0)), this._crossHairs.addLine(L.create(0, -l, 0), L.create(0, l, 0));
            }
            this._crossHairs.drawLines(t, 1, ot.get_white());
          }
        },
        captureThumbnail: function(t) {
          this.renderOneFrame();
          var e = document.createElement("img");
          e.addEventListener("load", function(r) {
            var a = e.width / e.height, s = 96 / 45, l = 96, h = 45;
            a < s ? h = n.truncate(l / a) : l = n.truncate(h * a);
            var u = (96 - l) / 2, _ = (45 - h) / 2, m = document.createElement("canvas");
            m.height = 45, m.width = 96;
            var p = m.getContext("2d");
            if (p.drawImage(e, u, _, l, h), typeof m.msToBlob == "function") {
              var b = m.msToBlob();
              t(b);
            } else
              m.toBlob(t, "image/jpeg");
          }, !1), e.src = V.singleton.canvas.toDataURL();
        },
        clampZooms: function(t) {
          t.viewCamera.zoom = Zi.clamp(t.viewCamera.zoom, this.get_zoomMin(), this.get_zoomMax()), t.targetCamera.zoom = Zi.clamp(t.targetCamera.zoom, this.get_zoomMin(), this.get_zoomMax());
        }
      };
      function Uc(t) {
        this._divId = null, this._startRenderLoop = !1, this._startLat = 0, this._startLng = 0, this._startZoom = 360, this._freestandingAssetBaseurl = "", this._startMode = "", this._divId = t;
      }
      var Gc = {
        startRenderLoop: function(t) {
          this._startRenderLoop = t;
        },
        initialView: function(t, e, r) {
          this._startLat = t, this._startLng = e, this._startZoom = r;
        },
        freestandingMode: function(t) {
          this._freestandingAssetBaseurl = t;
        },
        initialMode: function(t) {
          this._startMode = t;
        },
        create: function() {
          var t = !!this._freestandingAssetBaseurl, e;
          return this._startMode ? e = this._startMode : t ? e = "black" : e = "sky", V.singleton.freestandingMode = t, t && Kt.singleton.overrideAssetBaseurl(this._freestandingAssetBaseurl), V.initControl6(this._divId, this._startRenderLoop, this._startLat, this._startLng, this._startZoom, e);
        }
      };
      function Ua(t, e) {
        this.offsetX = 0, this.offsetY = 0, this.offsetX = t, this.offsetY = e;
      }
      var Hc = {};
      function R(t, e) {
        this._ascention = 0, this._declination = 0, this._ascention = t + Math.PI * 80 % (Math.PI * 2), this._declination = e;
      }
      R.geoTo3d = function(t, e) {
        return L.create(Math.cos(e * R.RC) * Math.cos(t * R.RC) * 1, Math.sin(t * R.RC) * 1, Math.sin(e * R.RC) * Math.cos(t * R.RC) * 1);
      }, R.geoTo3dDouble = function(t, e) {
        return L.create(Math.cos(e * R.RC) * Math.cos(t * R.RC) * 1, Math.sin(t * R.RC) * 1, Math.sin(e * R.RC) * Math.cos(t * R.RC) * 1);
      }, R.geoTo3dRad = function(t, e, r) {
        return L.create(Math.cos(e * R.RC) * Math.cos(t * R.RC) * r, Math.sin(t * R.RC) * r, Math.sin(e * R.RC) * Math.cos(t * R.RC) * r);
      }, R.raDecTo3d = function(t, e) {
        return L.create(Math.cos(t * R.RCRA) * Math.cos(e * R.RC) * 1, Math.sin(e * R.RC) * 1, Math.sin(t * R.RCRA) * Math.cos(e * R.RC) * 1);
      }, R.raDecTo3dAu = function(t, e, r) {
        return L.create(Math.cos(t * R.RCRA) * Math.cos(e * R.RC) * r, Math.sin(e * R.RC) * r, Math.sin(t * R.RCRA) * Math.cos(e * R.RC) * r);
      }, R.raDecTo3dMat = function(t, e, r) {
        return L._transformCoordinate(L.create(Math.cos(t * R.RCRA) * Math.cos(e * R.RC) * 1, Math.sin(e * R.RC) * 1, Math.sin(t * R.RCRA) * Math.cos(e * R.RC) * 1), r);
      }, R.raDecTo3dPointRad = function(t, e) {
        return t.set_dec(-t.get_dec()), L.create(Math.cos(t.get_RA() * R.RCRA) * Math.cos(t.get_dec() * R.RC) * e, Math.sin(t.get_dec() * R.RC) * e, Math.sin(t.get_RA() * R.RCRA) * Math.cos(t.get_dec() * R.RC) * e);
      }, R.sterographicTo3d = function(t, e, r, a, s, l, h, u, _) {
        var m = 90, p = 0;
        if (t -= l, e -= h, t || e) {
          var b = (1 + Math.sin(Math.abs(a) / 180 * Math.PI)) * 6371e3 / u, S = b * b, x = 180 / Math.PI;
          t ? p = Math.atan2(e, t) * x : p = 90 * e < 0 ? -1 : 1;
          var k = t * t + e * e;
          m = (S - k) / (S + k), m = Math.asin(m) * x, _ || (m = -m, p = -p, s = -s);
        }
        return R.geoTo3dRad(m, 90 + p + s, r);
      }, R.equitorialToHorizon = function(t, e, r) {
        var a = R.mstFromUTC2(r, e.get_lng()) - t.get_RA() * 15;
        a < 0 && (a += 360);
        var s = a * R.RC, l = t.get_dec() * R.RC, h = e.get_lat() * R.RC, u = Math.sin(l) * Math.sin(h) + Math.cos(l) * Math.cos(h) * Math.cos(s), _ = Math.asin(u), m = (Math.sin(l) - Math.sin(_) * Math.sin(h)) / (Math.cos(_) * Math.cos(h)), p = Math.acos(m), b = new R(p, _);
        return Math.sin(s) > 0 && b.set_az(360 - b.get_az()), b;
      }, R.horizonToEquitorial = function(t, e, r) {
        var a = R.mstFromUTC2(r, e.get_lng()), s, l, h = R._altAzToRaDec(t.get_alt() * R.RC, t.get_az() * R.RC, e.get_lat() * R.RC);
        s = h.x, l = h.y;
        var u = s / R.RC;
        return a += u, a < 0 && (a += 360), a > 360 && (a -= 360), R.fromRaDec(a / 15, l / R.RC);
      }, R._altAzToRaDec = function(t, e, r) {
        var a = 0, s = 0;
        return e = Math.PI - e, e < 0 && (e += Math.PI * 2), a = Math.atan2(Math.sin(e), Math.cos(e) * Math.sin(r) + Math.tan(t) * Math.cos(r)), a < 0 && (a += Math.PI * 2), s = Math.asin(Math.sin(r) * Math.sin(t) - Math.cos(r) * Math.cos(t) * Math.cos(e)), lt.create(a, s);
      }, R.mstFromUTC2 = function(t, e) {
        var r = t.getUTCFullYear(), a = t.getUTCMonth() + 1, s = t.getUTCDate(), l = t.getUTCHours(), h = t.getUTCMinutes(), u = t.getUTCSeconds() + t.getUTCMilliseconds() / 1e3;
        (a === 1 || a === 2) && (r -= 1, a += 12);
        var _ = n.truncate(r / 100), m = 2 - _ + Math.floor(_ / 4), p = Math.floor(365.25 * r), b = Math.floor(30.6001 * (a + 1)), S, x, k;
        if (S = m + p + b - 730550.5 + s + (l + h / 60 + u / 3600) / 24, x = S / 36525, k = 280.46061837 + 360.98564736629 * S + 387933e-9 * x * x - x * x * x / 3871e4 + e, k > 0)
          for (; k > 360; )
            k = k - 360;
        else
          for (; k < 0; )
            k = k + 360;
        return k;
      }, R.cartesianToSpherical = function(t) {
        var e, r, a = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), s = Math.sqrt(t.x * t.x + t.z * t.z);
        return r = Math.asin(t.y / a), 0 < t.x ? e = Math.asin(t.z / s) : 0 > t.x ? e = Math.PI - Math.asin(t.z / s) : e = 0, new R(e, r);
      }, R.cartesianToSpherical2 = function(t) {
        var e = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), r = Math.atan2(t.z, t.x), a = Math.asin(t.y / e);
        return new R(r, a);
      }, R.cartesianToSphericalSky = function(t) {
        var e = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), r = Math.atan2(t.z, t.x), a = Math.asin(-t.y / e);
        return lt.create(r / Math.PI * 12, a / Math.PI * 180);
      }, R.sphericalSkyToCartesian = function(t) {
        var e = t.x * (Math.PI / 12), r = t.y * (Math.PI / 180), a = Math.cos(e) * Math.cos(r), s = -Math.sin(r), l = Math.sin(e) * Math.cos(r);
        return L.create(a, s, l);
      }, R.cartesianToLatLng = function(t) {
        var e = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), r = Math.atan2(t.z, t.x), a = Math.asin(t.y / e);
        return lt.create(r * 180 / Math.PI, a * 180 / Math.PI);
      }, R.cartesianToSpherical3 = function(t) {
        var e = Math.sqrt(t.x * t.x + t.y * t.y + t.z * t.z), r = Math.atan2(t.z, t.x), a = Math.asin(t.y / e);
        return new R(r, a);
      }, R.sign = function(t) {
        return t < 0 ? -1 : 1;
      }, R.formatDMSSign = function(t, e) {
        try {
          t += R.sign(t) * 1388888888889e-16;
          var r = n.truncate(t), a = (t - n.truncate(t)) * 60, s = (a - n.truncate(a)) * 60;
          if (e) {
            var l = t > 0 ? "+" : "-";
            return n.format("{3}{0:00;00}:{1:00}:{2:00}", r, Math.abs(n.truncate(a)), Math.abs(n.truncate(s)), l);
          } else
            return n.format("{0:00}:{1:00}:{2:00}", r, Math.abs(n.truncate(a)), Math.abs(n.truncate(s)));
        } catch {
          return "";
        }
      }, R.twoPlaces = function(t) {
        var e = t.toString();
        return e.length < 2 && (e = "0" + e), e;
      }, R.formatDMS = function(t) {
        try {
          t += (t < 0 ? -1 : 1) * 1388888888889e-16;
          var e = Math.abs(n.truncate(t)), r = (t - n.truncate(t)) * 60, a = (r - n.truncate(r)) * 60, s = t < 0 ? "-" : "";
          return n.format("{3}{0}:{1}:{2}", Math.abs(e), R.twoPlaces(Math.abs(n.truncate(r))), R.twoPlaces(Math.abs(n.truncate(a))), s);
        } catch {
          return "";
        }
      }, R.formatDMSWide = function(t) {
        try {
          t += R.sign(t) * 1388888888889e-16;
          var e = Math.abs(n.truncate(t)), r = (t - n.truncate(t)) * 60, a = (r - n.truncate(r)) * 60, s = t < 0 ? "-" : "";
          return n.format("{3}{0:00} : {1:00} : {2:00}", e, Math.abs(n.truncate(r)), Math.abs(n.truncate(a)), s);
        } catch {
          return "";
        }
      }, R.formatHMS = function(t) {
        try {
          t += R.sign(t) * 1388888888889e-16;
          var e = n.truncate(t), r = (t - n.truncate(t)) * 60, a = (r - n.truncate(r)) * 60;
          return n.format("{0:00}h{1:00}m{2:00}s", e, Math.abs(n.truncate(r)), Math.abs(n.truncate(a)));
        } catch {
          return "";
        }
      }, R.parseRA = function(t, e) {
        t = n.trim(t).toLowerCase(), (t.indexOf("d") > -1 || t.indexOf("°") > -1) && (e = !0), (t.indexOf("h") > -1 || t.indexOf(":") > -1) && (e = !1);
        var r = R.parse(t) / (e ? 15 : 1);
        return Math.max(Math.min(r, 24), 0);
      }, R.parseDec = function(t) {
        var e = R.parse(t);
        return Math.max(Math.min(e, 90), -90);
      }, R.parse = function(t) {
        try {
          if (t = n.trim(t).toLowerCase(), t = n.replaceString(n.replaceString(n.replaceString(n.replaceString(n.replaceString(n.replaceString(t, "d ", "d"), "h ", "h"), "m ", "m"), "s ", "s"), "' ", "'"), '" ', '"'), at.stringContains(t, [":", " ", "d", "h", "m", "s", "'", '"', "°"])) {
            var e = 0, r = 0, a = 0, s = 0, l = at.splitString(t, [":", " ", "d", "h", "m", "s", "'", '"', "°"]);
            return l.length > 0 && (n.emptyString(l[0]) || (e = Math.abs(parseFloat(l[0])), s = parseFloat(l[0]) < 0 ? -1 : 1, l[0].indexOf("-") > -1 && (s = -1))), l.length > 1 && (n.emptyString(l[1]) || (r = parseFloat(l[1]))), l.length > 2 && (n.emptyString(l[2]) || (a = parseFloat(l[2]))), s || (s = 1), s * (e + r / 60 + a / 3600);
          } else {
            var h = 0;
            try {
              h = parseFloat(t);
            } catch {
              h = 0;
            }
            return h;
          }
        } catch {
          return 0;
        }
      }, R.fromRaDec = function(t, e) {
        return new R((t - 12) * 15 * R.RC, e * R.RC);
      }, R.fromLatLng = function(t, e) {
        return new R(e * R.RC, t * R.RC);
      }, R.dmsToDegrees = function(t, e, r) {
        return t + e / 60 + r / 3600;
      }, R.degreesToRadians = function(t) {
        return t * 0.0174532925199433;
      }, R.radiansToDegrees = function(t) {
        return t * 57.2957795130823;
      }, R.radiansToHours = function(t) {
        return t * 3.81971863420549;
      }, R.hoursToRadians = function(t) {
        return t * 0.261799387799149;
      }, R.hoursToDegrees = function(t) {
        return t * 15;
      }, R.degreesToHours = function(t) {
        return t / 15;
      }, R.PI = function() {
        return 3.14159265358979;
      }, R.mapTo0To360Range = function(t) {
        for (var e = t; e < 0; )
          e += 360;
        for (; e > 360; )
          e -= 360;
        return e;
      }, R.mapTo0To24Range = function(t) {
        for (var e = t; e < 0; )
          e += 24;
        for (; e > 24; )
          e -= 24;
        return e;
      }, R.meanObliquityOfEcliptic = function(t) {
        var e = (t - 2451545) / 3652500, r = e * e, a = r * e, s = a * e, l = s * e, h = l * e, u = h * e, _ = u * e, m = _ * e, p = m * e;
        return R.dmsToDegrees(23, 26, 21.448) - R.dmsToDegrees(0, 0, 4680.93) * e - R.dmsToDegrees(0, 0, 1.55) * r + R.dmsToDegrees(0, 0, 1999.25) * a - R.dmsToDegrees(0, 0, 51.38) * s - R.dmsToDegrees(0, 0, 249.67) * l - R.dmsToDegrees(0, 0, 39.05) * h + R.dmsToDegrees(0, 0, 7.12) * u + R.dmsToDegrees(0, 0, 27.87) * _ + R.dmsToDegrees(0, 0, 5.79) * m + R.dmsToDegrees(0, 0, 2.45) * p;
      }, R.j2000toGalactic = function(t, e) {
        var r = [Math.cos(t / 180 * Math.PI) * Math.cos(e / 180 * Math.PI), Math.sin(t / 180 * Math.PI) * Math.cos(e / 180 * Math.PI), Math.sin(e / 180 * Math.PI)];
        R._rotationMatrix == null && (R._rotationMatrix = new Array(3), R._rotationMatrix[0] = [-0.0548755604, -0.8734370902, -0.4838350155], R._rotationMatrix[1] = [0.4941094279, -0.44482963, 0.7469822445], R._rotationMatrix[2] = [-0.867666149, -0.1980763734, 0.4559837762]);
        for (var a = new Array(3), s = 0; s < 3; s++)
          a[s] = r[0] * R._rotationMatrix[s][0] + r[1] * R._rotationMatrix[s][1] + r[2] * R._rotationMatrix[s][2];
        var l = Math.atan2(a[1], a[0]);
        l < 0 && (l = l + 2 * Math.PI), l > 2 * Math.PI && (l = l - 2 * Math.PI);
        var h = Math.atan2(a[2], Math.sqrt(a[0] * a[0] + a[1] * a[1]));
        return [l / Math.PI * 180, h / Math.PI * 180];
      }, R.galacticTo3dDouble = function(t, e) {
        var r = R.galactictoJ2000(t, e);
        return R.raDecTo3dAu(r[0] / 15, r[1], 1);
      }, R.galactictoJ2000 = function(t, e) {
        var r = [Math.cos(t / 180 * Math.PI) * Math.cos(e / 180 * Math.PI), Math.sin(t / 180 * Math.PI) * Math.cos(e / 180 * Math.PI), Math.sin(e / 180 * Math.PI)];
        R._rotationMatrix == null && (R._rotationMatrix = new Array(3), R._rotationMatrix[0] = [-0.0548755604, -0.8734370902, -0.4838350155], R._rotationMatrix[1] = [0.4941094279, -0.44482963, 0.7469822445], R._rotationMatrix[2] = [-0.867666149, -0.1980763734, 0.4559837762]);
        for (var a = new Array(3), s = 0; s < 3; s++)
          a[s] = r[0] * R._rotationMatrix[0][s] + r[1] * R._rotationMatrix[1][s] + r[2] * R._rotationMatrix[2][s];
        var l = Math.atan2(a[1], a[0]);
        l < 0 && (l = l + 2 * Math.PI), l > 2 * Math.PI && (l = l - 2 * Math.PI);
        var h = Math.atan2(a[2], Math.sqrt(a[0] * a[0] + a[1] * a[1]));
        return [l / Math.PI * 180, h / Math.PI * 180];
      };
      var Xc = {
        distance: function(t) {
          var e = this.get_lat(), r = this.get_lng() * Math.cos(e * R.RC), a = t.get_lat(), s = t.get_lng() * Math.cos(a * R.RC);
          return Math.sqrt((e - a) * (e - a) + (r - s) * (r - s));
        },
        distance3d: function(t) {
          var e = R.geoTo3dDouble(t.get_lat(), t.get_lng()), r = R.geoTo3dDouble(this.get_lat(), this.get_lng()), a = L.subtractVectors(e, r);
          return a.length() / R.RC;
        },
        angle: function(t) {
          var e = this.get_lat(), r = this.get_lng() * Math.cos(e * R.RC), a = t.get_lat(), s = t.get_lng() * Math.cos(a * R.RC);
          return Math.atan2(a - e, s - r);
        },
        get_RA: function() {
          return (this._ascention / Math.PI * 12 + 12) % 24;
        },
        set_RA: function(t) {
          return this._ascention = t / 12 * Math.PI, t;
        },
        get_dec: function() {
          return this._declination / R.RC;
        },
        set_dec: function(t) {
          return this._declination = t * R.RC, t;
        },
        get_lat: function() {
          return this._declination / R.RC;
        },
        set_lat: function(t) {
          return this._declination = t * R.RC, t;
        },
        get_lng: function() {
          var t = this._ascention / R.RC;
          return t <= 180 ? t : -180 + (180 - t);
        },
        set_lng: function(t) {
          return this._ascention = t * R.RC + Math.PI * 2 % (Math.PI * 2), t;
        },
        get_alt: function() {
          return this._declination / R.RC;
        },
        set_alt: function(t) {
          return this._declination = t * R.RC, t;
        },
        get_az: function() {
          return this._ascention / R.RC;
        },
        set_az: function(t) {
          return this._ascention = t * R.RC, t;
        },
        toString: function() {
          return n.format("Lat: {0}, Lng: {1}", this.get_lat(), this.get_lng());
        }
      };
      function gi() {
        this.fx = 0, this.fy = 0, this.face = 0, Qi.call(this);
      }
      gi.create = function(t, e, r) {
        var a = new gi();
        return a.fx = t, a.fy = e, a.face = r, a;
      }, gi._fromHploc$1 = function(t) {
        var e = new gi(), r = t.z, a = t.phi, s = Math.abs(r), l = cr.fmodulo(a * gi._inv_halfpi$1, 4);
        if (s <= gi._twothird$1) {
          var h = 0.5 + l, u = r * 0.75, _ = h - u, m = h + u, p = _, b = m, S = p === b ? p | 4 : p < b ? p : b + 8;
          e.fx = cr.fmodulo(m, 1), e.fy = 1 - cr.fmodulo(_, 1), e.face = S;
        } else {
          var x = Math.min(3, n.truncate(l)), k = l - x, P;
          s < 0.99 || !t.have_sth ? P = Math.sqrt(3 * (1 - s)) : P = t.sth / Math.sqrt((1 + s) / 3);
          var _ = k * P, m = (1 - k) * P;
          _ >= 1 && (_ = 1), m >= 1 && (m = 1), r >= 0 ? (e.fx = 1 - m, e.fy = 1 - _, e.face = x) : (e.fx = _, e.fy = m, e.face = x + 8);
        }
        return e;
      }, gi.fromVector = function(t) {
        return gi._fromHploc$1(kn.create(t));
      };
      var qc = {
        toHploc: function() {
          var t = new kn(), e = Qi.jrll[this.face] - this.fx - this.fy, r, a;
          return e < 1 ? (r = e, a = r * r / 3, t.z = 1 - a, t.z > 0.99 && (t.sth = Math.sqrt(a * (2 - a)), t.have_sth = !0)) : e > 3 ? (r = 4 - e, a = r * r / 3, t.z = a - 1, t.z < -0.99 && (t.sth = Math.sqrt(a * (2 - a)), t.have_sth = !0)) : (r = 1, t.z = (2 - e) * 2 / 3), a = Qi.jpll[this.face] * r + this.fx - this.fy, a < 0 && (a += 8), a >= 8 && (a -= 8), t.phi = r < 1e-15 ? 0 : 0.5 * gi._halfpi$1 * a / r, t;
        },
        toVec3: function() {
          return this.toHploc().toVec3();
        }
      };
      function Jn(t, e, r, a, s) {
        if (this.ipix = 0, this.indexBuffer = new Array(4), this._vertexList$1 = null, this._nside$1 = 0, this._tileIndex$1 = 0, this._face$1 = 0, this._faceX$1 = 0, this._faceY$1 = 0, this._step$1 = 0, this._subDivided$1 = !1, this._catalogRows$1 = [], F.call(this), this.level = t, this.tileX = e, this.tileY = r, this.dataset = a, F.demEnabled = !1, t ? this._nside$1 = Math.pow(2, t + 1) : this._nside$1 = 4, s == null)
          this._face$1 = e * 4 + r, this.ipix = this._face$1;
        else {
          this.parent = s;
          var l = s;
          this._face$1 = l._face$1, this._tileIndex$1 = l._tileIndex$1 * 4 + r * 2 + e, this.ipix = this._face$1 * this._nside$1 * this._nside$1 / 4 + this._tileIndex$1, this._faceX$1 = l._faceX$1 * 2 + e, this._faceY$1 = l._faceY$1 * 2 + r;
        }
        this.isCatalogTile = n.keyExists(a.get_hipsProperties().get_properties(), "dataproduct_type") && a.get_hipsProperties().get_properties().dataproduct_type.toLowerCase() === "catalog", this._computeBoundingSphere$1();
      }
      var Yc = {
        get_URL: function() {
          return this._url$1 == null ? (this._url$1 = this._getUrl$1(this.dataset, this.level, this.tileX, this.tileY), this._url$1) : this._url$1;
        },
        _computeBoundingSphere$1: function() {
          this._setStep$1(), this.createGeometry(null);
          for (var t = new Array(this._vertexList$1.length), e = 0; e < this._vertexList$1.length; e++)
            t[e] = this._vertexList$1[e].position;
          this._calcSphere$1(t), this._setCorners$1();
        },
        createGeometry: function(t) {
          if (this._vertexList$1 != null)
            return !0;
          if (this._vertexList$1 = [], this._populateVertexList$1(this._vertexList$1, this._step$1), n.keyExists(this.dataset.get_hipsProperties().get_properties(), "hips_frame") && this.dataset.get_hipsProperties().get_properties().hips_frame === "galactic")
            for (var e = 0; e < this._vertexList$1.length; e++) {
              var r = this._vertexList$1[e];
              Jn._galacticMatrix$1.multiplyVector(r.position);
            }
          this.triangleCount = this._step$1 * this._step$1 / 2;
          var a = new Uint16Array(3 * this.triangleCount), s = a;
          if (!this._subDivided$1)
            try {
              this._vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this._vertexBuffer);
              for (var l = new Float32Array(this._vertexList$1.length * 5), h = l, u = 0, _ = n.enumerate(this._vertexList$1); _.moveNext(); ) {
                var r = _.current;
                u = this.addVertex(h, u, r);
              }
              F.prepDevice.bufferData(34962, l, 35044), u = 0;
              var m = this._vertexList$1.length / (4 * this._step$1);
              this._setIndexBufferForQuadrant$1(s, 0, 1), this._step$1 > 1 && (this._setIndexBufferForQuadrant$1(s, 0, 0), this._setIndexBufferForQuadrant$1(s, 1, 1), this._setIndexBufferForQuadrant$1(s, 1, 0));
            } catch {
            }
          return !0;
        },
        _setIndexBufferForQuadrant$1: function(t, e, r) {
          for (var a = 0, s = e * this._step$1 / 2; s < this._step$1 / 2 * (e + 1); s++)
            for (var l = r * this._step$1 / 2; l < this._step$1 / 2 * (r + 1); l++)
              t[a++] = s * (this._step$1 + 1) + l, t[a++] = 1 + s * (this._step$1 + 1) + l, t[a++] = this._step$1 + 1 + s * (this._step$1 + 1) + l, t[a++] = 1 + s * (this._step$1 + 1) + l, t[a++] = this._step$1 + 1 + s * (this._step$1 + 1) + l, t[a++] = this._step$1 + 2 + s * (this._step$1 + 1) + l;
          this._processIndexBuffer$1(t, e * 2 + r);
        },
        _getUrl$1: function(t, e, r, a) {
          var s = this._getHipsFileExtension$1(), l = -1;
          e ? l = this._face$1 * this._nside$1 * this._nside$1 / 4 + this._tileIndex$1 : l = this._face$1, new n.StringBuilder();
          var h = Math.floor(l / 1e4) * 1e4;
          return n.format(t.get_url(), e.toString(), h.toString(), l.toString() + s);
        },
        _getHipsFileExtension$1: function() {
          return this.dataset.get_extension().toLowerCase().indexOf("png") > -1 ? ".png" : this.dataset.get_extension().toLowerCase().indexOf("jpeg") > -1 || this.dataset.get_extension().toLowerCase().indexOf("jpg") > -1 ? ".jpg" : this.dataset.get_extension().toLowerCase().indexOf("tsv") > -1 ? ".tsv" : this.dataset.get_extension().toLowerCase().indexOf("fits") > -1 ? ".fits" : ".jpg";
        },
        isTileBigEnough: function(t) {
          if (this.dataset.get_dataSetType() === 1) {
            var e = 180 / (Math.pow(2, this.level) * 4);
            return t.get_fovScale() < e;
          } else {
            var e = 3600 / (Math.pow(2, this.level) * 4);
            return t.get_fovScale() < e;
          }
        },
        _boundaries$1: function(t, e, r) {
          var a = r * Math.pow(2, this.level), s = new Array(4), l = An.create(t + this._faceX$1 * r, e + this._faceY$1 * r, this._face$1), h = 0.5 / a, u = (l.ix + 0.5) / a, _ = (l.iy + 0.5) / a;
          return s[0] = gi.create(u + h, _ + h, l.face).toVec3(), s[1] = gi.create(u - h, _ + h, l.face).toVec3(), s[2] = gi.create(u - h, _ - h, l.face).toVec3(), s[3] = gi.create(u + h, _ - h, l.face).toVec3(), s;
        },
        _setCorners$1: function() {
          var t = An.create(this.tileX, this.tileY, this._face$1), e = 0.5 / this._nside$1, r = (t.ix + 0.5) / this._nside$1, a = (t.iy + 0.5) / this._nside$1;
          this.topLeft = gi.create(r + e, a + e, t.face).toVec3(), this.bottomLeft = gi.create(r - e, a + e, t.face).toVec3(), this.bottomRight = gi.create(r - e, a - e, t.face).toVec3(), this.topRight = gi.create(r + e, a - e, t.face).toVec3();
        },
        draw3D: function(t, e) {
          if (this.isCatalogTile)
            return this.drawCatalogTile(t, e), !0;
          this.renderedGeneration = F.currentRenderGeneration, F.tilesTouched++, this.inViewFrustum = !0;
          var r = !1;
          if (!this.readyToRender) {
            if (!this.errored)
              return vt.addTileToQueue(this), !1;
            if (this.errored && this.level < 3)
              r = !0;
            else
              return !1;
          }
          var a = this.triangleCount;
          F.trianglesRendered += a;
          for (var s = !1, l = !1, h = 0, u = 0; u < 2; u++)
            for (var _ = 0; _ < 2; _++)
              this.level < this.dataset.get_levels() ? (this.children[h] == null && (this.children[h] = vt.getTile(this.level + 1, _, u, this.dataset, this)), this.children[h].isTileInFrustum(t.get_frustum()) ? (this.inViewFrustum = !0, this.children[h].isTileBigEnough(t) || r ? (this.renderChildPart[h].set_targetState(!this.children[h].draw3D(t, e)), this.renderChildPart[h].get_targetState() && (l = !0)) : this.renderChildPart[h].set_targetState(!0)) : this.renderChildPart[h].set_targetState(this.renderChildPart[h].set_state(!1))) : this.renderChildPart[h].set_state(!0), this.renderChildPart[h].get_state() && (s = !0), h++;
          if ((l || s) && (this.renderedAtOrBelowGeneration = F.currentRenderGeneration, this.parent != null && (this.parent.renderedAtOrBelowGeneration = this.renderedAtOrBelowGeneration)), !s)
            return !0;
          if (!this.createGeometry(t))
            return !1;
          if (r)
            return !0;
          F.tilesInView++;
          for (var m = 0; m < 4; m++)
            this.renderChildPart[m].get_targetState() && this.renderPart(t, m, e / 100, !1);
          return !0;
        },
        drawCatalogTile: function(t, e) {
          this.renderedGeneration = F.currentRenderGeneration, F.tilesTouched++, this.inViewFrustum = !0;
          var r = !1;
          if (!this.readyToRender) {
            if (!this.errored) {
              vt.addTileToQueue(this);
              return;
            }
            if (this.errored && this.level < 3)
              r = !0;
            else
              return;
          }
          for (var a = !1, s = 0, l = 0; l < 2; l++)
            for (var h = 0; h < 2; h++)
              this.level < this.dataset.get_levels() && (this.children[s] == null && (this.children[s] = vt.getTile(this.level + 1, h, l, this.dataset, this)), this.children[s].isTileInFrustum(t.get_frustum()) ? (this.inViewFrustum = !0, a = !0, this.children[s].isTileBigEnough(t) || r ? this.children[s].drawCatalogTile(t, e) : this.children[s].removeCatalogTile()) : this.children[s].removeCatalogTile()), s++;
          !this.level && !a && !r ? this.removeCatalogTile() : a && (F.tilesInView++, this._addCatalogTile$1());
        },
        removeCatalogTile: function() {
          this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().removeTileRows(this.get_key(), this._catalogRows$1);
        },
        _addCatalogTile$1: function() {
          this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().addTileRows(this.get_key(), this._catalogRows$1);
        },
        _extractCatalogTileRows$1: function() {
          for (var t = !1, e = n.enumerate(this._catalogData$1.getText().split(`
`)); e.moveNext(); ) {
            var r = e.current;
            if (!n.startsWith(r, "#") && !t) {
              t = !0;
              continue;
            }
            if (!n.startsWith(r, "#")) {
              var a = Oe.splitString(r, this.dataset.get_hipsProperties().get_catalogSpreadSheetLayer().get__table().delimiter);
              this._catalogRows$1.push(a);
            }
          }
        },
        getDataInView: function(t, e, r) {
          if (!this.readyToRender) {
            if (this.errored) {
              if (this.level >= 3)
                return !0;
            } else if (this.requestImage(), e)
              return !1;
          }
          for (var a = !0, s = !1, l = 0, h = 0; h < 2; h++)
            for (var u = 0; u < 2; u++)
              this.level < this.dataset.get_levels() && (this.children[l] == null && (this.children[l] = vt.getTile(this.level + 1, u, h, this.dataset, this)), this.children[l].isTileInFrustum(t.get_frustum()) && (s = !0, a = a && this.children[l].getDataInView(t, e, r))), l++;
          return s && r.addTileRows(this.get_key(), this._catalogRows$1), a && !this.downloading;
        },
        _setStep$1: function() {
          if (this.isCatalogTile)
            this._step$1 = 2;
          else
            switch (this.level) {
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
                this._step$1 = 16;
                break;
              case 5:
                this._step$1 = 8;
                break;
              case 6:
                this._step$1 = 4;
                break;
              default:
                this._step$1 = 2;
                break;
            }
        },
        requestImage: function() {
          this.isCatalogTile ? !this.downloading && !this.readyToRender && (this.downloading = !0, this._catalogData$1 = new Ai(this.get_URL()), this._catalogData$1.onStateChange = n.bind("_loadCatalogData$1", this), this._catalogData$1.send()) : F.prototype.requestImage.call(this);
        },
        _loadCatalogData$1: function() {
          this._catalogData$1.get_state() === 2 ? (this.requestPending = !1, this.downloading = !1, this.errored = !0, vt.removeFromQueue(this.get_key(), !0)) : this._catalogData$1.get_state() === 1 && (this._extractCatalogTileRows$1(), this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = !0, this.requestPending = !1, vt.removeFromQueue(this.get_key(), !0));
        },
        getIndexBuffer: function(t, e) {
          return this.indexBuffer[t];
        },
        _calcSphere$1: function(t) {
          var e = Rr.findEnclosingSphere(t);
          this.sphereCenter = e.center, this.sphereRadius = e.radius;
        },
        isPointInTile: function(t, e) {
          if (!this.level || this.level === 1 && (e >= 0 && e <= 90 && !this.tileX && this.tileY === 1 || e > 90 && e <= 180 && this.tileX === 1 && this.tileY === 1 || e < 0 && e >= -90 && !this.tileX && !this.tileY || e < -90 && e >= -180 && this.tileX === 1 && !this.tileY))
            return !0;
          var r = R.geoTo3dDouble(t, e), a = this._isLeftOfHalfSpace$1(this.topLeft, this.topRight, r), s = this._isLeftOfHalfSpace$1(this.topRight, this.bottomRight, r), l = this._isLeftOfHalfSpace$1(this.bottomRight, this.bottomLeft, r), h = this._isLeftOfHalfSpace$1(this.bottomLeft, this.topLeft, r);
          return !!(a && s && l && h);
        },
        _isLeftOfHalfSpace$1: function(t, e, r) {
          t.normalize(), e.normalize();
          var a = L.cross(t, e), s = L.dot(a, r);
          return s > 0;
        },
        getSurfacePointAltitude: function(t, e, r) {
          if (this.level < F.lastDeepestLevel)
            for (var a = n.enumerate(this.children); a.moveNext(); ) {
              var s = a.current;
              if (s != null && s.isPointInTile(t, e)) {
                var l = s.getSurfacePointAltitude(t, e, r);
                if (l)
                  return l;
                break;
              }
            }
          return this._getAltitudeFromLatLng$1(t, e, r);
        },
        _getAltitudeFromLatLng$1: function(t, e, r) {
          var a = R.geoTo3dDouble(t, e), s = xr.getUVFromInnerPoint(this.topLeft, this.topRight, this.bottomLeft, this.bottomRight, a), l = Math.max(0, Math.min(16, s.x * 16)), h = Math.max(0, Math.min(16, s.y * 16)), u = Math.max(0, Math.min(15, n.truncate(s.x * 16))), _ = Math.max(0, Math.min(15, n.truncate(s.y * 16))), m = l - u, p = h - _;
          if (this.demArray != null) {
            var b = this.demArray[u + 17 * _], S = this.demArray[u + 1 + 17 * _], x = this.demArray[u + 17 * (_ + 1)], k = this.demArray[u + 1 + 17 * (_ + 1)], P = b * (1 - m) + m * S, I = x * (1 - m) + m * k, D = P * (1 - p) + p * I;
            return D / (r ? 1 : this.get__demScaleFactor());
          }
          return this.demAverage / (r ? 1 : this.get__demScaleFactor());
        },
        _processIndexBuffer$1: function(t, e) {
          this.indexBuffer[e] = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34963, this.indexBuffer[e]), F.prepDevice.bufferData(34963, t, 35044);
        },
        cleanUp: function(t) {
          F.prototype.cleanUp.call(this, t), this._returnBuffers$1(), this._subDivided$1 = !1;
        },
        _returnBuffers$1: function() {
          this._vertexList$1 != null && (this._vertexList$1 = null);
        },
        _populateVertexList$1: function(t, e) {
          for (var r = 0; r < e; r += 2)
            for (var a = 0; a < e; a += 2) {
              var s = this._boundaries$1(a, r, e);
              t[r * (e + 1) + a] = dt.createPos(s[2], 1 / e * r, 1 / e * a), t[r * (e + 1) + a + 1] = dt.createPos(s[3], 1 / e * r, 1 / e + 1 / e * a), t[(r + 1) * (e + 1) + a] = dt.createPos(s[1], 1 / e + 1 / e * r, 1 / e * a), t[(r + 1) * (e + 1) + a + 1] = dt.createPos(s[0], 1 / e + 1 / e * r, 1 / e + 1 / e * a), a + 2 >= e && e > 1 && (a = e - 1, s = this._boundaries$1(a, r, e), t[r * (e + 1) + e] = dt.createPos(s[3], 1 / e * r, 1 / e + 1 / e * a), t[(r + 1) * (e + 1) + e] = dt.createPos(s[0], 1 / e + 1 / e * r, 1 / e + 1 / e * a));
            }
          e > 1 && this._vertexOfLastRow$1(t, e);
        },
        _vertexOfLastRow$1: function(t, e) {
          for (var r = e - 1, a = 0; a < e; a += 2) {
            var s = this._boundaries$1(a, r, e);
            t[(r + 1) * (e + 1) + a] = dt.createPos(s[1], 1 / e + 1 / e * r, 1 / e * a), t[(r + 1) * (e + 1) + a + 1] = dt.createPos(s[0], 1 / e + 1 / e * r, 1 / e + 1 / e * a), a + 2 >= e && (a = e - 1, s = this._boundaries$1(a, r, e), t[(r + 1) * (e + 1) + e] = dt.createPos(s[0], 1 / e + 1 / e * r, 1 / e + 1 / e * a));
          }
        }
      };
      function bi(t, e, r, a) {
        this.errored = !1, this.numAxis = 0, this.histogramMaxCount = 0, this.sourceBlob = null, this.header = {}, this.position = 0, this.bufferSize = 1, this._parseSuccessful$1 = !1, Kn.call(this), this.dataset = t, this.fitsProperties = t.get_fitsProperties(), this._callBack$1 = a, this.filename = e, r != null ? this._readFromBlob$1(r) : this.getFile(e);
      }
      var Zc = {
        getFile: function(t) {
          this._webFile$1 = new Ai(t), this._webFile$1.responseType = "blob", this._webFile$1.onStateChange = n.bind("fileStateChange", this), this._webFile$1.send();
        },
        fileStateChange: function() {
          if (this._webFile$1.get_state() === 2)
            this.errored = !0, this._callBack$1 != null && this._callBack$1(this);
          else if (this._webFile$1.get_state() === 1) {
            var t = this._webFile$1.getBlob();
            this._readFromBlob$1(t);
          }
        },
        _readFromBlob$1: function(t) {
          var e = this;
          this.sourceBlob = t;
          var r = new FileReader();
          r.onloadend = function(a) {
            e.readFromBin(new DataView(r.result)), e.errored = !e._parseSuccessful$1, e._callBack$1 != null && e._callBack$1(e);
          }, r.readAsArrayBuffer(t);
        },
        _readByteString$1: function(t, e) {
          for (var r = "", a = 0; a < e; a++)
            r += String.fromCharCode(t.getUint8(this.position)), this.position++;
          return r;
        },
        _validateFitsSimple$1: function(t) {
          var e = this._readByteString$1(t, 8), r = n.trimEnd(e);
          return this.position -= 8, r.toUpperCase() === "SIMPLE";
        },
        readFromBin: function(t) {
          if (!this._validateFitsSimple$1(t)) {
            console.log("The requested file is not a valid FITS file.");
            return;
          }
          for (var e = !1; !e; )
            for (var r = 0; r < 36; r++) {
              var a = this._readByteString$1(t, 80);
              if (!e) {
                var s = n.trimEnd(a.substring(0, 8)), l = a.substring(10).split("/");
                if (s.toUpperCase() === "END") {
                  for (e = !0, r++, a = this._readByteString$1(t, 80); n.whitespace(a); )
                    r++, a = this._readByteString$1(t, 80);
                  s = n.trimEnd(a.substring(0, 8)), s.toUpperCase() === "XTENSION" ? e = !1 : this.position -= 80;
                } else
                  this._addKeyword$1(s, l);
              }
            }
          if (!e) {
            console.log("Unable to parse requested FITS file.");
            return;
          }
          this.numAxis = parseInt(this.header.NAXIS), n.keyExists(this.header, "BLANK") && (this.fitsProperties.blankValue = parseFloat(this.header.BLANK), this.fitsProperties.containsBlanks = !0), n.keyExists(this.header, "BZERO") && (this.fitsProperties.bZero = parseFloat(this.header.BZERO)), n.keyExists(this.header, "BSCALE") && (this.fitsProperties.bScale = parseFloat(this.header.BSCALE)), this.axisSize = new Array(this.numAxis);
          for (var h = 0; h < this.numAxis; h++)
            this.axisSize[h] = parseInt(this.header[n.format("NAXIS{0}", h + 1)]), this.bufferSize *= this.axisSize[h];
          var u = parseInt(this.header.BITPIX);
          this.readDataUnit(t, u), this.numAxis > 1 && (this.sizeX = this.axisSize[0], this.sizeY = this.axisSize[1], this.histogram = this.computeHistogram(256), this.histogramMaxCount = this.histogram[256]), this.computeWcs(), this._parseSuccessful$1 = !0;
        },
        _addKeyword$1: function(t, e) {
          if (t !== "CONTINUE" && t !== "COMMENT" && t !== "HISTORY" && !n.emptyString(t))
            try {
              n.keyExists(this.header, t) ? this.header[t] = n.trim(e[0]) : this.header[t.toUpperCase()] = n.trim(e[0]);
            } catch {
            }
        },
        readDataUnit: function(t, e) {
          switch (this.dataUnit = new Float32Array(this.bufferSize), e) {
            case -64:
              this.readDataUnitFloat64(t);
              break;
            case -32:
              this.readDataUnitFloat32(t);
              break;
            case 8:
              this.readDataUnitUint8(t);
              break;
            case 16:
              this.readDataUnitInt16(t);
              break;
            case 32:
              this.readDataUnitInt32(t);
              break;
            case 64:
              console.log("64 bit integer FITS are not yet supported");
              break;
          }
        },
        readDataUnitFloat64: function(t) {
          for (var e = 0; this.position < t.byteLength; ) {
            this.dataUnit[e] = t.getFloat64(this.position, !1);
            var r = this.dataUnit[e] * this.fitsProperties.bScale + this.fitsProperties.bZero;
            this.fitsProperties.minVal > r && (this.fitsProperties.minVal = r), this.fitsProperties.maxVal < r && (this.fitsProperties.maxVal = r), e++, this.position += 8;
          }
          this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
        },
        readDataUnitFloat32: function(t) {
          for (var e = 0; this.position < t.byteLength; ) {
            this.dataUnit[e] = t.getFloat32(this.position, !1);
            var r = this.dataUnit[e] * this.fitsProperties.bScale + this.fitsProperties.bZero;
            this.fitsProperties.minVal > r && (this.fitsProperties.minVal = r), this.fitsProperties.maxVal < r && (this.fitsProperties.maxVal = r), e++, this.position += 4;
          }
          this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
        },
        readDataUnitUint8: function(t) {
          for (var e = 0; this.position < t.byteLength; )
            this.dataUnit[e] = t.getUint8(this.position), this.fitsProperties.minVal > this.dataUnit[e] && (this.fitsProperties.minVal = this.dataUnit[e]), this.fitsProperties.maxVal < this.dataUnit[e] && (this.fitsProperties.maxVal = this.dataUnit[e]), e++, this.position += 1;
          this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
        },
        readDataUnitInt16: function(t) {
          for (var e = 0; this.position < t.byteLength; )
            this.dataUnit[e] = t.getInt16(this.position, !1), this.fitsProperties.minVal > this.dataUnit[e] && (this.fitsProperties.minVal = this.dataUnit[e]), this.fitsProperties.maxVal < this.dataUnit[e] && (this.fitsProperties.maxVal = this.dataUnit[e]), e++, this.position += 2;
          this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
        },
        readDataUnitInt32: function(t) {
          for (var e = 0; this.position < t.byteLength; )
            this.dataUnit[e] = t.getInt32(this.position, !1), this.fitsProperties.minVal > this.dataUnit[e] && (this.fitsProperties.minVal = this.dataUnit[e]), this.fitsProperties.maxVal < this.dataUnit[e] && (this.fitsProperties.maxVal = this.dataUnit[e]), e++, this.position += 4;
          this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
        },
        computeWcs: function() {
          n.keyExists(this.header, "CROTA2") && (this.rotation = parseFloat(n.trim(this.header.CROTA2)), this.hasRotation = !0), n.keyExists(this.header, "CDELT1") && (this.scaleX = parseFloat(n.trim(this.header.CDELT1)), n.keyExists(this.header, "CDELT2") && (this.scaleY = parseFloat(n.trim(this.header.CDELT2)), this.hasScale = !0)), n.keyExists(this.header, "CRPIX1") && (this.referenceX = parseFloat(n.trim(this.header.CRPIX1)) - 0.5, n.keyExists(this.header, "CRPIX2") && (this.referenceY = parseFloat(n.trim(this.header.CRPIX2)) - 0.5, this.hasPixel = !0));
          var t = !1, e = !1;
          if (n.keyExists(this.header, "CTYPE1") && (this.header.CTYPE1.indexOf("GLON-") > -1 && (t = !0, e = !0), this.header.CTYPE2.indexOf("GLAT-") > -1 && (t = !0, e = !0), this.header.CTYPE1.indexOf("-TAN") > -1 && (e = !0), this.header.CTYPE1.indexOf("-SIN") > -1 && (e = !0)), !e)
            throw new Error("Only TAN projected images are supported: ");
          if (this.hasSize = !0, n.keyExists(this.header, "CRVAL1") && (this.centerX = parseFloat(n.trim(this.header.CRVAL1)), n.keyExists(this.header, "CRVAL2") && (this.centerY = parseFloat(n.trim(this.header.CRVAL2)), this.hasLocation = !0)), t) {
            var r = R.galactictoJ2000(this.centerX, this.centerY);
            this.centerX = r[0], this.centerY = r[1];
          }
          n.keyExists(this.header, "CD1_1") && n.keyExists(this.header, "CD1_2") && n.keyExists(this.header, "CD2_1") && n.keyExists(this.header, "CD2_2") && (this.cd1_1 = parseFloat(n.trim(this.header.CD1_1)), this.cd1_2 = parseFloat(n.trim(this.header.CD1_2)), this.cd2_1 = parseFloat(n.trim(this.header.CD2_1)), this.cd2_2 = parseFloat(n.trim(this.header.CD2_2)), this.hasRotation || this.calculateRotationFromCD(), this.hasScale || this.calculateScaleFromCD(), this.hasScale = !0, this.hasRotation = !0), this.set_validWcs(this.hasScale && this.hasRotation && this.hasPixel && this.hasLocation);
        },
        applyDisplaySettings: function() {
          n.keyExists(this.header, "DATAMIN") && (this.fitsProperties.lowerCut = parseFloat(n.trim(this.header.DATAMIN)), this.fitsProperties.minVal = this.fitsProperties.lowerCut), n.keyExists(this.header, "DATAMAX") && (this.fitsProperties.upperCut = parseFloat(n.trim(this.header.DATAMAX)), this.fitsProperties.maxVal = this.fitsProperties.upperCut), n.keyExists(this.header, "PXCUTMIN") && (this.fitsProperties.lowerCut = parseFloat(n.trim(this.header.PXCUTMIN))), n.keyExists(this.header, "PXCUTMAX") && (this.fitsProperties.upperCut = parseFloat(n.trim(this.header.PXCUTMAX)));
        },
        computeHistogram: function(t) {
          for (var e = new Array(t + 1), r = 0; r < t + 1; r++)
            e[r] = 0;
          this.populateHistogram(e);
          for (var a = 1, s = n.enumerate(e); s.moveNext(); ) {
            var l = s.current;
            l > a && (a = l);
          }
          return e[t] = a, e;
        },
        populateHistogram: function(t) {
          for (var e = t.length, r = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, a = 0; a < this.dataUnit.length; a++)
            this.dataUnit[a] !== bi.naN && t[Math.min(e - 1, n.truncate((this.fitsProperties.bZero + this.fitsProperties.bScale * this.dataUnit[a] - this.fitsProperties.minVal) / r))]++;
        },
        drawHistogram: function(t) {
          t.clearRect(0, 0, 255, 150), t.beginPath(), t.strokeStyle = "rgba(255,255,255,255)";
          for (var e = Math.log(this.histogramMaxCount), r = 0; r < this.histogram.length; r++) {
            var a = Math.log(this.histogram[r]) / e;
            a < 0 && (a = 0), t.moveTo(r, 150), t.lineTo(r, 150 - a * 150), t.stroke();
          }
        }
      };
      function As() {
        this._fill$1 = !1, this._skyRelative$1 = !1, this._strokeWidth$1 = 1, this._radius$1 = 10, this._lineColor$1 = ot.get_white(), this._fillColor$1 = ot.get_white(), this._ra$1 = 0, this._dec$1 = 0, Dt.call(this);
      }
      var jc = {
        get_fill: function() {
          return this._fill$1;
        },
        set_fill: function(t) {
          return Dt.batchDirty = !0, this._fill$1 = t, t;
        },
        get_skyRelative: function() {
          return this._skyRelative$1;
        },
        set_skyRelative: function(t) {
          return Dt.batchDirty = !0, this._skyRelative$1 = t, t;
        },
        get_lineWidth: function() {
          return this._strokeWidth$1;
        },
        set_lineWidth: function(t) {
          return Dt.batchDirty = !0, this._strokeWidth$1 = t, t;
        },
        get_radius: function() {
          return this._radius$1;
        },
        set_radius: function(t) {
          return Dt.batchDirty = !0, this._radius$1 = t, t;
        },
        get_lineColor: function() {
          return this._lineColor$1.toString();
        },
        set_lineColor: function(t) {
          return Dt.batchDirty = !0, this._lineColor$1 = B.load(t), t;
        },
        get_fillColor: function() {
          return this._fillColor$1.toString();
        },
        set_fillColor: function(t) {
          return Dt.batchDirty = !0, this._fillColor$1 = B.fromName(t), t;
        },
        setCenter: function(t, e) {
          Dt.batchDirty = !0, this._ra$1 = t / 15, this._dec$1 = e, this.center = R.raDecTo3d(this._ra$1, this._dec$1);
        },
        draw: function(t) {
          var e = !0, r = this._radius$1;
          this._skyRelative$1 && (r /= t.get_fovScale() / 3600);
          var a = t.WVP.transform(this.center);
          if (a.z < 0 && (e = !1), L.dot(t.get_viewPoint(), this.center) < 0.55 && (e = !1), t.gl != null) {
            if (Dt.batchDirty || this.annotationDirty) {
              for (var s = L.create(0, 1, 0), l = L.cross(this.center, s), h = L.cross(this.center, l), u = this._radius$1 / 44, _ = 72, m = Math.PI * 2 / _, p = [], b = 0; b <= _; b++) {
                var S = Math.cos(b * m) * u, x = Math.sin(b * m) * u;
                p.push(L.create(this.center.x + S * l.x + x * h.x, this.center.y + S * l.y + x * h.y, this.center.z + S * l.z + x * h.z));
              }
              if (this._strokeWidth$1 > 0 && p.length > 1)
                for (var k = 0; k < p.length - 1; k++)
                  Dt.lineList.addLine(p[k], p[k + 1], this._lineColor$1, new ve(0, 1));
              if (this._fill$1) {
                var P = L.create(this.center.x, this.center.y, this.center.z);
                p.splice(0, 0, P), Dt.triangleFanPointList.addShape(p, this._fillColor$1, new ve(0, 1));
              }
              this.annotationDirty = !1;
            }
          } else if (e) {
            var I = t.device;
            I.save(), I.globalAlpha = this.get_opacity(), I.beginPath(), I.arc(a.x, a.y, r, 0, Math.PI * 2, !0), I.lineWidth = this._strokeWidth$1, I.fillStyle = this._fillColor$1.toString(), this._fill$1 && I.fill(), I.globalAlpha = 1, I.strokeStyle = this._lineColor$1.toString(), I.stroke(), I.restore();
          }
        },
        hitTest: function(t, e, r, a, s) {
          if (n.emptyString(this.get_id()))
            return !1;
          var l = this._radius$1;
          return this._skyRelative$1 || (l *= t.get_fovScale() / 3600), Dt.separation(e, r, this._ra$1, this._dec$1) < l;
        }
      };
      function ks() {
        this._points$1 = [], this._fill$1 = !1, this._strokeWidth$1 = 1, this._lineColor$1 = ot.get_white(), this._fillColor$1 = ot.get_white(), Dt.call(this);
      }
      var Kc = {
        addPoint: function(t, e) {
          Dt.batchDirty = !0, this._points$1.push(R.raDecTo3d(t / 15, e));
        },
        get_fill: function() {
          return this._fill$1;
        },
        set_fill: function(t) {
          return Dt.batchDirty = !0, this._fill$1 = t, t;
        },
        get_lineWidth: function() {
          return this._strokeWidth$1;
        },
        set_lineWidth: function(t) {
          return Dt.batchDirty = !0, this._strokeWidth$1 = t, t;
        },
        get_lineColor: function() {
          return this._lineColor$1.toString();
        },
        set_lineColor: function(t) {
          return Dt.batchDirty = !0, this._lineColor$1 = B.fromName(t), t;
        },
        get_fillColor: function() {
          return this._fillColor$1.toString();
        },
        set_fillColor: function(t) {
          return Dt.batchDirty = !0, this._fillColor$1 = B.fromName(t), t;
        },
        draw: function(t) {
          if (t.gl != null) {
            if (Dt.batchDirty || this.annotationDirty) {
              var e = this._points$1;
              if (this._strokeWidth$1 > 0 && this._points$1.length > 1) {
                for (var r = 0; r < this._points$1.length - 1; r++)
                  Dt.lineList.addLine(e[r], e[r + 1], this._lineColor$1, new ve(0, 1));
                Dt.lineList.addLine(e[this._points$1.length - 1], e[0], this._lineColor$1, new ve(0, 1));
              }
              if (this._fill$1)
                for (var a = gn.tesselateSimplePoly(e), r = 0; r < a.length; r += 3)
                  Dt.triangleList.addSubdividedTriangles(e[a[r]], e[a[r + 1]], e[a[r + 2]], this._fillColor$1, new ve(0, 1), 2);
              this.annotationDirty = !1;
            }
          } else {
            var s = t.device;
            s.save(), s.globalAlpha = this.get_opacity(), s.beginPath();
            for (var l = !0, h = n.enumerate(this._points$1); h.moveNext(); ) {
              var u = h.current, _ = t.WVP.transform(u);
              if (_.z < 0) {
                s.restore();
                return;
              }
              if (L.dot(t.get_viewPoint(), u) < 0.75) {
                s.restore();
                return;
              }
              l ? (l = !1, s.moveTo(_.x, _.y)) : s.lineTo(_.x, _.y);
            }
            s.closePath(), s.lineWidth = this._strokeWidth$1, this._fill$1 && (s.fillStyle = this._fillColor$1.toString(), s.fill()), s.strokeStyle = this._lineColor$1.toString(), s.globalAlpha = 1, s.stroke(), s.restore();
          }
        }
      };
      function Is() {
        this._points$1 = [], this._strokeWidth$1 = 1, this._lineColor$1 = ot.get_white(), Dt.call(this);
      }
      var Jc = {
        addPoint: function(t, e) {
          Dt.batchDirty = !0, this._points$1.push(R.raDecTo3d(t / 15, e));
        },
        get_lineWidth: function() {
          return this._strokeWidth$1;
        },
        set_lineWidth: function(t) {
          return Dt.batchDirty = !0, this._strokeWidth$1 = t, t;
        },
        get_lineColor: function() {
          return this._lineColor$1.toString();
        },
        set_lineColor: function(t) {
          return Dt.batchDirty = !0, this._lineColor$1 = B.fromName(t), t;
        },
        draw: function(t) {
          if (t.gl != null) {
            if (Dt.batchDirty || this.annotationDirty) {
              var e = this._points$1;
              if (this._strokeWidth$1 > 0)
                for (var r = 0; r < this._points$1.length - 1; r++)
                  Dt.lineList.addLine(e[r], e[r + 1], this._lineColor$1, new ve(0, 1));
              this.annotationDirty = !1;
            }
          } else {
            var a = t.device;
            a.save(), a.globalAlpha = this.get_opacity();
            for (var s = !0, l = n.enumerate(this._points$1); l.moveNext(); ) {
              var h = l.current, u = t.WVP.transform(h);
              if (u.z < 0) {
                a.restore();
                return;
              }
              if (L.dot(t.get_viewPoint(), h) < 0.75) {
                a.restore();
                return;
              }
              s ? (s = !1, a.beginPath(), a.moveTo(u.x, u.y)) : a.lineTo(u.x, u.y);
            }
            a.lineWidth = this._strokeWidth$1, a.strokeStyle = this._lineColor$1.toString(), a.stroke(), a.restore();
          }
        }
      };
      function Wn() {
        this._tileDegrees$1 = 0, this._topDown$1 = !0, this._subDivisionLevel$1 = 1, F.call(this);
      }
      Wn.create = function(t, e, r, a, s) {
        var l = new Wn();
        return l.parent = s, l.level = t, l.tileX = e, l.tileY = r, l.dataset = a, l._topDown$1 = !a.get_bottomsUp(), l.computeBoundingSphere(), l;
      };
      var Wc = {
        computeBoundingSphere: function() {
          if (!this._topDown$1) {
            this.computeBoundingSphereBottomsUp();
            return;
          }
          this._tileDegrees$1 = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level);
          var t = 90 - this.tileY * this._tileDegrees$1, e = 90 - (this.tileY + 1) * this._tileDegrees$1, r = this.tileX * this._tileDegrees$1 - 180, a = (this.tileX + 1) * this._tileDegrees$1 - 180, s = (t + e) / 2, l = (r + a) / 2;
          this.sphereCenter = this.geoTo3d(s, l, !1), this.topLeft = this.geoTo3d(t, r, !1), this.bottomRight = this.geoTo3d(e, a, !1), this.topRight = this.geoTo3d(t, a, !1), this.bottomLeft = this.geoTo3d(e, r, !1);
          var h = this.geoTo3d(t, r, !1);
          h.subtract(this.sphereCenter), this.sphereRadius = h.length(), this._tileDegrees$1 = a - r;
        },
        computeBoundingSphereBottomsUp: function() {
          var t = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), e = -90 + (this.tileY + 1) * t, r = -90 + this.tileY * t, a = this.tileX * t - 180, s = (this.tileX + 1) * t - 180, l = (e + r) / 2, h = (a + s) / 2;
          this.sphereCenter = this.geoTo3d(l, h, !1), this.topLeft = this.geoTo3d(e, a, !1), this.bottomRight = this.geoTo3d(r, s, !1), this.topRight = this.geoTo3d(e, s, !1), this.bottomLeft = this.geoTo3d(r, a, !1);
          var u = this.topLeft;
          u.subtract(this.sphereCenter), this.sphereRadius = u.length(), t = s - a;
        },
        createGeometry: function(t) {
          F.prototype.createGeometry.call(this, t), t.gl == null ? (!this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1) && (this._subDivisionLevel$1 = Math.max(2, (4 - this.level) * 2)) : this._subDivisionLevel$1 = 32;
          try {
            for (var e = 0; e < 4; e++)
              this._renderTriangleLists[e] = [];
            if (!this._topDown$1)
              return this._createGeometryBottomsUp$1(t);
            var r, a, s = 0, l = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), h = 90 - this.tileY * l, u = 90 - (this.tileY + 1) * l, _ = this.tileX * l - 180, m = (this.tileX + 1) * l - 180, p = m - _, b = u - h;
            this.topLeft = this.geoTo3d(h, _, !1), this.bottomRight = this.geoTo3d(u, m, !1), this.topRight = this.geoTo3d(h, m, !1), this.bottomLeft = this.geoTo3d(u, _, !1);
            var S = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1)), x, k, P = 1 / this._subDivisionLevel$1;
            for (k = 0; k <= this._subDivisionLevel$1; k++)
              for (k !== this._subDivisionLevel$1 ? r = h + P * b * k : r = u, x = 0; x <= this._subDivisionLevel$1; x++)
                x !== this._subDivisionLevel$1 ? a = _ + P * p * x : a = m, s = k * (this._subDivisionLevel$1 + 1) + x, S[s] = dt.createPos(this.geoTo3d(r, a, !1), x * P, k * P);
            this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
            var I = this._subDivisionLevel$1 / 2, D = 0;
            if (t.gl == null)
              for (var G = 0; G < 2; G++)
                for (var U = 0; U < 2; U++) {
                  s = 0;
                  for (var Y = I * G; Y < I * (G + 1); Y++)
                    for (var j = I * U; j < I * (U + 1); j++) {
                      var K, Q, J;
                      K = S[Y * (this._subDivisionLevel$1 + 1) + j], Q = S[(Y + 1) * (this._subDivisionLevel$1 + 1) + j], J = S[Y * (this._subDivisionLevel$1 + 1) + (j + 1)], this._renderTriangleLists[D].push(Bt.create(K, J, Q, this.texture, this.level)), K = S[Y * (this._subDivisionLevel$1 + 1) + (j + 1)], Q = S[(Y + 1) * (this._subDivisionLevel$1 + 1) + j], J = S[(Y + 1) * (this._subDivisionLevel$1 + 1) + (j + 1)], this._renderTriangleLists[D].push(Bt.create(K, J, Q, this.texture, this.level));
                    }
                  D++;
                }
            else {
              this._vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this._vertexBuffer);
              var nt = new Float32Array(S.length * 5), W = nt;
              s = 0;
              for (var ct = n.enumerate(S); ct.moveNext(); ) {
                var rt = ct.current;
                s = this.addVertex(W, s, rt);
              }
              F.prepDevice.bufferData(34962, nt, 35044);
              for (var G = 0; G < 2; G++)
                for (var U = 0; U < 2; U++) {
                  var kt = new Uint16Array(this.triangleCount * 3), At = kt;
                  s = 0;
                  for (var Y = I * G; Y < I * (G + 1); Y++)
                    for (var j = I * U; j < I * (U + 1); j++)
                      At[s++] = Y * (this._subDivisionLevel$1 + 1) + j, At[s++] = (Y + 1) * (this._subDivisionLevel$1 + 1) + j, At[s++] = Y * (this._subDivisionLevel$1 + 1) + (j + 1), At[s++] = Y * (this._subDivisionLevel$1 + 1) + (j + 1), At[s++] = (Y + 1) * (this._subDivisionLevel$1 + 1) + j, At[s++] = (Y + 1) * (this._subDivisionLevel$1 + 1) + (j + 1);
                  this._indexBuffers[D] = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34963, this._indexBuffers[D]), F.prepDevice.bufferData(34963, kt, 35044), D++;
                }
            }
          } catch {
          }
          return !0;
        },
        _createGeometryBottomsUp$1: function(t) {
          var e, r, a = 0, s = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), l = -90 + (this.tileY + 1) * s, h = -90 + this.tileY * s, u = this.tileX * s - 180, _ = (this.tileX + 1) * s - 180, m = _ - u, p = h - l, b = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1)), S, x, k = 1 / this._subDivisionLevel$1;
          for (x = 0; x <= this._subDivisionLevel$1; x++)
            for (x !== this._subDivisionLevel$1 ? e = l + k * p * x : e = h, S = 0; S <= this._subDivisionLevel$1; S++)
              S !== this._subDivisionLevel$1 ? r = u + k * m * S : r = _, a = x * (this._subDivisionLevel$1 + 1) + S, b[a] = dt.createPos(this.geoTo3d(e, r, !1), S * k, x * k);
          this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
          var P = this._subDivisionLevel$1 / 2, I = 0;
          if (t.gl == null)
            for (var D = 0; D < 2; D++)
              for (var G = 0; G < 2; G++) {
                a = 0;
                for (var U = P * D; U < P * (D + 1); U++)
                  for (var Y = P * G; Y < P * (G + 1); Y++) {
                    var j, K, Q;
                    j = b[U * (this._subDivisionLevel$1 + 1) + Y], K = b[(U + 1) * (this._subDivisionLevel$1 + 1) + Y], Q = b[U * (this._subDivisionLevel$1 + 1) + (Y + 1)], this._renderTriangleLists[I].push(Bt.create(j, Q, K, this.texture, this.level)), j = b[U * (this._subDivisionLevel$1 + 1) + (Y + 1)], K = b[(U + 1) * (this._subDivisionLevel$1 + 1) + Y], Q = b[(U + 1) * (this._subDivisionLevel$1 + 1) + (Y + 1)], this._renderTriangleLists[I].push(Bt.create(j, Q, K, this.texture, this.level));
                  }
                I++;
              }
          else {
            this._vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this._vertexBuffer);
            var J = new Float32Array(b.length * 5), nt = J;
            a = 0;
            for (var W = n.enumerate(b); W.moveNext(); ) {
              var ct = W.current;
              a = this.addVertex(nt, a, ct);
            }
            F.prepDevice.bufferData(34962, J, 35044);
            for (var D = 0; D < 2; D++)
              for (var G = 0; G < 2; G++) {
                var rt = new Uint16Array(this.triangleCount * 3), kt = rt;
                a = 0;
                for (var U = P * D; U < P * (D + 1); U++)
                  for (var Y = P * G; Y < P * (G + 1); Y++)
                    kt[a++] = U * (this._subDivisionLevel$1 + 1) + Y, kt[a++] = (U + 1) * (this._subDivisionLevel$1 + 1) + Y, kt[a++] = U * (this._subDivisionLevel$1 + 1) + (Y + 1), kt[a++] = U * (this._subDivisionLevel$1 + 1) + (Y + 1), kt[a++] = (U + 1) * (this._subDivisionLevel$1 + 1) + Y, kt[a++] = (U + 1) * (this._subDivisionLevel$1 + 1) + (Y + 1);
                this._indexBuffers[I] = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34963, this._indexBuffers[I]), F.prepDevice.bufferData(34963, rt, 35044), I++;
              }
          }
          return !0;
        }
      };
      function Qn(t) {
        this.count = 0, this._verts$1 = null, vi.call(this), this.count = t;
      }
      var Qc = {
        lock: function() {
          return this._verts$1 = new Array(this.count), this._verts$1;
        },
        unlock: function() {
          this.vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this.vertexBuffer);
          for (var t = new Float32Array(this.count * 3), e = t, r = 0, a = n.enumerate(this._verts$1); a.moveNext(); ) {
            var s = a.current;
            e[r++] = s.x, e[r++] = s.y, e[r++] = s.z;
          }
          F.prepDevice.bufferData(34962, t, 35044);
        }
      };
      function wn(t) {
        this.count = 0, this._verts$1 = null, vi.call(this), this.count = t;
      }
      wn.create = function(t) {
        var e = new wn(t.length);
        return e._verts$1 = t, e.unlock(), e;
      };
      var t_ = {
        lock: function() {
          return this._verts$1 = new Array(this.count), this._verts$1;
        },
        unlock: function() {
          this.vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this.vertexBuffer);
          for (var t = new Float32Array(this.count * 5), e = t, r = 0, a = n.enumerate(this._verts$1); a.moveNext(); ) {
            var s = a.current;
            e[r++] = s.position.x, e[r++] = s.position.y, e[r++] = s.position.z, e[r++] = s.tu, e[r++] = s.tv;
          }
          F.prepDevice.bufferData(34962, t, 35044);
        }
      };
      function ta(t) {
        this.count = 0, this._verts$1 = null, vi.call(this), this.count = t;
      }
      ta.create = function(t) {
        var e = new ta(t.length);
        return e._verts$1 = t, e.unlock(), e;
      };
      var e_ = {
        lock: function() {
          return this._verts$1 = new Array(this.count), this._verts$1;
        },
        unlock: function() {
          this.vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this.vertexBuffer);
          for (var t = new Float32Array(this.count * 8), e = t, r = 0, a = n.enumerate(this._verts$1); a.moveNext(); ) {
            var s = a.current;
            e[r++] = s.x, e[r++] = s.y, e[r++] = s.z, e[r++] = s.nx, e[r++] = s.ny, e[r++] = s.nz, e[r++] = s.tu, e[r++] = s.tv;
          }
          F.prepDevice.bufferData(34962, t, 35044);
        }
      };
      function ea(t) {
        this.count = 0, this._verts$1 = null, vi.call(this), this.count = t;
      }
      ea.create = function(t) {
        var e = new ea(t.length);
        return e._verts$1 = t, e.unlock(), e;
      };
      var i_ = {
        lock: function() {
          return this._verts$1 = new Array(this.count), this._verts$1;
        },
        unlock: function() {
          this.vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this.vertexBuffer);
          for (var t = new Float32Array(this.count * 11), e = t, r = 0, a = n.enumerate(this._verts$1); a.moveNext(); ) {
            var s = a.current;
            e[r++] = s.x, e[r++] = s.y, e[r++] = s.z, e[r++] = s.nx, e[r++] = s.ny, e[r++] = s.nz, e[r++] = s.tanx, e[r++] = s.tany, e[r++] = s.tanz, e[r++] = s.tu, e[r++] = s.tv;
          }
          F.prepDevice.bufferData(34962, t, 35044);
        }
      };
      function ia(t) {
        this.count = 0, this._verts$1 = null, vi.call(this), this.count = t;
      }
      ia.create = function(t) {
        var e = new ia(t.length);
        return e._verts$1 = t, e;
      };
      var r_ = {
        lock: function() {
          return this._verts$1 = new Array(this.count), this._verts$1;
        },
        unlock: function() {
          this.vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this.vertexBuffer);
          for (var t = new Float32Array(this.count * 19), e = t, r = 0, a = n.enumerate(this._verts$1); a.moveNext(); ) {
            var s = a.current;
            e[r++] = s.ABC.x, e[r++] = s.ABC.y, e[r++] = s.ABC.z, e[r++] = s.abc1.x, e[r++] = s.abc1.y, e[r++] = s.abc1.z, e[r++] = s.pointSize, e[r++] = s.color.r / 255, e[r++] = s.color.g / 255, e[r++] = s.color.b / 255, e[r++] = s.color.a / 255, e[r++] = s.w, e[r++] = s.e, e[r++] = s.n, e[r++] = s.t, e[r++] = s.a, e[r++] = s.z, e[r++] = s.orbitPos, e[r++] = s.orbits;
          }
          F.prepDevice.bufferData(34962, t, 35044);
        }
      };
      function ra(t) {
        this.count = 0, this._verts$1 = null, vi.call(this), this.count = t;
      }
      var n_ = {
        lock: function() {
          return this._verts$1 = new Array(this.count), this._verts$1;
        },
        unlock: function() {
          this.vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this.vertexBuffer);
          for (var t = new Float32Array(this.count * 9), e = t, r = 0, a = n.enumerate(this._verts$1); a.moveNext(); ) {
            var s = a.current;
            e[r++] = s.position.x, e[r++] = s.position.y, e[r++] = s.position.z, e[r++] = s.get_color().r / 255, e[r++] = s.get_color().g / 255, e[r++] = s.get_color().b / 255, e[r++] = s.get_color().a / 255, e[r++] = s.tu, e[r++] = s.tv;
          }
          F.prepDevice.bufferData(34962, t, 35044);
        }
      };
      function $s(t) {
        this.count = 0, this._verts$1 = null, vi.call(this), this.count = t;
      }
      var a_ = {
        lock: function() {
          return this._verts$1 = new Array(this.count), this._verts$1;
        },
        unlock: function() {
          this.vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this.vertexBuffer);
          for (var t = new Float32Array(this.count * 10), e = t, r = 0, a = n.enumerate(this._verts$1); a.moveNext(); ) {
            var s = a.current;
            e[r++] = s.position.x, e[r++] = s.position.y, e[r++] = s.position.z, e[r++] = s.get_color().r / 255, e[r++] = s.get_color().g / 255, e[r++] = s.get_color().b / 255, e[r++] = s.get_color().a / 255, e[r++] = s.tu, e[r++] = s.tv, e[r++] = s.pointSize;
          }
          F.prepDevice.bufferData(34962, t, 35044);
        },
        dispose: function() {
          F.prepDevice.bindBuffer(34962, null), F.prepDevice.deleteBuffer(this.vertexBuffer), this.vertexBuffer = null;
        }
      };
      function Ps(t) {
        this.count = 0, this._verts$1 = null, vi.call(this), this.count = t;
      }
      var s_ = {
        lock: function() {
          return this._verts$1 = new Array(this.count), this._verts$1;
        },
        unlock: function() {
          this.vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this.vertexBuffer);
          for (var t = new Float32Array(this.count * 7), e = t, r = 0, a = n.enumerate(this._verts$1); a.moveNext(); ) {
            var s = a.current;
            e[r++] = s.position.x, e[r++] = s.position.y, e[r++] = s.position.z, e[r++] = s.color.r / 255, e[r++] = s.color.g / 255, e[r++] = s.color.b / 255, e[r++] = s.color.a / 255;
          }
          F.prepDevice.bufferData(34962, t, 35044);
        }
      };
      function o_(t) {
        this.count = 0, this._verts$1 = null, vi.call(this), this.count = t;
      }
      var l_ = {
        lock: function() {
          return this._verts$1 = new Array(this.count), this._verts$1;
        },
        unlock: function() {
          this.vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this.vertexBuffer);
          for (var t = new Float32Array(this.count * 9), e = t, r = 0, a = n.enumerate(this._verts$1); a.moveNext(); ) {
            var s = a.current;
            e[r++] = s.position.x, e[r++] = s.position.y, e[r++] = s.position.z, e[r++] = s.color.r / 255, e[r++] = s.color.g / 255, e[r++] = s.color.b / 255, e[r++] = s.color.a / 255, e[r++] = s.tu, e[r++] = s.tv;
          }
          F.prepDevice.bufferData(34962, t, 35044);
        }
      };
      function Rs(t, e) {
        this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._logFactor$1 = 0, er.call(this), this._min$1 = t, this._max$1 = e, this._factor$1 = e - t;
      }
      var u_ = {
        map: function(t) {
          return Math.min(255, Math.max(0, n.truncate((t - this._min$1) / this._factor$1 * 255)));
        }
      };
      function Es(t, e) {
        this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._logFactor$1 = 0, er.call(this), this._min$1 = t, this._max$1 = e, this._factor$1 = e - t, this._logFactor$1 = 255 / Math.log(255);
      }
      var h_ = {
        map: function(t) {
          return Math.min(255, Math.max(0, n.truncate(Math.log((t - this._min$1) / this._factor$1 * 255) * this._logFactor$1)));
        }
      };
      function Ds(t, e) {
        this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._powFactor$1 = 0, er.call(this), this._min$1 = t, this._max$1 = e, this._factor$1 = e - t, this._powFactor$1 = 255 / Math.pow(255, 2);
      }
      var c_ = {
        map: function(t) {
          return Math.min(255, Math.max(0, n.truncate(Math.pow((t - this._min$1) / this._factor$1 * 255, 2) * this._powFactor$1)));
        }
      };
      function Ns(t, e) {
        this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._sqrtFactor$1 = 0, er.call(this), this._min$1 = t, this._max$1 = e, this._factor$1 = e - t, this._sqrtFactor$1 = 255 / Math.sqrt(255);
      }
      var __ = {
        map: function(t) {
          return Math.min(255, Math.max(0, n.truncate(Math.sqrt((t - this._min$1) / this._factor$1 * 255) * this._sqrtFactor$1)));
        }
      };
      function Fs(t, e, r) {
        this._min$1 = 0, this._max$1 = 0, this._factor$1 = 0, this._maxHistogramValue$1 = 1, er.call(this), this._min$1 = e, this._max$1 = r, this._factor$1 = r - e, this._histogram$1 = t.computeHistogram(1e4), this._maxHistogramValue$1 = this._histogram$1[1e4], this._lookup$1 = new Array(1e4);
        for (var a = n.truncate(t.get_sizeX() * t.get_sizeY()), s = 0, l = 0; l < 1e4; l++)
          s += this._histogram$1[l], this._lookup$1[l] = Math.min(255, s * 255 / a) + 0.5;
      }
      var f_ = {
        map: function(t) {
          return this._lookup$1[Math.min(1e4 - 1, Math.max(0, n.truncate((t - this._min$1) / this._factor$1 * (1e4 - 1))))];
        }
      };
      function Fn() {
        this._triangleList$1 = null, this._latStart$1 = 0, this._lngStart$1 = 0, this._latEnd$1 = 0, this._lngEnd$1 = 0, this._width$1 = 4, this._percentComplete$1 = 100, we.call(this);
      }
      var g_ = {
        getTypeName: function() {
          return "TerraViewer.GreatCirlceRouteLayer";
        },
        cleanUp: function() {
          this._triangleList$1 != null && this._triangleList$1.clear(), this._triangleList$1 = null, we.prototype.cleanUp.call(this);
        },
        draw: function(t, e, r) {
          return this._triangleList$1 == null && this._initializeRoute$1(t), this._triangleList$1.jNow = this._percentComplete$1 / 100, this._triangleList$1.draw(t, e * this.get_opacity(), 2), !0;
        },
        _initializeRoute$1: function(t) {
          this._triangleList$1 = new Er(), this._triangleList$1.decay = 1e3, this._triangleList$1.sky = this.get_astronomical(), this._triangleList$1.timeSeries = !0, this._triangleList$1.depthBuffered = !1, this._triangleList$1.autoTime = !1;
          var e = 500, r = R.geoTo3dDouble(this._latStart$1, this._lngStart$1), a = R.geoTo3dDouble(this._latEnd$1, this._lngEnd$1), s = L.subtractVectors(a, r);
          s.normalize();
          var l = r;
          l.normalize();
          var h = L.cross(l, s), u = L.cross(s, l);
          h.normalize(), u.normalize(), h.multiply(1e-3 * this._width$1), u.multiply(1e-3 * this._width$1);
          for (var _ = new L(), m = new L(), p = !0, b = 0; b <= e; b++) {
            var S = L.lerp(r, a, b / e);
            S.normalize();
            var x = S, k = S;
            x.add(h), k.add(u), p ? p = !1 : this._triangleList$1.addQuad(m, _, k, x, this.get_color(), new ve(b / e, 2)), _ = x, m = k;
          }
        },
        getParams: function() {
          return [this._percentComplete$1];
        },
        getParamNames: function() {
          return ["Percentage"];
        },
        setParams: function(t) {
          t.length > 0 && (this._percentComplete$1 = t[0]);
        },
        get_latStart: function() {
          return this._latStart$1;
        },
        set_latStart: function(t) {
          return this._latStart$1 !== t && (this._latStart$1 = t, this.version++), t;
        },
        get_lngStart: function() {
          return this._lngStart$1;
        },
        set_lngStart: function(t) {
          return this._lngStart$1 !== t && (this._lngStart$1 = t, this.version++), t;
        },
        get_latEnd: function() {
          return this._latEnd$1;
        },
        set_latEnd: function(t) {
          return this._latEnd$1 !== t && (this._latEnd$1 = t, this.version++), t;
        },
        get_lngEnd: function() {
          return this._lngEnd$1;
        },
        set_lngEnd: function(t) {
          return this._lngEnd$1 !== t && (this._lngEnd$1 = t, this.version++), t;
        },
        get_width: function() {
          return this._width$1;
        },
        set_width: function(t) {
          return this._width$1 !== t && (this._width$1 = t, this.version++), t;
        },
        get_percentComplete: function() {
          return this._percentComplete$1;
        },
        set_percentComplete: function(t) {
          return this._percentComplete$1 !== t && (this._percentComplete$1 = t, this.version++), t;
        },
        writeLayerProperties: function(t) {
          t._writeAttributeString("LatStart", this.get_latStart().toString()), t._writeAttributeString("LngStart", this.get_lngStart().toString()), t._writeAttributeString("LatEnd", this.get_latEnd().toString()), t._writeAttributeString("LngEnd", this.get_lngEnd().toString()), t._writeAttributeString("Width", this.get_width().toString()), t._writeAttributeString("PercentComplete", this.get_percentComplete().toString());
        },
        initializeFromXml: function(t) {
          this._latStart$1 = parseFloat(t.attributes.getNamedItem("LatStart").nodeValue), this._lngStart$1 = parseFloat(t.attributes.getNamedItem("LngStart").nodeValue), this._latEnd$1 = parseFloat(t.attributes.getNamedItem("LatEnd").nodeValue), this._lngEnd$1 = parseFloat(t.attributes.getNamedItem("LngEnd").nodeValue), this._width$1 = parseFloat(t.attributes.getNamedItem("Width").nodeValue), this._percentComplete$1 = parseFloat(t.attributes.getNamedItem("PercentComplete").nodeValue);
        }
      };
      function Ga() {
        we.call(this);
      }
      var d_ = {
        draw: function(t, e, r) {
          return O.drawPlanetGrid(t, e * this.get_opacity(), this.get_color()), O.drawPlanetGridText(t, e * this.get_opacity(), this.get_color()), !0;
        }
      };
      function si() {
        this._imageSet$1 = null, this._extension$1 = ".txt", this._overrideDefaultLayer$1 = !1, this._loaded$1 = !1, we.call(this);
      }
      si.create = function(t) {
        var e = new si();
        return e._imageSet$1 = t, e;
      };
      var m_ = {
        get_imageSet: function() {
          return this._imageSet$1;
        },
        set_imageSet: function(t) {
          return this._imageSet$1 = t, t;
        },
        get_overrideDefaultLayer: function() {
          return this._overrideDefaultLayer$1;
        },
        set_overrideDefaultLayer: function(t) {
          return this._overrideDefaultLayer$1 = t, t;
        },
        getFitsImage: function() {
          return n.safeCast(this._imageSet$1.get_wcsImage(), bi);
        },
        _isFitsImageset$1: function() {
          var t = this._imageSet$1.get_extension() === ".fits";
          return n.canCast(this._imageSet$1.get_wcsImage(), bi) || this._imageSet$1.get_wcsImage() == null && t;
        },
        initializeFromXml: function(t) {
          var e = at.selectSingleNode(t, "ImageSet");
          this._imageSet$1 = He.fromXMLNode(e), t.attributes.getNamedItem("Extension") != null && (this._extension$1 = t.attributes.getNamedItem("Extension").nodeValue), t.attributes.getNamedItem("ScaleType") != null && (this.get_imageSet().get_fitsProperties().scaleType = Et.parse("ScaleTypes", t.attributes.getNamedItem("ScaleType").nodeValue)), t.attributes.getNamedItem("MinValue") != null && (this.get_imageSet().get_fitsProperties().minVal = parseFloat(t.attributes.getNamedItem("MinValue").nodeValue), this.get_imageSet().get_fitsProperties().lowerCut = t.attributes.getNamedItem("LowerCut") != null ? parseFloat(t.attributes.getNamedItem("LowerCut").nodeValue) : this.get_imageSet().get_fitsProperties().minVal), t.attributes.getNamedItem("MaxValue") != null && (this.get_imageSet().get_fitsProperties().maxVal = parseFloat(t.attributes.getNamedItem("MaxValue").nodeValue), this.get_imageSet().get_fitsProperties().upperCut = t.attributes.getNamedItem("UpperCut") != null ? parseFloat(t.attributes.getNamedItem("UpperCut").nodeValue) : this.get_imageSet().get_fitsProperties().maxVal), t.attributes.getNamedItem("ColorMapperName") != null && (this.get_imageSet().get_fitsProperties().colorMapName = t.attributes.getNamedItem("ColorMapperName").nodeValue), t.attributes.getNamedItem("OverrideDefault") != null && (this._overrideDefaultLayer$1 = n.boolean(t.attributes.getNamedItem("OverrideDefault").nodeValue));
        },
        draw: function(t, e, r) {
          return this._loaded$1 ? (t.set_worldBase(t.get_world()), t.set_viewBase(t.get_view()), t.makeFrustum(), t.drawImageSet(this._imageSet$1, this.get_opacity() * e * 100), !0) : !1;
        },
        writeLayerProperties: function(t) {
          this._imageSet$1.get_wcsImage() != null && (this._isFitsImageset$1() ? this._extension$1 = ".fit" : this._extension$1 = ".png", t._writeAttributeString("Extension", this._extension$1)), this._isFitsImageset$1() && (t._writeAttributeString("ScaleType", Et.toXml("ScaleTypes", this._imageSet$1.get_fitsProperties().scaleType)), t._writeAttributeString("MinValue", this._imageSet$1.get_fitsProperties().minVal.toString()), t._writeAttributeString("MaxValue", this._imageSet$1.get_fitsProperties().maxVal.toString()), t._writeAttributeString("LowerCut", this._imageSet$1.get_fitsProperties().lowerCut.toString()), t._writeAttributeString("UpperCut", this._imageSet$1.get_fitsProperties().upperCut.toString()), this._imageSet$1.get_fitsProperties().colorMapName != null && t._writeAttributeString("ColorMapperName", this._imageSet$1.get_fitsProperties().colorMapName)), t._writeAttributeString("OverrideDefault", this._overrideDefaultLayer$1.toString()), He.saveToXml(t, this._imageSet$1, ""), we.prototype.writeLayerProperties.call(this, t);
        },
        getTypeName: function() {
          return "TerraViewer.ImageSetLayer";
        },
        cleanUp: function() {
          we.prototype.cleanUp.call(this);
        },
        addFilesToCabinet: function(t) {
          if (n.canCast(this._imageSet$1.get_wcsImage(), bi)) {
            this._imageSet$1.get_wcsImage().get_filename();
            var e = t.tempDirectory + n.format("{0}\\{1}{2}", t.get_packageID(), this.id.toString(), this._extension$1);
            t.addFile(e, this._imageSet$1.get_wcsImage().sourceBlob);
          }
        },
        getParamNames: function() {
          return we.prototype.getParamNames.call(this);
        },
        getParams: function() {
          return we.prototype.getParams.call(this);
        },
        setParams: function(t) {
          we.prototype.setParams.call(this, t);
        },
        setImageScale: function(t, e, r) {
          console.warn("SetImageScale is considered deprecated. Use setImageScaleRaw or setImageScalePhysical instead."), this.setImageScaleRaw(t, e, r);
        },
        setImageScaleRaw: function(t, e, r) {
          this.get_imageSet().get_fitsProperties().lowerCut = e, this.get_imageSet().get_fitsProperties().upperCut = r, this.get_imageSet().get_fitsProperties().scaleType = t, n.canCast(this._imageSet$1.get_wcsImage(), nr) && zr.updateScale(this, t, e, r);
        },
        setImageScalePhysical: function(t, e, r) {
          var a = e, s = r;
          this._isFitsImageset$1() && (a = (a - this._imageSet$1.get_fitsProperties().bZero) / this._imageSet$1.get_fitsProperties().bScale, s = (s - this._imageSet$1.get_fitsProperties().bZero) / this._imageSet$1.get_fitsProperties().bScale), this.setImageScaleRaw(t, a, s);
        },
        setImageZ: function(t) {
          this._isFitsImageset$1() && zr.updateImage(this, t);
        },
        get_colorMapperName: function() {
          return this.get_imageSet().get_fitsProperties().colorMapName;
        },
        set_colorMapperName: function(t) {
          if (Ft.fromNamedColormap(t) == null)
            throw new Error("Invalid colormap name");
          return this.version++, this._isFitsImageset$1() && (fe.useGlVersion2 ? this._imageSet$1.get_fitsProperties().colorMapName = t : zr.updateColorMapper(this, t)), t;
        },
        get_colorMapper: function() {
          return this.get_imageSet().get_fitsProperties().colorMapName == null ? null : Ft.fromNamedColormap(this.get_imageSet().get_fitsProperties().colorMapName);
        },
        loadData: function(t, e) {
          if (n.startsWith(this._extension$1.toLowerCase(), ".fit")) {
            var r = t.getFileBlob(n.replaceString(e, ".txt", this._extension$1)), a;
            fe.useGlVersion2 ? a = new bi(this._imageSet$1, "image.fit", r, n.bind("doneLoading", this)) : a = new nr(this._imageSet$1, "image.fit", r, n.bind("doneLoading", this)), this._imageSet$1.set_wcsImage(a);
          } else
            this._loaded$1 = !0;
        },
        doneLoading: function(t) {
          this._loaded$1 = !0;
        }
      };
      function p_() {
        we.call(this);
      }
      var v_ = {
        draw: function(t, e, r) {
          return we.prototype.draw.call(this, t, e, !1);
        }
      };
      function Zt() {
        this._primaryUI$1 = null, this._heading$1 = 0, this._flipV$1 = !0, this._flipHandedness$1 = !1, this._smooth$1 = !0, this._twoSidedGeometry$1 = !1, this._pitch$1 = 0, this._roll$1 = 0, this._scale$1 = L.create(1, 1, 1), this._translate$1 = L.create(0, 0, 0), this._lightID$1 = 0, this._dirty$1 = !1, this.objType = !1, this._xHandle$1 = new lt(), this._yHandle$1 = new lt(), this._zHandle$1 = new lt(), this._hprHandles$1 = new Array(6), this._uiScale$1 = 1, this._showEditUi$1 = !1, this._dragMode$1 = 0, this._pntDown$1 = new lt(), this._valueOnDown$1 = 0, this._valueOnDown2$1 = 0, this._hitDist$1 = 20, this._lockPreferedAxis$1 = !1, this._preferY$1 = !1, we.call(this);
      }
      Zt._initTranslateUI$1 = function() {
        Zt._translateUILines$1 = new _n(), Zt._translateUILines$1.timeSeries = !1, Zt._translateUILines$1.set_depthBuffered(!1), Zt._translateUILines$1.showFarSide = !0, Zt._translateUI$1 = new Er(), Zt._translateUI$1.depthBuffered = !1, Zt._translateUI$1.timeSeries = !1, Zt._translateUI$1.writeZbuffer = !1;
        for (var t = Math.PI * 2, e = t / 45, r = 0.05, a = 0; a < t; a += e) {
          var s = L.create(1 - r * 4, 0, 0), l = L.create(1 - r * 4, Math.cos(a) * r, Math.sin(a) * r), h = L.create(1 - r * 4, Math.cos(a + e) * r, Math.sin(a + e) * r);
          Zt._translateUI$1.addTriangle(s, l, h, ot.get_red(), ve.empty());
        }
        for (var a = 0; a < t; a += e) {
          var s = L.create(1, 0, 0), h = L.create(1 - r * 4, Math.cos(a) * r, Math.sin(a) * r), l = L.create(1 - r * 4, Math.cos(a + e) * r, Math.sin(a + e) * r);
          Zt._translateUI$1.addTriangle(s, l, h, B.fromArgb(255, 255, Math.max(0, Math.sin(a) * 128), Math.max(0, Math.sin(a) * 128)), ve.empty());
        }
        Zt._translateUILines$1.addLine(L.create(0, 0, 0), L.create(1, 0, 0), ot.get_red(), ve.empty());
        for (var a = 0; a < t; a += e) {
          var s = L.create(0, 1 - r * 4, 0), h = L.create(Math.cos(a) * r, 1 - r * 4, Math.sin(a) * r), l = L.create(Math.cos(a + e) * r, 1 - r * 4, Math.sin(a + e) * r);
          Zt._translateUI$1.addTriangle(s, l, h, ot.get_green(), ve.empty());
        }
        for (var a = 0; a < t; a += e) {
          var s = L.create(0, 1, 0), l = L.create(Math.cos(a) * r, 1 - r * 4, Math.sin(a) * r), h = L.create(Math.cos(a + e) * r, 1 - r * 4, Math.sin(a + e) * r);
          Zt._translateUI$1.addTriangle(s, l, h, B.fromArgb(255, Math.max(0, Math.sin(a) * 128), 255, Math.max(0, Math.sin(a) * 128)), ve.empty());
        }
        Zt._translateUILines$1.addLine(L.create(0, 0, 0), L.create(0, 1, 0), ot.get_green(), ve.empty());
        for (var a = 0; a < t; a += e) {
          var s = L.create(0, 0, 1 - r * 4), l = L.create(Math.cos(a) * r, Math.sin(a) * r, 1 - r * 4), h = L.create(Math.cos(a + e) * r, Math.sin(a + e) * r, 1 - r * 4);
          Zt._translateUI$1.addTriangle(s, l, h, ot.get_blue(), ve.empty());
        }
        for (var a = 0; a < t; a += e) {
          var s = L.create(0, 0, 1), h = L.create(Math.cos(a) * r, Math.sin(a) * r, 1 - r * 4), l = L.create(Math.cos(a + e) * r, Math.sin(a + e) * r, 1 - r * 4);
          Zt._translateUI$1.addTriangle(s, l, h, B.fromArgb(255, Math.max(0, Math.sin(a) * 128), Math.max(0, Math.sin(a) * 128), 255), ve.empty());
        }
        Zt._translateUILines$1.addLine(L.create(0, 0, 0), L.create(0, 0, 1), ot.get_blue(), ve.empty()), Zt._initRotateUI$1(), Zt._initScaleUI$1();
      }, Zt._initScaleUI$1 = function() {
        Zt._scaleUI$1 = new Er(), Zt._scaleUI$1.depthBuffered = !1, Zt._scaleUI$1.timeSeries = !1, Zt._scaleUI$1.writeZbuffer = !1;
        var t = 0.05;
        Zt._makeCube$1(Zt._scaleUI$1, L.create(1 - t * 2, 0, 0), t * 2, ot.get_red()), Zt._makeCube$1(Zt._scaleUI$1, L.create(0, 1 - t * 2, 0), t * 2, ot.get_green()), Zt._makeCube$1(Zt._scaleUI$1, L.create(0, 0, 1 - t * 2), t * 2, ot.get_blue());
      }, Zt._makeCube$1 = function(t, e, r, a) {
        var s = B.fromArgb(255, n.truncate(a.r * 0.6), a.g, n.truncate(a.b * 0.6)), l = B.fromArgb(255, n.truncate(a.r * 0.8), n.truncate(a.g * 0.8), n.truncate(a.b * 0.8));
        t.addQuad(L.create(e.x + r, e.y + r, e.z + r), L.create(e.x + r, e.y + r, e.z - r), L.create(e.x - r, e.y + r, e.z + r), L.create(e.x - r, e.y + r, e.z - r), a, ve.empty()), t.addQuad(L.create(e.x + r, e.y - r, e.z + r), L.create(e.x - r, e.y - r, e.z + r), L.create(e.x + r, e.y - r, e.z - r), L.create(e.x - r, e.y - r, e.z - r), a, ve.empty()), t.addQuad(L.create(e.x - r, e.y + r, e.z + r), L.create(e.x - r, e.y + r, e.z - r), L.create(e.x - r, e.y - r, e.z + r), L.create(e.x - r, e.y - r, e.z - r), s, ve.empty()), t.addQuad(L.create(e.x + r, e.y + r, e.z + r), L.create(e.x + r, e.y - r, e.z + r), L.create(e.x + r, e.y + r, e.z - r), L.create(e.x + r, e.y - r, e.z - r), s, ve.empty()), t.addQuad(L.create(e.x + r, e.y + r, e.z + r), L.create(e.x - r, e.y + r, e.z + r), L.create(e.x + r, e.y - r, e.z + r), L.create(e.x - r, e.y - r, e.z + r), l, ve.empty()), t.addQuad(L.create(e.x + r, e.y + r, e.z - r), L.create(e.x + r, e.y - r, e.z - r), L.create(e.x - r, e.y + r, e.z - r), L.create(e.x - r, e.y - r, e.z - r), l, ve.empty());
      }, Zt._initRotateUI$1 = function() {
        Zt._rotateUi$1 = new Er(), Zt._rotateUi$1.depthBuffered = !1, Zt._rotateUi$1.timeSeries = !1, Zt._rotateUi$1.writeZbuffer = !1;
        for (var t = Math.PI * 2, e = t / 40, r = 0.05, a = 0, s = 0; s < t; s += e) {
          var l = !(a % 10), h = !((a + 1) % 10), u = L.create(r * (l ? 0 : h ? 1.5 : 1), Math.cos(s), Math.sin(s)), _ = L.create(-r * (l ? 0 : h ? 1.5 : 1), Math.cos(s), Math.sin(s)), m = L.create(r * (l ? 1.5 : h ? 0 : 1), Math.cos(s + e), Math.sin(s + e)), p = L.create(-r * (l ? 1.5 : h ? 0 : 1), Math.cos(s + e), Math.sin(s + e));
          Zt._rotateUi$1.addQuad(u, m, _, p, B._fromArgbColor(192, ot.get_red()), ve.empty()), a++;
        }
        a = 0;
        for (var s = 0; s < t; s += e) {
          var l = !(a % 10), h = !((a + 1) % 10), u = L.create(Math.cos(s), Math.sin(s), r * (l ? 0 : h ? 1.5 : 1)), _ = L.create(Math.cos(s), Math.sin(s), -r * (l ? 0 : h ? 1.5 : 1)), m = L.create(Math.cos(s + e), Math.sin(s + e), r * (l ? 1.5 : h ? 0 : 1)), p = L.create(Math.cos(s + e), Math.sin(s + e), -r * (l ? 1.5 : h ? 0 : 1));
          Zt._rotateUi$1.addQuad(u, m, _, p, B._fromArgbColor(192, ot.get_blue()), ve.empty()), a++;
        }
        a = 0;
        for (var s = 0; s < t; s += e) {
          var l = !(a % 10), h = !((a + 1) % 10), u = L.create(Math.cos(s), r * (l ? 0 : h ? 1.5 : 1), Math.sin(s)), _ = L.create(Math.cos(s), -r * (l ? 0 : h ? 1.5 : 1), Math.sin(s)), m = L.create(Math.cos(s + e), r * (l ? 1.5 : h ? 0 : 1), Math.sin(s + e)), p = L.create(Math.cos(s + e), -r * (l ? 1.5 : h ? 0 : 1), Math.sin(s + e));
          Zt._rotateUi$1.addQuad(u, _, m, p, B._fromArgbColor(192, ot.get_green()), ve.empty()), a++;
        }
        a = 0;
        for (var s = 0; s < t; s += e) {
          var l = !(a % 10), h = !((a + 1) % 10), u = L.create(-r * (l ? 0 : h ? 1.5 : 1), Math.cos(s), Math.sin(s)), _ = L.create(r * (l ? 0 : h ? 1.5 : 1), Math.cos(s), Math.sin(s)), m = L.create(-r * (l ? 1.5 : h ? 0 : 1), Math.cos(s + e), Math.sin(s + e)), p = L.create(r * (l ? 1.5 : h ? 0 : 1), Math.cos(s + e), Math.sin(s + e));
          Zt._rotateUi$1.addQuad(u, m, _, p, ot.get_red(), ve.empty()), a++;
        }
        a = 0;
        for (var s = 0; s < t; s += e) {
          var l = !(a % 10), h = !((a + 1) % 10), u = L.create(Math.cos(s), Math.sin(s), -r * (l ? 0 : h ? 1.5 : 1)), _ = L.create(Math.cos(s), Math.sin(s), r * (l ? 0 : h ? 1.5 : 1)), m = L.create(Math.cos(s + e), Math.sin(s + e), -r * (l ? 1.5 : h ? 0 : 1)), p = L.create(Math.cos(s + e), Math.sin(s + e), r * (l ? 1.5 : h ? 0 : 1));
          Zt._rotateUi$1.addQuad(u, m, _, p, ot.get_blue(), ve.empty()), a++;
        }
        a = 0;
        for (var s = 0; s < t; s += e) {
          var l = !(a % 10), h = !((a + 1) % 10), u = L.create(Math.cos(s), -r * (l ? 0 : h ? 1.5 : 1), Math.sin(s)), _ = L.create(Math.cos(s), r * (l ? 0 : h ? 1.5 : 1), Math.sin(s)), m = L.create(Math.cos(s + e), -r * (l ? 1.5 : h ? 0 : 1), Math.sin(s + e)), p = L.create(Math.cos(s + e), r * (l ? 1.5 : h ? 0 : 1), Math.sin(s + e));
          Zt._rotateUi$1.addQuad(u, _, m, p, ot.get_green(), ve.empty()), a++;
        }
      };
      var w_ = {
        getPrimaryUI: function() {
          return this._primaryUI$1 == null && (this._primaryUI$1 = new zs(this)), this._primaryUI$1;
        },
        get_flipV: function() {
          return this._flipV$1;
        },
        set_flipV: function(t) {
          return this._flipV$1 !== t && (this._flipV$1 = t, this.object3d != null && (this.object3d.flipV = this._flipV$1, this.object3d._reload()), this.version++), t;
        },
        get_flipHandedness: function() {
          return this._flipHandedness$1;
        },
        set_flipHandedness: function(t) {
          return this._flipHandedness$1 !== t && (this._flipHandedness$1 = t, this.object3d != null && (this.object3d.flipHandedness = this._flipHandedness$1, this.object3d._reload()), this.version++), t;
        },
        get_smooth: function() {
          return this._smooth$1;
        },
        set_smooth: function(t) {
          return this._smooth$1 !== t && (this._smooth$1 = t, this.object3d != null && (this.object3d.smooth = this._smooth$1, this.object3d._reload()), this.version++), t;
        },
        get_twoSidedGeometry: function() {
          return this._twoSidedGeometry$1;
        },
        set_twoSidedGeometry: function(t) {
          return this._twoSidedGeometry$1 !== t && (this._twoSidedGeometry$1 = t, this.version++), t;
        },
        get_heading: function() {
          return this._heading$1;
        },
        set_heading: function(t) {
          return this._heading$1 !== t && (this.version++, this._heading$1 = t), t;
        },
        get_pitch: function() {
          return this._pitch$1;
        },
        set_pitch: function(t) {
          return this._pitch$1 !== t && (this.version++, this._pitch$1 = t), t;
        },
        get_roll: function() {
          return this._roll$1;
        },
        set_roll: function(t) {
          return this._roll$1 !== t && (this.version++, this._roll$1 = t), t;
        },
        get_scale: function() {
          return this._scale$1;
        },
        set_scale: function(t) {
          return this._scale$1 !== t && (this.version++, this._scale$1 = t), t;
        },
        get_translate: function() {
          return this._translate$1;
        },
        set_translate: function(t) {
          return this._translate$1 !== t && (this.version++, this._translate$1 = t), t;
        },
        get_lightID: function() {
          return this._lightID$1;
        },
        set_lightID: function(t) {
          return this._lightID$1 = t, t;
        },
        cleanUp: function() {
          this._dirty$1 = !0;
        },
        colorChanged: function() {
          this.object3d != null && (this.object3d.color = this.get_color());
        },
        writeLayerProperties: function(t) {
          t._writeAttributeString("FlipV", this.get_flipV().toString()), t._writeAttributeString("FlipHandedness", this.get_flipHandedness().toString()), t._writeAttributeString("Smooth", this.get_smooth().toString()), t._writeAttributeString("TwoSidedGeometry", this.get_twoSidedGeometry().toString()), t._writeAttributeString("Heading", this.get_heading().toString()), t._writeAttributeString("Pitch", this.get_pitch().toString()), t._writeAttributeString("Roll", this.get_roll().toString()), t._writeAttributeString("Scale", this.get_scale().toString()), t._writeAttributeString("Translate", this.get_translate().toString()), t._writeAttributeString("LightID", this.get_lightID().toString()), t._writeAttributeString("Obj", this.objType.toString());
        },
        getParams: function() {
          var t = new Array(14);
          return t[0] = this._heading$1, t[1] = this._pitch$1, t[2] = this._roll$1, t[3] = this._scale$1.x, t[4] = this._scale$1.y, t[5] = this._scale$1.z, t[6] = this._translate$1.x, t[7] = this._translate$1.y, t[8] = this._translate$1.z, t[9] = this.get_color().r / 255, t[10] = this.get_color().g / 255, t[11] = this.get_color().b / 255, t[12] = this.get_color().a / 255, t[13] = this.get_opacity(), t;
        },
        getParamNames: function() {
          return ["Heading", "Pitch", "Roll", "Scale.X", "Scale.Y", "Scale.Z", "Translate.X", "Translate.Y", "Translate.Z", "Colors.Red", "Colors.Green", "Colors.Blue", "Colors.Alpha", "Opacity"];
        },
        setParams: function(t) {
          if (t.length === 14) {
            this._heading$1 = t[0], this._pitch$1 = t[1], this._roll$1 = t[2], this._scale$1.x = t[3], this._scale$1.y = t[4], this._scale$1.z = t[5], this._translate$1.x = t[6], this._translate$1.y = t[7], this._translate$1.z = t[8], this.set_opacity(t[13]);
            var e = B.fromArgb(n.truncate(t[12] * 255), n.truncate(t[9] * 255), n.truncate(t[10] * 255), n.truncate(t[11] * 255));
            this.set_color(e);
          }
        },
        add_propertiesChanged: function(t) {
          this.__propertiesChanged$1 = n.bindAdd(this.__propertiesChanged$1, t);
        },
        remove_propertiesChanged: function(t) {
          this.__propertiesChanged$1 = n.bindSub(this.__propertiesChanged$1, t);
        },
        fireChanged: function() {
          this.__propertiesChanged$1 != null && this.__propertiesChanged$1(this, new n.EventArgs());
        },
        getEditUI: function() {
          return n.safeCast(this, ln);
        },
        initializeFromXml: function(t) {
          this.set_flipV(n.boolean(t.attributes.getNamedItem("FlipV").nodeValue)), t.attributes.getNamedItem("FlipHandedness") != null ? this.set_flipHandedness(n.boolean(t.attributes.getNamedItem("FlipHandedness").nodeValue)) : this.set_flipHandedness(!1), t.attributes.getNamedItem("Smooth") != null ? this.set_smooth(n.boolean(t.attributes.getNamedItem("Smooth").nodeValue)) : this.set_smooth(!0), t.attributes.getNamedItem("TwoSidedGeometry") != null ? this.set_twoSidedGeometry(n.boolean(t.attributes.getNamedItem("TwoSidedGeometry").nodeValue)) : this.set_twoSidedGeometry(!1), t.attributes.getNamedItem("Obj") != null ? this.objType = n.boolean(t.attributes.getNamedItem("Obj").nodeValue) : this.objType = !1, this.set_heading(parseFloat(t.attributes.getNamedItem("Heading").nodeValue)), this.set_pitch(parseFloat(t.attributes.getNamedItem("Pitch").nodeValue)), this.set_roll(parseFloat(t.attributes.getNamedItem("Roll").nodeValue)), this.set_scale(L.parse(t.attributes.getNamedItem("Scale").nodeValue)), this.set_translate(L.parse(t.attributes.getNamedItem("Translate").nodeValue)), t.attributes.getNamedItem("LightID") != null && this.set_lightID(parseInt(t.attributes.getNamedItem("LightID").nodeValue));
        },
        draw: function(t, e, r) {
          var a = t.get_world(), s = H.multiplyMatrix(H.multiplyMatrix(H._rotationZ(-this._roll$1 / 180 * Math.PI), H._rotationX(-this._pitch$1 / 180 * Math.PI)), H._rotationY(this._heading$1 / 180 * Math.PI));
          return t.set_world(H.multiplyMatrix(H.multiplyMatrix(H.multiplyMatrix(s, H._scaling(this._scale$1.x, this._scale$1.y, this._scale$1.z)), H.translation(this._translate$1)), a)), t.set_twoSidedLighting(this.get_twoSidedGeometry()), A.drawPointPlanet(t, new L(), 1, ot.get_red(), !1), this._lightID$1 > 0 || this.object3d != null && (this.object3d.color = this.get_color(), this.object3d.render(t, e * this.get_opacity())), t.set_twoSidedLighting(!1), t.set_world(a), !0;
        },
        addFilesToCabinet: function(t) {
        },
        loadData: function(t, e) {
          n.endsWith(e.toLowerCase(), ".obj") && (this.objType = !0), this._lightID$1 || (this.objType ? this.object3d = new Ti(t, n.replaceString(e, ".txt", ".obj"), this.get_flipV(), this._flipHandedness$1, !0, this.get_color()) : this.object3d = new Ti(t, n.replaceString(e, ".txt", ".3ds"), this.get_flipV(), this._flipHandedness$1, !0, this.get_color()));
        },
        pointToView: function(t) {
          var e = V.singleton.renderContext.height, r = V.singleton.renderContext.width, a = V.singleton.renderContext.width / V.singleton.renderContext.height * 1116, s = t.x / r * a - (a - 1920) / 2, l = t.y / e * 1116;
          return lt.create(s, l);
        },
        render: function(t) {
          this._showEditUi$1 = !0;
        },
        preRender: function(t) {
          this._showEditUi$1 = !0;
        },
        mouseDown: function(t, e) {
          var r = this.pointToView(lt.create(e.offsetX, e.offsetY));
          this._pntDown$1 = r;
          var a = r;
          if (e.shiftKey) {
            if (lt.subtract(a, this._xHandle$1).get_length() < this._hitDist$1)
              return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.x, !0;
            if (lt.subtract(a, this._yHandle$1).get_length() < this._hitDist$1)
              return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.y, !0;
            if (lt.subtract(a, this._zHandle$1).get_length() < this._hitDist$1)
              return this._dragMode$1 = 10, this._valueOnDown$1 = this._scale$1.z, !0;
          } else {
            if (lt.subtract(a, this._xHandle$1).get_length() < this._hitDist$1)
              return this._dragMode$1 = 1, this._valueOnDown$1 = this._translate$1.x, !0;
            if (lt.subtract(a, this._yHandle$1).get_length() < this._hitDist$1)
              return this._dragMode$1 = 2, this._valueOnDown$1 = this._translate$1.y, !0;
            if (lt.subtract(a, this._zHandle$1).get_length() < this._hitDist$1)
              return this._dragMode$1 = 3, this._valueOnDown$1 = this._translate$1.z, !0;
          }
          for (var s = 0; s < this._hprHandles$1.length; s++)
            if (lt.subtract(a, this._hprHandles$1[s]).get_length() < this._hitDist$1)
              switch (s) {
                case 0:
                  return this._dragMode$1 = 4, this._valueOnDown$1 = this._heading$1, this._valueOnDown2$1 = this._pitch$1, !0;
                case 1:
                  return this._dragMode$1 = 7, this._valueOnDown$1 = this._heading$1, this._valueOnDown2$1 = this._pitch$1, !0;
                case 2:
                  return this._dragMode$1 = 5, this._valueOnDown$1 = this._pitch$1, this._valueOnDown2$1 = this._roll$1, !0;
                case 3:
                  return this._dragMode$1 = 8, this._valueOnDown$1 = this._pitch$1, this._valueOnDown2$1 = this._roll$1, !0;
                case 4:
                  return this._dragMode$1 = 6, this._valueOnDown$1 = this._roll$1, this._valueOnDown2$1 = this._heading$1, !0;
                case 5:
                  return this._dragMode$1 = 9, this._valueOnDown$1 = this._roll$1, this._valueOnDown2$1 = this._heading$1, !0;
              }
          return !1;
        },
        mouseUp: function(t, e) {
          return this._dragMode$1 ? (this._dragMode$1 = 0, this._lockPreferedAxis$1 = !1, !0) : !1;
        },
        mouseMove: function(t, e) {
          var r = this.pointToView(lt.create(e.offsetX, e.offsetY));
          if (this._dragMode$1) {
            var a = 0, s = r.x - this._pntDown$1.x, l = -(r.y - this._pntDown$1.y);
            switch (this._lockPreferedAxis$1 ? this._preferY$1 ? (a = l, this._preferY$1 = !0, Ke.set_current(Ee.get_sizeNS())) : (a = s, this._preferY$1 = !1, Ke.set_current(Ee.get_sizeWE())) : (Math.abs(s) > Math.abs(l) ? (a = s, this._preferY$1 = !1) : (a = l, this._preferY$1 = !0), a > 5 && (this._lockPreferedAxis$1 = !0)), this._dragMode$1) {
              case 0:
                break;
              case 1:
                this._translate$1.x = this._valueOnDown$1 + 12 * this._uiScale$1 * (a / V.singleton.renderContext.width);
                break;
              case 2:
                this._translate$1.y = this._valueOnDown$1 + 12 * this._uiScale$1 * (a / V.singleton.renderContext.width);
                break;
              case 3:
                this._translate$1.z = this._valueOnDown$1 + 12 * this._uiScale$1 * (a / V.singleton.renderContext.width);
                break;
              case 4:
                this._heading$1 = this._valueOnDown$1 - s / 4, this._pitch$1 = this._valueOnDown2$1 + l / 4;
                break;
              case 5:
                this._pitch$1 = this._valueOnDown$1 + l / 4, this._roll$1 = this._valueOnDown2$1 - s / 4;
                break;
              case 6:
                this._roll$1 = this._valueOnDown$1 + l / 4, this._heading$1 = this._valueOnDown2$1 - s / 4;
                break;
              case 7:
                this._heading$1 = this._valueOnDown$1 - s / 4, this._pitch$1 = this._valueOnDown2$1 - l / 4;
                break;
              case 8:
                this._pitch$1 = this._valueOnDown$1 + l / 4, this._roll$1 = this._valueOnDown2$1 + s / 4;
                break;
              case 9:
                this._roll$1 = this._valueOnDown$1 - l / 4, this._heading$1 = this._valueOnDown2$1 - s / 4;
                break;
              case 10:
                this._scale$1.x = this._scale$1.y = this._scale$1.z = this._valueOnDown$1 * Math.pow(2, a / 100);
                break;
            }
            return this.fireChanged(), !0;
          } else {
            var h = r;
            if (lt.subtract(h, this._xHandle$1).get_length() < this._hitDist$1 || lt.subtract(h, this._yHandle$1).get_length() < this._hitDist$1 || lt.subtract(h, this._zHandle$1).get_length() < this._hitDist$1)
              return Ke.set_current(Ee.get_sizeAll()), !0;
            for (var u = 0; u < this._hprHandles$1.length; u++)
              if (lt.subtract(h, this._hprHandles$1[u]).get_length() < this._hitDist$1)
                return Ke.set_current(Ee.get_sizeAll()), !0;
          }
          return !1;
        },
        mouseClick: function(t, e) {
          return !1;
        },
        click: function(t, e) {
          return !1;
        },
        mouseDoubleClick: function(t, e) {
          return !1;
        },
        keyDown: function(t, e) {
          return !1;
        },
        keyUp: function(t, e) {
          return !1;
        },
        hover: function(t) {
          return !1;
        }
      };
      function zs(t) {
        this._layer$1 = null, this._opened$1 = !0, this._callbacks$1 = null, Dr.call(this), this._layer$1 = t;
      }
      var b_ = {
        setUICallbacks: function(t) {
          this._callbacks$1 = t;
        },
        get_hasTreeViewNodes: function() {
          return !0;
        },
        getTreeNodes: function() {
          var t = [];
          return this._layer$1.object3d.objects.length > 0 && this._layer$1.object3d.objects[0].children != null && this._loadTree$1(t, this._layer$1.object3d.objects[0].children), t;
        },
        _loadTree$1: function(t, e) {
          for (var r = n.enumerate(e); r.moveNext(); ) {
            var a = r.current, s = new Zn();
            s.set_name(a.name), s.set_tag(a), s.set_checked(a.enabled), s.add_nodeSelected(n.bind("_node_NodeSelected$1", this)), s.add_nodeChecked(n.bind("_node_NodeChecked$1", this)), t.push(s), this._loadTree$1(s.get_nodes(), a.children);
          }
        },
        _node_NodeChecked$1: function(t, e) {
          var r = t.get_tag();
          r != null && (r.enabled = e);
        },
        _node_NodeSelected$1: function(t) {
          if (this._callbacks$1 != null) {
            var e = t.get_tag(), r = {};
            r.Name = e.name, r["Pivot.X"] = e.pivotPoint.x.toString(), r["Pivot.Y"] = e.pivotPoint.y.toString(), r["Pivot.Z"] = e.pivotPoint.z.toString(), this._callbacks$1.showRowData(r);
          }
        },
        getNodeContextMenu: function(t) {
          return Dr.prototype.getNodeContextMenu.call(this, t);
        }
      };
      function Ha() {
        this._frames$1 = [], this._primaryUI$1 = null, this._pointOpacity$1 = 1, this._pointColor$1 = ot.get_yellow(), this._filename$1 = "", this._dataFile$1 = "", we.call(this);
      }
      var y_ = {
        get_frames: function() {
          return this._frames$1;
        },
        set_frames: function(t) {
          return this._frames$1 = t, t;
        },
        getPrimaryUI: function() {
          return this._primaryUI$1 == null && (this._primaryUI$1 = new Bs(this)), this._primaryUI$1;
        },
        cleanUp: function() {
          for (var t = n.enumerate(this._frames$1); t.moveNext(); ) {
            var e = t.current;
            e.get_orbit() != null && (e.get_orbit().cleanUp(), e.set_orbit(null));
          }
        },
        writeLayerProperties: function(t) {
          t._writeAttributeString("PointOpacity", this.get_pointOpacity().toString()), t._writeAttributeString("PointColor", this._pointColor$1.save());
        },
        get_pointOpacity: function() {
          return this._pointOpacity$1;
        },
        set_pointOpacity: function(t) {
          return this._pointOpacity$1 !== t && (this.version++, this._pointOpacity$1 = t), t;
        },
        get_pointColor: function() {
          return this._pointColor$1;
        },
        set_pointColor: function(t) {
          return this._pointColor$1 !== t && (this.version++, this._pointColor$1 = t), t;
        },
        getParams: function() {
          var t = new Array(6);
          return t[0] = this._pointOpacity$1, t[1] = this.get_color().r / 255, t[2] = this.get_color().g / 255, t[3] = this.get_color().b / 255, t[4] = this.get_color().a / 255, t[5] = this.get_opacity(), t;
        },
        getParamNames: function() {
          return ["PointOpacity", "Color.Red", "Color.Green", "Color.Blue", "Color.Alpha", "Opacity"];
        },
        setParams: function(t) {
          if (t.length === 6) {
            this._pointOpacity$1 = t[0], this.set_opacity(t[5]);
            var e = B.fromArgb(n.truncate(t[4] * 255), n.truncate(t[1] * 255), n.truncate(t[2] * 255), n.truncate(t[3] * 255));
            this.set_color(e);
          }
        },
        initializeFromXml: function(t) {
          this.set_pointOpacity(parseFloat(t.attributes.getNamedItem("PointOpacity").nodeValue)), this.set_pointColor(B.load(t.attributes.getNamedItem("PointColor").nodeValue));
        },
        draw: function(t, e, r) {
          var a = t.get_world();
          t.set_world(t.get_worldBaseNonRotating());
          for (var s = n.enumerate(this._frames$1); s.moveNext(); ) {
            var l = s.current;
            l.showOrbitPath && (l.get_orbit() == null && l.set_orbit(new dn(l.get_elements(), 360, this.get_color(), 1, t.get_nominalRadius())), l.get_orbit().draw3D(t, e * this.get_opacity(), new L()));
          }
          return t.set_world(a), !0;
        },
        addFilesToCabinet: function(t) {
          this._filename$1 = t.tempDirectory + n.format("{0}\\{1}.txt", t.get_packageID(), this.id.toString()), this._filename$1.substring(0, this._filename$1.lastIndexOf("\\"));
          var e = new Blob([this._dataFile$1]);
          t.addFile(this._filename$1, e), we.prototype.addFilesToCabinet.call(this, t);
        },
        loadData: function(t, e) {
          var r = this, a = t.getFileBlob(e), s = new FileReader();
          s.onloadend = function(l) {
            r._dataFile$1 = n.safeCast(s.result, String), r.loadString(r._dataFile$1);
          }, s.readAsText(a);
        },
        loadString: function(t) {
          var e = t.split(`
`);
          this._frames$1.length = 0;
          for (var r = 0; r < e.length; r += 2) {
            var a = r, s = r + 1;
            if (e[r].length > 0) {
              var l = new ci();
              if (e[r].substring(0, 1) !== "1")
                a++, s++, l.name = n.trim(e[r]), r++;
              else if (e[r].substring(0, 1) === "1")
                l.name = e[r].substring(2, 5);
              else {
                r -= 2;
                continue;
              }
              l.reference = 18, l.oblateness = 0, l.showOrbitPath = !0, l.showAsPoint = !0, l.referenceFrameType = 1, l.scale = 1, l.semiMajorAxisUnits = 1, l.meanRadius = 10, l.oblateness = 0, l.fromTLE(e[a], e[s], 3986004418e5), this._frames$1.push(l);
            } else
              r -= 1;
          }
        }
      };
      function Bs(t) {
        this._layer$1 = null, this._opened$1 = !0, this._callbacks$1 = null, Dr.call(this), this._layer$1 = t;
      }
      var S_ = {
        setUICallbacks: function(t) {
          this._callbacks$1 = t;
        },
        get_hasTreeViewNodes: function() {
          return !0;
        },
        getTreeNodes: function() {
          for (var t = [], e = n.enumerate(this._layer$1.get_frames()); e.moveNext(); ) {
            var r = e.current, a = new Zn();
            a.set_name(r.name), a.set_tag(r), a.set_checked(r.showOrbitPath), a.add_nodeSelected(n.bind("_node_NodeSelected$1", this)), a.add_nodeChecked(n.bind("_node_NodeChecked$1", this)), t.push(a);
          }
          return t;
        },
        _node_NodeChecked$1: function(t, e) {
          var r = t.get_tag();
          r != null && (r.showOrbitPath = e);
        },
        _node_NodeSelected$1: function(t) {
          if (this._callbacks$1 != null) {
            var e = t.get_tag(), r = {};
            r.Name = e.name, r["SemiMajor Axis"] = e.semiMajorAxis.toString(), r["SMA Units"] = e.semiMajorAxisUnits.toString(), r.Inclination = e.inclination.toString(), r.Eccentricity = e.eccentricity.toString(), r["Long of Asc. Node"] = e.longitudeOfAscendingNode.toString(), r["Argument Of Periapsis"] = e.argumentOfPeriapsis.toString(), r.Epoch = e.epoch.toString(), r["Mean Daily Motion"] = e.meanDailyMotion.toString(), r["Mean Anomoly at Epoch"] = e.meanAnomolyAtEpoch.toString(), this._callbacks$1.showRowData(r);
          }
        },
        getNodeContextMenu: function(t) {
          return Dr.prototype.getNodeContextMenu.call(this, t);
        }
      };
      function ei() {
        this._dataDirty$1 = !1, this._lastNormalizeSizeColumnIndex$1 = -1, this._lastDynamicColorColumnIndex$1 = -1, this._table_backcompat$1 = null, this._barChartBitmask$1 = 0, this._barScaleFactor$1 = 20, this._meanRadius$1 = 6371e3, this._table$1 = new Pn(), this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 16, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = new Date("1/1/2100"), this._endRange$1 = new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this.colorMap = 3, this.colorMapperName = "Greys", this._dynamicColorColumnName$1 = "2efc32e3-b9d9-47ff-8036-8cc344c585bd", this.dynamicColor = !1, this.normalizeColorMap = !1, this.normalizeColorMapMin = 0, this.normalizeColorMapMax = 1, this._markerColumn$1 = -1, this.colorMapColumn = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this._normalizeSizeColumnName$1 = "dfe78b4c-f972-4796-b04f-68c5efd4ecb0", this.normalizeSize = !1, this.normalizeSizeClip = !1, this.normalizeSizeMin = 0, this.normalizeSizeMax = 1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this.lastVersion = 0, we.call(this);
      }
      ei._getDatafromFeed$1 = function(t) {
        return "";
      }, ei._executeQuery$1 = function(t) {
        return "";
      }, ei.parseDate = function(t) {
        var e = n.now();
        try {
          e = new Date(t);
        } catch {
          try {
            return ei.execlToDateTime(parseFloat(t));
          } catch {
          }
        }
        return e;
      }, ei.execlToDateTime = function(t) {
        t > 59 && (t -= 1), t > 73e4 && (t = 73e4);
        var e = new Date(1899, 12, 31);
        return new Date(e.getDate() + n.truncate(t * 24 * 60 * 60 * 1e3));
      }, ei.get__circleTexture$1 = function() {
        if (ei._circleTexture$1 == null) {
          var t = Kt.singleton.engineAssetUrl("circle.png");
          ei._circleTexture$1 = A.loadPlanetTexture(t);
        }
        return ei._circleTexture$1;
      };
      var C_ = {
        getTypeName: function() {
          return "TerraViewer.SpreadSheetLayer";
        },
        get_header: function() {
          return this._table$1.header;
        },
        canCopyToClipboard: function() {
          return !0;
        },
        copyToClipboard: function() {
        },
        dynamicUpdate: function() {
          var t = ei._getDatafromFeed$1(this.get_dataSourceUrl());
          return t != null ? (this.updateData(t, !1, !0, !0), this.guessHeaderAssignments(), !0) : !1;
        },
        updateData: function(t, e, r, a) {
          return this.loadFromString(n.safeCast(t, String), !0, e, r, a), this.computeDateDomainRange(-1, -1), this._dataDirty$1 = !0, this.dirty = !0, !0;
        },
        loadData: function(t, e) {
          var r = this;
          this._table$1 = new Pn();
          var a = t.getFileBlob(e);
          this.getStringFromGzipBlob(a, function(s) {
            r._table$1.loadFromString(s, !1, !0, !0), r._table$1.header.indexOf(r._normalizeSizeColumnName$1) > -1 && r._table$1.removeColumn(r._normalizeSizeColumnName$1), r.computeDateDomainRange(-1, -1), r.get_dynamicData() && r.get_autoUpdate() && r.dynamicUpdate(), r._dataDirty$1 = !0, r.dirty = !0;
          });
        },
        addFilesToCabinet: function(t) {
          this._fileName$1 = t.tempDirectory + n.format("{0}\\{1}.txt", t.get_packageID(), this.id.toString()), this._fileName$1.substring(0, this._fileName$1.lastIndexOf("\\"));
          var e = "";
          this._table_backcompat$1 == null ? e = this._table$1.save() : e = this._table_backcompat$1.save();
          var r = new Blob([e]);
          t.addFile(this._fileName$1, r), we.prototype.addFilesToCabinet.call(this, t);
        },
        _prepareBackCompatTable$1: function() {
          if ((this.sizeColumn === -1 || !this.get_normalizeSize()) && (this.colorMapColumn === -1 || !this.get_dynamicColor())) {
            this._lastNormalizeSizeColumnIndex$1 = -1, this._lastDynamicColorColumnIndex$1 = -1;
            return;
          }
          if (this._table_backcompat$1 = this._table$1.clone(), this.sizeColumn > -1 && this.get_normalizeSize()) {
            for (var t = [], e = n.enumerate(this._table_backcompat$1.rows); e.moveNext(); ) {
              var r = e.current;
              t.push(this.normalizePointSize(parseFloat(r[this.sizeColumn])).toString());
            }
            this._table_backcompat$1.addColumn(this._normalizeSizeColumnName$1, t), this._lastNormalizeSizeColumnIndex$1 = this._table_backcompat$1.header.length - 1;
          } else
            this._lastNormalizeSizeColumnIndex$1 = -1;
          if (this.colorMapColumn > -1 && this.get_dynamicColor()) {
            for (var a = [], s = n.enumerate(this._table_backcompat$1.rows); s.moveNext(); ) {
              var r = s.current;
              a.push(this.get_colorMapper().findClosestColor(this.normalizeColorMapValue(parseFloat(r[this.get_colorMapColumn()]))).toSimpleHex());
            }
            this._table_backcompat$1.addColumn(this._dynamicColorColumnName$1, a), this._lastDynamicColorColumnIndex$1 = this._table_backcompat$1.header.length - 1;
          } else
            this._lastDynamicColorColumnIndex$1 = -1;
        },
        guessHeaderAssignments: function() {
          for (var t = 0, e = n.enumerate(this._table$1.header); e.moveNext(); ) {
            var r = e.current;
            this._guessHeaderAssignment$1(r, t++);
          }
          this._table$1.header.length > 0 && (this.nameColumn = 0);
        },
        guessHeaderAssignmentsFromVoTable: function(t) {
          var e = t.getDecColumn();
          e != null && (this.latColumn = e.index, this.astronomical = !0);
          var r = t.getRAColumn();
          r != null && (this.lngColumn = r.index, this.astronomical = !0, this.pointScaleType = 4);
          var a = t.getMagColumn();
          a != null && (this.sizeColumn = a.index);
          for (var s = 0, l = n.enumerate(t.column); l.moveNext(); ) {
            var h = l.current;
            this._guessHeaderAssignment$1(h.name, s++);
          }
          this._table$1.header.length > 0 && (this.nameColumn = 0);
        },
        _guessHeaderAssignment$1: function(t, e) {
          t = t.toLowerCase(), t.indexOf("lat") > -1 && this.latColumn === -1 && (this.latColumn = e), (t.indexOf("lon") > -1 || t.indexOf("lng") > -1) && this.lngColumn === -1 && (this.lngColumn = e), t.indexOf("dec") > -1 && this.latColumn === -1 && (this.latColumn = e, this.astronomical = !0), (t.indexOf("ra") > -1 || t.indexOf("ascen") > -1) && this.lngColumn === -1 && (this.lngColumn = e, this.astronomical = !0, this.pointScaleType = 4), (t.indexOf("mag") > -1 || t.indexOf("size") > -1) && this.sizeColumn === -1 && (this.sizeColumn = e), (t.indexOf("date") > -1 || t.indexOf("time") > -1 || t.indexOf("dt") > -1 || t.indexOf("tm") > -1) && (t.indexOf("end") > -1 && this.endDateColumn === -1 ? this.endDateColumn = e : this.startDateColumn === -1 && (this.startDateColumn = e)), (t.indexOf("altitude") > -1 || t.indexOf("alt") > -1) && this.altColumn === -1 && (this.altColumn = e, this.set_altType(1), this.set_altUnit(1)), t.indexOf("depth") > -1 && this.altColumn === -1 && (this.altColumn = e, this.set_altType(0), this.set_altUnit(5)), n.startsWith(t, "x") && this.get_xAxisColumn() === -1 && this.set_xAxisColumn(e), n.startsWith(t, "y") && this.get_yAxisColumn() === -1 && this.set_yAxisColumn(e), n.startsWith(t, "z") && this.get_zAxisColumn() === -1 && this.set_zAxisColumn(e), t.indexOf("color") > -1 && this.get_colorMapColumn() === -1 && this.set_colorMapColumn(e), (t.indexOf("geometry") > -1 || t.indexOf("geography") > -1) && this.geometryColumn === -1 && (this.geometryColumn = e);
        },
        computeDateDomainRange: function(t, e) {
          t === -1 && (t = this.startDateColumn), e === -1 && (e = this.endDateColumn), e === -1 && (e = t), this.set_beginRange(new Date("12/31/2100")), this.set_endRange(new Date("12/31/1890"));
          for (var r = n.enumerate(this._table$1.rows); r.moveNext(); ) {
            var a = r.current;
            try {
              if (t > -1) {
                var s = !0, l = new Date("12/31/2100");
                try {
                  l = new Date(a[t]), l < this.get_beginRange() && this.set_beginRange(l);
                } catch {
                }
                try {
                  var h = new Date("12/31/1890");
                  e > -1 && (h = new Date(a[e]), s && h > this.get_endRange() && this.set_endRange(h));
                } catch {
                }
              }
            } catch {
            }
          }
        },
        checkState: function() {
        },
        getMaxValue: function(t) {
          var e = 0;
          this._table$1.lock();
          for (var r = n.enumerate(this._table$1.rows); r.moveNext(); ) {
            var a = r.current;
            try {
              if (t > -1) {
                var s = !0;
                try {
                  var l = parseFloat(a[t]);
                  s && l > e && (e = l);
                } catch {
                }
              }
            } catch {
            }
          }
          return this._table$1.unlock(), e;
        },
        getDomainValues: function(t) {
          var e = [];
          this._table$1.lock();
          for (var r = n.enumerate(this._table$1.rows); r.moveNext(); ) {
            var a = r.current;
            try {
              t > -1 && (e.indexOf(a[t]) >= 0 || e.push(a[t]));
            } catch {
            }
          }
          return e.sort(), this._table$1.unlock(), e;
        },
        get_barChartBitmask: function() {
          return this._barChartBitmask$1;
        },
        set_barChartBitmask: function(t) {
          return this._barChartBitmask$1 = t, t;
        },
        _isPointInFrustum$1: function(t, e) {
          for (var r = new Yn(t.x, t.y, t.z, 1), a = 0; a < 6; a++)
            if (e[a].dot(r) < 0)
              return !1;
          return !0;
        },
        getTableDataInView: function() {
          for (var t = "", e = !0, r = n.enumerate(this.get_header()); r.moveNext(); ) {
            var a = r.current;
            e ? e = !1 : t += "	", t += a;
          }
          t += `\r
`;
          for (var s = n.enumerate(this.get__table().rows); s.moveNext(); ) {
            var l = s.current, h = parseFloat(l[this.get_lngColumn()]), u = parseFloat(l[this.get_latColumn()]), _ = R.geoTo3dDouble(u, h);
            if (this._isPointInFrustum$1(_, V.singleton.renderContext.get_frustum())) {
              e = !0;
              for (var m = n.enumerate(l); m.moveNext(); ) {
                var a = m.current;
                e ? e = !1 : t += "	", t += a;
              }
              t += `\r
`;
            }
          }
          return t;
        },
        prepVertexBuffer: function(t, e) {
          this._table$1.lock(), this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList != null && this.triangleList.clear(), this.pointList != null && this.pointList.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.lineList == null && (this.lineList = new _n()), this.pointList == null && (this.pointList = new tr(t)), this.lineList.timeSeries = this.timeSeries, this.lineList2d == null && (this.lineList2d = new _n(), this.lineList2d.set_depthBuffered(!1)), this.lineList.timeSeries = this.timeSeries, this.triangleList == null && (this.triangleList = new Er()), this.triangleList2d == null && (this.triangleList2d = new Er(), this.triangleList2d.depthBuffered = !1), this.positions.length = 0;
          var r = 0, a = this.get_color(), s = R.meanObliquityOfEcliptic(Z.get_jNow()) / 180 * Math.PI, l = T.get_allMaps()[this.get_referenceFrame()].frame.meanRadius;
          l && (this._meanRadius$1 = l);
          for (var h = new L(), u = 2e-4, _ = ot.get_white(), m = 0, p = 0, b = n.enumerate(this._table$1.rows); b.moveNext(); ) {
            var S = b.current;
            try {
              if (this.geometryColumn > -1 || !this.get_coordinatesType() && this.lngColumn > -1 && this.latColumn > -1 || this.get_coordinatesType() === 1 && this.get_xAxisColumn() > -1 && this.get_yAxisColumn() > -1) {
                var x = 0, k = 0, P = 0, I = 1, D = 0, G = 0, U = this.getScaleFactor(this.get_altUnit(), 1);
                if (this.altColumn === -1 || this.get_altType() === 3 || this.bufferIsFlat)
                  I = 1, (this.astronomical & !this.bufferIsFlat) === 1 && (I = 63239.6717 * 100);
                else {
                  this.get_altType() || (U = -U), I = 0;
                  try {
                    I = parseFloat(S[this.altColumn]);
                  } catch {
                  }
                  this.astronomical ? (U = U / (1e3 * 149598e3), G = I * U / 206264.806, D = U * I, I = U * I) : this.get_altType() === 2 ? (D = U * I, I = U * I / this._meanRadius$1) : (D = U * I, I = 1 + U * I / this._meanRadius$1);
                }
                if (!this.get_coordinatesType() && this.lngColumn > -1 && this.latColumn > -1) {
                  x = parseFloat(S[this.lngColumn]), k = parseFloat(S[this.latColumn]), this.astronomical ? (this.get_raUnits() || (x *= 15), this.bufferIsFlat) : x += 180;
                  var Y = R.geoTo3dRad(k, x, I);
                  this.astronomical && !this.bufferIsFlat && Y.rotateX(s), h = Y, this.positions.push(h);
                } else if (this.get_coordinatesType() === 1) {
                  var j = this.getScaleFactor(this.get_cartesianScale(), this.get_cartesianCustomScale());
                  this.astronomical ? j /= 1e3 * 149598e3 : j /= this._meanRadius$1, this.get_zAxisColumn() > -1 && (P = parseFloat(S[this.get_zAxisColumn()])), x = parseFloat(S[this.get_xAxisColumn()]), k = parseFloat(S[this.get_yAxisColumn()]), this.get_xAxisReverse() && (x = -x), this.get_yAxisReverse() && (k = -k), this.get_zAxisReverse() && (P = -P), h = L.create(x * j, P * j, k * j), this.positions.push(h);
                }
                switch (this.get_colorMap()) {
                  case 0:
                    _ = a;
                    break;
                  case 3:
                    this.get_colorMapColumn() > -1 ? this.get_dynamicColor() ? _ = this.get_colorMapper().findClosestColor(this.normalizeColorMapValue(parseFloat(S[this.get_colorMapColumn()]))) : _ = this._parseColor$1(S[this.get_colorMapColumn()], a) : _ = a;
                    break;
                  default:
                    break;
                }
                if (_ == null && (_ = ot.get_transparent()), this.sizeColumn > -1)
                  switch (this.pointScaleType) {
                    case 0:
                      u = parseFloat(S[this.sizeColumn]), u = this.normalizePointSize(u);
                      break;
                    case 2:
                      u = parseFloat(S[this.sizeColumn]), u = Math.log(u);
                      break;
                    case 1:
                      try {
                        u = parseFloat(S[this.sizeColumn]), u = this.normalizePointSize(u), u = Math.pow(2, u);
                      } catch {
                        u = 0;
                      }
                      break;
                    case 4:
                      var K = 0;
                      try {
                        K = parseFloat(S[this.sizeColumn]), this.bufferIsFlat ? u = 40 / Math.pow(1.6, K) : (K = K - 5 * (at.logN(G, 10) - 1), u = 12e7 / Math.pow(1.6, K));
                      } catch {
                        u = 0;
                      }
                      break;
                    case 3:
                      u = 1;
                      break;
                    default:
                      break;
                  }
                else
                  u = 0.2;
                if (this.get_plotType() === 1 && (u = 1), this.astronomical & !this.bufferIsFlat, this.startDateColumn > -1) {
                  var Q = new Date(S[this.startDateColumn]);
                  m = Z.utcToJulian(Q) - Z.utcToJulian(this.baseDate), this.endDateColumn > -1 ? (Q = new Date(S[this.endDateColumn]), p = Z.utcToJulian(Q) - Z.utcToJulian(this.baseDate)) : p = m;
                }
                this.pointList.addPoint(h, _, new ve(m, p), u), this.geometryColumn > -1 && this._parseGeometry$1(S[this.geometryColumn], _, _, D, new ve(m, p)), r++;
              }
            } catch {
            }
            this.lines = !1;
          }
          return this._table$1.unlock(), this._dataDirty$1 = !1, this.dirty = !1, !1;
        },
        _parseGeometry$1: function(t, e, r, a, s) {
          t = n.trim(t).toLowerCase();
          var l = t.indexOf("(");
          if (!(l < 0) && n.endsWith(t, ")")) {
            var h = n.trim(t.substring(0, l)), u = t.substr(l), _ = h.split(" "), m = null, p = null;
            if (_.length > 0)
              for (var b = n.enumerate(_); b.moveNext(); ) {
                var S = b.current;
                n.emptyString(m) ? m = S : n.emptyString(p) && (p = S);
              }
            switch (m) {
              case "multipolygon":
              case "polygon":
                this._parsePolygon$1(u, p, e, r, a, s);
                break;
              case "multilinestring":
                this._parseLineString$1(u, p, e, a, !1, s);
                break;
              case "linestring":
                this._parseLineString$1(u, p, e, a, !0, s);
                break;
              case "geometrycollection":
                u = u.substring(1, u.length - 2);
                for (var x = Oe.splitString(u, ","), k = n.enumerate(x); k.moveNext(); ) {
                  var P = k.current;
                  this._parseGeometry$1(P, e, r, a, s);
                }
                break;
            }
          }
        },
        _parsePolygon$1: function(t, e, r, a, s, l) {
          if (!(!n.startsWith(t, "(") && n.endsWith(t, ")"))) {
            t = t.substring(1, t.length - 2);
            for (var h = Oe.splitString(t, ","), u = n.enumerate(h); u.moveNext(); ) {
              var _ = u.current, m = new Pa();
              m.astronomical = this.astronomical, m.meanRadius = this._meanRadius$1, m.parseWkt(_, e, s, l), s ? this._addPolygon$1(!1, m, 1, a, r, !0, !0, l) : this._addPolygonFlat$1(!1, m, 1, a, r, !0, !0, l);
            }
          }
        },
        _parseLineString$1: function(t, e, r, a, s, l) {
          if (!(!n.startsWith(t, "(") && n.endsWith(t, ")"))) {
            s || (t = t.substring(1, t.length - 2));
            for (var h = Oe.splitString(t, ","), u = n.enumerate(h); u.moveNext(); ) {
              var _ = u.current, m = new Pa();
              m.astronomical = this.astronomical, m.meanRadius = this._meanRadius$1, m.parseWkt(_, e, a, l), this._addPolygon$1(!1, m, 1, ot.get_white(), r, !1, !1, l);
            }
          }
        },
        _splitShapes$1: function(t) {
          for (var e = [], r = 0; r < t.length; )
            t.substr(r, 1);
          return e;
        },
        _addPolygon$1: function(t, e, r, a, s, l, h, u) {
          for (var _ = [], m = [], p = 0; p < e.pointList.length; p++)
            _.push(R.geoTo3dRad(e.pointList[p].lat, e.pointList[p].lng, 1 + e.pointList[p].alt / this._meanRadius$1)), m.push(R.geoTo3dRad(e.pointList[p].lat, e.pointList[p].lng, 1));
          for (var p = 0; p < e.pointList.length - 1; p++)
            t || (l && this.triangleList.addQuad(_[p], _[p + 1], m[p], m[p + 1], a, u), r > 0 && (l ? this.lineList.addLine(_[p], _[p + 1], s, u) : this.lineList2d.addLine(_[p], _[p + 1], s, u), l && (this.lineList.addLine(m[p], m[p + 1], s, u), this.lineList.addLine(_[p], m[p], s, u), this.lineList.addLine(_[p + 1], m[p + 1], s, u))));
          if (h)
            for (var b = gn.tesselateSimplePoly(_), p = 0; p < b.length; p += 3)
              this.triangleList.addTriangle(_[b[p]], _[b[p + 1]], _[b[p + 2]], a, u);
        },
        _addPolygonFlat$1: function(t, e, r, a, s, l, h, u) {
          for (var _ = [], m = 0; m < e.pointList.length; m++)
            _.push(R.geoTo3dRad(e.pointList[m].lat, e.pointList[m].lng, 1 + e.pointList[m].alt / this._meanRadius$1));
          for (var m = 0; m < e.pointList.length - 1; m++)
            t || r > 0 && this.lineList2d.addLine(_[m], _[m + 1], s, u);
          if (h)
            for (var p = gn.tesselateSimplePoly(_), m = 0; m < p.length; m += 3)
              this.triangleList2d.addSubdividedTriangles(_[p[m]], _[p[m + 1]], _[p[m + 2]], a, u, 2);
        },
        _parseColor$1: function(t, e) {
          return B.load(t);
        },
        getScaleFactor: function(t, e) {
          var r = 1;
          switch (t) {
            case 1:
              r = 1;
              break;
            case 2:
              r = 1 * 0.3048;
              break;
            case 3:
              r = 1 / 12 * 0.3048;
              break;
            case 4:
              r = 5280 * 0.3048;
              break;
            case 5:
              r = 1e3;
              break;
            case 6:
              r = 1e3 * 149598e3;
              break;
            case 7:
              r = 1e3 * 149598e3 * 63239.6717;
              break;
            case 8:
              r = 1e3 * 149598e3 * 206264.806;
              break;
            case 9:
              r = 1e3 * 149598e3 * 206264.806 * 1e6;
              break;
            case 10:
              r = e;
              break;
          }
          return r;
        },
        get__table: function() {
          return this._table$1;
        },
        set__table: function(t) {
          return this._table$1 = t, t;
        },
        useHeadersFromVoTable: function(t) {
          for (var e = n.enumerate(t.column); e.moveNext(); ) {
            var r = e.current;
            this.get_header().push(r.name);
          }
          this.guessHeaderAssignmentsFromVoTable(t), t.getRAColumn() != null && t.getRAColumn().unit.toLowerCase() === "deg" && this.set_raUnits(1);
        },
        loadFromString: function(t, e, r, a, s) {
          if (e || (this._table$1 = new Pn()), this._table$1.lock(), this._table$1.loadFromString(t, e, a, s), !e && (this.guessHeaderAssignments(), this.astronomical && this.lngColumn > -1)) {
            var l = this.getMaxValue(this.lngColumn);
            l > 24 && this.set_raUnits(1);
          }
          r && this.purgeByTime(), this._table$1.unlock();
        },
        purgeByTime: function() {
          if (!(this.startDateColumn < 0)) {
            var t = this.startDateColumn;
            this.endDateColumn > -1 && (t = this.endDateColumn);
            var e = Z.get_now(), r = n.truncate(this.decay) * 24 * 60 * 60 * 1e3;
            e = new Date(e.getDate() - r);
            for (var a = this._table$1.rows.length, s = 0; s < a; s++)
              try {
                var l = this._table$1.rows[s], h = new Date(l[t]);
                h < e && (this._table$1.rows.splice(s, 1), a--, s--);
              } catch {
              }
          }
        },
        cleanUp: function() {
          this.cleanUpBase(), this._table$1.lock(), we.prototype.cleanUp.call(this), this._table$1.unlock(), this.dirty = !0;
        },
        writeLayerProperties: function(t) {
          t._writeAttributeString("TimeSeries", this.get_timeSeries().toString()), t._writeAttributeString("BeginRange", at.xmlDate(this.get_beginRange())), t._writeAttributeString("EndRange", at.xmlDate(this.get_endRange())), t._writeAttributeString("Decay", this.get_decay().toString()), t._writeAttributeString("CoordinatesType", Et.toXml("CoordinatesTypes", this.get_coordinatesType())), t._writeAttributeString("LatColumn", this.get_latColumn().toString()), t._writeAttributeString("LngColumn", this.get_lngColumn().toString()), t._writeAttributeString("GeometryColumn", this.get_geometryColumn().toString()), t._writeAttributeString("AltType", Et.toXml("AltTypes", this.get_altType())), t._writeAttributeString("MarkerMix", Et.toXml("MarkerMixes", this.get_markerMix())), t._writeAttributeString("ColorMap", Et.toXml("ColorMaps", this.get_colorMap())), t._writeAttributeString("MarkerColumn", this.get_markerColumn().toString()), t._writeAttributeString("PlotType", Et.toXml("PlotTypes", this.get_plotType())), t._writeAttributeString("MarkerIndex", this.get_markerIndex().toString()), t._writeAttributeString("MarkerScale", Et.toXml("MarkerScales", this.get_markerScale())), t._writeAttributeString("AltUnit", Et.toXml("AltUnits", this.get_altUnit())), t._writeAttributeString("AltColumn", this.get_altColumn().toString()), t._writeAttributeString("StartDateColumn", this.get_startDateColumn().toString()), t._writeAttributeString("EndDateColumn", this.get_endDateColumn().toString()), this._prepareBackCompatTable$1(), this._lastNormalizeSizeColumnIndex$1 > -1 ? (t._writeAttributeString("SizeColumn", this._lastNormalizeSizeColumnIndex$1), t._writeAttributeString("NormalizeSizeColumn", this.sizeColumn.toString())) : t._writeAttributeString("SizeColumn", this.get_sizeColumn().toString()), t._writeAttributeString("NormalizeSize", this.get_normalizeSize().toString()), t._writeAttributeString("NormalizeSizeClip", this.get_normalizeSizeClip().toString()), t._writeAttributeString("NormalizeSizeMin", this.get_normalizeSizeMin().toString()), t._writeAttributeString("NormalizeSizeMax", this.get_normalizeSizeMax().toString()), this._lastDynamicColorColumnIndex$1 > -1 ? (t._writeAttributeString("ColorMapColumn", this._lastDynamicColorColumnIndex$1), t._writeAttributeString("DynamicColorColumn", this.get_colorMapColumn().toString())) : t._writeAttributeString("ColorMapColumn", this.get_colorMapColumn().toString()), t._writeAttributeString("DynamicColor", this.get_dynamicColor().toString()), t._writeAttributeString("ColorMapperName", this.get_colorMapperName()), t._writeAttributeString("NormalizeColorMap", this.get_normalizeColorMap().toString()), t._writeAttributeString("NormalizeColorMapMin", this.get_normalizeColorMapMin().toString()), t._writeAttributeString("NormalizeColorMapMax", this.get_normalizeColorMapMax().toString()), t._writeAttributeString("HyperlinkFormat", this.get_hyperlinkFormat()), t._writeAttributeString("HyperlinkColumn", this.get_hyperlinkColumn().toString()), t._writeAttributeString("ScaleFactor", this.get_scaleFactor().toString()), t._writeAttributeString("PointScaleType", Et.toXml("PointScaleTypes", this.get_pointScaleType())), t._writeAttributeString("ShowFarSide", this.get_showFarSide().toString()), t._writeAttributeString("RaUnits", Et.toXml("RAUnits", this.get_raUnits())), t._writeAttributeString("HoverTextColumn", this.get_nameColumn().toString()), t._writeAttributeString("XAxisColumn", this.get_xAxisColumn().toString()), t._writeAttributeString("XAxisReverse", this.get_xAxisReverse().toString()), t._writeAttributeString("YAxisColumn", this.get_yAxisColumn().toString()), t._writeAttributeString("YAxisReverse", this.get_yAxisReverse().toString()), t._writeAttributeString("ZAxisColumn", this.get_zAxisColumn().toString()), t._writeAttributeString("ZAxisReverse", this.get_zAxisReverse().toString()), t._writeAttributeString("CartesianScale", Et.toXml("AltUnits", this.get_cartesianScale())), t._writeAttributeString("CartesianCustomScale", this.get_cartesianCustomScale().toString()), t._writeAttributeString("DynamicData", this.get_dynamicData().toString()), t._writeAttributeString("AutoUpdate", this.get_autoUpdate().toString()), t._writeAttributeString("DataSourceUrl", this.get_dataSourceUrl());
        },
        get_dynamicData: function() {
          return this._dynamicData$1;
        },
        set_dynamicData: function(t) {
          return this._dynamicData$1 = t, t;
        },
        get_autoUpdate: function() {
          return this._autoUpdate$1;
        },
        set_autoUpdate: function(t) {
          return this._autoUpdate$1 = t, t;
        },
        get_dataSourceUrl: function() {
          return this._dataSourceUrl$1;
        },
        set_dataSourceUrl: function(t) {
          return this._dataSourceUrl$1 = t, t;
        },
        get_timeSeries: function() {
          return this.timeSeries;
        },
        set_timeSeries: function(t) {
          return this.timeSeries !== t && (this.version++, this.timeSeries = t), t;
        },
        get_beginRange: function() {
          return this._beginRange$1;
        },
        set_beginRange: function(t) {
          return n.compareDates(this._beginRange$1, t) || (this.version++, this._beginRange$1 = t), t;
        },
        get_endRange: function() {
          return this._endRange$1;
        },
        set_endRange: function(t) {
          return n.compareDates(this._endRange$1, t) || (this.version++, this._endRange$1 = t), t;
        },
        initializeFromXml: function(t) {
          this.set_timeSeries(n.boolean(t.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date(t.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date(t.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat(t.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(Et.parse("CoordinatesTypes", t.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt(t.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt(t.attributes.getNamedItem("LngColumn").nodeValue)), t.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt(t.attributes.getNamedItem("GeometryColumn").nodeValue)), this.set_altType(Et.parse("AltTypes", t.attributes.getNamedItem("AltType").nodeValue)), this.set_markerMix(0), this.set_colorMap(Et.parse("ColorMaps", t.attributes.getNamedItem("ColorMap").nodeValue)), this.set_markerColumn(parseInt(t.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt(t.attributes.getNamedItem("ColorMapColumn").nodeValue)), this.set_plotType(Et.parse("PlotTypes", t.attributes.getNamedItem("PlotType").nodeValue)), this.set_markerIndex(parseInt(t.attributes.getNamedItem("MarkerIndex").nodeValue)), this.set_markerScale(Et.parse("MarkerScales", t.attributes.getNamedItem("MarkerScale").nodeValue)), this.set_altUnit(Et.parse("AltUnits", t.attributes.getNamedItem("AltUnit").nodeValue)), this.set_altColumn(parseInt(t.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt(t.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt(t.attributes.getNamedItem("EndDateColumn").nodeValue)), t.attributes.getNamedItem("NormalizeSizeColumn") != null ? this.set_sizeColumn(parseInt(t.attributes.getNamedItem("NormalizeSizeColumn").nodeValue)) : this.set_sizeColumn(parseInt(t.attributes.getNamedItem("SizeColumn").nodeValue)), t.attributes.getNamedItem("NormalizeSize") != null && (this.set_normalizeSize(n.boolean(t.attributes.getNamedItem("NormalizeSize").nodeValue)), this.set_normalizeSizeClip(n.boolean(t.attributes.getNamedItem("NormalizeSizeClip").nodeValue)), this.set_normalizeSizeMin(parseFloat(t.attributes.getNamedItem("NormalizeSizeMin").nodeValue)), this.set_normalizeSizeMax(parseFloat(t.attributes.getNamedItem("NormalizeSizeMax").nodeValue))), t.attributes.getNamedItem("DynamicColorColumn") != null ? this.set_colorMapColumn(parseInt(t.attributes.getNamedItem("DynamicColorColumn").nodeValue)) : this.set_colorMapColumn(parseInt(t.attributes.getNamedItem("ColorMapColumn").nodeValue)), t.attributes.getNamedItem("DynamicColor") != null && (this.set_dynamicColor(n.boolean(t.attributes.getNamedItem("DynamicColor").nodeValue)), this.set_colorMapperName(t.attributes.getNamedItem("ColorMapperName").nodeValue), this.set_normalizeColorMap(n.boolean(t.attributes.getNamedItem("NormalizeColorMap").nodeValue)), this.set_normalizeColorMapMin(parseFloat(t.attributes.getNamedItem("NormalizeColorMapMin").nodeValue)), this.set_normalizeColorMapMax(parseFloat(t.attributes.getNamedItem("NormalizeColorMapMax").nodeValue))), this.set_hyperlinkFormat(t.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt(t.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat(t.attributes.getNamedItem("ScaleFactor").nodeValue)), this.set_pointScaleType(Et.parse("PointScaleTypes", t.attributes.getNamedItem("PointScaleType").nodeValue)), t.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(n.boolean(t.attributes.getNamedItem("ShowFarSide").nodeValue)), t.attributes.getNamedItem("RaUnits") != null && this.set_raUnits(Et.parse("RAUnits", t.attributes.getNamedItem("RaUnits").nodeValue)), t.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt(t.attributes.getNamedItem("HoverTextColumn").nodeValue)), t.attributes.getNamedItem("XAxisColumn") != null && (this.set_xAxisColumn(parseInt(t.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(n.boolean(t.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt(t.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(n.boolean(t.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt(t.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(n.boolean(t.attributes.getNamedItem("ZAxisReverse").nodeValue)), this.set_cartesianScale(Et.parse("AltUnits", t.attributes.getNamedItem("CartesianScale").nodeValue)), this.set_cartesianCustomScale(parseFloat(t.attributes.getNamedItem("CartesianCustomScale").nodeValue))), t.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(n.boolean(t.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(n.boolean(t.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl(t.attributes.getNamedItem("DataSourceUrl").nodeValue));
        },
        get_decay: function() {
          return this.decay;
        },
        set_decay: function(t) {
          return this.decay !== t && (this.version++, this.decay = t), t;
        },
        get_coordinatesType: function() {
          return this._coordinatesType$1;
        },
        set_coordinatesType: function(t) {
          return this._coordinatesType$1 !== t && (this.version++, this._coordinatesType$1 = t), t;
        },
        get_latColumn: function() {
          return this.latColumn;
        },
        set_latColumn: function(t) {
          return this.latColumn !== t && (this.version++, this.latColumn = t), t;
        },
        get_lngColumn: function() {
          return this.lngColumn;
        },
        set_lngColumn: function(t) {
          return this.lngColumn !== t && (this.version++, this.lngColumn = t), t;
        },
        get_geometryColumn: function() {
          return this.geometryColumn;
        },
        set_geometryColumn: function(t) {
          return this.geometryColumn !== t && (this.version++, this.geometryColumn = t), t;
        },
        get_xAxisColumn: function() {
          return this._xAxisColumn$1;
        },
        set_xAxisColumn: function(t) {
          return this._xAxisColumn$1 !== t && (this.version++, this._xAxisColumn$1 = t), t;
        },
        get_yAxisColumn: function() {
          return this._yAxisColumn$1;
        },
        set_yAxisColumn: function(t) {
          return this._yAxisColumn$1 !== t && (this.version++, this._yAxisColumn$1 = t), t;
        },
        get_zAxisColumn: function() {
          return this._zAxisColumn$1;
        },
        set_zAxisColumn: function(t) {
          return this._zAxisColumn$1 !== t && (this.version++, this._zAxisColumn$1 = t), t;
        },
        get_xAxisReverse: function() {
          return this._xAxisReverse$1;
        },
        set_xAxisReverse: function(t) {
          return this._xAxisReverse$1 !== t && (this.version++, this._xAxisReverse$1 = t), t;
        },
        get_yAxisReverse: function() {
          return this._yAxisReverse$1;
        },
        set_yAxisReverse: function(t) {
          return this._yAxisReverse$1 !== t && (this.version++, this._yAxisReverse$1 = t), t;
        },
        get_zAxisReverse: function() {
          return this._zAxisReverse$1;
        },
        set_zAxisReverse: function(t) {
          return this._zAxisReverse$1 !== t && (this.version++, this._zAxisReverse$1 = t), t;
        },
        get_altType: function() {
          return this._altType$1;
        },
        set_altType: function(t) {
          return this._altType$1 !== t && (this.version++, this._altType$1 = t), t;
        },
        get_markerMix: function() {
          return this._markerMix$1;
        },
        set_markerMix: function(t) {
          return this._markerMix$1 !== t && (this.version++, this._markerMix$1 = t), t;
        },
        get_raUnits: function() {
          return this._raUnits$1;
        },
        set_raUnits: function(t) {
          return this._raUnits$1 !== t && (this.version++, this._raUnits$1 = t), t;
        },
        get_colorMap: function() {
          return this.colorMap;
        },
        set_colorMap: function(t) {
          return this.colorMap !== t && (this.version++, this.colorMap = t), t;
        },
        get_colorMapperName: function() {
          return this.colorMapperName;
        },
        set_colorMapperName: function(t) {
          if (Ft.fromNamedColormap(t) == null)
            throw new Error("Invalid colormap name");
          return this.version++, this.colorMapperName = t, t;
        },
        get_colorMapper: function() {
          return Ft.fromNamedColormap(this.colorMapperName);
        },
        get_dynamicColor: function() {
          return this.dynamicColor;
        },
        set_dynamicColor: function(t) {
          return this.version++, this.dynamicColor = t, t;
        },
        get_normalizeColorMap: function() {
          return this.normalizeColorMap;
        },
        set_normalizeColorMap: function(t) {
          return this.version++, this.normalizeColorMap = t, t;
        },
        get_normalizeColorMapMin: function() {
          return this.normalizeColorMapMin;
        },
        set_normalizeColorMapMin: function(t) {
          return this.version++, this.normalizeColorMapMin = t, t;
        },
        get_normalizeColorMapMax: function() {
          return this.normalizeColorMapMax;
        },
        set_normalizeColorMapMax: function(t) {
          return this.version++, this.normalizeColorMapMax = t, t;
        },
        normalizeColorMapValue: function(t) {
          if (!this.get_normalizeColorMap())
            return t;
          var e = (t - this.get_normalizeColorMapMin()) / (this.get_normalizeColorMapMax() - this.get_normalizeColorMapMin());
          return e < 0 ? e = 0 : e > 1 && (e = 1), e;
        },
        get_markerColumn: function() {
          return this._markerColumn$1;
        },
        set_markerColumn: function(t) {
          return this._markerColumn$1 !== t && (this.version++, this._markerColumn$1 = t), t;
        },
        get_colorMapColumn: function() {
          return this.colorMapColumn;
        },
        set_colorMapColumn: function(t) {
          return this.colorMapColumn !== t && (this.version++, this.colorMapColumn = t), t;
        },
        get_plotType: function() {
          return this._plotType$1;
        },
        set_plotType: function(t) {
          return this._plotType$1 !== t && (this.version++, this._plotType$1 = t), t;
        },
        get_markerIndex: function() {
          return this._markerIndex$1;
        },
        set_markerIndex: function(t) {
          return this._markerIndex$1 !== t && (this.version++, this._markerIndex$1 = t), t;
        },
        get_showFarSide: function() {
          return this._showFarSide$1;
        },
        set_showFarSide: function(t) {
          return this._showFarSide$1 !== t && (this.version++, this._showFarSide$1 = t), t;
        },
        get_markerScale: function() {
          return this._markerScale$1;
        },
        set_markerScale: function(t) {
          return this._markerScale$1 !== t && (this.version++, this._markerScale$1 = t), t;
        },
        get_altUnit: function() {
          return this._altUnit$1;
        },
        set_altUnit: function(t) {
          return this._altUnit$1 !== t && (this.version++, this._altUnit$1 = t), t;
        },
        get_cartesianScale: function() {
          return this._cartesianScale$1;
        },
        set_cartesianScale: function(t) {
          return this._cartesianScale$1 !== t && (this.version++, this._cartesianScale$1 = t), t;
        },
        get_cartesianCustomScale: function() {
          return this._cartesianCustomScale$1;
        },
        set_cartesianCustomScale: function(t) {
          return this._cartesianCustomScale$1 !== t && (this.version++, this._cartesianCustomScale$1 = t), t;
        },
        get_altColumn: function() {
          return this.altColumn;
        },
        set_altColumn: function(t) {
          return this.altColumn !== t && (this.version++, this.altColumn = t), t;
        },
        get_startDateColumn: function() {
          return this.startDateColumn;
        },
        set_startDateColumn: function(t) {
          return this.startDateColumn !== t && (this.version++, this.startDateColumn = t), t;
        },
        get_endDateColumn: function() {
          return this.endDateColumn;
        },
        set_endDateColumn: function(t) {
          return this.endDateColumn !== t && (this.version++, this.endDateColumn = t), t;
        },
        get_sizeColumn: function() {
          return this.sizeColumn;
        },
        set_sizeColumn: function(t) {
          return this.sizeColumn !== t && (this.version++, this.sizeColumn = t), t;
        },
        get_normalizeSize: function() {
          return this.normalizeSize;
        },
        set_normalizeSize: function(t) {
          return this.normalizeSize !== t && (this.version++, this.normalizeSize = t), t;
        },
        get_normalizeSizeClip: function() {
          return this.normalizeSizeClip;
        },
        set_normalizeSizeClip: function(t) {
          return this.normalizeSizeClip !== t && (this.version++, this.normalizeSizeClip = t), t;
        },
        get_normalizeSizeMin: function() {
          return this.normalizeSizeMin;
        },
        set_normalizeSizeMin: function(t) {
          return this.normalizeSizeMin !== t && (this.version++, this.normalizeSizeMin = t), t;
        },
        get_normalizeSizeMax: function() {
          return this.normalizeSizeMax;
        },
        set_normalizeSizeMax: function(t) {
          return this.normalizeSizeMax !== t && (this.version++, this.normalizeSizeMax = t), t;
        },
        normalizePointSize: function(t) {
          if (!this.get_normalizeSize())
            return t;
          var e = (t - this.get_normalizeSizeMin()) / (this.get_normalizeSizeMax() - this.get_normalizeSizeMin());
          return this.get_normalizeSizeClip() && (e < 0 ? e = 0 : e > 1 && (e = 1)), e;
        },
        get_nameColumn: function() {
          return this.nameColumn;
        },
        set_nameColumn: function(t) {
          return this.nameColumn !== t && (this.version++, this.nameColumn = t), t;
        },
        get_hyperlinkFormat: function() {
          return this._hyperlinkFormat$1;
        },
        set_hyperlinkFormat: function(t) {
          return this._hyperlinkFormat$1 !== t && (this.version++, this._hyperlinkFormat$1 = t), t;
        },
        get_hyperlinkColumn: function() {
          return this._hyperlinkColumn$1;
        },
        set_hyperlinkColumn: function(t) {
          return this._hyperlinkColumn$1 !== t && (this.version++, this._hyperlinkColumn$1 = t), t;
        },
        get_scaleFactor: function() {
          return this.scaleFactor;
        },
        set_scaleFactor: function(t) {
          return this.scaleFactor !== t && (this.version++, this.scaleFactor = t), t;
        },
        get_pointScaleType: function() {
          return this.pointScaleType;
        },
        set_pointScaleType: function(t) {
          return this.pointScaleType !== t && (this.version++, this.pointScaleType = t), t;
        },
        draw: function(t, e, r) {
          var a = t;
          this.version !== this.lastVersion && this.cleanUp(), this.lastVersion = this.version, this.bufferIsFlat !== r && (this.cleanUp(), this.bufferIsFlat = r), this.dirty && this.prepVertexBuffer(a, e);
          var s = Z.get_jNow() - Z.utcToJulian(this.baseDate), l = this.scaleFactor * 3;
          if (r && this.astronomical && this._markerScale$1 === 1 && (l = this.scaleFactor / (t.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = s, this.triangleList2d.draw(t, e * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = s, this.triangleList.draw(t, e * this.get_opacity(), 1)), this.pointList != null)
            switch (this.pointList.depthBuffered = !1, this.pointList.showFarSide = this.get_showFarSide(), this.pointList.decay = this.timeSeries ? this.decay : 0, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = s, this.pointList.scale = this._markerScale$1 === 1 ? l : -l, this._plotType$1) {
              case 0:
                this.pointList.draw(t, e * this.get_opacity(), !1);
                break;
              case 2:
                this.pointList.drawTextured(t, ei.get__circleTexture$1().texture2d, e * this.get_opacity());
                break;
              case 1:
                this.pointList.drawTextured(t, xi.getPushPinTexture(19), e * this.get_opacity());
                break;
              case 3:
                this.pointList.drawTextured(t, xi.getPushPinTexture(35), e * this.get_opacity());
                break;
              case 5:
              case 4:
                this.pointList.drawTextured(t, xi.getPushPinTexture(this._markerIndex$1), e * this.get_opacity());
                break;
            }
          return this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = s, this.lineList.drawLines(t, e * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = s, this.lineList2d.drawLines(t, e * this.get_opacity())), !0;
        },
        cleanUpBase: function() {
          this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
        }
      };
      function na() {
        this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 16, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = new Date("1/1/2100"), this._endRange$1 = new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this._colorMap$1 = 3, this._markerColumn$1 = -1, this._colorMapColumn$1 = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this.lastVersion = 0, we.call(this);
      }
      na.get__circleTexture$1 = function() {
        return na._circleTexture$1;
      };
      var M_ = {
        get_dynamicData: function() {
          return this._dynamicData$1;
        },
        set_dynamicData: function(t) {
          return this._dynamicData$1 = t, t;
        },
        get_autoUpdate: function() {
          return this._autoUpdate$1;
        },
        set_autoUpdate: function(t) {
          return this._autoUpdate$1 = t, t;
        },
        get_dataSourceUrl: function() {
          return this._dataSourceUrl$1;
        },
        set_dataSourceUrl: function(t) {
          return this._dataSourceUrl$1 = t, t;
        },
        get_timeSeries: function() {
          return this.timeSeries;
        },
        set_timeSeries: function(t) {
          return this.timeSeries !== t && (this.version++, this.timeSeries = t), t;
        },
        get_header: function() {
          return null;
        },
        get_beginRange: function() {
          return this._beginRange$1;
        },
        set_beginRange: function(t) {
          return n.compareDates(this._beginRange$1, t) || (this.version++, this._beginRange$1 = t), t;
        },
        get_endRange: function() {
          return this._endRange$1;
        },
        set_endRange: function(t) {
          return n.compareDates(this._endRange$1, t) || (this.version++, this._endRange$1 = t), t;
        },
        initializeFromXml: function(t) {
          switch (this.set_timeSeries(n.boolean(t.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date(t.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date(t.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat(t.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(Et.parse("CoordinatesTypes", t.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt(t.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt(t.attributes.getNamedItem("LngColumn").nodeValue)), t.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt(t.attributes.getNamedItem("GeometryColumn").nodeValue)), t.attributes.getNamedItem("AltType").nodeValue) {
            case "Depth":
              this.set_altType(0);
              break;
            case "Altitude":
              this.set_altType(1);
              break;
            case "Distance":
              this.set_altType(2);
              break;
            case "SeaLevel":
              this.set_altType(3);
              break;
            case "Terrain":
              this.set_altType(4);
              break;
          }
          switch (this.set_markerMix(0), t.attributes.getNamedItem("ColorMap").nodeValue) {
            case "Same_For_All":
              this.set__colorMap(0);
              break;
            case "Group_by_Values":
              this.set__colorMap(2);
              break;
            case "Per_Column_Literal":
              this.set__colorMap(3);
              break;
          }
          switch (this.set_markerColumn(parseInt(t.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt(t.attributes.getNamedItem("ColorMapColumn").nodeValue)), t.attributes.getNamedItem("PlotType").nodeValue) {
            case "Gaussian":
              this.set_plotType(0);
              break;
            case "Point":
              this.set_plotType(1);
              break;
            case "Circle":
              this.set_plotType(2);
              break;
            case "PushPin":
              this.set_plotType(4);
              break;
          }
          switch (this.set_markerIndex(parseInt(t.attributes.getNamedItem("MarkerIndex").nodeValue)), t.attributes.getNamedItem("MarkerScale").nodeValue) {
            case "Screen":
              this.set_markerScale(0);
              break;
            case "World":
              this.set_markerScale(1);
              break;
          }
          switch (t.attributes.getNamedItem("AltUnit").nodeValue) {
            case "Meters":
              this.set_altUnit(1);
              break;
            case "Feet":
              this.set_altUnit(2);
              break;
            case "Inches":
              this.set_altUnit(3);
              break;
            case "Miles":
              this.set_altUnit(4);
              break;
            case "Kilometers":
              this.set_altUnit(5);
              break;
            case "AstronomicalUnits":
              this.set_altUnit(6);
              break;
            case "LightYears":
              this.set_altUnit(7);
              break;
            case "Parsecs":
              this.set_altUnit(8);
              break;
            case "MegaParsecs":
              this.set_altUnit(9);
              break;
            case "Custom":
              this.set_altUnit(10);
              break;
          }
          switch (this.set_altColumn(parseInt(t.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt(t.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt(t.attributes.getNamedItem("EndDateColumn").nodeValue)), this.set_sizeColumn(parseInt(t.attributes.getNamedItem("SizeColumn").nodeValue)), this.set_hyperlinkFormat(t.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt(t.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat(t.attributes.getNamedItem("ScaleFactor").nodeValue)), t.attributes.getNamedItem("PointScaleType").nodeValue) {
            case "Linear":
              this.set_pointScaleType(0);
              break;
            case "Power":
              this.set_pointScaleType(1);
              break;
            case "Log":
              this.set_pointScaleType(2);
              break;
            case "Constant":
              this.set_pointScaleType(3);
              break;
            case "StellarMagnitude":
              this.set_pointScaleType(4);
              break;
          }
          if (t.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(n.boolean(t.attributes.getNamedItem("ShowFarSide").nodeValue)), t.attributes.getNamedItem("RaUnits") != null)
            switch (t.attributes.getNamedItem("RaUnits").nodeValue) {
              case "Hours":
                this.set_raUnits(0);
                break;
              case "Degrees":
                this.set_raUnits(1);
                break;
            }
          if (t.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt(t.attributes.getNamedItem("HoverTextColumn").nodeValue)), t.attributes.getNamedItem("XAxisColumn") != null) {
            switch (this.set_xAxisColumn(parseInt(t.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(n.boolean(t.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt(t.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(n.boolean(t.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt(t.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(n.boolean(t.attributes.getNamedItem("ZAxisReverse").nodeValue)), t.attributes.getNamedItem("CartesianScale").nodeValue) {
              case "Meters":
                this.set_cartesianScale(1);
                break;
              case "Feet":
                this.set_cartesianScale(2);
                break;
              case "Inches":
                this.set_cartesianScale(3);
                break;
              case "Miles":
                this.set_cartesianScale(4);
                break;
              case "Kilometers":
                this.set_cartesianScale(5);
                break;
              case "AstronomicalUnits":
                this.set_cartesianScale(6);
                break;
              case "LightYears":
                this.set_cartesianScale(7);
                break;
              case "Parsecs":
                this.set_cartesianScale(8);
                break;
              case "MegaParsecs":
                this.set_cartesianScale(9);
                break;
              case "Custom":
                this.set_cartesianScale(10);
                break;
            }
            this.set_cartesianCustomScale(parseFloat(t.attributes.getNamedItem("CartesianCustomScale").nodeValue));
          }
          t.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(n.boolean(t.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(n.boolean(t.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl(t.attributes.getNamedItem("DataSourceUrl").nodeValue));
        },
        computeDateDomainRange: function(t, e) {
        },
        getDomainValues: function(t) {
          return [];
        },
        get_decay: function() {
          return this.decay;
        },
        set_decay: function(t) {
          return this.decay !== t && (this.version++, this.decay = t), t;
        },
        get_coordinatesType: function() {
          return this._coordinatesType$1;
        },
        set_coordinatesType: function(t) {
          return this._coordinatesType$1 !== t && (this.version++, this._coordinatesType$1 = t), t;
        },
        get_latColumn: function() {
          return this.latColumn;
        },
        set_latColumn: function(t) {
          return this.latColumn !== t && (this.version++, this.latColumn = t), t;
        },
        get_lngColumn: function() {
          return this.lngColumn;
        },
        set_lngColumn: function(t) {
          return this.lngColumn !== t && (this.version++, this.lngColumn = t), t;
        },
        get_geometryColumn: function() {
          return this.geometryColumn;
        },
        set_geometryColumn: function(t) {
          return this.geometryColumn !== t && (this.version++, this.geometryColumn = t), t;
        },
        get_xAxisColumn: function() {
          return this._xAxisColumn$1;
        },
        set_xAxisColumn: function(t) {
          return this._xAxisColumn$1 !== t && (this.version++, this._xAxisColumn$1 = t), t;
        },
        get_yAxisColumn: function() {
          return this._yAxisColumn$1;
        },
        set_yAxisColumn: function(t) {
          return this._yAxisColumn$1 !== t && (this.version++, this._yAxisColumn$1 = t), t;
        },
        get_zAxisColumn: function() {
          return this._zAxisColumn$1;
        },
        set_zAxisColumn: function(t) {
          return this._zAxisColumn$1 !== t && (this.version++, this._zAxisColumn$1 = t), t;
        },
        get_xAxisReverse: function() {
          return this._xAxisReverse$1;
        },
        set_xAxisReverse: function(t) {
          return this._xAxisReverse$1 !== t && (this.version++, this._xAxisReverse$1 = t), t;
        },
        get_yAxisReverse: function() {
          return this._yAxisReverse$1;
        },
        set_yAxisReverse: function(t) {
          return this._yAxisReverse$1 !== t && (this.version++, this._yAxisReverse$1 = t), t;
        },
        get_zAxisReverse: function() {
          return this._zAxisReverse$1;
        },
        set_zAxisReverse: function(t) {
          return this._zAxisReverse$1 !== t && (this.version++, this._zAxisReverse$1 = t), t;
        },
        get_altType: function() {
          return this._altType$1;
        },
        set_altType: function(t) {
          return this._altType$1 !== t && (this.version++, this._altType$1 = t), t;
        },
        get_markerMix: function() {
          return this._markerMix$1;
        },
        set_markerMix: function(t) {
          return this._markerMix$1 !== t && (this.version++, this._markerMix$1 = t), t;
        },
        get_raUnits: function() {
          return this._raUnits$1;
        },
        set_raUnits: function(t) {
          return this._raUnits$1 !== t && (this.version++, this._raUnits$1 = t), t;
        },
        get__colorMap: function() {
          return this._colorMap$1;
        },
        set__colorMap: function(t) {
          return this._colorMap$1 !== t && (this.version++, this._colorMap$1 = t), t;
        },
        get_markerColumn: function() {
          return this._markerColumn$1;
        },
        set_markerColumn: function(t) {
          return this._markerColumn$1 !== t && (this.version++, this._markerColumn$1 = t), t;
        },
        get_colorMapColumn: function() {
          return this._colorMapColumn$1;
        },
        set_colorMapColumn: function(t) {
          return this._colorMapColumn$1 !== t && (this.version++, this._colorMapColumn$1 = t), t;
        },
        get_plotType: function() {
          return this._plotType$1;
        },
        set_plotType: function(t) {
          return this._plotType$1 !== t && (this.version++, this._plotType$1 = t), t;
        },
        get_markerIndex: function() {
          return this._markerIndex$1;
        },
        set_markerIndex: function(t) {
          return this._markerIndex$1 !== t && (this.version++, this._markerIndex$1 = t), t;
        },
        get_showFarSide: function() {
          return this._showFarSide$1;
        },
        set_showFarSide: function(t) {
          return this._showFarSide$1 !== t && (this.version++, this._showFarSide$1 = t), t;
        },
        get_markerScale: function() {
          return this._markerScale$1;
        },
        set_markerScale: function(t) {
          return this._markerScale$1 !== t && (this.version++, this._markerScale$1 = t), t;
        },
        get_altUnit: function() {
          return this._altUnit$1;
        },
        set_altUnit: function(t) {
          return this._altUnit$1 !== t && (this.version++, this._altUnit$1 = t), t;
        },
        get_cartesianScale: function() {
          return this._cartesianScale$1;
        },
        set_cartesianScale: function(t) {
          return this._cartesianScale$1 !== t && (this.version++, this._cartesianScale$1 = t), t;
        },
        get_cartesianCustomScale: function() {
          return this._cartesianCustomScale$1;
        },
        set_cartesianCustomScale: function(t) {
          return this._cartesianCustomScale$1 !== t && (this.version++, this._cartesianCustomScale$1 = t), t;
        },
        get_altColumn: function() {
          return this.altColumn;
        },
        set_altColumn: function(t) {
          return this.altColumn !== t && (this.version++, this.altColumn = t), t;
        },
        get_startDateColumn: function() {
          return this.startDateColumn;
        },
        set_startDateColumn: function(t) {
          return this.startDateColumn !== t && (this.version++, this.startDateColumn = t), t;
        },
        get_endDateColumn: function() {
          return this.endDateColumn;
        },
        set_endDateColumn: function(t) {
          return this.endDateColumn !== t && (this.version++, this.endDateColumn = t), t;
        },
        get_sizeColumn: function() {
          return this.sizeColumn;
        },
        set_sizeColumn: function(t) {
          return this.sizeColumn !== t && (this.version++, this.sizeColumn = t), t;
        },
        get_nameColumn: function() {
          return this.nameColumn;
        },
        set_nameColumn: function(t) {
          return this.nameColumn !== t && (this.version++, this.nameColumn = t), t;
        },
        get_hyperlinkFormat: function() {
          return this._hyperlinkFormat$1;
        },
        set_hyperlinkFormat: function(t) {
          return this._hyperlinkFormat$1 !== t && (this.version++, this._hyperlinkFormat$1 = t), t;
        },
        get_hyperlinkColumn: function() {
          return this._hyperlinkColumn$1;
        },
        set_hyperlinkColumn: function(t) {
          return this._hyperlinkColumn$1 !== t && (this.version++, this._hyperlinkColumn$1 = t), t;
        },
        get_scaleFactor: function() {
          return this.scaleFactor;
        },
        set_scaleFactor: function(t) {
          return this.scaleFactor !== t && (this.version++, this.scaleFactor = t), t;
        },
        get_pointScaleType: function() {
          return this.pointScaleType;
        },
        set_pointScaleType: function(t) {
          return this.pointScaleType !== t && (this.version++, this.pointScaleType = t), t;
        },
        prepVertexBuffer: function(t, e) {
          return !0;
        },
        draw: function(t, e, r) {
          var a = t;
          this.version !== this.lastVersion && this.cleanUp(), this.bufferIsFlat !== r && (this.cleanUp(), this.bufferIsFlat = r), this.dirty && this.prepVertexBuffer(a, e);
          var s = Z.get_jNow() - Z.utcToJulian(this.baseDate), l = this.scaleFactor;
          return r && this.astronomical && this._markerScale$1 === 1 && (l = this.scaleFactor / (t.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = s, this.triangleList2d.draw(t, e * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = s, this.triangleList.draw(t, e * this.get_opacity(), 1)), this.pointList != null && (this.pointList.depthBuffered = !1, this.pointList.decay = this.decay, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = s, this.pointList.scale = this._markerScale$1 === 1 ? l : -l, this.pointList.draw(t, e * this.get_opacity(), !1)), this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = s, this.lineList.drawLines(t, e * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = s, this.lineList2d.drawLines(t, e * this.get_opacity())), !0;
        },
        initFromXml: function(t) {
          we.prototype.initFromXml.call(this, t);
        },
        cleanUp: function() {
          this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
        },
        dynamicUpdate: function() {
          return !1;
        }
      };
      function Oi() {
        this.isLongIndex = !1, this.shapeVertexCount = 0, this.lines = !1, this.latColumn = -1, this.fixedSize = 1, this.decay = 0, this.timeSeries = !1, this._dynamicData$1 = !1, this._autoUpdate$1 = !1, this._dataSourceUrl$1 = "", this._beginRange$1 = new Date("1/1/2100"), this._endRange$1 = new Date("01/01/1800"), this.markerDomainValues = {}, this.colorDomainValues = {}, this._coordinatesType$1 = 0, this.lngColumn = -1, this.geometryColumn = -1, this._xAxisColumn$1 = -1, this._yAxisColumn$1 = -1, this._zAxisColumn$1 = -1, this._xAxisReverse$1 = !1, this._yAxisReverse$1 = !1, this._zAxisReverse$1 = !1, this._altType$1 = 3, this._markerMix$1 = 0, this._raUnits$1 = 0, this._colorMap$1 = 3, this._markerColumn$1 = -1, this._colorMapColumn$1 = -1, this._plotType$1 = 0, this._markerIndex$1 = 0, this._showFarSide$1 = !1, this._markerScale$1 = 1, this._altUnit$1 = 1, this._cartesianScale$1 = 1, this._cartesianCustomScale$1 = 1, this.altColumn = -1, this.startDateColumn = -1, this.endDateColumn = -1, this.sizeColumn = -1, this.nameColumn = 0, this._hyperlinkFormat$1 = "", this._hyperlinkColumn$1 = -1, this.scaleFactor = 1, this.pointScaleType = 1, this.positions = [], this.bufferIsFlat = !1, this.baseDate = new Date(2010, 0, 1, 12, 0, 0), this.dirty = !0, this._filename$1 = "", we.call(this), this._table$1 = null, this._filename$1 = "", this.set_plotType(2);
      }
      Oi.get__circleTexture$1 = function() {
        if (Oi._circleTexture$1 == null) {
          var t = Kt.singleton.engineAssetUrl("circle.png");
          Oi._circleTexture$1 = A.loadPlanetTexture(t);
        }
        return Oi._circleTexture$1;
      }, Oi.create = function(t, e) {
        var r = new Oi();
        return r._table$1 = t, r._filename$1 = t.loadFilename, r.set_lngColumn(t.getRAColumn().index), r.set_latColumn(t.getDecColumn().index), r.sizeColumn = t.getColumnByUcd("phot.mag").index, r.set_plotType(e), r;
      };
      var T_ = {
        get_dynamicData: function() {
          return this._dynamicData$1;
        },
        set_dynamicData: function(t) {
          return this._dynamicData$1 = t, t;
        },
        get_autoUpdate: function() {
          return this._autoUpdate$1;
        },
        set_autoUpdate: function(t) {
          return this._autoUpdate$1 = t, t;
        },
        get_dataSourceUrl: function() {
          return this._dataSourceUrl$1;
        },
        set_dataSourceUrl: function(t) {
          return this._dataSourceUrl$1 = t, t;
        },
        get_timeSeries: function() {
          return this.timeSeries;
        },
        set_timeSeries: function(t) {
          return this.timeSeries !== t && (this.version++, this.timeSeries = t), t;
        },
        get_beginRange: function() {
          return this._beginRange$1;
        },
        set_beginRange: function(t) {
          return n.compareDates(this._beginRange$1, t) || (this.version++, this._beginRange$1 = t), t;
        },
        get_endRange: function() {
          return this._endRange$1;
        },
        set_endRange: function(t) {
          return n.compareDates(this._endRange$1, t) || (this.version++, this._endRange$1 = t), t;
        },
        initializeFromXml: function(t) {
          switch (this.set_timeSeries(n.boolean(t.attributes.getNamedItem("TimeSeries").nodeValue)), this.set_beginRange(new Date(t.attributes.getNamedItem("BeginRange").nodeValue)), this.set_endRange(new Date(t.attributes.getNamedItem("EndRange").nodeValue)), this.set_decay(parseFloat(t.attributes.getNamedItem("Decay").nodeValue)), this.set_coordinatesType(Et.parse("CoordinatesTypes", t.attributes.getNamedItem("CoordinatesType").nodeValue)), this.get_coordinatesType() < 0 && this.set_coordinatesType(0), this.set_latColumn(parseInt(t.attributes.getNamedItem("LatColumn").nodeValue)), this.set_lngColumn(parseInt(t.attributes.getNamedItem("LngColumn").nodeValue)), t.attributes.getNamedItem("GeometryColumn") != null && this.set_geometryColumn(parseInt(t.attributes.getNamedItem("GeometryColumn").nodeValue)), t.attributes.getNamedItem("AltType").nodeValue) {
            case "Depth":
              this.set_altType(0);
              break;
            case "Altitude":
              this.set_altType(1);
              break;
            case "Distance":
              this.set_altType(2);
              break;
            case "SeaLevel":
              this.set_altType(3);
              break;
            case "Terrain":
              this.set_altType(4);
              break;
          }
          switch (this.set_markerMix(0), t.attributes.getNamedItem("ColorMap").nodeValue) {
            case "Same_For_All":
              this.set__colorMap(0);
              break;
            case "Group_by_Values":
              this.set__colorMap(2);
              break;
            case "Per_Column_Literal":
              this.set__colorMap(3);
              break;
          }
          switch (this.set_markerColumn(parseInt(t.attributes.getNamedItem("MarkerColumn").nodeValue)), this.set_colorMapColumn(parseInt(t.attributes.getNamedItem("ColorMapColumn").nodeValue)), t.attributes.getNamedItem("PlotType").nodeValue) {
            case "Gaussian":
              this.set_plotType(0);
              break;
            case "Point":
              this.set_plotType(1);
              break;
            case "Circle":
              this.set_plotType(2);
              break;
            case "PushPin":
              this.set_plotType(4);
              break;
          }
          switch (this.set_markerIndex(parseInt(t.attributes.getNamedItem("MarkerIndex").nodeValue)), t.attributes.getNamedItem("MarkerScale").nodeValue) {
            case "Screen":
              this.set_markerScale(0);
              break;
            case "World":
              this.set_markerScale(1);
              break;
          }
          switch (t.attributes.getNamedItem("AltUnit").nodeValue) {
            case "Meters":
              this.set_altUnit(1);
              break;
            case "Feet":
              this.set_altUnit(2);
              break;
            case "Inches":
              this.set_altUnit(3);
              break;
            case "Miles":
              this.set_altUnit(4);
              break;
            case "Kilometers":
              this.set_altUnit(5);
              break;
            case "AstronomicalUnits":
              this.set_altUnit(6);
              break;
            case "LightYears":
              this.set_altUnit(7);
              break;
            case "Parsecs":
              this.set_altUnit(8);
              break;
            case "MegaParsecs":
              this.set_altUnit(9);
              break;
            case "Custom":
              this.set_altUnit(10);
              break;
          }
          switch (this.set_altColumn(parseInt(t.attributes.getNamedItem("AltColumn").nodeValue)), this.set_startDateColumn(parseInt(t.attributes.getNamedItem("StartDateColumn").nodeValue)), this.set_endDateColumn(parseInt(t.attributes.getNamedItem("EndDateColumn").nodeValue)), this.set_sizeColumn(parseInt(t.attributes.getNamedItem("SizeColumn").nodeValue)), this.set_hyperlinkFormat(t.attributes.getNamedItem("HyperlinkFormat").nodeValue), this.set_hyperlinkColumn(parseInt(t.attributes.getNamedItem("HyperlinkColumn").nodeValue)), this.set_scaleFactor(parseFloat(t.attributes.getNamedItem("ScaleFactor").nodeValue)), t.attributes.getNamedItem("PointScaleType").nodeValue) {
            case "Linear":
              this.set_pointScaleType(0);
              break;
            case "Power":
              this.set_pointScaleType(1);
              break;
            case "Log":
              this.set_pointScaleType(2);
              break;
            case "Constant":
              this.set_pointScaleType(3);
              break;
            case "StellarMagnitude":
              this.set_pointScaleType(4);
              break;
          }
          if (t.attributes.getNamedItem("ShowFarSide") != null && this.set_showFarSide(n.boolean(t.attributes.getNamedItem("ShowFarSide").nodeValue)), t.attributes.getNamedItem("RaUnits") != null)
            switch (t.attributes.getNamedItem("RaUnits").nodeValue) {
              case "Hours":
                this.set_raUnits(0);
                break;
              case "Degrees":
                this.set_raUnits(1);
                break;
            }
          if (t.attributes.getNamedItem("HoverTextColumn") != null && this.set_nameColumn(parseInt(t.attributes.getNamedItem("HoverTextColumn").nodeValue)), t.attributes.getNamedItem("XAxisColumn") != null) {
            switch (this.set_xAxisColumn(parseInt(t.attributes.getNamedItem("XAxisColumn").nodeValue)), this.set_xAxisReverse(n.boolean(t.attributes.getNamedItem("XAxisReverse").nodeValue)), this.set_yAxisColumn(parseInt(t.attributes.getNamedItem("YAxisColumn").nodeValue)), this.set_yAxisReverse(n.boolean(t.attributes.getNamedItem("YAxisReverse").nodeValue)), this.set_zAxisColumn(parseInt(t.attributes.getNamedItem("ZAxisColumn").nodeValue)), this.set_zAxisReverse(n.boolean(t.attributes.getNamedItem("ZAxisReverse").nodeValue)), t.attributes.getNamedItem("CartesianScale").nodeValue) {
              case "Meters":
                this.set_cartesianScale(1);
                break;
              case "Feet":
                this.set_cartesianScale(2);
                break;
              case "Inches":
                this.set_cartesianScale(3);
                break;
              case "Miles":
                this.set_cartesianScale(4);
                break;
              case "Kilometers":
                this.set_cartesianScale(5);
                break;
              case "AstronomicalUnits":
                this.set_cartesianScale(6);
                break;
              case "LightYears":
                this.set_cartesianScale(7);
                break;
              case "Parsecs":
                this.set_cartesianScale(8);
                break;
              case "MegaParsecs":
                this.set_cartesianScale(9);
                break;
              case "Custom":
                this.set_cartesianScale(10);
                break;
            }
            this.set_cartesianCustomScale(parseFloat(t.attributes.getNamedItem("CartesianCustomScale").nodeValue));
          }
          t.attributes.getNamedItem("DynamicData") != null && (this.set_dynamicData(n.boolean(t.attributes.getNamedItem("DynamicData").nodeValue)), this.set_autoUpdate(n.boolean(t.attributes.getNamedItem("AutoUpdate").nodeValue)), this.set_dataSourceUrl(t.attributes.getNamedItem("DataSourceUrl").nodeValue));
        },
        get_decay: function() {
          return this.decay;
        },
        set_decay: function(t) {
          return this.decay !== t && (this.version++, this.decay = t), t;
        },
        get_coordinatesType: function() {
          return this._coordinatesType$1;
        },
        set_coordinatesType: function(t) {
          return this._coordinatesType$1 !== t && (this.version++, this._coordinatesType$1 = t), t;
        },
        get_latColumn: function() {
          return this.latColumn;
        },
        set_latColumn: function(t) {
          return this.latColumn !== t && (this.version++, this.latColumn = t), t;
        },
        get_lngColumn: function() {
          return this.lngColumn;
        },
        set_lngColumn: function(t) {
          return this.lngColumn !== t && (this.version++, this.lngColumn = t), t;
        },
        get_geometryColumn: function() {
          return this.geometryColumn;
        },
        set_geometryColumn: function(t) {
          return this.geometryColumn !== t && (this.version++, this.geometryColumn = t), t;
        },
        get_xAxisColumn: function() {
          return this._xAxisColumn$1;
        },
        set_xAxisColumn: function(t) {
          return this._xAxisColumn$1 !== t && (this.version++, this._xAxisColumn$1 = t), t;
        },
        get_yAxisColumn: function() {
          return this._yAxisColumn$1;
        },
        set_yAxisColumn: function(t) {
          return this._yAxisColumn$1 !== t && (this.version++, this._yAxisColumn$1 = t), t;
        },
        get_zAxisColumn: function() {
          return this._zAxisColumn$1;
        },
        set_zAxisColumn: function(t) {
          return this._zAxisColumn$1 !== t && (this.version++, this._zAxisColumn$1 = t), t;
        },
        get_xAxisReverse: function() {
          return this._xAxisReverse$1;
        },
        set_xAxisReverse: function(t) {
          return this._xAxisReverse$1 !== t && (this.version++, this._xAxisReverse$1 = t), t;
        },
        get_yAxisReverse: function() {
          return this._yAxisReverse$1;
        },
        set_yAxisReverse: function(t) {
          return this._yAxisReverse$1 !== t && (this.version++, this._yAxisReverse$1 = t), t;
        },
        get_zAxisReverse: function() {
          return this._zAxisReverse$1;
        },
        set_zAxisReverse: function(t) {
          return this._zAxisReverse$1 !== t && (this.version++, this._zAxisReverse$1 = t), t;
        },
        get_altType: function() {
          return this._altType$1;
        },
        set_altType: function(t) {
          return this._altType$1 !== t && (this.version++, this._altType$1 = t), t;
        },
        get_markerMix: function() {
          return this._markerMix$1;
        },
        set_markerMix: function(t) {
          return this._markerMix$1 !== t && (this.version++, this._markerMix$1 = t), t;
        },
        get_raUnits: function() {
          return this._raUnits$1;
        },
        set_raUnits: function(t) {
          return this._raUnits$1 !== t && (this.version++, this._raUnits$1 = t), t;
        },
        get__colorMap: function() {
          return this._colorMap$1;
        },
        set__colorMap: function(t) {
          return this._colorMap$1 !== t && (this.version++, this._colorMap$1 = t), t;
        },
        get_markerColumn: function() {
          return this._markerColumn$1;
        },
        set_markerColumn: function(t) {
          return this._markerColumn$1 !== t && (this.version++, this._markerColumn$1 = t), t;
        },
        get_colorMapColumn: function() {
          return this._colorMapColumn$1;
        },
        set_colorMapColumn: function(t) {
          return this._colorMapColumn$1 !== t && (this.version++, this._colorMapColumn$1 = t), t;
        },
        get_plotType: function() {
          return this._plotType$1;
        },
        set_plotType: function(t) {
          return this._plotType$1 !== t && (this.version++, this._plotType$1 = t), t;
        },
        get_markerIndex: function() {
          return this._markerIndex$1;
        },
        set_markerIndex: function(t) {
          return this._markerIndex$1 !== t && (this.version++, this._markerIndex$1 = t), t;
        },
        get_showFarSide: function() {
          return this._showFarSide$1;
        },
        set_showFarSide: function(t) {
          return this._showFarSide$1 !== t && (this.version++, this._showFarSide$1 = t), t;
        },
        get_markerScale: function() {
          return this._markerScale$1;
        },
        set_markerScale: function(t) {
          return this._markerScale$1 !== t && (this.version++, this._markerScale$1 = t), t;
        },
        get_altUnit: function() {
          return this._altUnit$1;
        },
        set_altUnit: function(t) {
          return this._altUnit$1 !== t && (this.version++, this._altUnit$1 = t), t;
        },
        get_cartesianScale: function() {
          return this._cartesianScale$1;
        },
        set_cartesianScale: function(t) {
          return this._cartesianScale$1 !== t && (this.version++, this._cartesianScale$1 = t), t;
        },
        get_cartesianCustomScale: function() {
          return this._cartesianCustomScale$1;
        },
        set_cartesianCustomScale: function(t) {
          return this._cartesianCustomScale$1 !== t && (this.version++, this._cartesianCustomScale$1 = t), t;
        },
        get_altColumn: function() {
          return this.altColumn;
        },
        set_altColumn: function(t) {
          return this.altColumn !== t && (this.version++, this.altColumn = t), t;
        },
        get_startDateColumn: function() {
          return this.startDateColumn;
        },
        set_startDateColumn: function(t) {
          return this.startDateColumn !== t && (this.version++, this.startDateColumn = t), t;
        },
        get_endDateColumn: function() {
          return this.endDateColumn;
        },
        set_endDateColumn: function(t) {
          return this.endDateColumn !== t && (this.version++, this.endDateColumn = t), t;
        },
        get_sizeColumn: function() {
          return this.sizeColumn;
        },
        set_sizeColumn: function(t) {
          return this.sizeColumn !== t && (this.version++, this.sizeColumn = t), t;
        },
        get_nameColumn: function() {
          return this.nameColumn;
        },
        set_nameColumn: function(t) {
          return this.nameColumn !== t && (this.version++, this.nameColumn = t), t;
        },
        get_hyperlinkFormat: function() {
          return this._hyperlinkFormat$1;
        },
        set_hyperlinkFormat: function(t) {
          return this._hyperlinkFormat$1 !== t && (this.version++, this._hyperlinkFormat$1 = t), t;
        },
        get_hyperlinkColumn: function() {
          return this._hyperlinkColumn$1;
        },
        set_hyperlinkColumn: function(t) {
          return this._hyperlinkColumn$1 !== t && (this.version++, this._hyperlinkColumn$1 = t), t;
        },
        get_scaleFactor: function() {
          return this.scaleFactor;
        },
        set_scaleFactor: function(t) {
          return this.scaleFactor !== t && (this.version++, this.scaleFactor = t), t;
        },
        get_pointScaleType: function() {
          return this.pointScaleType;
        },
        set_pointScaleType: function(t) {
          return this.pointScaleType !== t && (this.version++, this.pointScaleType = t), t;
        },
        draw: function(t, e, r) {
          this.bufferIsFlat !== r && (this.cleanUp(), this.bufferIsFlat = r), this.dirty && (this.prepVertexBuffer(t, e), this.dirty = !1);
          var a = Z.get_jNow() - Z.utcToJulian(this.baseDate), s = this.scaleFactor;
          if (r && this.astronomical && this._markerScale$1 === 1 && (s = this.scaleFactor / (t.viewCamera.zoom / 360)), this.triangleList2d != null && (this.triangleList2d.decay = this.decay, this.triangleList2d.sky = this.get_astronomical(), this.triangleList2d.timeSeries = this.timeSeries, this.triangleList2d.jNow = a, this.triangleList2d.draw(t, e * this.get_opacity(), 1)), this.triangleList != null && (this.triangleList.decay = this.decay, this.triangleList.sky = this.get_astronomical(), this.triangleList.timeSeries = this.timeSeries, this.triangleList.jNow = a, this.triangleList.draw(t, e * this.get_opacity(), 1)), this.pointList != null)
            switch (this.pointList.depthBuffered = !1, this.pointList.showFarSide = this.get_showFarSide(), this.pointList.decay = this.timeSeries ? this.decay : 0, this.pointList.sky = this.get_astronomical(), this.pointList.timeSeries = this.timeSeries, this.pointList.jNow = a, this.pointList.scale = this._markerScale$1 === 1 ? s : -s, this._plotType$1) {
              case 0:
                this.pointList.draw(t, e * this.get_opacity(), !1);
                break;
              case 2:
                this.pointList.drawTextured(t, Oi.get__circleTexture$1().texture2d, e * this.get_opacity());
                break;
              case 1:
                this.pointList.drawTextured(t, xi.getPushPinTexture(19), e * this.get_opacity());
                break;
              case 3:
                this.pointList.drawTextured(t, xi.getPushPinTexture(35), e * this.get_opacity());
                break;
              case 5:
              case 4:
                this.pointList.drawTextured(t, xi.getPushPinTexture(this._markerIndex$1), e * this.get_opacity());
                break;
            }
          return this.lineList != null && (this.lineList.sky = this.get_astronomical(), this.lineList.decay = this.decay, this.lineList.timeSeries = this.timeSeries, this.lineList.jNow = a, this.lineList.drawLines(t, e * this.get_opacity())), this.lineList2d != null && (this.lineList2d.sky = this.get_astronomical(), this.lineList2d.decay = this.decay, this.lineList2d.timeSeries = this.timeSeries, this.lineList2d.showFarSide = this.get_showFarSide(), this.lineList2d.jNow = a, this.lineList2d.drawLines(t, e * this.get_opacity())), !0;
        },
        initFromXml: function(t) {
          we.prototype.initFromXml.call(this, t);
        },
        cleanUp: function() {
          this.dirty = !0, this.lineList != null && this.lineList.clear(), this.lineList2d != null && this.lineList2d.clear(), this.triangleList2d != null && this.triangleList2d.clear(), this.pointList != null && this.pointList.clear(), this.triangleList != null && this.triangleList.clear();
        },
        dynamicUpdate: function() {
          return !1;
        },
        addFilesToCabinet: function(t) {
          var e = this._filename$1, r = t.tempDirectory + n.format("{0}\\{1}.txt", t.get_packageID(), this.id.toString());
          e.substring(0, e.lastIndexOf("\\") + 1), r.substring(0, r.lastIndexOf("\\") + 1);
        },
        loadData: function(t, e) {
          var r = this, a = t.getFileBlob(e), s = new FileReader();
          s.onloadend = function(l) {
            var h = n.safeCast(s.result, String);
            r._table$1 = qr.loadFromString(h), r.set_lngColumn(r._table$1.getRAColumn().index), r.set_latColumn(r._table$1.getDecColumn().index);
          }, s.readAsText(a);
        },
        canCopyToClipboard: function() {
          return !0;
        },
        copyToClipboard: function() {
        },
        findClosest: function(t, e, r, a) {
          var s = R.geoTo3dDouble(t.get_lat(), t.get_lng()), l;
          if (r != null) {
            var h = R.raDecTo3dAu(r.get_RA(), -r.get_dec(), -1);
            l = L.subtractVectors(s, h), e = l.length();
          }
          for (var u = -1, _ = 0, m = n.enumerate(this.positions); m.moveNext(); ) {
            var p = m.current;
            l = L.subtractVectors(s, p), l.length() < e && (e = l.length(), u = _), _++;
          }
          if (u === -1)
            return r;
          var b = R.cartesianToSpherical2(this.positions[u]), S = this._table$1.rows[u].columnData[this.nameColumn].toString();
          (this.nameColumn === this.startDateColumn || this.nameColumn === this.endDateColumn) && (S = ei.parseDate(S).toString()), n.emptyString(S) && (S = n.format("RA={0}, Dec={1}", R.formatHMS(b.get_RA()), R.formatDMS(b.get_dec())));
          for (var x = Li.create(S, b.get_lat(), b.get_RA(), 268435456, "", 2, -1), k = {}, P = 0; P < n.keyCount(this._table$1.columns); P++) {
            var I = this._table$1.rows[u].get_item(P).toString();
            (P === this.startDateColumn || P === this.endDateColumn) && (I = ei.parseDate(I).toString()), !n.keyExists(k, this._table$1.column[P].name) && !n.emptyString(this._table$1.column[P].name) ? k[this._table$1.column[P].name] = I : k["Column" + P.toString()] = I;
          }
          return x.set_tag(k), x;
        },
        prepVertexBuffer: function(t, e) {
          var r = this._table$1.getColumnByUcd("meta.id");
          r == null && (r = this._table$1.column[0]);
          var a = this.isSiapResultSet();
          this.pointList == null && (this.pointList = new tr(t)), this.lineList2d == null && (this.lineList2d = new _n()), this.lineList2d.clear();
          var s = this._table$1.getColumnByUcd("phys.area;obs.field");
          s == null && n.keyExists(this._table$1.columns, "regionSTCS") && (s = this._table$1.columns.regionSTCS), this.get_plotType() ? this.set_markerScale(0) : this.set_markerScale(1);
          var l = [], h = new In();
          this.positions.length = 0;
          var u = 0, _ = B.fromArgb(n.truncate(e * this.get_color().a), this.get_color().r, this.get_color().g, this.get_color().b);
          this.pointScaleType = 4;
          for (var m = n.enumerate(this._table$1.rows); m.moveNext(); ) {
            var p = m.current;
            try {
              if (this.lngColumn > -1 && this.latColumn > -1) {
                var b = parseFloat(p.get_item(this.get_lngColumn()).toString()), S = parseFloat(p.get_item(this.get_latColumn()).toString()), x = R.geoTo3dDouble(S, b);
                if (h.position = x, this.positions.push(h.position), h.set_color(_), this.sizeColumn > -1)
                  try {
                    if (!this.get_markerScale())
                      h.pointSize = 20;
                    else
                      switch (this.pointScaleType) {
                        case 0:
                          h.pointSize = parseFloat(p.get_item(this.sizeColumn).toString());
                          break;
                        case 2:
                          h.pointSize = Math.log(parseFloat(p.get_item(this.sizeColumn).toString()));
                          break;
                        case 1:
                          h.pointSize = Math.pow(2, parseFloat(p.get_item(this.sizeColumn).toString()));
                          break;
                        case 4:
                          var k = parseFloat(p.get_item(this.sizeColumn).toString());
                          h.pointSize = 40 / Math.pow(1.6, k) * 10;
                          break;
                        case 3:
                          h.pointSize = 1;
                          break;
                        default:
                          break;
                      }
                  } catch {
                    h.pointSize = 0.01;
                  }
                else
                  this.get_markerScale() ? h.pointSize = Math.pow(2, 1) * 100 : h.pointSize = 20;
                if (this.startDateColumn > -1) {
                  var P = n.date(p.get_item(this.startDateColumn).toString());
                  h.tu = Z.utcToJulian(P), h.tv = 0;
                }
                l.push(h), this.pointList.addPoint(h.position, h.color, new ve(h.tu, h.tv), h.pointSize), u++;
              }
              a && s != null && this._addSiapStcRow$1(s.name, p, p === this._table$1.selectedRow);
            } catch {
            }
            this.lines = !1;
          }
          return a && s != null && this._addSiapStcRow$1(s.name, this._table$1.selectedRow, !0), !0;
        },
        _addSiapStcRow$1: function(t, e, r) {
          var a = n.replaceString(e.getColumnData(t).toString(), "  ", " "), s = B.fromArgb(120, 255, 255, 255);
          if (r && (s = ot.get_yellow()), n.startsWith(a, "Polygon J2000")) {
            for (var l = a.split(" "), h = l.length, u = 0; u < h; )
              if (l[u] === "Polygon") {
                u += 2;
                for (var _ = new L(), m = new L(), p = !0, b = u; b < h; b += 2) {
                  if (l[b] === "Polygon") {
                    p = !0;
                    break;
                  } else {
                    var S = R.parseRA(l[b], !0) * 15 + 180, x = R.parseDec(l[b + 1]), k = R.geoTo3dDouble(x, S);
                    p ? (m = k, p = !1) : this.lineList2d.addLine(_, k, s, new ve(0, 0)), _ = k;
                  }
                  u += 2;
                }
                h > 4 && this.lineList2d.addLine(m, _, s, new ve(0, 0));
              }
          }
        },
        isSiapResultSet: function() {
          return this._table$1.getColumnByUcd("vox:image.title") != null && this._table$1.getColumnByUcd("VOX:Image.AccessReference") != null;
        },
        get_header: function() {
          for (var t = new Array(n.keyCount(this._table$1.columns)), e = 0, r = n.enumerate(this._table$1.column); r.moveNext(); ) {
            var a = r.current;
            t[e++] = a.name;
          }
          return t;
        },
        get_table: function() {
          return this._table$1;
        },
        set_table: function(t) {
          return this._table$1 = t, t;
        }
      };
      function le() {
        this._tileDegrees$1 = 0, this._latMin$1 = 0, this._latMax$1 = 0, this._lngMin$1 = 0, this._lngMax$1 = 0, this._subDivisionLevel$1 = 32, F.call(this);
      }
      le.create = function(t, e, r, a, s) {
        var l = new le();
        return l.parent = s, l.level = t, l.tileX = e, l.tileY = r, l.dataset = a, l.computeBoundingSphere(), l;
      }, le.getCentrePointOffsetAsTileRatio = function(t, e, r) {
        var a = le.absoluteLonToMetersAtZoom(e, r), s = a / 256 - Math.floor(a / 256), l = le.absoluteLatToMetersAtZoom(t, r), h = l / 256 - Math.floor(l / 256);
        return lt.create(s, h);
      }, le.relativeMetersToLatAtZoom = function(t, e) {
        var r = le.metersPerPixel2(e), a = t * r;
        return le._radToDeg$1(Math.PI / 2 - 2 * Math.atan(Math.exp(0 - a / 6378137)));
      }, le.relativeMetersToLonAtZoom = function(t, e) {
        var r = le.metersPerPixel2(e), a = t * r;
        return le._radToDeg$1(a / 6378137);
      }, le.absoluteLatToMetersAtZoom = function(t, e) {
        var r = Math.sin(le._degToRad$1(t)), a = 6378137 / 2 * Math.log((1 + r) / (1 - r)), s = le.metersPerPixel2(e);
        return n.truncate(Math.round(20037508 - a) / s);
      }, le.absoluteMetersToLatAtZoom = function(t, e) {
        var r = le.metersPerPixel2(e), a = 20037508 - t * r;
        return le._radToDeg$1(Math.PI / 2 - 2 * Math.atan(Math.exp(0 - a / 6378137)));
      }, le.absoluteLonToMetersAtZoom = function(t, e) {
        var r = 6378137 * le._degToRad$1(t), a = le.metersPerPixel2(e);
        return n.truncate((r + 20037508) / a);
      }, le.absoluteMetersToLonAtZoom = function(t, e) {
        var r = le.metersPerPixel2(e), a = t * r - 20037508;
        return le._radToDeg$1(a / 6378137);
      }, le.absoluteLonToMetersAtZoomTile = function(t, e, r) {
        var a = 6378137 * le._degToRad$1(t), s = le.metersPerPixel2(e);
        return n.truncate((a + 20037508) / s);
      }, le.absoluteLatToMetersAtZoomTile = function(t, e, r) {
        var a = Math.sin(le._degToRad$1(t)), s = 6378137 / 2 * Math.log((1 + a) / (1 - a)), l = le.metersPerPixel2(e);
        return n.truncate(Math.round(20037508 - s) / l);
      }, le.absoluteMetersToLonAtZoomByTileY = function(t, e, r) {
        var a = le.metersPerPixel2(e), s = t * a - 20037508;
        return le._radToDeg$1(s / 6378137);
      }, le._degToRad$1 = function(t) {
        return t * Math.PI / 180;
      }, le.metersPerPixel2 = function(t) {
        return 156543 / (1 << t);
      }, le._radToDeg$1 = function(t) {
        return t * 180 / Math.PI;
      };
      var x_ = {
        computeBoundingSphere: function() {
          this._tileDegrees$1 = 360 / Math.pow(2, this.level), this._latMin$1 = le.absoluteMetersToLatAtZoom(this.tileY * 256, this.level), this._latMax$1 = le.absoluteMetersToLatAtZoom((this.tileY + 1) * 256, this.level), this._lngMin$1 = this.tileX * this._tileDegrees$1 - 180, this._lngMax$1 = (this.tileX + 1) * this._tileDegrees$1 - 180;
          var t = (this._latMin$1 + this._latMax$1) / 2, e = (this._lngMin$1 + this._lngMax$1) / 2;
          this.sphereCenter = this.geoTo3d(t, e, !1), this.topLeft = this.geoTo3d(this._latMin$1, this._lngMin$1, !1), this.bottomRight = this.geoTo3d(this._latMax$1, this._lngMax$1, !1), this.topRight = this.geoTo3d(this._latMin$1, this._lngMax$1, !1), this.bottomLeft = this.geoTo3d(this._latMax$1, this._lngMin$1, !1), this.tileY || (this.topLeft = L.create(0, 1, 0), this.topRight = L.create(0, 1, 0)), this.tileY === Math.pow(2, this.level) - 1 && (this.bottomRight = L.create(0, -1, 0), this.bottomLeft = L.create(0, -1, 0));
          var r = this.topLeft;
          r.subtract(this.sphereCenter), this.sphereRadius = r.length(), r = this.bottomRight, r.subtract(this.sphereCenter);
          var a = r.length();
          this.sphereRadius < a && (this.sphereRadius = a), this._tileDegrees$1 = Math.abs(this._latMax$1 - this._latMin$1);
        },
        isPointInTile: function(t, e) {
          return !(!this.demReady || this.demData == null || t < Math.min(this._latMin$1, this._latMax$1) || t > Math.max(this._latMax$1, this._latMin$1) || e < Math.min(this._lngMin$1, this._lngMax$1) || e > Math.max(this._lngMin$1, this._lngMax$1));
        },
        getSurfacePointAltitude: function(t, e, r) {
          if (this.level < F.lastDeepestLevel)
            for (var a = n.enumerate(this.children); a.moveNext(); ) {
              var s = a.current;
              if (s != null && s.isPointInTile(t, e)) {
                var l = s.getSurfacePointAltitude(t, e, r);
                if (l)
                  return l;
                break;
              }
            }
          var h = this._getAltitudeAtLatLng$1(t, e, r ? 1 : this.get__demScaleFactor());
          return h;
        },
        _getAltitudeAtLatLng$1: function(t, e, r) {
          var a = Math.abs(this._latMax$1 - this._latMin$1), s = Math.abs(this._lngMax$1 - this._lngMin$1), l = (t - Math.min(this._latMax$1, this._latMin$1)) / a * 32, h = (e - Math.min(this._lngMax$1, this._lngMin$1)) / s * 32, u = Math.min(31, n.truncate(l)), _ = Math.min(31, n.truncate(h)), m = h - _, p = l - u, b = this.demData[u * 33 + _], S = this.demData[u * 33 + (_ + 1)], x = this.demData[(u + 1) * 33 + _], k = this.demData[(u + 1) * 33 + (_ + 1)], P = b * (1 - m) + m * S, I = x * (1 - m) + m * k, D = P * (1 - p) + p * I;
          return D / r;
        },
        createGeometry: function(t) {
          if (F.prototype.createGeometry.call(this, t), this.geometryCreated)
            return !0;
          this.geometryCreated = !0, F.uvMultiple === 256 && (!this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1) && (this._subDivisionLevel$1 = Math.max(2, (6 - this.level) * 2));
          for (var e = 0; e < 4; e++)
            this._renderTriangleLists[e] = [];
          var r, a, s = 0, l = 360 / Math.pow(2, this.level);
          this._latMin$1 = le.absoluteMetersToLatAtZoom(this.tileY * 256, this.level), this._latMax$1 = le.absoluteMetersToLatAtZoom((this.tileY + 1) * 256, this.level), this._lngMin$1 = this.tileX * l - 180, this._lngMax$1 = (this.tileX + 1) * l - 180;
          var h = le.absoluteMetersToLatAtZoom((this.tileY * 2 + 1) * 256, this.level + 1);
          this.topLeft = this.geoTo3d(this._latMin$1, this._lngMin$1, !1), this.bottomRight = this.geoTo3d(this._latMax$1, this._lngMax$1, !1), this.topRight = this.geoTo3d(this._latMin$1, this._lngMax$1, !1), this.bottomLeft = this.geoTo3d(this._latMax$1, this._lngMin$1, !1);
          var u = new Array((this._subDivisionLevel$1 + 1) * (this._subDivisionLevel$1 + 1));
          l = this._lngMax$1 - this._lngMin$1, l / this._subDivisionLevel$1;
          var _, m, p = 1 / this._subDivisionLevel$1, b = this._latMax$1 - h;
          for (m = 0; m < this._subDivisionLevel$1 / 2; m++)
            for (m !== this._subDivisionLevel$1 / 2 ? r = this._latMax$1 - 2 * p * b * m : r = h, _ = 0; _ <= this._subDivisionLevel$1; _++)
              _ !== this._subDivisionLevel$1 ? a = this._lngMin$1 + p * l * _ : a = this._lngMax$1, s = m * (this._subDivisionLevel$1 + 1) + _, u[s] = new dt(), u[s].position = this.geoTo3dWithAlt(r, a, !1, !0), u[s].tu = _ * p * F.uvMultiple, u[s].tv = (le.absoluteLatToMetersAtZoom(r, this.level) - this.tileY * 256) / 256 * F.uvMultiple, this.demIndex++;
          for (b = this._latMin$1 - h, m = this._subDivisionLevel$1 / 2; m <= this._subDivisionLevel$1; m++)
            for (m !== this._subDivisionLevel$1 ? r = h + 2 * p * b * (m - this._subDivisionLevel$1 / 2) : r = this._latMin$1, _ = 0; _ <= this._subDivisionLevel$1; _++)
              _ !== this._subDivisionLevel$1 ? a = this._lngMin$1 + p * l * _ : a = this._lngMax$1, s = m * (this._subDivisionLevel$1 + 1) + _, u[s] = new dt(), u[s].position = this.geoTo3dWithAlt(r, a, !1, !0), u[s].tu = _ * p * F.uvMultiple, u[s].tv = (le.absoluteLatToMetersAtZoom(r, this.level) - this.tileY * 256) / 256 * F.uvMultiple, this.demIndex++;
          if (!this.tileY)
            for (m = this._subDivisionLevel$1, _ = 0; _ <= this._subDivisionLevel$1; _++)
              s = m * (this._subDivisionLevel$1 + 1) + _, u[s].position = L.create(0, 1, 0);
          if (this.tileY === Math.pow(2, this.level) - 1)
            for (m = 0, _ = 0; _ <= this._subDivisionLevel$1; _++)
              s = m * (this._subDivisionLevel$1 + 1) + _, u[s].position = L.create(0, -1, 0);
          this.triangleCount = this._subDivisionLevel$1 * this._subDivisionLevel$1 * 2;
          var S = this._subDivisionLevel$1 / 2, x = 0;
          if (t.gl == null)
            for (var k = 0; k < 2; k++)
              for (var P = 0; P < 2; P++) {
                for (s = 0, m = S * k; m < S * (k + 1); m++)
                  for (_ = S * P; _ < S * (P + 1); _++) {
                    var I, D, G;
                    I = u[m * (this._subDivisionLevel$1 + 1) + _], D = u[(m + 1) * (this._subDivisionLevel$1 + 1) + _], G = u[m * (this._subDivisionLevel$1 + 1) + (_ + 1)];
                    var U = Bt.create(I, D, G, this.texture, this.level);
                    this._renderTriangleLists[x].push(U), I = u[m * (this._subDivisionLevel$1 + 1) + (_ + 1)], D = u[(m + 1) * (this._subDivisionLevel$1 + 1) + _], G = u[(m + 1) * (this._subDivisionLevel$1 + 1) + (_ + 1)], U = Bt.create(I, D, G, this.texture, this.level), this._renderTriangleLists[x].push(U);
                  }
                x++;
              }
          else {
            this._vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this._vertexBuffer);
            var Y = new Float32Array(u.length * 5), j = Y;
            s = 0;
            for (var K = n.enumerate(u); K.moveNext(); ) {
              var Q = K.current;
              s = this.addVertex(j, s, Q);
            }
            F.prepDevice.bufferData(34962, Y, 35044);
            for (var k = 0; k < 2; k++)
              for (var P = 0; P < 2; P++) {
                var J = new Uint16Array(this.triangleCount * 3), nt = J;
                for (s = 0, m = S * k; m < S * (k + 1); m++)
                  for (_ = S * P; _ < S * (P + 1); _++)
                    nt[s++] = m * (this._subDivisionLevel$1 + 1) + _, nt[s++] = (m + 1) * (this._subDivisionLevel$1 + 1) + _, nt[s++] = m * (this._subDivisionLevel$1 + 1) + (_ + 1), nt[s++] = m * (this._subDivisionLevel$1 + 1) + (_ + 1), nt[s++] = (m + 1) * (this._subDivisionLevel$1 + 1) + _, nt[s++] = (m + 1) * (this._subDivisionLevel$1 + 1) + (_ + 1);
                this._indexBuffers[x] = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34963, this._indexBuffers[x]), F.prepDevice.bufferData(34963, J, 35044), x++;
              }
          }
          return !0;
        },
        _getDemSample$1: function(t, e) {
          return this.demData[(32 - e) * 33 + t];
        },
        createDemFromParent: function() {
          var t = n.safeCast(this.parent, le);
          if (t == null || t.demData == null)
            return !1;
          var e = this.tileX % 2 === 1 ? 16 : 0, r = this.tileY % 2 === 1 ? 16 : 0;
          this.demData = new Array(this.demSize);
          for (var a = 0; a < 33; a += 2)
            for (var s = !0, l = 0; l < 33; l++)
              s ? this.demData[(32 - a) * 33 + l] = t._getDemSample$1(l / 2 + e, a / 2 + r) : this.demData[(32 - a) * 33 + l] = (t._getDemSample$1(l / 2 + e, a / 2 + r) + t._getDemSample$1(l / 2 + e + 1, a / 2 + r)) / 2, s = !s;
          for (var a = 1; a < 33; a += 2)
            for (var l = 0; l < 33; l++)
              this.demData[(32 - a) * 33 + l] = (this._getDemSample$1(l, a - 1) + this._getDemSample$1(l, a + 1)) / 2;
          for (var h = n.enumerate(this.demData); h.moveNext(); ) {
            var u = h.current;
            this.demAverage += u;
          }
          return this.demAverage /= this.demData.length, this.demReady = !0, !0;
        }
      };
      function aa() {
        this._topDown$1 = !0, this.backslash = !1, this._vertexList$1 = null, this._childTriangleList$1 = null, this._stars$1 = [], this._subDivisionLevel$1 = 4, this._subDivided$1 = !1, F.call(this);
      }
      aa.create = function(t, e, r, a, s) {
        var l = new aa();
        return l.parent = s, l.level = t, l.tileX = e, l.tileY = r, l.dataset = a, l._topDown$1 = !a.get_bottomsUp(), l.tileX !== e && alert("bad"), a.get_meanRadius() ? l.set__demScaleFactor(a.get_meanRadius()) : a.get_dataSetType() ? l.set__demScaleFactor(3396010) : l.set__demScaleFactor(6371e3), l.computeBoundingSphere(), l;
      };
      var L_ = {
        computeBoundingSphere: function() {
          this._initializeGrids$1(), this.topLeft = this.bounds[0 + 3 * 0].position.copy(), this.bottomRight = this.bounds[2 + 3 * 2].position.copy(), this.topRight = this.bounds[2 + 3 * 0].position.copy(), this.bottomLeft = this.bounds[0 + 3 * 2].position.copy(), this.calcSphere();
        },
        renderPart: function(t, e, r, a) {
          if (t.gl == null) {
            if (!e)
              for (var s = n.enumerate(this._stars$1); s.moveNext(); ) {
                var l = s.current, h = 25 / Math.pow(1.6, l.magnitude);
                A.drawPointPlanet(t, l.position, h, l.col, !1);
              }
          }
        },
        requestImage: function() {
          !this.downloading && !this.readyToRender && (this.downloading = !0, this._webFile$1 = new Ai(Kt.singleton.rewrite(this.get_URL(), 0)), this._webFile$1.onStateChange = n.bind("fileStateChange", this), this._webFile$1.send());
        },
        fileStateChange: function() {
          this._webFile$1.get_state() === 2 ? (this.downloading = !1, this.readyToRender = !1, this.errored = !0, this.requestPending = !1, vt.removeFromQueue(this.get_key(), !0)) : this._webFile$1.get_state() === 1 && (this.texReady = !0, this.downloading = !1, this.errored = !1, this.readyToRender = this.texReady && (this.demReady || !this.demTile), this.requestPending = !1, vt.removeFromQueue(this.get_key(), !0), this._loadData$1(this._webFile$1.getText()));
        },
        _loadData$1: function(t) {
          for (var e = n.replaceString(t, `\r
`, `
`).split(`
`), r = !0, a = null, s = n.enumerate(e); s.moveNext(); ) {
            var l = s.current;
            if (r) {
              r = !1;
              continue;
            }
            n.trim(l).length > 5 && (a = new Ea(l), a.position = R.raDecTo3dAu(a.RA, a.dec, 1), this._stars$1.push(a));
          }
        },
        isPointInTile: function(t, e) {
          if (!this.level)
            return !0;
          if (this.level === 1)
            return e >= 0 && e <= 90 && !this.tileX && this.tileY === 1 || e > 90 && e <= 180 && this.tileX === 1 && this.tileY === 1 || e < 0 && e >= -90 && !this.tileX && !this.tileY || e < -90 && e >= -180 && this.tileX === 1 && !this.tileY;
          if (!this.demReady || this.demData == null)
            return !1;
          var r = R.geoTo3dDouble(-t, e), a = this._isLeftOfHalfSpace$1(this.topLeft.copy(), this.topRight.copy(), r), s = this._isLeftOfHalfSpace$1(this.topRight.copy(), this.bottomRight.copy(), r), l = this._isLeftOfHalfSpace$1(this.bottomRight.copy(), this.bottomLeft.copy(), r), h = this._isLeftOfHalfSpace$1(this.bottomLeft.copy(), this.topLeft.copy(), r);
          return !!(a && s && l && h);
        },
        _isLeftOfHalfSpace$1: function(t, e, r) {
          t.normalize(), e.normalize();
          var a = L.cross(t, e), s = L.dot(a, r);
          return s < 0;
        },
        _initializeGrids$1: function() {
          if (this._vertexList$1 = [], this._childTriangleList$1 = new Array(4), this._childTriangleList$1[0] = [], this._childTriangleList$1[1] = [], this._childTriangleList$1[2] = [], this._childTriangleList$1[3] = [], this.bounds = new Array(9), this.level > 0) {
            this.parent == null && (this.parent = vt.getTile(this.level - 1, this.tileX / 2, this.tileY / 2, this.dataset, null));
            var t = this.parent, e = this.tileX % 2, r = this.tileY % 2;
            this.level > 1 ? this.backslash = t.backslash : this.backslash = (e === 1 ^ r === 1) === 1, this.bounds[0 + 3 * 0] = t.bounds[e + 3 * r].copy(), this.bounds[1 + 3 * 0] = this._midpoint$1(t.bounds[e + 3 * r], t.bounds[e + 1 + 3 * r]), this.bounds[2 + 3 * 0] = t.bounds[e + 1 + 3 * r].copy(), this.bounds[0 + 3 * 1] = this._midpoint$1(t.bounds[e + 3 * r], t.bounds[e + 3 * (r + 1)]), this.backslash ? this.bounds[1 + 3 * 1] = this._midpoint$1(t.bounds[e + 3 * r], t.bounds[e + 1 + 3 * (r + 1)]) : this.bounds[1 + 3 * 1] = this._midpoint$1(t.bounds[e + 1 + 3 * r], t.bounds[e + 3 * (r + 1)]), this.bounds[2 + 3 * 1] = this._midpoint$1(t.bounds[e + 1 + 3 * r], t.bounds[e + 1 + 3 * (r + 1)]), this.bounds[0 + 3 * 2] = t.bounds[e + 3 * (r + 1)].copy(), this.bounds[1 + 3 * 2] = this._midpoint$1(t.bounds[e + 3 * (r + 1)], t.bounds[e + 1 + 3 * (r + 1)]), this.bounds[2 + 3 * 2] = t.bounds[e + 1 + 3 * (r + 1)].copy(), this.bounds[0 + 3 * 0].tu = 0 * F.uvMultiple, this.bounds[0 + 3 * 0].tv = 0 * F.uvMultiple, this.bounds[1 + 3 * 0].tu = 0.5 * F.uvMultiple, this.bounds[1 + 3 * 0].tv = 0 * F.uvMultiple, this.bounds[2 + 3 * 0].tu = 1 * F.uvMultiple, this.bounds[2 + 3 * 0].tv = 0 * F.uvMultiple, this.bounds[0 + 3 * 1].tu = 0 * F.uvMultiple, this.bounds[0 + 3 * 1].tv = 0.5 * F.uvMultiple, this.bounds[1 + 3 * 1].tu = 0.5 * F.uvMultiple, this.bounds[1 + 3 * 1].tv = 0.5 * F.uvMultiple, this.bounds[2 + 3 * 1].tu = 1 * F.uvMultiple, this.bounds[2 + 3 * 1].tv = 0.5 * F.uvMultiple, this.bounds[0 + 3 * 2].tu = 0 * F.uvMultiple, this.bounds[0 + 3 * 2].tv = 1 * F.uvMultiple, this.bounds[1 + 3 * 2].tu = 0.5 * F.uvMultiple, this.bounds[1 + 3 * 2].tv = 1 * F.uvMultiple, this.bounds[2 + 3 * 2].tu = 1 * F.uvMultiple, this.bounds[2 + 3 * 2].tv = 1 * F.uvMultiple;
          } else
            this.bounds[0 + 3 * 0] = dt.create(0, -1, 0, 0, 0), this.bounds[1 + 3 * 0] = dt.create(0, 0, 1, 0.5, 0), this.bounds[2 + 3 * 0] = dt.create(0, -1, 0, 1, 0), this.bounds[0 + 3 * 1] = dt.create(-1, 0, 0, 0, 0.5), this.bounds[1 + 3 * 1] = dt.create(0, 1, 0, 0.5, 0.5), this.bounds[2 + 3 * 1] = dt.create(1, 0, 0, 1, 0.5), this.bounds[0 + 3 * 2] = dt.create(0, -1, 0, 0, 1), this.bounds[1 + 3 * 2] = dt.create(0, 0, -1, 0.5, 1), this.bounds[2 + 3 * 2] = dt.create(0, -1, 0, 1, 1);
        },
        _midpoint$1: function(t, e) {
          var r = L.lerp(t.position, e.position, 0.5), a = lt.lerp(lt.create(t.tu, t.tv), lt.create(e.tu, e.tv), 0.5);
          return r.normalize(), dt.createPos(r, a.x, a.y);
        },
        createGeometry: function(t) {
          return this.geometryCreated || (this.geometryCreated = !0, F.prototype.createGeometry.call(this, t)), !0;
        },
        cleanUp: function(t) {
          F.prototype.cleanUp.call(this, t), this._vertexList$1 != null && (this._vertexList$1 = null), this._childTriangleList$1 != null && (this._childTriangleList$1 = null), this._subDivided$1 = !1, this.demArray = null;
        }
      };
      function sa(t, e, r, a, s) {
        this._topDown$1 = !0, F.call(this), this.parent = s, this.level = t, this.tileX = e, this.tileY = r, this.dataset = a, this._topDown$1 = !a.get_bottomsUp(), this.computeBoundingSphere();
      }
      var A_ = {
        computeBoundingSphere: function() {
          if (!this._topDown$1) {
            this.computeBoundingSphereBottomsUp();
            return;
          }
          var t = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), e = this.dataset.get_baseTileDegrees() / 2 - this.tileY * t + this.dataset.get_offsetY(), r = this.dataset.get_baseTileDegrees() / 2 - (this.tileY + 1) * t + this.dataset.get_offsetY(), a = this.tileX * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), s = (this.tileX + 1) * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), l = (e + r) / 2, h = (a + s) / 2;
          this.sphereCenter = this.geoTo3dTan(l, h), this.topLeft = this.geoTo3dTan(e, a), this.bottomRight = this.geoTo3dTan(r, s), this.topRight = this.geoTo3dTan(e, s), this.bottomLeft = this.geoTo3dTan(r, a);
          var u = this.geoTo3dTan(e, a);
          u.subtract(this.sphereCenter), this.sphereRadius = u.length();
        },
        computeBoundingSphereBottomsUp: function() {
          var t = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), e = this.dataset.get_baseTileDegrees() / 2 + (this.tileY + 1) * t + this.dataset.get_offsetY(), r = this.dataset.get_baseTileDegrees() / 2 + this.tileY * t + this.dataset.get_offsetY(), a = this.tileX * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), s = (this.tileX + 1) * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX();
          this.topLeft = this.geoTo3dTan(e, a), this.bottomRight = this.geoTo3dTan(r, s), this.topRight = this.geoTo3dTan(e, s), this.bottomLeft = this.geoTo3dTan(r, a);
        },
        getLatLngEdges: function() {
          var t = this.dataset.get_baseTileDegrees() / Math.pow(2, this.level), e = new Da();
          return e.latMin = this.dataset.get_baseTileDegrees() / 2 - this.tileY * t + this.dataset.get_offsetY(), e.latMax = this.dataset.get_baseTileDegrees() / 2 - (this.tileY + 1) * t + this.dataset.get_offsetY(), e.lngMin = this.tileX * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), e.lngMax = (this.tileX + 1) * t - this.dataset.get_baseTileDegrees() / this.dataset.get_widthFactor() + this.dataset.get_offsetX(), e;
        },
        geoTo3dTan: function(t, e) {
          e = -e;
          var r = this.dataset.get_baseTileDegrees() / 2, a = Math.tan(r * F.RC);
          return this.dataset.get_matrix().transform(L.create(1, t / r * a, e / r * a));
        },
        requestImage: function() {
          this.fitsImage = n.safeCast(this.dataset.get_wcsImage(), bi), this.fitsImage != null ? (this.texReady = !0, this.downloading = !1, this.errored = this.fitsImage.errored, this.requestPending = !1, vt.removeFromQueue(this.get_key(), !0), fe.useGlVersion2 ? (this.makeTexture(), this.readyToRender = !0) : (this.bmp = this.fitsImage.getBitmap(), this.texture2d = this.bmp.getTexture(), this.readyToRender = !0)) : F.prototype.requestImage.call(this);
        },
        createGeometry: function(t) {
          if (this.geometryCreated)
            return !0;
          this.geometryCreated = !0;
          for (var e = 0; e < 4; e++)
            this._renderTriangleLists[e] = [];
          this.globalCenter = this.geoTo3dTan(0, 0);
          var r = this.getLatLngEdges();
          this.topLeft = this.geoTo3dTan(r.latMin, r.lngMin).subtract(this.globalCenter), this.bottomRight = this.geoTo3dTan(r.latMax, r.lngMax).subtract(this.globalCenter), this.topRight = this.geoTo3dTan(r.latMin, r.lngMax).subtract(this.globalCenter), this.bottomLeft = this.geoTo3dTan(r.latMax, r.lngMin).subtract(this.globalCenter);
          var a = L.midPoint(this.topLeft, this.bottomRight), s = L.midPoint(this.topLeft, this.bottomLeft), l = L.midPoint(this.topRight, this.bottomRight), h = L.midPoint(this.topLeft, this.topRight), u = L.midPoint(this.bottomLeft, this.bottomRight);
          if (t.gl == null)
            this._renderTriangleLists[0].push(Bt.create(dt.createPos(this.topLeft, 0, 0), dt.createPos(s, 0, 0.5), dt.createPos(h, 0.5, 0), this.texture, this.level)), this._renderTriangleLists[0].push(Bt.create(dt.createPos(s, 0, 0.5), dt.createPos(a, 0.5, 0.5), dt.createPos(h, 0.5, 0), this.texture, this.level)), this._renderTriangleLists[1].push(Bt.create(dt.createPos(h, 0.5, 0), dt.createPos(l, 1, 0.5), dt.createPos(this.topRight, 1, 0), this.texture, this.level)), this._renderTriangleLists[1].push(Bt.create(dt.createPos(h, 0.5, 0), dt.createPos(a, 0.5, 0.5), dt.createPos(l, 1, 0.5), this.texture, this.level)), this._renderTriangleLists[2].push(Bt.create(dt.createPos(s, 0, 0.5), dt.createPos(u, 0.5, 1), dt.createPos(a, 0.5, 0.5), this.texture, this.level)), this._renderTriangleLists[2].push(Bt.create(dt.createPos(s, 0, 0.5), dt.createPos(this.bottomLeft, 0, 1), dt.createPos(u, 0.5, 1), this.texture, this.level)), this._renderTriangleLists[3].push(Bt.create(dt.createPos(a, 0.5, 0.5), dt.createPos(this.bottomRight, 1, 1), dt.createPos(l, 1, 0.5), this.texture, this.level)), this._renderTriangleLists[3].push(Bt.create(dt.createPos(a, 0.5, 0.5), dt.createPos(u, 0.5, 1), dt.createPos(this.bottomRight, 1, 1), this.texture, this.level)), this.readyToRender = !0;
          else {
            this._vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this._vertexBuffer);
            var _ = new Float32Array(9 * 5), m = _, p = 0;
            p = this.addVertex(m, p, dt.createPos(u, 0.5, 1)), p = this.addVertex(m, p, dt.createPos(this.bottomLeft, 0, 1)), p = this.addVertex(m, p, dt.createPos(this.bottomRight, 1, 1)), p = this.addVertex(m, p, dt.createPos(a, 0.5, 0.5)), p = this.addVertex(m, p, dt.createPos(s, 0, 0.5)), p = this.addVertex(m, p, dt.createPos(l, 1, 0.5)), p = this.addVertex(m, p, dt.createPos(h, 0.5, 0)), p = this.addVertex(m, p, dt.createPos(this.topLeft, 0, 0)), p = this.addVertex(m, p, dt.createPos(this.topRight, 1, 0)), F.prepDevice.bufferData(34962, _, 35044);
            for (var e = 0; e < 4; e++) {
              p = 0, this.triangleCount = 2;
              var b = new Uint16Array(this.triangleCount * 3), S = b;
              switch (e) {
                case 0:
                  S[p++] = 7, S[p++] = 4, S[p++] = 6, S[p++] = 4, S[p++] = 3, S[p++] = 6;
                  break;
                case 1:
                  S[p++] = 6, S[p++] = 5, S[p++] = 8, S[p++] = 6, S[p++] = 3, S[p++] = 5;
                  break;
                case 2:
                  S[p++] = 4, S[p++] = 0, S[p++] = 3, S[p++] = 4, S[p++] = 1, S[p++] = 0;
                  break;
                case 3:
                  S[p++] = 3, S[p++] = 2, S[p++] = 5, S[p++] = 3, S[p++] = 0, S[p++] = 2;
                  break;
              }
              this._indexBuffers[e] = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34963, this._indexBuffers[e]), F.prepDevice.bufferData(34963, b, 35044);
            }
          }
          return !0;
        }
      };
      function Ze() {
        this._topDown$1 = !0, this.backslash = !1, this._vertexList$1 = null, this._childTriangleList$1 = null, this._subDivisionLevel$1 = 4, this._subDivided$1 = !1, F.call(this);
      }
      Ze._cloneArray$1 = function(t) {
        for (var e = t.length, r = new Uint16Array(e), a = r, s = 0; s < e; s++)
          a[s] = t[s];
        return a;
      }, Ze.create = function(t, e, r, a, s) {
        var l = new Ze();
        return l.parent = s, l.level = t, l.tileX = e, l.tileY = r, l.dataset = a, l._topDown$1 = !a.get_bottomsUp(), l.tileX !== e && alert("bad"), a.get_meanRadius() ? l.set__demScaleFactor(a.get_meanRadius()) : a.get_dataSetType() ? l.set__demScaleFactor(3396010) : l.set__demScaleFactor(6371e3), l.computeBoundingSphere(), l;
      };
      var k_ = {
        computeBoundingSphere: function() {
          this._initializeGrids$1(), this.topLeft = this.bounds[0 + 3 * 0].position.copy(), this.bottomRight = this.bounds[2 + 3 * 2].position.copy(), this.topRight = this.bounds[2 + 3 * 0].position.copy(), this.bottomLeft = this.bounds[0 + 3 * 2].position.copy(), this.calcSphere();
        },
        getIndexBuffer: function(t, e) {
          return this.level ? this.backslash ? Ze.backSlashIndexBuffer[t * 16 + e] : Ze.slashIndexBuffer[t * 16 + e] : Ze.rootIndexBuffer[t];
        },
        _processIndexBuffer$1: function(t, e) {
          if (!this.level) {
            Ze.rootIndexBuffer[e] = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34963, Ze.rootIndexBuffer[e]), F.prepDevice.bufferData(34963, t, 35044);
            return;
          }
          for (var r = 0; r < 16; r++) {
            var a = Ze._cloneArray$1(t);
            this._processAccomindations$1(a, r), this.backslash ? (Ze.backSlashIndexBuffer[e * 16 + r] = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34963, Ze.backSlashIndexBuffer[e * 16 + r]), F.prepDevice.bufferData(34963, a, 35044)) : (Ze.slashIndexBuffer[e * 16 + r] = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34963, Ze.slashIndexBuffer[e * 16 + r]), F.prepDevice.bufferData(34963, a, 35044));
          }
        },
        _processAccomindations$1: function(t, e) {
          for (var r = {}, a = {}, s = n.enumerate(t); s.moveNext(); ) {
            var l = s.current, h = this._vertexList$1[l], u = n.truncate(h.tu * 16 + 0.5), _ = n.truncate(h.tv * 16 + 0.5), m = (_ << 8) + u;
            n.keyExists(a, m) || (a[m] = l);
          }
          var p = 16;
          if ((e & 1) === 1)
            for (var b = 1; b < p; b += 2) {
              var S = p, x = (S << 8) + b, k = (S << 8) + b + 1;
              n.keyExists(a, x) && (r[a[x]] = a[k]);
            }
          if ((e & 2) === 2)
            for (var S = 1; S < p; S += 2) {
              var b = p, x = (S << 8) + b, k = (S + 1 << 8) + b;
              n.keyExists(a, x) && (r[a[x]] = a[k]);
            }
          if ((e & 4) === 4)
            for (var b = 1; b < p; b += 2) {
              var S = 0, x = (S << 8) + b, k = (S << 8) + b + 1;
              n.keyExists(a, x) && (r[a[x]] = a[k]);
            }
          if ((e & 8) === 8)
            for (var S = 1; S < p; S += 2) {
              var b = 0, x = (S << 8) + b, k = (S + 1 << 8) + b;
              n.keyExists(a, x) && (r[a[x]] = a[k]);
            }
          if (n.keyCount(r))
            for (var P = 0; P < t.length; P++)
              n.keyExists(r, t[P]) && (t[P] = r[t[P]]);
        },
        calculateFullSphere: function(t) {
          var e = Rr.findEnclosingSphere(t);
          this.sphereCenter = e.center, this.sphereRadius = e.radius;
        },
        isPointInTile: function(t, e) {
          if (!this.level)
            return !0;
          if (this.level === 1)
            return e >= 0 && e <= 90 && !this.tileX && this.tileY === 1 || e > 90 && e <= 180 && this.tileX === 1 && this.tileY === 1 || e < 0 && e >= -90 && !this.tileX && !this.tileY || e < -90 && e >= -180 && this.tileX === 1 && !this.tileY;
          if (!this.demReady || this.demData == null)
            return !1;
          var r = R.geoTo3dDouble(-t, e), a = this._isLeftOfHalfSpace$1(this.topLeft.copy(), this.topRight.copy(), r), s = this._isLeftOfHalfSpace$1(this.topRight.copy(), this.bottomRight.copy(), r), l = this._isLeftOfHalfSpace$1(this.bottomRight.copy(), this.bottomLeft.copy(), r), h = this._isLeftOfHalfSpace$1(this.bottomLeft.copy(), this.topLeft.copy(), r);
          return !!(a && s && l && h);
        },
        _isLeftOfHalfSpace$1: function(t, e, r) {
          t.normalize(), e.normalize();
          var a = L.cross(t, e), s = L.dot(a, r);
          return s < 0;
        },
        getSurfacePointAltitude: function(t, e, r) {
          if (this.level < F.lastDeepestLevel)
            for (var a = 0; a < 4; a++) {
              var s = this.children[a];
              if (s != null && s.isPointInTile(t, e)) {
                var l = s.getSurfacePointAltitude(t, e, r);
                if (l)
                  return l;
                break;
              }
            }
          F.tileTargetLevel = this.level, F.tileTargetX = this.tileX, F.tileTargetY = this.tileY;
          var h = R.geoTo3dDouble(-t, e);
          h = L.subtractVectors(new L(), h);
          var u = xr.getUVFromInnerPoint(this.topLeft.copy(), this.topRight.copy(), this.bottomLeft.copy(), this.bottomRight.copy(), h.copy()), _ = Math.max(0, Math.min(16, u.x * 16)), m = Math.max(0, Math.min(16, u.y * 16)), p = Math.max(0, Math.min(15, n.truncate(u.x * 16))), b = Math.max(0, Math.min(15, n.truncate(u.y * 16))), S = _ - p, x = m - b;
          if (this.demArray != null) {
            var k = this.demArray[p + 17 * b], P = this.demArray[p + 1 + 17 * b], I = this.demArray[p + 17 * (b + 1)], D = this.demArray[p + 1 + 17 * (b + 1)], G = k * (1 - S) + S * P, U = I * (1 - S) + S * D, Y = G * (1 - x) + x * U;
            return Y / this.get__demScaleFactor();
          }
          return this.demAverage / this.get__demScaleFactor();
        },
        _initializeGrids$1: function() {
          if (this._vertexList$1 = [], this._childTriangleList$1 = new Array(4), this._childTriangleList$1[0] = [], this._childTriangleList$1[1] = [], this._childTriangleList$1[2] = [], this._childTriangleList$1[3] = [], this.bounds = new Array(9), this.level > 0) {
            this.parent == null && (this.parent = vt.getTile(this.level - 1, this.tileX / 2, this.tileY / 2, this.dataset, null));
            var t = this.parent, e = this.tileX % 2, r = this.tileY % 2;
            this.level > 1 ? this.backslash = t.backslash : this.backslash = (e === 1 ^ r === 1) === 1, this.bounds[0 + 3 * 0] = t.bounds[e + 3 * r].copy(), this.bounds[1 + 3 * 0] = this._midpoint$1(t.bounds[e + 3 * r], t.bounds[e + 1 + 3 * r]), this.bounds[2 + 3 * 0] = t.bounds[e + 1 + 3 * r].copy(), this.bounds[0 + 3 * 1] = this._midpoint$1(t.bounds[e + 3 * r], t.bounds[e + 3 * (r + 1)]), this.backslash ? this.bounds[1 + 3 * 1] = this._midpoint$1(t.bounds[e + 3 * r], t.bounds[e + 1 + 3 * (r + 1)]) : this.bounds[1 + 3 * 1] = this._midpoint$1(t.bounds[e + 1 + 3 * r], t.bounds[e + 3 * (r + 1)]), this.bounds[2 + 3 * 1] = this._midpoint$1(t.bounds[e + 1 + 3 * r], t.bounds[e + 1 + 3 * (r + 1)]), this.bounds[0 + 3 * 2] = t.bounds[e + 3 * (r + 1)].copy(), this.bounds[1 + 3 * 2] = this._midpoint$1(t.bounds[e + 3 * (r + 1)], t.bounds[e + 1 + 3 * (r + 1)]), this.bounds[2 + 3 * 2] = t.bounds[e + 1 + 3 * (r + 1)].copy(), this.bounds[0 + 3 * 0].tu = 0 * F.uvMultiple, this.bounds[0 + 3 * 0].tv = 0 * F.uvMultiple, this.bounds[1 + 3 * 0].tu = 0.5 * F.uvMultiple, this.bounds[1 + 3 * 0].tv = 0 * F.uvMultiple, this.bounds[2 + 3 * 0].tu = 1 * F.uvMultiple, this.bounds[2 + 3 * 0].tv = 0 * F.uvMultiple, this.bounds[0 + 3 * 1].tu = 0 * F.uvMultiple, this.bounds[0 + 3 * 1].tv = 0.5 * F.uvMultiple, this.bounds[1 + 3 * 1].tu = 0.5 * F.uvMultiple, this.bounds[1 + 3 * 1].tv = 0.5 * F.uvMultiple, this.bounds[2 + 3 * 1].tu = 1 * F.uvMultiple, this.bounds[2 + 3 * 1].tv = 0.5 * F.uvMultiple, this.bounds[0 + 3 * 2].tu = 0 * F.uvMultiple, this.bounds[0 + 3 * 2].tv = 1 * F.uvMultiple, this.bounds[1 + 3 * 2].tu = 0.5 * F.uvMultiple, this.bounds[1 + 3 * 2].tv = 1 * F.uvMultiple, this.bounds[2 + 3 * 2].tu = 1 * F.uvMultiple, this.bounds[2 + 3 * 2].tv = 1 * F.uvMultiple, this._vertexList$1.push(this.bounds[0 + 3 * 0]), this._vertexList$1.push(this.bounds[1 + 3 * 0]), this._vertexList$1.push(this.bounds[2 + 3 * 0]), this._vertexList$1.push(this.bounds[0 + 3 * 1]), this._vertexList$1.push(this.bounds[1 + 3 * 1]), this._vertexList$1.push(this.bounds[2 + 3 * 1]), this._vertexList$1.push(this.bounds[0 + 3 * 2]), this._vertexList$1.push(this.bounds[1 + 3 * 2]), this._vertexList$1.push(this.bounds[2 + 3 * 2]), this.backslash ? (this._childTriangleList$1[0].push(Ae.create(4, 1, 0)), this._childTriangleList$1[0].push(Ae.create(3, 4, 0)), this._childTriangleList$1[1].push(Ae.create(5, 2, 1)), this._childTriangleList$1[1].push(Ae.create(4, 5, 1)), this._childTriangleList$1[2].push(Ae.create(7, 4, 3)), this._childTriangleList$1[2].push(Ae.create(6, 7, 3)), this._childTriangleList$1[3].push(Ae.create(8, 5, 4)), this._childTriangleList$1[3].push(Ae.create(7, 8, 4))) : (this._childTriangleList$1[0].push(Ae.create(3, 1, 0)), this._childTriangleList$1[0].push(Ae.create(4, 1, 3)), this._childTriangleList$1[1].push(Ae.create(4, 2, 1)), this._childTriangleList$1[1].push(Ae.create(5, 2, 4)), this._childTriangleList$1[2].push(Ae.create(6, 4, 3)), this._childTriangleList$1[2].push(Ae.create(7, 4, 6)), this._childTriangleList$1[3].push(Ae.create(7, 5, 4)), this._childTriangleList$1[3].push(Ae.create(8, 5, 7)));
          } else
            this.bounds[0 + 3 * 0] = dt.create(0, -1, 0, 0, 0), this.bounds[1 + 3 * 0] = dt.create(0, 0, 1, 0.5, 0), this.bounds[2 + 3 * 0] = dt.create(0, -1, 0, 1, 0), this.bounds[0 + 3 * 1] = dt.create(-1, 0, 0, 0, 0.5), this.bounds[1 + 3 * 1] = dt.create(0, 1, 0, 0.5, 0.5), this.bounds[2 + 3 * 1] = dt.create(1, 0, 0, 1, 0.5), this.bounds[0 + 3 * 2] = dt.create(0, -1, 0, 0, 1), this.bounds[1 + 3 * 2] = dt.create(0, 0, -1, 0.5, 1), this.bounds[2 + 3 * 2] = dt.create(0, -1, 0, 1, 1), this._vertexList$1.push(this.bounds[0 + 3 * 0]), this._vertexList$1.push(this.bounds[1 + 3 * 0]), this._vertexList$1.push(this.bounds[2 + 3 * 0]), this._vertexList$1.push(this.bounds[0 + 3 * 1]), this._vertexList$1.push(this.bounds[1 + 3 * 1]), this._vertexList$1.push(this.bounds[2 + 3 * 1]), this._vertexList$1.push(this.bounds[0 + 3 * 2]), this._vertexList$1.push(this.bounds[1 + 3 * 2]), this._vertexList$1.push(this.bounds[2 + 3 * 2]), this._childTriangleList$1[0].push(Ae.create(3, 1, 0)), this._childTriangleList$1[0].push(Ae.create(4, 1, 3)), this._childTriangleList$1[1].push(Ae.create(5, 2, 1)), this._childTriangleList$1[1].push(Ae.create(4, 5, 1)), this._childTriangleList$1[2].push(Ae.create(7, 4, 3)), this._childTriangleList$1[2].push(Ae.create(6, 7, 3)), this._childTriangleList$1[3].push(Ae.create(7, 5, 4)), this._childTriangleList$1[3].push(Ae.create(8, 5, 7));
        },
        _midpoint$1: function(t, e) {
          var r = L.lerp(t.position, e.position, 0.5), a = lt.lerp(lt.create(t.tu, t.tv), lt.create(e.tu, e.tv), 0.5);
          return r.normalize(), dt.createPos(r, a.x, a.y);
        },
        createGeometry: function(t) {
          if (this.geometryCreated)
            return !0;
          if (this.geometryCreated = !0, F.prototype.createGeometry.call(this, t), !this._subDivided$1) {
            this._vertexList$1 == null && this._initializeGrids$1(), F.uvMultiple === 256 ? !this.dataset.get_dataSetType() || this.dataset.get_dataSetType() === 1 ? this._subDivisionLevel$1 = Math.min(5, Math.max(0, 5 - this.level)) : this._subDivisionLevel$1 = Math.min(5, Math.max(0, 5 - this.level)) : this.demTile && this.level > 1 && (this.demArray = new Array(17 * 17), this.demSize = 17 * 17, this.backslash ? Ze._backslashYIndex$1 == null && (this._tempBackslashYIndex$1 = new Array(this.demSize), this._tempBackslashXIndex$1 = new Array(this.demSize)) : Ze._slashYIndex$1 == null && (this._tempSlashYIndex$1 = new Array(this.demSize), this._tempSlashXIndex$1 = new Array(this.demSize)));
            for (var e = 0; e < 4; e++)
              for (var r = this._subDivisionLevel$1; r-- > 1; ) {
                for (var a = [], s = n.enumerate(this._childTriangleList$1[e]); s.moveNext(); ) {
                  var l = s.current;
                  l.subDivide(a, this._vertexList$1);
                }
                this._childTriangleList$1[e] = a;
              }
            if (t.gl == null)
              for (var e = 0; e < 4; e++) {
                this._renderTriangleLists[e] = [];
                for (var h = n.enumerate(this._childTriangleList$1[e]); h.moveNext(); ) {
                  var l = h.current, u = this._vertexList$1[l.c], _ = this._vertexList$1[l.b], m = this._vertexList$1[l.a];
                  this._renderTriangleLists[e].push(Bt.create(u, _, m, this.texture, this.level));
                }
              }
            else {
              this._vertexBuffer = F.prepDevice.createBuffer(), F.prepDevice.bindBuffer(34962, this._vertexBuffer);
              for (var p = new Float32Array(this._vertexList$1.length * 5), b = p, S = 0, x = n.enumerate(this._vertexList$1); x.moveNext(); ) {
                var k = x.current;
                this.demTile ? (S = this.addVertex(b, S, this._getMappedVertex(k)), this.demIndex++) : S = this.addVertex(b, S, k);
              }
              this.demTile && (this.backslash ? this._tempBackslashXIndex$1 != null && (Ze._backslashXIndex$1 = this._tempBackslashXIndex$1, Ze._backslashYIndex$1 = this._tempBackslashYIndex$1, this._tempBackslashXIndex$1 = null, this._tempBackslashYIndex$1 = null) : this._tempSlashYIndex$1 != null && (Ze._slashXIndex$1 = this._tempSlashXIndex$1, Ze._slashYIndex$1 = this._tempSlashYIndex$1, this._tempSlashYIndex$1 = null, this._tempSlashXIndex$1 = null)), F.prepDevice.bufferData(34962, p, 35044);
              for (var e = 0; e < 4; e++)
                if (this.triangleCount = this._childTriangleList$1[e].length, this.getIndexBuffer(e, 0) == null) {
                  var P = new Uint16Array(this.triangleCount * 3), I = P;
                  S = 0;
                  for (var D = n.enumerate(this._childTriangleList$1[e]); D.moveNext(); ) {
                    var l = D.current;
                    I[S++] = l.c, I[S++] = l.b, I[S++] = l.a;
                  }
                  this._processIndexBuffer$1(I, e);
                }
            }
            this._subDivided$1 = !0;
          }
          return !0;
        },
        _getMappedVertex: function(t) {
          var e = new dt(), r = R.cartesianToSpherical2(t.position);
          if (r.get_lng() < -180 && r.set_lng(r.get_lng() + 360), r.get_lng() > 180 && r.set_lng(r.get_lng() - 360), this.level > 1) {
            var a = n.truncate(t.tu * 16 + 0.5), s = n.truncate(t.tv * 16 + 0.5);
            this.demArray[a + s * 17] = this.demData[this.demIndex], this.backslash ? this._tempBackslashYIndex$1 != null && (this._tempBackslashXIndex$1[this.demIndex] = a, this._tempBackslashYIndex$1[this.demIndex] = s) : this._tempSlashYIndex$1 != null && (this._tempSlashXIndex$1[this.demIndex] = a, this._tempSlashYIndex$1[this.demIndex] = s);
          }
          var l = this.geoTo3dWithAlt(r.get_lat(), r.get_lng(), !1, !1);
          return e.tu = t.tu, e.tv = t.tv, l.subtract(this.localCenter), e.position = l, e;
        },
        cleanUp: function(t) {
          F.prototype.cleanUp.call(this, t), this._vertexList$1 != null && (this._vertexList$1 = null), this._childTriangleList$1 != null && (this._childTriangleList$1 = null), this._subDivided$1 = !1, this.demArray = null;
        },
        _getDemSample$1: function(t, e) {
          return this.demArray[(16 - e) * 17 + t];
        },
        createDemFromParent: function() {
          var t = n.safeCast(this.parent, Ze);
          if (t == null)
            return !1;
          var e = this.tileX % 2 === 1 ? 8 : 0, r = this.tileY % 2 ? 0 : 8;
          this.demArray = new Array(17 * 17);
          for (var a = 0; a < 17; a += 2)
            for (var s = !0, l = 0; l < 17; l++)
              s ? this.demArray[(16 - a) * 17 + l] = t._getDemSample$1(l / 2 + e, a / 2 + r) : this.demArray[(16 - a) * 17 + l] = (t._getDemSample$1(l / 2 + e, a / 2 + r) + t._getDemSample$1(l / 2 + e + 1, a / 2 + r)) / 2, s = !s;
          for (var h = 1; h < 17; h += 2)
            for (var u = 0; u < 17; u++)
              this.demArray[(16 - h) * 17 + u] = (this._getDemSample$1(u, h - 1) + this._getDemSample$1(u, h + 1)) / 2;
          this.demData = new Array(this.demSize);
          for (var _ = 0; _ < this.demSize; _++)
            this.backslash ? this.demData[_] = this.demArray[Ze._backslashXIndex$1[_] + Ze._backslashYIndex$1[_] * 17] : this.demData[_] = this.demArray[Ze._slashXIndex$1[_] + Ze._slashYIndex$1[_] * 17], this.demAverage += this.demData[_];
          return this.demAverage /= this.demData.length, this.demReady = !0, !0;
        }
      };
      function Wr() {
        this._textureReady$1 = !1, this._sprite$1 = new Hr(), xe.call(this);
      }
      Wr.create = function(t, e) {
        var r = new Wr();
        return r.set_owner(t), r._filename$1 = e.name, r.set_name(t.getNextDefaultName("Image")), r.set_x(0), r.set_y(0), t.get_owner().addCachedFile(e.name, e), r;
      };
      var I_ = {
        getTypeName: function() {
          return "TerraViewer.BitmapOverlay";
        },
        copy: function(t) {
          var e = new Wr();
          return e.set_owner(t), e._filename$1 = this._filename$1, e.set_x(this.get_x()), e.set_y(this.get_y()), e.set_width(this.get_width()), e.set_height(this.get_height()), e.set_color(this.get_color()), e.set_opacity(this.get_opacity()), e.set_rotationAngle(this.get_rotationAngle()), e.set_name(this.get_name() + " - Copy"), e;
        },
        cleanUp: function() {
          this.texture = null, this.texture2d != null && (this.texture2d.cleanUp(), this.texture2d = null);
        },
        initializeTexture: function() {
          var t = this;
          try {
            fe.useGl ? (this.texture2d = this.get_owner().get_owner().getCachedTexture2d(this._filename$1), this._textureReady$1 = !0) : this.texture = this.get_owner().get_owner().getCachedTexture(this._filename$1, function() {
              t._textureReady$1 = !0;
            });
          } catch {
          }
        },
        draw3D: function(t, e) {
          if (fe.useGl)
            this.texture2d == null && this.initializeTexture(), !this.get_width() && !this.get_height() && (this.set_width(this.texture2d.imageElement.width), this.set_height(this.texture2d.imageElement.height)), this.initializeGeometry(), this.updateRotation(), this._sprite$1.draw(t, this.points, this.points.length, this.texture2d, !0, 1);
          else {
            if (this.texture == null && this.initializeTexture(), !this._textureReady$1)
              return;
            !this.get_width() && !this.get_height() && (this.set_width(this.texture.width), this.set_height(this.texture.height));
            var r = t.device;
            r.save(), r.translate(this.get_x(), this.get_y()), r.rotate(this.get_rotationAngle() * xe.RC), r.globalAlpha = this.get_opacity(), r.drawImage(this.texture, -this.get_width() / 2, -this.get_height() / 2, this.get_width(), this.get_height()), r.restore();
          }
        },
        addFilesToCabinet: function(t) {
          t.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
        },
        writeOverlayProperties: function(t) {
          t._writeStartElement("Bitmap"), t._writeAttributeString("Filename", this._filename$1), t._writeEndElement();
        },
        initializeFromXml: function(t) {
          var e = at.selectSingleNode(t, "Bitmap");
          this._filename$1 = e.attributes.getNamedItem("Filename").nodeValue;
        }
      };
      function rr() {
        this._sprite$1 = new Hr(), this._ctx$1 = null, this._ce$1 = null, xe.call(this);
      }
      rr.create = function(t) {
        var e = new rr();
        return e.textObject = t, e._calculateTextSize$1(), e;
      };
      var $_ = {
        getTypeName: function() {
          return "TerraViewer.TextOverlay";
        },
        get_color: function() {
          return xe.prototype.get_color.call(this);
        },
        set_color: function(t) {
          return this.textObject.foregroundColor !== t && (this.textObject.foregroundColor = t, xe.prototype.set_color.call(this, t), this.cleanUp()), t;
        },
        draw3D: function(t, e) {
          if (fe.useGl)
            this.initializeTexture(), this.initializeGeometry(), this.updateRotation(), this._sprite$1.draw(t, this.points, this.points.length, this.texture2d, !0, 1);
          else {
            var r = t.device;
            r.save(), r.translate(this.get_x(), this.get_y()), r.rotate(this.get_rotationAngle() * xe.RC), r.globalAlpha = this.get_opacity(), this._drawCanvasText$1(r), r.restore();
          }
        },
        _drawCanvasText$1: function(t) {
          t.fillStyle = this.textObject.foregroundColor.toString(), t.font = (this.textObject.italic ? "italic" : "normal") + " " + (this.textObject.bold ? "bold" : "normal") + " " + Math.round(this.textObject.fontSize * 1.2).toString() + "px " + this.textObject.fontName, t.textBaseline = "top";
          var e = this.textObject.text;
          if (e.indexOf("{$") > -1) {
            if (e.indexOf("{$DATE}") > -1) {
              var r = n.format("{0:yyyy/MM/dd}", Z.get_now());
              e = n.replaceString(e, "{$DATE}", r);
            }
            if (e.indexOf("{$TIME}") > -1) {
              var a = n.format("{0:HH:mm:ss}", Z.get_now());
              e = n.replaceString(e, "{$TIME}", a);
            }
            e = n.replaceString(e, "{$DIST}", Oe.formatDistance(V.singleton.renderContext.get_solarSystemCameraDistance())), e = n.replaceString(e, "{$LAT}", R.formatDMS(V.singleton.renderContext.viewCamera.lat)), e = n.replaceString(e, "{$LNG}", R.formatDMS(V.singleton.renderContext.viewCamera.lat)), e = n.replaceString(e, "{$RA}", R.formatDMS(V.singleton.renderContext.viewCamera.get_RA())), e = n.replaceString(e, "{$DEC}", R.formatDMS(V.singleton.renderContext.viewCamera.get_dec())), e = n.replaceString(e, "{$FOV}", R.formatDMS(V.singleton.renderContext.get_fovAngle()));
          }
          for (var s = e.split(`
`), l = -(this.get_height() / 2), h = this.textObject.fontSize * 1.7, u = n.enumerate(s); u.moveNext(); )
            for (var _ = u.current, m = at.getWrappedText(t, _, this.get_width()), p = n.enumerate(m); p.moveNext(); ) {
              var b = p.current;
              t.fillText(b, -this.get_width() / 2, l), l += h;
            }
        },
        _calculateTextSize$1: function() {
          (this._ctx$1 == null || this._ce$1 == null) && (this._ce$1 = document.createElement("canvas"), this._ce$1.height = 100, this._ce$1.width = 100, this._ctx$1 = this._ce$1.getContext("2d")), this._ctx$1.fillStyle = this.textObject.foregroundColor.toString(), this._ctx$1.font = (this.textObject.italic ? "italic" : "normal") + " " + (this.textObject.bold ? "bold" : "normal") + " " + Math.round(this.textObject.fontSize * 1.2).toString() + "px " + this.textObject.fontName, this._ctx$1.textBaseline = "top";
          var t = this.textObject.text;
          if (t.indexOf("{$") > -1) {
            if (t.indexOf("{$DATE}") > -1) {
              var e = n.format("{0:yyyy/MM/dd}", Z.get_now());
              t = n.replaceString(t, "{$DATE}", e);
            }
            if (t.indexOf("{$TIME}") > -1) {
              var r = n.format("{0:HH:mm:ss}", Z.get_now());
              t = n.replaceString(t, "{$TIME}", r);
            }
            t = n.replaceString(t, "{$DIST}", Oe.formatDistance(V.singleton.renderContext.get_solarSystemCameraDistance())), t = n.replaceString(t, "{$LAT}", R.formatDMS(V.singleton.renderContext.viewCamera.lat)), t = n.replaceString(t, "{$LNG}", R.formatDMS(V.singleton.renderContext.viewCamera.lat)), t = n.replaceString(t, "{$RA}", R.formatDMS(V.singleton.renderContext.viewCamera.get_RA())), t = n.replaceString(t, "{$DEC}", R.formatDMS(V.singleton.renderContext.viewCamera.get_dec())), t = n.replaceString(t, "{$FOV}", R.formatDMS(V.singleton.renderContext.get_fovAngle()));
          }
          for (var a = t.split(`
`), s = 0, l = this.textObject.fontSize * 1.7, h = 0, u = n.enumerate(a); u.moveNext(); ) {
            var _ = u.current, m = this._ctx$1.measureText(_).width;
            h = Math.max(m, h), s += l;
          }
          this.set_width(h * 1.01), this.set_height(s), this._ce$1 = null, this._ctx$1 = null;
        },
        initializeTexture: function() {
          (this.texture2d == null || this.textObject.text.indexOf("{$") > -1) && ((!this.get_height() || !this.get_width()) && this._calculateTextSize$1(), (this._ctx$1 == null || this._ce$1 == null) && (this._ce$1 = document.createElement("canvas"), this._ce$1.height = n.truncate(this.get_height()), this._ce$1.width = n.truncate(this.get_width()), this._ctx$1 = this._ce$1.getContext("2d")), this._ctx$1.translate(this.get_width() / 2, this.get_height() / 2), this._ctx$1.clearRect(0, 0, this.get_width(), this.get_height()), this._drawCanvasText$1(this._ctx$1), this.texture2d = new Te(), this.texture2d.imageElement = this._ce$1, this.texture2d.makeTexture(), this._ce$1 = null, this._ctx$1 = null);
        },
        writeOverlayProperties: function(t) {
          t._writeStartElement("Text"), this.textObject._saveToXml(t), t._writeEndElement();
        },
        initializeFromXml: function(t) {
          var e = at.selectSingleNode(t, "Text");
          this.textObject = Fr._fromXml(at.selectSingleNode(e, "TextObject"));
        },
        initializeGeometry: function() {
          fe.useGl && xe.prototype.initializeGeometry.call(this);
        }
      };
      function Qr() {
        this._shapeType$1 = 1, this._sprite$1 = new Hr(), this._triangleStrip$1 = !0, xe.call(this);
      }
      Qr._create = function(t, e) {
        var r = new Qr();
        return r._shapeType$1 = e, r.set_owner(t), r;
      };
      var P_ = {
        getTypeName: function() {
          return "TerraViewer.ShapeOverlay";
        },
        get_shapeType: function() {
          return this._shapeType$1;
        },
        set_shapeType: function(t) {
          return this._shapeType$1 = t, this.cleanUpGeometry(), t;
        },
        draw3D: function(t, e) {
          if (fe.useGl)
            this.initializeGeometry(), this._sprite$1.draw(t, this.points, this.points.length, null, this._triangleStrip$1, this.get_opacity());
          else
            switch (this._shapeType$1) {
              case 0:
                this._drawCircleGeometry$1(t);
                break;
              case 1:
                this._drawRectGeometry$1(t);
                break;
              case 6:
                this._drawOpenRectGeometry$1(t);
                break;
              case 2:
                this._drawStarGeometry$1(t);
                break;
              case 3:
                this._drawDonutGeometry$1(t);
                break;
              case 4:
                this._drawArrowGeometry$1(t);
                break;
              case 5:
                this._drawLineGeometry$1(t);
                break;
            }
        },
        initializeGeometry: function() {
          if (this.points == null)
            switch (this._shapeType$1) {
              case 0:
                this._createCircleGeometry$1();
                break;
              case 1:
                xe.prototype.initializeGeometry.call(this);
                break;
              case 6:
                this._createOpenRectGeometry$1();
                break;
              case 2:
                this._createStarGeometry$1();
                break;
              case 3:
                this._createDonutGeometry$1();
                break;
              case 4:
                this._createArrowGeometry$1();
                break;
              case 5:
                this._createLineGeometry$1();
                break;
            }
        },
        _createLineGeometry$1: function() {
          this.get_x(), this.get_y(), this.get_width() / 2;
          var t = this.get_width(), e = n.truncate(t / 12) + 1;
          this.points == null && (this.points = new Array(e * 2 + 2));
          for (var r = 0; r <= e; r++) {
            var a = r * 2;
            this.points[a] = new ne(), this.points[a].position = this.makePosition(this.get_x(), this.get_y(), r / e * this.get_width() - this.get_width() / 2, 6, this.get_rotationAngle()), this.points[a].tu = r % 2, this.points[a].tv = 0, this.points[a].color = this.get_color(), this.points[a + 1] = new ne(), this.points[a + 1].position = this.makePosition(this.get_x(), this.get_y(), r / e * this.get_width() - this.get_width() / 2, -6, this.get_rotationAngle()), this.points[a + 1].tu = r % 2, this.points[a + 1].tv = 1, this.points[a + 1].color = this.get_color();
          }
        },
        _createOpenRectGeometry$1: function() {
          var t = this.get_x(), e = this.get_y();
          this.get_width() / 2;
          var r = this.get_width(), a = n.truncate(r / 12) + 1, s = n.truncate(this.get_height() / 12) + 1, l = ((a + 1) * 2 + (s + 1) * 2) * 2;
          this.points == null && (this.points = new Array(l));
          for (var h = 0; h <= a; h++) {
            var u = h * 2;
            this.points[u] = new ne(), this.points[u].position = this.makePosition(t, e, h / a * this.get_width() - this.get_width() / 2, this.get_height() / 2, this.get_rotationAngle()), this.points[u].tu = h % 2, this.points[u].tv = 0, this.points[u].color = this.get_color(), this.points[u + 1] = new ne(), this.points[u + 1].position = this.makePosition(t, e, h / a * this.get_width() - this.get_width() / 2, this.get_height() / 2 - 12, this.get_rotationAngle()), this.points[u + 1].tu = h % 2, this.points[u + 1].tv = 1, this.points[u + 1].color = this.get_color();
            var _ = (a + 1) * 4 + (s + 1) * 2 - 2 - u;
            this.points[_] = new ne(), this.points[_].position = this.makePosition(t, e, h / a * this.get_width() - this.get_width() / 2, -(this.get_height() / 2) + 12, this.get_rotationAngle()), this.points[_].tu = h % 2, this.points[_].tv = 0, this.points[_].color = this.get_color(), this.points[_ + 1] = new ne(), this.points[_ + 1].position = this.makePosition(t, e, h / a * this.get_width() - this.get_width() / 2, -(this.get_height() / 2), this.get_rotationAngle()), this.points[_ + 1].tu = h % 2, this.points[_ + 1].tv = 1, this.points[_ + 1].color = this.get_color();
          }
          for (var m = (a + 1) * 2, h = 0; h <= s; h++) {
            var p = (s + 1) * 2 + m - 2, u = h * 2;
            this.points[p - u] = new ne(), this.points[p - u].position = this.makePosition(t, e, this.get_width() / 2, h / s * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[p - u].tu = h % 2, this.points[p - u].tv = 0, this.points[p - u].color = this.get_color(), this.points[p - u + 1] = new ne(), this.points[p - u + 1].position = this.makePosition(t, e, this.get_width() / 2 - 12, h / s * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[p - u + 1].tu = h % 2, this.points[p - u + 1].tv = 1, this.points[p - u + 1].color = this.get_color();
            var _ = u + (a + 1) * 4 + (s + 1) * 2;
            this.points[_] = new ne(), this.points[_].position = this.makePosition(t, e, -(this.get_width() / 2) + 12, h / s * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[_].tu = h % 2, this.points[_].tv = 0, this.points[_].color = this.get_color(), this.points[_ + 1] = new ne(), this.points[_ + 1].position = this.makePosition(t, e, -(this.get_width() / 2), h / s * this.get_height() - this.get_height() / 2, this.get_rotationAngle()), this.points[_ + 1].tu = h % 2, this.points[_ + 1].tv = 1, this.points[_ + 1].color = this.get_color();
          }
        },
        _createStarGeometry$1: function() {
          var t = this.get_x(), e = this.get_y();
          this.get_width() / 2;
          var r = Math.PI * 2 / 5;
          this.points == null && (this.points = new Array(12)), this._pnts$1 == null && (this._pnts$1 = new Array(10));
          for (var a = 0; a < 5; a++) {
            var s = a * r - Math.PI / 2;
            this._pnts$1[a] = new ne(), this._pnts$1[a].position = this.makePosition(t, e, Math.cos(s) * (this.get_width() / 2), Math.sin(s) * (this.get_height() / 2), this.get_rotationAngle()), this._pnts$1[a].tu = 0, this._pnts$1[a].tv = 0, this._pnts$1[a].color = this.get_color();
          }
          for (var a = 5; a < 10; a++) {
            var s = a * r + r / 2 - Math.PI / 2;
            this._pnts$1[a] = new ne(), this._pnts$1[a].position = this.makePosition(t, e, Math.cos(s) * (this.get_width() / 5.3), Math.sin(s) * (this.get_height() / 5.3), this.get_rotationAngle()), this._pnts$1[a].tu = 0, this._pnts$1[a].tv = 0, this._pnts$1[a].color = this.get_color();
          }
          this.points[0] = this._pnts$1[0], this.points[1] = this._pnts$1[5], this.points[2] = this._pnts$1[9], this.points[3] = this._pnts$1[1], this.points[4] = this._pnts$1[7], this.points[5] = this._pnts$1[4], this.points[6] = this._pnts$1[6], this.points[7] = this._pnts$1[2], this.points[8] = this._pnts$1[7], this.points[9] = this._pnts$1[7], this.points[10] = this._pnts$1[3], this.points[11] = this._pnts$1[8], this._triangleStrip$1 = !1;
        },
        _createArrowGeometry$1: function() {
          this.points == null && (this.points = new Array(9)), this.points[0] = new ne(), this.points[0].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, -this.get_height() / 4, this.get_rotationAngle()), this.points[0].tu = 0, this.points[0].tv = 0, this.points[0].color = this.get_color(), this.points[1] = new ne(), this.points[1].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 4, this.get_rotationAngle()), this.points[1].tu = 1, this.points[1].tv = 0, this.points[1].color = this.get_color(), this.points[2] = new ne(), this.points[2].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 4, this.get_rotationAngle()), this.points[2].tu = 0, this.points[2].tv = 1, this.points[2].color = this.get_color(), this.points[3] = new ne(), this.points[3].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 4, this.get_rotationAngle()), this.points[3].tu = 1, this.points[3].tv = 0, this.points[3].color = this.get_color(), this.points[4] = new ne(), this.points[4].position = this.makePosition(this.get_x(), this.get_y(), -this.get_width() / 2, this.get_height() / 4, this.get_rotationAngle()), this.points[4].tu = 0, this.points[4].tv = 1, this.points[4].color = this.get_color(), this.points[5] = new ne(), this.points[5].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, this.get_height() / 4, this.get_rotationAngle()), this.points[5].tu = 1, this.points[5].tv = 1, this.points[5].color = this.get_color(), this.points[6] = new ne(), this.points[6].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, -this.get_height() / 2, this.get_rotationAngle()), this.points[6].tu = 1, this.points[6].tv = 1, this.points[6].color = this.get_color(), this.points[7] = new ne(), this.points[7].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 2, 0, this.get_rotationAngle()), this.points[7].tu = 1, this.points[7].tv = 0.5, this.points[7].color = this.get_color(), this.points[8] = new ne(), this.points[8].position = this.makePosition(this.get_x(), this.get_y(), this.get_width() / 4, this.get_height() / 2, this.get_rotationAngle()), this.points[8].tu = 1, this.points[8].tv = 1, this.points[8].color = this.get_color(), this._triangleStrip$1 = !1;
        },
        _createDonutGeometry$1: function() {
          var t = this.get_x(), e = this.get_y(), r = this.get_width() / 2, a = Math.PI * 2 * r, s = n.truncate(a / 12) + 1, l = Math.PI * 2 / s;
          this.points == null && (this.points = new Array(s * 2 + 2));
          for (var h = 0; h <= s; h++) {
            var u = h * 2;
            this.points[u] = new ne(), this.points[u].position = this.makePosition(t, e, Math.cos(h * l) * (this.get_width() / 2), Math.sin(h * l) * (this.get_height() / 2), this.get_rotationAngle()), this.points[u].tu = h % 2, this.points[u].tv = 0, this.points[u].color = this.get_color(), this.points[u + 1] = new ne(), this.points[u + 1].position = this.makePosition(t, e, Math.cos(h * l) * (this.get_width() / 2 - 10), Math.sin(h * l) * (this.get_height() / 2 - 10), this.get_rotationAngle()), this.points[u + 1].tu = h % 2, this.points[u + 1].tv = 1, this.points[u + 1].color = this.get_color();
          }
        },
        _createCircleGeometry$1: function() {
          var t = this.get_x(), e = this.get_y(), r = this.get_width() / 2, a = Math.PI * 2 * r, s = n.truncate(a / 12) + 1, l = Math.PI * 2 / s;
          this.points == null && (this.points = new Array(s * 2 + 2));
          for (var h = 0; h <= s; h++) {
            var u = h * 2;
            this.points[u] = new ne(), this.points[u].position = this.makePosition(t, e, Math.cos(h * l) * (this.get_width() / 2), Math.sin(h * l) * (this.get_height() / 2), this.get_rotationAngle()), this.points[u].tu = h % 2, this.points[u].tv = 0, this.points[u].color = this.get_color(), this.points[u + 1] = new ne(), this.points[u + 1].position = this.makePosition(t, e, 0, 0, this.get_rotationAngle()), this.points[u + 1].tu = h % 2, this.points[u + 1].tv = 1, this.points[u + 1].color = this.get_color();
          }
        },
        initializeTexture: function() {
          switch (this.get_shapeType()) {
            case 5:
            case 3:
            case 6:
              break;
            case 0:
            case 1:
            case 2:
            case 4:
            default:
              this.texture = null;
              break;
          }
        },
        _drawLineGeometry$1: function(t) {
          var e = t.device;
          e.save();
          var r = this.get_width() / 2;
          e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * xe.RC), e.moveTo(-r, 0), e.lineTo(r, 0), e.lineWidth = 9, e.strokeStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.stroke(), e.restore();
        },
        _drawOpenRectGeometry$1: function(t) {
          var e = t.device;
          e.save(), e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * xe.RC), e.beginPath(), e.moveTo(-this.get_width() / 2, -this.get_height() / 2), e.lineTo(this.get_width() / 2, -this.get_height() / 2), e.lineTo(this.get_width() / 2, this.get_height() / 2), e.lineTo(-this.get_width() / 2, this.get_height() / 2), e.closePath(), e.lineWidth = 9, e.strokeStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.stroke(), e.restore();
        },
        _drawRectGeometry$1: function(t) {
          var e = t.device;
          e.save(), e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * xe.RC), e.beginPath(), e.moveTo(-this.get_width() / 2, -this.get_height() / 2), e.lineTo(this.get_width() / 2, -this.get_height() / 2), e.lineTo(this.get_width() / 2, this.get_height() / 2), e.lineTo(-this.get_width() / 2, this.get_height() / 2), e.closePath(), e.lineWidth = 0, e.fillStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.fill(), e.restore();
        },
        _drawStarGeometry$1: function(t) {
          var e = t.device;
          e.save(), e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * xe.RC), e.beginPath();
          var r = 0, a = 0;
          this.get_width() / 2;
          for (var s = Math.PI * 2 / 5, l = !0, h = 0; h < 5; h++) {
            var u = h * s - Math.PI / 2;
            l ? (l = !1, e.moveTo(r + Math.cos(u) * (this.get_width() / 2), a + Math.sin(u) * (this.get_height() / 2))) : e.lineTo(r + Math.cos(u) * (this.get_width() / 2), a + Math.sin(u) * (this.get_height() / 2));
            var _ = h * s + s / 2 - Math.PI / 2;
            e.lineTo(r + Math.cos(_) * (this.get_width() / 5.3), a + Math.sin(_) * (this.get_height() / 5.3));
          }
          e.closePath(), e.lineWidth = 0, e.fillStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.fill(), e.restore();
        },
        _drawArrowGeometry$1: function(t) {
          var e = t.device;
          e.save(), e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * xe.RC), e.beginPath(), e.moveTo(-(this.get_width() / 2), -(this.get_height() / 4)), e.lineTo(this.get_width() / 4, -(this.get_height() / 4)), e.lineTo(this.get_width() / 4, -(this.get_height() / 2)), e.lineTo(this.get_width() / 2, 0), e.lineTo(this.get_width() / 4, this.get_height() / 2), e.lineTo(this.get_width() / 4, this.get_height() / 4), e.lineTo(-(this.get_width() / 2), this.get_height() / 4), e.closePath(), e.lineWidth = 0, e.fillStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.fill(), e.restore();
        },
        _drawDonutGeometry$1: function(t) {
          var e = t.device;
          e.save(), e.translate(this.get_x(), this.get_y()), e.scale(1, this.get_height() / this.get_width()), e.rotate(this.get_rotationAngle() * xe.RC), e.beginPath(), e.arc(0, 0, this.get_width() / 2, 0, Math.PI * 2, !1), e.closePath(), e.lineWidth = 9, e.strokeStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.stroke(), e.restore();
        },
        _drawCircleGeometry$1: function(t) {
          var e = t.device;
          e.save(), e.scale(1, this.get_width() / this.get_height()), e.translate(this.get_x(), this.get_y()), e.rotate(this.get_rotationAngle() * xe.RC), e.beginPath(), e.arc(0, 0, this.get_width(), 0, Math.PI * 2, !1), e.closePath(), e.lineWidth = 0, e.fillStyle = this.get_color().toString(), e.globalAlpha = this.get_opacity(), e.fill(), e.restore();
        },
        cleanUpGeometry: function() {
          xe.prototype.cleanUpGeometry.call(this), this.cleanUp();
        },
        writeOverlayProperties: function(t) {
          t._writeStartElement("Shape"), t._writeAttributeString("ShapeType", Et.toXml("ShapeType", this._shapeType$1)), t._writeEndElement();
        },
        initializeFromXml: function(t) {
          var e = at.selectSingleNode(t, "Shape");
          this._shapeType$1 = Et.parse("ShapeType", e.attributes.getNamedItem("ShapeType").nodeValue);
        }
      };
      function zn() {
        this._audio$1 = null, this._audioReady$1 = !1, this._wantPlaying$1 = !1, this._volume$1 = 100, this._mute$1 = !1, this._position$1 = 0, this._trackType$1 = 0, xe.call(this), this.isDesignTimeOnly = !0;
      }
      zn.create = function(t, e) {
        var r = new zn();
        return r.set_owner(t), r._filename$1 = e.name, r.get_owner().get_owner().addCachedFile(e.name, e), r;
      };
      var R_ = {
        getTypeName: function() {
          return "TerraViewer.AudioOverlay";
        },
        get_mute: function() {
          return this._mute$1;
        },
        set_mute: function(t) {
          return this._mute$1 = t, this.set_volume(this.get_volume()), t;
        },
        get_volume: function() {
          return this._volume$1;
        },
        set_volume: function(t) {
          return this._volume$1 = t, this._audio$1 != null && (this._audio$1.volume = this._mute$1 ? 0 : this._volume$1 / 100), t;
        },
        addFilesToCabinet: function(t) {
          t.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
        },
        play: function() {
          this._audio$1 == null && this.prepMultimedia(), this._wantPlaying$1 = !0, this._audio$1 != null && this._audioReady$1 && (this._audio$1.play(), this.set_volume(this.get_volume()), this._audio$1.currentTime = this._position$1);
        },
        pause: function() {
          this._audio$1 == null && this.prepMultimedia(), this._wantPlaying$1 = !1, this._audio$1 != null && this._audioReady$1 && this._audio$1.pause();
        },
        stop: function() {
          this.pause();
        },
        seek: function(t) {
          this._position$1 = t, this._audio$1 == null && this.prepMultimedia(), this._audioReady$1 && (this._audio$1.duration < t ? this._audio$1.pause() : this._audio$1.currentTime = this._position$1);
        },
        prepMultimedia: function() {
          var t = this;
          if (this._audio$1 == null) {
            this._audio$1 = document.createElement("audio"), this._audio$1.addEventListener("canplaythrough", function() {
              t._audioReady$1 || (t._audioReady$1 = !0, t._wantPlaying$1 && t.play());
            }, !1);
            var e = document.createElement("source");
            this._audio$1.appendChild(e), e.src = this.get_owner().get_owner().getFileStream(this._filename$1), e.type = "audio/mp3", this._audio$1.load();
          }
        },
        initializeTexture: function() {
          this.prepMultimedia();
        },
        cleanUp: function() {
          xe.prototype.cleanUp.call(this), this._wantPlaying$1 = !1, this._audio$1 != null && (this._audio$1.pause(), this._audio$1.src = null, this._audio$1 = null);
        },
        get_trackType: function() {
          return this._trackType$1;
        },
        set_trackType: function(t) {
          return this._trackType$1 = t, t;
        },
        writeOverlayProperties: function(t) {
          t._writeStartElement("Audio"), t._writeAttributeString("Filename", this._filename$1), t._writeAttributeString("Volume", this._volume$1.toString()), t._writeAttributeString("Mute", this._mute$1.toString()), t._writeAttributeString("TrackType", Et.toXml("AudioType", this._trackType$1)), t._writeEndElement();
        },
        initializeFromXml: function(t) {
          var e = at.selectSingleNode(t, "Audio");
          this._filename$1 = e.attributes.getNamedItem("Filename").nodeValue, e.attributes.getNamedItem("Volume") != null && (this._volume$1 = parseInt(e.attributes.getNamedItem("Volume").nodeValue)), e.attributes.getNamedItem("Mute") != null && (this._mute$1 = n.boolean(e.attributes.getNamedItem("Mute").nodeValue)), e.attributes.getNamedItem("TrackType") != null && (this._trackType$1 = Et.parse("AudioType", e.attributes.getNamedItem("TrackType").nodeValue));
        }
      };
      function bn() {
        this._loopType$1 = 1, this._startFrame$1 = 0, this._framesList$1 = [], this._frames$1 = 1, this._framesX$1 = 8, this._framesY$1 = 8, this._textureReady$1 = !1, this._currentFrame$1 = 0, this._cellHeight$1 = 256, this._cellWidth$1 = 256, this._timeStart$1 = n.now(), this._playing$1 = !0, xe.call(this);
      }
      var E_ = {
        getTypeName: function() {
          return "TerraViewer.FlipbookOverlay";
        },
        get_loopType: function() {
          return this._loopType$1;
        },
        set_loopType: function(t) {
          return this._loopType$1 = t, t;
        },
        get_startFrame: function() {
          return this._startFrame$1;
        },
        set_startFrame: function(t) {
          return this._startFrame$1 = t, t;
        },
        get_frameSequence: function() {
          return this._frameSequence$1;
        },
        set_frameSequence: function(t) {
          if (this._frameSequence$1 !== t && (this._frameSequence$1 = t, this._framesList$1 = [], !n.emptyString(this._frameSequence$1)))
            try {
              for (var e = this._frameSequence$1.split(","), r = n.enumerate(e); r.moveNext(); ) {
                var a = r.current, s = parseInt(n.trim(a));
                this._framesList$1.push(s);
              }
            } catch {
            }
          return t;
        },
        get_frames: function() {
          return this._frames$1;
        },
        set_frames: function(t) {
          return this._frames$1 = t, t;
        },
        get_framesX: function() {
          return this._framesX$1;
        },
        set_framesX: function(t) {
          return this._framesX$1 = t, t;
        },
        get_framesY: function() {
          return this._framesY$1;
        },
        set_framesY: function(t) {
          return this._framesY$1 = t, t;
        },
        copy: function(t) {
          var e = new bn();
          return e.set_owner(t), e._filename$1 = this._filename$1, e.set_x(this.get_x()), e.set_y(this.get_y()), e.set_width(this.get_width()), e.set_height(this.get_height()), e.set_color(this.get_color()), e.set_opacity(this.get_opacity()), e.set_rotationAngle(this.get_rotationAngle()), e.set_name(this.get_name() + " - Copy"), e.set_startFrame(this.get_startFrame()), e.set_frames(this.get_frames()), e.set_loopType(this.get_loopType()), e.set_frameSequence(this.get_frameSequence()), e.set_framesX(this.get_framesX()), e.set_framesY(this.get_framesY()), e;
        },
        cleanUp: function() {
          this.texture = null;
        },
        initializeTexture: function() {
          var t = this;
          try {
            var e = n.endsWith(this._filename$1.toLowerCase(), ".jpg");
            this.texture = this.get_owner().get_owner().getCachedTexture(this._filename$1, function() {
              t._textureReady$1 = !0;
            });
          } catch {
          }
        },
        addFilesToCabinet: function(t) {
          t.addFile(this.get_owner().get_owner().get_workingDirectory() + this._filename$1, this.get_owner().get_owner().getFileBlob(this._filename$1));
        },
        writeOverlayProperties: function(t) {
          t._writeStartElement("Flipbook"), t._writeAttributeString("Filename", this._filename$1), t._writeAttributeString("Frames", this._frames$1.toString()), t._writeAttributeString("Loop", Et.toXml("LoopTypes", this._loopType$1)), t._writeAttributeString("FramesX", this._framesX$1.toString()), t._writeAttributeString("FramesY", this._framesY$1.toString()), t._writeAttributeString("StartFrame", this._startFrame$1.toString()), n.emptyString(this._frameSequence$1) || t._writeAttributeString("FrameSequence", this._frameSequence$1), t._writeEndElement();
        },
        initializeFromXml: function(t) {
          var e = at.selectSingleNode(t, "Flipbook");
          this._filename$1 = e.attributes.getNamedItem("Filename").nodeValue, this._frames$1 = parseInt(e.attributes.getNamedItem("Frames").nodeValue), this._loopType$1 = Et.parse("LoopTypes", e.attributes.getNamedItem("Loop").nodeValue), e.attributes.getNamedItem("FramesX") != null && this.set_framesX(parseInt(e.attributes.getNamedItem("FramesX").nodeValue)), e.attributes.getNamedItem("FramesY") != null && this.set_framesY(parseInt(e.attributes.getNamedItem("FramesY").nodeValue)), e.attributes.getNamedItem("StartFrame") != null && this.set_startFrame(parseInt(e.attributes.getNamedItem("StartFrame").nodeValue)), e.attributes.getNamedItem("FrameSequence") != null && this.set_frameSequence(e.attributes.getNamedItem("FrameSequence").nodeValue);
        },
        play: function() {
          this._playing$1 = !0, this._timeStart$1 = n.now();
        },
        pause: function() {
          this._playing$1 = !1;
        },
        stop: function() {
          this._playing$1 = !1, this._currentFrame$1 = 0;
        },
        initializeGeometry: function() {
          var t = this._frames$1;
          if (n.emptyString(this._frameSequence$1) || (t = this._framesList$1.length), this._playing$1) {
            var e = n.now() - this._timeStart$1;
            switch (this._loopType$1) {
              case 0:
                this._currentFrame$1 = n.truncate(e / 1e3 * 24 % t) + this._startFrame$1;
                break;
              case 1:
                this._currentFrame$1 = Math.abs(n.truncate((e / 1e3 * 24 + t) % (t * 2 - 1)) - (t - 1)) + this._startFrame$1, this._currentFrame$1 < 0 || this._currentFrame$1 > t - 1;
                break;
              case 2:
                this._currentFrame$1 = Math.max(0, t - n.truncate(e / 1e3 * 24 % t)) + this._startFrame$1;
                break;
              case 3:
                var r = Math.min(e / 1e3 * 24, t * 2 + 1) + t;
                this._currentFrame$1 = Math.abs(r % (t * 2 - 1) - (t - 1)) + this._startFrame$1;
                break;
              case 4:
                this._currentFrame$1 = Math.min(t - 1, n.truncate(e / 1e3 * 24));
                break;
              case 5:
                this._currentFrame$1 = this._startFrame$1;
                break;
              case 6:
                this._currentFrame$1 = t - 1 + this._startFrame$1;
                break;
              default:
                this._currentFrame$1 = this._startFrame$1;
                break;
            }
          }
          n.emptyString(this._frameSequence$1) || (this._currentFrame$1 < this._framesList$1.length && this._currentFrame$1 > -1 ? this._currentFrame$1 = this._framesList$1[this._currentFrame$1] : this._currentFrame$1 = 0), this.currentRotation = 0;
        }
      };
      function yi() {
        ht.call(this), this.name = "--------------------------------------";
      }
      var D_ = {};
      function Vs() {
        Lr.call(this);
      }
      var N_ = {
        OK: function(t) {
          T.referenceFrameWizardFinished(t);
        }
      };
      function Os() {
        Lr.call(this);
      }
      var F_ = {
        OK: function(t) {
          T.loadTree();
        }
      };
      function Us() {
        Lr.call(this);
      }
      var z_ = {
        OK: function(t) {
        }
      };
      function Gs() {
        Lr.call(this);
      }
      var B_ = {
        OK: function() {
        }
      };
      function Hs(t, e, r) {
        bi.call(this, t, e, null, r);
      }
      var V_ = {
        readDataUnitFloat64: function(t) {
          for (var e = 0; this.position < t.byteLength; )
            this.dataUnit[e] = t.getFloat64(this.position, !1), e++, this.position += 8;
        },
        readDataUnitFloat32: function(t) {
          for (var e = 0; this.position < t.byteLength; )
            this.dataUnit[e] = t.getFloat32(this.position, !1), e++, this.position += 4;
        },
        readDataUnitUint8: function(t) {
          for (var e = 0; this.position < t.byteLength; )
            this.dataUnit[e] = t.getUint8(this.position), e++, this.position += 1;
        },
        readDataUnitInt16: function(t) {
          for (var e = 0; this.position < t.byteLength; )
            this.dataUnit[e] = t.getInt16(this.position, !1), e++, this.position += 2;
        },
        readDataUnitInt32: function(t) {
          for (var e = 0; this.position < t.byteLength; )
            this.dataUnit[e] = t.getInt32(this.position, !1), e++, this.position += 4;
        },
        computeWcs: function() {
        }
      };
      function nr(t, e, r, a) {
        this.dataType = 5, this._color$2 = !1, this.isTiledFits = !1, bi.call(this, t, e, r, a);
      }
      nr.createTiledFits = function(t, e, r) {
        var a = new nr(t, e, null, r);
        return a.isTiledFits = !0, a;
      };
      var O_ = {
        readFromBin: function(t) {
          bi.prototype.readFromBin.call(this, t), this.numAxis === 3 && this.axisSize[2] === 3 && (this._color$2 = !0);
        },
        readDataUnit: function(t, e) {
          var r = new Kr(new Uint8Array(t.buffer));
          switch (r.position = this.position, e) {
            case -64:
              this.dataType = 4, this._readDataUnitFloat64$2(r);
              break;
            case -32:
              this.dataType = 3, this._readDataUnitFloat32$2(r);
              break;
            case 8:
              this.dataType = 0, this._readDataUnitUint8$2(r);
              break;
            case 16:
              this.dataType = 1, this._readDataUnitInt16$2(r);
              break;
            case 32:
              this.dataType = 2, this._readDataUnitInt32$2(r);
              break;
          }
          this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal;
        },
        _readDataUnitUint8$2: function(t) {
          var e = new Array(this.bufferSize);
          this._dataBuffer$2 = e;
          for (var r = 0; r < this.bufferSize; r++)
            e[r] = t.readByte(), this.fitsProperties.minVal > e[r] && (this.fitsProperties.minVal = e[r]), this.fitsProperties.maxVal < e[r] && (this.fitsProperties.maxVal = e[r]);
        },
        _readDataUnitInt16$2: function(t) {
          var e = new Array(this.bufferSize);
          this._dataBuffer$2 = e;
          for (var r = 0; r < this.bufferSize; r++)
            e[r] = t.readSByte() * 256 + t.readByte(), this.fitsProperties.minVal > e[r] && (this.fitsProperties.minVal = e[r]), this.fitsProperties.maxVal < e[r] && (this.fitsProperties.maxVal = e[r]);
        },
        _readDataUnitInt32$2: function(t) {
          var e = new Array(this.bufferSize);
          this._dataBuffer$2 = e;
          for (var r = 0; r < this.bufferSize; r++)
            e[r] = (t.readSByte() << 24) + (t.readSByte() << 16) + (t.readSByte() << 8) + t.readByte(), this.fitsProperties.minVal > e[r] && (this.fitsProperties.minVal = e[r]), this.fitsProperties.maxVal < e[r] && (this.fitsProperties.maxVal = e[r]);
        },
        _readDataUnitFloat32$2: function(t) {
          var e = new Array(this.bufferSize);
          this._dataBuffer$2 = e;
          for (var r = new Uint8Array(4), a = 0; a < this.bufferSize; a++)
            r[3] = t.readByte(), r[2] = t.readByte(), r[1] = t.readByte(), r[0] = t.readByte(), e[a] = new Float32Array(r.buffer, 0, 1)[0], this.fitsProperties.minVal > e[a] && (this.fitsProperties.minVal = e[a]), this.fitsProperties.maxVal < e[a] && (this.fitsProperties.maxVal = e[a]);
        },
        _readDataUnitFloat64$2: function(t) {
          var e = new Array(this.bufferSize), r = new Uint8Array(8);
          this._dataBuffer$2 = e;
          for (var a = 0; a < this.bufferSize; a++)
            r[7] = t.readByte(), r[6] = t.readByte(), r[5] = t.readByte(), r[4] = t.readByte(), r[3] = t.readByte(), r[2] = t.readByte(), r[1] = t.readByte(), r[0] = t.readByte(), e[a] = new Float64Array(r.buffer, 0, 1)[0], this.fitsProperties.minVal > e[a] && (this.fitsProperties.minVal = e[a]), this.fitsProperties.maxVal < e[a] && (this.fitsProperties.maxVal = e[a]);
        },
        getBitmap: function() {
          return !this.fitsProperties.upperCut && !this.fitsProperties.lowerCut && (this.fitsProperties.lowerCut = this.fitsProperties.minVal, this.fitsProperties.upperCut = this.fitsProperties.maxVal), this.getScaledBitmap(this.fitsProperties.lowerCut, this.fitsProperties.upperCut, this.fitsProperties.scaleType, 0, this.fitsProperties.colorMapName);
        },
        getScaledBitmap: function(t, e, r, a, s) {
          var l;
          this.fitsProperties.scaleType = r, this.fitsProperties.lowerCut = t, this.fitsProperties.upperCut = e, this.fitsProperties.colorMapName = s;
          var h = Ft.fromNamedColormap(s);
          switch (r) {
            case 0:
            default:
              l = new Rs(t, e);
              break;
            case 1:
              l = new Es(t, e);
              break;
            case 2:
              l = new Ds(t, e);
              break;
            case 3:
              l = new Ns(t, e);
              break;
            case 4:
              l = new Fs(this, t, e);
              break;
          }
          try {
            switch (this.dataType) {
              case 0:
                return this._getBitmapByte$2(t, e, l, 0, h);
              case 1:
                return this.getBitmapShort(t, e, l, 0, h);
              case 2:
                return this._getBitmapInt$2(t, e, l, 0, h);
              case 3:
                return this._getBitmapFloat$2(t, e, l, 0, h);
              case 4:
                return this._getBitmapDouble$2(t, e, l, 0, h);
              case 5:
              default:
                return mr.create(100, 100);
            }
          } catch {
            return mr.create(10, 10);
          }
        },
        _setPixelWithColorMap$2: function(t, e, r, a, s) {
          if (s == null) {
            t.setPixel(e, r, a, a, a, this.fitsProperties.transparentBlack && !a ? 0 : 255);
            return;
          }
          var l = a / 255;
          if (l !== l) {
            t.setPixel(e, r, 0, 0, 0, 0);
            return;
          }
          var h = s.findClosestColor(l);
          t.setPixel(e, r, n.truncate(h.r), n.truncate(h.g), n.truncate(h.b), this.fitsProperties.transparentBlack && !a ? 0 : 255);
        },
        _getBitmapByte$2: function(t, e, r, a, s) {
          for (var l = this._dataBuffer$2, h = this.axisSize[0], u = this.axisSize[0] * this.axisSize[1] * a, _ = mr.create(this.axisSize[0], this.axisSize[1]), m = 0; m < this.axisSize[1]; m++)
            for (var p = this.axisSize[1] - 1 - m, b = 0; b < this.axisSize[0]; b++)
              if (this._color$2) {
                var S = l[b + p * h], x = l[b + p * h + u], k = l[b + p * h + u * 2];
                if (this.fitsProperties.containsBlanks && S === this.fitsProperties.blankValue)
                  _.setPixel(b, m, 0, 0, 0, 0);
                else {
                  var P = r.map(S), I = r.map(x), D = r.map(k);
                  _.setPixel(b, m, P, I, D, 255);
                }
              } else {
                var G = l[b + p * h + u];
                if (this.fitsProperties.containsBlanks && G === this.fitsProperties.blankValue)
                  _.setPixel(b, m, 0, 0, 0, 0);
                else {
                  var U = r.map(G);
                  this._setPixelWithColorMap$2(_, b, m, U, s);
                }
              }
          return _;
        },
        _getBitmapDouble$2: function(t, e, r, a, s) {
          for (var l = this._dataBuffer$2, h = this.axisSize[0], u = this.axisSize[0] * this.axisSize[1] * a, _ = mr.create(this.axisSize[0], this.axisSize[1]), m = 0; m < this.axisSize[1]; m++)
            for (var p = this.axisSize[1] - 1 - m, b = 0; b < this.axisSize[0]; b++)
              if (this._color$2) {
                var S = l[b + p * h], x = l[b + p * h + u], k = l[b + p * h + u * 2];
                if (this.fitsProperties.containsBlanks && S === this.fitsProperties.blankValue)
                  _.setPixel(b, m, 0, 0, 0, 0);
                else {
                  var P = r.map(S), I = r.map(x), D = r.map(k);
                  _.setPixel(b, m, P, I, D, 255);
                }
              } else {
                var G = l[b + p * h + u];
                if (this.fitsProperties.containsBlanks && G === this.fitsProperties.blankValue)
                  _.setPixel(b, m, 0, 0, 0, 0);
                else {
                  var U = r.map(G);
                  this._setPixelWithColorMap$2(_, b, m, U, s);
                }
              }
          return _;
        },
        _getBitmapFloat$2: function(t, e, r, a, s) {
          for (var l = this._dataBuffer$2, h = this.axisSize[0], u = this.axisSize[0] * this.axisSize[1] * a, _ = mr.create(this.axisSize[0], this.axisSize[1]), m = 0; m < this.axisSize[1]; m++)
            for (var p = this.axisSize[1] - 1 - m, b = 0; b < this.axisSize[0]; b++)
              if (this._color$2) {
                var S = l[b + p * h], x = l[b + p * h + u], k = l[b + p * h + u * 2];
                if (this.fitsProperties.containsBlanks && S === this.fitsProperties.blankValue)
                  _.setPixel(b, m, 0, 0, 0, 0);
                else {
                  var P = r.map(S), I = r.map(x), D = r.map(k);
                  _.setPixel(b, m, P, I, D, 255);
                }
              } else {
                var G = l[b + p * h + u];
                if (this.fitsProperties.containsBlanks && G === this.fitsProperties.blankValue)
                  _.setPixel(b, m, 0, 0, 0, 0);
                else {
                  var U = r.map(G);
                  this._setPixelWithColorMap$2(_, b, m, U, s);
                }
              }
          return _;
        },
        _getBitmapInt$2: function(t, e, r, a, s) {
          for (var l = this._dataBuffer$2, h = this.axisSize[0], u = this.axisSize[0] * this.axisSize[1] * a, _ = mr.create(this.axisSize[0], this.axisSize[1]), m = 0; m < this.axisSize[1]; m++)
            for (var p = this.axisSize[1] - 1 - m, b = 0; b < this.axisSize[0]; b++)
              if (this._color$2) {
                var S = l[b + p * h], x = l[b + p * h + u], k = l[b + p * h + u * 2];
                if (this.fitsProperties.containsBlanks && S === this.fitsProperties.blankValue)
                  _.setPixel(b, m, 0, 0, 0, 0);
                else {
                  var P = r.map(S), I = r.map(x), D = r.map(k);
                  _.setPixel(b, m, P, I, D, 255);
                }
              } else {
                var G = l[b + p * h + u];
                if (this.fitsProperties.containsBlanks && G === this.fitsProperties.blankValue)
                  _.setPixel(b, m, 0, 0, 0, 0);
                else {
                  var U = r.map(G);
                  this._setPixelWithColorMap$2(_, b, m, U, s);
                }
              }
          return _;
        },
        getBitmapShort: function(t, e, r, a, s) {
          for (var l = this._dataBuffer$2, h = this.axisSize[0], u = this.axisSize[0] * this.axisSize[1] * a, _ = mr.create(this.axisSize[0], this.axisSize[1]), m = 0; m < this.axisSize[1]; m++)
            for (var p = this.axisSize[1] - 1 - m, b = 0; b < this.axisSize[0]; b++)
              if (this._color$2) {
                var S = l[b + p * h], x = l[b + p * h + u], k = l[b + p * h + u * 2];
                if (this.fitsProperties.containsBlanks && S === this.fitsProperties.blankValue)
                  _.setPixel(b, m, 0, 0, 0, 0);
                else {
                  var P = r.map(S), I = r.map(x), D = r.map(k);
                  _.setPixel(b, m, P, I, D, 255);
                }
              } else {
                var G = l[b + p * h + u];
                if (this.fitsProperties.containsBlanks && G === this.fitsProperties.blankValue)
                  _.setPixel(b, m, 0, 0, 0, 0);
                else {
                  var U = r.map(G);
                  this._setPixelWithColorMap$2(_, b, m, U, s);
                }
              }
          return _;
        },
        computeWcs: function() {
          this.isTiledFits || bi.prototype.computeWcs.call(this);
        },
        populateHistogram: function(t) {
          switch (this.dataType) {
            case 0:
              this._populateHistogramByte$2(t);
              break;
            case 1:
              this._populateHistogramInt16$2(t);
              break;
            case 2:
              this._populateHistogramInt32$2(t);
              break;
            case 3:
              this._populateHistogramFloat$2(t);
              break;
            case 4:
              this._populateHistogramDouble$2(t);
              break;
          }
        },
        _populateHistogramDouble$2: function(t) {
          for (var e = t.length, r = this._dataBuffer$2, a = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, s = n.enumerate(r); s.moveNext(); ) {
            var l = s.current;
            l !== Number.NaN && t[Math.min(e - 1, n.truncate((l - this.fitsProperties.minVal) / a))]++;
          }
        },
        _populateHistogramFloat$2: function(t) {
          for (var e = t.length, r = this._dataBuffer$2, a = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, s = n.enumerate(r); s.moveNext(); ) {
            var l = s.current;
            l !== bi.naN && t[Math.min(e - 1, n.truncate((l - this.fitsProperties.minVal) / a))]++;
          }
        },
        _populateHistogramInt32$2: function(t) {
          for (var e = t.length, r = this._dataBuffer$2, a = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, s = n.enumerate(r); s.moveNext(); ) {
            var l = s.current;
            t[Math.min(e - 1, n.truncate((l - this.fitsProperties.minVal) / a))]++;
          }
        },
        _populateHistogramInt16$2: function(t) {
          for (var e = t.length, r = this._dataBuffer$2, a = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, s = n.enumerate(r); s.moveNext(); ) {
            var l = s.current;
            t[Math.min(e - 1, n.truncate((l - this.fitsProperties.minVal) / a))]++;
          }
        },
        _populateHistogramByte$2: function(t) {
          for (var e = t.length, r = this._dataBuffer$2, a = (this.fitsProperties.maxVal - this.fitsProperties.minVal) / e, s = n.enumerate(r); s.moveNext(); ) {
            var l = s.current;
            t[Math.min(e - 1, n.truncate((l - this.fitsProperties.minVal) / a))]++;
          }
        }
      };
      function mi() {
        Zt.call(this), this.id = mi.issGuid;
      }
      mi.loadBackground = function() {
        if (!(mi._loading$2 || V.singleton.freestandingMode)) {
          mi._loading$2 = !0;
          var t = Kt.singleton.coreStaticUrl("data/iss.wtt");
          mi._doc$2 = ir.fromUrlRaw(t, function() {
            mi.createSpaceStation();
          });
        }
      }, mi.createSpaceStation = function() {
        mi._doc$2.set_id("28016047-97a9-4b33-a226-cd820262a151");
        var t = "0c10ae54-b6da-4282-bfda-f34562d403bc.3ds", e = new Ti(mi._doc$2, t, !0, !1, !0, ot.get_white());
        e != null && (e.issLayer = !0, mi._issmodel$2 = e);
      };
      var U_ = {
        draw: function(t, e, r) {
          if (this.object3d == null && mi._issmodel$2 == null && !mi._loading$2) {
            var a = H.multiplyMatrix(t.get_world(), t.get_view()), s = a.transform(L.get_empty()), l = Math.sqrt(a.get_m11() * a.get_m11() + a.get_m22() * a.get_m22() + a.get_m33() * a.get_m33()), h = s.length(), u = l, _ = n.truncate(t.height), m = t.get_projection().get_m11(), p = t.get_projection().get_m34(), b = t.get_projection().get_m44(), S = Math.abs(p) * h + b, x = m / S * _, k = u * x;
            k > 0.5 && mi.loadBackground();
          }
          return this.object3d = mi._issmodel$2, Zt.prototype.draw.call(this, t, e, r);
        },
        getPrimaryUI: function() {
          return null;
        },
        addFilesToCabinet: function(t) {
        },
        loadData: function(t, e) {
        },
        cleanUp: function() {
        }
      };
      function Xa() {
        this._addedTiles$2 = {}, ei.call(this);
      }
      var G_ = {
        addTileRows: function(t, e) {
          if (!n.keyExists(this._addedTiles$2, t)) {
            for (var r = n.enumerate(e); r.moveNext(); ) {
              var a = r.current;
              this.get__table().rows.push(a);
            }
            this.dirty = !0, this._addedTiles$2[t] = !0;
          }
        },
        removeTileRows: function(t, e) {
          if (n.keyExists(this._addedTiles$2, t)) {
            for (var r = n.enumerate(e); r.moveNext(); ) {
              var a = r.current;
              n.remove(this.get__table().rows, a);
            }
            this.dirty = !0, delete this._addedTiles$2[t];
          }
        },
        cleanUp: function() {
          ei.prototype.cleanUp.call(this), n.clearKeys(this._addedTiles$2), this.get__table().rows.length = 0;
        }
      };
      function Xs(t) {
        n.EventArgs.call(this), this.set_caption(t);
      }
      var H_ = {
        get_caption: function() {
          return this._caption$2;
        },
        set_caption: function(t) {
          return this._caption$2 = t, t;
        }
      };
      function qa(t, e, r) {
        this._ra$2 = 0, this._dec$2 = 0, this._zoom$2 = 0, n.EventArgs.call(this), this.set_RA(t * 15), this.set_dec(e), this.set_zoom(r / 6);
      }
      var X_ = {
        get_RA: function() {
          return this._ra$2;
        },
        set_RA: function(t) {
          return this._ra$2 = t, t;
        },
        get_dec: function() {
          return this._dec$2;
        },
        set_dec: function(t) {
          return this._dec$2 = t, t;
        },
        get_zoom: function() {
          return this._zoom$2;
        },
        set_zoom: function(t) {
          return this._zoom$2 = t, t;
        }
      };
      function qs(t, e, r) {
        this._ra$2 = 0, this._dec$2 = 0, n.EventArgs.call(this), this.set_RA(t * 15), this.set_dec(e), this.set_id(r);
      }
      var q_ = {
        get_RA: function() {
          return this._ra$2;
        },
        set_RA: function(t) {
          return this._ra$2 = t, t;
        },
        get_dec: function() {
          return this._dec$2;
        },
        set_dec: function(t) {
          return this._dec$2 = t, t;
        },
        get_id: function() {
          return this._id$2;
        },
        set_id: function(t) {
          return this._id$2 = t, t;
        }
      };
      function Ys(t) {
        n.EventArgs.call(this), this._url$2 = t;
      }
      var Y_ = {
        get_url: function() {
          return this._url$2;
        },
        set_url: function(t) {
          return this._url$2 = t, t;
        }
      };
      function Zs(t, e, r, a, s) {
        this.pixelCenterX = 0, this.pixelCenterY = 0, this.scaleX = 0.01, this.scaleY = 0.01, this.height = 0, this.width = 0, sa.call(this, t, e, r, a, s), this.pixelCenterX = a.get_offsetX(), this.pixelCenterY = a.get_offsetY(), this.scaleX = -(this.scaleY = a.get_baseTileDegrees()), a.get_bottomsUp() && (this.scaleX = -this.scaleX), this.sphereCenter = this.geoTo3dTan(0, 0), this.radius = 1.25, this.computeBoundingSphere();
      }
      var Z_ = {
        getLatLngEdges: function() {
          var t = new Da(), e = n.safeCast(this.dataset.get_wcsImage(), Kn);
          return e != null && fe.useGl ? fe.useGlVersion2 ? (this.width = e.get_sizeX(), this.height = e.get_sizeY()) : (this.height = this.bmp.height, this.width = this.bmp.width, this.bmp.height !== e.get_sizeY() && (this.pixelCenterY += this.bmp.height - e.get_sizeY())) : this.texture != null ? (this.height = this.texture.naturalHeight, this.width = this.texture.naturalWidth) : (this.height = 256, this.width = 256), t.latMin = 0 + this.scaleY * (this.height - this.pixelCenterY), t.latMax = 0 - this.scaleY * this.pixelCenterY, t.lngMin = 0 + this.scaleX * this.pixelCenterX, t.lngMax = 0 - this.scaleX * (this.width - this.pixelCenterX), t;
        }
      }, j_ = n.module(
        "wwtlib",
        {
          IFolder: [so],
          Sprite2d: [Hr, Pu, null],
          ViewMoverSlew: [gr, zu, null, fa],
          VertexPosition: [Ia, rh, null],
          MainView: [ws, null, null],
          MinorPlanets: [ee, ph, null],
          TileCache: [vt, Fh, null],
          DistanceCalc: [xr, zh, null],
          Triangle: [Ae, cc, null],
          PositionTextureVertexBuffer: [wn, t_, vi],
          KeplerVertexBuffer: [ia, r_, vi],
          TimeSeriesLineVertexBuffer: [ra, n_, vi],
          TimeSeriesPointVertexBuffer: [$s, a_, vi],
          PositionColoredVertexBuffer: [Ps, s_, vi],
          PositionColoredTexturedVertexBuffer: [o_, l_, vi],
          LayerCollection: [p_, v_, we]
        },
        {
          DAY_OF_WEEK: d,
          EO: g,
          ScaleTypes: v,
          URLRewriteMode: C,
          SolarSystemObjects: M,
          InterpolationType: $,
          PointType: N,
          LocationHint: et,
          FolderGroup: E,
          FolderRefreshType: X,
          FolderType: Pt,
          ThumbnailSize: wt,
          CullMode: gt,
          PointScaleTypes: Ot,
          ProjectionType: qt,
          ImageSetType: de,
          BandPass: Jt,
          Classification: De,
          DataTypes: Be,
          AltUnits: he,
          FadeType: Rt,
          ReferenceFrames: Pe,
          ReferenceFrameTypes: ke,
          CoordinatesTypes: ce,
          AltTypes: Ne,
          MarkerMixes: ii,
          ColorMaps: ge,
          PlotTypes: Xi,
          MarkerScales: rn,
          RAUnits: nn,
          Primitives: Un,
          Alignment: Gn,
          StockSkyOverlayTypes: an,
          OverlayAnchor: sn,
          AudioType: js,
          ShapeType: Ks,
          LoopTypes: Js,
          SelectionAnchor: Ws,
          TextBorderStyle: Qs,
          UserLevel: to,
          TransitionType: eo,
          Keys: io,
          DialogResult: ro,
          Formatting: no,
          StateType: ao,
          IThumbnail: [on],
          IPlace: [Ja],
          IUiController: [ln],
          IViewMover: [fa],
          IUIServicesCallbacks: [oo],
          ISettings: [ga],
          IUndoStep: [Cn],
          Imports: [lo, null, null],
          GFX: [w, null, null],
          ABR: [un, uo, null],
          ACFT: [Se, ho, null],
          ASEP: [Hn, co, null],
          COR: [pi, _o, null],
          C3D: [Pi, fo, null],
          CT: [y, go, null],
          CalD: [da, mo, null],
          DT: [Ve, po, null],
          DYT: [ma, vo, null],
          CAAEarth: [pe, wo, null],
          VSC: [o, bo, null],
          CAAEclipticalElementDetails: [pa, yo, null],
          CAAEclipticalElements: [va, So, null],
          EPO: [Ct, Co, null],
          EOE: [Mn, Mo, null],
          EPD: [wa, To, null],
          EOD: [Wa, xo, null],
          ELL: [Fe, Lo, null],
          EOT: [Qa, Ao, null],
          CAAFK5: [Ii, ko, null],
          GMD: [Tn, Io, null],
          GMDS: [ba, $o, null],
          GM: [We, Po, null],
          CAAGlobe: [Ji, Ro, null],
          IFR: [ni, Eo, null],
          INTP: [Vi, Do, null],
          CAAJupiter: [ai, No, null],
          CAAKepler: [Or, Fo, null],
          CAAMars: [qi, zo, null],
          CAAMercury: [sr, Bo, null],
          CAAMoon: [Re, Vo, null],
          MoonCoefficient1: [ut, Oo, null],
          MoonCoefficient2: [zt, Uo, null],
          MIFR: [hn, Go, null],
          CAAMoonNodes: [ya, Ho, null],
          CAAMoonPerigeeApogee: [Wi, Xo, null],
          MPAC: [it, qo, null],
          CAAMoonPhases: [xn, Yo, null],
          CAANeptune: [or, Zo, null],
          CAANutation: [Ie, jo, null],
          NUC: [Nt, Ko, null],
          CAATopocentricEclipticDetails: [ts, Jo, null],
          CAAParallax: [Sr, Wo, null],
          CAAPhysicalJupiterDetails: [Sa, Qo, null],
          CAAPhysicalJupiter: [Ca, tl, null],
          CAAPhysicalMarsDetails: [es, el, null],
          CAAPhysicalMars: [is, il, null],
          CAAPhysicalSunDetails: [rs, rl, null],
          CAAPhysicalSun: [Ma, nl, null],
          CAAPluto: [lr, al, null],
          PlutoCoefficient1: [_e, sl, null],
          PlutoCoefficient2: [st, ol, null],
          CAAPrecession: [Ur, ll, null],
          CAARiseTransitSetDetails: [ns, ul, null],
          CAARiseTransitSet: [Ta, hl, null],
          CAASaturn: [Yi, cl, null],
          CAASaturnRingDetails: [as, _l, null],
          CAASaturnRings: [os, fl, null],
          CAASidereal: [Pr, gl, null],
          CAAStellarMagnitudes: [Ln, dl, null],
          CAASun: [Ce, ml, null],
          CAAUranus: [ur, pl, null],
          CAAVenus: [hr, vl, null],
          FitsProperties: [ls, wl, null],
          HipsProperties: [Xn, bl, null],
          FastMath: [jt, yl, null],
          HealpixTables: [Qi, Sl, null],
          Xyf: [An, Cl, null],
          HealpixUtils: [cr, Ml, null],
          Hploc: [kn, Tl, null],
          Pointing: [xa, xl, null],
          URLHelpers: [Kt, Ll, null],
          Annotation: [Dt, Al, null],
          AstroRaDec: [Gr, kl, null],
          RiseSetDetails: [us, Il, null],
          AstroCalc: [$t, $l, null],
          BlendState: [Cr, Pl, null],
          CameraParameters: [Me, Rl, null],
          Color: [B, El, null],
          Colors: [ot, Dl, null],
          Constellations: [pt, Nl, null],
          Lineset: [La, Fl, null],
          Linepoint: [hs, zl, null],
          ConstellationFilter: [Ut, Bl, null],
          PositionTexture: [dt, Vl, null],
          PositionColoredTextured: [ne, Ol, null],
          PositionColored: [qn, Ul, null],
          PositionNormalTexturedTangent: [cs, Gl, null],
          Vector3d: [L, Hl, null],
          Vector2d: [lt, Xl, null],
          Matrix3d: [H, ql, null],
          Matrix2d: [Ge, Yl, null],
          DoubleUtilities: [Zi, null, null],
          PlaneD: [_s, Zl, null],
          Vector4d: [Yn, jl, null],
          PositionNormalTexturedX2: [_r, Kl, null],
          PositionNormalTextured: [Di, Jl, null],
          SphereHull: [cn, Wl, null],
          ConvexHull: [Rr, Ql, null],
          Folder: [Mr, tu, null, on],
          FolderBrowser: [Yt, eu, null],
          FolderUp: [Aa, iu, null, on],
          ShortIndexBuffer: [ru, nu, null],
          IndexBuffer: [fs, au, null, n.IDisposable],
          VertexBufferBase: [vi, su, null, n.IDisposable],
          Dates: [ve, ou, null],
          SimpleLineList: [fr, lu, null],
          OrbitLineList: [gs, uu, null],
          LineList: [_n, hu, null],
          TriangleList: [Er, cu, null],
          TriangleFanList: [ds, _u, null],
          PointList: [tr, fu, null],
          TimeSeriesLineVertex: [fn, gu, null],
          TimeSeriesPointVertex: [In, du, null],
          SimpleLineShader: [be, mu, null],
          SimpleLineShader2D: [ze, pu, null],
          OrbitLineShader: [ae, vu, null],
          LineShaderNormalDates: [Gt, wu, null],
          TimeSeriesPointSpriteShader: [Mt, bu, null],
          KeplerPointSpriteShader: [mt, yu, null],
          EllipseShader: [Ht, Su, null],
          ModelShader: [xt, Cu, null],
          ModelShaderTan: [It, Mu, null],
          TileShader: [St, Tu, null],
          FitsShader: [ft, xu, null],
          ImageShader: [Wt, Lu, null],
          ImageShader2: [te, Au, null],
          SpriteShader: [Qt, ku, null],
          ShapeSpriteShader: [se, Iu, null],
          TextShader: [oe, $u, null],
          Tessellator: [gn, Ru, null],
          Texture: [Te, Eu, null, n.IDisposable],
          Grids: [O, Du, null],
          Imageset: [He, Nu, null, on],
          ViewMoverKenBurnsStyle: [ka, Fu, null, fa],
          KeplerVertex: [Mi, Bu, null],
          ScaleMap: [er, Vu, null],
          ColorMapContainer: [Ft, Ou, null],
          Layer: [we, Uu, null],
          DomainValue: [Gu, Hu, null],
          LayerManager: [T, Xu, null],
          LayerMap: [Xe, qu, null],
          SkyOverlays: [ms, Yu, null],
          GroundOverlayLayer: [Zu, ju, null],
          FrameTarget: [ps, Ku, null],
          LayerUI: [Dr, Ju, null],
          LayerUIMenuItem: [Wu, Qu, null],
          LayerUITreeNode: [Zn, th, null],
          Group: [$n, eh, null],
          Mesh: [Nr, ih, null, n.IDisposable],
          Object3d: [Ti, nh, null],
          ObjectNode: [Xr, ah, null],
          Orbit: [dn, sh, null],
          EllipseRenderer: [hi, oh, null],
          ReferenceFrame: [ci, lh, null],
          KmlCoordinate: [$a, uh, null],
          KmlLineList: [Pa, hh, null],
          PushPin: [xi, ch, null],
          Table: [Pn, _h, null],
          VoTable: [qr, fh, null],
          VoRow: [vs, gh, null],
          VoColumn: [jn, dh, null],
          WcsImage: [Kn, mh, null],
          Place: [Li, vh, null, on, Ja],
          KeplerianElements: [bs, wh, null],
          BodyAngles: [_i, bh, null],
          Planets: [A, yh, null],
          Material: [Yr, Sh, null],
          InViewReturnMessage: [Ra, Ch, null],
          RenderContext: [fe, Mh, null],
          RenderTriangle: [Bt, Th, null],
          ScriptInterface: [dr, xh, null],
          Settings: [z, Lh, null, ga],
          Text3dBatch: [Tr, Ah, null],
          GlyphItem: [Zr, kh, null],
          GlyphCache: [Ni, Ih, null, n.IDisposable],
          Text3d: [wi, $h, null],
          SpaceTimeController: [Z, Ph, null],
          Star: [Ea, Rh, null],
          Galaxy: [mn, Eh, null],
          LatLngEdges: [Da, Dh, null],
          Tile: [F, Nh, null],
          Tour: [Rn, Bh, null, on],
          FileEntry: [Na, Vh, null],
          FileCabinet: [pn, Oh, null],
          SettingParameter: [En, Uh, null],
          Overlay: [xe, Gh, null],
          Selection: [Le, Hh, null],
          TextObject: [Fr, Xh, null],
          TourDocument: [ir, qh, null],
          TourEditTab: [ys, Yh, null],
          TourEditor: [Qe, Zh, null, ln],
          OverlayList: [ti, jh, null],
          TourEdit: [ji, Kh, null],
          SoundEditor: [Fa, Jh, null],
          TourStopList: [Ss, Wh, null],
          TimeLine: [Dn, Qh, null],
          TourPlayer: [ie, tc, null, ln],
          MasterTime: [Cs, ec, null],
          TourStop: [Fi, ic, null, ga],
          LayerInfo: [za, rc, null],
          UndoTourStopChange: [ye, nc, null, Cn],
          Undo: [Tt, ac, null],
          UndoStep: [sc, oc, null, Cn],
          UndoTourSlidelistChange: [jr, lc, null, Cn],
          UndoTourPropertiesChange: [uc, hc, null, Cn],
          UiTools: [Oe, _c, null],
          Util: [at, fc, null],
          Rectangle: [fi, gc, null],
          Guid: [di, dc, null],
          Enums: [Et, mc, null],
          Mouse: [Ye, null, null],
          Language: [tt, pc, null],
          Cursor: [Ke, vc, null],
          Cursors: [Ee, wc, null],
          SelectLink: [Ba, bc, null],
          PopupVolume: [Ms, yc, null],
          PopupColorPicker: [Sc, Cc, null],
          OverlayProperties: [Ts, Mc, null],
          BinaryReader: [Kr, Tc, null],
          Bitmap: [mr, xc, null],
          ColorPicker: [Va, Lc, null],
          ContextMenuStrip: [pr, Ac, null],
          ToolStripMenuItem: [ht, kc, null],
          TagMe: [Ic, $c, null],
          Dialog: [Lr, Pc, null],
          Histogram: [zr, Rc, null],
          SimpleInput: [Nn, Ec, null],
          XmlTextWriter: [Jr, Dc, null],
          VizLayer: [xs, Nc, null],
          DataItem: [Oa, Fc, null],
          WebFile: [Ai, zc, null],
          FolderDownloadAction: [Ls, Bc, null],
          Wtml: [vn, Vc, null],
          WWTControl: [V, Oc, null],
          WWTControlBuilder: [Uc, Gc, null],
          WWTElementEvent: [Ua, Hc, null],
          Coordinates: [R, Xc, null],
          Fxyf: [gi, qc, Qi],
          HealpixTile: [Jn, Yc, F],
          FitsImage: [bi, Zc, Kn],
          Circle: [As, jc, Dt],
          Poly: [ks, Kc, Dt],
          PolyLine: [Is, Jc, Dt],
          EquirectangularTile: [Wn, Wc, F],
          PositionVertexBuffer: [Qn, Qc, vi],
          PositionNormalTexturedVertexBuffer: [ta, e_, vi],
          PositionNormalTexturedTangentVertexBuffer: [ea, i_, vi],
          ScaleLinear: [Rs, u_, er],
          ScaleLog: [Es, h_, er],
          ScalePow: [Ds, c_, er],
          ScaleSqrt: [Ns, __, er],
          HistogramEqualization: [Fs, f_, er],
          GreatCirlceRouteLayer: [Fn, g_, we],
          GridLayer: [Ga, d_, we],
          ImageSetLayer: [si, m_, we],
          Object3dLayer: [Zt, w_, we, ln],
          Object3dLayerUI: [zs, b_, Dr],
          OrbitLayer: [Ha, y_, we],
          OrbitLayerUI: [Bs, S_, Dr],
          SpreadSheetLayer: [ei, C_, we],
          TimeSeriesLayer: [na, M_, we],
          VoTableLayer: [Oi, T_, we],
          MercatorTile: [le, x_, F],
          PlotTile: [aa, L_, F],
          TangentTile: [sa, A_, F],
          ToastTile: [Ze, k_, F],
          BitmapOverlay: [Wr, I_, xe],
          TextOverlay: [rr, $_, xe],
          ShapeOverlay: [Qr, P_, xe],
          AudioOverlay: [zn, R_, xe],
          FlipbookOverlay: [bn, E_, xe],
          ToolStripSeparator: [yi, D_, ht],
          FrameWizard: [Vs, N_, Lr],
          ReferenceFrameProps: [Os, F_, Lr],
          GreatCircleDialog: [Us, z_, Lr],
          DataVizWizard: [Gs, B_, Lr],
          FitsImageTile: [Hs, V_, bi],
          FitsImageJs: [nr, O_, bi],
          ISSLayer: [mi, U_, Zt],
          CatalogSpreadSheetLayer: [Xa, G_, ei],
          SlideChangedEventArgs: [Xs, H_, n.EventArgs],
          ArrivedEventArgs: [qa, X_, n.EventArgs],
          AnnotationClickEventArgs: [qs, q_, n.EventArgs],
          CollectionLoadedEventArgs: [Ys, Y_, n.EventArgs],
          SkyImageTile: [Zs, Z_, sa]
        }
      );
      let Ya;
      typeof window < "u" && "pako" in window ? Ya = window.pako : Promise.resolve().then(() => index$1).then(function(t) {
        Ya = t;
      });
      let Za;
      return typeof window < "u" && "uuid" in window ? Za = window.uuid : Promise.resolve().then(() => index).then(function(t) {
        Za = t;
      }), w.g_ACft = [new Se(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1719914, -2, -25, 0, 25, -13, 1578089, 156, 10, 32, 684185, -358), new Se(0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6434, 141, 28007, -107, 25697, -95, -5904, -130, 11141, -48, -2559, -55), new Se(0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 715, 0, 0, 0, 6, 0, -657, 0, -15, 0, -282, 0), new Se(0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 715, 0, 0, 0, 0, 0, -656, 0, 0, 0, -285, 0), new Se(0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 486, -5, -236, -4, -216, -4, -446, 5, -94, 0, -193, 0), new Se(0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 159, 0, 0, 0, 2, 0, -147, 0, -6, 0, -61, 0), new Se(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, -59, 0), new Se(0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 39, 0, 0, 0, 0, 0, -36, 0, 0, 0, -16, 0), new Se(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 33, 0, -10, 0, -9, 0, -30, 0, -5, 0, -13, 0), new Se(0, 2, 0, -1, 0, 0, 0, 0, 0, 0, 0, 31, 0, 1, 0, 1, 0, -28, 0, 0, 0, -12, 0), new Se(0, 3, -8, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, -28, 0, 25, 0, 8, 0, 11, 0, 3, 0), new Se(0, 5, -8, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, -28, 0, -25, 0, -8, 0, -11, 0, -3, 0), new Se(2, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, -19, 0, 0, 0, -8, 0), new Se(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -19, 0, 0, 0, 0, 0, 17, 0, 0, 0, 8, 0), new Se(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, -16, 0, 0, 0, -7, 0), new Se(0, 1, 0, -2, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 1, 0, 7, 0), new Se(0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, -15, 0, -3, 0, -6, 0), new Se(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 11, 0, -1, 0, -1, 0, -10, 0, -1, 0, -5, 0), new Se(2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -11, 0, -10, 0, 0, 0, -4, 0, 0, 0), new Se(0, 1, 0, -1, 0, 0, 0, 0, 0, 0, 0, -11, 0, -2, 0, -2, 0, 9, 0, -1, 0, 4, 0), new Se(0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, -8, 0, -8, 0, 6, 0, -3, 0, 3, 0), new Se(0, 3, 0, -2, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 9, 0, 0, 0, 4, 0), new Se(1, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, -9, 0, 0, 0, -4, 0), new Se(2, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, -8, 0, 0, 0, -4, 0), new Se(0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, -8, 0, 0, 0, -3, 0, 0, 0), new Se(2, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 8, 0, 0, 0, 3, 0, 0, 0), new Se(0, 3, -2, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, -8, 0, 0, 0, -3, 0), new Se(0, 0, 0, 0, 0, 0, 0, 1, 2, -1, 0, 8, 0, 0, 0, 0, 0, -7, 0, 0, 0, -3, 0), new Se(8, -12, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -7, 0, -6, 0, 4, 0, -3, 0, 2, 0), new Se(8, -14, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, -7, 0, 6, 0, -4, 0, 3, 0, -2, 0), new Se(0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, -5, 0, -4, 0, 5, 0, -2, 0, 2, 0), new Se(3, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, -2, 0, -7, 0, 1, 0, -4, 0), new Se(0, 2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 4, 0, -6, 0, -5, 0, -4, 0, -2, 0, -2, 0), new Se(3, -3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, -6, 0, 0, 0, -3, 0, 0, 0), new Se(0, 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, -5, 0, -4, 0, -5, 0, -2, 0, -2, 0), new Se(0, 0, 0, 0, 0, 0, 0, 1, -2, 0, 0, 5, 0, 0, 0, 0, 0, -5, 0, 0, 0, -2, 0)], w.deltaTTable = [121, 112, 103, 95, 88, 82, 77, 72, 68, 63, 60, 56, 53, 51, 48, 46, 44, 42, 40, 38, 35, 33, 31, 29, 26, 24, 22, 20, 18, 16, 14, 12, 11, 10, 9, 8, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 14, 13, 13.1, 12.5, 12.2, 12, 12, 12, 12, 12, 12, 11.9, 11.6, 11, 10.2, 9.2, 8.2, 7.1, 6.2, 5.6, 5.4, 5.3, 5.4, 5.6, 5.9, 6.2, 6.5, 6.8, 7.1, 7.3, 7.5, 7.6, 7.7, 7.3, 6.2, 5.2, 2.7, 1.4, -1.2, -2.8, -3.8, -4.8, -5.5, -5.3, -5.6, -5.7, -5.9, -6, -6.3, -6.5, -6.2, -4.7, -2.8, -0.1, 2.6, 5.3, 7.7, 10.4, 13.3, 16, 18.2, 20.2, 21.2, 22.4, 23.5, 23.8, 24.3, 24, 23.9, 23.9, 23.7, 24, 24.3, 25.3, 26.2, 27.3, 28.2, 29.1, 30, 30.7, 31.4, 32.2, 33.1, 34, 35, 36.5, 38.3, 40.18, 42.2, 44.5, 46.5, 48.5, 50.54, 52.2, 53.8, 54.9, 55.8, 56.86, 58.31, 59.99, 61.63, 62.97], w.g_L0EarthCoefficients = [new o(175347046, 0, 0), new o(3341656, 4.6692568, 6283.07585), new o(34894, 4.6261, 12566.1517), new o(3497, 2.7441, 5753.3849), new o(3418, 2.8289, 3.5231), new o(3136, 3.6277, 77713.7715), new o(2676, 4.4181, 7860.4194), new o(2343, 6.1352, 3930.2097), new o(1324, 0.7425, 11506.7698), new o(1273, 2.0371, 529.691), new o(1199, 1.1096, 1577.3435), new o(990, 5.233, 5884.927), new o(902, 2.045, 26.298), new o(857, 3.508, 398.149), new o(780, 1.179, 5223.694), new o(753, 2.533, 5507.553), new o(505, 4.583, 18849.228), new o(492, 4.205, 775.523), new o(357, 2.92, 0.067), new o(317, 5.849, 11790.629), new o(284, 1.899, 796.288), new o(271, 0.315, 10977.079), new o(243, 0.345, 5486.778), new o(206, 4.806, 2544.314), new o(205, 1.869, 5573.143), new o(202, 2.458, 6069.777), new o(156, 0.833, 213.299), new o(132, 3.411, 2942.463), new o(126, 1.083, 20.775), new o(115, 0.645, 0.98), new o(103, 0.636, 4694.003), new o(102, 0.976, 15720.839), new o(102, 4.267, 7.114), new o(99, 6.21, 2146.17), new o(98, 0.68, 155.42), new o(86, 5.98, 161000.69), new o(85, 1.3, 6275.96), new o(85, 3.67, 71430.7), new o(80, 1.81, 17260.15), new o(79, 3.04, 12036.46), new o(75, 1.76, 5088.63), new o(74, 3.5, 3154.69), new o(74, 4.68, 801.82), new o(70, 0.83, 9437.76), new o(62, 3.98, 8827.39), new o(61, 1.82, 7084.9), new o(57, 2.78, 6286.6), new o(56, 4.39, 14143.5), new o(56, 3.47, 6279.55), new o(52, 0.19, 12139.55), new o(52, 1.33, 1748.02), new o(51, 0.28, 5856.48), new o(49, 0.49, 1194.45), new o(41, 5.37, 8429.24), new o(41, 2.4, 19651.05), new o(39, 6.17, 10447.39), new o(37, 6.04, 10213.29), new o(37, 2.57, 1059.38), new o(36, 1.71, 2352.87), new o(36, 1.78, 6812.77), new o(33, 0.59, 17789.85), new o(30, 0.44, 83996.85), new o(30, 2.74, 1349.87), new o(25, 3.16, 4690.48)], w.g_L1EarthCoefficients = [new o(628331966747, 0, 0), new o(206059, 2.678235, 6283.07585), new o(4303, 2.6351, 12566.1517), new o(425, 1.59, 3.523), new o(119, 5.796, 26.298), new o(109, 2.966, 1577.344), new o(93, 2.59, 18849.23), new o(72, 1.14, 529.69), new o(68, 1.87, 398.15), new o(67, 4.41, 5507.55), new o(59, 2.89, 5223.69), new o(56, 2.17, 155.42), new o(45, 0.4, 796.3), new o(36, 0.47, 775.52), new o(29, 2.65, 7.11), new o(21, 5.43, 0.98), new o(19, 1.85, 5486.78), new o(19, 4.97, 213.3), new o(17, 2.99, 6275.96), new o(16, 0.03, 2544.31), new o(16, 1.43, 2146.17), new o(15, 1.21, 10977.08), new o(12, 2.83, 1748.02), new o(12, 3.26, 5088.63), new o(12, 5.27, 1194.45), new o(12, 2.08, 4694), new o(11, 0.77, 553.57), new o(10, 1.3, 6286.6), new o(10, 4.24, 1349.87), new o(9, 2.7, 242.73), new o(9, 5.64, 951.72), new o(8, 5.3, 2352.87), new o(6, 2.65, 9437.76), new o(6, 4.67, 4690.48)], w.g_L2EarthCoefficients = [new o(52919, 0, 0), new o(8720, 1.0721, 6283.0758), new o(309, 0.867, 12566.152), new o(27, 0.05, 3.52), new o(16, 5.19, 26.3), new o(16, 3.68, 155.42), new o(10, 0.76, 18849.23), new o(9, 2.06, 77713.77), new o(7, 0.83, 775.52), new o(5, 4.66, 1577.34), new o(4, 1.03, 7.11), new o(4, 3.44, 5573.14), new o(3, 5.14, 796.3), new o(3, 6.05, 5507.55), new o(3, 1.19, 242.73), new o(3, 6.12, 529.69), new o(3, 0.31, 398.15), new o(3, 2.28, 553.57), new o(2, 4.38, 5223.69), new o(2, 3.75, 0.98)], w.g_L3EarthCoefficients = [new o(289, 5.844, 6283.076), new o(35, 0, 0), new o(17, 5.49, 12566.15), new o(3, 5.2, 155.42), new o(1, 4.72, 3.52), new o(1, 5.3, 18849.23), new o(1, 5.97, 242.73)], w.g_L4EarthCoefficients = [new o(114, 3.142, 0), new o(8, 4.13, 6283.08), new o(1, 3.84, 12566.15)], w.g_L5EarthCoefficients = [new o(1, 3.14, 0)], w.g_B0EarthCoefficients = [new o(280, 3.199, 84334.662), new o(102, 5.422, 5507.553), new o(80, 3.88, 5223.69), new o(44, 3.7, 2352.87), new o(32, 4, 1577.34)], w.g_B1EarthCoefficients = [new o(9, 3.9, 5507.55), new o(6, 1.73, 5223.69)], w.g_B2EarthCoefficients = [new o(22378, 3.38509, 10213.28555), new o(282, 0, 0), new o(173, 5.256, 20426.571), new o(27, 3.87, 30639.86)], w.g_B3EarthCoefficients = [new o(647, 4.992, 10213.286), new o(20, 3.14, 0), new o(6, 0.77, 20426.57), new o(3, 5.44, 30639.86)], w.g_B4EarthCoefficients = [new o(14, 0.32, 10213.29)], w.g_R0EarthCoefficients = [new o(100013989, 0, 0), new o(1670700, 3.0984635, 6283.07585), new o(13956, 3.05525, 12566.1517), new o(3084, 5.1985, 77713.7715), new o(1628, 1.1739, 5753.3849), new o(1576, 2.8469, 7860.4194), new o(925, 5.453, 11506.77), new o(542, 4.564, 3930.21), new o(472, 3.661, 5884.927), new o(346, 0.964, 5507.553), new o(329, 5.9, 5223.694), new o(307, 0.299, 5573.143), new o(243, 4.273, 11790.629), new o(212, 5.847, 1577.344), new o(186, 5.022, 10977.079), new o(175, 3.012, 18849.228), new o(110, 5.055, 5486.778), new o(98, 0.89, 6069.78), new o(86, 5.69, 15720.84), new o(86, 1.27, 161000.69), new o(65, 0.27, 17260.15), new o(63, 0.92, 529.69), new o(57, 2.01, 83996.85), new o(56, 5.24, 71430.7), new o(49, 3.25, 2544.31), new o(47, 2.58, 775.52), new o(45, 5.54, 9437.76), new o(43, 6.01, 6275.96), new o(39, 5.36, 4694), new o(38, 2.39, 8827.39), new o(37, 0.83, 19651.05), new o(37, 4.9, 12139.55), new o(36, 1.67, 12036.46), new o(35, 1.84, 2942.46), new o(33, 0.24, 7084.9), new o(32, 0.18, 5088.63), new o(32, 1.78, 398.15), new o(28, 1.21, 6286.6), new o(28, 1.9, 6279.55), new o(26, 4.59, 10447.39)], w.g_R1EarthCoefficients = [new o(103019, 1.10749, 6283.07585), new o(1721, 1.0644, 12566.1517), new o(702, 3.142, 0), new o(32, 1.02, 18849.23), new o(31, 2.84, 5507.55), new o(25, 1.32, 5223.69), new o(18, 1.42, 1577.34), new o(10, 5.91, 10977.08), new o(9, 1.42, 6275.96), new o(9, 0.27, 5486.78)], w.g_R2EarthCoefficients = [new o(4359, 5.7846, 6283.0758), new o(124, 5.579, 12566.152), new o(12, 3.14, 0), new o(9, 3.63, 77713.77), new o(6, 1.87, 5573.14), new o(3, 5.47, 18849.23)], w.g_R3EarthCoefficients = [new o(145, 4.273, 6283.076), new o(7, 3.92, 12566.15)], w.g_R4EarthCoefficients = [new o(4, 2.56, 6283.08)], w.g_L1EarthCoefficientsJ2000 = [new o(628307584999, 0, 0), new o(206059, 2.678235, 6283.07585), new o(4303, 2.6351, 12566.1517), new o(425, 1.59, 3.523), new o(119, 5.796, 26.298), new o(109, 2.966, 1577.344), new o(93, 2.59, 18849.23), new o(72, 1.14, 529.69), new o(68, 1.87, 398.15), new o(67, 4.41, 5507.55), new o(59, 2.89, 5223.69), new o(56, 2.17, 155.42), new o(45, 0.4, 796.3), new o(36, 0.47, 775.52), new o(29, 2.65, 7.11), new o(21, 5.43, 0.98), new o(19, 1.85, 5486.78), new o(19, 4.97, 213.3), new o(17, 2.99, 6275.96), new o(16, 0.03, 2544.31), new o(16, 1.43, 2146.17), new o(15, 1.21, 10977.08), new o(12, 2.83, 1748.02), new o(12, 3.26, 5088.63), new o(12, 5.27, 1194.45), new o(12, 2.08, 4694), new o(11, 0.77, 553.57), new o(10, 1.3, 6286.6), new o(10, 4.24, 1349.87), new o(9, 2.7, 242.73), new o(9, 5.64, 951.72), new o(8, 5.3, 2352.87), new o(6, 2.65, 9437.76), new o(6, 4.67, 4690.48)], w.g_L2EarthCoefficientsJ2000 = [new o(8722, 1.0725, 6283.0758), new o(991, 3.1416, 0), new o(295, 0.437, 12566.152), new o(27, 0.05, 3.52), new o(16, 5.19, 26.3), new o(16, 3.69, 155.42), new o(9, 0.3, 18849.23), new o(9, 2.06, 77713.77), new o(7, 0.83, 775.52), new o(5, 4.66, 1577.34), new o(4, 1.03, 7.11), new o(4, 3.44, 5573.14), new o(3, 5.14, 796.3), new o(3, 6.05, 5507.55), new o(3, 1.19, 242.73), new o(3, 6.12, 529.69), new o(3, 0.3, 398.15), new o(3, 2.28, 553.57), new o(2, 4.38, 5223.69), new o(2, 3.75, 0.98)], w.g_L3EarthCoefficientsJ2000 = [new o(289, 5.842, 6283.076), new o(21, 6.05, 12566.15), new o(3, 5.2, 155.42), new o(3, 3.14, 0), new o(1, 4.72, 3.52), new o(1, 5.97, 242.73), new o(1, 5.54, 18849.23)], w.g_L4EarthCoefficientsJ2000 = [new o(8, 4.14, 6283.08), new o(1, 3.28, 12566.15)], w.g_B1EarthCoefficientsJ2000 = [new o(227778, 3.413766, 6283.07585), new o(3806, 3.3706, 12566.1517), new o(3620, 0, 0), new o(72, 3.33, 18849.23), new o(8, 3.89, 5507.55), new o(8, 1.79, 5223.69), new o(6, 5.2, 2352.87)], w.g_B2EarthCoefficientsJ2000 = [new o(9721, 5.1519, 6283.07585), new o(233, 3.1416, 0), new o(134, 0.644, 12566.152), new o(7, 1.07, 18849.23)], w.g_B3EarthCoefficientsJ2000 = [new o(276, 0.595, 6283.076), new o(17, 3.14, 0), new o(4, 0.12, 12566.15)], w.g_B4EarthCoefficientsJ2000 = [new o(6, 2.27, 6283.08), new o(1, 0, 0)], w.g_L0JupiterCoefficients = [new o(59954691, 0, 0), new o(9695899, 5.0619179, 529.6909651), new o(573610, 1.444062, 7.113547), new o(306389, 5.417347, 1059.38193), new o(97178, 4.14265, 632.78374), new o(72903, 3.64043, 522.57742), new o(64264, 3.41145, 103.09277), new o(39806, 2.29377, 419.48464), new o(38858, 1.27232, 316.39187), new o(27965, 1.78455, 536.80451), new o(13590, 5.77481, 1589.0729), new o(8769, 3.63, 949.1756), new o(8246, 3.5823, 206.1855), new o(7368, 5.081, 735.8765), new o(6263, 0.025, 213.2991), new o(6114, 4.5132, 1162.4747), new o(5305, 4.1863, 1052.2684), new o(5305, 1.3067, 14.2271), new o(4905, 1.3208, 110.2063), new o(4647, 4.6996, 3.9322), new o(3045, 4.3168, 426.5982), new o(2610, 1.5667, 846.0828), new o(2028, 1.0638, 3.1814), new o(1921, 0.9717, 639.8973), new o(1765, 2.1415, 1066.4955), new o(1723, 3.8804, 1265.5675), new o(1633, 3.582, 515.4639), new o(1432, 4.2968, 625.6702), new o(973, 4.098, 95.979), new o(884, 2.437, 412.371), new o(733, 6.085, 838.969), new o(731, 3.806, 1581.959), new o(709, 1.293, 742.99), new o(692, 6.134, 2118.764), new o(614, 4.109, 1478.867), new o(582, 4.54, 309.278), new o(495, 3.756, 323.505), new o(441, 2.958, 454.909), new o(417, 1.036, 2.488), new o(390, 4.897, 1692.166), new o(376, 4.703, 1368.66), new o(341, 5.715, 533.623), new o(330, 4.74, 0.048), new o(262, 1.877, 0.963), new o(261, 0.82, 380.128), new o(257, 3.724, 199.072), new o(244, 5.22, 728.763), new o(235, 1.227, 909.819), new o(220, 1.651, 543.918), new o(207, 1.855, 525.759), new o(202, 1.807, 1375.774), new o(197, 5.293, 1155.361), new o(175, 3.73, 942.062), new o(175, 3.226, 1898.351), new o(175, 5.91, 956.289), new o(158, 4.365, 1795.258), new o(151, 3.906, 74.782), new o(149, 4.377, 1685.052), new o(141, 3.136, 491.558), new o(138, 1.318, 1169.588), new o(131, 4.169, 1045.155), new o(117, 2.5, 1596.186), new o(117, 3.389, 0.521), new o(106, 4.554, 526.51)], w.g_L1JupiterCoefficients = [new o(52993480757, 0, 0), new o(489741, 4.220667, 529.690965), new o(228919, 6.026475, 7.113547), new o(27655, 4.57266, 1059.38193), new o(20721, 5.45939, 522.57742), new o(12106, 0.16986, 536.80451), new o(6068, 4.4242, 103.0928), new o(5434, 3.9848, 419.4846), new o(4238, 5.8901, 14.2271), new o(2212, 5.2677, 206.1855), new o(1746, 4.9267, 1589.0729), new o(1296, 5.5513, 3.1814), new o(1173, 5.8565, 1052.2684), new o(1163, 0.5145, 3.9322), new o(1099, 5.307, 515.4639), new o(1007, 0.4648, 735.8765), new o(1004, 3.1504, 426.5982), new o(848, 5.758, 110.206), new o(827, 4.803, 213.299), new o(816, 0.586, 1066.495), new o(725, 5.518, 639.897), new o(568, 5.989, 625.67), new o(474, 4.132, 412.371), new o(413, 5.737, 95.979), new o(345, 4.242, 632.784), new o(336, 3.732, 1162.475), new o(234, 4.035, 949.176), new o(234, 6.243, 309.278), new o(199, 1.505, 838.969), new o(195, 2.219, 323.505), new o(187, 6.086, 742.99), new o(184, 6.28, 543.918), new o(171, 5.417, 199.072), new o(131, 0.626, 728.763), new o(115, 0.68, 846.083), new o(115, 5.286, 2118.764), new o(108, 4.493, 956.289), new o(80, 5.82, 1045.15), new o(72, 5.34, 942.06), new o(70, 5.97, 532.87), new o(67, 5.73, 21.34), new o(66, 0.13, 526.51), new o(65, 6.09, 1581.96), new o(59, 0.59, 1155.36), new o(58, 0.99, 1596.19), new o(57, 5.97, 1169.59), new o(57, 1.41, 533.62), new o(55, 5.43, 10.29), new o(52, 5.73, 117.32), new o(52, 0.23, 1368.66), new o(50, 6.08, 525.76), new o(47, 3.63, 1478.87), new o(47, 0.51, 1265.57), new o(40, 4.16, 1692.17), new o(34, 0.1, 302.16), new o(33, 5.04, 220.41), new o(32, 5.37, 508.35), new o(29, 5.42, 1272.68), new o(29, 3.36, 4.67), new o(29, 0.76, 88.87), new o(25, 1.61, 831.86)], w.g_L2JupiterCoefficients = [new o(47234, 4.32148, 7.11355), new o(38966, 0, 0), new o(30629, 2.93021, 529.69097), new o(3189, 1.055, 522.5774), new o(2729, 4.8455, 536.8045), new o(2723, 3.4141, 1059.3819), new o(1721, 4.1873, 14.2271), new o(383, 5.768, 419.485), new o(378, 0.76, 515.464), new o(367, 6.055, 103.093), new o(337, 3.786, 3.181), new o(308, 0.694, 206.186), new o(218, 3.814, 1589.073), new o(199, 5.34, 1066.495), new o(197, 2.484, 3.932), new o(156, 1.406, 1052.268), new o(146, 3.814, 639.897), new o(142, 1.634, 426.598), new o(130, 5.837, 412.371), new o(117, 1.414, 625.67), new o(97, 4.03, 110.21), new o(91, 1.11, 95.98), new o(87, 2.52, 632.78), new o(79, 4.64, 543.92), new o(72, 2.22, 735.88), new o(58, 0.83, 199.07), new o(57, 3.12, 213.3), new o(49, 1.67, 309.28), new o(40, 4.02, 21.34), new o(40, 0.62, 323.51), new o(36, 2.33, 728.76), new o(29, 3.61, 10.29), new o(28, 3.24, 838.97), new o(26, 4.5, 742.99), new o(26, 2.51, 1162.47), new o(25, 1.22, 1045.15), new o(24, 3.01, 956.29), new o(19, 4.29, 532.87), new o(18, 0.81, 508.35), new o(17, 4.2, 2118.76), new o(17, 1.83, 526.51), new o(15, 5.81, 1596.19), new o(15, 0.68, 942.06), new o(15, 4, 117.32), new o(14, 5.95, 316.39), new o(14, 1.8, 302.16), new o(13, 2.52, 88.87), new o(13, 4.37, 1169.59), new o(11, 4.44, 525.76), new o(10, 1.72, 1581.96), new o(9, 2.18, 1155.36), new o(9, 3.29, 220.41), new o(9, 3.32, 831.86), new o(8, 5.76, 846.08), new o(8, 2.71, 533.62), new o(7, 2.18, 1265.57), new o(6, 0.5, 949.18)], w.g_L3JupiterCoefficients = [new o(6502, 2.5986, 7.1135), new o(1357, 1.3464, 529.691), new o(471, 2.475, 14.227), new o(417, 3.245, 536.805), new o(353, 2.974, 522.577), new o(155, 2.076, 1059.382), new o(87, 2.51, 515.46), new o(44, 0, 0), new o(34, 3.83, 1066.5), new o(28, 2.45, 206.19), new o(24, 1.28, 412.37), new o(23, 2.98, 543.92), new o(20, 2.1, 639.9), new o(20, 1.4, 419.48), new o(19, 1.59, 103.09), new o(17, 2.3, 21.34), new o(17, 2.6, 1589.07), new o(16, 3.15, 625.67), new o(16, 3.36, 1052.27), new o(13, 2.76, 95.98), new o(13, 2.54, 199.07), new o(13, 6.27, 426.6), new o(9, 1.76, 10.29), new o(9, 2.27, 110.21), new o(7, 3.43, 309.28), new o(7, 4.04, 728.76), new o(6, 2.52, 508.35), new o(5, 2.91, 1045.15), new o(5, 5.25, 323.51), new o(4, 4.3, 88.87), new o(4, 3.52, 302.16), new o(4, 4.09, 735.88), new o(3, 1.43, 956.29), new o(3, 4.36, 1596.19), new o(3, 1.25, 213.3), new o(3, 5.02, 838.97), new o(3, 2.24, 117.32), new o(2, 2.9, 742.99), new o(2, 2.36, 942.06)], w.g_L4JupiterCoefficients = [new o(669, 0.853, 7.114), new o(114, 3.142, 0), new o(100, 0.743, 14.227), new o(50, 1.65, 536.8), new o(44, 5.82, 529.69), new o(32, 4.86, 522.58), new o(15, 4.29, 515.46), new o(9, 0.71, 1059.38), new o(5, 1.3, 543.92), new o(4, 2.32, 1066.5), new o(4, 0.48, 21.34), new o(3, 3, 412.37), new o(2, 0.4, 639.9), new o(2, 4.26, 199.07), new o(2, 4.91, 625.67), new o(2, 4.26, 206.19), new o(1, 5.26, 1052.27), new o(1, 4.72, 95.98), new o(1, 1.29, 1589.07)], w.g_L5JupiterCoefficients = [new o(50, 5.26, 7.11), new o(16, 5.25, 14.23), new o(4, 0.01, 536.8), new o(2, 1.1, 522.58), new o(1, 3.14, 0)], w.g_B0JupiterCoefficients = [new o(2268616, 3.5585261, 529.6909651), new o(110090, 0, 0), new o(109972, 3.908093, 1059.38193), new o(8101, 3.6051, 522.5774), new o(6438, 0.3063, 536.8045), new o(6044, 4.2588, 1589.0729), new o(1107, 2.9853, 1162.4747), new o(944, 1.675, 426.598), new o(942, 2.936, 1052.268), new o(894, 1.754, 7.114), new o(836, 5.179, 103.093), new o(767, 2.155, 632.784), new o(684, 3.678, 213.299), new o(629, 0.643, 1066.495), new o(559, 0.014, 846.083), new o(532, 2.703, 110.206), new o(464, 1.173, 949.176), new o(431, 2.608, 419.485), new o(351, 4.611, 2118.764), new o(132, 4.778, 742.99), new o(123, 3.35, 1692.166), new o(116, 1.387, 323.505), new o(115, 5.049, 316.392), new o(104, 3.701, 515.464), new o(103, 2.319, 1478.867), new o(102, 3.153, 1581.959)], w.g_B1JupiterCoefficients = [new o(177352, 5.701665, 529.690965), new o(3230, 5.7794, 1059.3819), new o(3081, 5.4746, 522.5774), new o(2212, 4.7348, 536.8045), new o(1694, 3.1416, 0), new o(346, 4.746, 1052.268), new o(234, 5.189, 1066.495), new o(196, 6.186, 7.114), new o(150, 3.927, 1589.073), new o(114, 3.439, 632.784), new o(97, 2.91, 949.18), new o(82, 5.08, 1162.47), new o(77, 2.51, 103.09), new o(77, 0.61, 419.48), new o(74, 5.5, 515.46), new o(61, 5.45, 213.3), new o(50, 3.95, 735.88), new o(46, 0.54, 110.21), new o(45, 1.9, 846.08), new o(37, 4.7, 543.92), new o(36, 6.11, 316.39), new o(32, 4.92, 1581.96)], w.g_B2JupiterCoefficients = [new o(8094, 1.4632, 529.691), new o(813, 3.1416, 0), new o(742, 0.957, 522.577), new o(399, 2.899, 536.805), new o(342, 1.447, 1059.382), new o(74, 0.41, 1052.27), new o(46, 3.48, 1066.5), new o(30, 1.93, 1589.07), new o(29, 0.99, 515.46), new o(23, 4.27, 7.11), new o(14, 2.92, 543.92), new o(12, 5.22, 632.78), new o(11, 4.88, 949.18), new o(6, 6.21, 1045.15)], w.g_B3JupiterCoefficients = [new o(252, 3.381, 529.691), new o(122, 2.733, 522.577), new o(49, 1.04, 536.8), new o(11, 2.31, 1052.27), new o(8, 2.77, 515.46), new o(7, 4.25, 1059.38), new o(6, 1.78, 1066.5), new o(4, 1.13, 543.92), new o(3, 3.14, 0)], w.g_B4JupiterCoefficients = [new o(15, 4.53, 522.58), new o(5, 4.47, 529.69), new o(4, 5.44, 536.8), new o(3, 0, 0), new o(2, 4.52, 515.46), new o(1, 4.2, 1052.27)], w.g_B5JupiterCoefficients = [new o(1, 0.09, 522.58)], w.g_R0JupiterCoefficients = [new o(520887429, 0, 0), new o(25209327, 3.4910864, 529.69096509), new o(610600, 3.841154, 1059.38193), new o(282029, 2.574199, 632.783739), new o(187647, 2.075904, 522.577418), new o(86793, 0.71001, 419.48464), new o(72063, 0.21466, 536.80451), new o(65517, 5.97996, 316.39187), new o(30135, 2.16132, 949.17561), new o(29135, 1.67759, 103.09277), new o(23947, 0.27458, 7.11355), new o(23453, 3.54023, 735.87651), new o(22284, 4.19363, 1589.0729), new o(13033, 2.96043, 1162.4747), new o(12749, 2.7155, 1052.26838), new o(9703, 1.9067, 206.1855), new o(9161, 4.4135, 213.2991), new o(7895, 2.4791, 426.5982), new o(7058, 2.1818, 1265.5675), new o(6138, 6.2642, 846.0828), new o(5477, 5.6573, 639.8973), new o(4170, 2.0161, 515.4639), new o(4137, 2.7222, 625.6702), new o(3503, 0.5653, 1066.4955), new o(2617, 2.0099, 1581.9593), new o(2500, 4.5518, 838.9693), new o(2128, 6.1275, 742.9901), new o(1912, 0.8562, 412.3711), new o(1611, 3.0887, 1368.6603), new o(1479, 2.6803, 1478.8666), new o(1231, 1.8904, 323.5054), new o(1217, 1.8017, 110.2063), new o(1015, 1.3867, 454.9094), new o(999, 2.872, 309.278), new o(961, 4.549, 2118.764), new o(886, 4.148, 533.623), new o(821, 1.593, 1898.351), new o(812, 5.941, 909.819), new o(777, 3.677, 728.763), new o(727, 3.988, 1155.361), new o(655, 2.791, 1685.052), new o(654, 3.382, 1692.166), new o(621, 4.823, 956.289), new o(615, 2.276, 942.062), new o(562, 0.081, 543.918), new o(542, 0.284, 525.759)], w.g_R1JupiterCoefficients = [new o(1271802, 2.6493751, 529.6909651), new o(61662, 3.00076, 1059.38193), new o(53444, 3.89718, 522.57742), new o(41390, 0, 0), new o(31185, 4.88277, 536.80451), new o(11847, 2.4133, 419.48464), new o(9166, 4.7598, 7.1135), new o(3404, 3.3469, 1589.0729), new o(3203, 5.2108, 735.8765), new o(3176, 2.793, 103.0928), new o(2806, 3.7422, 515.4639), new o(2677, 4.3305, 1052.2684), new o(2600, 3.6344, 206.1855), new o(2412, 1.4695, 426.5982), new o(2101, 3.9276, 639.8973), new o(1646, 4.4163, 1066.4955), new o(1641, 4.4163, 625.6702), new o(1050, 3.1611, 213.2991), new o(1025, 2.5543, 412.3711), new o(806, 2.678, 632.784), new o(741, 2.171, 1162.475), new o(677, 6.25, 838.969), new o(567, 4.577, 742.99), new o(485, 2.469, 949.176), new o(469, 4.71, 543.918), new o(445, 0.403, 323.505), new o(416, 5.368, 728.763), new o(402, 4.605, 309.278), new o(347, 4.681, 14.227), new o(338, 3.168, 956.289), new o(261, 5.343, 846.083), new o(247, 3.923, 942.062), new o(220, 4.842, 1368.66), new o(203, 5.6, 1155.361), new o(200, 4.439, 1045.155), new o(197, 3.706, 2118.764), new o(196, 3.759, 199.072), new o(184, 4.265, 95.979), new o(180, 4.402, 532.872), new o(170, 4.846, 526.51), new o(146, 6.13, 533.623), new o(133, 1.322, 110.206), new o(132, 4.512, 525.759)], w.g_R2JupiterCoefficients = [new o(79645, 1.35866, 529.69097), new o(8252, 5.7777, 522.5774), new o(7030, 3.2748, 536.8045), new o(5314, 1.8384, 1059.3819), new o(1861, 2.9768, 7.1135), new o(964, 5.48, 515.464), new o(836, 4.199, 419.485), new o(498, 3.142, 0), new o(427, 2.228, 639.897), new o(406, 3.783, 1066.495), new o(377, 2.242, 1589.073), new o(363, 5.368, 206.186), new o(342, 6.099, 1052.268), new o(339, 6.127, 625.67), new o(333, 3e-3, 426.598), new o(280, 4.262, 412.371), new o(257, 0.963, 632.784), new o(230, 0.705, 735.877), new o(201, 3.069, 543.918), new o(200, 4.429, 103.093), new o(139, 2.932, 14.227), new o(114, 0.787, 728.763), new o(95, 1.7, 838.97), new o(86, 5.14, 323.51), new o(83, 0.06, 309.28), new o(80, 2.98, 742.99), new o(75, 1.6, 956.29), new o(70, 1.51, 213.3), new o(67, 5.47, 199.07), new o(62, 6.1, 1045.15), new o(56, 0.96, 1162.47), new o(52, 5.58, 942.06), new o(50, 2.72, 532.87), new o(45, 5.52, 508.35), new o(44, 0.27, 526.51), new o(40, 5.95, 95.98)], w.g_R3JupiterCoefficients = [new o(3519, 6.058, 529.691), new o(1073, 1.6732, 536.8045), new o(916, 1.413, 522.577), new o(342, 0.523, 1059.382), new o(255, 1.196, 7.114), new o(222, 0.952, 515.464), new o(90, 3.14, 0), new o(69, 2.27, 1066.5), new o(58, 1.41, 543.92), new o(58, 0.53, 639.9), new o(51, 5.98, 412.37), new o(47, 1.58, 625.67), new o(43, 6.12, 419.48), new o(37, 1.18, 14.23), new o(34, 1.67, 1052.27), new o(34, 0.85, 206.19), new o(31, 1.04, 1589.07), new o(30, 4.63, 426.6), new o(21, 2.5, 728.76), new o(15, 0.89, 199.07), new o(14, 0.96, 508.35), new o(13, 1.5, 1045.15), new o(12, 2.61, 735.88), new o(12, 3.56, 323.51), new o(11, 1.79, 309.28), new o(11, 6.28, 956.29), new o(10, 6.26, 103.09), new o(9, 3.45, 838.97)], w.g_R4JupiterCoefficients = [new o(129, 0.084, 536.805), new o(113, 4.249, 529.691), new o(83, 3.3, 522.58), new o(38, 2.73, 515.46), new o(27, 5.69, 7.11), new o(18, 5.4, 1059.38), new o(13, 6.02, 543.92), new o(9, 0.77, 1066.5), new o(8, 5.68, 14.23), new o(7, 1.43, 412.37), new o(6, 5.12, 639.9), new o(5, 3.34, 625.67), new o(3, 3.4, 1052.27), new o(3, 4.16, 728.76), new o(3, 2.9, 426.6)], w.g_R5JupiterCoefficients = [new o(11, 4.75, 536.8), new o(4, 5.92, 522.58), new o(2, 5.57, 515.46), new o(2, 4.3, 543.92), new o(2, 3.69, 7.11), new o(2, 4.13, 1059.38), new o(2, 5.49, 1066.5)], w.g_L0MarsCoefficients = [new o(620347712, 0, 0), new o(18656368, 5.050371, 3340.6124267), new o(1108217, 5.4009984, 6681.2248534), new o(91798, 5.75479, 10021.83728), new o(27745, 5.9705, 3.52312), new o(12316, 0.84956, 2810.92146), new o(10610, 2.93959, 2281.2305), new o(8927, 4.157, 0.0173), new o(8716, 6.1101, 13362.4497), new o(7775, 3.3397, 5621.8429), new o(6798, 0.3646, 398.149), new o(4161, 0.2281, 2942.4634), new o(3575, 1.6619, 2544.3144), new o(3075, 0.857, 191.4483), new o(2938, 6.0789, 0.0673), new o(2628, 0.6481, 3337.0893), new o(2580, 0.03, 3344.1355), new o(2389, 5.039, 796.298), new o(1799, 0.6563, 529.691), new o(1546, 2.9158, 1751.5395), new o(1528, 1.1498, 6151.5339), new o(1286, 3.068, 2146.1654), new o(1264, 3.6228, 5092.152), new o(1025, 3.6933, 8962.4553), new o(892, 0.183, 16703.062), new o(859, 2.401, 2914.014), new o(833, 4.495, 3340.63), new o(833, 2.464, 3340.595), new o(749, 3.822, 155.42), new o(724, 0.675, 3738.761), new o(713, 3.663, 1059.382), new o(655, 0.489, 3127.313), new o(636, 2.922, 8432.764), new o(553, 4.475, 1748.016), new o(550, 3.81, 0.98), new o(472, 3.625, 1194.447), new o(426, 0.554, 6283.076), new o(415, 0.497, 213.299), new o(312, 0.999, 6677.702), new o(307, 0.381, 6684.748), new o(302, 4.486, 3532.061), new o(299, 2.783, 6254.627), new o(293, 4.221, 20.775), new o(284, 5.769, 3149.164), new o(281, 5.882, 1349.867), new o(274, 0.542, 3340.545), new o(274, 0.134, 3340.68), new o(239, 5.372, 4136.91), new o(236, 5.755, 3333.499), new o(231, 1.282, 3870.303), new o(221, 3.505, 382.897), new o(204, 2.821, 1221.849), new o(193, 3.357, 3.59), new o(189, 1.491, 9492.146), new o(179, 1.006, 951.718), new o(174, 2.414, 553.569), new o(172, 0.439, 5486.778), new o(160, 3.949, 4562.461), new o(144, 1.419, 135.065), new o(140, 3.326, 2700.715), new o(138, 4.301, 7.114), new o(131, 4.045, 12303.068), new o(128, 2.208, 1592.596), new o(128, 1.807, 5088.629), new o(117, 3.128, 7903.073), new o(113, 3.701, 1589.073), new o(110, 1.052, 242.729), new o(105, 0.785, 8827.39), new o(100, 3.243, 11773.377)], w.g_L1MarsCoefficients = [new o(334085627474, 0, 0), new o(1458227, 3.6042605, 3340.6124267), new o(164901, 3.926313, 6681.224853), new o(19963, 4.26594, 10021.83728), new o(3452, 4.7321, 3.5231), new o(2485, 4.6128, 13362.4497), new o(842, 4.459, 2281.23), new o(538, 5.016, 398.149), new o(521, 4.994, 3344.136), new o(433, 2.561, 191.448), new o(430, 5.316, 155.42), new o(382, 3.539, 796.298), new o(314, 4.963, 16703.062), new o(283, 3.16, 2544.314), new o(206, 4.569, 2146.165), new o(169, 1.329, 3337.089), new o(158, 4.185, 1751.54), new o(134, 2.233, 0.98), new o(134, 5.974, 1748.016), new o(118, 6.024, 6151.534), new o(117, 2.213, 1059.382), new o(114, 2.129, 1194.447), new o(114, 5.428, 3738.761), new o(91, 1.1, 1349.87), new o(85, 3.91, 553.57), new o(83, 5.3, 6684.75), new o(81, 4.43, 529.69), new o(80, 2.25, 8962.46), new o(73, 2.5, 951.72), new o(73, 5.84, 242.73), new o(71, 3.86, 2914.01), new o(68, 5.02, 382.9), new o(65, 1.02, 3340.6), new o(65, 3.05, 3340.63), new o(62, 4.15, 3149.16), new o(57, 3.89, 4136.91), new o(48, 4.87, 213.3), new o(48, 1.18, 3333.5), new o(47, 1.31, 3185.19), new o(41, 0.71, 1592.6), new o(40, 2.73, 7.11), new o(40, 5.32, 20043.67), new o(33, 5.41, 6283.08), new o(28, 0.05, 9492.15), new o(27, 3.89, 1221.85), new o(27, 5.11, 2700.72)], w.g_L2MarsCoefficients = [new o(58016, 2.04979, 3340.61243), new o(54188, 0, 0), new o(13908, 2.45742, 6681.22485), new o(2465, 2.8, 10021.8373), new o(398, 3.141, 13362.45), new o(222, 3.194, 3.523), new o(121, 0.543, 155.42), new o(62, 3.49, 16703.06), new o(54, 3.54, 3344.14), new o(34, 6, 2281.23), new o(32, 4.14, 191.45), new o(30, 2, 796.3), new o(23, 4.33, 242.73), new o(22, 3.45, 398.15), new o(20, 5.42, 553.57), new o(16, 0.66, 0.98), new o(16, 6.11, 2146.17), new o(16, 1.22, 1748.02), new o(15, 6.1, 3185.19), new o(14, 4.02, 951.72), new o(14, 2.62, 1349.87), new o(13, 0.6, 1194.45), new o(12, 3.86, 6684.75), new o(11, 4.72, 2544.31), new o(10, 0.25, 382.9), new o(9, 0.68, 1059.38), new o(9, 3.83, 20043.67), new o(9, 3.88, 3738.76), new o(8, 5.46, 1751.54), new o(7, 2.58, 3149.16), new o(7, 2.38, 4136.91), new o(6, 5.48, 1592.6), new o(6, 2.34, 3097.88)], w.g_L3MarsCoefficients = [new o(1482, 0.4443, 3340.6124), new o(662, 0.885, 6681.225), new o(188, 1.288, 10021.837), new o(41, 1.65, 13362.45), new o(26, 0, 0), new o(23, 2.05, 155.42), new o(10, 1.58, 3.52), new o(8, 2, 16703.06), new o(5, 2.82, 242.73), new o(4, 2.02, 3344.14), new o(3, 4.59, 3185.19), new o(3, 0.65, 553.57)], w.g_L4MarsCoefficients = [new o(114, 3.1416, 0), new o(29, 5.64, 6681.22), new o(24, 5.14, 3340.61), new o(11, 6.03, 10021.84), new o(3, 0.13, 13362.45), new o(3, 3.56, 155.42), new o(1, 0.49, 16703.06), new o(1, 1.32, 242.73)], w.g_L5MarsCoefficients = [new o(1, 3.14, 0), new o(1, 4.04, 6681.22)], w.g_B0MarsCoefficients = [new o(3197135, 3.7683204, 3340.6124267), new o(298033, 4.10617, 6681.224853), new o(289105, 0, 0), new o(31366, 4.44651, 10021.83728), new o(3484, 4.7881, 13362.4497), new o(443, 5.026, 3344.136), new o(443, 5.652, 3337.089), new o(399, 5.131, 16703.062), new o(293, 3.793, 2281.23), new o(182, 6.136, 6151.534), new o(163, 4.264, 529.691), new o(160, 2.232, 1059.382), new o(149, 2.165, 5621.843), new o(143, 1.182, 3340.595), new o(143, 3.213, 3340.63), new o(139, 2.418, 8962.455)], w.g_B1MarsCoefficients = [new o(350069, 5.368478, 3340.612427), new o(14116, 3.14159, 0), new o(9671, 5.4788, 6681.2249), new o(1472, 3.2021, 10021.8373), new o(426, 3.408, 13362.45), new o(102, 0.776, 3337.089), new o(79, 3.72, 16703.06), new o(33, 3.46, 5621.84), new o(26, 2.48, 2281.23)], w.g_B2MarsCoefficients = [new o(16727, 0.60221, 3340.61243), new o(4987, 4.1416, 0), new o(302, 3.559, 6681.225), new o(26, 1.9, 13362.45), new o(21, 0.92, 10021.84), new o(12, 2.24, 3337.09), new o(8, 2.25, 16703.06)], w.g_B3MarsCoefficients = [new o(607, 1.981, 3340.612), new o(43, 0, 0), new o(14, 1.8, 6681.22), new o(3, 3.45, 10021.84)], w.g_B4MarsCoefficients = [new o(13, 0, 0), new o(11, 3.46, 3340.61), new o(1, 0.5, 6681.22)], w.g_R0MarsCoefficients = [new o(153033488, 0, 0), new o(14184953, 3.47971284, 3340.6124267), new o(660776, 3.817834, 6681.224853), new o(46179, 4.15595, 10021.83728), new o(8110, 5.5596, 2810.9215), new o(7485, 1.7724, 5621.8429), new o(5523, 1.3644, 2281.2305), new o(3825, 4.4941, 13362.4497), new o(2484, 4.9255, 2942.4634), new o(2307, 0.0908, 2544.3144), new o(1999, 5.3606, 3337.0893), new o(1960, 4.7425, 3344.1355), new o(1167, 2.1126, 5092.152), new o(1103, 5.0091, 398.149), new o(992, 5.839, 6151.534), new o(899, 4.408, 529.691), new o(807, 2.102, 1059.382), new o(798, 3.448, 796.298), new o(741, 1.499, 2146.165), new o(726, 1.245, 8432.764), new o(692, 2.134, 8962.455), new o(633, 0.894, 3340.595), new o(633, 2.924, 3340.63), new o(630, 1.287, 1751.54), new o(574, 0.829, 2914.014), new o(526, 5.383, 3738.761), new o(473, 5.199, 3127.313), new o(348, 4.832, 16703.062), new o(284, 2.907, 3532.061), new o(280, 5.257, 6283.076), new o(276, 1.218, 6254.627), new o(275, 2.908, 1748.016), new o(270, 3.764, 5884.927), new o(239, 2.037, 1194.447), new o(234, 5.105, 5486.778), new o(228, 3.255, 6872.673), new o(223, 4.199, 3149.164), new o(219, 5.583, 191.448), new o(208, 5.255, 3340.545), new o(208, 4.846, 3340.68), new o(186, 5.699, 6677.702), new o(183, 5.081, 6684.748), new o(179, 4.184, 3333.499), new o(176, 5.953, 3870.303), new o(164, 3.799, 4136.91)], w.g_R1MarsCoefficients = [new o(1107433, 2.0325052, 3340.6124267), new o(103176, 2.370718, 6681.224853), new o(12877, 0, 0), new o(10816, 2.70888, 10021.83728), new o(1195, 3.047, 13362.4497), new o(439, 2.888, 2281.23), new o(396, 3.423, 3344.136), new o(183, 1.584, 2544.314), new o(136, 3.385, 16703.062), new o(128, 6.043, 3337.089), new o(128, 0.63, 1059.382), new o(127, 1.954, 796.298), new o(118, 2.998, 2146.165), new o(88, 3.42, 398.15), new o(83, 3.86, 3738.76), new o(76, 4.45, 6151.53), new o(72, 2.76, 529.69), new o(67, 2.55, 1751.54), new o(66, 4.41, 1748.02), new o(58, 0.54, 1194.45), new o(54, 0.68, 8962.46), new o(51, 3.73, 6684.75), new o(49, 5.73, 3340.6), new o(49, 1.48, 3340.63), new o(48, 2.58, 3149.16), new o(48, 2.29, 2914.01), new o(39, 2.32, 4136.91)], w.g_R2MarsCoefficients = [new o(44242, 0.47931, 3340.61243), new o(8138, 0.87, 6681.2249), new o(1275, 1.2259, 10021.8373), new o(187, 1.573, 13362.45), new o(52, 3.14, 0), new o(41, 1.97, 3344.14), new o(27, 1.92, 16703.06), new o(18, 4.43, 2281.23), new o(12, 4.53, 3185.19), new o(10, 5.39, 1059.38), new o(10, 0.42, 796.3)], w.g_R3MarsCoefficients = [new o(1113, 5.1499, 3340.6124), new o(424, 5.613, 6681.225), new o(100, 5.997, 10021.837), new o(20, 0.08, 13362.45), new o(5, 3.14, 0), new o(3, 0.43, 16703.06)], w.g_R4MarsCoefficients = [new o(20, 3.58, 3340.61), new o(16, 4.05, 6681.22), new o(6, 4.46, 10021.84), new o(2, 4.84, 13362.45)], w.g_L0MercuryCoefficients = [new o(440250710, 0, 0), new o(40989415, 1.48302034, 26087.90314157), new o(5046294, 4.47785449, 52175.8062831), new o(855347, 1.165203, 78263.709425), new o(165590, 4.119692, 104351.612566), new o(34562, 0.77931, 130439.51571), new o(7583, 3.7135, 156527.4188), new o(3560, 1.512, 1109.3786), new o(1803, 4.1033, 5661.332), new o(1726, 0.3583, 182615.322), new o(1590, 2.9951, 25028.5212), new o(1365, 4.5992, 27197.2817), new o(1017, 0.8803, 31749.2352), new o(714, 1.541, 24978.525), new o(644, 5.303, 21535.95), new o(451, 6.05, 51116.424), new o(404, 3.282, 208703.225), new o(352, 5.242, 20426.571), new o(345, 2.792, 15874.618), new o(343, 5.765, 955.6), new o(339, 5.863, 25558.212), new o(325, 1.337, 53285.185), new o(273, 2.495, 529.691), new o(264, 3.917, 57837.138), new o(260, 0.987, 4551.953), new o(239, 0.113, 1059.382), new o(235, 0.267, 11322.664), new o(217, 0.66, 13521.751), new o(209, 2.092, 47623.853), new o(183, 2.629, 27043.503), new o(182, 2.434, 25661.305), new o(176, 4.536, 51066.428), new o(173, 2.452, 24498.83), new o(142, 3.36, 37410.567), new o(138, 0.291, 10213.286), new o(125, 3.721, 39609.655), new o(118, 2.781, 77204.327), new o(106, 4.206, 19804.827)], w.g_L1MercuryCoefficients = [new o(2608814706223, 0, 0), new o(1126008, 6.2170397, 26087.9031416), new o(303471, 3.055655, 52175.806283), new o(80538, 6.10455, 78263.70942), new o(21245, 2.83532, 104351.61257), new o(5592, 5.8268, 130439.5157), new o(1472, 2.5185, 156527.4188), new o(388, 5.48, 182615.322), new o(352, 3.052, 1109.379), new o(103, 2.149, 208703.225), new o(94, 6.12, 27197.28), new o(91, 0, 24978.52), new o(52, 5.62, 5661.33), new o(44, 4.57, 25028.52), new o(28, 3.04, 51066.43), new o(27, 5.09, 234791.13)], w.g_L2MercuryCoefficients = [new o(53050, 0, 0), new o(16904, 4.69072, 26087.90314), new o(7397, 1.3474, 52175.8063), new o(3018, 4.4564, 78263.7094), new o(1107, 1.264, 104351.6126), new o(378, 4.32, 130439.516), new o(123, 1.069, 156527.419), new o(39, 4.08, 182615.32), new o(15, 4.63, 1109.38), new o(12, 0.79, 208703.23)], w.g_L3MercuryCoefficients = [new o(188, 0.035, 52175.806), new o(142, 3.125, 26087.903), new o(97, 3, 78263.71), new o(44, 6.02, 104351.61), new o(35, 0, 0), new o(18, 2.78, 130439.52), new o(7, 5.82, 156527.42), new o(3, 2.57, 182615.32)], w.g_L4MercuryCoefficients = [new o(114, 3.1416, 0), new o(2, 2.03, 26087.9), new o(2, 1.42, 78263.71), new o(2, 4.5, 52175.81), new o(1, 4.5, 104351.61), new o(1, 1.27, 130439.52)], w.g_L5MercuryCoefficients = [new o(1, 3.14, 0)], w.g_B0MercuryCoefficients = [new o(11737529, 1.98357499, 26087.90314157), new o(2388077, 5.0373896, 52175.8062831), new o(1222840, 3.1415927, 0), new o(543252, 1.796444, 78263.709425), new o(129779, 4.832325, 104351.612566), new o(31867, 1.58088, 130439.51571), new o(7963, 4.6097, 156527.4188), new o(2014, 1.3532, 182615.322), new o(514, 4.378, 208703.325), new o(209, 2.02, 24978.525), new o(208, 4.918, 27197.282), new o(132, 1.119, 234791.128), new o(121, 1.813, 53285.185), new o(100, 5.657, 20426.571)], w.g_B1MercuryCoefficients = [new o(429151, 3.501698, 26087.903142), new o(146234, 3.141593, 0), new o(22675, 0.01515, 52175.80628), new o(10895, 0.4854, 78263.70942), new o(6353, 3.4294, 104351.6126), new o(2496, 0.1605, 130439.5157), new o(860, 3.185, 156527.419), new o(278, 6.21, 182615.322), new o(86, 2.95, 208703.23), new o(28, 0.29, 27197.28), new o(26, 5.98, 234791.13)], w.g_B2MercuryCoefficients = [new o(11831, 4.79066, 26087.90314), new o(1914, 0, 0), new o(1045, 1.2122, 52175.8063), new o(266, 4.434, 78263.709), new o(170, 1.623, 104351.613), new o(96, 4.8, 130439.52), new o(45, 1.61, 156527.42), new o(18, 4.67, 182615.32), new o(7, 1.43, 208703.23)], w.g_B3MercuryCoefficients = [new o(235, 0.354, 26087.903), new o(161, 0, 0), new o(19, 4.36, 52175.81), new o(6, 2.51, 78263.71), new o(5, 6.14, 104351.61), new o(3, 3.12, 130439.52), new o(2, 6.27, 156527.42)], w.g_B4MercuryCoefficients = [new o(4, 1.75, 26087.9), new o(1, 3.14, 0)], w.g_R0MercuryCoefficients = [new o(39528272, 0, 0), new o(7834132, 6.1923372, 26087.9031416), new o(795526, 2.959897, 52175.806283), new o(121282, 6.010642, 78263.709425), new o(21922, 2.7782, 104351.61257), new o(4354, 5.8289, 130439.5157), new o(918, 2.597, 156527.419), new o(290, 1.424, 25028.521), new o(260, 3.028, 27197.282), new o(202, 5.647, 182615.322), new o(201, 5.592, 31749.235), new o(142, 6.253, 24978.525), new o(100, 3.734, 21535.95)], w.g_R1MercuryCoefficients = [new o(217348, 4.656172, 26087.903142), new o(44142, 1.42386, 52175.80628), new o(10094, 4.47466, 78263.70942), new o(2433, 1.2423, 104351.6126), new o(1624, 0, 0), new o(604, 4.293, 130439.516), new o(153, 1.061, 156527.419), new o(39, 4.11, 182615.32)], w.g_R2MercuryCoefficients = [new o(3118, 3.0823, 26087.9031), new o(1245, 6.1518, 52175.8063), new o(425, 2.926, 78263.709), new o(136, 5.98, 104351.613), new o(42, 2.75, 130439.52), new o(22, 3.14, 0), new o(13, 5.8, 156527.42)], w.g_R3MercuryCoefficients = [new o(33, 1.68, 26087.9), new o(24, 4.63, 52175.81), new o(12, 1.39, 78263.71), new o(5, 4.44, 104351.61), new o(2, 1.21, 130439.52)], w.g_MoonCoefficients1 = [new ut(0, 0, 1, 0), new ut(2, 0, -1, 0), new ut(2, 0, 0, 0), new ut(0, 0, 2, 0), new ut(0, 1, 0, 0), new ut(0, 0, 0, 2), new ut(2, 0, -2, 0), new ut(2, -1, -1, 0), new ut(2, 0, 1, 0), new ut(2, -1, 0, 0), new ut(0, 1, -1, 0), new ut(1, 0, 0, 0), new ut(0, 1, 1, 0), new ut(2, 0, 0, -2), new ut(0, 0, 1, 2), new ut(0, 0, 1, -2), new ut(4, 0, -1, 0), new ut(0, 0, 3, 0), new ut(4, 0, -2, 0), new ut(2, 1, -1, 0), new ut(2, 1, 0, 0), new ut(1, 0, -1, 0), new ut(1, 1, 0, 0), new ut(2, -1, 1, 0), new ut(2, 0, 2, 0), new ut(4, 0, 0, 0), new ut(2, 0, -3, 0), new ut(0, 1, -2, 0), new ut(2, 0, -1, 2), new ut(2, -1, -2, 0), new ut(1, 0, 1, 0), new ut(2, -2, 0, 0), new ut(0, 1, 2, 0), new ut(0, 2, 0, 0), new ut(2, -2, -1, 0), new ut(2, 0, 1, -2), new ut(2, 0, 0, 2), new ut(4, -1, -1, 0), new ut(0, 0, 2, 2), new ut(3, 0, -1, 0), new ut(2, 1, 1, 0), new ut(4, -1, -2, 0), new ut(0, 2, -1, 0), new ut(2, 2, -1, 0), new ut(2, 1, -2, 0), new ut(2, -1, 0, -2), new ut(4, 0, 1, 0), new ut(0, 0, 4, 0), new ut(4, -1, 0, 0), new ut(1, 0, -2, 0), new ut(2, 1, 0, -2), new ut(0, 0, 2, -2), new ut(1, 1, 1, 0), new ut(3, 0, -2, 0), new ut(4, 0, -3, 0), new ut(2, -1, 2, 0), new ut(0, 2, 1, 0), new ut(1, 1, -1, 0), new ut(2, 0, 3, 0), new ut(2, 0, -1, -2)], w.g_MoonCoefficients2 = [new zt(6288774, -20905355), new zt(1274027, -3699111), new zt(658314, -2955968), new zt(213618, -569925), new zt(-185116, 48888), new zt(-114332, -3149), new zt(58793, 246158), new zt(57066, -152138), new zt(53322, -170733), new zt(45758, -204586), new zt(-40923, -129620), new zt(-34720, 108743), new zt(-30383, 104755), new zt(15327, 10321), new zt(-12528, 0), new zt(10980, 79661), new zt(10675, -34782), new zt(10034, -23210), new zt(8548, -21636), new zt(-7888, 24208), new zt(-6766, 30824), new zt(-5163, -8379), new zt(4987, -16675), new zt(4036, -12831), new zt(3994, -10445), new zt(3861, -11650), new zt(3665, 14403), new zt(-2689, -7003), new zt(-2602, 0), new zt(2390, 10056), new zt(-2348, 6322), new zt(2236, -9884), new zt(-2120, 5751), new zt(-2069, 0), new zt(2048, -4950), new zt(-1773, 4130), new zt(-1595, 0), new zt(1215, -3958), new zt(-1110, 0), new zt(-892, 3258), new zt(-810, 2616), new zt(759, -1897), new zt(-713, -2117), new zt(-700, 2354), new zt(691, 0), new zt(596, 0), new zt(549, -1423), new zt(537, -1117), new zt(520, -1571), new zt(-487, -1739), new zt(-399, 0), new zt(-381, -4421), new zt(351, 0), new zt(-340, 0), new zt(330, 0), new zt(327, 0), new zt(-323, 1165), new zt(299, 0), new zt(294, 0), new zt(0, 8752)], w.g_MoonCoefficients3 = [new ut(0, 0, 0, 1), new ut(0, 0, 1, 1), new ut(0, 0, 1, -1), new ut(2, 0, 0, -1), new ut(2, 0, -1, 1), new ut(2, 0, -1, -1), new ut(2, 0, 0, 1), new ut(0, 0, 2, 1), new ut(2, 0, 1, -1), new ut(0, 0, 2, -1), new ut(2, -1, 0, -1), new ut(2, 0, -2, -1), new ut(2, 0, 1, 1), new ut(2, 1, 0, -1), new ut(2, -1, -1, 1), new ut(2, -1, 0, 1), new ut(2, -1, -1, -1), new ut(0, 1, -1, -1), new ut(4, 0, -1, -1), new ut(0, 1, 0, 1), new ut(0, 0, 0, 3), new ut(0, 1, -1, 1), new ut(1, 0, 0, 1), new ut(0, 1, 1, 1), new ut(0, 1, 1, -1), new ut(0, 1, 0, -1), new ut(1, 0, 0, -1), new ut(0, 0, 3, 1), new ut(4, 0, 0, -1), new ut(4, 0, -1, 1), new ut(0, 0, 1, -3), new ut(4, 0, -2, 1), new ut(2, 0, 0, -3), new ut(2, 0, 2, -1), new ut(2, -1, 1, -1), new ut(2, 0, -2, 1), new ut(0, 0, 3, -1), new ut(2, 0, 2, 1), new ut(2, 0, -3, -1), new ut(2, 1, -1, 1), new ut(2, 1, 0, 1), new ut(4, 0, 0, 1), new ut(2, -1, 1, 1), new ut(2, -2, 0, -1), new ut(0, 0, 1, 3), new ut(2, 1, 1, -1), new ut(1, 1, 0, -1), new ut(1, 1, 0, 1), new ut(0, 1, -2, -1), new ut(2, 1, -1, -1), new ut(1, 0, 1, 1), new ut(2, -1, -2, -1), new ut(0, 1, 2, 1), new ut(4, 0, -2, -1), new ut(4, -1, -1, -1), new ut(1, 0, 1, -1), new ut(4, 0, 1, -1), new ut(1, 0, -1, -1), new ut(4, -1, 0, -1), new ut(2, -2, 0, 1)], w.g_MoonCoefficients4 = [5128122, 280602, 277693, 173237, 55413, 46271, 32573, 17198, 9266, 8822, 8216, 4324, 4200, -3359, 2463, 2211, 2065, -1870, 1828, -1794, -1749, -1565, -1491, -1475, -1410, -1344, -1335, 1107, 1021, 833, 777, 671, 607, 596, 491, -451, 439, 422, 421, -366, -351, 331, 315, 302, -283, -229, 223, 223, -220, -220, -185, 181, -177, 176, 166, -164, 132, -119, 115, 107], w.g_MoonPerigeeApogeeCoefficients1 = [new it(2, 0, 0, -1.6769, 0), new it(4, 0, 0, 0.4589, 0), new it(6, 0, 0, -0.1856, 0), new it(8, 0, 0, 0.0883, 0), new it(2, -1, 0, -0.0773, 19e-5), new it(0, 1, 0, 0.0502, -13e-5), new it(10, 0, 0, -0.046, 0), new it(4, -1, 0, 0.0422, -11e-5), new it(6, -1, 0, -0.0256, 0), new it(12, 0, 0, 0.0253, 0), new it(1, 0, 0, 0.0237, 0), new it(8, -1, 0, 0.0162, 0), new it(14, 0, 0, -0.0145, 0), new it(0, 0, 2, 0.0129, 0), new it(3, 0, 0, -0.0112, 0), new it(10, -1, 0, -0.0104, 0), new it(16, 0, 0, 86e-4, 0), new it(12, -1, 0, 69e-4, 0), new it(5, 0, 0, 66e-4, 0), new it(2, 0, 2, -53e-4, 0), new it(18, 0, 0, -52e-4, 0), new it(14, -1, 0, -46e-4, 0), new it(7, 0, 0, -41e-4, 0), new it(2, 1, 0, 4e-3, 0), new it(20, 0, 0, 32e-4, 0), new it(1, 1, 0, -32e-4, 0), new it(16, -1, 0, 31e-4, 0), new it(4, 1, 0, -29e-4, 0), new it(9, 0, 0, 27e-4, 0), new it(4, 0, 2, 27e-4, 0), new it(2, -2, 0, -27e-4, 0), new it(4, -2, 0, 24e-4, 0), new it(6, -2, 0, -21e-4, 0), new it(22, 0, 0, -21e-4, 0), new it(18, -1, 0, -21e-4, 0), new it(6, 1, 0, 19e-4, 0), new it(11, 0, 0, -18e-4, 0), new it(8, 1, 0, -14e-4, 0), new it(4, 0, -2, -14e-4, 0), new it(6, 0, 2, -14e-4, 0), new it(3, 1, 0, 14e-4, 0), new it(5, 1, 0, -14e-4, 0), new it(13, 0, 0, 13e-4, 0), new it(20, -1, 0, 13e-4, 0), new it(3, 2, 0, 11e-4, 0), new it(4, -2, 2, -11e-4, 0), new it(1, 2, 0, -11e-4, 0), new it(22, -1, 0, -9e-4, 0), new it(0, 0, 4, -8e-4, 0), new it(6, 0, -2, 8e-4, 0), new it(2, 1, -2, 8e-4, 0), new it(0, 2, 0, 7e-4, 0), new it(0, -1, 2, 7e-4, 0), new it(2, 0, 4, 7e-4, 0), new it(0, -2, 2, -6e-4, 0), new it(2, 2, -2, -6e-4, 0), new it(24, 0, 0, 6e-4, 0), new it(4, 0, -4, 5e-4, 0), new it(2, 2, 0, 5e-4, 0), new it(1, -1, 0, -4e-4, 0)], w.g_MoonPerigeeApogeeCoefficients2 = [new it(2, 0, 0, 0.4392, 0), new it(4, 0, 0, 0.0684, 0), new it(0, 1, 0, 0.0456, -11e-5), new it(2, -1, 0, 0.0426, -11e-5), new it(0, 0, 2, 0.0212, 0), new it(1, 0, 0, -0.0189, 0), new it(6, 0, 0, 0.0144, 0), new it(4, -1, 0, 0.0113, 0), new it(2, 0, 2, 47e-4, 0), new it(1, 1, 0, 36e-4, 0), new it(8, 0, 0, 35e-4, 0), new it(6, -1, 0, 34e-4, 0), new it(2, 0, -2, -34e-4, 0), new it(2, -2, 0, 22e-4, 0), new it(3, 0, 0, -17e-4, 0), new it(4, 0, 2, 13e-4, 0), new it(8, -1, 0, 11e-4, 0), new it(4, -2, 0, 1e-3, 0), new it(10, 0, 0, 9e-4, 0), new it(3, 1, 0, 7e-4, 0), new it(0, 2, 0, 6e-4, 0), new it(2, 1, 0, 5e-4, 0), new it(2, 2, 0, 5e-4, 0), new it(6, 0, 2, 4e-4, 0), new it(6, -2, 0, 4e-4, 0), new it(10, -1, 0, 4e-4, 0), new it(5, 0, 0, -4e-4, 0), new it(4, 0, -2, -4e-4, 0), new it(0, 1, 2, 3e-4, 0), new it(12, 0, 0, 3e-4, 0), new it(2, -1, 2, 3e-4, 0), new it(1, -1, 0, -3e-4, 0)], w.g_MoonPerigeeApogeeCoefficients3 = [new it(2, 0, 0, 63.224, 0), new it(4, 0, 0, -6.99, 0), new it(2, -1, 0, 2.834, 0), new it(2, -1, 0, 0, -71e-4), new it(6, 0, 0, 1.927, 0), new it(1, 0, 0, -1.263, 0), new it(8, 0, 0, -0.702, 0), new it(0, 1, 0, 0.696, 0), new it(0, 1, 0, 0, -17e-4), new it(0, 0, 2, -0.69, 0), new it(4, -1, 0, -0.629, 0), new it(4, -1, 0, 0, 16e-4), new it(2, 0, -2, -0.392, 0), new it(10, 0, 0, 0.297, 0), new it(6, -1, 0, 0.26, 0), new it(3, 0, 0, 0.201, 0), new it(2, 1, 0, -0.161, 0), new it(1, 1, 0, 0.157, 0), new it(12, 0, 0, -0.138, 0), new it(8, -1, 0, -0.127, 0), new it(2, 0, 2, 0.104, 0), new it(2, -2, 0, 0.104, 0), new it(5, 0, 0, -0.079, 0), new it(14, 0, 0, 0.068, 0), new it(10, -1, 0, 0.067, 0), new it(4, 1, 0, 0.054, 0), new it(12, -1, 0, -0.038, 0), new it(4, -2, 0, -0.038, 0), new it(7, 0, 0, 0.037, 0), new it(4, 0, 2, -0.037, 0), new it(16, 0, 0, -0.035, 0), new it(3, 1, 0, -0.03, 0), new it(1, -1, 0, 0.029, 0), new it(6, 1, 0, -0.025, 0), new it(0, 2, 0, 0.023, 0), new it(14, -1, 0, 0.023, 0), new it(2, 2, 0, -0.023, 0), new it(6, -2, 0, 0.022, 0), new it(2, -1, -2, -0.021, 0), new it(9, 0, 0, -0.02, 0), new it(18, 0, 0, 0.019, 0), new it(6, 0, 2, 0.017, 0), new it(0, -1, 2, 0.014, 0), new it(16, -1, 0, -0.014, 0), new it(4, 0, -20, 0.013, 0), new it(8, 1, 0, 0.012, 0), new it(11, 0, 0, 0.011, 0), new it(5, 1, 0, 0.01, 0), new it(20, 0, 0, -0.01, 0)], w.g_MoonPerigeeApogeeCoefficients4 = [new it(2, 0, 0, -9.147, 0), new it(1, 0, 0, -0.841, 0), new it(0, 0, 2, 0.697, 0), new it(0, 1, 0, -0.656, 16e-4), new it(4, 0, 0, 0.355, 0), new it(2, -1, 0, 0.159, 0), new it(1, 1, 0, 0.127, 0), new it(4, -1, 0, 0.065, 0), new it(6, 0, 0, 0.052, 0), new it(2, 1, 0, 0.043, 0), new it(2, 0, 2, 0.031, 0), new it(2, 0, -2, -0.023, 0), new it(2, -2, 0, 0.022, 0), new it(2, 2, 0, 0.019, 0), new it(0, 2, 0, -0.016, 0), new it(6, -1, 0, 0.014, 0), new it(8, 0, 0, 0.01, 0)], w.g_L0NC = [new o(531188633, 0, 0), new o(1798476, 2.9010127, 38.1330356), new o(1019728, 0.4858092, 1.4844727), new o(124532, 4.830081, 36.648563), new o(42064, 5.41055, 2.96895), new o(37715, 6.09222, 35.16409), new o(33785, 1.24489, 76.26607), new o(16483, 8e-5, 491.55793), new o(9199, 4.9375, 39.6175), new o(8994, 0.2746, 175.1661), new o(4216, 1.9871, 73.2971), new o(3365, 1.0359, 33.6796), new o(2285, 4.2061, 4.4534), new o(1434, 2.7834, 74.7816), new o(900, 2.076, 109.946), new o(745, 3.19, 71.813), new o(506, 5.748, 114.399), new o(400, 0.35, 1021.249), new o(345, 3.462, 41.102), new o(340, 3.304, 77.751), new o(323, 2.248, 32.195), new o(306, 0.497, 0.521), new o(287, 4.505, 0.048), new o(282, 2.246, 146.594), new o(267, 4.889, 0.963), new o(252, 5.782, 388.465), new o(245, 1.247, 9.561), new o(233, 2.505, 137.033), new o(227, 1.797, 453.425), new o(170, 3.324, 108.461), new o(151, 2.192, 33.94), new o(150, 2.997, 5.938), new o(148, 0.859, 111.43), new o(119, 3.677, 2.448), new o(109, 2.416, 183.243), new o(103, 0.041, 0.261), new o(103, 4.404, 70.328), new o(102, 5.705, 0.112)], w.g_L1NC = [new o(3837687717, 0, 0), new o(16604, 4.86319, 1.48447), new o(15807, 2.27923, 38.13304), new o(3335, 3.682, 76.2661), new o(1306, 3.6732, 2.9689), new o(605, 1.505, 35.164), new o(179, 3.453, 39.618), new o(107, 2.451, 4.453), new o(106, 2.755, 33.68), new o(73, 5.49, 36.65), new o(57, 1.86, 114.4), new o(57, 5.22, 0.52), new o(35, 4.52, 74.78), new o(32, 5.9, 77.75), new o(30, 3.67, 388.47), new o(29, 5.17, 9.56), new o(29, 5.17, 2.45), new o(26, 5.25, 168.05)], w.g_L2NC = [new o(53893, 0, 0), new o(296, 1.855, 1.484), new o(281, 1.191, 38.133), new o(270, 5.721, 76.266), new o(23, 1.21, 2.97), new o(9, 4.43, 35.16), new o(7, 0.54, 2.45)], w.g_L3NC = [new o(31, 0, 0), new o(15, 1.35, 76.27), new o(12, 6.04, 1.48), new o(12, 6.11, 38.13)], w.g_L4NC = [new o(114, 3.142, 0)], w.g_B0NC = [new o(3088623, 1.4410437, 38.1330356), new o(27789, 5.91272, 76.26607), new o(27624, 0, 0), new o(15448, 3.50877, 39.61751), new o(15355, 2.52124, 36.64856), new o(2e3, 1.51, 74.7816), new o(1968, 4.3778, 1.4845), new o(1015, 3.2156, 35.1641), new o(606, 2.802, 73.297), new o(595, 2.129, 41.102), new o(589, 3.187, 2.969), new o(402, 4.169, 114.399), new o(280, 1.682, 77.751), new o(262, 3.767, 213.299), new o(254, 3.271, 453.425), new o(206, 4.257, 529.691), new o(140, 3.53, 137.033)], w.g_B1NC = [new o(227279, 3.807931, 38.133036), new o(1803, 1.9758, 76.2661), new o(1433, 3.1416, 0), new o(1386, 4.8256, 36.6486), new o(1073, 6.0805, 39.6175), new o(148, 3.858, 74.782), new o(136, 0.478, 1.484), new o(70, 6.19, 35.16), new o(52, 5.05, 73.3), new o(43, 0.31, 114.4), new o(37, 4.89, 41.1), new o(37, 5.76, 2.97), new o(26, 5.22, 213.3)], w.g_B2NC = [new o(9691, 5.5712, 38.133), new o(79, 3.63, 76.27), new o(72, 0.45, 36.65), new o(59, 3.14, 0), new o(30, 1.61, 39.62), new o(6, 5.61, 74.78)], w.g_B3NC = [new o(273, 1.017, 38.133), new o(2, 0, 0), new o(2, 2.37, 36.65), new o(2, 5.33, 76.27)], w.g_B4NC = [new o(6, 2.67, 38.13)], w.g_R0NC = [new o(3007013206, 0, 0), new o(27062259, 1.32999459, 38.13303564), new o(1691764, 3.2518614, 36.6485629), new o(807831, 5.185928, 1.484473), new o(537761, 4.521139, 35.16409), new o(495726, 1.571057, 491.557929), new o(274572, 1.845523, 175.16606), new o(135134, 3.372206, 39.617508), new o(121802, 5.797544, 76.266071), new o(100895, 0.377027, 73.297126), new o(69792, 3.79617, 2.96895), new o(46688, 5.74938, 33.67962), new o(24594, 0.50802, 109.94569), new o(16939, 1.59422, 71.81265), new o(14230, 1.07786, 74.7816), new o(12012, 1.92062, 1021.24889), new o(8395, 0.6782, 146.5943), new o(7572, 1.0715, 388.4652), new o(5721, 2.5906, 4.4534), new o(4840, 1.9069, 41.102), new o(4483, 2.9057, 529.691), new o(4421, 1.7499, 108.4612), new o(4354, 0.6799, 32.1951), new o(4270, 3.4134, 453.4249), new o(3381, 0.8481, 183.2428), new o(2881, 1.986, 137.033), new o(2879, 3.6742, 350.3321), new o(2636, 3.0976, 213.2991), new o(2530, 5.7984, 490.0735), new o(2523, 0.4863, 493.0424), new o(2306, 2.8096, 70.3282), new o(2087, 0.6186, 33.9402)], w.g_R1NC = [new o(236339, 0.70498, 38.133036), new o(13220, 3.32015, 1.48447), new o(8622, 6.2163, 35.1641), new o(2702, 1.8814, 39.6175), new o(2155, 2.0943, 2.9689), new o(2153, 5.1687, 76.2661), new o(1603, 0, 0), new o(1464, 1.1842, 33.6796), new o(1136, 3.9189, 36.6486), new o(898, 5.241, 388.465), new o(790, 0.533, 168.053), new o(760, 0.021, 182.28), new o(607, 1.077, 1021.249), new o(572, 3.401, 484.444), new o(561, 2.887, 498.671)], w.g_R2NC = [new o(4247, 5.8991, 38.133), new o(218, 0.346, 1.484), new o(163, 2.239, 168.053), new o(156, 4.594, 182.28), new o(127, 2.848, 35.164)], w.g_R3NC = [new o(166, 4.552, 38.133)], w.g_NuC = [new Nt(0, 0, 0, 0, 1, -171996, -174.2, 92025, 8.9), new Nt(-2, 0, 0, 2, 2, -13187, -1.6, 5736, -3.1), new Nt(0, 0, 0, 2, 2, -2274, -0.2, 977, -0.5), new Nt(0, 0, 0, 0, 2, 2062, 0.2, -895, 0.5), new Nt(0, 1, 0, 0, 0, 1426, -3.4, 54, -0.1), new Nt(0, 0, 1, 0, 0, 712, 0.1, -7, 0), new Nt(-2, 1, 0, 2, 2, -517, 1.2, 224, -0.6), new Nt(0, 0, 0, 2, 1, -386, -0.4, 200, 0), new Nt(0, 0, 1, 2, 2, -301, 0, 129, -0.1), new Nt(-2, -1, 0, 2, 2, 217, -0.5, -95, 0.3), new Nt(-2, 0, 1, 0, 0, -158, 0, 0, 0), new Nt(-2, 0, 0, 2, 1, 129, 0.1, -70, 0), new Nt(0, 0, -1, 2, 2, 123, 0, -53, 0), new Nt(2, 0, 0, 0, 0, 63, 0, 0, 0), new Nt(0, 0, 1, 0, 1, 63, 0.1, -33, 0), new Nt(2, 0, -1, 2, 2, -59, 0, 26, 0), new Nt(0, 0, -1, 0, 1, -58, -0.1, 32, 0), new Nt(0, 0, 1, 2, 1, -51, 0, 27, 0), new Nt(-2, 0, 2, 0, 0, 48, 0, 0, 0), new Nt(0, 0, -2, 2, 1, 46, 0, -24, 0), new Nt(2, 0, 0, 2, 2, -38, 0, 16, 0), new Nt(0, 0, 2, 2, 2, -31, 0, 13, 0), new Nt(0, 0, 2, 0, 0, 29, 0, 0, 0), new Nt(-2, 0, 1, 2, 2, 29, 0, -12, 0), new Nt(0, 0, 0, 2, 0, 26, 0, 0, 0), new Nt(-2, 0, 0, 2, 0, -22, 0, 0, 0), new Nt(0, 0, -1, 2, 1, 21, 0, -10, 0), new Nt(0, 2, 0, 0, 0, 17, -0.1, 0, 0), new Nt(2, 0, -1, 0, 1, 16, 0, -8, 0), new Nt(-2, 2, 0, 2, 2, -16, 0.1, 7, 0), new Nt(0, 1, 0, 0, 1, -15, 0, 9, 0), new Nt(-2, 0, 1, 0, 1, -13, 0, 7, 0), new Nt(0, -1, 0, 0, 1, -12, 0, 6, 0), new Nt(0, 0, 2, -2, 0, 11, 0, 0, 0), new Nt(2, 0, -1, 2, 1, -10, 0, 5, 0), new Nt(2, 0, 1, 2, 2, -8, 0, 3, 0), new Nt(0, 1, 0, 2, 2, 7, 0, -3, 0), new Nt(-2, 1, 1, 0, 0, -7, 0, 0, 0), new Nt(0, -1, 0, 2, 2, -7, 0, 3, 0), new Nt(2, 0, 0, 2, 1, -7, 0, 3, 0), new Nt(2, 0, 1, 0, 0, 6, 0, 0, 0), new Nt(-2, 0, 2, 2, 2, 6, 0, -3, 0), new Nt(-2, 0, 1, 2, 1, 6, 0, -3, 0), new Nt(2, 0, -2, 0, 1, -6, 0, 3, 0), new Nt(2, 0, 0, 0, 1, -6, 0, 3, 0), new Nt(0, -1, 1, 0, 0, 5, 0, 0, 0), new Nt(-2, -1, 0, 2, 1, -5, 0, 3, 0), new Nt(-2, 0, 0, 0, 1, -5, 0, 3, 0), new Nt(0, 0, 2, 2, 1, -5, 0, 3, 0), new Nt(-2, 0, 2, 0, 1, 4, 0, 0, 0), new Nt(-2, 1, 0, 2, 1, 4, 0, 0, 0), new Nt(0, 0, 1, -2, 0, 4, 0, 0, 0), new Nt(-1, 0, 1, 0, 0, -4, 0, 0, 0), new Nt(-2, 1, 0, 0, 0, -4, 0, 0, 0), new Nt(1, 0, 0, 0, 0, -4, 0, 0, 0), new Nt(0, 0, 1, 2, 0, 3, 0, 0, 0), new Nt(0, 0, -2, 2, 2, -3, 0, 0, 0), new Nt(-1, -1, 1, 0, 0, -3, 0, 0, 0), new Nt(0, 1, 1, 0, 0, -3, 0, 0, 0), new Nt(0, -1, 1, 2, 2, -3, 0, 0, 0), new Nt(2, -1, -1, 2, 2, -3, 0, 0, 0), new Nt(0, 0, 3, 2, 2, -3, 0, 0, 0), new Nt(2, -1, 0, 2, 2, -3, 0, 0, 0)], w.g_AAParallax_C1 = Math.sin(y.d2R(y.dmS2D(0, 0, 8.794))), w.g_PlutoArgumentCoefficients = [new _e(0, 0, 1), new _e(0, 0, 2), new _e(0, 0, 3), new _e(0, 0, 4), new _e(0, 0, 5), new _e(0, 0, 6), new _e(0, 1, -1), new _e(0, 1, 0), new _e(0, 1, 1), new _e(0, 1, 2), new _e(0, 1, 3), new _e(0, 2, -2), new _e(0, 2, -1), new _e(0, 2, 0), new _e(1, -1, 0), new _e(1, -1, 1), new _e(1, 0, -3), new _e(1, 0, -2), new _e(1, 0, -1), new _e(1, 0, 0), new _e(1, 0, 1), new _e(1, 0, 2), new _e(1, 0, 3), new _e(1, 0, 4), new _e(1, 1, -3), new _e(1, 1, -2), new _e(1, 1, -1), new _e(1, 1, 0), new _e(1, 1, 1), new _e(1, 1, 3), new _e(2, 0, -6), new _e(2, 0, -5), new _e(2, 0, -4), new _e(2, 0, -3), new _e(2, 0, -2), new _e(2, 0, -1), new _e(2, 0, 0), new _e(2, 0, 1), new _e(2, 0, 2), new _e(2, 0, 3), new _e(3, 0, -2), new _e(3, 0, -1), new _e(3, 0, 0)], w.g_PlutoLongitudeCoefficients = [new st(-19799805, 19850055), new st(897144, -4954829), new st(611149, 1211027), new st(-341243, -189585), new st(129287, -34992), new st(-38164, 30893), new st(20442, -9987), new st(-4063, -5071), new st(-6016, -3336), new st(-3956, 3039), new st(-667, 3572), new st(1276, 501), new st(1152, -917), new st(630, -1277), new st(2571, -459), new st(899, -1449), new st(-1016, 1043), new st(-2343, -1012), new st(7042, 788), new st(1199, -338), new st(418, -67), new st(120, -274), new st(-60, -159), new st(-82, -29), new st(-36, -29), new st(-40, 7), new st(-14, 22), new st(4, 13), new st(5, 2), new st(-1, 0), new st(2, 0), new st(-4, 5), new st(4, -7), new st(14, 24), new st(-49, -34), new st(163, -48), new st(9, -24), new st(-4, 1), new st(-3, 1), new st(1, 3), new st(-3, -1), new st(5, -3), new st(0, 0)], w.g_PlutoLatitudeCoefficients = [new st(-5452852, -14974862), new st(3527812, 1672790), new st(-1050748, 327647), new st(178690, -292153), new st(18650, 100340), new st(-30697, -25823), new st(4878, 11248), new st(226, -64), new st(2030, -836), new st(69, -604), new st(-247, -567), new st(-57, 1), new st(-122, 175), new st(-49, -164), new st(-197, 199), new st(-25, 217), new st(589, -248), new st(-269, 711), new st(185, 193), new st(315, 807), new st(-130, -43), new st(5, 3), new st(2, 17), new st(2, 5), new st(2, 3), new st(3, 1), new st(2, -1), new st(1, -1), new st(0, -1), new st(0, 0), new st(0, -2), new st(2, 2), new st(-7, 0), new st(10, -8), new st(-3, 20), new st(6, 5), new st(14, 17), new st(-2, 0), new st(0, 0), new st(0, 0), new st(0, 1), new st(0, 0), new st(1, 0)], w.g_PlutoRadiusCoefficients = [new st(66865439, 68951812), new st(-11827535, -332538), new st(1593179, -1438890), new st(-18444, 483220), new st(-65977, -85431), new st(31174, -6032), new st(-5794, 22161), new st(4601, 4032), new st(-1729, 234), new st(-415, 702), new st(239, 723), new st(67, -67), new st(1034, -451), new st(-129, 504), new st(480, -231), new st(2, -441), new st(-3359, 265), new st(7856, -7832), new st(36, 45763), new st(8663, 8547), new st(-809, -769), new st(263, -144), new st(-126, 32), new st(-35, -16), new st(-19, -4), new st(-15, 8), new st(-4, 12), new st(5, 6), new st(3, 1), new st(6, -2), new st(2, 2), new st(-2, -2), new st(14, 13), new st(-63, 13), new st(136, -236), new st(273, 1065), new st(251, 149), new st(-25, -9), new st(9, -2), new st(-8, 7), new st(2, -10), new st(19, 35), new st(10, 3)], w.g_L0SaturnCoefficients = [new o(87401354, 0, 0), new o(11107660, 3.9620509, 213.29909544), new o(1414151, 4.5858152, 7.113547), new o(398379, 0.52112, 206.185548), new o(350769, 3.303299, 426.598191), new o(206816, 0.246584, 103.092774), new o(79271, 3.84007, 220.41264), new o(23990, 4.66977, 110.20632), new o(16574, 0.43719, 419.48464), new o(15820, 0.93809, 632.78374), new o(15054, 2.7167, 639.89729), new o(14907, 5.76903, 316.39187), new o(14610, 1.56519, 3.93215), new o(13160, 4.44891, 14.22709), new o(13005, 5.98119, 11.0457), new o(10725, 3.1294, 202.2534), new o(6126, 1.7633, 277.035), new o(5863, 0.2366, 529.691), new o(5228, 4.2078, 3.1814), new o(5020, 3.1779, 433.7117), new o(4593, 0.6198, 199.072), new o(4006, 2.2448, 63.7359), new o(3874, 3.2228, 138.5175), new o(3269, 0.7749, 949.1756), new o(2954, 0.9828, 95.9792), new o(2461, 2.0316, 735.8765), new o(1758, 3.2658, 522.5774), new o(1640, 5.505, 846.0828), new o(1581, 4.3727, 309.2783), new o(1391, 4.0233, 323.5054), new o(1124, 2.8373, 415.5525), new o(1087, 4.1834, 2.4477), new o(1017, 3.717, 227.5262), new o(957, 0.507, 1265.567), new o(853, 3.421, 175.166), new o(849, 3.191, 209.367), new o(789, 5.007, 0.963), new o(749, 2.144, 853.196), new o(744, 5.253, 224.345), new o(687, 1.747, 1052.268), new o(654, 1.599, 0.048), new o(634, 2.299, 412.371), new o(625, 0.97, 210.118), new o(580, 3.093, 74.782), new o(546, 2.127, 350.332), new o(543, 1.518, 9.561), new o(530, 4.449, 117.32), new o(478, 2.965, 137.033), new o(474, 5.475, 742.99), new o(452, 1.044, 490.334), new o(449, 1.29, 127.472), new o(372, 2.278, 217.231), new o(355, 3.013, 838.969), new o(347, 1.539, 340.771), new o(343, 0.246, 0.521), new o(330, 0.247, 1581.959), new o(322, 0.961, 203.738), new o(322, 2.572, 647.011), new o(309, 3.495, 216.48), new o(287, 2.37, 351.817), new o(278, 0.4, 211.815), new o(249, 1.47, 1368.66), new o(227, 4.91, 12.53), new o(220, 4.204, 200.769), new o(209, 1.345, 625.67), new o(208, 0.483, 1162.475), new o(208, 1.283, 39.357), new o(204, 6.011, 265.989), new o(185, 3.503, 149.563), new o(184, 0.973, 4.193), new o(182, 5.491, 2.921), new o(174, 1.863, 0.751), new o(165, 0.44, 5.417), new o(149, 5.736, 52.69), new o(148, 1.535, 5.629), new o(146, 6.231, 195.14), new o(140, 4.295, 21.341), new o(131, 4.068, 10.295), new o(125, 6.277, 1898.351), new o(122, 1.976, 4.666), new o(118, 5.341, 554.07), new o(117, 2.679, 1155.361), new o(114, 5.594, 1059.382), new o(112, 1.105, 191.208), new o(110, 0.166, 1.484), new o(109, 3.438, 536.805), new o(107, 4.012, 956.289), new o(104, 2.192, 88.866), new o(103, 1.197, 1685.052), new o(101, 4.965, 269.921)], w.g_L1SaturnCoefficients = [new o(21354295596, 0, 0), new o(1296855, 1.8282054, 213.2990954), new o(564348, 2.885001, 7.113547), new o(107679, 2.277699, 206.185548), new o(98323, 1.0807, 426.59819), new o(40255, 2.04128, 220.41264), new o(19942, 1.27955, 103.09277), new o(10512, 2.7488, 14.22709), new o(6939, 0.4049, 639.8973), new o(4803, 2.4419, 419.4846), new o(4056, 2.9217, 110.2063), new o(3769, 3.6497, 3.9322), new o(3385, 2.4169, 3.1814), new o(3302, 1.2626, 433.7117), new o(3071, 2.3274, 199.072), new o(1953, 3.5639, 11.0457), new o(1249, 2.628, 95.9792), new o(922, 1.961, 227.526), new o(706, 4.417, 529.691), new o(650, 6.174, 202.253), new o(628, 6.111, 309.278), new o(487, 6.04, 853.196), new o(479, 4.988, 522.577), new o(468, 4.617, 63.736), new o(417, 2.117, 323.505), new o(408, 1.299, 209.367), new o(352, 2.317, 632.784), new o(344, 3.959, 412.371), new o(340, 3.634, 316.392), new o(336, 3.772, 735.877), new o(332, 2.861, 210.118), new o(289, 2.733, 117.32), new o(281, 5.744, 2.448), new o(266, 0.543, 647.011), new o(230, 1.644, 216.48), new o(192, 2.965, 224.345), new o(173, 4.077, 846.083), new o(167, 2.597, 21.341), new o(136, 2.286, 10.295), new o(131, 3.441, 742.99), new o(128, 4.095, 217.231), new o(109, 6.161, 415.552), new o(98, 4.73, 838.97), new o(94, 3.48, 1052.27), new o(92, 3.95, 88.87), new o(87, 1.22, 440.83), new o(83, 3.11, 625.67), new o(78, 6.24, 302.16), new o(67, 0.29, 4.67), new o(66, 5.65, 9.56), new o(62, 4.29, 127.47), new o(62, 1.83, 195.14), new o(58, 2.48, 191.96), new o(57, 5.02, 137.03), new o(55, 0.28, 74.78), new o(54, 5.13, 490.33), new o(51, 1.46, 536.8), new o(47, 1.18, 149.56), new o(47, 5.15, 515.46), new o(46, 2.23, 956.29), new o(44, 2.71, 5.42), new o(40, 0.41, 269.92), new o(40, 3.89, 728.76), new o(38, 0.65, 422.67), new o(38, 2.53, 12.53), new o(37, 3.78, 2.92), new o(35, 6.08, 5.63), new o(34, 3.21, 1368.66), new o(33, 4.64, 277.03), new o(33, 5.43, 1066.5), new o(33, 0.3, 351.82), new o(32, 4.39, 1155.36), new o(31, 2.43, 52.69), new o(30, 2.84, 203), new o(30, 6.19, 284.15), new o(30, 3.39, 1059.38), new o(29, 2.03, 330.62), new o(28, 2.74, 265.99), new o(26, 4.51, 340.77)], w.g_L2SaturnCoefficients = [new o(116441, 1.179879, 7.113547), new o(91921, 0.07425, 213.2991), new o(90592, 0, 0), new o(15277, 4.06492, 206.18555), new o(10631, 0.25778, 220.41264), new o(10605, 5.40964, 426.59819), new o(4265, 1.046, 14.2271), new o(1216, 2.9186, 103.0928), new o(1165, 4.6094, 639.8973), new o(1082, 5.6913, 433.7117), new o(1045, 4.0421, 199.072), new o(1020, 0.6337, 3.1814), new o(634, 4.388, 419.485), new o(549, 5.573, 3.932), new o(457, 1.268, 110.206), new o(425, 0.209, 227.526), new o(274, 4.288, 95.979), new o(162, 1.381, 11.046), new o(129, 1.566, 309.278), new o(117, 3.881, 853.196), new o(105, 4.9, 647.011), new o(101, 0.893, 21.341), new o(96, 2.91, 316.39), new o(95, 5.63, 412.37), new o(85, 5.73, 209.37), new o(83, 6.05, 216.48), new o(82, 1.02, 117.32), new o(75, 4.76, 210.12), new o(67, 0.46, 522.58), new o(66, 0.48, 10.29), new o(64, 0.35, 323.51), new o(61, 4.88, 632.78), new o(53, 2.75, 529.69), new o(46, 5.69, 440.83), new o(45, 1.67, 202.25), new o(42, 5.71, 88.87), new o(32, 0.07, 63.74), new o(32, 1.67, 302.16), new o(31, 4.16, 191.96), new o(27, 0.83, 224.34), new o(25, 5.66, 735.88), new o(20, 5.94, 217.23), new o(18, 4.9, 625.67), new o(17, 1.63, 742.99), new o(16, 0.58, 515.46), new o(14, 0.21, 838.97), new o(14, 3.76, 195.14), new o(12, 4.72, 203), new o(12, 0.13, 234.64), new o(12, 3.12, 846.08), new o(11, 5.92, 536.8), new o(11, 5.6, 728.76), new o(11, 3.2, 1066.5), new o(10, 4.99, 422.67), new o(10, 0.26, 330.62), new o(10, 4.15, 860.31), new o(9, 0.46, 956.29), new o(8, 2.14, 269.92), new o(8, 5.25, 429.78), new o(8, 4.03, 9.56), new o(7, 5.4, 1052.27), new o(6, 4.46, 284.15), new o(6, 5.93, 405.26)], w.g_L3SaturnCoefficients = [new o(16039, 5.73945, 7.11355), new o(4250, 4.5854, 213.2991), new o(1907, 4.7608, 220.4126), new o(1466, 5.9133, 206.1855), new o(1162, 5.6197, 14.2271), new o(1067, 3.6082, 426.5982), new o(239, 3.861, 433.712), new o(237, 5.768, 199.072), new o(166, 5.116, 3.181), new o(151, 2.736, 639.897), new o(131, 4.743, 227.526), new o(63, 0.23, 419.48), new o(62, 4.74, 103.09), new o(40, 5.47, 21.34), new o(40, 5.96, 95.98), new o(39, 5.83, 110.21), new o(28, 3.01, 647.01), new o(25, 0.99, 3.93), new o(19, 1.92, 853.2), new o(18, 4.97, 10.29), new o(18, 1.03, 412.37), new o(18, 4.2, 216.48), new o(18, 3.32, 309.28), new o(16, 3.9, 440.83), new o(16, 5.62, 117.32), new o(13, 1.18, 88.87), new o(11, 5.58, 11.05), new o(11, 5.93, 191.96), new o(10, 3.95, 209.37), new o(9, 3.39, 302.16), new o(8, 4.88, 323.51), new o(7, 0.38, 632.78), new o(6, 2.25, 522.58), new o(6, 1.06, 210.12), new o(5, 4.64, 234.64), new o(4, 3.14, 0), new o(4, 2.31, 515.46), new o(3, 2.2, 860.31), new o(3, 0.59, 529.69), new o(3, 4.93, 224.34), new o(3, 0.42, 625.67), new o(2, 4.77, 330.62), new o(2, 3.35, 429.78), new o(2, 3.2, 202.25), new o(2, 1.19, 1066.5), new o(2, 1.35, 405.26), new o(2, 4.16, 223.59), new o(2, 3.07, 654.12)], w.g_L4SaturnCoefficients = [new o(1662, 3.9983, 7.1135), new o(257, 2.984, 220.413), new o(236, 3.902, 14.227), new o(149, 2.741, 213.299), new o(114, 3.142, 0), new o(110, 1.515, 206.186), new o(68, 1.72, 426.6), new o(40, 2.05, 433.71), new o(38, 1.24, 199.07), new o(31, 3.01, 227.53), new o(15, 0.83, 639.9), new o(9, 3.71, 21.34), new o(6, 2.42, 419.48), new o(6, 1.16, 647.01), new o(4, 1.45, 95.98), new o(4, 2.12, 440.83), new o(3, 4.09, 110.21), new o(3, 2.77, 412.37), new o(3, 3.01, 88.87), new o(3, 0, 853.2), new o(3, 0.39, 103.09), new o(2, 3.78, 117.32), new o(2, 2.83, 234.64), new o(2, 5.08, 309.28), new o(2, 2.24, 216.48), new o(2, 5.19, 302.16), new o(1, 1.55, 191.96)], w.g_L5SaturnCoefficients = [new o(124, 2.259, 7.114), new o(34, 2.16, 14.23), new o(28, 1.2, 220.41), new o(6, 1.22, 227.53), new o(5, 0.24, 433.71), new o(4, 6.23, 426.6), new o(3, 2.97, 199.07), new o(3, 4.29, 206.19), new o(2, 6.25, 213.3), new o(1, 5.28, 639.9), new o(1, 0.24, 440.83), new o(1, 3.14, 0)], w.g_B0SaturnCoefficients = [new o(4330678, 3.6028443, 213.2990954), new o(240348, 2.852385, 426.598191), new o(84746, 0, 0), new o(34116, 0.57297, 206.18555), new o(30863, 3.48442, 220.41264), new o(14734, 2.11847, 639.89729), new o(9917, 5.79, 419.4846), new o(6994, 4.736, 7.1135), new o(4808, 5.4331, 316.3919), new o(4788, 4.9651, 110.2063), new o(3432, 2.7326, 433.7117), new o(1506, 6.013, 103.0928), new o(1060, 5.631, 529.691), new o(969, 5.204, 632.784), new o(942, 1.396, 853.196), new o(708, 3.803, 323.505), new o(552, 5.131, 202.253), new o(400, 3.359, 227.526), new o(319, 3.626, 209.367), new o(316, 1.997, 647.011), new o(314, 0.465, 217.231), new o(284, 4.886, 224.345), new o(236, 2.139, 11.046), new o(215, 5.95, 846.083), new o(209, 2.12, 415.552), new o(207, 0.73, 199.072), new o(179, 2.954, 63.736), new o(141, 0.644, 490.334), new o(139, 4.595, 14.227), new o(139, 1.998, 735.877), new o(135, 5.245, 742.99), new o(122, 3.115, 522.577), new o(116, 3.109, 216.48), new o(114, 0.963, 210.118)], w.g_B1SaturnCoefficients = [new o(397555, 5.3329, 213.299095), new o(49479, 3.14159, 0), new o(18572, 6.09919, 426.59819), new o(14801, 2.30586, 206.18555), new o(9644, 1.6967, 220.4126), new o(3757, 1.2543, 419.4846), new o(2717, 5.9117, 639.8973), new o(1455, 0.8516, 433.7117), new o(1291, 2.9177, 7.1135), new o(853, 0.436, 316.392), new o(298, 0.919, 632.784), new o(292, 5.316, 853.196), new o(284, 1.619, 227.526), new o(275, 3.889, 103.093), new o(172, 0.052, 647.011), new o(166, 2.444, 199.072), new o(158, 5.209, 110.206), new o(128, 1.207, 529.691), new o(110, 2.457, 217.231), new o(82, 2.76, 210.12), new o(81, 2.86, 14.23), new o(69, 1.66, 202.25), new o(65, 1.26, 216.48), new o(61, 1.25, 209.37), new o(59, 1.82, 323.51), new o(46, 0.82, 440.83), new o(36, 1.82, 224.34), new o(34, 2.84, 117.32), new o(33, 1.31, 412.37), new o(32, 1.19, 846.08), new o(27, 4.65, 1066.5), new o(27, 4.44, 11.05)], w.g_B2SaturnCoefficients = [new o(20630, 0.50482, 213.2991), new o(3720, 3.9983, 206.1855), new o(1627, 6.1819, 220.4126), new o(1346, 0, 0), new o(706, 3.039, 419.485), new o(365, 5.099, 426.598), new o(330, 5.279, 433.712), new o(219, 3.828, 639.897), new o(139, 1.043, 7.114), new o(104, 6.157, 227.526), new o(93, 1.98, 316.39), new o(71, 4.15, 199.07), new o(52, 2.88, 632.78), new o(49, 4.43, 647.01), new o(41, 3.16, 853.2), new o(29, 4.53, 210.12), new o(24, 1.12, 14.23), new o(21, 4.35, 217.23), new o(20, 5.31, 440.83), new o(18, 0.85, 110.21), new o(17, 5.68, 216.48), new o(16, 4.26, 103.09), new o(14, 3, 412.37), new o(12, 2.53, 529.69), new o(8, 3.32, 202.25), new o(7, 5.56, 209.37), new o(7, 0.29, 323.51), new o(6, 1.16, 117.32), new o(6, 3.61, 869.31)], w.g_B3SaturnCoefficients = [new o(666, 1.99, 213.299), new o(632, 5.698, 206.186), new o(398, 0, 0), new o(188, 4.338, 220.413), new o(92, 4.84, 419.48), new o(52, 3.42, 433.71), new o(42, 2.38, 426.6), new o(26, 4.4, 227.53), new o(21, 5.85, 199.07), new o(18, 1.99, 639.9), new o(11, 5.37, 7.11), new o(10, 2.55, 647.01), new o(7, 3.46, 316.39), new o(6, 4.8, 632.78), new o(6, 0.02, 210.12), new o(6, 3.52, 440.83), new o(5, 5.64, 14.23), new o(5, 1.22, 853.2), new o(4, 4.71, 412.37), new o(3, 0.63, 103.09), new o(2, 3.72, 216.48)], w.g_B4SaturnCoefficients = [new o(80, 1.12, 206.19), new o(32, 3.12, 213.3), new o(17, 2.48, 220.41), new o(12, 3.14, 0), new o(9, 0.38, 419.48), new o(6, 1.56, 433.71), new o(5, 2.63, 227.53), new o(5, 1.28, 199.07), new o(1, 1.43, 426.6), new o(1, 0.67, 647.01), new o(1, 1.72, 440.83), new o(1, 6.18, 639.9)], w.g_B5SaturnCoefficients = [new o(8, 2.82, 206.19), new o(1, 0.51, 220.41)], w.g_R0SaturnCoefficients = [new o(955758136, 0, 0), new o(52921382, 2.3922622, 213.29909544), new o(1873680, 5.2354961, 206.1855484), new o(1464664, 1.6476305, 426.5981909), new o(821891, 5.9352, 316.39187), new o(547507, 5.015326, 103.092774), new o(371684, 2.271148, 220.412642), new o(361778, 3.139043, 7.113547), new o(140618, 5.704067, 632.783739), new o(108975, 3.293136, 110.206321), new o(69007, 5.941, 419.48464), new o(61053, 0.94038, 639.89729), new o(48913, 1.55733, 202.2534), new o(34144, 0.19519, 277.03499), new o(32402, 5.47085, 949.17561), new o(20937, 0.46349, 735.87651), new o(20839, 1.52103, 433.71174), new o(20747, 5.33256, 199.072), new o(15298, 3.05944, 529.69097), new o(14296, 2.60434, 323.50542), new o(12884, 1.64892, 138.5175), new o(11993, 5.98051, 846.08283), new o(11380, 1.73106, 522.57742), new o(9796, 5.2048, 1265.5675), new o(7753, 5.8519, 95.9792), new o(6771, 3.0043, 14.2271), new o(6466, 0.1773, 1052.2684), new o(5850, 1.4552, 415.5525), new o(5307, 0.5974, 63.7359), new o(4696, 2.1492, 227.5262), new o(4044, 1.6401, 209.3669), new o(3688, 0.7802, 412.3711), new o(3461, 1.8509, 175.1661), new o(3420, 4.9455, 1581.9593), new o(3401, 0.5539, 350.3321), new o(3376, 3.6953, 224.3448), new o(2976, 5.6847, 210.1177), new o(2885, 1.3876, 838.9693), new o(2881, 0.1796, 853.1964), new o(2508, 3.5385, 742.9901), new o(2448, 6.1841, 1368.6603), new o(2406, 2.9656, 117.3199), new o(2174, 0.0151, 340.7709), new o(2024, 5.0541, 11.0457)], w.g_R1SaturnCoefficients = [new o(6182981, 0.2584352, 213.2990954), new o(506578, 0.711147, 206.185548), new o(341394, 5.796358, 426.598191), new o(188491, 0.472157, 220.412642), new o(186262, 3.141593, 0), new o(143891, 1.407449, 7.113547), new o(49621, 6.01744, 103.09277), new o(20928, 5.09246, 639.89729), new o(19953, 1.1756, 419.48464), new o(18840, 1.6082, 110.20632), new o(13877, 0.75886, 199.072), new o(12893, 5.9433, 433.71174), new o(5397, 1.2885, 14.2271), new o(4869, 0.8679, 323.5054), new o(4247, 0.393, 227.5262), new o(3252, 1.2585, 95.9792), new o(3081, 3.4366, 522.5774), new o(2909, 4.6068, 202.2534), new o(2856, 2.1673, 735.8765), new o(1988, 2.4505, 412.3711), new o(1941, 6.0239, 209.3669), new o(1581, 1.2919, 210.1177), new o(1340, 4.308, 853.1964), new o(1316, 1.253, 117.3199), new o(1203, 1.8665, 316.3919), new o(1091, 0.0753, 216.4805), new o(966, 0.48, 632.784), new o(954, 5.152, 647.011), new o(898, 0.983, 529.691), new o(882, 1.885, 1052.268), new o(874, 1.402, 224.345), new o(785, 3.064, 838.969), new o(740, 1.382, 625.67), new o(658, 4.144, 309.278), new o(650, 1.725, 742.99), new o(613, 3.033, 63.736), new o(599, 2.549, 217.231), new o(503, 2.13, 3.932)], w.g_R2SaturnCoefficients = [new o(436902, 4.786717, 213.299095), new o(71923, 2.5007, 206.18555), new o(49767, 4.97168, 220.41264), new o(43221, 3.8694, 426.59819), new o(29646, 5.9631, 7.11355), new o(4721, 2.4753, 199.072), new o(4142, 4.1067, 433.7117), new o(3789, 3.0977, 639.8973), new o(2964, 1.3721, 103.0928), new o(2556, 2.8507, 419.4846), new o(2327, 0, 0), new o(2208, 6.2759, 110.2063), new o(2188, 5.8555, 14.2271), new o(1957, 4.9245, 227.5262), new o(924, 5.464, 323.505), new o(706, 2.971, 95.979), new o(546, 4.129, 412.371), new o(431, 5.178, 522.577), new o(405, 4.173, 209.367), new o(391, 4.481, 216.48), new o(374, 5.834, 117.32), new o(361, 3.277, 647.011), new o(356, 3.192, 210.118), new o(326, 2.269, 853.196), new o(207, 4.022, 735.877), new o(204, 0.088, 202.253), new o(180, 3.597, 632.784), new o(178, 4.097, 440.825), new o(154, 3.135, 625.67), new o(148, 0.136, 302.165), new o(133, 2.594, 191.958), new o(132, 5.933, 309.278)], w.g_R3SaturnCoefficients = [new o(20315, 3.02187, 213.2991), new o(8924, 3.1914, 220.4126), new o(6909, 4.3517, 206.1855), new o(4087, 4.2241, 7.1135), new o(3879, 2.0106, 426.5982), new o(1071, 4.2036, 199.072), new o(907, 2.283, 433.712), new o(606, 3.175, 227.526), new o(597, 4.135, 14.227), new o(483, 1.173, 639.897), new o(393, 0, 0), new o(229, 4.698, 419.485), new o(188, 4.59, 110.206), new o(150, 3.202, 103.093), new o(121, 3.768, 323.505), new o(102, 4.71, 95.979), new o(101, 5.819, 412.371), new o(93, 1.44, 647.01), new o(84, 2.63, 216.48), new o(73, 4.15, 117.32), new o(62, 2.31, 440.83), new o(55, 0.31, 853.2), new o(50, 2.39, 209.37), new o(45, 4.37, 191.96), new o(41, 0.69, 522.58), new o(40, 1.84, 302.16), new o(38, 5.94, 88.87), new o(32, 4.01, 21.34)], w.g_R4SaturnCoefficients = [new o(1202, 1.415, 220.4126), new o(708, 1.162, 213.299), new o(516, 6.24, 206.186), new o(427, 2.469, 7.114), new o(268, 0.187, 426.598), new o(170, 5.959, 199.072), new o(150, 0.48, 433.712), new o(145, 1.442, 227.526), new o(121, 2.405, 14.227), new o(47, 5.57, 639.9), new o(19, 5.86, 647.01), new o(17, 0.53, 440.83), new o(16, 2.9, 110.21), new o(15, 0.3, 419.48), new o(14, 1.3, 412.37), new o(13, 2.09, 323.51), new o(11, 0.22, 95.98), new o(11, 2.46, 117.32), new o(10, 3.14, 0), new o(9, 1.56, 88.87), new o(9, 2.28, 21.34), new o(9, 0.68, 216.48), new o(8, 1.27, 234.64)], w.g_R5SaturnCoefficients = [new o(129, 5.913, 220.413), new o(32, 0.69, 7.11), new o(27, 5.91, 227.53), new o(20, 4.95, 433.71), new o(20, 0.67, 14.23), new o(14, 2.67, 206.19), new o(14, 1.46, 199.07), new o(13, 4.59, 426.6), new o(7, 4.63, 213.3), new o(5, 3.61, 639.9), new o(4, 4.9, 440.83), new o(3, 4.07, 647.01), new o(3, 4.66, 191.96), new o(3, 0.49, 323.51), new o(3, 3.18, 419.48), new o(2, 3.7, 88.87), new o(2, 3.32, 95.98), new o(2, 0.56, 117.32)], w.g_L0UranusCoefficients = [new o(548129294, 0, 0), new o(9260408, 0.8910642, 74.7815986), new o(1504248, 3.6271926, 1.4844727), new o(365982, 1.899622, 73.297126), new o(272328, 3.358237, 149.563197), new o(70328, 5.39254, 63.7359), new o(68893, 6.09292, 76.26607), new o(61999, 2.26952, 2.96895), new o(61951, 2.85099, 11.0457), new o(26469, 3.14152, 71.81265), new o(25711, 6.1138, 454.90937), new o(21079, 4.36059, 148.07872), new o(17819, 1.74437, 36.64856), new o(14613, 4.73732, 3.93215), new o(11163, 5.82682, 224.3448), new o(10998, 0.48865, 138.5175), new o(9527, 2.9552, 35.1641), new o(7546, 5.2363, 109.9457), new o(4220, 3.2333, 70.8494), new o(4052, 2.2775, 151.0477), new o(3490, 5.4831, 146.5943), new o(3355, 1.0655, 4.4534), new o(3144, 4.752, 77.7505), new o(2927, 4.629, 9.5612), new o(2922, 5.3524, 85.8273), new o(2273, 4.366, 70.3282), new o(2149, 0.6075, 38.133), new o(2051, 1.5177, 0.1119), new o(1992, 4.9244, 277.035), new o(1667, 3.6274, 380.1278), new o(1533, 2.5859, 52.6902), new o(1376, 2.0428, 65.2204), new o(1372, 4.1964, 111.4302), new o(1284, 3.1135, 202.2534), new o(1282, 0.5427, 222.8603), new o(1244, 0.9161, 2.4477), new o(1221, 0.199, 108.4612), new o(1151, 4.179, 33.6796), new o(1150, 0.9334, 3.1814), new o(1090, 1.775, 12.5302), new o(1072, 0.2356, 62.2514), new o(946, 1.192, 127.472), new o(708, 5.183, 213.299), new o(653, 0.966, 78.714), new o(628, 0.182, 984.6), new o(607, 5.432, 529.691), new o(559, 3.358, 0.521), new o(524, 2.013, 299.126), new o(483, 2.106, 0.963), new o(471, 1.407, 184.727), new o(467, 0.415, 145.11), new o(434, 5.521, 183.243), new o(405, 5.987, 8.077), new o(399, 0.338, 415.552), new o(396, 5.87, 351.817), new o(379, 2.35, 56.622), new o(310, 5.833, 145.631), new o(300, 5.644, 22.091), new o(294, 5.839, 39.618), new o(252, 1.637, 221.376), new o(249, 4.746, 225.829), new o(239, 2.35, 137.033), new o(224, 0.516, 84.343), new o(223, 2.843, 0.261), new o(220, 1.922, 67.668), new o(217, 6.142, 5.938), new o(216, 4.778, 340.771), new o(208, 5.58, 68.844), new o(202, 1.297, 0.048), new o(199, 0.956, 152.532), new o(194, 1.888, 456.394), new o(193, 0.916, 453.425), new o(187, 1.319, 0.16), new o(182, 3.536, 79.235), new o(173, 1.539, 160.609), new o(172, 5.68, 219.891), new o(170, 3.677, 5.417), new o(169, 5.879, 18.159), new o(165, 1.424, 106.977), new o(163, 3.05, 112.915), new o(158, 0.738, 54.175), new o(147, 1.263, 59.804), new o(143, 1.3, 35.425), new o(139, 5.386, 32.195), new o(139, 4.26, 909.819), new o(124, 1.374, 7.114), new o(110, 2.027, 554.07), new o(109, 5.706, 77.963), new o(104, 5.028, 0.751), new o(104, 1.458, 24.379), new o(103, 0.681, 14.978)], w.g_L1UranusCoefficients = [new o(7502543122, 0, 0), new o(154458, 5.242017, 74.781599), new o(24456, 1.71256, 1.48447), new o(9258, 0.4284, 11.0457), new o(8266, 1.5022, 63.7359), new o(7842, 1.3198, 149.5632), new o(3899, 0.4648, 3.9322), new o(2284, 4.1737, 76.2661), new o(1927, 0.5301, 2.9689), new o(1233, 1.5863, 70.8494), new o(791, 5.436, 3.181), new o(767, 1.996, 73.297), new o(482, 2.984, 85.827), new o(450, 4.138, 138.517), new o(446, 3.723, 224.345), new o(427, 4.731, 71.813), new o(354, 2.583, 148.079), new o(348, 2.454, 9.561), new o(317, 5.579, 52.69), new o(206, 2.363, 2.448), new o(189, 4.202, 56.622), new o(184, 0.284, 151.048), new o(180, 5.684, 12.53), new o(171, 3.001, 78.714), new o(158, 2.909, 0.963), new o(155, 5.591, 4.453), new o(154, 4.652, 35.164), new o(152, 2.942, 77.751), new o(143, 2.59, 62.251), new o(121, 4.148, 127.472), new o(116, 3.732, 65.22), new o(102, 4.188, 145.631), new o(102, 6.034, 0.112), new o(88, 3.99, 18.16), new o(88, 6.16, 202.25), new o(81, 2.64, 22.09), new o(72, 6.05, 70.33), new o(69, 4.05, 77.96), new o(59, 3.7, 67.67), new o(47, 3.54, 351.82), new o(44, 5.91, 7.11), new o(43, 5.72, 5.42), new o(39, 4.92, 222.86), new o(36, 5.9, 33.68), new o(36, 3.29, 8.08), new o(36, 3.33, 71.6), new o(35, 5.08, 38.13), new o(31, 5.62, 984.6), new o(31, 5.5, 59.8), new o(31, 5.46, 160.61), new o(30, 1.66, 447.8), new o(29, 1.15, 462.02), new o(29, 4.52, 84.34), new o(27, 5.54, 131.4), new o(27, 6.15, 299.13), new o(26, 4.99, 137.03), new o(25, 5.74, 380.13)], w.g_L2UranusCoefficients = [new o(53033, 0, 0), new o(2358, 2.2601, 74.7816), new o(769, 4.526, 11.046), new o(552, 3.258, 63.736), new o(542, 2.276, 3.932), new o(529, 4.923, 1.484), new o(258, 3.691, 3.181), new o(239, 5.858, 149.563), new o(182, 6.218, 70.849), new o(54, 1.44, 76.27), new o(49, 6.03, 56.62), new o(45, 3.91, 2.45), new o(45, 0.81, 85.83), new o(38, 1.78, 52.69), new o(37, 4.46, 2.97), new o(33, 0.86, 9.56), new o(29, 5.1, 73.3), new o(24, 2.11, 18.16), new o(22, 5.99, 138.52), new o(22, 4.82, 78.71), new o(21, 2.4, 77.96), new o(21, 2.17, 224.34), new o(17, 2.54, 145.63), new o(17, 3.47, 12.53), new o(12, 0.02, 22.09), new o(11, 0.08, 127.47), new o(10, 5.16, 71.6), new o(10, 4.46, 62.25), new o(9, 4.26, 7.11), new o(8, 5.5, 67.67), new o(7, 1.25, 5.42), new o(6, 3.36, 447.8), new o(6, 5.45, 65.22), new o(6, 4.52, 151.05), new o(6, 5.73, 462.02)], w.g_L3UranusCoefficients = [new o(121, 0.024, 74.782), new o(68, 4.12, 3.93), new o(53, 2.39, 11.05), new o(46, 0, 0), new o(45, 2.04, 3.18), new o(44, 2.96, 1.48), new o(25, 4.89, 63.74), new o(21, 4.55, 70.85), new o(20, 2.31, 149.56), new o(9, 1.58, 56.62), new o(4, 0.23, 18.16), new o(4, 5.39, 76.27), new o(4, 0.95, 77.96), new o(3, 4.98, 85.83), new o(3, 4.13, 52.69), new o(3, 0.37, 78.71), new o(2, 0.86, 145.63), new o(2, 5.66, 9.56)], w.g_L4UranusCoefficients = [new o(114, 3.142, 0), new o(6, 4.58, 74.78), new o(3, 0.35, 11.05), new o(1, 3.42, 56.62)], w.g_B0UranusCoefficients = [new o(1346278, 2.6187781, 74.7815986), new o(62341, 5.08111, 149.5632), new o(61601, 3.14159, 0), new o(9964, 1.616, 76.2661), new o(9926, 0.5763, 73.2971), new o(3259, 1.2612, 224.3448), new o(2972, 2.2437, 1.4845), new o(2010, 6.0555, 148.0787), new o(1522, 0.2796, 63.7359), new o(924, 4.038, 151.048), new o(761, 6.14, 71.813), new o(522, 3.321, 138.517), new o(463, 0.743, 85.827), new o(437, 3.381, 529.691), new o(435, 0.341, 77.751), new o(431, 3.554, 213.299), new o(420, 5.213, 11.046), new o(245, 0.788, 2.969), new o(233, 2.257, 222.86), new o(216, 1.591, 38.133), new o(180, 3.725, 299.126), new o(175, 1.236, 146.594), new o(174, 1.937, 380.128), new o(160, 5.336, 111.43), new o(144, 5.962, 35.164), new o(116, 5.739, 70.849), new o(106, 0.941, 70.328), new o(102, 2.619, 78.714)], w.g_B1UranusCoefficients = [new o(206366, 4.123943, 74.781599), new o(8563, 0.3382, 149.5632), new o(1726, 2.1219, 73.2971), new o(1374, 0, 0), new o(1369, 3.0686, 76.2661), new o(451, 3.777, 1.484), new o(400, 2.848, 224.345), new o(307, 1.255, 148.079), new o(154, 3.786, 63.736), new o(112, 5.573, 151.048), new o(111, 5.329, 138.517), new o(83, 3.59, 71.81), new o(56, 3.4, 85.83), new o(54, 1.7, 77.75), new o(42, 1.21, 11.05), new o(41, 4.45, 78.71), new o(32, 3.77, 222.86), new o(30, 2.56, 2.97), new o(27, 5.34, 213.3), new o(26, 0.42, 380.13)], w.g_B2UranusCoefficients = [new o(9212, 5.8004, 74.7816), new o(557, 0, 0), new o(286, 2.177, 149.563), new o(95, 3.84, 73.3), new o(45, 4.88, 76.27), new o(20, 5.46, 1.48), new o(15, 0.88, 138.52), new o(14, 2.85, 148.08), new o(14, 5.07, 63.74), new o(10, 5, 224.34), new o(8, 6.27, 78.71)], w.g_B3UranusCoefficients = [new o(268, 1.251, 74.782), new o(11, 3.14, 0), new o(6, 4.01, 149.56), new o(3, 5.78, 73.3)], w.g_B4UranusCoefficients = [new o(6, 2.85, 74.78)], w.g_R0UranusCoefficients = [new o(1921264848, 0, 0), new o(88784984, 5.60377527, 74.78159857), new o(3440836, 0.328361, 73.2971259), new o(2055653, 1.7829517, 149.5631971), new o(649322, 4.522473, 76.266071), new o(602248, 3.860038, 63.735898), new o(496404, 1.401399, 454.909367), new o(338526, 1.580027, 138.517497), new o(243508, 1.570866, 71.812653), new o(190522, 1.998094, 1.484473), new o(161858, 2.791379, 148.078724), new o(143706, 1.383686, 11.0457), new o(93192, 0.17437, 36.64856), new o(89806, 3.66105, 109.94569), new o(71424, 4.24509, 224.3448), new o(46677, 1.39977, 35.16409), new o(39026, 3.36235, 277.03499), new o(39010, 1.66971, 70.84945), new o(36755, 3.88649, 146.59425), new o(30349, 0.701, 151.04767), new o(29156, 3.18056, 77.75054), new o(25786, 3.78538, 85.8273), new o(25620, 5.25656, 380.12777), new o(22637, 0.72519, 529.69097), new o(20473, 2.7964, 70.32818), new o(20472, 1.55589, 202.2534), new o(17901, 0.55455, 2.96895), new o(15503, 5.35405, 38.13304), new o(14702, 4.90434, 108.46122), new o(12897, 2.62154, 111.43016), new o(12328, 5.96039, 127.4718), new o(11959, 1.75044, 984.60033), new o(11853, 0.99343, 52.6902), new o(11696, 3.29826, 3.93215), new o(11495, 0.43774, 65.22037), new o(10793, 1.42105, 213.2991), new o(9111, 4.9964, 62.2514), new o(8421, 5.2535, 222.8603), new o(8402, 5.0388, 415.5525), new o(7449, 0.7949, 351.8166), new o(7329, 3.9728, 183.2428), new o(6046, 5.6796, 78.7138), new o(5524, 3.115, 9.5612), new o(5445, 5.1058, 145.1098), new o(5238, 2.6296, 33.6796), new o(4079, 3.2206, 340.7709), new o(3919, 4.2502, 39.6175), new o(3802, 6.1099, 184.7273), new o(3781, 3.4584, 456.3938), new o(3687, 2.4872, 453.4249), new o(3102, 4.1403, 219.8914), new o(2963, 0.8298, 56.6224), new o(2942, 0.4239, 299.1264), new o(2940, 2.1464, 137.033), new o(2938, 3.6766, 140.002), new o(2865, 0.31, 12.5302), new o(2538, 4.8546, 131.4039), new o(2364, 0.4425, 554.07), new o(2183, 2.9404, 305.3462)], w.g_R1UranusCoefficients = [new o(1479896, 3.6720571, 74.7815986), new o(71212, 6.22601, 63.7359), new o(68627, 6.13411, 149.5632), new o(24060, 3.14159, 0), new o(21468, 2.60177, 76.26607), new o(20857, 5.24625, 11.0457), new o(11405, 0.01848, 70.84945), new o(7497, 0.4236, 73.2971), new o(4244, 1.4169, 85.8273), new o(3927, 3.1551, 71.8127), new o(3578, 2.3116, 224.3448), new o(3506, 2.5835, 138.5175), new o(3229, 5.255, 3.9322), new o(3060, 0.1532, 1.4845), new o(2564, 0.9808, 148.0787), new o(2429, 3.9944, 52.6902), new o(1645, 2.6535, 127.4718), new o(1584, 1.4305, 78.7138), new o(1508, 5.06, 151.0477), new o(1490, 2.6756, 56.6224), new o(1413, 4.5746, 202.2534), new o(1403, 1.3699, 77.7505), new o(1228, 1.047, 62.2514), new o(1033, 0.2646, 131.4039), new o(992, 2.172, 65.22), new o(862, 5.055, 351.817), new o(744, 3.076, 35.164), new o(687, 2.499, 77.963), new o(647, 4.473, 70.328), new o(624, 0.863, 9.561), new o(604, 0.907, 984.6), new o(575, 3.231, 447.796), new o(562, 2.718, 462.023), new o(530, 5.917, 213.299), new o(528, 5.151, 2.969)], w.g_R2UranusCoefficients = [new o(22440, 0.69953, 74.7816), new o(4727, 1.699, 63.7359), new o(1682, 4.6483, 70.8494), new o(1650, 3.0966, 11.0457), new o(1434, 3.5212, 149.5632), new o(770, 0, 0), new o(500, 6.172, 76.266), new o(461, 0.767, 3.932), new o(390, 4.496, 56.622), new o(390, 5.527, 85.827), new o(292, 0.204, 52.69), new o(287, 3.534, 73.297), new o(273, 3.847, 138.517), new o(220, 1.964, 131.404), new o(216, 0.848, 77.963), new o(205, 3.248, 78.714), new o(149, 4.898, 127.472), new o(129, 2.081, 3.181)], w.g_R3UranusCoefficients = [new o(1164, 4.7345, 74.7816), new o(212, 3.343, 63.736), new o(196, 2.98, 70.849), new o(105, 0.958, 11.046), new o(73, 1, 149.56), new o(72, 0.03, 56.62), new o(55, 2.59, 3.93), new o(36, 5.65, 77.96), new o(34, 3.82, 76.27), new o(32, 3.6, 131.4)], w.g_R4UranusCoefficients = [new o(53, 3.01, 74.78), new o(10, 1.91, 56.62)], w.g_L0VenusCoefficients = [new o(317614667, 0, 0), new o(1353968, 5.5931332, 10213.2855462), new o(89892, 5.3065, 20426.57109), new o(5477, 4.4163, 7860.4194), new o(3456, 2.6996, 11790.6291), new o(2372, 2.9938, 3930.2097), new o(1664, 4.2502, 1577.3435), new o(1438, 4.1575, 9683.5946), new o(1317, 5.1867, 26.2983), new o(1201, 6.1536, 30639.8566), new o(769, 0.816, 9437.763), new o(761, 1.95, 529.691), new o(708, 1.065, 775.523), new o(585, 3.998, 191.448), new o(500, 4.123, 15720.839), new o(429, 3.586, 19367.189), new o(327, 5.677, 5507.553), new o(326, 4.591, 10404.734), new o(232, 3.163, 9153.904), new o(180, 4.653, 1109.379), new o(155, 5.57, 19651.048), new o(128, 4.226, 20.775), new o(128, 0.962, 5661.332), new o(106, 1.537, 801.821)], w.g_L1VenusCoefficients = [new o(1021352943053, 0, 0), new o(95708, 2.46424, 10213.28555), new o(14445, 0.51625, 20426.57109), new o(213, 1.795, 30639.857), new o(174, 2.655, 26.298), new o(152, 6.106, 1577.344), new o(82, 5.7, 191.45), new o(70, 2.68, 9437.76), new o(52, 3.6, 775.52), new o(38, 1.03, 529.69), new o(30, 1.25, 5507.55), new o(25, 6.11, 10404.73)], w.g_L2VenusCoefficients = [new o(54127, 0, 0), new o(3891, 0.3451, 10213.2855), new o(1338, 2.0201, 20426.5711), new o(24, 2.05, 26.3), new o(19, 3.54, 30639.86), new o(10, 3.97, 775.52), new o(7, 1.52, 1577.34), new o(6, 1, 191.45)], w.g_L3VenusCoefficients = [new o(136, 4.804, 10213.286), new o(78, 3.67, 20426.57), new o(26, 0, 0)], w.g_L4VenusCoefficients = [new o(114, 3.1416, 0), new o(3, 5.21, 20426.57), new o(2, 2.51, 10213.29)], w.g_L5VenusCoefficients = [new o(1, 3.14, 0)], w.g_B0VenusCoefficients = [new o(5923638, 0.2670278, 10213.2855462), new o(40108, 1.14737, 20426.57109), new o(32815, 3.14737, 0), new o(1011, 1.0895, 30639.8566), new o(149, 6.254, 18073.705), new o(138, 0.86, 1577.344), new o(130, 3.672, 9437.763), new o(120, 3.705, 2352.866), new o(108, 4.539, 22003.915)], w.g_B1VenusCoefficients = [new o(513348, 1.803643, 10213.285546), new o(4380, 3.3862, 20426.5711), new o(199, 0, 0), new o(197, 2.53, 30639.857)], w.g_B2VenusCoefficients = [new o(22378, 3.38509, 10213.28555), new o(282, 0, 0), new o(173, 5.256, 20426.571), new o(27, 3.87, 30639.86)], w.g_B3VenusCoefficients = [new o(647, 4.992, 10213.286), new o(20, 3.14, 0), new o(6, 0.77, 20426.57), new o(3, 5.44, 30639.86)], w.g_B4VenusCoefficients = [new o(14, 0.32, 10213.29)], w.g_R0VenusCoefficients = [new o(72334821, 0, 0), new o(489824, 4.021518, 10213.285546), new o(1658, 4.9021, 20426.5711), new o(1632, 2.8455, 7860.4194), new o(1378, 1.1285, 11790.6291), new o(498, 2.587, 9683.595), new o(374, 1.423, 3930.21), new o(264, 5.529, 9437.763), new o(237, 2.551, 15720.839), new o(222, 2.013, 19367.189), new o(126, 2.728, 1577.344), new o(119, 3.02, 10404.734)], w.g_R1VenusCoefficients = [new o(34551, 0.89199, 10213.28555), new o(234, 1.772, 20426.571), new o(234, 3.142, 0)], w.g_R2VenusCoefficients = [new o(1407, 5.0637, 10213.2855), new o(16, 5.47, 20426.57), new o(13, 0, 0)], w.g_R3VenusCoefficients = [new o(50, 3.22, 10213.29)], w.g_R4VenusCoefficients = [new o(1, 0.92, 10213.29)], jt._pI4_A = 0.785398155450821, jt._pI4_B = 794662735614793e-23, jt._pI4_C = 306161699786838e-31, jt._m_1_PI = 0.318309886183791, Qi.ctab = [0, 1, 256, 257, 2, 3, 258, 259, 512, 513, 768, 769, 514, 515, 770, 771, 4, 5, 260, 261, 6, 7, 262, 263, 516, 517, 772, 773, 518, 519, 774, 775, 1024, 1025, 1280, 1281, 1026, 1027, 1282, 1283, 1536, 1537, 1792, 1793, 1538, 1539, 1794, 1795, 1028, 1029, 1284, 1285, 1030, 1031, 1286, 1287, 1540, 1541, 1796, 1797, 1542, 1543, 1798, 1799, 8, 9, 264, 265, 10, 11, 266, 267, 520, 521, 776, 777, 522, 523, 778, 779, 12, 13, 268, 269, 14, 15, 270, 271, 524, 525, 780, 781, 526, 527, 782, 783, 1032, 1033, 1288, 1289, 1034, 1035, 1290, 1291, 1544, 1545, 1800, 1801, 1546, 1547, 1802, 1803, 1036, 1037, 1292, 1293, 1038, 1039, 1294, 1295, 1548, 1549, 1804, 1805, 1550, 1551, 1806, 1807, 2048, 2049, 2304, 2305, 2050, 2051, 2306, 2307, 2560, 2561, 2816, 2817, 2562, 2563, 2818, 2819, 2052, 2053, 2308, 2309, 2054, 2055, 2310, 2311, 2564, 2565, 2820, 2821, 2566, 2567, 2822, 2823, 3072, 3073, 3328, 3329, 3074, 3075, 3330, 3331, 3584, 3585, 3840, 3841, 3586, 3587, 3842, 3843, 3076, 3077, 3332, 3333, 3078, 3079, 3334, 3335, 3588, 3589, 3844, 3845, 3590, 3591, 3846, 3847, 2056, 2057, 2312, 2313, 2058, 2059, 2314, 2315, 2568, 2569, 2824, 2825, 2570, 2571, 2826, 2827, 2060, 2061, 2316, 2317, 2062, 2063, 2318, 2319, 2572, 2573, 2828, 2829, 2574, 2575, 2830, 2831, 3080, 3081, 3336, 3337, 3082, 3083, 3338, 3339, 3592, 3593, 3848, 3849, 3594, 3595, 3850, 3851, 3084, 3085, 3340, 3341, 3086, 3087, 3342, 3343, 3596, 3597, 3852, 3853, 3598, 3599, 3854, 3855], Qi.utab = [0, 1, 4, 5, 16, 17, 20, 21, 64, 65, 68, 69, 80, 81, 84, 85, 256, 257, 260, 261, 272, 273, 276, 277, 320, 321, 324, 325, 336, 337, 340, 341, 1024, 1025, 1028, 1029, 1040, 1041, 1044, 1045, 1088, 1089, 1092, 1093, 1104, 1105, 1108, 1109, 1280, 1281, 1284, 1285, 1296, 1297, 1300, 1301, 1344, 1345, 1348, 1349, 1360, 1361, 1364, 1365, 4096, 4097, 4100, 4101, 4112, 4113, 4116, 4117, 4160, 4161, 4164, 4165, 4176, 4177, 4180, 4181, 4352, 4353, 4356, 4357, 4368, 4369, 4372, 4373, 4416, 4417, 4420, 4421, 4432, 4433, 4436, 4437, 5120, 5121, 5124, 5125, 5136, 5137, 5140, 5141, 5184, 5185, 5188, 5189, 5200, 5201, 5204, 5205, 5376, 5377, 5380, 5381, 5392, 5393, 5396, 5397, 5440, 5441, 5444, 5445, 5456, 5457, 5460, 5461, 16384, 16385, 16388, 16389, 16400, 16401, 16404, 16405, 16448, 16449, 16452, 16453, 16464, 16465, 16468, 16469, 16640, 16641, 16644, 16645, 16656, 16657, 16660, 16661, 16704, 16705, 16708, 16709, 16720, 16721, 16724, 16725, 17408, 17409, 17412, 17413, 17424, 17425, 17428, 17429, 17472, 17473, 17476, 17477, 17488, 17489, 17492, 17493, 17664, 17665, 17668, 17669, 17680, 17681, 17684, 17685, 17728, 17729, 17732, 17733, 17744, 17745, 17748, 17749, 20480, 20481, 20484, 20485, 20496, 20497, 20500, 20501, 20544, 20545, 20548, 20549, 20560, 20561, 20564, 20565, 20736, 20737, 20740, 20741, 20752, 20753, 20756, 20757, 20800, 20801, 20804, 20805, 20816, 20817, 20820, 20821, 21504, 21505, 21508, 21509, 21520, 21521, 21524, 21525, 21568, 21569, 21572, 21573, 21584, 21585, 21588, 21589, 21760, 21761, 21764, 21765, 21776, 21777, 21780, 21781, 21824, 21825, 21828, 21829, 21840, 21841, 21844, 21845], Qi.jrll = [2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4], Qi.jpll = [1, 3, 5, 7, 0, 2, 4, 6, 1, 3, 5, 7], Qi.xoffset = [-1, -1, 0, 1, 1, 1, 0, -1], Qi.yoffset = [0, 1, 1, 1, 0, -1, -1, -1], Kt.singleton = new Kt(), Dt.pointList = null, Dt.lineList = null, Dt.triangleFanPointList = null, Dt.triangleList = null, Dt.batchDirty = !0, $t._galDetails = new ba(), $t._jupDetails = new wa(), $t._jupPhisical = new Sa(), $t._jDateLast = 0, pt.RC = 0.017453292519943, pt._maxSeperation = 0.745, pt.containment = null, pt._constToDraw = "", pt.selectedSegment = null, pt._artFile = null, pt.artwork = null, pt.boundries = null, pt.pictureBlendStates = {}, Ut.families = {}, L.zero = new L(), H._s_identity = H._createIdentity(), Yt._downloading = !1, Yt._imagesLoaded = !1, Yt._imageLoadCount = 0, tr.starTexture = null, be.vertLoc = 0, be.initialized = !1, be._prog = null, ze.vertLoc = 0, ze.initialized = !1, ze._prog = null, ae.vertLoc = 0, ae.colorLoc = 0, ae.initialized = !1, ae._prog = null, Gt.vertLoc = 0, Gt.colorLoc = 0, Gt.timeLoc = 0, Gt.initialized = !1, Gt._prog = null, Mt.vertLoc = 0, Mt.colorLoc = 0, Mt.pointSizeLoc = 0, Mt.timeLoc = 0, Mt.initialized = !1, Mt._prog = null, mt.abcLoc = 0, mt.abcLoc1 = 0, mt.pointSizeLoc = 0, mt.colorLoc = 0, mt.weLoc = 0, mt.nTLoc = 0, mt.azLoc = 0, mt.orbitLoc = 0, mt.initialized = !1, mt._prog = null, Ht.angleLoc = 0, Ht.initialized = !1, Ht._prog = null, xt.vertLoc = 0, xt.normalLoc = 0, xt.textureLoc = 0, xt.initialized = !1, xt._prog = null, xt.sunPosition = L.create(-1, -1, -1), xt.minLightingBrightness = 1, xt.atmosphereColor = B.fromArgb(0, 0, 0, 0), It.vertLoc = 0, It.normalLoc = 0, It.textureLoc = 0, It.initialized = !1, It._prog = null, It.sunPosition = L.create(-1, -1, -1), It.minLightingBrightness = 1, It.atmosphereColor = B.fromArgb(0, 0, 0, 0), St.vertLoc = 0, St.textureLoc = 0, St.initialized = !1, St._prog = null, St.sunPosition = L.create(-1, -1, -1), St.minLightingBrightness = 1, St.atmosphereColor = B.fromArgb(0, 0, 0, 0), ft.vertLoc = 0, ft.textureLoc = 0, ft.initialized = !1, ft._prog = null, ft.blankValue = 0, ft.bScale = 1, ft.bZero = 0, ft.min = 0, ft.max = 0, ft.transparentBlack = !1, ft.containsBlanks = !1, ft.scaleType = 0, Wt.vertLoc = 0, Wt.textureLoc = 0, Wt.initialized = !1, Wt._prog = null, te.vertLoc = 0, te.textureLoc = 0, te.initialized = !1, te._prog = null, Qt.vertLoc = 0, Qt.textureLoc = 0, Qt.colorLoc = 0, Qt.initialized = !1, Qt._prog = null, se.vertLoc = 0, se.textureLoc = 0, se.colorLoc = 0, se.initialized = !1, se._prog = null, oe.vertLoc = 0, oe.textureLoc = 0, oe.initialized = !1, oe._prog = null, Te.empty = null, O._galaxyImageIndexBuffer = null, O._galaxyImageTriangleCount = 0, O._milkyWayImage = null, O._starSprites = null, O._starCount = 0, O._starsDownloading = !1, O._stars = null, O._hipparcosIndex = {}, O._limitingMagnitude = 16, O._galaxyTextures = null, O._galaxyVertexCounts = null, O._largeSet = !0, O._cosmosReady = !1, O._cosmos = null, O._downloadingGalaxy = !1, O._eclipticCount = 0, O._eclipticYear = 0, O._monthDays = [31, 28.2421, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], O._monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], O._eclipticTextYear = 0, Mi._sine = 0, Mi._cose = 1, Mi._degrad = Math.PI / 180, Mi.baseDate = n.truncate(Z.utcToJulian(n.now())), Ft.colorTextures = {}, Ft.viridis = Ft.fromStringList(["#440154", "#440256", "#450457", "#450559", "#46075a", "#46085c", "#460a5d", "#460b5e", "#470d60", "#470e61", "#471063", "#471164", "#471365", "#481467", "#481668", "#481769", "#48186a", "#481a6c", "#481b6d", "#481c6e", "#481d6f", "#481f70", "#482071", "#482173", "#482374", "#482475", "#482576", "#482677", "#482878", "#482979", "#472a7a", "#472c7a", "#472d7b", "#472e7c", "#472f7d", "#46307e", "#46327e", "#46337f", "#463480", "#453581", "#453781", "#453882", "#443983", "#443a83", "#443b84", "#433d84", "#433e85", "#423f85", "#424086", "#424186", "#414287", "#414487", "#404588", "#404688", "#3f4788", "#3f4889", "#3e4989", "#3e4a89", "#3e4c8a", "#3d4d8a", "#3d4e8a", "#3c4f8a", "#3c508b", "#3b518b", "#3b528b", "#3a538b", "#3a548c", "#39558c", "#39568c", "#38588c", "#38598c", "#375a8c", "#375b8d", "#365c8d", "#365d8d", "#355e8d", "#355f8d", "#34608d", "#34618d", "#33628d", "#33638d", "#32648e", "#32658e", "#31668e", "#31678e", "#31688e", "#30698e", "#306a8e", "#2f6b8e", "#2f6c8e", "#2e6d8e", "#2e6e8e", "#2e6f8e", "#2d708e", "#2d718e", "#2c718e", "#2c728e", "#2c738e", "#2b748e", "#2b758e", "#2a768e", "#2a778e", "#2a788e", "#29798e", "#297a8e", "#297b8e", "#287c8e", "#287d8e", "#277e8e", "#277f8e", "#27808e", "#26818e", "#26828e", "#26828e", "#25838e", "#25848e", "#25858e", "#24868e", "#24878e", "#23888e", "#23898e", "#238a8d", "#228b8d", "#228c8d", "#228d8d", "#218e8d", "#218f8d", "#21908d", "#21918c", "#20928c", "#20928c", "#20938c", "#1f948c", "#1f958b", "#1f968b", "#1f978b", "#1f988b", "#1f998a", "#1f9a8a", "#1e9b8a", "#1e9c89", "#1e9d89", "#1f9e89", "#1f9f88", "#1fa088", "#1fa188", "#1fa187", "#1fa287", "#20a386", "#20a486", "#21a585", "#21a685", "#22a785", "#22a884", "#23a983", "#24aa83", "#25ab82", "#25ac82", "#26ad81", "#27ad81", "#28ae80", "#29af7f", "#2ab07f", "#2cb17e", "#2db27d", "#2eb37c", "#2fb47c", "#31b57b", "#32b67a", "#34b679", "#35b779", "#37b878", "#38b977", "#3aba76", "#3bbb75", "#3dbc74", "#3fbc73", "#40bd72", "#42be71", "#44bf70", "#46c06f", "#48c16e", "#4ac16d", "#4cc26c", "#4ec36b", "#50c46a", "#52c569", "#54c568", "#56c667", "#58c765", "#5ac864", "#5cc863", "#5ec962", "#60ca60", "#63cb5f", "#65cb5e", "#67cc5c", "#69cd5b", "#6ccd5a", "#6ece58", "#70cf57", "#73d056", "#75d054", "#77d153", "#7ad151", "#7cd250", "#7fd34e", "#81d34d", "#84d44b", "#86d549", "#89d548", "#8bd646", "#8ed645", "#90d743", "#93d741", "#95d840", "#98d83e", "#9bd93c", "#9dd93b", "#a0da39", "#a2da37", "#a5db36", "#a8db34", "#aadc32", "#addc30", "#b0dd2f", "#b2dd2d", "#b5de2b", "#b8de29", "#bade28", "#bddf26", "#c0df25", "#c2df23", "#c5e021", "#c8e020", "#cae11f", "#cde11d", "#d0e11c", "#d2e21b", "#d5e21a", "#d8e219", "#dae319", "#dde318", "#dfe318", "#e2e418", "#e5e419", "#e7e419", "#eae51a", "#ece51b", "#efe51c", "#f1e51d", "#f4e61e", "#f6e620", "#f8e621", "#fbe723", "#fde725"]), Ft.plasma = Ft.fromStringList(["#0d0887", "#100788", "#130789", "#16078a", "#19068c", "#1b068d", "#1d068e", "#20068f", "#220690", "#240691", "#260591", "#280592", "#2a0593", "#2c0594", "#2e0595", "#2f0596", "#310597", "#330597", "#350498", "#370499", "#38049a", "#3a049a", "#3c049b", "#3e049c", "#3f049c", "#41049d", "#43039e", "#44039e", "#46039f", "#48039f", "#4903a0", "#4b03a1", "#4c02a1", "#4e02a2", "#5002a2", "#5102a3", "#5302a3", "#5502a4", "#5601a4", "#5801a4", "#5901a5", "#5b01a5", "#5c01a6", "#5e01a6", "#6001a6", "#6100a7", "#6300a7", "#6400a7", "#6600a7", "#6700a8", "#6900a8", "#6a00a8", "#6c00a8", "#6e00a8", "#6f00a8", "#7100a8", "#7201a8", "#7401a8", "#7501a8", "#7701a8", "#7801a8", "#7a02a8", "#7b02a8", "#7d03a8", "#7e03a8", "#8004a8", "#8104a7", "#8305a7", "#8405a7", "#8606a6", "#8707a6", "#8808a6", "#8a09a5", "#8b0aa5", "#8d0ba5", "#8e0ca4", "#8f0da4", "#910ea3", "#920fa3", "#9410a2", "#9511a1", "#9613a1", "#9814a0", "#99159f", "#9a169f", "#9c179e", "#9d189d", "#9e199d", "#a01a9c", "#a11b9b", "#a21d9a", "#a31e9a", "#a51f99", "#a62098", "#a72197", "#a82296", "#aa2395", "#ab2494", "#ac2694", "#ad2793", "#ae2892", "#b02991", "#b12a90", "#b22b8f", "#b32c8e", "#b42e8d", "#b52f8c", "#b6308b", "#b7318a", "#b83289", "#ba3388", "#bb3488", "#bc3587", "#bd3786", "#be3885", "#bf3984", "#c03a83", "#c13b82", "#c23c81", "#c33d80", "#c43e7f", "#c5407e", "#c6417d", "#c7427c", "#c8437b", "#c9447a", "#ca457a", "#cb4679", "#cc4778", "#cc4977", "#cd4a76", "#ce4b75", "#cf4c74", "#d04d73", "#d14e72", "#d24f71", "#d35171", "#d45270", "#d5536f", "#d5546e", "#d6556d", "#d7566c", "#d8576b", "#d9586a", "#da5a6a", "#da5b69", "#db5c68", "#dc5d67", "#dd5e66", "#de5f65", "#de6164", "#df6263", "#e06363", "#e16462", "#e26561", "#e26660", "#e3685f", "#e4695e", "#e56a5d", "#e56b5d", "#e66c5c", "#e76e5b", "#e76f5a", "#e87059", "#e97158", "#e97257", "#ea7457", "#eb7556", "#eb7655", "#ec7754", "#ed7953", "#ed7a52", "#ee7b51", "#ef7c51", "#ef7e50", "#f07f4f", "#f0804e", "#f1814d", "#f1834c", "#f2844b", "#f3854b", "#f3874a", "#f48849", "#f48948", "#f58b47", "#f58c46", "#f68d45", "#f68f44", "#f79044", "#f79143", "#f79342", "#f89441", "#f89540", "#f9973f", "#f9983e", "#f99a3e", "#fa9b3d", "#fa9c3c", "#fa9e3b", "#fb9f3a", "#fba139", "#fba238", "#fca338", "#fca537", "#fca636", "#fca835", "#fca934", "#fdab33", "#fdac33", "#fdae32", "#fdaf31", "#fdb130", "#fdb22f", "#fdb42f", "#fdb52e", "#feb72d", "#feb82c", "#feba2c", "#febb2b", "#febd2a", "#febe2a", "#fec029", "#fdc229", "#fdc328", "#fdc527", "#fdc627", "#fdc827", "#fdca26", "#fdcb26", "#fccd25", "#fcce25", "#fcd025", "#fcd225", "#fbd324", "#fbd524", "#fbd724", "#fad824", "#fada24", "#f9dc24", "#f9dd25", "#f8df25", "#f8e125", "#f7e225", "#f7e425", "#f6e626", "#f6e826", "#f5e926", "#f5eb27", "#f4ed27", "#f3ee27", "#f3f027", "#f2f227", "#f1f426", "#f1f525", "#f0f724", "#f0f921"]), Ft.inferno = Ft.fromStringList(["#000004", "#010005", "#010106", "#010108", "#02010a", "#02020c", "#02020e", "#030210", "#040312", "#040314", "#050417", "#060419", "#07051b", "#08051d", "#09061f", "#0a0722", "#0b0724", "#0c0826", "#0d0829", "#0e092b", "#10092d", "#110a30", "#120a32", "#140b34", "#150b37", "#160b39", "#180c3c", "#190c3e", "#1b0c41", "#1c0c43", "#1e0c45", "#1f0c48", "#210c4a", "#230c4c", "#240c4f", "#260c51", "#280b53", "#290b55", "#2b0b57", "#2d0b59", "#2f0a5b", "#310a5c", "#320a5e", "#340a5f", "#360961", "#380962", "#390963", "#3b0964", "#3d0965", "#3e0966", "#400a67", "#420a68", "#440a68", "#450a69", "#470b6a", "#490b6a", "#4a0c6b", "#4c0c6b", "#4d0d6c", "#4f0d6c", "#510e6c", "#520e6d", "#540f6d", "#550f6d", "#57106e", "#59106e", "#5a116e", "#5c126e", "#5d126e", "#5f136e", "#61136e", "#62146e", "#64156e", "#65156e", "#67166e", "#69166e", "#6a176e", "#6c186e", "#6d186e", "#6f196e", "#71196e", "#721a6e", "#741a6e", "#751b6e", "#771c6d", "#781c6d", "#7a1d6d", "#7c1d6d", "#7d1e6d", "#7f1e6c", "#801f6c", "#82206c", "#84206b", "#85216b", "#87216b", "#88226a", "#8a226a", "#8c2369", "#8d2369", "#8f2469", "#902568", "#922568", "#932667", "#952667", "#972766", "#982766", "#9a2865", "#9b2964", "#9d2964", "#9f2a63", "#a02a63", "#a22b62", "#a32c61", "#a52c60", "#a62d60", "#a82e5f", "#a92e5e", "#ab2f5e", "#ad305d", "#ae305c", "#b0315b", "#b1325a", "#b3325a", "#b43359", "#b63458", "#b73557", "#b93556", "#ba3655", "#bc3754", "#bd3853", "#bf3952", "#c03a51", "#c13a50", "#c33b4f", "#c43c4e", "#c63d4d", "#c73e4c", "#c83f4b", "#ca404a", "#cb4149", "#cc4248", "#ce4347", "#cf4446", "#d04545", "#d24644", "#d34743", "#d44842", "#d54a41", "#d74b3f", "#d84c3e", "#d94d3d", "#da4e3c", "#db503b", "#dd513a", "#de5238", "#df5337", "#e05536", "#e15635", "#e25734", "#e35933", "#e45a31", "#e55c30", "#e65d2f", "#e75e2e", "#e8602d", "#e9612b", "#ea632a", "#eb6429", "#eb6628", "#ec6726", "#ed6925", "#ee6a24", "#ef6c23", "#ef6e21", "#f06f20", "#f1711f", "#f1731d", "#f2741c", "#f3761b", "#f37819", "#f47918", "#f57b17", "#f57d15", "#f67e14", "#f68013", "#f78212", "#f78410", "#f8850f", "#f8870e", "#f8890c", "#f98b0b", "#f98c0a", "#f98e09", "#fa9008", "#fa9207", "#fa9407", "#fb9606", "#fb9706", "#fb9906", "#fb9b06", "#fb9d07", "#fc9f07", "#fca108", "#fca309", "#fca50a", "#fca60c", "#fca80d", "#fcaa0f", "#fcac11", "#fcae12", "#fcb014", "#fcb216", "#fcb418", "#fbb61a", "#fbb81d", "#fbba1f", "#fbbc21", "#fbbe23", "#fac026", "#fac228", "#fac42a", "#fac62d", "#f9c72f", "#f9c932", "#f9cb35", "#f8cd37", "#f8cf3a", "#f7d13d", "#f7d340", "#f6d543", "#f6d746", "#f5d949", "#f5db4c", "#f4dd4f", "#f4df53", "#f4e156", "#f3e35a", "#f3e55d", "#f2e661", "#f2e865", "#f2ea69", "#f1ec6d", "#f1ed71", "#f1ef75", "#f1f179", "#f2f27d", "#f2f482", "#f3f586", "#f3f68a", "#f4f88e", "#f5f992", "#f6fa96", "#f8fb9a", "#f9fc9d", "#fafda1", "#fcffa4"]), Ft.magma = Ft.fromStringList(["#000004", "#010005", "#010106", "#010108", "#020109", "#02020b", "#02020d", "#03030f", "#030312", "#040414", "#050416", "#060518", "#06051a", "#07061c", "#08071e", "#090720", "#0a0822", "#0b0924", "#0c0926", "#0d0a29", "#0e0b2b", "#100b2d", "#110c2f", "#120d31", "#130d34", "#140e36", "#150e38", "#160f3b", "#180f3d", "#19103f", "#1a1042", "#1c1044", "#1d1147", "#1e1149", "#20114b", "#21114e", "#221150", "#241253", "#251255", "#271258", "#29115a", "#2a115c", "#2c115f", "#2d1161", "#2f1163", "#311165", "#331067", "#341069", "#36106b", "#38106c", "#390f6e", "#3b0f70", "#3d0f71", "#3f0f72", "#400f74", "#420f75", "#440f76", "#451077", "#471078", "#491078", "#4a1079", "#4c117a", "#4e117b", "#4f127b", "#51127c", "#52137c", "#54137d", "#56147d", "#57157e", "#59157e", "#5a167e", "#5c167f", "#5d177f", "#5f187f", "#601880", "#621980", "#641a80", "#651a80", "#671b80", "#681c81", "#6a1c81", "#6b1d81", "#6d1d81", "#6e1e81", "#701f81", "#721f81", "#732081", "#752181", "#762181", "#782281", "#792282", "#7b2382", "#7c2382", "#7e2482", "#802582", "#812581", "#832681", "#842681", "#862781", "#882781", "#892881", "#8b2981", "#8c2981", "#8e2a81", "#902a81", "#912b81", "#932b80", "#942c80", "#962c80", "#982d80", "#992d80", "#9b2e7f", "#9c2e7f", "#9e2f7f", "#a02f7f", "#a1307e", "#a3307e", "#a5317e", "#a6317d", "#a8327d", "#aa337d", "#ab337c", "#ad347c", "#ae347b", "#b0357b", "#b2357b", "#b3367a", "#b5367a", "#b73779", "#b83779", "#ba3878", "#bc3978", "#bd3977", "#bf3a77", "#c03a76", "#c23b75", "#c43c75", "#c53c74", "#c73d73", "#c83e73", "#ca3e72", "#cc3f71", "#cd4071", "#cf4070", "#d0416f", "#d2426f", "#d3436e", "#d5446d", "#d6456c", "#d8456c", "#d9466b", "#db476a", "#dc4869", "#de4968", "#df4a68", "#e04c67", "#e24d66", "#e34e65", "#e44f64", "#e55064", "#e75263", "#e85362", "#e95462", "#ea5661", "#eb5760", "#ec5860", "#ed5a5f", "#ee5b5e", "#ef5d5e", "#f05f5e", "#f1605d", "#f2625d", "#f2645c", "#f3655c", "#f4675c", "#f4695c", "#f56b5c", "#f66c5c", "#f66e5c", "#f7705c", "#f7725c", "#f8745c", "#f8765c", "#f9785d", "#f9795d", "#f97b5d", "#fa7d5e", "#fa7f5e", "#fa815f", "#fb835f", "#fb8560", "#fb8761", "#fc8961", "#fc8a62", "#fc8c63", "#fc8e64", "#fc9065", "#fd9266", "#fd9467", "#fd9668", "#fd9869", "#fd9a6a", "#fd9b6b", "#fe9d6c", "#fe9f6d", "#fea16e", "#fea36f", "#fea571", "#fea772", "#fea973", "#feaa74", "#feac76", "#feae77", "#feb078", "#feb27a", "#feb47b", "#feb67c", "#feb77e", "#feb97f", "#febb81", "#febd82", "#febf84", "#fec185", "#fec287", "#fec488", "#fec68a", "#fec88c", "#feca8d", "#fecc8f", "#fecd90", "#fecf92", "#fed194", "#fed395", "#fed597", "#fed799", "#fed89a", "#fdda9c", "#fddc9e", "#fddea0", "#fde0a1", "#fde2a3", "#fde3a5", "#fde5a7", "#fde7a9", "#fde9aa", "#fdebac", "#fcecae", "#fceeb0", "#fcf0b2", "#fcf2b4", "#fcf4b6", "#fcf6b8", "#fcf7b9", "#fcf9bb", "#fcfbbd", "#fcfdbf"]), Ft.cividis = Ft.fromStringList(["#00224e", "#00234f", "#002451", "#002553", "#002554", "#002656", "#002758", "#002859", "#00285b", "#00295d", "#002a5f", "#002a61", "#002b62", "#002c64", "#002c66", "#002d68", "#002e6a", "#002e6c", "#002f6d", "#00306f", "#003070", "#003170", "#003171", "#013271", "#053371", "#083370", "#0c3470", "#0f3570", "#123570", "#143670", "#163770", "#18376f", "#1a386f", "#1c396f", "#1e3a6f", "#203a6f", "#213b6e", "#233c6e", "#243c6e", "#263d6e", "#273e6e", "#293f6e", "#2a3f6d", "#2b406d", "#2d416d", "#2e416d", "#2f426d", "#31436d", "#32436d", "#33446d", "#34456c", "#35456c", "#36466c", "#38476c", "#39486c", "#3a486c", "#3b496c", "#3c4a6c", "#3d4a6c", "#3e4b6c", "#3f4c6c", "#404c6c", "#414d6c", "#424e6c", "#434e6c", "#444f6c", "#45506c", "#46516c", "#47516c", "#48526c", "#49536c", "#4a536c", "#4b546c", "#4c556c", "#4d556c", "#4e566c", "#4f576c", "#50576c", "#51586d", "#52596d", "#535a6d", "#545a6d", "#555b6d", "#555c6d", "#565c6d", "#575d6d", "#585e6d", "#595e6e", "#5a5f6e", "#5b606e", "#5c616e", "#5d616e", "#5e626e", "#5e636f", "#5f636f", "#60646f", "#61656f", "#62656f", "#636670", "#646770", "#656870", "#656870", "#666970", "#676a71", "#686a71", "#696b71", "#6a6c71", "#6b6d72", "#6c6d72", "#6c6e72", "#6d6f72", "#6e6f73", "#6f7073", "#707173", "#717274", "#727274", "#727374", "#737475", "#747475", "#757575", "#767676", "#777776", "#777777", "#787877", "#797977", "#7a7a78", "#7b7a78", "#7c7b78", "#7d7c78", "#7e7c78", "#7e7d78", "#7f7e78", "#807f78", "#817f78", "#828079", "#838179", "#848279", "#858279", "#868379", "#878478", "#888578", "#898578", "#8a8678", "#8b8778", "#8c8878", "#8d8878", "#8e8978", "#8f8a78", "#908b78", "#918b78", "#928c78", "#928d78", "#938e78", "#948e77", "#958f77", "#969077", "#979177", "#989277", "#999277", "#9a9376", "#9b9476", "#9c9576", "#9d9576", "#9e9676", "#9f9775", "#a09875", "#a19975", "#a29975", "#a39a74", "#a49b74", "#a59c74", "#a69c74", "#a79d73", "#a89e73", "#a99f73", "#aaa073", "#aba072", "#aca172", "#ada272", "#aea371", "#afa471", "#b0a571", "#b1a570", "#b3a670", "#b4a76f", "#b5a86f", "#b6a96f", "#b7a96e", "#b8aa6e", "#b9ab6d", "#baac6d", "#bbad6d", "#bcae6c", "#bdae6c", "#beaf6b", "#bfb06b", "#c0b16a", "#c1b26a", "#c2b369", "#c3b369", "#c4b468", "#c5b568", "#c6b667", "#c7b767", "#c8b866", "#c9b965", "#cbb965", "#ccba64", "#cdbb63", "#cebc63", "#cfbd62", "#d0be62", "#d1bf61", "#d2c060", "#d3c05f", "#d4c15f", "#d5c25e", "#d6c35d", "#d7c45c", "#d9c55c", "#dac65b", "#dbc75a", "#dcc859", "#ddc858", "#dec958", "#dfca57", "#e0cb56", "#e1cc55", "#e2cd54", "#e4ce53", "#e5cf52", "#e6d051", "#e7d150", "#e8d24f", "#e9d34e", "#ead34c", "#ebd44b", "#edd54a", "#eed649", "#efd748", "#f0d846", "#f1d945", "#f2da44", "#f3db42", "#f5dc41", "#f6dd3f", "#f7de3e", "#f8df3c", "#f9e03a", "#fbe138", "#fce236", "#fde334", "#fee434", "#fee535", "#fee636", "#fee838"]), Ft.greys = Ft.fromStringList(["#ffffff", "#ffffff", "#fefefe", "#fefefe", "#fdfdfd", "#fdfdfd", "#fcfcfc", "#fcfcfc", "#fbfbfb", "#fbfbfb", "#fafafa", "#fafafa", "#f9f9f9", "#f9f9f9", "#f8f8f8", "#f8f8f8", "#f7f7f7", "#f7f7f7", "#f7f7f7", "#f6f6f6", "#f6f6f6", "#f5f5f5", "#f5f5f5", "#f4f4f4", "#f4f4f4", "#f3f3f3", "#f3f3f3", "#f2f2f2", "#f2f2f2", "#f1f1f1", "#f1f1f1", "#f0f0f0", "#f0f0f0", "#efefef", "#eeeeee", "#eeeeee", "#ededed", "#ececec", "#ececec", "#ebebeb", "#eaeaea", "#e9e9e9", "#e9e9e9", "#e8e8e8", "#e7e7e7", "#e7e7e7", "#e6e6e6", "#e5e5e5", "#e4e4e4", "#e4e4e4", "#e3e3e3", "#e2e2e2", "#e1e1e1", "#e1e1e1", "#e0e0e0", "#dfdfdf", "#dfdfdf", "#dedede", "#dddddd", "#dcdcdc", "#dcdcdc", "#dbdbdb", "#dadada", "#dadada", "#d9d9d9", "#d8d8d8", "#d7d7d7", "#d6d6d6", "#d5d5d5", "#d4d4d4", "#d4d4d4", "#d3d3d3", "#d2d2d2", "#d1d1d1", "#d0d0d0", "#cfcfcf", "#cecece", "#cdcdcd", "#cccccc", "#cccccc", "#cbcbcb", "#cacaca", "#c9c9c9", "#c8c8c8", "#c7c7c7", "#c6c6c6", "#c5c5c5", "#c5c5c5", "#c4c4c4", "#c3c3c3", "#c2c2c2", "#c1c1c1", "#c0c0c0", "#bfbfbf", "#bebebe", "#bebebe", "#bdbdbd", "#bbbbbb", "#bababa", "#b9b9b9", "#b8b8b8", "#b6b6b6", "#b5b5b5", "#b4b4b4", "#b3b3b3", "#b2b2b2", "#b0b0b0", "#afafaf", "#aeaeae", "#adadad", "#ababab", "#aaaaaa", "#a9a9a9", "#a8a8a8", "#a7a7a7", "#a5a5a5", "#a4a4a4", "#a3a3a3", "#a2a2a2", "#a0a0a0", "#9f9f9f", "#9e9e9e", "#9d9d9d", "#9c9c9c", "#9a9a9a", "#999999", "#989898", "#979797", "#959595", "#949494", "#939393", "#929292", "#919191", "#909090", "#8f8f8f", "#8e8e8e", "#8d8d8d", "#8c8c8c", "#8a8a8a", "#898989", "#888888", "#878787", "#868686", "#858585", "#848484", "#838383", "#828282", "#818181", "#7f7f7f", "#7e7e7e", "#7d7d7d", "#7c7c7c", "#7b7b7b", "#7a7a7a", "#797979", "#787878", "#777777", "#767676", "#757575", "#737373", "#727272", "#717171", "#707070", "#6f6f6f", "#6e6e6e", "#6d6d6d", "#6c6c6c", "#6b6b6b", "#6a6a6a", "#696969", "#686868", "#676767", "#666666", "#656565", "#646464", "#636363", "#626262", "#616161", "#606060", "#5f5f5f", "#5e5e5e", "#5d5d5d", "#5c5c5c", "#5b5b5b", "#5a5a5a", "#585858", "#575757", "#565656", "#555555", "#545454", "#535353", "#525252", "#515151", "#505050", "#4e4e4e", "#4d4d4d", "#4b4b4b", "#4a4a4a", "#484848", "#474747", "#464646", "#444444", "#434343", "#414141", "#404040", "#3f3f3f", "#3d3d3d", "#3c3c3c", "#3a3a3a", "#393939", "#383838", "#363636", "#353535", "#333333", "#323232", "#303030", "#2f2f2f", "#2e2e2e", "#2c2c2c", "#2b2b2b", "#292929", "#282828", "#272727", "#252525", "#242424", "#232323", "#222222", "#212121", "#1f1f1f", "#1e1e1e", "#1d1d1d", "#1c1c1c", "#1b1b1b", "#1a1a1a", "#181818", "#171717", "#161616", "#151515", "#141414", "#131313", "#111111", "#101010", "#0f0f0f", "#0e0e0e", "#0d0d0d", "#0c0c0c", "#0a0a0a", "#090909", "#080808", "#070707", "#060606", "#050505", "#030303", "#020202", "#010101", "#000000"]), Ft.gray = Ft.fromStringList(["#000000", "#010101", "#020202", "#030303", "#040404", "#050505", "#060606", "#070707", "#080808", "#090909", "#0a0a0a", "#0b0b0b", "#0c0c0c", "#0d0d0d", "#0e0e0e", "#0f0f0f", "#101010", "#111111", "#121212", "#131313", "#141414", "#151515", "#161616", "#171717", "#181818", "#191919", "#1a1a1a", "#1b1b1b", "#1c1c1c", "#1d1d1d", "#1e1e1e", "#1f1f1f", "#202020", "#212121", "#222222", "#232323", "#242424", "#252525", "#262626", "#272727", "#282828", "#292929", "#2a2a2a", "#2b2b2b", "#2c2c2c", "#2d2d2d", "#2e2e2e", "#2f2f2f", "#303030", "#313131", "#323232", "#333333", "#343434", "#353535", "#363636", "#373737", "#383838", "#393939", "#3a3a3a", "#3b3b3b", "#3c3c3c", "#3d3d3d", "#3e3e3e", "#3f3f3f", "#404040", "#414141", "#424242", "#434343", "#444444", "#454545", "#464646", "#474747", "#484848", "#494949", "#4a4a4a", "#4b4b4b", "#4c4c4c", "#4d4d4d", "#4e4e4e", "#4f4f4f", "#505050", "#515151", "#525252", "#535353", "#545454", "#555555", "#565656", "#575757", "#585858", "#595959", "#5a5a5a", "#5b5b5b", "#5c5c5c", "#5d5d5d", "#5e5e5e", "#5f5f5f", "#606060", "#616161", "#626262", "#636363", "#646464", "#656565", "#666666", "#676767", "#686868", "#696969", "#6a6a6a", "#6b6b6b", "#6c6c6c", "#6d6d6d", "#6e6e6e", "#6f6f6f", "#707070", "#717171", "#727272", "#737373", "#747474", "#757575", "#767676", "#777777", "#787878", "#797979", "#7a7a7a", "#7b7b7b", "#7c7c7c", "#7d7d7d", "#7e7e7e", "#7f7f7f", "#808080", "#818181", "#828282", "#838383", "#848484", "#858585", "#868686", "#878787", "#888888", "#898989", "#8a8a8a", "#8b8b8b", "#8c8c8c", "#8d8d8d", "#8e8e8e", "#8f8f8f", "#909090", "#919191", "#929292", "#939393", "#949494", "#959595", "#969696", "#979797", "#989898", "#999999", "#9a9a9a", "#9b9b9b", "#9c9c9c", "#9d9d9d", "#9e9e9e", "#9f9f9f", "#a0a0a0", "#a1a1a1", "#a2a2a2", "#a3a3a3", "#a4a4a4", "#a5a5a5", "#a6a6a6", "#a7a7a7", "#a8a8a8", "#a9a9a9", "#aaaaaa", "#ababab", "#acacac", "#adadad", "#aeaeae", "#afafaf", "#b0b0b0", "#b1b1b1", "#b2b2b2", "#b3b3b3", "#b4b4b4", "#b5b5b5", "#b6b6b6", "#b7b7b7", "#b8b8b8", "#b9b9b9", "#bababa", "#bbbbbb", "#bcbcbc", "#bdbdbd", "#bebebe", "#bfbfbf", "#c0c0c0", "#c1c1c1", "#c2c2c2", "#c3c3c3", "#c4c4c4", "#c5c5c5", "#c6c6c6", "#c7c7c7", "#c8c8c8", "#c9c9c9", "#cacaca", "#cbcbcb", "#cccccc", "#cdcdcd", "#cecece", "#cfcfcf", "#d0d0d0", "#d1d1d1", "#d2d2d2", "#d3d3d3", "#d4d4d4", "#d5d5d5", "#d6d6d6", "#d7d7d7", "#d8d8d8", "#d9d9d9", "#dadada", "#dbdbdb", "#dcdcdc", "#dddddd", "#dedede", "#dfdfdf", "#e0e0e0", "#e1e1e1", "#e2e2e2", "#e3e3e3", "#e4e4e4", "#e5e5e5", "#e6e6e6", "#e7e7e7", "#e8e8e8", "#e9e9e9", "#eaeaea", "#ebebeb", "#ececec", "#ededed", "#eeeeee", "#efefef", "#f0f0f0", "#f1f1f1", "#f2f2f2", "#f3f3f3", "#f4f4f4", "#f5f5f5", "#f6f6f6", "#f7f7f7", "#f8f8f8", "#f9f9f9", "#fafafa", "#fbfbfb", "#fcfcfc", "#fdfdfd", "#fefefe", "#ffffff"]), Ft.purples = Ft.fromStringList(["#fcfbfd", "#fcfbfd", "#fbfafc", "#fbfafc", "#faf9fc", "#faf9fc", "#faf8fb", "#f9f8fb", "#f9f7fb", "#f8f7fb", "#f8f7fa", "#f8f6fa", "#f7f6fa", "#f7f5fa", "#f6f5f9", "#f6f4f9", "#f5f4f9", "#f5f4f9", "#f5f3f8", "#f4f3f8", "#f4f2f8", "#f3f2f8", "#f3f1f7", "#f3f1f7", "#f2f0f7", "#f2f0f7", "#f1f0f6", "#f1eff6", "#f1eff6", "#f0eef6", "#f0eef5", "#efedf5", "#efedf5", "#eeecf5", "#eeecf4", "#edebf4", "#ecebf4", "#eceaf3", "#ebe9f3", "#eae9f3", "#eae8f2", "#e9e8f2", "#e8e7f2", "#e8e6f2", "#e7e6f1", "#e6e5f1", "#e6e5f1", "#e5e4f0", "#e4e3f0", "#e4e3f0", "#e3e2ef", "#e2e2ef", "#e2e1ef", "#e1e0ee", "#e0e0ee", "#e0dfee", "#dfdfed", "#dedeed", "#dedded", "#ddddec", "#dcdcec", "#dcdcec", "#dbdbec", "#dadaeb", "#dadaeb", "#d9d9ea", "#d8d8ea", "#d7d7e9", "#d6d6e9", "#d5d5e9", "#d4d4e8", "#d3d3e8", "#d2d2e7", "#d1d2e7", "#d0d1e6", "#cfd0e6", "#cecfe5", "#cecee5", "#cdcde4", "#cccce4", "#cbcbe3", "#cacae3", "#c9c9e2", "#c8c8e2", "#c7c8e1", "#c6c7e1", "#c5c6e1", "#c4c5e0", "#c3c4e0", "#c2c3df", "#c1c2df", "#c0c1de", "#bfc0de", "#bebfdd", "#bebedd", "#bdbedc", "#bcbddc", "#bbbbdb", "#babadb", "#b9b9da", "#b8b8d9", "#b7b7d9", "#b6b6d8", "#b5b5d7", "#b4b4d7", "#b3b3d6", "#b2b2d5", "#b1b1d5", "#b0afd4", "#afaed4", "#aeadd3", "#aeacd2", "#adabd2", "#acaad1", "#aba9d0", "#aaa8d0", "#a9a7cf", "#a8a6cf", "#a7a4ce", "#a6a3cd", "#a5a2cd", "#a4a1cc", "#a3a0cb", "#a29fcb", "#a19eca", "#a09dca", "#9f9cc9", "#9e9bc8", "#9e9ac8", "#9d99c7", "#9c98c7", "#9b97c6", "#9a96c6", "#9995c6", "#9894c5", "#9793c5", "#9692c4", "#9591c4", "#9490c3", "#9390c3", "#928fc3", "#918ec2", "#908dc2", "#8f8cc1", "#8e8bc1", "#8e8ac0", "#8d89c0", "#8c88bf", "#8b87bf", "#8a86bf", "#8986be", "#8885be", "#8784bd", "#8683bd", "#8582bc", "#8481bc", "#8380bb", "#827fbb", "#817ebb", "#807dba", "#807cba", "#7f7bb9", "#7e79b8", "#7d78b7", "#7d77b7", "#7c75b6", "#7b74b5", "#7b72b4", "#7a71b4", "#7970b3", "#796eb2", "#786db2", "#776cb1", "#776ab0", "#7669af", "#7567af", "#7566ae", "#7465ad", "#7363ad", "#7262ac", "#7261ab", "#715faa", "#705eaa", "#705ca9", "#6f5ba8", "#6e5aa8", "#6e58a7", "#6d57a6", "#6c55a5", "#6c54a5", "#6b53a4", "#6a51a3", "#6950a3", "#694fa2", "#684da1", "#674ca1", "#674ba0", "#66499f", "#65489f", "#65479e", "#64459e", "#63449d", "#63439c", "#62429c", "#61409b", "#613f9a", "#603e9a", "#5f3c99", "#5e3b98", "#5e3a98", "#5d3897", "#5c3797", "#5c3696", "#5b3495", "#5a3395", "#5a3294", "#593093", "#582f93", "#582e92", "#572c92", "#562b91", "#552a90", "#552890", "#54278f", "#53268f", "#53258e", "#52238d", "#51228d", "#51218c", "#50208c", "#4f1f8b", "#4f1d8b", "#4e1c8a", "#4d1b89", "#4d1a89", "#4c1888", "#4c1788", "#4b1687", "#4a1587", "#4a1486", "#491285", "#481185", "#481084", "#470f84", "#460d83", "#460c83", "#450b82", "#440a82", "#440981", "#430780", "#420680", "#42057f", "#41047f", "#40027e", "#40017e", "#3f007d"]), Ft.blues = Ft.fromStringList(["#f7fbff", "#f6faff", "#f5fafe", "#f5f9fe", "#f4f9fe", "#f3f8fe", "#f2f8fd", "#f2f7fd", "#f1f7fd", "#f0f6fd", "#eff6fc", "#eef5fc", "#eef5fc", "#edf4fc", "#ecf4fb", "#ebf3fb", "#eaf3fb", "#eaf2fb", "#e9f2fa", "#e8f1fa", "#e7f1fa", "#e7f0fa", "#e6f0f9", "#e5eff9", "#e4eff9", "#e3eef9", "#e3eef8", "#e2edf8", "#e1edf8", "#e0ecf8", "#dfecf7", "#dfebf7", "#deebf7", "#ddeaf7", "#dceaf6", "#dce9f6", "#dbe9f6", "#dae8f6", "#d9e8f5", "#d9e7f5", "#d8e7f5", "#d7e6f5", "#d6e6f4", "#d6e5f4", "#d5e5f4", "#d4e4f4", "#d3e4f3", "#d3e3f3", "#d2e3f3", "#d1e2f3", "#d0e2f2", "#d0e1f2", "#cfe1f2", "#cee0f2", "#cde0f1", "#cddff1", "#ccdff1", "#cbdef1", "#cadef0", "#caddf0", "#c9ddf0", "#c8dcf0", "#c7dcef", "#c7dbef", "#c6dbef", "#c4daee", "#c3daee", "#c2d9ee", "#c1d9ed", "#bfd8ed", "#bed8ec", "#bdd7ec", "#bcd7eb", "#bad6eb", "#b9d6ea", "#b8d5ea", "#b7d4ea", "#b5d4e9", "#b4d3e9", "#b3d3e8", "#b2d2e8", "#b0d2e7", "#afd1e7", "#aed1e7", "#add0e6", "#abd0e6", "#aacfe5", "#a9cfe5", "#a8cee4", "#a6cee4", "#a5cde3", "#a4cce3", "#a3cce3", "#a1cbe2", "#a0cbe2", "#9fcae1", "#9dcae1", "#9cc9e1", "#9ac8e0", "#99c7e0", "#97c6df", "#95c5df", "#94c4df", "#92c4de", "#91c3de", "#8fc2de", "#8dc1dd", "#8cc0dd", "#8abfdd", "#89bedc", "#87bddc", "#85bcdc", "#84bcdb", "#82bbdb", "#81badb", "#7fb9da", "#7db8da", "#7cb7da", "#7ab6d9", "#79b5d9", "#77b5d9", "#75b4d8", "#74b3d8", "#72b2d8", "#71b1d7", "#6fb0d7", "#6dafd7", "#6caed6", "#6aaed6", "#69add5", "#68acd5", "#66abd4", "#65aad4", "#64a9d3", "#63a8d3", "#61a7d2", "#60a7d2", "#5fa6d1", "#5da5d1", "#5ca4d0", "#5ba3d0", "#5aa2cf", "#58a1cf", "#57a0ce", "#56a0ce", "#549fcd", "#539ecd", "#529dcc", "#519ccc", "#4f9bcb", "#4e9acb", "#4d99ca", "#4b98ca", "#4a98c9", "#4997c9", "#4896c8", "#4695c8", "#4594c7", "#4493c7", "#4292c6", "#4191c6", "#4090c5", "#3f8fc5", "#3e8ec4", "#3d8dc4", "#3c8cc3", "#3b8bc2", "#3a8ac2", "#3989c1", "#3888c1", "#3787c0", "#3686c0", "#3585bf", "#3484bf", "#3383be", "#3282be", "#3181bd", "#3080bd", "#2f7fbc", "#2e7ebc", "#2d7dbb", "#2c7cba", "#2b7bba", "#2a7ab9", "#2979b9", "#2777b8", "#2676b8", "#2575b7", "#2474b7", "#2373b6", "#2272b6", "#2171b5", "#2070b4", "#206fb4", "#1f6eb3", "#1e6db2", "#1d6cb1", "#1c6bb0", "#1c6ab0", "#1b69af", "#1a68ae", "#1967ad", "#1966ad", "#1865ac", "#1764ab", "#1663aa", "#1562a9", "#1561a9", "#1460a8", "#135fa7", "#125ea6", "#125da6", "#115ca5", "#105ba4", "#0f5aa3", "#0e59a2", "#0e58a2", "#0d57a1", "#0c56a0", "#0b559f", "#0a549e", "#0a539e", "#09529d", "#08519c", "#08509b", "#084f99", "#084e98", "#084d96", "#084c95", "#084b93", "#084a91", "#084990", "#08488e", "#08478d", "#08468b", "#08458a", "#084488", "#084387", "#084285", "#084184", "#084082", "#083e81", "#083d7f", "#083c7d", "#083b7c", "#083a7a", "#083979", "#083877", "#083776", "#083674", "#083573", "#083471", "#083370", "#08326e", "#08316d", "#08306b"]), Ft.greens = Ft.fromStringList(["#f7fcf5", "#f6fcf4", "#f6fcf4", "#f5fbf3", "#f5fbf2", "#f4fbf2", "#f4fbf1", "#f3faf0", "#f2faf0", "#f2faef", "#f1faee", "#f1faee", "#f0f9ed", "#f0f9ec", "#eff9ec", "#eff9eb", "#eef8ea", "#edf8ea", "#edf8e9", "#ecf8e8", "#ecf8e8", "#ebf7e7", "#ebf7e7", "#eaf7e6", "#e9f7e5", "#e9f7e5", "#e8f6e4", "#e8f6e3", "#e7f6e3", "#e7f6e2", "#e6f5e1", "#e5f5e1", "#e5f5e0", "#e4f5df", "#e3f4de", "#e2f4dd", "#e1f3dc", "#e0f3db", "#dff3da", "#def2d9", "#ddf2d8", "#dcf2d7", "#dbf1d6", "#dbf1d5", "#daf0d4", "#d9f0d3", "#d8f0d2", "#d7efd1", "#d6efd0", "#d5efcf", "#d4eece", "#d3eecd", "#d2edcc", "#d1edcb", "#d0edca", "#cfecc9", "#ceecc8", "#cdecc7", "#ccebc6", "#cbebc5", "#cbeac4", "#caeac3", "#c9eac2", "#c8e9c1", "#c7e9c0", "#c6e8bf", "#c4e8bd", "#c3e7bc", "#c2e7bb", "#c1e6ba", "#c0e6b9", "#bee5b8", "#bde5b6", "#bce4b5", "#bbe4b4", "#bae3b3", "#b8e3b2", "#b7e2b1", "#b6e2af", "#b5e1ae", "#b4e1ad", "#b2e0ac", "#b1e0ab", "#b0dfaa", "#afdfa8", "#aedea7", "#acdea6", "#abdda5", "#aadda4", "#a9dca3", "#a8dca2", "#a7dba0", "#a5db9f", "#a4da9e", "#a3da9d", "#a2d99c", "#a0d99b", "#9fd899", "#9ed798", "#9cd797", "#9bd696", "#99d595", "#98d594", "#97d492", "#95d391", "#94d390", "#92d28f", "#91d28e", "#90d18d", "#8ed08b", "#8dd08a", "#8bcf89", "#8ace88", "#88ce87", "#87cd86", "#86cc85", "#84cc83", "#83cb82", "#81ca81", "#80ca80", "#7fc97f", "#7dc87e", "#7cc87c", "#7ac77b", "#79c67a", "#78c679", "#76c578", "#75c477", "#73c476", "#72c375", "#70c274", "#6ec173", "#6dc072", "#6bc072", "#6abf71", "#68be70", "#66bd6f", "#65bd6f", "#63bc6e", "#62bb6d", "#60ba6c", "#5eb96b", "#5db96b", "#5bb86a", "#5ab769", "#58b668", "#56b567", "#55b567", "#53b466", "#52b365", "#50b264", "#4eb264", "#4db163", "#4bb062", "#4aaf61", "#48ae60", "#46ae60", "#45ad5f", "#43ac5e", "#42ab5d", "#40aa5d", "#3fa95c", "#3fa85b", "#3ea75a", "#3da65a", "#3ca559", "#3ba458", "#3aa357", "#39a257", "#38a156", "#37a055", "#369f54", "#359e53", "#349d53", "#339c52", "#329b51", "#319a50", "#309950", "#2f984f", "#2f974e", "#2e964d", "#2d954d", "#2c944c", "#2b934b", "#2a924a", "#29914a", "#289049", "#278f48", "#268e47", "#258d47", "#248c46", "#238b45", "#228a44", "#218944", "#208843", "#1f8742", "#1e8741", "#1d8640", "#1c8540", "#1a843f", "#19833e", "#18823d", "#17813d", "#16803c", "#157f3b", "#147e3a", "#137d39", "#127c39", "#117b38", "#107a37", "#0e7936", "#0d7836", "#0c7735", "#0b7734", "#0a7633", "#097532", "#087432", "#077331", "#067230", "#05712f", "#03702e", "#026f2e", "#016e2d", "#006d2c", "#006c2c", "#006b2b", "#00692a", "#00682a", "#006729", "#006529", "#006428", "#006328", "#006227", "#006027", "#005f26", "#005e26", "#005c25", "#005b25", "#005a24", "#005924", "#005723", "#005622", "#005522", "#005321", "#005221", "#005120", "#005020", "#004e1f", "#004d1f", "#004c1e", "#004a1e", "#00491d", "#00481d", "#00471c", "#00451c", "#00441b"]), Ft.oranges = Ft.fromStringList(["#fff5eb", "#fff5ea", "#fff4e9", "#fff4e8", "#fff3e7", "#fff3e6", "#fff2e6", "#fff2e5", "#fff1e4", "#fff1e3", "#fff0e2", "#fff0e1", "#ffefe0", "#ffefdf", "#ffeede", "#ffeedd", "#feeddc", "#feeddc", "#feeddb", "#feecda", "#feecd9", "#feebd8", "#feebd7", "#feead6", "#feead5", "#fee9d4", "#fee9d3", "#fee8d2", "#fee8d2", "#fee7d1", "#fee7d0", "#fee6cf", "#fee6ce", "#fee5cc", "#fee5cb", "#fee4ca", "#fee3c8", "#fee2c7", "#fee2c6", "#fee1c4", "#fee0c3", "#fee0c1", "#fedfc0", "#fedebf", "#fedebd", "#feddbc", "#fedcbb", "#fedcb9", "#fddbb8", "#fddab6", "#fdd9b5", "#fdd9b4", "#fdd8b2", "#fdd7b1", "#fdd7af", "#fdd6ae", "#fdd5ad", "#fdd5ab", "#fdd4aa", "#fdd3a9", "#fdd3a7", "#fdd2a6", "#fdd1a4", "#fdd1a3", "#fdd0a2", "#fdcfa0", "#fdce9e", "#fdcd9c", "#fdcb9b", "#fdca99", "#fdc997", "#fdc895", "#fdc794", "#fdc692", "#fdc590", "#fdc48f", "#fdc38d", "#fdc28b", "#fdc189", "#fdc088", "#fdbf86", "#fdbe84", "#fdbd83", "#fdbb81", "#fdba7f", "#fdb97d", "#fdb87c", "#fdb77a", "#fdb678", "#fdb576", "#fdb475", "#fdb373", "#fdb271", "#fdb170", "#fdb06e", "#fdaf6c", "#fdae6a", "#fdad69", "#fdac67", "#fdab66", "#fda965", "#fda863", "#fda762", "#fda660", "#fda55f", "#fda45d", "#fda35c", "#fda25a", "#fda159", "#fda057", "#fd9f56", "#fd9e54", "#fd9d53", "#fd9c51", "#fd9b50", "#fd9a4e", "#fd994d", "#fd984b", "#fd974a", "#fd9649", "#fd9547", "#fd9446", "#fd9344", "#fd9243", "#fd9141", "#fd9040", "#fd8f3e", "#fd8e3d", "#fd8c3b", "#fc8b3a", "#fc8a39", "#fc8937", "#fb8836", "#fb8735", "#fb8634", "#fa8532", "#fa8331", "#f98230", "#f9812e", "#f9802d", "#f87f2c", "#f87e2b", "#f87d29", "#f77b28", "#f77a27", "#f67925", "#f67824", "#f67723", "#f57622", "#f57520", "#f5741f", "#f4721e", "#f4711c", "#f3701b", "#f36f1a", "#f36e19", "#f26d17", "#f26c16", "#f26b15", "#f16913", "#f16813", "#f06712", "#ef6612", "#ee6511", "#ee6410", "#ed6310", "#ec620f", "#eb610f", "#eb600e", "#ea5f0e", "#e95e0d", "#e85d0c", "#e75c0c", "#e75b0b", "#e65a0b", "#e5590a", "#e4580a", "#e45709", "#e35608", "#e25508", "#e15407", "#e15307", "#e05206", "#df5106", "#de5005", "#de4e05", "#dd4d04", "#dc4c03", "#db4b03", "#db4a02", "#da4902", "#d94801", "#d84801", "#d64701", "#d54601", "#d34601", "#d14501", "#d04501", "#ce4401", "#cd4401", "#cb4302", "#c94202", "#c84202", "#c64102", "#c54102", "#c34002", "#c14002", "#c03f02", "#be3f02", "#bd3e02", "#bb3d02", "#b93d02", "#b83c02", "#b63c02", "#b53b02", "#b33b02", "#b13a03", "#b03903", "#ae3903", "#ad3803", "#ab3803", "#a93703", "#a83703", "#a63603", "#a53603", "#a43503", "#a23503", "#a13403", "#a03403", "#9f3303", "#9e3303", "#9c3203", "#9b3203", "#9a3103", "#993103", "#973003", "#963003", "#952f03", "#942f03", "#932f03", "#912e04", "#902e04", "#8f2d04", "#8e2d04", "#8c2c04", "#8b2c04", "#8a2b04", "#892b04", "#882a04", "#862a04", "#852904", "#842904", "#832804", "#812804", "#802704", "#7f2704"]), Ft.reds = Ft.fromStringList(["#fff5f0", "#fff4ef", "#fff4ee", "#fff3ed", "#fff2ec", "#fff2eb", "#fff1ea", "#fff0e9", "#fff0e8", "#ffefe8", "#ffeee7", "#ffeee6", "#ffede5", "#ffece4", "#ffece3", "#ffebe2", "#feeae1", "#feeae0", "#fee9df", "#fee8de", "#fee8dd", "#fee7dc", "#fee7db", "#fee6da", "#fee5d9", "#fee5d8", "#fee4d8", "#fee3d7", "#fee3d6", "#fee2d5", "#fee1d4", "#fee1d3", "#fee0d2", "#fedfd0", "#fedecf", "#fedccd", "#fedbcc", "#fedaca", "#fed9c9", "#fed8c7", "#fdd7c6", "#fdd5c4", "#fdd4c2", "#fdd3c1", "#fdd2bf", "#fdd1be", "#fdd0bc", "#fdcebb", "#fdcdb9", "#fdccb8", "#fdcbb6", "#fdcab5", "#fdc9b3", "#fdc7b2", "#fdc6b0", "#fdc5ae", "#fcc4ad", "#fcc3ab", "#fcc2aa", "#fcc1a8", "#fcbfa7", "#fcbea5", "#fcbda4", "#fcbca2", "#fcbba1", "#fcb99f", "#fcb89e", "#fcb79c", "#fcb69b", "#fcb499", "#fcb398", "#fcb296", "#fcb095", "#fcaf93", "#fcae92", "#fcad90", "#fcab8f", "#fcaa8d", "#fca98c", "#fca78b", "#fca689", "#fca588", "#fca486", "#fca285", "#fca183", "#fca082", "#fc9e80", "#fc9d7f", "#fc9c7d", "#fc9b7c", "#fc997a", "#fc9879", "#fc9777", "#fc9576", "#fc9474", "#fc9373", "#fc9272", "#fc9070", "#fc8f6f", "#fc8e6e", "#fc8d6d", "#fc8b6b", "#fc8a6a", "#fc8969", "#fc8767", "#fc8666", "#fc8565", "#fc8464", "#fc8262", "#fc8161", "#fc8060", "#fc7f5f", "#fb7d5d", "#fb7c5c", "#fb7b5b", "#fb7a5a", "#fb7858", "#fb7757", "#fb7656", "#fb7555", "#fb7353", "#fb7252", "#fb7151", "#fb7050", "#fb6e4e", "#fb6d4d", "#fb6c4c", "#fb6b4b", "#fb694a", "#fa6849", "#fa6648", "#fa6547", "#f96346", "#f96245", "#f96044", "#f85f43", "#f85d42", "#f75c41", "#f75b40", "#f7593f", "#f6583e", "#f6563d", "#f6553c", "#f5533b", "#f5523a", "#f4503a", "#f44f39", "#f44d38", "#f34c37", "#f34a36", "#f34935", "#f24734", "#f24633", "#f14432", "#f14331", "#f14130", "#f0402f", "#f03f2e", "#f03d2d", "#ef3c2c", "#ee3a2c", "#ed392b", "#ec382b", "#eb372a", "#ea362a", "#e93529", "#e83429", "#e63328", "#e53228", "#e43027", "#e32f27", "#e22e27", "#e12d26", "#e02c26", "#de2b25", "#dd2a25", "#dc2924", "#db2824", "#da2723", "#d92523", "#d82422", "#d72322", "#d52221", "#d42121", "#d32020", "#d21f20", "#d11e1f", "#d01d1f", "#cf1c1f", "#ce1a1e", "#cc191e", "#cb181d", "#ca181d", "#c9181d", "#c8171c", "#c7171c", "#c5171c", "#c4161c", "#c3161b", "#c2161b", "#c1161b", "#bf151b", "#be151a", "#bd151a", "#bc141a", "#bb141a", "#b91419", "#b81419", "#b71319", "#b61319", "#b51318", "#b31218", "#b21218", "#b11218", "#b01217", "#af1117", "#ad1117", "#ac1117", "#ab1016", "#aa1016", "#a91016", "#a81016", "#a60f15", "#a50f15", "#a30f15", "#a10e15", "#9f0e14", "#9d0d14", "#9c0d14", "#9a0c14", "#980c13", "#960b13", "#940b13", "#920a13", "#900a12", "#8e0912", "#8c0912", "#8a0812", "#880811", "#860811", "#840711", "#820711", "#800610", "#7e0610", "#7c0510", "#7a0510", "#79040f", "#77040f", "#75030f", "#73030f", "#71020e", "#6f020e", "#6d010e", "#6b010e", "#69000d", "#67000d"]), Ft.rdYlBu = Ft.fromStringList(["#a50026", "#a70226", "#a90426", "#ab0626", "#ad0826", "#af0926", "#b10b26", "#b30d26", "#b50f26", "#b71126", "#b91326", "#bb1526", "#bd1726", "#be1827", "#c01a27", "#c21c27", "#c41e27", "#c62027", "#c82227", "#ca2427", "#cc2627", "#ce2827", "#d02927", "#d22b27", "#d42d27", "#d62f27", "#d83128", "#d93429", "#da362a", "#db382b", "#dc3b2c", "#dd3d2d", "#de402e", "#e0422f", "#e14430", "#e24731", "#e34933", "#e44c34", "#e54e35", "#e65036", "#e75337", "#e95538", "#ea5739", "#eb5a3a", "#ec5c3b", "#ed5f3c", "#ee613e", "#ef633f", "#f16640", "#f26841", "#f36b42", "#f46d43", "#f47044", "#f57245", "#f57547", "#f57748", "#f67a49", "#f67c4a", "#f67f4b", "#f7814c", "#f7844e", "#f8864f", "#f88950", "#f88c51", "#f98e52", "#f99153", "#f99355", "#fa9656", "#fa9857", "#fa9b58", "#fb9d59", "#fba05b", "#fba35c", "#fca55d", "#fca85e", "#fcaa5f", "#fdad60", "#fdaf62", "#fdb164", "#fdb366", "#fdb567", "#fdb769", "#fdb96b", "#fdbb6d", "#fdbd6f", "#fdbf71", "#fdc173", "#fdc374", "#fdc576", "#fdc778", "#fec87a", "#feca7c", "#fecc7e", "#fece7f", "#fed081", "#fed283", "#fed485", "#fed687", "#fed889", "#feda8a", "#fedc8c", "#fede8e", "#fee090", "#fee192", "#fee294", "#fee496", "#fee597", "#fee699", "#fee79b", "#fee99d", "#feea9f", "#feeba1", "#feeca2", "#feeda4", "#feefa6", "#fff0a8", "#fff1aa", "#fff2ac", "#fff3ad", "#fff5af", "#fff6b1", "#fff7b3", "#fff8b5", "#fffab7", "#fffbb9", "#fffcba", "#fffdbc", "#fffebe", "#feffc0", "#fdfec2", "#fcfec5", "#fbfdc7", "#fafdc9", "#f8fccb", "#f7fcce", "#f6fbd0", "#f5fbd2", "#f3fbd4", "#f2fad6", "#f1fad9", "#f0f9db", "#eff9dd", "#edf8df", "#ecf8e2", "#ebf7e4", "#eaf7e6", "#e9f6e8", "#e7f6eb", "#e6f5ed", "#e5f5ef", "#e4f4f1", "#e2f4f4", "#e1f3f6", "#e0f3f8", "#def2f7", "#dcf1f7", "#daf0f6", "#d8eff6", "#d6eef5", "#d4edf4", "#d1ecf4", "#cfebf3", "#cdeaf3", "#cbe9f2", "#c9e8f2", "#c7e7f1", "#c5e6f0", "#c3e5f0", "#c1e4ef", "#bfe3ef", "#bde2ee", "#bbe1ed", "#b9e0ed", "#b6dfec", "#b4deec", "#b2ddeb", "#b0dcea", "#aedbea", "#acdae9", "#aad8e9", "#a8d6e8", "#a6d5e7", "#a3d3e6", "#a1d1e5", "#9fd0e4", "#9dcee3", "#9bcce2", "#99cae1", "#97c9e0", "#94c7df", "#92c5de", "#90c3dd", "#8ec2dc", "#8cc0db", "#8abeda", "#87bdd9", "#85bbd9", "#83b9d8", "#81b7d7", "#7fb6d6", "#7db4d5", "#7ab2d4", "#78b0d3", "#76afd2", "#74add1", "#72abd0", "#70a9cf", "#6ea6ce", "#6da4cc", "#6ba2cb", "#69a0ca", "#679ec9", "#659bc8", "#6399c7", "#6297c6", "#6095c4", "#5e93c3", "#5c90c2", "#5a8ec1", "#588cc0", "#578abf", "#5588be", "#5385bd", "#5183bb", "#4f81ba", "#4d7fb9", "#4b7db8", "#4a7ab7", "#4878b6", "#4676b5", "#4574b3", "#4471b2", "#436fb1", "#426cb0", "#416aaf", "#4167ad", "#4065ac", "#3f62ab", "#3e60aa", "#3e5ea8", "#3d5ba7", "#3c59a6", "#3b56a5", "#3a54a4", "#3a51a2", "#394fa1", "#384ca0", "#374a9f", "#36479e", "#36459c", "#35429b", "#34409a", "#333d99", "#333b97", "#323896", "#313695"]), T._version = 0, T._frameWizardDialog = new Vs(), T._dataVizWizardDialog = new Gs(), T._referenceFramePropsDialog = new Os(), T._greatCircleDialog = new Us(), T._tourLayers = !1, T._layerMaps = {}, T._layerMapsTours = {}, T._allMaps = {}, T._allMapsTours = {}, T._currentMap = "Earth", T._layerList = {}, T._layerListTours = {}, T._moonfile = "", T._selectedLayer = null, T._lastMenuClick = new lt(), Dr._type = null, Ti.maX_VERTICES = 8e3, Ti.maX_POLYGONS = 8e3, dn._orbitalToWwt = H.create(1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1), dn._initBegun = !1, xi._pinTextureCache = {}, xi._pins = null, function() {
        typeof document > "u" || document.getElementById("canvas");
      }(), ee.mpcList = [], ee._initBegun = !1, ee._mpcBlendStates = new Array(7), ee.starTexture = null, ee._mpcVertexBuffer = null, ee._mpcCount = 0, A.highPercision = !0, A.showActualSize = z.get_active().get_actualPlanetScale(), A.RC = Math.PI / 180, A._jNow = 0, A._planetAngles = [new _i(286.13, 63.87, 84.176, 14.1844), new _i(281.0097, 61.4143, 329.548, 6.1385025), new _i(272.76, 67.16, 160.2, -1.4813688), new _i(317.68143, 52.8865, 176.63, 350.89198226), new _i(268.056595, 64.495303, 284.95, 870.536), new _i(40.589, 83.537, 38.9, 810.7939024), new _i(257.311, -15.175, 203.81, 501.1600928), new _i(299.36, 43.46, 253.18, 536.3128492), new _i(132.993, -6.163, 302.695, 56.3625225), new _i(269.9949, 66.5392, 38.3213, 13.17635815), new _i(268.05, 64.5, 200.39, 203.4889538), new _i(268.08, 64.51, 36.022, 101.3747235), new _i(268.2, 64.57, 44.064, 50.3176081), new _i(268.72, 64.83, 259.51, 21.5710715), new _i(0, 0, 0, 0), new _i(0, 0, 0, 0), new _i(0, 0, 0, 0), new _i(0, 0, 0, 0), new _i(0, 0, 0, 0), new _i(0, 90, 190.147, 360.9856235)], A._lastPlanetCenterID = -2, A._orbitalSampleRate = 256, A._obliquity = 23.5 * A.RC, A._drawOrder = {}, A.earthMatrix = new H(), A.earthMatrixInv = new H(), A._lastUpdate = new Date(), A._ringsTriangleLists = new Array(2), A._ringImage = null, A._triangleCountRings = 192 + 1 * 2, A._ringsVertexBuffer = null, A._planetSprite = new Hr(), A._planetPoints = null, fe.useGl = !1, fe.useGlVersion2 = !1, fe.back = 0, Bt.width = 1024, Bt.height = 768, Bt._contractionInPixels = -0.5, Bt.trianglesRendered = 0, Bt.trianglesCulled = 0, Bt.renderingOn = !0, Bt._factor = 1, Bt.cullInside = !0, Bt._hw = 0, Bt._qw = 0, Bt._hh = 0, Bt._qh = 0, z._active = null, z.tourSettings = null, Ni._caches = {}, Ni._allGlyphs = "", Z.last = n.now(), Z._offset = 0, Z._now = n.now(), Z._syncToClock = !0, Z._timeRate = 1, Z._altitude = 0, mn._eTypeBuckets = [-3, -0.186, -0.168, -0.158, -0.15, -0.143, -0.137, -0.13, -0.123, -0.115, -0.104, -0.089, -0.068, -0.042, -0.011, 0.024, 0.064, 0.111, 0.169, 0.252, 3], F.currentRenderGeneration = 0, F.tileTargetX = -1, F.tileTargetY = -1, F.tileTargetLevel = -1, F.tilesInView = 0, F.trianglesRendered = 0, F.tilesTouched = 0, F.frustumList = null, F.prepDevice = null, F.uvMultiple = 256, F.callCount = 0, F.useAccomidation = !0, F.demEnabled = !1, F.maxLevel = 20, F.meshComplexity = 50, F.imageQuality = 50, F.lastDeepestLevel = 0, F.deepestLevel = 0, F.RC = 3.1415927 / 180, vt._queue = {}, vt._tiles = {}, vt.openThreads = 8, vt.readyToRenderCount = 0, vt.maxTileCacheSize = 800, vt.maxReadyToRenderSize = 200, vt.accessID = 0, vt._maxTotalToPurge = 0, xe.defaultAnchor = 1, xe.clipboardFormat = "WorldWideTelescope.Overlay", xe.nextId = 11231, xe.RC = 3.1415927 / 180, Le._points = new Array(9 * 3 * 2), Qe.capturing = !1, Qe.currentEditor = null, ie._playing = !1, ie._switchedToFullScreen = !1, ie.noRestoreUIOnStop = !1, Fi.clipboardFormat = "WorldWideTelescope.Slide", Tt._undoStack = new n.Stack(), Tt._redoStack = new n.Stack(), Oe.kilometersPerAu = 149598e3, Oe.auPerParsec = 206264.806, Oe.auPerLightYear = 63239.6717, Oe.ssmUnitConversion = 370, Kr.id = 1, xs.earthRadius = 6371e3, V.imageSets = [], V.exploreRoot = new Mr(), V.imageSetName = "", V.showDataLayers = !1, V._renderNeeded = !1, V.constellationsFigures = null, V.constellationsBoundries = null, V.solarSystemObjectsNames = ["Sun", "Mercury", "Venus", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune", "Pluto", "Moon", "Io", "Europa", "Ganymede", "Callisto", "IoShadow", "EuropaShadow", "GanymedeShadow", "CallistoShadow", "SunEclipsed", "Earth", "Custom", "Undefined"], V.singleton = new V(), V.singleton.renderContext = new fe(), Z.last = n.now(), Z.updateClock(), R.RC = 3.1415927 / 180, R.RCRA = 3.1415927 / 12, R.radius = 1, R._rotationMatrix = null, gi._halfpi$1 = Math.PI / 2, gi._inv_halfpi$1 = 2 / Math.PI, gi._twothird$1 = 2 / 3, Jn._galacticMatrix$1 = H.create(-0.0548755604024359, -0.483835015526738, -0.873437090247923, 0, -0.867666148981161, 0.455983776232537, -0.198076373464674, 0, 0.494109427943568, 0.746982244476371, -0.444829629919504, 0, 0, 0, 0, 1), bi.naN = 0 / 0, Zt._translateUI$1 = null, Zt._translateUILines$1 = null, Zt._scaleUI$1 = null, Zt._rotateUi$1 = null, ei._circleTexture$1 = null, na._circleTexture$1 = null, Oi._circleTexture$1 = null, Ze.slashIndexBuffer = new Array(64), Ze.backSlashIndexBuffer = new Array(64), Ze.rootIndexBuffer = new Array(4), mi.issGuid = di.fromString("00000001-0002-0003-0405-060708090a0b"), mi._loading$2 = !1, mi._issmodel$2 = null, mi._doc$2 = null, j_;
    }), _exports_object;
  });
})(src);
var layerSettingNames = [
  "astronomical",
  "color",
  "enabled",
  "fadeSpan",
  "name",
  "opacity",
  "opened",
  "referenceFrame",
  "version"
];
function copyLayerSettings(n, d) {
  var g, v;
  try {
    for (var C = __values(layerSettingNames), M = C.next(); !M.done; M = C.next()) {
      var $ = M.value;
      d["set_" + $](n["get_" + $]());
    }
  } catch (N) {
    g = { error: N };
  } finally {
    try {
      M && !M.done && (v = C.return) && v.call(C);
    } finally {
      if (g)
        throw g.error;
    }
  }
}
var LayerState = (
  /** @class */
  function() {
    function n(d) {
      copyLayerSettings(d, this);
    }
    return n.prototype.get_astronomical = function() {
      return this.astronomical;
    }, n.prototype.set_astronomical = function(d) {
      return this.astronomical = d, d;
    }, n.prototype.get_color = function() {
      return this.color;
    }, n.prototype.set_color = function(d) {
      return this.color = d, d;
    }, n.prototype.get_enabled = function() {
      return this.enabled;
    }, n.prototype.set_enabled = function(d) {
      return this.enabled = d, d;
    }, n.prototype.get_endTime = function() {
      return this.endTime;
    }, n.prototype.set_endTime = function(d) {
      return this.endTime = d, d;
    }, n.prototype.get_fadeSpan = function() {
      return this.fadeSpan;
    }, n.prototype.set_fadeSpan = function(d) {
      return this.fadeSpan = d, d;
    }, n.prototype.get_fadeType = function() {
      return this.fadeType;
    }, n.prototype.set_fadeType = function(d) {
      return this.fadeType = d, d;
    }, n.prototype.get_name = function() {
      return this.name;
    }, n.prototype.set_name = function(d) {
      return this.name = d, d;
    }, n.prototype.get_opacity = function() {
      return this.opacity;
    }, n.prototype.set_opacity = function(d) {
      return this.opacity = d, d;
    }, n.prototype.get_opened = function() {
      return this.opened;
    }, n.prototype.set_opened = function(d) {
      return this.opened = d, d;
    }, n.prototype.get_referenceFrame = function() {
      return this.referenceFrame;
    }, n.prototype.set_referenceFrame = function(d) {
      return this.referenceFrame = d, d;
    }, n.prototype.get_startTime = function() {
      return this.startTime;
    }, n.prototype.set_startTime = function(d) {
      return this.startTime = d, d;
    }, n.prototype.get_version = function() {
      return this.version;
    }, n.prototype.set_version = function(d) {
      return this.version = d, d;
    }, n;
  }()
), justImageSetLayerSettingNames = [
  "colorMapperName",
  "overrideDefaultLayer"
];
layerSettingNames.concat(justImageSetLayerSettingNames);
function applyImageSetLayerSetting(n, d) {
  var g = "set_" + d[0], v = d[1];
  n[g](v);
}
function copyImageSetLayerSettings(n, d) {
  var g, v;
  copyLayerSettings(n, d);
  try {
    for (var C = __values(justImageSetLayerSettingNames), M = C.next(); !M.done; M = C.next()) {
      var $ = M.value;
      d["set_" + $](n["get_" + $]());
    }
  } catch (N) {
    g = { error: N };
  } finally {
    try {
      M && !M.done && (v = C.return) && v.call(C);
    } finally {
      if (g)
        throw g.error;
    }
  }
}
(function(n) {
  __extends(d, n);
  function d(g) {
    var v = (
      // Here we redundantly copy the generic Layer settings, but TypeScript
      // requires the super() call. Oh well.
      n.call(this, g) || this
    );
    return copyImageSetLayerSettings(g, v), v;
  }
  return d.prototype.get_colorMapperName = function() {
    return this.colorMapperName;
  }, d.prototype.set_colorMapperName = function(g) {
    return this.colorMapperName = g, g;
  }, d.prototype.get_overrideDefaultLayer = function() {
    return this.overrideDefaultLayer;
  }, d.prototype.set_overrideDefaultLayer = function(g) {
    return this.overrideDefaultLayer = g, g;
  }, d;
})(LayerState);
var justSpreadSheetLayerSettingNames = [
  "altColumn",
  "altType",
  "altUnit",
  "barChartBitmask",
  "beginRange",
  "cartesianCustomScale",
  "cartesianScale",
  "colorMapColumn",
  "colorMapperName",
  "coordinatesType",
  "decay",
  "dynamicColor",
  "dynamicData",
  "endDateColumn",
  "endRange",
  "geometryColumn",
  "hyperlinkColumn",
  "hyperlinkFormat",
  "latColumn",
  "lngColumn",
  "markerColumn",
  "markerIndex",
  "markerScale",
  "nameColumn",
  "normalizeColorMap",
  "normalizeColorMapMax",
  "normalizeColorMapMin",
  "normalizeSize",
  "normalizeSizeClip",
  "normalizeSizeMax",
  "normalizeSizeMin",
  "plotType",
  "pointScaleType",
  "raUnits",
  "scaleFactor",
  "showFarSide",
  "sizeColumn",
  "startDateColumn",
  "timeSeries",
  "xAxisColumn",
  "xAxisReverse",
  "yAxisColumn",
  "yAxisReverse",
  "zAxisColumn",
  "zAxisReverse"
];
layerSettingNames.concat(justSpreadSheetLayerSettingNames);
function applySpreadSheetLayerSetting(n, d) {
  var g = "set_" + d[0], v = d[1];
  n[g](v);
}
function copySpreadSheetLayerSettings(n, d) {
  var g, v;
  copyLayerSettings(n, d);
  try {
    for (var C = __values(justSpreadSheetLayerSettingNames), M = C.next(); !M.done; M = C.next()) {
      var $ = M.value;
      d["set_" + $](n["get_" + $]());
    }
  } catch (N) {
    g = { error: N };
  } finally {
    try {
      M && !M.done && (v = C.return) && v.call(C);
    } finally {
      if (g)
        throw g.error;
    }
  }
}
(function(n) {
  __extends(d, n);
  function d(g) {
    var v = (
      // Here we redundantly copy the generic Layer settings, but TypeScript
      // requires the super() call. Oh well.
      n.call(this, g) || this
    );
    return copySpreadSheetLayerSettings(g, v), v;
  }
  return d.prototype.get_altColumn = function() {
    return this.altColumn;
  }, d.prototype.set_altColumn = function(g) {
    return this.altColumn = g, g;
  }, d.prototype.get_altType = function() {
    return this.altType;
  }, d.prototype.set_altType = function(g) {
    return this.altType = g, g;
  }, d.prototype.get_altUnit = function() {
    return this.altUnit;
  }, d.prototype.set_altUnit = function(g) {
    return this.altUnit = g, g;
  }, d.prototype.get_barChartBitmask = function() {
    return this.barChartBitmask;
  }, d.prototype.set_barChartBitmask = function(g) {
    return this.barChartBitmask = g, g;
  }, d.prototype.get_beginRange = function() {
    return this.beginRange;
  }, d.prototype.set_beginRange = function(g) {
    return this.beginRange = g, g;
  }, d.prototype.get_cartesianCustomScale = function() {
    return this.cartesianCustomScale;
  }, d.prototype.set_cartesianCustomScale = function(g) {
    return this.cartesianCustomScale = g, g;
  }, d.prototype.get_cartesianScale = function() {
    return this.cartesianScale;
  }, d.prototype.set_cartesianScale = function(g) {
    return this.cartesianScale = g, g;
  }, d.prototype.get_colorMapColumn = function() {
    return this.colorMapColumn;
  }, d.prototype.set_colorMapColumn = function(g) {
    return this.colorMapColumn = g, g;
  }, d.prototype.get_colorMapperName = function() {
    return this.colorMapperName;
  }, d.prototype.set_colorMapperName = function(g) {
    return this.colorMapperName = g, g;
  }, d.prototype.get_coordinatesType = function() {
    return this.coordinatesType;
  }, d.prototype.set_coordinatesType = function(g) {
    return this.coordinatesType = g, g;
  }, d.prototype.get_decay = function() {
    return this.decay;
  }, d.prototype.set_decay = function(g) {
    return this.decay = g, g;
  }, d.prototype.get_dynamicColor = function() {
    return this.dynamicColor;
  }, d.prototype.set_dynamicColor = function(g) {
    return this.dynamicColor = g, g;
  }, d.prototype.get_dynamicData = function() {
    return this.dynamicData;
  }, d.prototype.set_dynamicData = function(g) {
    return this.dynamicData = g, g;
  }, d.prototype.get_endDateColumn = function() {
    return this.endDateColumn;
  }, d.prototype.set_endDateColumn = function(g) {
    return this.endDateColumn = g, g;
  }, d.prototype.get_endRange = function() {
    return this.endRange;
  }, d.prototype.set_endRange = function(g) {
    return this.endRange = g, g;
  }, d.prototype.get_geometryColumn = function() {
    return this.geometryColumn;
  }, d.prototype.set_geometryColumn = function(g) {
    return this.geometryColumn = g, g;
  }, d.prototype.get_hyperlinkColumn = function() {
    return this.hyperlinkColumn;
  }, d.prototype.set_hyperlinkColumn = function(g) {
    return this.hyperlinkColumn = g, g;
  }, d.prototype.get_hyperlinkFormat = function() {
    return this.hyperlinkFormat;
  }, d.prototype.set_hyperlinkFormat = function(g) {
    return this.hyperlinkFormat = g, g;
  }, d.prototype.get_latColumn = function() {
    return this.latColumn;
  }, d.prototype.set_latColumn = function(g) {
    return this.latColumn = g, g;
  }, d.prototype.get_lngColumn = function() {
    return this.lngColumn;
  }, d.prototype.set_lngColumn = function(g) {
    return this.lngColumn = g, g;
  }, d.prototype.get_markerColumn = function() {
    return this.markerColumn;
  }, d.prototype.set_markerColumn = function(g) {
    return this.markerColumn = g, g;
  }, d.prototype.get_markerIndex = function() {
    return this.markerIndex;
  }, d.prototype.set_markerIndex = function(g) {
    return this.markerIndex = g, g;
  }, d.prototype.get_markerScale = function() {
    return this.markerScale;
  }, d.prototype.set_markerScale = function(g) {
    return this.markerScale = g, g;
  }, d.prototype.get_nameColumn = function() {
    return this.nameColumn;
  }, d.prototype.set_nameColumn = function(g) {
    return this.nameColumn = g, g;
  }, d.prototype.get_normalizeColorMap = function() {
    return this.normalizeColorMap;
  }, d.prototype.set_normalizeColorMap = function(g) {
    return this.normalizeColorMap = g, g;
  }, d.prototype.get_normalizeColorMapMax = function() {
    return this.normalizeColorMapMax;
  }, d.prototype.set_normalizeColorMapMax = function(g) {
    return this.normalizeColorMapMax = g, g;
  }, d.prototype.get_normalizeColorMapMin = function() {
    return this.normalizeColorMapMin;
  }, d.prototype.set_normalizeColorMapMin = function(g) {
    return this.normalizeColorMapMin = g, g;
  }, d.prototype.get_normalizeSize = function() {
    return this.normalizeSize;
  }, d.prototype.set_normalizeSize = function(g) {
    return this.normalizeSize = g, g;
  }, d.prototype.get_normalizeSizeClip = function() {
    return this.normalizeSizeClip;
  }, d.prototype.set_normalizeSizeClip = function(g) {
    return this.normalizeSizeClip = g, g;
  }, d.prototype.get_normalizeSizeMax = function() {
    return this.normalizeSizeMax;
  }, d.prototype.set_normalizeSizeMax = function(g) {
    return this.normalizeSizeMax = g, g;
  }, d.prototype.get_normalizeSizeMin = function() {
    return this.normalizeSizeMin;
  }, d.prototype.set_normalizeSizeMin = function(g) {
    return this.normalizeSizeMin = g, g;
  }, d.prototype.get_plotType = function() {
    return this.plotType;
  }, d.prototype.set_plotType = function(g) {
    return this.plotType = g, g;
  }, d.prototype.get_pointScaleType = function() {
    return this.pointScaleType;
  }, d.prototype.set_pointScaleType = function(g) {
    return this.pointScaleType = g, g;
  }, d.prototype.get_raUnits = function() {
    return this.raUnits;
  }, d.prototype.set_raUnits = function(g) {
    return this.raUnits = g, g;
  }, d.prototype.get_scaleFactor = function() {
    return this.scaleFactor;
  }, d.prototype.set_scaleFactor = function(g) {
    return this.scaleFactor = g, g;
  }, d.prototype.get_showFarSide = function() {
    return this.showFarSide;
  }, d.prototype.set_showFarSide = function(g) {
    return this.showFarSide = g, g;
  }, d.prototype.get_sizeColumn = function() {
    return this.sizeColumn;
  }, d.prototype.set_sizeColumn = function(g) {
    return this.sizeColumn = g, g;
  }, d.prototype.get_startDateColumn = function() {
    return this.startDateColumn;
  }, d.prototype.set_startDateColumn = function(g) {
    return this.startDateColumn = g, g;
  }, d.prototype.get_timeSeries = function() {
    return this.timeSeries;
  }, d.prototype.set_timeSeries = function(g) {
    return this.timeSeries = g, g;
  }, d.prototype.get_xAxisColumn = function() {
    return this.xAxisColumn;
  }, d.prototype.set_xAxisColumn = function(g) {
    return this.xAxisColumn = g, g;
  }, d.prototype.get_xAxisReverse = function() {
    return this.xAxisReverse;
  }, d.prototype.set_xAxisReverse = function(g) {
    return this.xAxisReverse = g, g;
  }, d.prototype.get_yAxisColumn = function() {
    return this.yAxisColumn;
  }, d.prototype.set_yAxisColumn = function(g) {
    return this.yAxisColumn = g, g;
  }, d.prototype.get_yAxisReverse = function() {
    return this.yAxisReverse;
  }, d.prototype.set_yAxisReverse = function(g) {
    return this.yAxisReverse = g, g;
  }, d.prototype.get_zAxisColumn = function() {
    return this.zAxisColumn;
  }, d.prototype.set_zAxisColumn = function(g) {
    return this.zAxisColumn = g, g;
  }, d.prototype.get_zAxisReverse = function() {
    return this.zAxisReverse;
  }, d.prototype.set_zAxisReverse = function(g) {
    return this.zAxisReverse = g, g;
  }, d;
})(LayerState);
var annotationSettingNames = [
  "id",
  "label",
  "opacity",
  "showHoverLabel",
  "tag"
];
function copyAnnotationSettings(n, d) {
  var g, v;
  try {
    for (var C = __values(annotationSettingNames), M = C.next(); !M.done; M = C.next()) {
      var $ = M.value;
      d["set_" + $](n["get_" + $]());
    }
  } catch (N) {
    g = { error: N };
  } finally {
    try {
      M && !M.done && (v = C.return) && v.call(C);
    } finally {
      if (g)
        throw g.error;
    }
  }
}
var AnnotationState = (
  /** @class */
  function() {
    function n(d) {
      copyAnnotationSettings(d, this);
    }
    return n.prototype.get_id = function() {
      return this.id;
    }, n.prototype.set_id = function(d) {
      return this.id = d, d;
    }, n.prototype.get_label = function() {
      return this.label;
    }, n.prototype.set_label = function(d) {
      return this.label = d, d;
    }, n.prototype.get_opacity = function() {
      return this.opacity;
    }, n.prototype.set_opacity = function(d) {
      return this.opacity = d, d;
    }, n.prototype.get_showHoverLabel = function() {
      return this.showHoverLabel;
    }, n.prototype.set_showHoverLabel = function(d) {
      return this.showHoverLabel = d, d;
    }, n.prototype.get_tag = function() {
      return this.tag;
    }, n.prototype.set_tag = function(d) {
      return this.tag = d, d;
    }, n;
  }()
), justCircleAnnotationSettingNames = [
  "fill",
  "fillColor",
  "lineColor",
  "lineWidth",
  "radius",
  "skyRelative"
];
annotationSettingNames.concat(justCircleAnnotationSettingNames);
function copyCircleAnnotationSettings(n, d) {
  var g, v;
  copyAnnotationSettings(n, d);
  try {
    for (var C = __values(justCircleAnnotationSettingNames), M = C.next(); !M.done; M = C.next()) {
      var $ = M.value;
      d["set_" + $](n["get_" + $]());
    }
  } catch (N) {
    g = { error: N };
  } finally {
    try {
      M && !M.done && (v = C.return) && v.call(C);
    } finally {
      if (g)
        throw g.error;
    }
  }
}
(function(n) {
  __extends(d, n);
  function d(g) {
    var v = n.call(this, g) || this;
    return copyCircleAnnotationSettings(g, v), v;
  }
  return d.prototype.get_fill = function() {
    return this.fill;
  }, d.prototype.set_fill = function(g) {
    return this.fill = g, g;
  }, d.prototype.get_fillColor = function() {
    return this.fillColor;
  }, d.prototype.set_fillColor = function(g) {
    return this.fillColor = g, g;
  }, d.prototype.get_lineColor = function() {
    return this.lineColor;
  }, d.prototype.set_lineColor = function(g) {
    return this.lineColor = g, g;
  }, d.prototype.get_lineWidth = function() {
    return this.lineWidth;
  }, d.prototype.set_lineWidth = function(g) {
    return this.lineWidth = g, g;
  }, d.prototype.get_radius = function() {
    return this.radius;
  }, d.prototype.set_radius = function(g) {
    return this.radius = g, g;
  }, d.prototype.get_skyRelative = function() {
    return this.skyRelative;
  }, d.prototype.set_skyRelative = function(g) {
    return this.skyRelative = g, g;
  }, d;
})(AnnotationState);
var justPolyAnnotationSettingNames = [
  "fill",
  "fillColor",
  "lineColor",
  "lineWidth"
];
annotationSettingNames.concat(justPolyAnnotationSettingNames);
function copyPolyAnnotationSettings(n, d) {
  var g, v;
  copyAnnotationSettings(n, d);
  try {
    for (var C = __values(justPolyAnnotationSettingNames), M = C.next(); !M.done; M = C.next()) {
      var $ = M.value;
      d["set_" + $](n["get_" + $]());
    }
  } catch (N) {
    g = { error: N };
  } finally {
    try {
      M && !M.done && (v = C.return) && v.call(C);
    } finally {
      if (g)
        throw g.error;
    }
  }
}
(function(n) {
  __extends(d, n);
  function d(g) {
    var v = n.call(this, g) || this;
    return copyPolyAnnotationSettings(g, v), v;
  }
  return d.prototype.get_fill = function() {
    return this.fill;
  }, d.prototype.set_fill = function(g) {
    return this.fill = g, g;
  }, d.prototype.get_fillColor = function() {
    return this.fillColor;
  }, d.prototype.set_fillColor = function(g) {
    return this.fillColor = g, g;
  }, d.prototype.get_lineColor = function() {
    return this.lineColor;
  }, d.prototype.set_lineColor = function(g) {
    return this.lineColor = g, g;
  }, d.prototype.get_lineWidth = function() {
    return this.lineWidth;
  }, d.prototype.set_lineWidth = function(g) {
    return this.lineWidth = g, g;
  }, d;
})(AnnotationState);
var justPolyLineAnnotationSettingNames = [
  "lineColor",
  "lineWidth"
];
annotationSettingNames.concat(justPolyLineAnnotationSettingNames);
function copyPolyLineAnnotationSettings(n, d) {
  var g, v;
  copyAnnotationSettings(n, d);
  try {
    for (var C = __values(justPolyLineAnnotationSettingNames), M = C.next(); !M.done; M = C.next()) {
      var $ = M.value;
      d["set_" + $](n["get_" + $]());
    }
  } catch (N) {
    g = { error: N };
  } finally {
    try {
      M && !M.done && (v = C.return) && v.call(C);
    } finally {
      if (g)
        throw g.error;
    }
  }
}
(function(n) {
  __extends(d, n);
  function d(g) {
    var v = n.call(this, g) || this;
    return copyPolyLineAnnotationSettings(g, v), v;
  }
  return d.prototype.get_lineColor = function() {
    return this.lineColor;
  }, d.prototype.set_lineColor = function(g) {
    return this.lineColor = g, g;
  }, d.prototype.get_lineWidth = function() {
    return this.lineWidth;
  }, d.prototype.set_lineWidth = function(g) {
    return this.lineWidth = g, g;
  }, d;
})(AnnotationState);
var justVoTableLayerSettingNames = [
  "altColumn",
  "altType",
  "altUnit",
  "autoUpdate",
  "beginRange",
  "cartesianCustomScale",
  "cartesianScale",
  "colorMapColumn",
  "coordinatesType",
  "dataSourceUrl",
  "decay",
  "dynamicData",
  "endDateColumn",
  "endRange",
  "hyperlinkColumn",
  "hyperlinkFormat",
  "latColumn",
  "lngColumn",
  "markerColumn",
  "markerIndex",
  "markerScale",
  "nameColumn",
  "plotType",
  "pointScaleType",
  "raUnits",
  "scaleFactor",
  "showFarSide",
  "sizeColumn",
  "startDateColumn",
  "timeSeries",
  "xAxisColumn",
  "xAxisReverse",
  "yAxisColumn",
  "yAxisReverse",
  "zAxisColumn",
  "zAxisReverse"
];
layerSettingNames.concat(justVoTableLayerSettingNames);
function copyVoTableLayerSettings(n, d) {
  var g, v;
  copyLayerSettings(n, d);
  try {
    for (var C = __values(justVoTableLayerSettingNames), M = C.next(); !M.done; M = C.next()) {
      var $ = M.value;
      d["set_" + $](n["get_" + $]());
    }
  } catch (N) {
    g = { error: N };
  } finally {
    try {
      M && !M.done && (v = C.return) && v.call(C);
    } finally {
      if (g)
        throw g.error;
    }
  }
}
(function(n) {
  __extends(d, n);
  function d(g) {
    var v = (
      // Here we redundantly copy the generic Layer settings, but TypeScript
      // requires the super() call. Oh well.
      n.call(this, g) || this
    );
    return copyVoTableLayerSettings(g, v), v;
  }
  return d.prototype.get_altColumn = function() {
    return this.altColumn;
  }, d.prototype.set_altColumn = function(g) {
    return this.altColumn = g, g;
  }, d.prototype.get_altType = function() {
    return this.altType;
  }, d.prototype.set_altType = function(g) {
    return this.altType = g, g;
  }, d.prototype.get_altUnit = function() {
    return this.altUnit;
  }, d.prototype.set_altUnit = function(g) {
    return this.altUnit = g, g;
  }, d.prototype.get_autoUpdate = function() {
    return this.autoUpdate;
  }, d.prototype.set_autoUpdate = function(g) {
    return this.autoUpdate = g, g;
  }, d.prototype.get_beginRange = function() {
    return this.beginRange;
  }, d.prototype.set_beginRange = function(g) {
    return this.beginRange = g, g;
  }, d.prototype.get_cartesianCustomScale = function() {
    return this.cartesianCustomScale;
  }, d.prototype.set_cartesianCustomScale = function(g) {
    return this.cartesianCustomScale = g, g;
  }, d.prototype.get_cartesianScale = function() {
    return this.cartesianScale;
  }, d.prototype.set_cartesianScale = function(g) {
    return this.cartesianScale = g, g;
  }, d.prototype.get_colorMapColumn = function() {
    return this.colorMapColumn;
  }, d.prototype.set_colorMapColumn = function(g) {
    return this.colorMapColumn = g, g;
  }, d.prototype.get_coordinatesType = function() {
    return this.coordinatesType;
  }, d.prototype.set_coordinatesType = function(g) {
    return this.coordinatesType = g, g;
  }, d.prototype.get_dataSourceUrl = function() {
    return this.dataSourceUrl;
  }, d.prototype.set_dataSourceUrl = function(g) {
    return this.dataSourceUrl = g, g;
  }, d.prototype.get_decay = function() {
    return this.decay;
  }, d.prototype.set_decay = function(g) {
    return this.decay = g, g;
  }, d.prototype.get_dynamicData = function() {
    return this.dynamicData;
  }, d.prototype.set_dynamicData = function(g) {
    return this.dynamicData = g, g;
  }, d.prototype.get_endDateColumn = function() {
    return this.endDateColumn;
  }, d.prototype.set_endDateColumn = function(g) {
    return this.endDateColumn = g, g;
  }, d.prototype.get_endRange = function() {
    return this.endRange;
  }, d.prototype.set_endRange = function(g) {
    return this.endRange = g, g;
  }, d.prototype.get_hyperlinkColumn = function() {
    return this.hyperlinkColumn;
  }, d.prototype.set_hyperlinkColumn = function(g) {
    return this.hyperlinkColumn = g, g;
  }, d.prototype.get_hyperlinkFormat = function() {
    return this.hyperlinkFormat;
  }, d.prototype.set_hyperlinkFormat = function(g) {
    return this.hyperlinkFormat = g, g;
  }, d.prototype.get_latColumn = function() {
    return this.latColumn;
  }, d.prototype.set_latColumn = function(g) {
    return this.latColumn = g, g;
  }, d.prototype.get_lngColumn = function() {
    return this.lngColumn;
  }, d.prototype.set_lngColumn = function(g) {
    return this.lngColumn = g, g;
  }, d.prototype.get_markerColumn = function() {
    return this.markerColumn;
  }, d.prototype.set_markerColumn = function(g) {
    return this.markerColumn = g, g;
  }, d.prototype.get_markerIndex = function() {
    return this.markerIndex;
  }, d.prototype.set_markerIndex = function(g) {
    return this.markerIndex = g, g;
  }, d.prototype.get_markerScale = function() {
    return this.markerScale;
  }, d.prototype.set_markerScale = function(g) {
    return this.markerScale = g, g;
  }, d.prototype.get_nameColumn = function() {
    return this.nameColumn;
  }, d.prototype.set_nameColumn = function(g) {
    return this.nameColumn = g, g;
  }, d.prototype.get_plotType = function() {
    return this.plotType;
  }, d.prototype.set_plotType = function(g) {
    return this.plotType = g, g;
  }, d.prototype.get_pointScaleType = function() {
    return this.pointScaleType;
  }, d.prototype.set_pointScaleType = function(g) {
    return this.pointScaleType = g, g;
  }, d.prototype.get_raUnits = function() {
    return this.raUnits;
  }, d.prototype.set_raUnits = function(g) {
    return this.raUnits = g, g;
  }, d.prototype.get_scaleFactor = function() {
    return this.scaleFactor;
  }, d.prototype.set_scaleFactor = function(g) {
    return this.scaleFactor = g, g;
  }, d.prototype.get_showFarSide = function() {
    return this.showFarSide;
  }, d.prototype.set_showFarSide = function(g) {
    return this.showFarSide = g, g;
  }, d.prototype.get_sizeColumn = function() {
    return this.sizeColumn;
  }, d.prototype.set_sizeColumn = function(g) {
    return this.sizeColumn = g, g;
  }, d.prototype.get_startDateColumn = function() {
    return this.startDateColumn;
  }, d.prototype.set_startDateColumn = function(g) {
    return this.startDateColumn = g, g;
  }, d.prototype.get_timeSeries = function() {
    return this.timeSeries;
  }, d.prototype.set_timeSeries = function(g) {
    return this.timeSeries = g, g;
  }, d.prototype.get_xAxisColumn = function() {
    return this.xAxisColumn;
  }, d.prototype.set_xAxisColumn = function(g) {
    return this.xAxisColumn = g, g;
  }, d.prototype.get_xAxisReverse = function() {
    return this.xAxisReverse;
  }, d.prototype.set_xAxisReverse = function(g) {
    return this.xAxisReverse = g, g;
  }, d.prototype.get_yAxisColumn = function() {
    return this.yAxisColumn;
  }, d.prototype.set_yAxisColumn = function(g) {
    return this.yAxisColumn = g, g;
  }, d.prototype.get_yAxisReverse = function() {
    return this.yAxisReverse;
  }, d.prototype.set_yAxisReverse = function(g) {
    return this.yAxisReverse = g, g;
  }, d.prototype.get_zAxisColumn = function() {
    return this.zAxisColumn;
  }, d.prototype.set_zAxisColumn = function(g) {
    return this.zAxisColumn = g, g;
  }, d.prototype.get_zAxisReverse = function() {
    return this.zAxisReverse;
  }, d.prototype.set_zAxisReverse = function(g) {
    return this.zAxisReverse = g, g;
  }, d;
})(LayerState);
var SavedPromise = (
  /** @class */
  function() {
    function n(d, g, v) {
      this.payload = d, this.resolve = g, this.reject = v;
    }
    return n;
  }()
), WWTInstance = (
  /** @class */
  function() {
    function n(d) {
      d === void 0 && (d = {});
      var g = this;
      this.readyPromises = [], this.readyFired = !1, this.arrivePromises = [], this.arriveSeqnum = 0, this.collectionLoadedPromises = [], this.collectionRequests = /* @__PURE__ */ new Map(), this.tourReadyPromises = [], this.tourReadySeqnum = 0, this.tourEndedCallback = null;
      var v = new srcExports.WWTControlBuilder(d.elId || "wwt");
      if (d.startInternalRenderLoop !== void 0 && v.startRenderLoop(d.startInternalRenderLoop), d.freestandingAssetBaseurl !== void 0 && v.freestandingMode(d.freestandingAssetBaseurl), d.startLatDeg !== void 0 && d.startLngDeg !== void 0) {
        var C = d.startZoomDeg || 360;
        v.initialView(d.startLatDeg, d.startLngDeg, C);
      }
      d.startMode !== void 0 && v.initialMode(d.startMode), this.si = v.create(), this.ctl = srcExports.WWTControl.singleton, this.lm = srcExports.LayerManager, this.stc = srcExports.SpaceTimeController, this.applySetting(["showConstellationBoundries", !1]), this.applySetting(["showConstellationFigures", !1]), this.applySetting(["showConstellationSelection", !1]), this.applySetting(["showCrosshairs", !1]), this.si.add_ready(function(M) {
        var $, N;
        try {
          for (var et = __values(g.readyPromises), E = et.next(); !E.done; E = et.next()) {
            var X = E.value;
            X.resolve();
          }
        } catch (Pt) {
          $ = { error: Pt };
        } finally {
          try {
            E && !E.done && (N = et.return) && N.call(et);
          } finally {
            if ($)
              throw $.error;
          }
        }
        g.readyFired = !0, g.readyPromises = [];
      }), this.si.add_arrived(function(M, $) {
        var N, et;
        try {
          for (var E = __values(g.arrivePromises), X = E.next(); !X.done; X = E.next()) {
            var Pt = X.value;
            Pt.payload < g.arriveSeqnum ? Pt.reject("superseded") : Pt.resolve();
          }
        } catch (wt) {
          N = { error: wt };
        } finally {
          try {
            X && !X.done && (et = E.return) && et.call(E);
          } finally {
            if (N)
              throw N.error;
          }
        }
        g.arrivePromises = [];
      }), this.si.add_tourReady(function(M) {
        var $, N;
        try {
          for (var et = __values(g.tourReadyPromises), E = et.next(); !E.done; E = et.next()) {
            var X = E.value;
            X.payload < g.tourReadySeqnum ? X.reject("superseded") : X.resolve();
          }
        } catch (Pt) {
          $ = { error: Pt };
        } finally {
          try {
            E && !E.done && (N = et.return) && N.call(et);
          } finally {
            if ($)
              throw $.error;
          }
        }
        g.tourReadyPromises = [];
      }), srcExports.TourPlayer.add_tourEnded(function(M) {
        var $ = g.getActiveTourPlayer();
        $ !== null && g.tourEndedCallback !== null && g.tourEndedCallback($);
      });
    }
    return n.prototype.waitForReady = function() {
      return __awaiter(this, void 0, void 0, function() {
        var d = this;
        return __generator(this, function(g) {
          return [2, new Promise(function(v, C) {
            d.readyFired ? v() : d.readyPromises.push(new SavedPromise(null, v, C));
          })];
        });
      });
    }, n.prototype.makeArrivePromise = function(d) {
      var g, v, C = this;
      this.arriveSeqnum += 1;
      var M = this.arriveSeqnum;
      try {
        for (var $ = __values(this.arrivePromises), N = $.next(); !N.done; N = $.next()) {
          var et = N.value;
          et.reject("superseded");
        }
      } catch (E) {
        g = { error: E };
      } finally {
        try {
          N && !N.done && (v = $.return) && v.call($);
        } finally {
          if (g)
            throw g.error;
        }
      }
      return this.arrivePromises = [], new Promise(function(E, X) {
        C.arriveSeqnum > M ? X("superseded") : d ? E() : C.arrivePromises.push(new SavedPromise(M, E, X));
      });
    }, n.prototype.gotoRADecZoom = function(d, g, v, C, M) {
      return __awaiter(this, void 0, void 0, function() {
        return __generator(this, function($) {
          return this.ctl.gotoRADecZoom(d * R2H, g * R2D, v, C, M), [2, this.makeArrivePromise(C)];
        });
      });
    }, n.prototype.timeToRADecZoom = function(d, g, v, C) {
      var M = this.ctl.timeToRADecZoom(d * R2H, g * R2D, v, C);
      return M;
    }, n.prototype.gotoTarget = function(d) {
      return __awaiter(this, void 0, void 0, function() {
        return __generator(this, function(g) {
          return this.ctl.gotoTarget(d.place, d.noZoom, d.instant, d.trackObject), [2, this.makeArrivePromise(d.instant)];
        });
      });
    }, n.prototype.loadImageCollection = function(d, g) {
      return __awaiter(this, void 0, void 0, function() {
        var v, C, M = this;
        return __generator(this, function($) {
          return v = this.collectionRequests.get(d), v != null ? [2, Promise.resolve(v)] : (v === void 0 && (this.collectionRequests.set(d, null), C = { f: null }, g === void 0 && (g = !1), C.f = srcExports.Wtml.getWtmlFile(d, function() {
            var N = C.f;
            M.collectionRequests.set(d, N), M.collectionLoadedPromises = M.collectionLoadedPromises.filter(function(et) {
              return et.payload == d ? (et.resolve(N), !1) : !0;
            });
          }, g)), [2, new Promise(function(N, et) {
            var E = M.collectionRequests.get(d);
            E != null ? N(E) : M.collectionLoadedPromises.push(new SavedPromise(d, N, et));
          })]);
        });
      });
    }, n.prototype.addImageSetLayer = function(d) {
      return __awaiter(this, void 0, void 0, function() {
        var g = this;
        return __generator(this, function(v) {
          return [2, new Promise(function(C, M) {
            g.si.addImageSetLayer(d.url, d.mode, d.name, d.goto, function($) {
              C($);
            });
          })];
        });
      });
    }, n.prototype.setImageSetLayerOrder = function(d) {
      this.si.setImageSetLayerOrder(d.id, d.order);
    }, n.prototype.stretchFitsLayer = function(d) {
      var g = this.lm.get_layerList()[d.id];
      if (g && g instanceof srcExports.ImageSetLayer) {
        g.setImageScalePhysical(d.stretch, d.vmin, d.vmax);
        var v = g.getFitsImage();
        v !== null && (g.get_imageSet().get_fitsProperties().transparentBlack = !1);
      }
    }, n.prototype.setFitsLayerColormap = function(d) {
      var g = this.lm.get_layerList()[d.id];
      g && g instanceof srcExports.ImageSetLayer && g.set_colorMapperName(d.name);
    }, n.prototype.applyFitsLayerSettings = function(d) {
      var g, v, C = this.lm.get_layerList()[d.id];
      if (C && C instanceof srcExports.ImageSetLayer)
        try {
          for (var M = __values(d.settings), $ = M.next(); !$.done; $ = M.next()) {
            var N = $.value;
            applyImageSetLayerSetting(C, N);
          }
        } catch (et) {
          g = { error: et };
        } finally {
          try {
            $ && !$.done && (v = M.return) && v.call(M);
          } finally {
            if (g)
              throw g.error;
          }
        }
    }, n.prototype.updateTableLayer = function(d) {
      var g = this.lm.get_layerList()[d.id];
      g && g instanceof srcExports.SpreadSheetLayer && g.updateData(d.dataCsv, !0, !0, !0);
    }, n.prototype.applyTableLayerSettings = function(d) {
      var g, v, C = this.lm.get_layerList()[d.id];
      if (C && C instanceof srcExports.SpreadSheetLayer)
        try {
          for (var M = __values(d.settings), $ = M.next(); !$.done; $ = M.next()) {
            var N = $.value;
            applySpreadSheetLayerSetting(C, N);
          }
        } catch (et) {
          g = { error: et };
        } finally {
          try {
            $ && !$.done && (v = M.return) && v.call(M);
          } finally {
            if (g)
              throw g.error;
          }
        }
    }, n.prototype.addCatalogHipsByName = function(d) {
      return __awaiter(this, void 0, void 0, function() {
        var g = this;
        return __generator(this, function(v) {
          return [2, new Promise(function(C, M) {
            var $ = g.ctl.getImagesetByName(d.name);
            $ === null ? M() : g.ctl.renderContext.addCatalogHips($, function() {
              C($);
            });
          })];
        });
      });
    }, n.prototype.getCatalogHipsDataInView = function(d) {
      return __awaiter(this, void 0, void 0, function() {
        var g = this;
        return __generator(this, function(v) {
          return [2, new Promise(function(C, M) {
            g.ctl.renderContext.getCatalogHipsDataInView(d.imageset, d.limit, function($) {
              C($);
            });
          })];
        });
      });
    }, n.prototype.applySetting = function(d) {
      var g = "set_" + d[0], v = d[1];
      this.si.settings[g](v);
    }, n.prototype.setBackgroundImageByName = function(d) {
      this.ctl.setBackgroundImageByName(d);
    }, n.prototype.setForegroundImageByName = function(d) {
      this.ctl.setForegroundImageByName(d);
    }, n.prototype.setForegroundOpacity = function(d) {
      this.si.setForegroundOpacity(d);
    }, n.prototype.setupForImageset = function(d) {
      var g;
      d.background ? g = d.background : g = this.ctl.getDefaultImageset(d.foreground.get_dataSetType(), d.foreground.get_bandPass());
      var v;
      d.foreground.get_levels() > 0 ? v = d.foreground.get_baseTileDegrees() : v = d.foreground.get_baseTileDegrees() * d.foreground.get_offsetY() * 2;
      var C = new srcExports.Place();
      C.set_type(d.foreground.get_dataSetType()), C.set_backgroundImageset(g), C.set_studyImageset(d.foreground);
      var M = !1;
      switch (d.foreground.get_dataSetType()) {
        case ImageSetType.sky:
          v == 180 ? M = !0 : (C.set_RA(d.foreground.get_centerX() * D2H), C.set_dec(d.foreground.get_centerY()), C.set_zoomLevel(v * 6));
          break;
        case ImageSetType.earth:
        case ImageSetType.planet:
          C.set_zoomLevel(120), v != 180 && (C.set_lng(d.foreground.get_centerX()), C.set_lat(d.foreground.get_centerY()));
          break;
        default:
          C.set_zoomLevel(360);
          break;
      }
      this.ctl.renderContext.set_backgroundImageset(g), this.ctl.gotoTarget(
        C,
        M,
        !0,
        // instant
        !0
        // trackObject
      );
    }, n.prototype.getActiveTourPlayer = function() {
      return this.ctl.uiController === null ? null : this.ctl.uiController instanceof srcExports.TourPlayer ? this.ctl.uiController : null;
    }, n.prototype.getIsTourPlaying = function(d) {
      return srcExports.TourPlayer.get_playing();
    }, n.prototype.loadTour = function(d) {
      return __awaiter(this, void 0, void 0, function() {
        var g, v, C, M, $, N, et = this;
        return __generator(this, function(E) {
          this.ctl.loadTour(d), this.tourReadySeqnum += 1, g = this.tourReadySeqnum;
          try {
            for (v = __values(this.tourReadyPromises), C = v.next(); !C.done; C = v.next())
              M = C.value, M.reject("superseded");
          } catch (X) {
            $ = { error: X };
          } finally {
            try {
              C && !C.done && (N = v.return) && N.call(v);
            } finally {
              if ($)
                throw $.error;
            }
          }
          return this.tourReadyPromises = [], [2, new Promise(function(X, Pt) {
            et.tourReadySeqnum > g ? Pt("superseded") : et.tourReadyPromises.push(new SavedPromise(g, X, Pt));
          })];
        });
      });
    }, n.prototype.loadAndPlayTour = function(d) {
      return __awaiter(this, void 0, void 0, function() {
        var g, v, C, M, $, N, et = this;
        return __generator(this, function(E) {
          this.ctl.playTour(d), this.tourReadySeqnum += 1, g = this.tourReadySeqnum;
          try {
            for (v = __values(this.tourReadyPromises), C = v.next(); !C.done; C = v.next())
              M = C.value, M.reject("superseded");
          } catch (X) {
            $ = { error: X };
          } finally {
            try {
              C && !C.done && (N = v.return) && N.call(v);
            } finally {
              if ($)
                throw $.error;
            }
          }
          return this.tourReadyPromises = [], [2, new Promise(function(X, Pt) {
            et.tourReadySeqnum > g ? Pt("superseded") : et.tourReadyPromises.push(new SavedPromise(g, X, Pt));
          })];
        });
      });
    }, n.prototype.getEffectiveTourTimecode = function() {
      var d = this.getActiveTourPlayer();
      if (d === null)
        return 0;
      var g = d.get_tour();
      if (g === null)
        return 0;
      var v = g.get_currentTourstopIndex();
      if (v < 0)
        return 0;
      var C = g.elapsedTimeTillTourstop(v), M = g.get_tourStops()[v], $ = M.get_tweenPosition() * M.get_duration() * 1e-3, N = C + $;
      if (N < 0)
        return 0;
      var et = g.get_runTime() * 1e-3;
      return N > et ? et : N;
    }, n.prototype.seekToTourTimecode = function(d) {
      var g = this.getActiveTourPlayer();
      if (g !== null) {
        var v = g.get_tour();
        if (v !== null) {
          for (var C = v.get_tourStops(), M = C.length - 1, $ = 0; $ < C.length; $++) {
            var N = v.elapsedTimeTillTourstop($);
            if (N >= d) {
              M = $ - 1;
              break;
            }
          }
          M < 0 && (M = 0), g.playFromTourstop(C[M]);
        }
      }
    }, n;
  }()
);
let getRandomValues$1;
const rnds8$1 = new Uint8Array(16);
function rng$1() {
  if (!getRandomValues$1 && (getRandomValues$1 = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !getRandomValues$1))
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return getRandomValues$1(rnds8$1);
}
const byteToHex$1 = [];
for (let n = 0; n < 256; ++n)
  byteToHex$1.push((n + 256).toString(16).slice(1));
function unsafeStringify(n, d = 0) {
  return (byteToHex$1[n[d + 0]] + byteToHex$1[n[d + 1]] + byteToHex$1[n[d + 2]] + byteToHex$1[n[d + 3]] + "-" + byteToHex$1[n[d + 4]] + byteToHex$1[n[d + 5]] + "-" + byteToHex$1[n[d + 6]] + byteToHex$1[n[d + 7]] + "-" + byteToHex$1[n[d + 8]] + byteToHex$1[n[d + 9]] + "-" + byteToHex$1[n[d + 10]] + byteToHex$1[n[d + 11]] + byteToHex$1[n[d + 12]] + byteToHex$1[n[d + 13]] + byteToHex$1[n[d + 14]] + byteToHex$1[n[d + 15]]).toLowerCase();
}
const randomUUID = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto), native = {
  randomUUID
};
function v4$1(n, d, g) {
  if (native.randomUUID && !d && !n)
    return native.randomUUID();
  n = n || {};
  const v = n.random || (n.rng || rng$1)();
  if (v[6] = v[6] & 15 | 64, v[8] = v[8] & 63 | 128, d) {
    g = g || 0;
    for (let C = 0; C < 16; ++C)
      d[g + C] = v[C];
    return d;
  }
  return unsafeStringify(v);
}
async function render(n) {
  let d = `${v4$1()}`, g = document.createElement("div");
  g.setAttribute("id", d), g.setAttribute("style", "width: 750px; height: 750px"), n.el.appendChild(g), n.displayed.then((v) => {
    onReaderWWT(d);
  });
}
async function onReaderWWT(n) {
  await new WWTInstance({
    elId: n,
    startInternalRenderLoop: !0
  }).waitForReady();
}
var common = {};
(function(n) {
  var d = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
  function g(M, $) {
    return Object.prototype.hasOwnProperty.call(M, $);
  }
  n.assign = function(M) {
    for (var $ = Array.prototype.slice.call(arguments, 1); $.length; ) {
      var N = $.shift();
      if (N) {
        if (typeof N != "object")
          throw new TypeError(N + "must be non-object");
        for (var et in N)
          g(N, et) && (M[et] = N[et]);
      }
    }
    return M;
  }, n.shrinkBuf = function(M, $) {
    return M.length === $ ? M : M.subarray ? M.subarray(0, $) : (M.length = $, M);
  };
  var v = {
    arraySet: function(M, $, N, et, E) {
      if ($.subarray && M.subarray) {
        M.set($.subarray(N, N + et), E);
        return;
      }
      for (var X = 0; X < et; X++)
        M[E + X] = $[N + X];
    },
    // Join array of chunks to single array.
    flattenChunks: function(M) {
      var $, N, et, E, X, Pt;
      for (et = 0, $ = 0, N = M.length; $ < N; $++)
        et += M[$].length;
      for (Pt = new Uint8Array(et), E = 0, $ = 0, N = M.length; $ < N; $++)
        X = M[$], Pt.set(X, E), E += X.length;
      return Pt;
    }
  }, C = {
    arraySet: function(M, $, N, et, E) {
      for (var X = 0; X < et; X++)
        M[E + X] = $[N + X];
    },
    // Join array of chunks to single array.
    flattenChunks: function(M) {
      return [].concat.apply([], M);
    }
  };
  n.setTyped = function(M) {
    M ? (n.Buf8 = Uint8Array, n.Buf16 = Uint16Array, n.Buf32 = Int32Array, n.assign(n, v)) : (n.Buf8 = Array, n.Buf16 = Array, n.Buf32 = Array, n.assign(n, C));
  }, n.setTyped(d);
})(common);
var deflate$4 = {}, deflate$3 = {}, trees$1 = {}, utils$6 = common, Z_FIXED$1 = 4, Z_BINARY = 0, Z_TEXT = 1, Z_UNKNOWN$1 = 2;
function zero$1(n) {
  for (var d = n.length; --d >= 0; )
    n[d] = 0;
}
var STORED_BLOCK = 0, STATIC_TREES = 1, DYN_TREES = 2, MIN_MATCH$1 = 3, MAX_MATCH$1 = 258, LENGTH_CODES$1 = 29, LITERALS$1 = 256, L_CODES$1 = LITERALS$1 + 1 + LENGTH_CODES$1, D_CODES$1 = 30, BL_CODES$1 = 19, HEAP_SIZE$1 = 2 * L_CODES$1 + 1, MAX_BITS$1 = 15, Buf_size = 16, MAX_BL_BITS = 7, END_BLOCK = 256, REP_3_6 = 16, REPZ_3_10 = 17, REPZ_11_138 = 18, extra_lbits = (
  /* extra bits for each length code */
  [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
), extra_dbits = (
  /* extra bits for each distance code */
  [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
), extra_blbits = (
  /* extra bits for each bit length code */
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
), bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], DIST_CODE_LEN = 512, static_ltree = new Array((L_CODES$1 + 2) * 2);
zero$1(static_ltree);
var static_dtree = new Array(D_CODES$1 * 2);
zero$1(static_dtree);
var _dist_code = new Array(DIST_CODE_LEN);
zero$1(_dist_code);
var _length_code = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);
zero$1(_length_code);
var base_length = new Array(LENGTH_CODES$1);
zero$1(base_length);
var base_dist = new Array(D_CODES$1);
zero$1(base_dist);
function StaticTreeDesc(n, d, g, v, C) {
  this.static_tree = n, this.extra_bits = d, this.extra_base = g, this.elems = v, this.max_length = C, this.has_stree = n && n.length;
}
var static_l_desc, static_d_desc, static_bl_desc;
function TreeDesc(n, d) {
  this.dyn_tree = n, this.max_code = 0, this.stat_desc = d;
}
function d_code(n) {
  return n < 256 ? _dist_code[n] : _dist_code[256 + (n >>> 7)];
}
function put_short(n, d) {
  n.pending_buf[n.pending++] = d & 255, n.pending_buf[n.pending++] = d >>> 8 & 255;
}
function send_bits(n, d, g) {
  n.bi_valid > Buf_size - g ? (n.bi_buf |= d << n.bi_valid & 65535, put_short(n, n.bi_buf), n.bi_buf = d >> Buf_size - n.bi_valid, n.bi_valid += g - Buf_size) : (n.bi_buf |= d << n.bi_valid & 65535, n.bi_valid += g);
}
function send_code(n, d, g) {
  send_bits(
    n,
    g[d * 2],
    g[d * 2 + 1]
    /*.Len*/
  );
}
function bi_reverse(n, d) {
  var g = 0;
  do
    g |= n & 1, n >>>= 1, g <<= 1;
  while (--d > 0);
  return g >>> 1;
}
function bi_flush(n) {
  n.bi_valid === 16 ? (put_short(n, n.bi_buf), n.bi_buf = 0, n.bi_valid = 0) : n.bi_valid >= 8 && (n.pending_buf[n.pending++] = n.bi_buf & 255, n.bi_buf >>= 8, n.bi_valid -= 8);
}
function gen_bitlen(n, d) {
  var g = d.dyn_tree, v = d.max_code, C = d.stat_desc.static_tree, M = d.stat_desc.has_stree, $ = d.stat_desc.extra_bits, N = d.stat_desc.extra_base, et = d.stat_desc.max_length, E, X, Pt, wt, gt, Ot, qt = 0;
  for (wt = 0; wt <= MAX_BITS$1; wt++)
    n.bl_count[wt] = 0;
  for (g[n.heap[n.heap_max] * 2 + 1] = 0, E = n.heap_max + 1; E < HEAP_SIZE$1; E++)
    X = n.heap[E], wt = g[g[X * 2 + 1] * 2 + 1] + 1, wt > et && (wt = et, qt++), g[X * 2 + 1] = wt, !(X > v) && (n.bl_count[wt]++, gt = 0, X >= N && (gt = $[X - N]), Ot = g[X * 2], n.opt_len += Ot * (wt + gt), M && (n.static_len += Ot * (C[X * 2 + 1] + gt)));
  if (qt !== 0) {
    do {
      for (wt = et - 1; n.bl_count[wt] === 0; )
        wt--;
      n.bl_count[wt]--, n.bl_count[wt + 1] += 2, n.bl_count[et]--, qt -= 2;
    } while (qt > 0);
    for (wt = et; wt !== 0; wt--)
      for (X = n.bl_count[wt]; X !== 0; )
        Pt = n.heap[--E], !(Pt > v) && (g[Pt * 2 + 1] !== wt && (n.opt_len += (wt - g[Pt * 2 + 1]) * g[Pt * 2], g[Pt * 2 + 1] = wt), X--);
  }
}
function gen_codes(n, d, g) {
  var v = new Array(MAX_BITS$1 + 1), C = 0, M, $;
  for (M = 1; M <= MAX_BITS$1; M++)
    v[M] = C = C + g[M - 1] << 1;
  for ($ = 0; $ <= d; $++) {
    var N = n[$ * 2 + 1];
    N !== 0 && (n[$ * 2] = bi_reverse(v[N]++, N));
  }
}
function tr_static_init() {
  var n, d, g, v, C, M = new Array(MAX_BITS$1 + 1);
  for (g = 0, v = 0; v < LENGTH_CODES$1 - 1; v++)
    for (base_length[v] = g, n = 0; n < 1 << extra_lbits[v]; n++)
      _length_code[g++] = v;
  for (_length_code[g - 1] = v, C = 0, v = 0; v < 16; v++)
    for (base_dist[v] = C, n = 0; n < 1 << extra_dbits[v]; n++)
      _dist_code[C++] = v;
  for (C >>= 7; v < D_CODES$1; v++)
    for (base_dist[v] = C << 7, n = 0; n < 1 << extra_dbits[v] - 7; n++)
      _dist_code[256 + C++] = v;
  for (d = 0; d <= MAX_BITS$1; d++)
    M[d] = 0;
  for (n = 0; n <= 143; )
    static_ltree[n * 2 + 1] = 8, n++, M[8]++;
  for (; n <= 255; )
    static_ltree[n * 2 + 1] = 9, n++, M[9]++;
  for (; n <= 279; )
    static_ltree[n * 2 + 1] = 7, n++, M[7]++;
  for (; n <= 287; )
    static_ltree[n * 2 + 1] = 8, n++, M[8]++;
  for (gen_codes(static_ltree, L_CODES$1 + 1, M), n = 0; n < D_CODES$1; n++)
    static_dtree[n * 2 + 1] = 5, static_dtree[n * 2] = bi_reverse(n, 5);
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1), static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0, D_CODES$1, MAX_BITS$1), static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0, BL_CODES$1, MAX_BL_BITS);
}
function init_block(n) {
  var d;
  for (d = 0; d < L_CODES$1; d++)
    n.dyn_ltree[d * 2] = 0;
  for (d = 0; d < D_CODES$1; d++)
    n.dyn_dtree[d * 2] = 0;
  for (d = 0; d < BL_CODES$1; d++)
    n.bl_tree[d * 2] = 0;
  n.dyn_ltree[END_BLOCK * 2] = 1, n.opt_len = n.static_len = 0, n.last_lit = n.matches = 0;
}
function bi_windup(n) {
  n.bi_valid > 8 ? put_short(n, n.bi_buf) : n.bi_valid > 0 && (n.pending_buf[n.pending++] = n.bi_buf), n.bi_buf = 0, n.bi_valid = 0;
}
function copy_block(n, d, g, v) {
  bi_windup(n), v && (put_short(n, g), put_short(n, ~g)), utils$6.arraySet(n.pending_buf, n.window, d, g, n.pending), n.pending += g;
}
function smaller(n, d, g, v) {
  var C = d * 2, M = g * 2;
  return n[C] < n[M] || n[C] === n[M] && v[d] <= v[g];
}
function pqdownheap(n, d, g) {
  for (var v = n.heap[g], C = g << 1; C <= n.heap_len && (C < n.heap_len && smaller(d, n.heap[C + 1], n.heap[C], n.depth) && C++, !smaller(d, v, n.heap[C], n.depth)); )
    n.heap[g] = n.heap[C], g = C, C <<= 1;
  n.heap[g] = v;
}
function compress_block(n, d, g) {
  var v, C, M = 0, $, N;
  if (n.last_lit !== 0)
    do
      v = n.pending_buf[n.d_buf + M * 2] << 8 | n.pending_buf[n.d_buf + M * 2 + 1], C = n.pending_buf[n.l_buf + M], M++, v === 0 ? send_code(n, C, d) : ($ = _length_code[C], send_code(n, $ + LITERALS$1 + 1, d), N = extra_lbits[$], N !== 0 && (C -= base_length[$], send_bits(n, C, N)), v--, $ = d_code(v), send_code(n, $, g), N = extra_dbits[$], N !== 0 && (v -= base_dist[$], send_bits(n, v, N)));
    while (M < n.last_lit);
  send_code(n, END_BLOCK, d);
}
function build_tree(n, d) {
  var g = d.dyn_tree, v = d.stat_desc.static_tree, C = d.stat_desc.has_stree, M = d.stat_desc.elems, $, N, et = -1, E;
  for (n.heap_len = 0, n.heap_max = HEAP_SIZE$1, $ = 0; $ < M; $++)
    g[$ * 2] !== 0 ? (n.heap[++n.heap_len] = et = $, n.depth[$] = 0) : g[$ * 2 + 1] = 0;
  for (; n.heap_len < 2; )
    E = n.heap[++n.heap_len] = et < 2 ? ++et : 0, g[E * 2] = 1, n.depth[E] = 0, n.opt_len--, C && (n.static_len -= v[E * 2 + 1]);
  for (d.max_code = et, $ = n.heap_len >> 1; $ >= 1; $--)
    pqdownheap(n, g, $);
  E = M;
  do
    $ = n.heap[
      1
      /*SMALLEST*/
    ], n.heap[
      1
      /*SMALLEST*/
    ] = n.heap[n.heap_len--], pqdownheap(
      n,
      g,
      1
      /*SMALLEST*/
    ), N = n.heap[
      1
      /*SMALLEST*/
    ], n.heap[--n.heap_max] = $, n.heap[--n.heap_max] = N, g[E * 2] = g[$ * 2] + g[N * 2], n.depth[E] = (n.depth[$] >= n.depth[N] ? n.depth[$] : n.depth[N]) + 1, g[$ * 2 + 1] = g[N * 2 + 1] = E, n.heap[
      1
      /*SMALLEST*/
    ] = E++, pqdownheap(
      n,
      g,
      1
      /*SMALLEST*/
    );
  while (n.heap_len >= 2);
  n.heap[--n.heap_max] = n.heap[
    1
    /*SMALLEST*/
  ], gen_bitlen(n, d), gen_codes(g, et, n.bl_count);
}
function scan_tree(n, d, g) {
  var v, C = -1, M, $ = d[0 * 2 + 1], N = 0, et = 7, E = 4;
  for ($ === 0 && (et = 138, E = 3), d[(g + 1) * 2 + 1] = 65535, v = 0; v <= g; v++)
    M = $, $ = d[(v + 1) * 2 + 1], !(++N < et && M === $) && (N < E ? n.bl_tree[M * 2] += N : M !== 0 ? (M !== C && n.bl_tree[M * 2]++, n.bl_tree[REP_3_6 * 2]++) : N <= 10 ? n.bl_tree[REPZ_3_10 * 2]++ : n.bl_tree[REPZ_11_138 * 2]++, N = 0, C = M, $ === 0 ? (et = 138, E = 3) : M === $ ? (et = 6, E = 3) : (et = 7, E = 4));
}
function send_tree(n, d, g) {
  var v, C = -1, M, $ = d[0 * 2 + 1], N = 0, et = 7, E = 4;
  for ($ === 0 && (et = 138, E = 3), v = 0; v <= g; v++)
    if (M = $, $ = d[(v + 1) * 2 + 1], !(++N < et && M === $)) {
      if (N < E)
        do
          send_code(n, M, n.bl_tree);
        while (--N !== 0);
      else
        M !== 0 ? (M !== C && (send_code(n, M, n.bl_tree), N--), send_code(n, REP_3_6, n.bl_tree), send_bits(n, N - 3, 2)) : N <= 10 ? (send_code(n, REPZ_3_10, n.bl_tree), send_bits(n, N - 3, 3)) : (send_code(n, REPZ_11_138, n.bl_tree), send_bits(n, N - 11, 7));
      N = 0, C = M, $ === 0 ? (et = 138, E = 3) : M === $ ? (et = 6, E = 3) : (et = 7, E = 4);
    }
}
function build_bl_tree(n) {
  var d;
  for (scan_tree(n, n.dyn_ltree, n.l_desc.max_code), scan_tree(n, n.dyn_dtree, n.d_desc.max_code), build_tree(n, n.bl_desc), d = BL_CODES$1 - 1; d >= 3 && n.bl_tree[bl_order[d] * 2 + 1] === 0; d--)
    ;
  return n.opt_len += 3 * (d + 1) + 5 + 5 + 4, d;
}
function send_all_trees(n, d, g, v) {
  var C;
  for (send_bits(n, d - 257, 5), send_bits(n, g - 1, 5), send_bits(n, v - 4, 4), C = 0; C < v; C++)
    send_bits(n, n.bl_tree[bl_order[C] * 2 + 1], 3);
  send_tree(n, n.dyn_ltree, d - 1), send_tree(n, n.dyn_dtree, g - 1);
}
function detect_data_type(n) {
  var d = 4093624447, g;
  for (g = 0; g <= 31; g++, d >>>= 1)
    if (d & 1 && n.dyn_ltree[g * 2] !== 0)
      return Z_BINARY;
  if (n.dyn_ltree[9 * 2] !== 0 || n.dyn_ltree[10 * 2] !== 0 || n.dyn_ltree[13 * 2] !== 0)
    return Z_TEXT;
  for (g = 32; g < LITERALS$1; g++)
    if (n.dyn_ltree[g * 2] !== 0)
      return Z_TEXT;
  return Z_BINARY;
}
var static_init_done = !1;
function _tr_init(n) {
  static_init_done || (tr_static_init(), static_init_done = !0), n.l_desc = new TreeDesc(n.dyn_ltree, static_l_desc), n.d_desc = new TreeDesc(n.dyn_dtree, static_d_desc), n.bl_desc = new TreeDesc(n.bl_tree, static_bl_desc), n.bi_buf = 0, n.bi_valid = 0, init_block(n);
}
function _tr_stored_block(n, d, g, v) {
  send_bits(n, (STORED_BLOCK << 1) + (v ? 1 : 0), 3), copy_block(n, d, g, !0);
}
function _tr_align(n) {
  send_bits(n, STATIC_TREES << 1, 3), send_code(n, END_BLOCK, static_ltree), bi_flush(n);
}
function _tr_flush_block(n, d, g, v) {
  var C, M, $ = 0;
  n.level > 0 ? (n.strm.data_type === Z_UNKNOWN$1 && (n.strm.data_type = detect_data_type(n)), build_tree(n, n.l_desc), build_tree(n, n.d_desc), $ = build_bl_tree(n), C = n.opt_len + 3 + 7 >>> 3, M = n.static_len + 3 + 7 >>> 3, M <= C && (C = M)) : C = M = g + 5, g + 4 <= C && d !== -1 ? _tr_stored_block(n, d, g, v) : n.strategy === Z_FIXED$1 || M === C ? (send_bits(n, (STATIC_TREES << 1) + (v ? 1 : 0), 3), compress_block(n, static_ltree, static_dtree)) : (send_bits(n, (DYN_TREES << 1) + (v ? 1 : 0), 3), send_all_trees(n, n.l_desc.max_code + 1, n.d_desc.max_code + 1, $ + 1), compress_block(n, n.dyn_ltree, n.dyn_dtree)), init_block(n), v && bi_windup(n);
}
function _tr_tally(n, d, g) {
  return n.pending_buf[n.d_buf + n.last_lit * 2] = d >>> 8 & 255, n.pending_buf[n.d_buf + n.last_lit * 2 + 1] = d & 255, n.pending_buf[n.l_buf + n.last_lit] = g & 255, n.last_lit++, d === 0 ? n.dyn_ltree[g * 2]++ : (n.matches++, d--, n.dyn_ltree[(_length_code[g] + LITERALS$1 + 1) * 2]++, n.dyn_dtree[d_code(d) * 2]++), n.last_lit === n.lit_bufsize - 1;
}
trees$1._tr_init = _tr_init;
trees$1._tr_stored_block = _tr_stored_block;
trees$1._tr_flush_block = _tr_flush_block;
trees$1._tr_tally = _tr_tally;
trees$1._tr_align = _tr_align;
function adler32$2(n, d, g, v) {
  for (var C = n & 65535 | 0, M = n >>> 16 & 65535 | 0, $ = 0; g !== 0; ) {
    $ = g > 2e3 ? 2e3 : g, g -= $;
    do
      C = C + d[v++] | 0, M = M + C | 0;
    while (--$);
    C %= 65521, M %= 65521;
  }
  return C | M << 16 | 0;
}
var adler32_1 = adler32$2;
function makeTable() {
  for (var n, d = [], g = 0; g < 256; g++) {
    n = g;
    for (var v = 0; v < 8; v++)
      n = n & 1 ? 3988292384 ^ n >>> 1 : n >>> 1;
    d[g] = n;
  }
  return d;
}
var crcTable = makeTable();
function crc32$2(n, d, g, v) {
  var C = crcTable, M = v + g;
  n ^= -1;
  for (var $ = v; $ < M; $++)
    n = n >>> 8 ^ C[(n ^ d[$]) & 255];
  return n ^ -1;
}
var crc32_1 = crc32$2, messages = {
  2: "need dictionary",
  /* Z_NEED_DICT       2  */
  1: "stream end",
  /* Z_STREAM_END      1  */
  0: "",
  /* Z_OK              0  */
  "-1": "file error",
  /* Z_ERRNO         (-1) */
  "-2": "stream error",
  /* Z_STREAM_ERROR  (-2) */
  "-3": "data error",
  /* Z_DATA_ERROR    (-3) */
  "-4": "insufficient memory",
  /* Z_MEM_ERROR     (-4) */
  "-5": "buffer error",
  /* Z_BUF_ERROR     (-5) */
  "-6": "incompatible version"
  /* Z_VERSION_ERROR (-6) */
}, utils$5 = common, trees = trees$1, adler32$1 = adler32_1, crc32$1 = crc32_1, msg$2 = messages, Z_NO_FLUSH$1 = 0, Z_PARTIAL_FLUSH = 1, Z_FULL_FLUSH = 3, Z_FINISH$2 = 4, Z_BLOCK$1 = 5, Z_OK$2 = 0, Z_STREAM_END$2 = 1, Z_STREAM_ERROR$1 = -2, Z_DATA_ERROR$1 = -3, Z_BUF_ERROR$1 = -5, Z_DEFAULT_COMPRESSION$1 = -1, Z_FILTERED = 1, Z_HUFFMAN_ONLY = 2, Z_RLE = 3, Z_FIXED = 4, Z_DEFAULT_STRATEGY$1 = 0, Z_UNKNOWN = 2, Z_DEFLATED$2 = 8, MAX_MEM_LEVEL = 9, MAX_WBITS$1 = 15, DEF_MEM_LEVEL = 8, LENGTH_CODES = 29, LITERALS = 256, L_CODES = LITERALS + 1 + LENGTH_CODES, D_CODES = 30, BL_CODES = 19, HEAP_SIZE = 2 * L_CODES + 1, MAX_BITS = 15, MIN_MATCH = 3, MAX_MATCH = 258, MIN_LOOKAHEAD = MAX_MATCH + MIN_MATCH + 1, PRESET_DICT = 32, INIT_STATE = 42, EXTRA_STATE = 69, NAME_STATE = 73, COMMENT_STATE = 91, HCRC_STATE = 103, BUSY_STATE = 113, FINISH_STATE = 666, BS_NEED_MORE = 1, BS_BLOCK_DONE = 2, BS_FINISH_STARTED = 3, BS_FINISH_DONE = 4, OS_CODE = 3;
function err(n, d) {
  return n.msg = msg$2[d], d;
}
function rank(n) {
  return (n << 1) - (n > 4 ? 9 : 0);
}
function zero(n) {
  for (var d = n.length; --d >= 0; )
    n[d] = 0;
}
function flush_pending(n) {
  var d = n.state, g = d.pending;
  g > n.avail_out && (g = n.avail_out), g !== 0 && (utils$5.arraySet(n.output, d.pending_buf, d.pending_out, g, n.next_out), n.next_out += g, d.pending_out += g, n.total_out += g, n.avail_out -= g, d.pending -= g, d.pending === 0 && (d.pending_out = 0));
}
function flush_block_only(n, d) {
  trees._tr_flush_block(n, n.block_start >= 0 ? n.block_start : -1, n.strstart - n.block_start, d), n.block_start = n.strstart, flush_pending(n.strm);
}
function put_byte(n, d) {
  n.pending_buf[n.pending++] = d;
}
function putShortMSB(n, d) {
  n.pending_buf[n.pending++] = d >>> 8 & 255, n.pending_buf[n.pending++] = d & 255;
}
function read_buf(n, d, g, v) {
  var C = n.avail_in;
  return C > v && (C = v), C === 0 ? 0 : (n.avail_in -= C, utils$5.arraySet(d, n.input, n.next_in, C, g), n.state.wrap === 1 ? n.adler = adler32$1(n.adler, d, C, g) : n.state.wrap === 2 && (n.adler = crc32$1(n.adler, d, C, g)), n.next_in += C, n.total_in += C, C);
}
function longest_match(n, d) {
  var g = n.max_chain_length, v = n.strstart, C, M, $ = n.prev_length, N = n.nice_match, et = n.strstart > n.w_size - MIN_LOOKAHEAD ? n.strstart - (n.w_size - MIN_LOOKAHEAD) : 0, E = n.window, X = n.w_mask, Pt = n.prev, wt = n.strstart + MAX_MATCH, gt = E[v + $ - 1], Ot = E[v + $];
  n.prev_length >= n.good_match && (g >>= 2), N > n.lookahead && (N = n.lookahead);
  do
    if (C = d, !(E[C + $] !== Ot || E[C + $ - 1] !== gt || E[C] !== E[v] || E[++C] !== E[v + 1])) {
      v += 2, C++;
      do
        ;
      while (E[++v] === E[++C] && E[++v] === E[++C] && E[++v] === E[++C] && E[++v] === E[++C] && E[++v] === E[++C] && E[++v] === E[++C] && E[++v] === E[++C] && E[++v] === E[++C] && v < wt);
      if (M = MAX_MATCH - (wt - v), v = wt - MAX_MATCH, M > $) {
        if (n.match_start = d, $ = M, M >= N)
          break;
        gt = E[v + $ - 1], Ot = E[v + $];
      }
    }
  while ((d = Pt[d & X]) > et && --g !== 0);
  return $ <= n.lookahead ? $ : n.lookahead;
}
function fill_window(n) {
  var d = n.w_size, g, v, C, M, $;
  do {
    if (M = n.window_size - n.lookahead - n.strstart, n.strstart >= d + (d - MIN_LOOKAHEAD)) {
      utils$5.arraySet(n.window, n.window, d, d, 0), n.match_start -= d, n.strstart -= d, n.block_start -= d, v = n.hash_size, g = v;
      do
        C = n.head[--g], n.head[g] = C >= d ? C - d : 0;
      while (--v);
      v = d, g = v;
      do
        C = n.prev[--g], n.prev[g] = C >= d ? C - d : 0;
      while (--v);
      M += d;
    }
    if (n.strm.avail_in === 0)
      break;
    if (v = read_buf(n.strm, n.window, n.strstart + n.lookahead, M), n.lookahead += v, n.lookahead + n.insert >= MIN_MATCH)
      for ($ = n.strstart - n.insert, n.ins_h = n.window[$], n.ins_h = (n.ins_h << n.hash_shift ^ n.window[$ + 1]) & n.hash_mask; n.insert && (n.ins_h = (n.ins_h << n.hash_shift ^ n.window[$ + MIN_MATCH - 1]) & n.hash_mask, n.prev[$ & n.w_mask] = n.head[n.ins_h], n.head[n.ins_h] = $, $++, n.insert--, !(n.lookahead + n.insert < MIN_MATCH)); )
        ;
  } while (n.lookahead < MIN_LOOKAHEAD && n.strm.avail_in !== 0);
}
function deflate_stored(n, d) {
  var g = 65535;
  for (g > n.pending_buf_size - 5 && (g = n.pending_buf_size - 5); ; ) {
    if (n.lookahead <= 1) {
      if (fill_window(n), n.lookahead === 0 && d === Z_NO_FLUSH$1)
        return BS_NEED_MORE;
      if (n.lookahead === 0)
        break;
    }
    n.strstart += n.lookahead, n.lookahead = 0;
    var v = n.block_start + g;
    if ((n.strstart === 0 || n.strstart >= v) && (n.lookahead = n.strstart - v, n.strstart = v, flush_block_only(n, !1), n.strm.avail_out === 0) || n.strstart - n.block_start >= n.w_size - MIN_LOOKAHEAD && (flush_block_only(n, !1), n.strm.avail_out === 0))
      return BS_NEED_MORE;
  }
  return n.insert = 0, d === Z_FINISH$2 ? (flush_block_only(n, !0), n.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : (n.strstart > n.block_start && (flush_block_only(n, !1), n.strm.avail_out === 0), BS_NEED_MORE);
}
function deflate_fast(n, d) {
  for (var g, v; ; ) {
    if (n.lookahead < MIN_LOOKAHEAD) {
      if (fill_window(n), n.lookahead < MIN_LOOKAHEAD && d === Z_NO_FLUSH$1)
        return BS_NEED_MORE;
      if (n.lookahead === 0)
        break;
    }
    if (g = 0, n.lookahead >= MIN_MATCH && (n.ins_h = (n.ins_h << n.hash_shift ^ n.window[n.strstart + MIN_MATCH - 1]) & n.hash_mask, g = n.prev[n.strstart & n.w_mask] = n.head[n.ins_h], n.head[n.ins_h] = n.strstart), g !== 0 && n.strstart - g <= n.w_size - MIN_LOOKAHEAD && (n.match_length = longest_match(n, g)), n.match_length >= MIN_MATCH)
      if (v = trees._tr_tally(n, n.strstart - n.match_start, n.match_length - MIN_MATCH), n.lookahead -= n.match_length, n.match_length <= n.max_lazy_match && n.lookahead >= MIN_MATCH) {
        n.match_length--;
        do
          n.strstart++, n.ins_h = (n.ins_h << n.hash_shift ^ n.window[n.strstart + MIN_MATCH - 1]) & n.hash_mask, g = n.prev[n.strstart & n.w_mask] = n.head[n.ins_h], n.head[n.ins_h] = n.strstart;
        while (--n.match_length !== 0);
        n.strstart++;
      } else
        n.strstart += n.match_length, n.match_length = 0, n.ins_h = n.window[n.strstart], n.ins_h = (n.ins_h << n.hash_shift ^ n.window[n.strstart + 1]) & n.hash_mask;
    else
      v = trees._tr_tally(n, 0, n.window[n.strstart]), n.lookahead--, n.strstart++;
    if (v && (flush_block_only(n, !1), n.strm.avail_out === 0))
      return BS_NEED_MORE;
  }
  return n.insert = n.strstart < MIN_MATCH - 1 ? n.strstart : MIN_MATCH - 1, d === Z_FINISH$2 ? (flush_block_only(n, !0), n.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : n.last_lit && (flush_block_only(n, !1), n.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;
}
function deflate_slow(n, d) {
  for (var g, v, C; ; ) {
    if (n.lookahead < MIN_LOOKAHEAD) {
      if (fill_window(n), n.lookahead < MIN_LOOKAHEAD && d === Z_NO_FLUSH$1)
        return BS_NEED_MORE;
      if (n.lookahead === 0)
        break;
    }
    if (g = 0, n.lookahead >= MIN_MATCH && (n.ins_h = (n.ins_h << n.hash_shift ^ n.window[n.strstart + MIN_MATCH - 1]) & n.hash_mask, g = n.prev[n.strstart & n.w_mask] = n.head[n.ins_h], n.head[n.ins_h] = n.strstart), n.prev_length = n.match_length, n.prev_match = n.match_start, n.match_length = MIN_MATCH - 1, g !== 0 && n.prev_length < n.max_lazy_match && n.strstart - g <= n.w_size - MIN_LOOKAHEAD && (n.match_length = longest_match(n, g), n.match_length <= 5 && (n.strategy === Z_FILTERED || n.match_length === MIN_MATCH && n.strstart - n.match_start > 4096) && (n.match_length = MIN_MATCH - 1)), n.prev_length >= MIN_MATCH && n.match_length <= n.prev_length) {
      C = n.strstart + n.lookahead - MIN_MATCH, v = trees._tr_tally(n, n.strstart - 1 - n.prev_match, n.prev_length - MIN_MATCH), n.lookahead -= n.prev_length - 1, n.prev_length -= 2;
      do
        ++n.strstart <= C && (n.ins_h = (n.ins_h << n.hash_shift ^ n.window[n.strstart + MIN_MATCH - 1]) & n.hash_mask, g = n.prev[n.strstart & n.w_mask] = n.head[n.ins_h], n.head[n.ins_h] = n.strstart);
      while (--n.prev_length !== 0);
      if (n.match_available = 0, n.match_length = MIN_MATCH - 1, n.strstart++, v && (flush_block_only(n, !1), n.strm.avail_out === 0))
        return BS_NEED_MORE;
    } else if (n.match_available) {
      if (v = trees._tr_tally(n, 0, n.window[n.strstart - 1]), v && flush_block_only(n, !1), n.strstart++, n.lookahead--, n.strm.avail_out === 0)
        return BS_NEED_MORE;
    } else
      n.match_available = 1, n.strstart++, n.lookahead--;
  }
  return n.match_available && (v = trees._tr_tally(n, 0, n.window[n.strstart - 1]), n.match_available = 0), n.insert = n.strstart < MIN_MATCH - 1 ? n.strstart : MIN_MATCH - 1, d === Z_FINISH$2 ? (flush_block_only(n, !0), n.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : n.last_lit && (flush_block_only(n, !1), n.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;
}
function deflate_rle(n, d) {
  for (var g, v, C, M, $ = n.window; ; ) {
    if (n.lookahead <= MAX_MATCH) {
      if (fill_window(n), n.lookahead <= MAX_MATCH && d === Z_NO_FLUSH$1)
        return BS_NEED_MORE;
      if (n.lookahead === 0)
        break;
    }
    if (n.match_length = 0, n.lookahead >= MIN_MATCH && n.strstart > 0 && (C = n.strstart - 1, v = $[C], v === $[++C] && v === $[++C] && v === $[++C])) {
      M = n.strstart + MAX_MATCH;
      do
        ;
      while (v === $[++C] && v === $[++C] && v === $[++C] && v === $[++C] && v === $[++C] && v === $[++C] && v === $[++C] && v === $[++C] && C < M);
      n.match_length = MAX_MATCH - (M - C), n.match_length > n.lookahead && (n.match_length = n.lookahead);
    }
    if (n.match_length >= MIN_MATCH ? (g = trees._tr_tally(n, 1, n.match_length - MIN_MATCH), n.lookahead -= n.match_length, n.strstart += n.match_length, n.match_length = 0) : (g = trees._tr_tally(n, 0, n.window[n.strstart]), n.lookahead--, n.strstart++), g && (flush_block_only(n, !1), n.strm.avail_out === 0))
      return BS_NEED_MORE;
  }
  return n.insert = 0, d === Z_FINISH$2 ? (flush_block_only(n, !0), n.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : n.last_lit && (flush_block_only(n, !1), n.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;
}
function deflate_huff(n, d) {
  for (var g; ; ) {
    if (n.lookahead === 0 && (fill_window(n), n.lookahead === 0)) {
      if (d === Z_NO_FLUSH$1)
        return BS_NEED_MORE;
      break;
    }
    if (n.match_length = 0, g = trees._tr_tally(n, 0, n.window[n.strstart]), n.lookahead--, n.strstart++, g && (flush_block_only(n, !1), n.strm.avail_out === 0))
      return BS_NEED_MORE;
  }
  return n.insert = 0, d === Z_FINISH$2 ? (flush_block_only(n, !0), n.strm.avail_out === 0 ? BS_FINISH_STARTED : BS_FINISH_DONE) : n.last_lit && (flush_block_only(n, !1), n.strm.avail_out === 0) ? BS_NEED_MORE : BS_BLOCK_DONE;
}
function Config(n, d, g, v, C) {
  this.good_length = n, this.max_lazy = d, this.nice_length = g, this.max_chain = v, this.func = C;
}
var configuration_table;
configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),
  /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),
  /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),
  /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),
  /* 3 */
  new Config(4, 4, 16, 16, deflate_slow),
  /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),
  /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),
  /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),
  /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),
  /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)
  /* 9 max compression */
];
function lm_init(n) {
  n.window_size = 2 * n.w_size, zero(n.head), n.max_lazy_match = configuration_table[n.level].max_lazy, n.good_match = configuration_table[n.level].good_length, n.nice_match = configuration_table[n.level].nice_length, n.max_chain_length = configuration_table[n.level].max_chain, n.strstart = 0, n.block_start = 0, n.lookahead = 0, n.insert = 0, n.match_length = n.prev_length = MIN_MATCH - 1, n.match_available = 0, n.ins_h = 0;
}
function DeflateState() {
  this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = Z_DEFLATED$2, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new utils$5.Buf16(HEAP_SIZE * 2), this.dyn_dtree = new utils$5.Buf16((2 * D_CODES + 1) * 2), this.bl_tree = new utils$5.Buf16((2 * BL_CODES + 1) * 2), zero(this.dyn_ltree), zero(this.dyn_dtree), zero(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new utils$5.Buf16(MAX_BITS + 1), this.heap = new utils$5.Buf16(2 * L_CODES + 1), zero(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new utils$5.Buf16(2 * L_CODES + 1), zero(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
}
function deflateResetKeep(n) {
  var d;
  return !n || !n.state ? err(n, Z_STREAM_ERROR$1) : (n.total_in = n.total_out = 0, n.data_type = Z_UNKNOWN, d = n.state, d.pending = 0, d.pending_out = 0, d.wrap < 0 && (d.wrap = -d.wrap), d.status = d.wrap ? INIT_STATE : BUSY_STATE, n.adler = d.wrap === 2 ? 0 : 1, d.last_flush = Z_NO_FLUSH$1, trees._tr_init(d), Z_OK$2);
}
function deflateReset(n) {
  var d = deflateResetKeep(n);
  return d === Z_OK$2 && lm_init(n.state), d;
}
function deflateSetHeader(n, d) {
  return !n || !n.state || n.state.wrap !== 2 ? Z_STREAM_ERROR$1 : (n.state.gzhead = d, Z_OK$2);
}
function deflateInit2(n, d, g, v, C, M) {
  if (!n)
    return Z_STREAM_ERROR$1;
  var $ = 1;
  if (d === Z_DEFAULT_COMPRESSION$1 && (d = 6), v < 0 ? ($ = 0, v = -v) : v > 15 && ($ = 2, v -= 16), C < 1 || C > MAX_MEM_LEVEL || g !== Z_DEFLATED$2 || v < 8 || v > 15 || d < 0 || d > 9 || M < 0 || M > Z_FIXED)
    return err(n, Z_STREAM_ERROR$1);
  v === 8 && (v = 9);
  var N = new DeflateState();
  return n.state = N, N.strm = n, N.wrap = $, N.gzhead = null, N.w_bits = v, N.w_size = 1 << N.w_bits, N.w_mask = N.w_size - 1, N.hash_bits = C + 7, N.hash_size = 1 << N.hash_bits, N.hash_mask = N.hash_size - 1, N.hash_shift = ~~((N.hash_bits + MIN_MATCH - 1) / MIN_MATCH), N.window = new utils$5.Buf8(N.w_size * 2), N.head = new utils$5.Buf16(N.hash_size), N.prev = new utils$5.Buf16(N.w_size), N.lit_bufsize = 1 << C + 6, N.pending_buf_size = N.lit_bufsize * 4, N.pending_buf = new utils$5.Buf8(N.pending_buf_size), N.d_buf = 1 * N.lit_bufsize, N.l_buf = (1 + 2) * N.lit_bufsize, N.level = d, N.strategy = M, N.method = g, deflateReset(n);
}
function deflateInit(n, d) {
  return deflateInit2(n, d, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);
}
function deflate$2(n, d) {
  var g, v, C, M;
  if (!n || !n.state || d > Z_BLOCK$1 || d < 0)
    return n ? err(n, Z_STREAM_ERROR$1) : Z_STREAM_ERROR$1;
  if (v = n.state, !n.output || !n.input && n.avail_in !== 0 || v.status === FINISH_STATE && d !== Z_FINISH$2)
    return err(n, n.avail_out === 0 ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$1);
  if (v.strm = n, g = v.last_flush, v.last_flush = d, v.status === INIT_STATE)
    if (v.wrap === 2)
      n.adler = 0, put_byte(v, 31), put_byte(v, 139), put_byte(v, 8), v.gzhead ? (put_byte(
        v,
        (v.gzhead.text ? 1 : 0) + (v.gzhead.hcrc ? 2 : 0) + (v.gzhead.extra ? 4 : 0) + (v.gzhead.name ? 8 : 0) + (v.gzhead.comment ? 16 : 0)
      ), put_byte(v, v.gzhead.time & 255), put_byte(v, v.gzhead.time >> 8 & 255), put_byte(v, v.gzhead.time >> 16 & 255), put_byte(v, v.gzhead.time >> 24 & 255), put_byte(v, v.level === 9 ? 2 : v.strategy >= Z_HUFFMAN_ONLY || v.level < 2 ? 4 : 0), put_byte(v, v.gzhead.os & 255), v.gzhead.extra && v.gzhead.extra.length && (put_byte(v, v.gzhead.extra.length & 255), put_byte(v, v.gzhead.extra.length >> 8 & 255)), v.gzhead.hcrc && (n.adler = crc32$1(n.adler, v.pending_buf, v.pending, 0)), v.gzindex = 0, v.status = EXTRA_STATE) : (put_byte(v, 0), put_byte(v, 0), put_byte(v, 0), put_byte(v, 0), put_byte(v, 0), put_byte(v, v.level === 9 ? 2 : v.strategy >= Z_HUFFMAN_ONLY || v.level < 2 ? 4 : 0), put_byte(v, OS_CODE), v.status = BUSY_STATE);
    else {
      var $ = Z_DEFLATED$2 + (v.w_bits - 8 << 4) << 8, N = -1;
      v.strategy >= Z_HUFFMAN_ONLY || v.level < 2 ? N = 0 : v.level < 6 ? N = 1 : v.level === 6 ? N = 2 : N = 3, $ |= N << 6, v.strstart !== 0 && ($ |= PRESET_DICT), $ += 31 - $ % 31, v.status = BUSY_STATE, putShortMSB(v, $), v.strstart !== 0 && (putShortMSB(v, n.adler >>> 16), putShortMSB(v, n.adler & 65535)), n.adler = 1;
    }
  if (v.status === EXTRA_STATE)
    if (v.gzhead.extra) {
      for (C = v.pending; v.gzindex < (v.gzhead.extra.length & 65535) && !(v.pending === v.pending_buf_size && (v.gzhead.hcrc && v.pending > C && (n.adler = crc32$1(n.adler, v.pending_buf, v.pending - C, C)), flush_pending(n), C = v.pending, v.pending === v.pending_buf_size)); )
        put_byte(v, v.gzhead.extra[v.gzindex] & 255), v.gzindex++;
      v.gzhead.hcrc && v.pending > C && (n.adler = crc32$1(n.adler, v.pending_buf, v.pending - C, C)), v.gzindex === v.gzhead.extra.length && (v.gzindex = 0, v.status = NAME_STATE);
    } else
      v.status = NAME_STATE;
  if (v.status === NAME_STATE)
    if (v.gzhead.name) {
      C = v.pending;
      do {
        if (v.pending === v.pending_buf_size && (v.gzhead.hcrc && v.pending > C && (n.adler = crc32$1(n.adler, v.pending_buf, v.pending - C, C)), flush_pending(n), C = v.pending, v.pending === v.pending_buf_size)) {
          M = 1;
          break;
        }
        v.gzindex < v.gzhead.name.length ? M = v.gzhead.name.charCodeAt(v.gzindex++) & 255 : M = 0, put_byte(v, M);
      } while (M !== 0);
      v.gzhead.hcrc && v.pending > C && (n.adler = crc32$1(n.adler, v.pending_buf, v.pending - C, C)), M === 0 && (v.gzindex = 0, v.status = COMMENT_STATE);
    } else
      v.status = COMMENT_STATE;
  if (v.status === COMMENT_STATE)
    if (v.gzhead.comment) {
      C = v.pending;
      do {
        if (v.pending === v.pending_buf_size && (v.gzhead.hcrc && v.pending > C && (n.adler = crc32$1(n.adler, v.pending_buf, v.pending - C, C)), flush_pending(n), C = v.pending, v.pending === v.pending_buf_size)) {
          M = 1;
          break;
        }
        v.gzindex < v.gzhead.comment.length ? M = v.gzhead.comment.charCodeAt(v.gzindex++) & 255 : M = 0, put_byte(v, M);
      } while (M !== 0);
      v.gzhead.hcrc && v.pending > C && (n.adler = crc32$1(n.adler, v.pending_buf, v.pending - C, C)), M === 0 && (v.status = HCRC_STATE);
    } else
      v.status = HCRC_STATE;
  if (v.status === HCRC_STATE && (v.gzhead.hcrc ? (v.pending + 2 > v.pending_buf_size && flush_pending(n), v.pending + 2 <= v.pending_buf_size && (put_byte(v, n.adler & 255), put_byte(v, n.adler >> 8 & 255), n.adler = 0, v.status = BUSY_STATE)) : v.status = BUSY_STATE), v.pending !== 0) {
    if (flush_pending(n), n.avail_out === 0)
      return v.last_flush = -1, Z_OK$2;
  } else if (n.avail_in === 0 && rank(d) <= rank(g) && d !== Z_FINISH$2)
    return err(n, Z_BUF_ERROR$1);
  if (v.status === FINISH_STATE && n.avail_in !== 0)
    return err(n, Z_BUF_ERROR$1);
  if (n.avail_in !== 0 || v.lookahead !== 0 || d !== Z_NO_FLUSH$1 && v.status !== FINISH_STATE) {
    var et = v.strategy === Z_HUFFMAN_ONLY ? deflate_huff(v, d) : v.strategy === Z_RLE ? deflate_rle(v, d) : configuration_table[v.level].func(v, d);
    if ((et === BS_FINISH_STARTED || et === BS_FINISH_DONE) && (v.status = FINISH_STATE), et === BS_NEED_MORE || et === BS_FINISH_STARTED)
      return n.avail_out === 0 && (v.last_flush = -1), Z_OK$2;
    if (et === BS_BLOCK_DONE && (d === Z_PARTIAL_FLUSH ? trees._tr_align(v) : d !== Z_BLOCK$1 && (trees._tr_stored_block(v, 0, 0, !1), d === Z_FULL_FLUSH && (zero(v.head), v.lookahead === 0 && (v.strstart = 0, v.block_start = 0, v.insert = 0))), flush_pending(n), n.avail_out === 0))
      return v.last_flush = -1, Z_OK$2;
  }
  return d !== Z_FINISH$2 ? Z_OK$2 : v.wrap <= 0 ? Z_STREAM_END$2 : (v.wrap === 2 ? (put_byte(v, n.adler & 255), put_byte(v, n.adler >> 8 & 255), put_byte(v, n.adler >> 16 & 255), put_byte(v, n.adler >> 24 & 255), put_byte(v, n.total_in & 255), put_byte(v, n.total_in >> 8 & 255), put_byte(v, n.total_in >> 16 & 255), put_byte(v, n.total_in >> 24 & 255)) : (putShortMSB(v, n.adler >>> 16), putShortMSB(v, n.adler & 65535)), flush_pending(n), v.wrap > 0 && (v.wrap = -v.wrap), v.pending !== 0 ? Z_OK$2 : Z_STREAM_END$2);
}
function deflateEnd(n) {
  var d;
  return !n || !n.state ? Z_STREAM_ERROR$1 : (d = n.state.status, d !== INIT_STATE && d !== EXTRA_STATE && d !== NAME_STATE && d !== COMMENT_STATE && d !== HCRC_STATE && d !== BUSY_STATE && d !== FINISH_STATE ? err(n, Z_STREAM_ERROR$1) : (n.state = null, d === BUSY_STATE ? err(n, Z_DATA_ERROR$1) : Z_OK$2));
}
function deflateSetDictionary(n, d) {
  var g = d.length, v, C, M, $, N, et, E, X;
  if (!n || !n.state || (v = n.state, $ = v.wrap, $ === 2 || $ === 1 && v.status !== INIT_STATE || v.lookahead))
    return Z_STREAM_ERROR$1;
  for ($ === 1 && (n.adler = adler32$1(n.adler, d, g, 0)), v.wrap = 0, g >= v.w_size && ($ === 0 && (zero(v.head), v.strstart = 0, v.block_start = 0, v.insert = 0), X = new utils$5.Buf8(v.w_size), utils$5.arraySet(X, d, g - v.w_size, v.w_size, 0), d = X, g = v.w_size), N = n.avail_in, et = n.next_in, E = n.input, n.avail_in = g, n.next_in = 0, n.input = d, fill_window(v); v.lookahead >= MIN_MATCH; ) {
    C = v.strstart, M = v.lookahead - (MIN_MATCH - 1);
    do
      v.ins_h = (v.ins_h << v.hash_shift ^ v.window[C + MIN_MATCH - 1]) & v.hash_mask, v.prev[C & v.w_mask] = v.head[v.ins_h], v.head[v.ins_h] = C, C++;
    while (--M);
    v.strstart = C, v.lookahead = MIN_MATCH - 1, fill_window(v);
  }
  return v.strstart += v.lookahead, v.block_start = v.strstart, v.insert = v.lookahead, v.lookahead = 0, v.match_length = v.prev_length = MIN_MATCH - 1, v.match_available = 0, n.next_in = et, n.input = E, n.avail_in = N, v.wrap = $, Z_OK$2;
}
deflate$3.deflateInit = deflateInit;
deflate$3.deflateInit2 = deflateInit2;
deflate$3.deflateReset = deflateReset;
deflate$3.deflateResetKeep = deflateResetKeep;
deflate$3.deflateSetHeader = deflateSetHeader;
deflate$3.deflate = deflate$2;
deflate$3.deflateEnd = deflateEnd;
deflate$3.deflateSetDictionary = deflateSetDictionary;
deflate$3.deflateInfo = "pako deflate (from Nodeca project)";
var strings$2 = {}, utils$4 = common, STR_APPLY_OK = !0, STR_APPLY_UIA_OK = !0;
try {
  String.fromCharCode.apply(null, [0]);
} catch (n) {
  STR_APPLY_OK = !1;
}
try {
  String.fromCharCode.apply(null, new Uint8Array(1));
} catch (n) {
  STR_APPLY_UIA_OK = !1;
}
var _utf8len = new utils$4.Buf8(256);
for (var q = 0; q < 256; q++)
  _utf8len[q] = q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1;
_utf8len[254] = _utf8len[254] = 1;
strings$2.string2buf = function(n) {
  var d, g, v, C, M, $ = n.length, N = 0;
  for (C = 0; C < $; C++)
    g = n.charCodeAt(C), (g & 64512) === 55296 && C + 1 < $ && (v = n.charCodeAt(C + 1), (v & 64512) === 56320 && (g = 65536 + (g - 55296 << 10) + (v - 56320), C++)), N += g < 128 ? 1 : g < 2048 ? 2 : g < 65536 ? 3 : 4;
  for (d = new utils$4.Buf8(N), M = 0, C = 0; M < N; C++)
    g = n.charCodeAt(C), (g & 64512) === 55296 && C + 1 < $ && (v = n.charCodeAt(C + 1), (v & 64512) === 56320 && (g = 65536 + (g - 55296 << 10) + (v - 56320), C++)), g < 128 ? d[M++] = g : g < 2048 ? (d[M++] = 192 | g >>> 6, d[M++] = 128 | g & 63) : g < 65536 ? (d[M++] = 224 | g >>> 12, d[M++] = 128 | g >>> 6 & 63, d[M++] = 128 | g & 63) : (d[M++] = 240 | g >>> 18, d[M++] = 128 | g >>> 12 & 63, d[M++] = 128 | g >>> 6 & 63, d[M++] = 128 | g & 63);
  return d;
};
function buf2binstring(n, d) {
  if (d < 65534 && (n.subarray && STR_APPLY_UIA_OK || !n.subarray && STR_APPLY_OK))
    return String.fromCharCode.apply(null, utils$4.shrinkBuf(n, d));
  for (var g = "", v = 0; v < d; v++)
    g += String.fromCharCode(n[v]);
  return g;
}
strings$2.buf2binstring = function(n) {
  return buf2binstring(n, n.length);
};
strings$2.binstring2buf = function(n) {
  for (var d = new utils$4.Buf8(n.length), g = 0, v = d.length; g < v; g++)
    d[g] = n.charCodeAt(g);
  return d;
};
strings$2.buf2string = function(n, d) {
  var g, v, C, M, $ = d || n.length, N = new Array($ * 2);
  for (v = 0, g = 0; g < $; ) {
    if (C = n[g++], C < 128) {
      N[v++] = C;
      continue;
    }
    if (M = _utf8len[C], M > 4) {
      N[v++] = 65533, g += M - 1;
      continue;
    }
    for (C &= M === 2 ? 31 : M === 3 ? 15 : 7; M > 1 && g < $; )
      C = C << 6 | n[g++] & 63, M--;
    if (M > 1) {
      N[v++] = 65533;
      continue;
    }
    C < 65536 ? N[v++] = C : (C -= 65536, N[v++] = 55296 | C >> 10 & 1023, N[v++] = 56320 | C & 1023);
  }
  return buf2binstring(N, v);
};
strings$2.utf8border = function(n, d) {
  var g;
  for (d = d || n.length, d > n.length && (d = n.length), g = d - 1; g >= 0 && (n[g] & 192) === 128; )
    g--;
  return g < 0 || g === 0 ? d : g + _utf8len[n[g]] > d ? g : d;
};
function ZStream$2() {
  this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
}
var zstream = ZStream$2, zlib_deflate = deflate$3, utils$3 = common, strings$1 = strings$2, msg$1 = messages, ZStream$1 = zstream, toString$1 = Object.prototype.toString, Z_NO_FLUSH = 0, Z_FINISH$1 = 4, Z_OK$1 = 0, Z_STREAM_END$1 = 1, Z_SYNC_FLUSH = 2, Z_DEFAULT_COMPRESSION = -1, Z_DEFAULT_STRATEGY = 0, Z_DEFLATED$1 = 8;
function Deflate(n) {
  if (!(this instanceof Deflate))
    return new Deflate(n);
  this.options = utils$3.assign({
    level: Z_DEFAULT_COMPRESSION,
    method: Z_DEFLATED$1,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: Z_DEFAULT_STRATEGY,
    to: ""
  }, n || {});
  var d = this.options;
  d.raw && d.windowBits > 0 ? d.windowBits = -d.windowBits : d.gzip && d.windowBits > 0 && d.windowBits < 16 && (d.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new ZStream$1(), this.strm.avail_out = 0;
  var g = zlib_deflate.deflateInit2(
    this.strm,
    d.level,
    d.method,
    d.windowBits,
    d.memLevel,
    d.strategy
  );
  if (g !== Z_OK$1)
    throw new Error(msg$1[g]);
  if (d.header && zlib_deflate.deflateSetHeader(this.strm, d.header), d.dictionary) {
    var v;
    if (typeof d.dictionary == "string" ? v = strings$1.string2buf(d.dictionary) : toString$1.call(d.dictionary) === "[object ArrayBuffer]" ? v = new Uint8Array(d.dictionary) : v = d.dictionary, g = zlib_deflate.deflateSetDictionary(this.strm, v), g !== Z_OK$1)
      throw new Error(msg$1[g]);
    this._dict_set = !0;
  }
}
Deflate.prototype.push = function(n, d) {
  var g = this.strm, v = this.options.chunkSize, C, M;
  if (this.ended)
    return !1;
  M = d === ~~d ? d : d === !0 ? Z_FINISH$1 : Z_NO_FLUSH, typeof n == "string" ? g.input = strings$1.string2buf(n) : toString$1.call(n) === "[object ArrayBuffer]" ? g.input = new Uint8Array(n) : g.input = n, g.next_in = 0, g.avail_in = g.input.length;
  do {
    if (g.avail_out === 0 && (g.output = new utils$3.Buf8(v), g.next_out = 0, g.avail_out = v), C = zlib_deflate.deflate(g, M), C !== Z_STREAM_END$1 && C !== Z_OK$1)
      return this.onEnd(C), this.ended = !0, !1;
    (g.avail_out === 0 || g.avail_in === 0 && (M === Z_FINISH$1 || M === Z_SYNC_FLUSH)) && (this.options.to === "string" ? this.onData(strings$1.buf2binstring(utils$3.shrinkBuf(g.output, g.next_out))) : this.onData(utils$3.shrinkBuf(g.output, g.next_out)));
  } while ((g.avail_in > 0 || g.avail_out === 0) && C !== Z_STREAM_END$1);
  return M === Z_FINISH$1 ? (C = zlib_deflate.deflateEnd(this.strm), this.onEnd(C), this.ended = !0, C === Z_OK$1) : (M === Z_SYNC_FLUSH && (this.onEnd(Z_OK$1), g.avail_out = 0), !0);
};
Deflate.prototype.onData = function(n) {
  this.chunks.push(n);
};
Deflate.prototype.onEnd = function(n) {
  n === Z_OK$1 && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = utils$3.flattenChunks(this.chunks)), this.chunks = [], this.err = n, this.msg = this.strm.msg;
};
function deflate$1(n, d) {
  var g = new Deflate(d);
  if (g.push(n, !0), g.err)
    throw g.msg || msg$1[g.err];
  return g.result;
}
function deflateRaw(n, d) {
  return d = d || {}, d.raw = !0, deflate$1(n, d);
}
function gzip(n, d) {
  return d = d || {}, d.gzip = !0, deflate$1(n, d);
}
deflate$4.Deflate = Deflate;
deflate$4.deflate = deflate$1;
deflate$4.deflateRaw = deflateRaw;
deflate$4.gzip = gzip;
var inflate$4 = {}, inflate$3 = {}, BAD$1 = 30, TYPE$1 = 12, inffast = function n(d, g) {
  var v, C, M, $, N, et, E, X, Pt, wt, gt, Ot, qt, de, Jt, De, Be, he, Rt, Pe, ke, ce, Ne, ii, ge;
  v = d.state, C = d.next_in, ii = d.input, M = C + (d.avail_in - 5), $ = d.next_out, ge = d.output, N = $ - (g - d.avail_out), et = $ + (d.avail_out - 257), E = v.dmax, X = v.wsize, Pt = v.whave, wt = v.wnext, gt = v.window, Ot = v.hold, qt = v.bits, de = v.lencode, Jt = v.distcode, De = (1 << v.lenbits) - 1, Be = (1 << v.distbits) - 1;
  t:
    do {
      qt < 15 && (Ot += ii[C++] << qt, qt += 8, Ot += ii[C++] << qt, qt += 8), he = de[Ot & De];
      e:
        for (; ; ) {
          if (Rt = he >>> 24, Ot >>>= Rt, qt -= Rt, Rt = he >>> 16 & 255, Rt === 0)
            ge[$++] = he & 65535;
          else if (Rt & 16) {
            Pe = he & 65535, Rt &= 15, Rt && (qt < Rt && (Ot += ii[C++] << qt, qt += 8), Pe += Ot & (1 << Rt) - 1, Ot >>>= Rt, qt -= Rt), qt < 15 && (Ot += ii[C++] << qt, qt += 8, Ot += ii[C++] << qt, qt += 8), he = Jt[Ot & Be];
            i:
              for (; ; ) {
                if (Rt = he >>> 24, Ot >>>= Rt, qt -= Rt, Rt = he >>> 16 & 255, Rt & 16) {
                  if (ke = he & 65535, Rt &= 15, qt < Rt && (Ot += ii[C++] << qt, qt += 8, qt < Rt && (Ot += ii[C++] << qt, qt += 8)), ke += Ot & (1 << Rt) - 1, ke > E) {
                    d.msg = "invalid distance too far back", v.mode = BAD$1;
                    break t;
                  }
                  if (Ot >>>= Rt, qt -= Rt, Rt = $ - N, ke > Rt) {
                    if (Rt = ke - Rt, Rt > Pt && v.sane) {
                      d.msg = "invalid distance too far back", v.mode = BAD$1;
                      break t;
                    }
                    if (ce = 0, Ne = gt, wt === 0) {
                      if (ce += X - Rt, Rt < Pe) {
                        Pe -= Rt;
                        do
                          ge[$++] = gt[ce++];
                        while (--Rt);
                        ce = $ - ke, Ne = ge;
                      }
                    } else if (wt < Rt) {
                      if (ce += X + wt - Rt, Rt -= wt, Rt < Pe) {
                        Pe -= Rt;
                        do
                          ge[$++] = gt[ce++];
                        while (--Rt);
                        if (ce = 0, wt < Pe) {
                          Rt = wt, Pe -= Rt;
                          do
                            ge[$++] = gt[ce++];
                          while (--Rt);
                          ce = $ - ke, Ne = ge;
                        }
                      }
                    } else if (ce += wt - Rt, Rt < Pe) {
                      Pe -= Rt;
                      do
                        ge[$++] = gt[ce++];
                      while (--Rt);
                      ce = $ - ke, Ne = ge;
                    }
                    for (; Pe > 2; )
                      ge[$++] = Ne[ce++], ge[$++] = Ne[ce++], ge[$++] = Ne[ce++], Pe -= 3;
                    Pe && (ge[$++] = Ne[ce++], Pe > 1 && (ge[$++] = Ne[ce++]));
                  } else {
                    ce = $ - ke;
                    do
                      ge[$++] = ge[ce++], ge[$++] = ge[ce++], ge[$++] = ge[ce++], Pe -= 3;
                    while (Pe > 2);
                    Pe && (ge[$++] = ge[ce++], Pe > 1 && (ge[$++] = ge[ce++]));
                  }
                } else if (Rt & 64) {
                  d.msg = "invalid distance code", v.mode = BAD$1;
                  break t;
                } else {
                  he = Jt[(he & 65535) + (Ot & (1 << Rt) - 1)];
                  continue i;
                }
                break;
              }
          } else if (Rt & 64)
            if (Rt & 32) {
              v.mode = TYPE$1;
              break t;
            } else {
              d.msg = "invalid literal/length code", v.mode = BAD$1;
              break t;
            }
          else {
            he = de[(he & 65535) + (Ot & (1 << Rt) - 1)];
            continue e;
          }
          break;
        }
    } while (C < M && $ < et);
  Pe = qt >> 3, C -= Pe, qt -= Pe << 3, Ot &= (1 << qt) - 1, d.next_in = C, d.next_out = $, d.avail_in = C < M ? 5 + (M - C) : 5 - (C - M), d.avail_out = $ < et ? 257 + (et - $) : 257 - ($ - et), v.hold = Ot, v.bits = qt;
}, utils$2 = common, MAXBITS = 15, ENOUGH_LENS$1 = 852, ENOUGH_DISTS$1 = 592, CODES$1 = 0, LENS$1 = 1, DISTS$1 = 2, lbase = [
  /* Length codes 257..285 base */
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  13,
  15,
  17,
  19,
  23,
  27,
  31,
  35,
  43,
  51,
  59,
  67,
  83,
  99,
  115,
  131,
  163,
  195,
  227,
  258,
  0,
  0
], lext = [
  /* Length codes 257..285 extra */
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  17,
  17,
  17,
  17,
  18,
  18,
  18,
  18,
  19,
  19,
  19,
  19,
  20,
  20,
  20,
  20,
  21,
  21,
  21,
  21,
  16,
  72,
  78
], dbase = [
  /* Distance codes 0..29 base */
  1,
  2,
  3,
  4,
  5,
  7,
  9,
  13,
  17,
  25,
  33,
  49,
  65,
  97,
  129,
  193,
  257,
  385,
  513,
  769,
  1025,
  1537,
  2049,
  3073,
  4097,
  6145,
  8193,
  12289,
  16385,
  24577,
  0,
  0
], dext = [
  /* Distance codes 0..29 extra */
  16,
  16,
  16,
  16,
  17,
  17,
  18,
  18,
  19,
  19,
  20,
  20,
  21,
  21,
  22,
  22,
  23,
  23,
  24,
  24,
  25,
  25,
  26,
  26,
  27,
  27,
  28,
  28,
  29,
  29,
  64,
  64
], inftrees = function n(d, g, v, C, M, $, N, et) {
  var E = et.bits, X = 0, Pt = 0, wt = 0, gt = 0, Ot = 0, qt = 0, de = 0, Jt = 0, De = 0, Be = 0, he, Rt, Pe, ke, ce, Ne = null, ii = 0, ge, Xi = new utils$2.Buf16(MAXBITS + 1), rn = new utils$2.Buf16(MAXBITS + 1), nn = null, Un = 0, Gn, an, sn;
  for (X = 0; X <= MAXBITS; X++)
    Xi[X] = 0;
  for (Pt = 0; Pt < C; Pt++)
    Xi[g[v + Pt]]++;
  for (Ot = E, gt = MAXBITS; gt >= 1 && Xi[gt] === 0; gt--)
    ;
  if (Ot > gt && (Ot = gt), gt === 0)
    return M[$++] = 1 << 24 | 64 << 16 | 0, M[$++] = 1 << 24 | 64 << 16 | 0, et.bits = 1, 0;
  for (wt = 1; wt < gt && Xi[wt] === 0; wt++)
    ;
  for (Ot < wt && (Ot = wt), Jt = 1, X = 1; X <= MAXBITS; X++)
    if (Jt <<= 1, Jt -= Xi[X], Jt < 0)
      return -1;
  if (Jt > 0 && (d === CODES$1 || gt !== 1))
    return -1;
  for (rn[1] = 0, X = 1; X < MAXBITS; X++)
    rn[X + 1] = rn[X] + Xi[X];
  for (Pt = 0; Pt < C; Pt++)
    g[v + Pt] !== 0 && (N[rn[g[v + Pt]]++] = Pt);
  if (d === CODES$1 ? (Ne = nn = N, ge = 19) : d === LENS$1 ? (Ne = lbase, ii -= 257, nn = lext, Un -= 257, ge = 256) : (Ne = dbase, nn = dext, ge = -1), Be = 0, Pt = 0, X = wt, ce = $, qt = Ot, de = 0, Pe = -1, De = 1 << Ot, ke = De - 1, d === LENS$1 && De > ENOUGH_LENS$1 || d === DISTS$1 && De > ENOUGH_DISTS$1)
    return 1;
  for (; ; ) {
    Gn = X - de, N[Pt] < ge ? (an = 0, sn = N[Pt]) : N[Pt] > ge ? (an = nn[Un + N[Pt]], sn = Ne[ii + N[Pt]]) : (an = 32 + 64, sn = 0), he = 1 << X - de, Rt = 1 << qt, wt = Rt;
    do
      Rt -= he, M[ce + (Be >> de) + Rt] = Gn << 24 | an << 16 | sn | 0;
    while (Rt !== 0);
    for (he = 1 << X - 1; Be & he; )
      he >>= 1;
    if (he !== 0 ? (Be &= he - 1, Be += he) : Be = 0, Pt++, --Xi[X] === 0) {
      if (X === gt)
        break;
      X = g[v + N[Pt]];
    }
    if (X > Ot && (Be & ke) !== Pe) {
      for (de === 0 && (de = Ot), ce += wt, qt = X - de, Jt = 1 << qt; qt + de < gt && (Jt -= Xi[qt + de], !(Jt <= 0)); )
        qt++, Jt <<= 1;
      if (De += 1 << qt, d === LENS$1 && De > ENOUGH_LENS$1 || d === DISTS$1 && De > ENOUGH_DISTS$1)
        return 1;
      Pe = Be & ke, M[Pe] = Ot << 24 | qt << 16 | ce - $ | 0;
    }
  }
  return Be !== 0 && (M[ce + Be] = X - de << 24 | 64 << 16 | 0), et.bits = Ot, 0;
}, utils$1 = common, adler32 = adler32_1, crc32 = crc32_1, inflate_fast = inffast, inflate_table = inftrees, CODES = 0, LENS = 1, DISTS = 2, Z_FINISH = 4, Z_BLOCK = 5, Z_TREES = 6, Z_OK = 0, Z_STREAM_END = 1, Z_NEED_DICT = 2, Z_STREAM_ERROR = -2, Z_DATA_ERROR = -3, Z_MEM_ERROR = -4, Z_BUF_ERROR = -5, Z_DEFLATED = 8, HEAD = 1, FLAGS = 2, TIME = 3, OS = 4, EXLEN = 5, EXTRA = 6, NAME = 7, COMMENT = 8, HCRC = 9, DICTID = 10, DICT = 11, TYPE = 12, TYPEDO = 13, STORED = 14, COPY_ = 15, COPY = 16, TABLE = 17, LENLENS = 18, CODELENS = 19, LEN_ = 20, LEN = 21, LENEXT = 22, DIST = 23, DISTEXT = 24, MATCH = 25, LIT = 26, CHECK = 27, LENGTH = 28, DONE = 29, BAD = 30, MEM = 31, SYNC = 32, ENOUGH_LENS = 852, ENOUGH_DISTS = 592, MAX_WBITS = 15, DEF_WBITS = MAX_WBITS;
function zswap32(n) {
  return (n >>> 24 & 255) + (n >>> 8 & 65280) + ((n & 65280) << 8) + ((n & 255) << 24);
}
function InflateState() {
  this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new utils$1.Buf16(320), this.work = new utils$1.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
}
function inflateResetKeep(n) {
  var d;
  return !n || !n.state ? Z_STREAM_ERROR : (d = n.state, n.total_in = n.total_out = d.total = 0, n.msg = "", d.wrap && (n.adler = d.wrap & 1), d.mode = HEAD, d.last = 0, d.havedict = 0, d.dmax = 32768, d.head = null, d.hold = 0, d.bits = 0, d.lencode = d.lendyn = new utils$1.Buf32(ENOUGH_LENS), d.distcode = d.distdyn = new utils$1.Buf32(ENOUGH_DISTS), d.sane = 1, d.back = -1, Z_OK);
}
function inflateReset(n) {
  var d;
  return !n || !n.state ? Z_STREAM_ERROR : (d = n.state, d.wsize = 0, d.whave = 0, d.wnext = 0, inflateResetKeep(n));
}
function inflateReset2(n, d) {
  var g, v;
  return !n || !n.state || (v = n.state, d < 0 ? (g = 0, d = -d) : (g = (d >> 4) + 1, d < 48 && (d &= 15)), d && (d < 8 || d > 15)) ? Z_STREAM_ERROR : (v.window !== null && v.wbits !== d && (v.window = null), v.wrap = g, v.wbits = d, inflateReset(n));
}
function inflateInit2(n, d) {
  var g, v;
  return n ? (v = new InflateState(), n.state = v, v.window = null, g = inflateReset2(n, d), g !== Z_OK && (n.state = null), g) : Z_STREAM_ERROR;
}
function inflateInit(n) {
  return inflateInit2(n, DEF_WBITS);
}
var virgin = !0, lenfix, distfix;
function fixedtables(n) {
  if (virgin) {
    var d;
    for (lenfix = new utils$1.Buf32(512), distfix = new utils$1.Buf32(32), d = 0; d < 144; )
      n.lens[d++] = 8;
    for (; d < 256; )
      n.lens[d++] = 9;
    for (; d < 280; )
      n.lens[d++] = 7;
    for (; d < 288; )
      n.lens[d++] = 8;
    for (inflate_table(LENS, n.lens, 0, 288, lenfix, 0, n.work, { bits: 9 }), d = 0; d < 32; )
      n.lens[d++] = 5;
    inflate_table(DISTS, n.lens, 0, 32, distfix, 0, n.work, { bits: 5 }), virgin = !1;
  }
  n.lencode = lenfix, n.lenbits = 9, n.distcode = distfix, n.distbits = 5;
}
function updatewindow(n, d, g, v) {
  var C, M = n.state;
  return M.window === null && (M.wsize = 1 << M.wbits, M.wnext = 0, M.whave = 0, M.window = new utils$1.Buf8(M.wsize)), v >= M.wsize ? (utils$1.arraySet(M.window, d, g - M.wsize, M.wsize, 0), M.wnext = 0, M.whave = M.wsize) : (C = M.wsize - M.wnext, C > v && (C = v), utils$1.arraySet(M.window, d, g - v, C, M.wnext), v -= C, v ? (utils$1.arraySet(M.window, d, g - v, v, 0), M.wnext = v, M.whave = M.wsize) : (M.wnext += C, M.wnext === M.wsize && (M.wnext = 0), M.whave < M.wsize && (M.whave += C))), 0;
}
function inflate$2(n, d) {
  var g, v, C, M, $, N, et, E, X, Pt, wt, gt, Ot, qt, de = 0, Jt, De, Be, he, Rt, Pe, ke, ce, Ne = new utils$1.Buf8(4), ii, ge, Xi = (
    /* permutation of code lengths */
    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
  );
  if (!n || !n.state || !n.output || !n.input && n.avail_in !== 0)
    return Z_STREAM_ERROR;
  g = n.state, g.mode === TYPE && (g.mode = TYPEDO), $ = n.next_out, C = n.output, et = n.avail_out, M = n.next_in, v = n.input, N = n.avail_in, E = g.hold, X = g.bits, Pt = N, wt = et, ce = Z_OK;
  t:
    for (; ; )
      switch (g.mode) {
        case HEAD:
          if (g.wrap === 0) {
            g.mode = TYPEDO;
            break;
          }
          for (; X < 16; ) {
            if (N === 0)
              break t;
            N--, E += v[M++] << X, X += 8;
          }
          if (g.wrap & 2 && E === 35615) {
            g.check = 0, Ne[0] = E & 255, Ne[1] = E >>> 8 & 255, g.check = crc32(g.check, Ne, 2, 0), E = 0, X = 0, g.mode = FLAGS;
            break;
          }
          if (g.flags = 0, g.head && (g.head.done = !1), !(g.wrap & 1) || /* check if zlib header allowed */
          (((E & 255) << 8) + (E >> 8)) % 31) {
            n.msg = "incorrect header check", g.mode = BAD;
            break;
          }
          if ((E & 15) !== Z_DEFLATED) {
            n.msg = "unknown compression method", g.mode = BAD;
            break;
          }
          if (E >>>= 4, X -= 4, ke = (E & 15) + 8, g.wbits === 0)
            g.wbits = ke;
          else if (ke > g.wbits) {
            n.msg = "invalid window size", g.mode = BAD;
            break;
          }
          g.dmax = 1 << ke, n.adler = g.check = 1, g.mode = E & 512 ? DICTID : TYPE, E = 0, X = 0;
          break;
        case FLAGS:
          for (; X < 16; ) {
            if (N === 0)
              break t;
            N--, E += v[M++] << X, X += 8;
          }
          if (g.flags = E, (g.flags & 255) !== Z_DEFLATED) {
            n.msg = "unknown compression method", g.mode = BAD;
            break;
          }
          if (g.flags & 57344) {
            n.msg = "unknown header flags set", g.mode = BAD;
            break;
          }
          g.head && (g.head.text = E >> 8 & 1), g.flags & 512 && (Ne[0] = E & 255, Ne[1] = E >>> 8 & 255, g.check = crc32(g.check, Ne, 2, 0)), E = 0, X = 0, g.mode = TIME;
        case TIME:
          for (; X < 32; ) {
            if (N === 0)
              break t;
            N--, E += v[M++] << X, X += 8;
          }
          g.head && (g.head.time = E), g.flags & 512 && (Ne[0] = E & 255, Ne[1] = E >>> 8 & 255, Ne[2] = E >>> 16 & 255, Ne[3] = E >>> 24 & 255, g.check = crc32(g.check, Ne, 4, 0)), E = 0, X = 0, g.mode = OS;
        case OS:
          for (; X < 16; ) {
            if (N === 0)
              break t;
            N--, E += v[M++] << X, X += 8;
          }
          g.head && (g.head.xflags = E & 255, g.head.os = E >> 8), g.flags & 512 && (Ne[0] = E & 255, Ne[1] = E >>> 8 & 255, g.check = crc32(g.check, Ne, 2, 0)), E = 0, X = 0, g.mode = EXLEN;
        case EXLEN:
          if (g.flags & 1024) {
            for (; X < 16; ) {
              if (N === 0)
                break t;
              N--, E += v[M++] << X, X += 8;
            }
            g.length = E, g.head && (g.head.extra_len = E), g.flags & 512 && (Ne[0] = E & 255, Ne[1] = E >>> 8 & 255, g.check = crc32(g.check, Ne, 2, 0)), E = 0, X = 0;
          } else
            g.head && (g.head.extra = null);
          g.mode = EXTRA;
        case EXTRA:
          if (g.flags & 1024 && (gt = g.length, gt > N && (gt = N), gt && (g.head && (ke = g.head.extra_len - g.length, g.head.extra || (g.head.extra = new Array(g.head.extra_len)), utils$1.arraySet(
            g.head.extra,
            v,
            M,
            // extra field is limited to 65536 bytes
            // - no need for additional size check
            gt,
            /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
            ke
          )), g.flags & 512 && (g.check = crc32(g.check, v, gt, M)), N -= gt, M += gt, g.length -= gt), g.length))
            break t;
          g.length = 0, g.mode = NAME;
        case NAME:
          if (g.flags & 2048) {
            if (N === 0)
              break t;
            gt = 0;
            do
              ke = v[M + gt++], g.head && ke && g.length < 65536 && (g.head.name += String.fromCharCode(ke));
            while (ke && gt < N);
            if (g.flags & 512 && (g.check = crc32(g.check, v, gt, M)), N -= gt, M += gt, ke)
              break t;
          } else
            g.head && (g.head.name = null);
          g.length = 0, g.mode = COMMENT;
        case COMMENT:
          if (g.flags & 4096) {
            if (N === 0)
              break t;
            gt = 0;
            do
              ke = v[M + gt++], g.head && ke && g.length < 65536 && (g.head.comment += String.fromCharCode(ke));
            while (ke && gt < N);
            if (g.flags & 512 && (g.check = crc32(g.check, v, gt, M)), N -= gt, M += gt, ke)
              break t;
          } else
            g.head && (g.head.comment = null);
          g.mode = HCRC;
        case HCRC:
          if (g.flags & 512) {
            for (; X < 16; ) {
              if (N === 0)
                break t;
              N--, E += v[M++] << X, X += 8;
            }
            if (E !== (g.check & 65535)) {
              n.msg = "header crc mismatch", g.mode = BAD;
              break;
            }
            E = 0, X = 0;
          }
          g.head && (g.head.hcrc = g.flags >> 9 & 1, g.head.done = !0), n.adler = g.check = 0, g.mode = TYPE;
          break;
        case DICTID:
          for (; X < 32; ) {
            if (N === 0)
              break t;
            N--, E += v[M++] << X, X += 8;
          }
          n.adler = g.check = zswap32(E), E = 0, X = 0, g.mode = DICT;
        case DICT:
          if (g.havedict === 0)
            return n.next_out = $, n.avail_out = et, n.next_in = M, n.avail_in = N, g.hold = E, g.bits = X, Z_NEED_DICT;
          n.adler = g.check = 1, g.mode = TYPE;
        case TYPE:
          if (d === Z_BLOCK || d === Z_TREES)
            break t;
        case TYPEDO:
          if (g.last) {
            E >>>= X & 7, X -= X & 7, g.mode = CHECK;
            break;
          }
          for (; X < 3; ) {
            if (N === 0)
              break t;
            N--, E += v[M++] << X, X += 8;
          }
          switch (g.last = E & 1, E >>>= 1, X -= 1, E & 3) {
            case 0:
              g.mode = STORED;
              break;
            case 1:
              if (fixedtables(g), g.mode = LEN_, d === Z_TREES) {
                E >>>= 2, X -= 2;
                break t;
              }
              break;
            case 2:
              g.mode = TABLE;
              break;
            case 3:
              n.msg = "invalid block type", g.mode = BAD;
          }
          E >>>= 2, X -= 2;
          break;
        case STORED:
          for (E >>>= X & 7, X -= X & 7; X < 32; ) {
            if (N === 0)
              break t;
            N--, E += v[M++] << X, X += 8;
          }
          if ((E & 65535) !== (E >>> 16 ^ 65535)) {
            n.msg = "invalid stored block lengths", g.mode = BAD;
            break;
          }
          if (g.length = E & 65535, E = 0, X = 0, g.mode = COPY_, d === Z_TREES)
            break t;
        case COPY_:
          g.mode = COPY;
        case COPY:
          if (gt = g.length, gt) {
            if (gt > N && (gt = N), gt > et && (gt = et), gt === 0)
              break t;
            utils$1.arraySet(C, v, M, gt, $), N -= gt, M += gt, et -= gt, $ += gt, g.length -= gt;
            break;
          }
          g.mode = TYPE;
          break;
        case TABLE:
          for (; X < 14; ) {
            if (N === 0)
              break t;
            N--, E += v[M++] << X, X += 8;
          }
          if (g.nlen = (E & 31) + 257, E >>>= 5, X -= 5, g.ndist = (E & 31) + 1, E >>>= 5, X -= 5, g.ncode = (E & 15) + 4, E >>>= 4, X -= 4, g.nlen > 286 || g.ndist > 30) {
            n.msg = "too many length or distance symbols", g.mode = BAD;
            break;
          }
          g.have = 0, g.mode = LENLENS;
        case LENLENS:
          for (; g.have < g.ncode; ) {
            for (; X < 3; ) {
              if (N === 0)
                break t;
              N--, E += v[M++] << X, X += 8;
            }
            g.lens[Xi[g.have++]] = E & 7, E >>>= 3, X -= 3;
          }
          for (; g.have < 19; )
            g.lens[Xi[g.have++]] = 0;
          if (g.lencode = g.lendyn, g.lenbits = 7, ii = { bits: g.lenbits }, ce = inflate_table(CODES, g.lens, 0, 19, g.lencode, 0, g.work, ii), g.lenbits = ii.bits, ce) {
            n.msg = "invalid code lengths set", g.mode = BAD;
            break;
          }
          g.have = 0, g.mode = CODELENS;
        case CODELENS:
          for (; g.have < g.nlen + g.ndist; ) {
            for (; de = g.lencode[E & (1 << g.lenbits) - 1], Jt = de >>> 24, De = de >>> 16 & 255, Be = de & 65535, !(Jt <= X); ) {
              if (N === 0)
                break t;
              N--, E += v[M++] << X, X += 8;
            }
            if (Be < 16)
              E >>>= Jt, X -= Jt, g.lens[g.have++] = Be;
            else {
              if (Be === 16) {
                for (ge = Jt + 2; X < ge; ) {
                  if (N === 0)
                    break t;
                  N--, E += v[M++] << X, X += 8;
                }
                if (E >>>= Jt, X -= Jt, g.have === 0) {
                  n.msg = "invalid bit length repeat", g.mode = BAD;
                  break;
                }
                ke = g.lens[g.have - 1], gt = 3 + (E & 3), E >>>= 2, X -= 2;
              } else if (Be === 17) {
                for (ge = Jt + 3; X < ge; ) {
                  if (N === 0)
                    break t;
                  N--, E += v[M++] << X, X += 8;
                }
                E >>>= Jt, X -= Jt, ke = 0, gt = 3 + (E & 7), E >>>= 3, X -= 3;
              } else {
                for (ge = Jt + 7; X < ge; ) {
                  if (N === 0)
                    break t;
                  N--, E += v[M++] << X, X += 8;
                }
                E >>>= Jt, X -= Jt, ke = 0, gt = 11 + (E & 127), E >>>= 7, X -= 7;
              }
              if (g.have + gt > g.nlen + g.ndist) {
                n.msg = "invalid bit length repeat", g.mode = BAD;
                break;
              }
              for (; gt--; )
                g.lens[g.have++] = ke;
            }
          }
          if (g.mode === BAD)
            break;
          if (g.lens[256] === 0) {
            n.msg = "invalid code -- missing end-of-block", g.mode = BAD;
            break;
          }
          if (g.lenbits = 9, ii = { bits: g.lenbits }, ce = inflate_table(LENS, g.lens, 0, g.nlen, g.lencode, 0, g.work, ii), g.lenbits = ii.bits, ce) {
            n.msg = "invalid literal/lengths set", g.mode = BAD;
            break;
          }
          if (g.distbits = 6, g.distcode = g.distdyn, ii = { bits: g.distbits }, ce = inflate_table(DISTS, g.lens, g.nlen, g.ndist, g.distcode, 0, g.work, ii), g.distbits = ii.bits, ce) {
            n.msg = "invalid distances set", g.mode = BAD;
            break;
          }
          if (g.mode = LEN_, d === Z_TREES)
            break t;
        case LEN_:
          g.mode = LEN;
        case LEN:
          if (N >= 6 && et >= 258) {
            n.next_out = $, n.avail_out = et, n.next_in = M, n.avail_in = N, g.hold = E, g.bits = X, inflate_fast(n, wt), $ = n.next_out, C = n.output, et = n.avail_out, M = n.next_in, v = n.input, N = n.avail_in, E = g.hold, X = g.bits, g.mode === TYPE && (g.back = -1);
            break;
          }
          for (g.back = 0; de = g.lencode[E & (1 << g.lenbits) - 1], Jt = de >>> 24, De = de >>> 16 & 255, Be = de & 65535, !(Jt <= X); ) {
            if (N === 0)
              break t;
            N--, E += v[M++] << X, X += 8;
          }
          if (De && !(De & 240)) {
            for (he = Jt, Rt = De, Pe = Be; de = g.lencode[Pe + ((E & (1 << he + Rt) - 1) >> he)], Jt = de >>> 24, De = de >>> 16 & 255, Be = de & 65535, !(he + Jt <= X); ) {
              if (N === 0)
                break t;
              N--, E += v[M++] << X, X += 8;
            }
            E >>>= he, X -= he, g.back += he;
          }
          if (E >>>= Jt, X -= Jt, g.back += Jt, g.length = Be, De === 0) {
            g.mode = LIT;
            break;
          }
          if (De & 32) {
            g.back = -1, g.mode = TYPE;
            break;
          }
          if (De & 64) {
            n.msg = "invalid literal/length code", g.mode = BAD;
            break;
          }
          g.extra = De & 15, g.mode = LENEXT;
        case LENEXT:
          if (g.extra) {
            for (ge = g.extra; X < ge; ) {
              if (N === 0)
                break t;
              N--, E += v[M++] << X, X += 8;
            }
            g.length += E & (1 << g.extra) - 1, E >>>= g.extra, X -= g.extra, g.back += g.extra;
          }
          g.was = g.length, g.mode = DIST;
        case DIST:
          for (; de = g.distcode[E & (1 << g.distbits) - 1], Jt = de >>> 24, De = de >>> 16 & 255, Be = de & 65535, !(Jt <= X); ) {
            if (N === 0)
              break t;
            N--, E += v[M++] << X, X += 8;
          }
          if (!(De & 240)) {
            for (he = Jt, Rt = De, Pe = Be; de = g.distcode[Pe + ((E & (1 << he + Rt) - 1) >> he)], Jt = de >>> 24, De = de >>> 16 & 255, Be = de & 65535, !(he + Jt <= X); ) {
              if (N === 0)
                break t;
              N--, E += v[M++] << X, X += 8;
            }
            E >>>= he, X -= he, g.back += he;
          }
          if (E >>>= Jt, X -= Jt, g.back += Jt, De & 64) {
            n.msg = "invalid distance code", g.mode = BAD;
            break;
          }
          g.offset = Be, g.extra = De & 15, g.mode = DISTEXT;
        case DISTEXT:
          if (g.extra) {
            for (ge = g.extra; X < ge; ) {
              if (N === 0)
                break t;
              N--, E += v[M++] << X, X += 8;
            }
            g.offset += E & (1 << g.extra) - 1, E >>>= g.extra, X -= g.extra, g.back += g.extra;
          }
          if (g.offset > g.dmax) {
            n.msg = "invalid distance too far back", g.mode = BAD;
            break;
          }
          g.mode = MATCH;
        case MATCH:
          if (et === 0)
            break t;
          if (gt = wt - et, g.offset > gt) {
            if (gt = g.offset - gt, gt > g.whave && g.sane) {
              n.msg = "invalid distance too far back", g.mode = BAD;
              break;
            }
            gt > g.wnext ? (gt -= g.wnext, Ot = g.wsize - gt) : Ot = g.wnext - gt, gt > g.length && (gt = g.length), qt = g.window;
          } else
            qt = C, Ot = $ - g.offset, gt = g.length;
          gt > et && (gt = et), et -= gt, g.length -= gt;
          do
            C[$++] = qt[Ot++];
          while (--gt);
          g.length === 0 && (g.mode = LEN);
          break;
        case LIT:
          if (et === 0)
            break t;
          C[$++] = g.length, et--, g.mode = LEN;
          break;
        case CHECK:
          if (g.wrap) {
            for (; X < 32; ) {
              if (N === 0)
                break t;
              N--, E |= v[M++] << X, X += 8;
            }
            if (wt -= et, n.total_out += wt, g.total += wt, wt && (n.adler = g.check = /*UPDATE(state.check, put - _out, _out);*/
            g.flags ? crc32(g.check, C, wt, $ - wt) : adler32(g.check, C, wt, $ - wt)), wt = et, (g.flags ? E : zswap32(E)) !== g.check) {
              n.msg = "incorrect data check", g.mode = BAD;
              break;
            }
            E = 0, X = 0;
          }
          g.mode = LENGTH;
        case LENGTH:
          if (g.wrap && g.flags) {
            for (; X < 32; ) {
              if (N === 0)
                break t;
              N--, E += v[M++] << X, X += 8;
            }
            if (E !== (g.total & 4294967295)) {
              n.msg = "incorrect length check", g.mode = BAD;
              break;
            }
            E = 0, X = 0;
          }
          g.mode = DONE;
        case DONE:
          ce = Z_STREAM_END;
          break t;
        case BAD:
          ce = Z_DATA_ERROR;
          break t;
        case MEM:
          return Z_MEM_ERROR;
        case SYNC:
        default:
          return Z_STREAM_ERROR;
      }
  return n.next_out = $, n.avail_out = et, n.next_in = M, n.avail_in = N, g.hold = E, g.bits = X, (g.wsize || wt !== n.avail_out && g.mode < BAD && (g.mode < CHECK || d !== Z_FINISH)) && updatewindow(n, n.output, n.next_out, wt - n.avail_out), Pt -= n.avail_in, wt -= n.avail_out, n.total_in += Pt, n.total_out += wt, g.total += wt, g.wrap && wt && (n.adler = g.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
  g.flags ? crc32(g.check, C, wt, n.next_out - wt) : adler32(g.check, C, wt, n.next_out - wt)), n.data_type = g.bits + (g.last ? 64 : 0) + (g.mode === TYPE ? 128 : 0) + (g.mode === LEN_ || g.mode === COPY_ ? 256 : 0), (Pt === 0 && wt === 0 || d === Z_FINISH) && ce === Z_OK && (ce = Z_BUF_ERROR), ce;
}
function inflateEnd(n) {
  if (!n || !n.state)
    return Z_STREAM_ERROR;
  var d = n.state;
  return d.window && (d.window = null), n.state = null, Z_OK;
}
function inflateGetHeader(n, d) {
  var g;
  return !n || !n.state || (g = n.state, !(g.wrap & 2)) ? Z_STREAM_ERROR : (g.head = d, d.done = !1, Z_OK);
}
function inflateSetDictionary(n, d) {
  var g = d.length, v, C, M;
  return !n || !n.state || (v = n.state, v.wrap !== 0 && v.mode !== DICT) ? Z_STREAM_ERROR : v.mode === DICT && (C = 1, C = adler32(C, d, g, 0), C !== v.check) ? Z_DATA_ERROR : (M = updatewindow(n, d, g, g), M ? (v.mode = MEM, Z_MEM_ERROR) : (v.havedict = 1, Z_OK));
}
inflate$3.inflateReset = inflateReset;
inflate$3.inflateReset2 = inflateReset2;
inflate$3.inflateResetKeep = inflateResetKeep;
inflate$3.inflateInit = inflateInit;
inflate$3.inflateInit2 = inflateInit2;
inflate$3.inflate = inflate$2;
inflate$3.inflateEnd = inflateEnd;
inflate$3.inflateGetHeader = inflateGetHeader;
inflate$3.inflateSetDictionary = inflateSetDictionary;
inflate$3.inflateInfo = "pako inflate (from Nodeca project)";
var constants$1 = {
  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH: 0,
  Z_PARTIAL_FLUSH: 1,
  Z_SYNC_FLUSH: 2,
  Z_FULL_FLUSH: 3,
  Z_FINISH: 4,
  Z_BLOCK: 5,
  Z_TREES: 6,
  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK: 0,
  Z_STREAM_END: 1,
  Z_NEED_DICT: 2,
  Z_ERRNO: -1,
  Z_STREAM_ERROR: -2,
  Z_DATA_ERROR: -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR: -5,
  //Z_VERSION_ERROR: -6,
  /* compression levels */
  Z_NO_COMPRESSION: 0,
  Z_BEST_SPEED: 1,
  Z_BEST_COMPRESSION: 9,
  Z_DEFAULT_COMPRESSION: -1,
  Z_FILTERED: 1,
  Z_HUFFMAN_ONLY: 2,
  Z_RLE: 3,
  Z_FIXED: 4,
  Z_DEFAULT_STRATEGY: 0,
  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY: 0,
  Z_TEXT: 1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN: 2,
  /* The deflate compression method */
  Z_DEFLATED: 8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};
function GZheader$1() {
  this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
}
var gzheader = GZheader$1, zlib_inflate = inflate$3, utils = common, strings = strings$2, c = constants$1, msg = messages, ZStream = zstream, GZheader = gzheader, toString = Object.prototype.toString;
function Inflate(n) {
  if (!(this instanceof Inflate))
    return new Inflate(n);
  this.options = utils.assign({
    chunkSize: 16384,
    windowBits: 0,
    to: ""
  }, n || {});
  var d = this.options;
  d.raw && d.windowBits >= 0 && d.windowBits < 16 && (d.windowBits = -d.windowBits, d.windowBits === 0 && (d.windowBits = -15)), d.windowBits >= 0 && d.windowBits < 16 && !(n && n.windowBits) && (d.windowBits += 32), d.windowBits > 15 && d.windowBits < 48 && (d.windowBits & 15 || (d.windowBits |= 15)), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new ZStream(), this.strm.avail_out = 0;
  var g = zlib_inflate.inflateInit2(
    this.strm,
    d.windowBits
  );
  if (g !== c.Z_OK)
    throw new Error(msg[g]);
  if (this.header = new GZheader(), zlib_inflate.inflateGetHeader(this.strm, this.header), d.dictionary && (typeof d.dictionary == "string" ? d.dictionary = strings.string2buf(d.dictionary) : toString.call(d.dictionary) === "[object ArrayBuffer]" && (d.dictionary = new Uint8Array(d.dictionary)), d.raw && (g = zlib_inflate.inflateSetDictionary(this.strm, d.dictionary), g !== c.Z_OK)))
    throw new Error(msg[g]);
}
Inflate.prototype.push = function(n, d) {
  var g = this.strm, v = this.options.chunkSize, C = this.options.dictionary, M, $, N, et, E, X = !1;
  if (this.ended)
    return !1;
  $ = d === ~~d ? d : d === !0 ? c.Z_FINISH : c.Z_NO_FLUSH, typeof n == "string" ? g.input = strings.binstring2buf(n) : toString.call(n) === "[object ArrayBuffer]" ? g.input = new Uint8Array(n) : g.input = n, g.next_in = 0, g.avail_in = g.input.length;
  do {
    if (g.avail_out === 0 && (g.output = new utils.Buf8(v), g.next_out = 0, g.avail_out = v), M = zlib_inflate.inflate(g, c.Z_NO_FLUSH), M === c.Z_NEED_DICT && C && (M = zlib_inflate.inflateSetDictionary(this.strm, C)), M === c.Z_BUF_ERROR && X === !0 && (M = c.Z_OK, X = !1), M !== c.Z_STREAM_END && M !== c.Z_OK)
      return this.onEnd(M), this.ended = !0, !1;
    g.next_out && (g.avail_out === 0 || M === c.Z_STREAM_END || g.avail_in === 0 && ($ === c.Z_FINISH || $ === c.Z_SYNC_FLUSH)) && (this.options.to === "string" ? (N = strings.utf8border(g.output, g.next_out), et = g.next_out - N, E = strings.buf2string(g.output, N), g.next_out = et, g.avail_out = v - et, et && utils.arraySet(g.output, g.output, N, et, 0), this.onData(E)) : this.onData(utils.shrinkBuf(g.output, g.next_out))), g.avail_in === 0 && g.avail_out === 0 && (X = !0);
  } while ((g.avail_in > 0 || g.avail_out === 0) && M !== c.Z_STREAM_END);
  return M === c.Z_STREAM_END && ($ = c.Z_FINISH), $ === c.Z_FINISH ? (M = zlib_inflate.inflateEnd(this.strm), this.onEnd(M), this.ended = !0, M === c.Z_OK) : ($ === c.Z_SYNC_FLUSH && (this.onEnd(c.Z_OK), g.avail_out = 0), !0);
};
Inflate.prototype.onData = function(n) {
  this.chunks.push(n);
};
Inflate.prototype.onEnd = function(n) {
  n === c.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = utils.flattenChunks(this.chunks)), this.chunks = [], this.err = n, this.msg = this.strm.msg;
};
function inflate$1(n, d) {
  var g = new Inflate(d);
  if (g.push(n, !0), g.err)
    throw g.msg || msg[g.err];
  return g.result;
}
function inflateRaw(n, d) {
  return d = d || {}, d.raw = !0, inflate$1(n, d);
}
inflate$4.Inflate = Inflate;
inflate$4.inflate = inflate$1;
inflate$4.inflateRaw = inflateRaw;
inflate$4.ungzip = inflate$1;
var assign = common.assign, deflate = deflate$4, inflate = inflate$4, constants = constants$1, pako = {};
assign(pako, deflate, inflate, constants);
var pako_1 = pako;
const index$1 = /* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  default: pako_1
}, [pako_1]);
var getRandomValues, rnds8 = new Uint8Array(16);
function rng() {
  if (!getRandomValues && (getRandomValues = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto < "u" && typeof msCrypto.getRandomValues == "function" && msCrypto.getRandomValues.bind(msCrypto), !getRandomValues))
    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return getRandomValues(rnds8);
}
const REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
function validate(n) {
  return typeof n == "string" && REGEX.test(n);
}
var byteToHex = [];
for (var i = 0; i < 256; ++i)
  byteToHex.push((i + 256).toString(16).substr(1));
function stringify(n) {
  var d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, g = (byteToHex[n[d + 0]] + byteToHex[n[d + 1]] + byteToHex[n[d + 2]] + byteToHex[n[d + 3]] + "-" + byteToHex[n[d + 4]] + byteToHex[n[d + 5]] + "-" + byteToHex[n[d + 6]] + byteToHex[n[d + 7]] + "-" + byteToHex[n[d + 8]] + byteToHex[n[d + 9]] + "-" + byteToHex[n[d + 10]] + byteToHex[n[d + 11]] + byteToHex[n[d + 12]] + byteToHex[n[d + 13]] + byteToHex[n[d + 14]] + byteToHex[n[d + 15]]).toLowerCase();
  if (!validate(g))
    throw TypeError("Stringified UUID is invalid");
  return g;
}
var _nodeId, _clockseq, _lastMSecs = 0, _lastNSecs = 0;
function v1(n, d, g) {
  var v = d && g || 0, C = d || new Array(16);
  n = n || {};
  var M = n.node || _nodeId, $ = n.clockseq !== void 0 ? n.clockseq : _clockseq;
  if (M == null || $ == null) {
    var N = n.random || (n.rng || rng)();
    M == null && (M = _nodeId = [N[0] | 1, N[1], N[2], N[3], N[4], N[5]]), $ == null && ($ = _clockseq = (N[6] << 8 | N[7]) & 16383);
  }
  var et = n.msecs !== void 0 ? n.msecs : Date.now(), E = n.nsecs !== void 0 ? n.nsecs : _lastNSecs + 1, X = et - _lastMSecs + (E - _lastNSecs) / 1e4;
  if (X < 0 && n.clockseq === void 0 && ($ = $ + 1 & 16383), (X < 0 || et > _lastMSecs) && n.nsecs === void 0 && (E = 0), E >= 1e4)
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  _lastMSecs = et, _lastNSecs = E, _clockseq = $, et += 122192928e5;
  var Pt = ((et & 268435455) * 1e4 + E) % 4294967296;
  C[v++] = Pt >>> 24 & 255, C[v++] = Pt >>> 16 & 255, C[v++] = Pt >>> 8 & 255, C[v++] = Pt & 255;
  var wt = et / 4294967296 * 1e4 & 268435455;
  C[v++] = wt >>> 8 & 255, C[v++] = wt & 255, C[v++] = wt >>> 24 & 15 | 16, C[v++] = wt >>> 16 & 255, C[v++] = $ >>> 8 | 128, C[v++] = $ & 255;
  for (var gt = 0; gt < 6; ++gt)
    C[v + gt] = M[gt];
  return d || stringify(C);
}
function parse(n) {
  if (!validate(n))
    throw TypeError("Invalid UUID");
  var d, g = new Uint8Array(16);
  return g[0] = (d = parseInt(n.slice(0, 8), 16)) >>> 24, g[1] = d >>> 16 & 255, g[2] = d >>> 8 & 255, g[3] = d & 255, g[4] = (d = parseInt(n.slice(9, 13), 16)) >>> 8, g[5] = d & 255, g[6] = (d = parseInt(n.slice(14, 18), 16)) >>> 8, g[7] = d & 255, g[8] = (d = parseInt(n.slice(19, 23), 16)) >>> 8, g[9] = d & 255, g[10] = (d = parseInt(n.slice(24, 36), 16)) / 1099511627776 & 255, g[11] = d / 4294967296 & 255, g[12] = d >>> 24 & 255, g[13] = d >>> 16 & 255, g[14] = d >>> 8 & 255, g[15] = d & 255, g;
}
function stringToBytes(n) {
  n = unescape(encodeURIComponent(n));
  for (var d = [], g = 0; g < n.length; ++g)
    d.push(n.charCodeAt(g));
  return d;
}
var DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8", URL$1 = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
function v35(n, d, g) {
  function v(C, M, $, N) {
    if (typeof C == "string" && (C = stringToBytes(C)), typeof M == "string" && (M = parse(M)), M.length !== 16)
      throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
    var et = new Uint8Array(16 + C.length);
    if (et.set(M), et.set(C, M.length), et = g(et), et[6] = et[6] & 15 | d, et[8] = et[8] & 63 | 128, $) {
      N = N || 0;
      for (var E = 0; E < 16; ++E)
        $[N + E] = et[E];
      return $;
    }
    return stringify(et);
  }
  try {
    v.name = n;
  } catch {
  }
  return v.DNS = DNS, v.URL = URL$1, v;
}
function md5(n) {
  if (typeof n == "string") {
    var d = unescape(encodeURIComponent(n));
    n = new Uint8Array(d.length);
    for (var g = 0; g < d.length; ++g)
      n[g] = d.charCodeAt(g);
  }
  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(n), n.length * 8));
}
function md5ToHexEncodedArray(n) {
  for (var d = [], g = n.length * 32, v = "0123456789abcdef", C = 0; C < g; C += 8) {
    var M = n[C >> 5] >>> C % 32 & 255, $ = parseInt(v.charAt(M >>> 4 & 15) + v.charAt(M & 15), 16);
    d.push($);
  }
  return d;
}
function getOutputLength(n) {
  return (n + 64 >>> 9 << 4) + 14 + 1;
}
function wordsToMd5(n, d) {
  n[d >> 5] |= 128 << d % 32, n[getOutputLength(d) - 1] = d;
  for (var g = 1732584193, v = -271733879, C = -1732584194, M = 271733878, $ = 0; $ < n.length; $ += 16) {
    var N = g, et = v, E = C, X = M;
    g = md5ff(g, v, C, M, n[$], 7, -680876936), M = md5ff(M, g, v, C, n[$ + 1], 12, -389564586), C = md5ff(C, M, g, v, n[$ + 2], 17, 606105819), v = md5ff(v, C, M, g, n[$ + 3], 22, -1044525330), g = md5ff(g, v, C, M, n[$ + 4], 7, -176418897), M = md5ff(M, g, v, C, n[$ + 5], 12, 1200080426), C = md5ff(C, M, g, v, n[$ + 6], 17, -1473231341), v = md5ff(v, C, M, g, n[$ + 7], 22, -45705983), g = md5ff(g, v, C, M, n[$ + 8], 7, 1770035416), M = md5ff(M, g, v, C, n[$ + 9], 12, -1958414417), C = md5ff(C, M, g, v, n[$ + 10], 17, -42063), v = md5ff(v, C, M, g, n[$ + 11], 22, -1990404162), g = md5ff(g, v, C, M, n[$ + 12], 7, 1804603682), M = md5ff(M, g, v, C, n[$ + 13], 12, -40341101), C = md5ff(C, M, g, v, n[$ + 14], 17, -1502002290), v = md5ff(v, C, M, g, n[$ + 15], 22, 1236535329), g = md5gg(g, v, C, M, n[$ + 1], 5, -165796510), M = md5gg(M, g, v, C, n[$ + 6], 9, -1069501632), C = md5gg(C, M, g, v, n[$ + 11], 14, 643717713), v = md5gg(v, C, M, g, n[$], 20, -373897302), g = md5gg(g, v, C, M, n[$ + 5], 5, -701558691), M = md5gg(M, g, v, C, n[$ + 10], 9, 38016083), C = md5gg(C, M, g, v, n[$ + 15], 14, -660478335), v = md5gg(v, C, M, g, n[$ + 4], 20, -405537848), g = md5gg(g, v, C, M, n[$ + 9], 5, 568446438), M = md5gg(M, g, v, C, n[$ + 14], 9, -1019803690), C = md5gg(C, M, g, v, n[$ + 3], 14, -187363961), v = md5gg(v, C, M, g, n[$ + 8], 20, 1163531501), g = md5gg(g, v, C, M, n[$ + 13], 5, -1444681467), M = md5gg(M, g, v, C, n[$ + 2], 9, -51403784), C = md5gg(C, M, g, v, n[$ + 7], 14, 1735328473), v = md5gg(v, C, M, g, n[$ + 12], 20, -1926607734), g = md5hh(g, v, C, M, n[$ + 5], 4, -378558), M = md5hh(M, g, v, C, n[$ + 8], 11, -2022574463), C = md5hh(C, M, g, v, n[$ + 11], 16, 1839030562), v = md5hh(v, C, M, g, n[$ + 14], 23, -35309556), g = md5hh(g, v, C, M, n[$ + 1], 4, -1530992060), M = md5hh(M, g, v, C, n[$ + 4], 11, 1272893353), C = md5hh(C, M, g, v, n[$ + 7], 16, -155497632), v = md5hh(v, C, M, g, n[$ + 10], 23, -1094730640), g = md5hh(g, v, C, M, n[$ + 13], 4, 681279174), M = md5hh(M, g, v, C, n[$], 11, -358537222), C = md5hh(C, M, g, v, n[$ + 3], 16, -722521979), v = md5hh(v, C, M, g, n[$ + 6], 23, 76029189), g = md5hh(g, v, C, M, n[$ + 9], 4, -640364487), M = md5hh(M, g, v, C, n[$ + 12], 11, -421815835), C = md5hh(C, M, g, v, n[$ + 15], 16, 530742520), v = md5hh(v, C, M, g, n[$ + 2], 23, -995338651), g = md5ii(g, v, C, M, n[$], 6, -198630844), M = md5ii(M, g, v, C, n[$ + 7], 10, 1126891415), C = md5ii(C, M, g, v, n[$ + 14], 15, -1416354905), v = md5ii(v, C, M, g, n[$ + 5], 21, -57434055), g = md5ii(g, v, C, M, n[$ + 12], 6, 1700485571), M = md5ii(M, g, v, C, n[$ + 3], 10, -1894986606), C = md5ii(C, M, g, v, n[$ + 10], 15, -1051523), v = md5ii(v, C, M, g, n[$ + 1], 21, -2054922799), g = md5ii(g, v, C, M, n[$ + 8], 6, 1873313359), M = md5ii(M, g, v, C, n[$ + 15], 10, -30611744), C = md5ii(C, M, g, v, n[$ + 6], 15, -1560198380), v = md5ii(v, C, M, g, n[$ + 13], 21, 1309151649), g = md5ii(g, v, C, M, n[$ + 4], 6, -145523070), M = md5ii(M, g, v, C, n[$ + 11], 10, -1120210379), C = md5ii(C, M, g, v, n[$ + 2], 15, 718787259), v = md5ii(v, C, M, g, n[$ + 9], 21, -343485551), g = safeAdd(g, N), v = safeAdd(v, et), C = safeAdd(C, E), M = safeAdd(M, X);
  }
  return [g, v, C, M];
}
function bytesToWords(n) {
  if (n.length === 0)
    return [];
  for (var d = n.length * 8, g = new Uint32Array(getOutputLength(d)), v = 0; v < d; v += 8)
    g[v >> 5] |= (n[v / 8] & 255) << v % 32;
  return g;
}
function safeAdd(n, d) {
  var g = (n & 65535) + (d & 65535), v = (n >> 16) + (d >> 16) + (g >> 16);
  return v << 16 | g & 65535;
}
function bitRotateLeft(n, d) {
  return n << d | n >>> 32 - d;
}
function md5cmn(n, d, g, v, C, M) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(d, n), safeAdd(v, M)), C), g);
}
function md5ff(n, d, g, v, C, M, $) {
  return md5cmn(d & g | ~d & v, n, d, C, M, $);
}
function md5gg(n, d, g, v, C, M, $) {
  return md5cmn(d & v | g & ~v, n, d, C, M, $);
}
function md5hh(n, d, g, v, C, M, $) {
  return md5cmn(d ^ g ^ v, n, d, C, M, $);
}
function md5ii(n, d, g, v, C, M, $) {
  return md5cmn(g ^ (d | ~v), n, d, C, M, $);
}
var v3 = v35("v3", 48, md5);
const v3$1 = v3;
function v4(n, d, g) {
  n = n || {};
  var v = n.random || (n.rng || rng)();
  if (v[6] = v[6] & 15 | 64, v[8] = v[8] & 63 | 128, d) {
    g = g || 0;
    for (var C = 0; C < 16; ++C)
      d[g + C] = v[C];
    return d;
  }
  return stringify(v);
}
function f(n, d, g, v) {
  switch (n) {
    case 0:
      return d & g ^ ~d & v;
    case 1:
      return d ^ g ^ v;
    case 2:
      return d & g ^ d & v ^ g & v;
    case 3:
      return d ^ g ^ v;
  }
}
function ROTL(n, d) {
  return n << d | n >>> 32 - d;
}
function sha1(n) {
  var d = [1518500249, 1859775393, 2400959708, 3395469782], g = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
  if (typeof n == "string") {
    var v = unescape(encodeURIComponent(n));
    n = [];
    for (var C = 0; C < v.length; ++C)
      n.push(v.charCodeAt(C));
  } else
    Array.isArray(n) || (n = Array.prototype.slice.call(n));
  n.push(128);
  for (var M = n.length / 4 + 2, $ = Math.ceil(M / 16), N = new Array($), et = 0; et < $; ++et) {
    for (var E = new Uint32Array(16), X = 0; X < 16; ++X)
      E[X] = n[et * 64 + X * 4] << 24 | n[et * 64 + X * 4 + 1] << 16 | n[et * 64 + X * 4 + 2] << 8 | n[et * 64 + X * 4 + 3];
    N[et] = E;
  }
  N[$ - 1][14] = (n.length - 1) * 8 / Math.pow(2, 32), N[$ - 1][14] = Math.floor(N[$ - 1][14]), N[$ - 1][15] = (n.length - 1) * 8 & 4294967295;
  for (var Pt = 0; Pt < $; ++Pt) {
    for (var wt = new Uint32Array(80), gt = 0; gt < 16; ++gt)
      wt[gt] = N[Pt][gt];
    for (var Ot = 16; Ot < 80; ++Ot)
      wt[Ot] = ROTL(wt[Ot - 3] ^ wt[Ot - 8] ^ wt[Ot - 14] ^ wt[Ot - 16], 1);
    for (var qt = g[0], de = g[1], Jt = g[2], De = g[3], Be = g[4], he = 0; he < 80; ++he) {
      var Rt = Math.floor(he / 20), Pe = ROTL(qt, 5) + f(Rt, de, Jt, De) + Be + d[Rt] + wt[he] >>> 0;
      Be = De, De = Jt, Jt = ROTL(de, 30) >>> 0, de = qt, qt = Pe;
    }
    g[0] = g[0] + qt >>> 0, g[1] = g[1] + de >>> 0, g[2] = g[2] + Jt >>> 0, g[3] = g[3] + De >>> 0, g[4] = g[4] + Be >>> 0;
  }
  return [g[0] >> 24 & 255, g[0] >> 16 & 255, g[0] >> 8 & 255, g[0] & 255, g[1] >> 24 & 255, g[1] >> 16 & 255, g[1] >> 8 & 255, g[1] & 255, g[2] >> 24 & 255, g[2] >> 16 & 255, g[2] >> 8 & 255, g[2] & 255, g[3] >> 24 & 255, g[3] >> 16 & 255, g[3] >> 8 & 255, g[3] & 255, g[4] >> 24 & 255, g[4] >> 16 & 255, g[4] >> 8 & 255, g[4] & 255];
}
var v5 = v35("v5", 80, sha1);
const v5$1 = v5, nil = "00000000-0000-0000-0000-000000000000";
function version(n) {
  if (!validate(n))
    throw TypeError("Invalid UUID");
  return parseInt(n.substr(14, 1), 16);
}
const index = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  NIL: nil,
  parse,
  stringify,
  v1,
  v3: v3$1,
  v4,
  v5: v5$1,
  validate,
  version
}, Symbol.toStringTag, { value: "Module" }));
export {
  render
};
